head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2;
locks; strict;
comment	@ *  @;


1.2
date	98.06.08.13.17.25;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	98.06.04.20.10.38;	author jont;	state Exp;
branches;
next	;


desc
@new unit
Adding applications into hope
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' *  '
@
text
@(*
 *
 * $Log$
 *
 *)
(*    	    Jo: A concurrent constraint programming language
		     (programming for the 1990s)

    Implementation of a character stream as input to lexical analyser

		Andrew Wilson:  6th November 1990

			the signature

Version of July 1996, modified to use Harlequin MLWorks separate
compilation system.
*)



signature STREAM =
sig
  exception Eof
  exception StreamUnopen

  val flushStdIn: unit -> unit
  val openStream: string * int -> unit
  val putSymbol: string -> unit
  val nextSymbol: bool -> string     (* where string has length one *)
end;
@


1.1
log
@new unit
Adding applications into hope
@
text
@@
