head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2;
locks; strict;
comment	@ * @;


1.2
date	98.06.02.15.26.18;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	98.06.02.13.04.33;	author jont;	state Exp;
branches;
next	;


desc
@new unit
Putting application tests into hope and daily
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' * '
@
text
@(*
 *
 * $Log$
 *
 *)
RCS "$Id: HMLogic.sig,v 1.3 1994/12/03 14:49:45 pxs Exp $";
(*********************************** HMLog ***********************************)
(*                                                                           *)
(* This file contains the signatures and functors for a logic used by the    *)
(* system.                                                                   *)
(*                                                                           *)
(* HMLOG describes the logic used by the model checker.  As a grammar, the   *)
(* logic has the following description.                                      *)
(*      <P> ::=  T  |  V  |  ~P  |  P&P                                      *)
(*            |  [act list] P  |  [-act list] P  |  max(V.P)                 *)
(*                                                                           *)
(* Also all variables must be bound, and they must be distinct.              *)
(* (This is assured by the translator.)                                      *)
(*                                                                           *)
(*****************************************************************************)

signature HMLOGIC =
sig
   structure A : ACT
   structure V : VAR

   datatype modality = modlist of A.act list
                     | negmodlist of A.act list

   datatype prop = True
                 | Var of V.var
                 | Not of prop
                 | And of prop * prop
                 | Nec of modality * prop
                 | Max of V.var * prop
end

@


1.1
log
@new unit
Putting application tests into hope and daily
@
text
@@
