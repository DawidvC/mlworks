head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2;
locks; strict;
comment	@ * @;


1.2
date	98.06.02.15.34.19;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	98.06.02.13.04.35;	author jont;	state Exp;
branches;
next	;


desc
@new unit
Putting application tests into hope and daily
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' * '
@
text
@(*
 *
 * $Log$
 *
 *)
RCS "$Id: TestOps.sig,v 1.3 1994/10/31 17:48:51 pxs Exp $";
(********************************** TestOps **********************************)
(*                                                                           *)
(* This file contains a signature and functor that encapsulate the testing   *)
(* equivalences and preorders.                       Rance Cleaveland Aug-88 *)
(* The signature for the testing operations:                                 *)
(*      'a state - the type of polymorphic states.                           *)
(*      may_eq   - determines if two polygraphs are "may equivalent".        *)
(*      must_eq  - determines if two polygraphs are "must equivalent".       *)
(*      test_eq  - determines if two polygraphs are "testing equivalent".    *)
(*      may_pr   - determines if first polygraph is less than the second     *)
(*                 polygraph in the may preorder.                            *)
(*      must_pr  - determines if first polygraph is less than the second     *)
(*                 polygraph in the must preorder.                           *)
(*      test_pr  - determines if first polygraph is less than the second     *)
(*                 polygraph in the must preorder.                           *)
(*                                                                           *)
(* Changes:                                                                  *)
(* 26/04/89 (RC)   Fixed bug in "testpr". Openness information was not       *)
(*                 being correctly tested for.                               *)
(*                                                                           *)
(*****************************************************************************)

signature TESTOPS =
sig
   type 'a state
   val may_eq  : ('_a state ref * '_a state ref list) *
                 ('_a state ref * '_a state ref list) -> bool

   val must_eq : ('_a state ref * '_a state ref list) *
                 ('_a state ref * '_a state ref list) -> bool

   val test_eq : ('_a state ref * '_a state ref list) *
                 ('_a state ref * '_a state ref list) -> bool

   val may_pr  : ('_a state ref * '_a state ref list) *
                 ('_a state ref * '_a state ref list) -> bool

   val must_pr : ('_a state ref * '_a state ref list) *
                 ('_a state ref * '_a state ref list) -> bool

   val test_pr : ('_a state ref * '_a state ref list) *
                 ('_a state ref * '_a state ref list) -> bool
end

@


1.1
log
@new unit
Putting application tests into hope and daily
@
text
@@
