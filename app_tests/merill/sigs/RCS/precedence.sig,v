head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2;
locks; strict;
comment	@ * @;


1.2
date	98.06.08.17.57.27;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	98.06.08.17.16.59;	author jont;	state Exp;
branches;
next	;


desc
@new unit
Putting applications into hope and daily
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' * '
@
text
@(*
 *
 * $Log$
 *
 *)
(*

MERILL  -  Equational Reasoning System in Standard ML.
Brian Matthews				     10/03/90
Glasgow University and Rutherford Appleton Laboratory.

order.sig

some routines for buiding term orderings 

bmm   10 - 03 - 90
*)

signature PRECEDENCE =
   sig

	type OpId
	type Signature
	type Term
	
	type Precedence 
	
	val Null_Precedence : Precedence

	val Prec_Order : OpId list -> Precedence
	
	val apply_prec : Precedence -> OpId -> OpId -> bool
	val equal_prec : Precedence -> OpId -> OpId -> bool

	val add_to_prec_order : Precedence -> 
				OpId * OpId -> Precedence
	val remove_from_prec_order : Precedence -> 
				OpId * OpId -> Precedence

	val add_eq_to_prec_order : Precedence -> 
				OpId * OpId -> Precedence
	val remove_eq_from_prec_order : Precedence -> 
				OpId * OpId -> Precedence

	val unparse_prec : Signature -> Precedence -> string list
	
	val sub_prec : Precedence -> OpId -> OpId list
	val sup_prec : Precedence -> OpId -> OpId list
	val same_prec : Precedence -> OpId -> OpId list

	val permutatively_congruent : Term -> Term -> bool

  end (* of signature PRECEDENCE *)
  ;
@


1.1
log
@new unit
Putting applications into hope and daily
@
text
@@
