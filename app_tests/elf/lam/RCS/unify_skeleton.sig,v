head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2;
locks; strict;
comment	@ * @;


1.2
date	98.06.03.11.56.58;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	98.06.03.11.29.58;	author jont;	state Exp;
branches;
next	;


desc
@new unit
Putting application tests into hope and daily
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' * '
@
text
@(*
 *
 * $Log$
 *
 *)
(* Copyright (c) 1992 by Carnegie Mellon University *)
(* Author: Frank Pfenning <fp@@cs.cmu.edu>           *)

(* Unification which employs term skeletons to avoid unnecessary  *)
(* occurs-checks for unifying clause head.  This will not work in *)
(* many circumstances: further optimizations are easily possible  *)
(* in a compiler *)

signature UNIFY_SKELETON =
sig

  structure Term : TERM
  structure Constraints : CONSTRAINTS_ABSTRACT
     sharing Constraints.Term = Term
  structure Skeleton : SKELETON
     sharing Skeleton.Term = Term

  (* the first argument must be the skeleton of the second argument *)
  val unify : Skeleton.skeleton -> Term.term -> Term.term
	       ->  Constraints.constraint
	       -> (Constraints.constraint -> unit)
	       -> unit

  val omit_occurs_check : bool ref

end  (* signature UNIFY_SKELETON *)
@


1.1
log
@new unit
Putting application tests into hope and daily
@
text
@@
