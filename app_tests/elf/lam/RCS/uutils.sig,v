head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2;
locks; strict;
comment	@ * @;


1.2
date	98.06.03.11.52.30;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	98.06.03.11.29.57;	author jont;	state Exp;
branches;
next	;


desc
@new unit
Putting application tests into hope and daily
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' * '
@
text
@(*
 *
 * $Log$
 *
 *)
(* Copyright (c) 1991 by Carnegie Mellon University *)
(* Author: Frank Pfenning <fp@@cs.cmu.edu>           *)

(* Unification utilities *)
(* Can abstraction functions be shared with type reconstruction ??? *)

signature UUTILS =
sig

  structure Term : TERM

  val is_rigid : Term.term -> bool		   (* term must be ah-normal *)
  val is_flex : Term.term -> bool		   (* term must be ah-normal *)
  val is_defn : Term.term -> Term.term option	   (* term must be ah-normal *)

  (* first arg must be ah-normal *)
  val replace_head : Term.term -> Term.term -> Term.term 

  (* first term must be Uvar *)
  val abst_over_uvar :
         Term.term * string -> Term.term -> Term.varbind * Term.term
  val abst_over_uvar_raise :
         Term.term * string -> Term.term -> Term.varbind * Term.term

  (* first term must be Uvar *)
  val pi_over_uv_raise : Term.term * Term.term -> Term.term
  val abst_over_uv_raise : Term.term * Term.term -> Term.term
  val pi_over_uv : Term.term * Term.term -> Term.term
  val abst_over_uv : Term.term * Term.term -> Term.term
  
  (* both must be list of Uvar's *)
  val init_seg : Term.term list -> Term.term list -> bool

  val dest_pi_error : Term.term -> Term.varbind * Term.term

end  (* signature UUTILS *)
@


1.1
log
@new unit
Putting application tests into hope and daily
@
text
@@
