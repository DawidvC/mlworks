head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2;
locks; strict;
comment	@ * @;


1.2
date	98.06.03.12.10.51;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	98.06.03.11.30.02;	author jont;	state Exp;
branches;
next	;


desc
@new unit
Putting application tests into hope and daily
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' * '
@
text
@(*
 *
 * $Log$
 *
 *)
(* Copyright (c) 1991 by Carnegie Mellon University *)
(* Author: Frank Pfenning <fp@@cs.cmu.edu>           *)

(* Redundancy analysis of arguments *)

signature REDUNDANCY =
sig

  structure Term : TERM

  (* term should be Pi x1:A1 ... Pi xn:An. C *)
  (* second arg shows how many are implicit *)
  (* result are three lists *)
  (* indicating for each xi if it is inherited or synthesized, resp'ly *)
  (* and those arguments which are implicit and *)
  (* neither synthesized nor inherited *)
  val analyze : Term.term -> Term.term
                   -> (bool list * bool list) * string list

end  (* signature REDUNDANCY *)
@


1.1
log
@new unit
Putting application tests into hope and daily
@
text
@@
