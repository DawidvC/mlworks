head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2;
locks; strict;
comment	@ * @;


1.2
date	98.06.03.12.23.25;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	98.06.03.11.30.06;	author jont;	state Exp;
branches;
next	;


desc
@new unit
Putting application tests into hope and daily
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' * '
@
text
@(*
 *
 * $Log$
 *
 *)
(* Copyright (c) 1991 by Carnegie Mellon University *)
(* Author: Frank Pfenning <fp@@cs.cmu.edu>           *)

(* Specially interpreted constants *)

functor Specials
   (structure Term   : TERM
    structure Symtab : SYMTAB  sharing type Symtab.entry = Term.sign_entry)
   : SPECIALS =
struct

  structure Term = Term
  local fun get_entry c =
          let fun the_entry (SOME(e)) = Term.Const(e)
	        | the_entry (NONE) = raise Symtab.Symtab("Special constant " ^ c ^ " unknown.")
           in the_entry (Symtab.find_entry c) end
        fun mark_bogus_dynamic (Term.Const(Term.E(ref {Prog = index_r, ...}))) =
	      index_r := SOME(~1)
          | mark_bogus_dynamic _ = raise Symtab.Symtab ("Bogus dynamic declaration impossible.")
  in

    val backquote = get_entry "`"
    val _ = mark_bogus_dynamic backquote
    val bq = get_entry "#`#"

    val sigma = get_entry "sigma"
    val pr = get_entry "#pr#"

  end  (* local ... *)

end  (* functor Specials *)
@


1.1
log
@new unit
Putting application tests into hope and daily
@
text
@@
