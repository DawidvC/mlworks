head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2;
locks; strict;
comment	@ * @;


1.2
date	98.06.03.12.20.40;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	98.06.03.11.30.05;	author jont;	state Exp;
branches;
next	;


desc
@new unit
Putting application tests into hope and daily
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' * '
@
text
@(*
 *
 * $Log$
 *
 *)
(* Copyright (c) 1991 by Carnegie Mellon University *)
(* Author: Spiro Michaylov <spiro@@cs.cmu.edu>       *)

(* Program table *)

signature PROGTAB =
sig

  structure Term : TERM
  structure Sign : SIGN
     sharing Sign.Term = Term
  structure Skeleton : SKELETON
     sharing Skeleton.Term = Term

  datatype mobility = Dynamic of bool | Static | Unknown of bool

  datatype progentry =
      Progentry of 
	  {
	  Faml: Term.term,                (* family *) 
	  Name: Term.term,                (* name of rule *)
	  Vars: Term.varbind list,        (* variables *)
	  Head: Term.term,                (* head of rule *)
	  Subg: mobility list,            (* subgoals *)
	  Indx: Term.term option,    	  (* principal functor of 1st arg *)
	  Skln: Skeleton.skeleton         (* skeleton for unification *)
	  }

  val reset : unit -> unit

  val store_prog : progentry list list -> unit

  val mark_dynamic : Term.term -> unit
  val is_dynamic : Term.term -> bool
  val subgoals : Term.term -> mobility list

  val get_rules : Term.term -> progentry list

  val get_index : Term.term -> Term.term list -> Term.term option

  val indexes_match : Term.term option -> Term.term option -> bool

  val make_progentry : bool -> Term.term * Term.term -> progentry option
  val sign_to_prog : bool -> Sign.sign -> progentry list

end  (* signature PROGTAB *)
@


1.1
log
@new unit
Putting application tests into hope and daily
@
text
@@
