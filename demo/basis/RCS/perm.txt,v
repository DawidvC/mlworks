head	1.1;
access;
symbols
	MLWorks_21c0_1999_03_25:1.1
	MLWorks_20c1_1998_08_20:1.1
	MLWorks_20c0_1998_08_04:1.1
	MLWorks_20b2c2_1998_06_19:1.1
	MLWorks_20b2_Windows_1998_06_12:1.1
	MLWorks_20b1c1_1998_05_07:1.1
	MLWorks_20b0_1998_04_07:1.1
	MLWorks_20b0_1998_03_20:1.1
	MLWorks_20m2_1998_02_16:1.1
	MLWorks_workspace_97:1.1.5
	MLWorks_20m1_1997_10_23:1.1
	MLWorks_11r1:1.1.4.1.1.1.1
	MLWorks_11c0_1997_09_09:1.1.4.1.1.1
	MLWorks_10r3:1.1.4.1.3
	MLWorks_10r2_551:1.1.4.1.2
	MLWorks_11:1.1.4.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.4.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c2_1997_06_14:1.1.4.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.4.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.4
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.3.1.1
	MLWorks_1_0_Win32_1996_12_17:1.1.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.1.1
	MLWorks_1_0_Irix_1996_11_28:1.1.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.2
	MLWorks_1_0_Unix_1996_11_14:1.1.1;
locks; strict;
comment	@# @;


1.1
date	96.11.07.13.14.26;	author jkbrook;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1;
next	;

1.1.1.1
date	96.11.14.12.40.23;	author hope;	state Exp;
branches
	1.1.1.1.1.1;
next	;

1.1.1.1.1.1
date	96.11.28.14.52.13;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.11.22.18.00.50;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.12.17.17.39.43;	author hope;	state Exp;
branches
	1.1.3.1.1.1;
next	;

1.1.3.1.1.1
date	97.02.24.11.26.55;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	97.05.12.10.24.43;	author hope;	state Exp;
branches
	1.1.4.1.1.1
	1.1.4.1.2.1
	1.1.4.1.3.1;
next	;

1.1.4.1.1.1
date	97.07.28.18.10.42;	author daveb;	state Exp;
branches
	1.1.4.1.1.1.1.1;
next	;

1.1.4.1.1.1.1.1
date	97.10.07.11.34.59;	author jkbrook;	state Exp;
branches;
next	;

1.1.4.1.2.1
date	97.09.08.17.04.00;	author daveb;	state Exp;
branches;
next	;

1.1.4.1.3.1
date	97.09.09.13.59.00;	author daveb;	state Exp;
branches;
next	;

1.1.5.1
date	97.11.30.16.49.06;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
README file for basis/perm.sml
@


1.1
log
@new unit
README file for basis/perm.sml
@
text
@   Load File: __perm.sml
 
   This module demonstrates the use of the List structure in the basis
   library.  It provides functions to find all possible permutations and
   partitions of a given list or string.

   For example:

	Perm.partition [1,2,3];

   gives
   
        val it : int list list list = [[[1, 2, 3]], [[1, 2], [3]], [[1], [2, 3]], [[1], [2], [3]]]  
 
   and

	Perm.permString "word";

   gives all the possible anagrams of "word"

        val it : string list = ["word", "wodr", "wrod", "wrdo", "wdor", "wdro", "owrd", "owdr", "orwd", "ordw", ..]

   The corresponding functions Perm.partitionString and Perm.perm are
   also provided.
@


1.1.5.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@@


1.1.4.1
log
@branched from 1.1
@
text
@@


1.1.4.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.1.4.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.1.4.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.1.4.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.1.3.1
log
@branched from 1.1
@
text
@@


1.1.3.1.1.1
log
@branched from 1.1.3.1
@
text
@@


1.1.2.1
log
@branched from 1.1
@
text
@@


1.1.1.1
log
@branched from 1.1
@
text
@@


1.1.1.1.1.1
log
@branched from 1.1.1.1
@
text
@@
