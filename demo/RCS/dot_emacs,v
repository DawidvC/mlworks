head	1.1;
access;
symbols
	MLWorks_21c0_1999_03_25:1.1
	MLWorks_20c1_1998_08_20:1.1
	MLWorks_20c0_1998_08_04:1.1
	MLWorks_20b2c2_1998_06_19:1.1
	MLWorks_20b2_Windows_1998_06_12:1.1
	MLWorks_20b1c1_1998_05_07:1.1
	MLWorks_20b0_1998_04_07:1.1
	MLWorks_20b0_1998_03_20:1.1
	MLWorks_20m2_1998_02_16:1.1
	MLWorks_workspace_97:1.1.8
	MLWorks_20m1_1997_10_23:1.1
	MLWorks_11r1:1.1.7.1.1.1.1
	MLWorks_11c0_1997_09_09:1.1.7.1.1.1
	MLWorks_10r3:1.1.7.1.3
	MLWorks_10r2_551:1.1.7.1.2
	MLWorks_11:1.1.7.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.7.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c2_1997_06_14:1.1.7.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.7.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.7
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.6.1.1
	MLWorks_1_0_Win32_1996_12_17:1.1.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.4.1
	MLWorks_1_0_Irix_1996_11_28:1.1.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.5
	MLWorks_1_0_Unix_1996_11_14:1.1.4
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1
	MLWorks_Beta_1996_07_02:1.1
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1
	MLWorks_Beta_1996_06_03:1.1
	MLWorks_Beta_1996_05_31:1.1
	MLWorks_Beta_1996_05_30:1.1;
locks; strict;
comment	@# @;


1.1
date	95.11.03.14.33.19;	author daveb;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1
	1.1.6.1
	1.1.7.1
	1.1.8.1;
next	;

1.1.1.1
date	96.09.13.11.07.45;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.15.58.56;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.17.16;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	96.11.14.12.40.45;	author hope;	state Exp;
branches
	1.1.4.1.1.1;
next	;

1.1.4.1.1.1
date	96.11.28.14.52.36;	author hope;	state Exp;
branches;
next	;

1.1.5.1
date	96.11.22.18.01.13;	author hope;	state Exp;
branches;
next	;

1.1.6.1
date	96.12.17.17.40.06;	author hope;	state Exp;
branches
	1.1.6.1.1.1;
next	;

1.1.6.1.1.1
date	97.02.24.11.27.19;	author hope;	state Exp;
branches;
next	;

1.1.7.1
date	97.05.12.10.25.07;	author hope;	state Exp;
branches
	1.1.7.1.1.1
	1.1.7.1.2.1
	1.1.7.1.3.1;
next	;

1.1.7.1.1.1
date	97.07.28.18.10.21;	author daveb;	state Exp;
branches
	1.1.7.1.1.1.1.1;
next	;

1.1.7.1.1.1.1.1
date	97.10.07.11.34.25;	author jkbrook;	state Exp;
branches;
next	;

1.1.7.1.2.1
date	97.09.08.17.03.39;	author daveb;	state Exp;
branches;
next	;

1.1.7.1.3.1
date	97.09.09.13.58.24;	author daveb;	state Exp;
branches;
next	;

1.1.8.1
date	97.11.30.16.47.22;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
.emacs file for demos.
@


1.1
log
@new unit
.emacs file for demos.
@
text
@;;; GNU Emacs environment initialization for MLWorks demos
;;; Copyright (C) 1993 Harlequin Ltd

;; Remove scroll bars and menu bar
(scroll-bar-mode ())
(menu-bar-mode ())

;; Add the MLWorks Emacs lisp directory to the load path.
(setq load-path (cons "$MLWORKSDIR/lib/emacs/lisp" load-path))

;; Set up autoload hooks for the MLWorks server and SML mode.
(autoload 'mlworks-server "mlworks-server" "The MLWorks server" t)
(autoload 'sml-mode "sml-mode" "Major mode for editing Standard ML programs." t)

;; Use SML mode to edit files with the `sml' suffix.
(setq auto-mode-alist (cons '("\\.sml$" . sml-mode) auto-mode-alist))

;; Start the mlworks-server
(mlworks-server)

;; Setting fonts for projection, demoing, &c

(defun set-params-in-frames (params frames)
     "Sets PARAMS parameters (an alist) in FRAMES frames"
     (cond (frames (let ((car (car frames))
                         (rest (cdr frames)))
                        (modify-frame-parameters car params)
                        (set-params-in-frames params rest)))
           (t ())))

(defun set-params-in-all-frames (params)
     "Sets PARAMS parameters (an alist) in all frames"
     (set-params-in-frames params (frame-list)))

(defun set-fonts (a-font)
     "Set the default font, and the fonts in all frames"
     (interactive "sEnter font name: ")
     (let ((font-param (cons 'font a-font)))
          (set-params-in-all-frames (cons font-param nil))
          (setq default-frame-alist (cons font-param default-frame-alist))
          ()))

(defun font-projection ()
     "Use font suitable for use on a projection screen.
See also font-demo and font-small."
     (interactive)
     (set-fonts "-adobe-courier-bold-r-*-*-24-*-*-*-*-*-*-*"))

(defun font-demo ()
     "Use font suitable for use in a multi-person demo.
See also font-projection and font-small"
     (interactive)
     (set-fonts "-adobe-courier-medium-r-*-*-16-*-*-*-*-*-*-*"))

(defun font-small ()
     "Use font suitable for personal use.
See also font-projection and font-demo"
     (interactive)
     (set-fonts "6x13"))


@


1.1.8.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@@


1.1.7.1
log
@branched from 1.1
@
text
@@


1.1.7.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.1.7.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.1.7.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.1.7.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.1.6.1
log
@branched from 1.1
@
text
@@


1.1.6.1.1.1
log
@branched from 1.1.6.1
@
text
@@


1.1.5.1
log
@branched from 1.1
@
text
@@


1.1.4.1
log
@branched from 1.1
@
text
@@


1.1.4.1.1.1
log
@branched from 1.1.4.1
@
text
@@


1.1.3.1
log
@branched from 1.1
@
text
@@


1.1.2.1
log
@branched from 1.1
@
text
@@


1.1.1.1
log
@branched from 1.1
@
text
@@
