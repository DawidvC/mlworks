head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_workspace_97:1.2.1
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_11r1:1.1.7.1.1.1.1
	MLWorks_11c0_1997_09_09:1.1.7.1.1.1
	MLWorks_10r3:1.1.7.1.3
	MLWorks_10r2_551:1.1.7.1.2
	MLWorks_11:1.1.7.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.7.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c2_1997_06_14:1.1.7.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.7.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.7
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.6.1.1
	MLWorks_1_0_Win32_1996_12_17:1.1.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.4.1
	MLWorks_1_0_Irix_1996_11_28:1.1.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.5
	MLWorks_1_0_Unix_1996_11_14:1.1.4
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1
	MLWorks_Beta_1996_07_02:1.1
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1
	MLWorks_Beta_1996_06_03:1.1
	MLWorks_Beta_1996_05_31:1.1
	MLWorks_Beta_1996_05_30:1.1;
locks; strict;
comment	@# @;


1.2
date	97.07.15.12.44.49;	author brucem;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	94.09.06.15.46.36;	author daveb;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1
	1.1.6.1
	1.1.7.1;
next	;

1.1.1.1
date	96.09.13.11.07.00;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.15.58.06;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.16.27;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	96.11.14.12.39.31;	author hope;	state Exp;
branches
	1.1.4.1.1.1;
next	;

1.1.4.1.1.1
date	96.11.28.14.51.30;	author hope;	state Exp;
branches;
next	;

1.1.5.1
date	96.11.22.18.00.07;	author hope;	state Exp;
branches;
next	;

1.1.6.1
date	96.12.17.17.39.02;	author hope;	state Exp;
branches
	1.1.6.1.1.1;
next	;

1.1.6.1.1.1
date	97.02.24.11.26.14;	author hope;	state Exp;
branches;
next	;

1.1.7.1
date	97.05.12.10.23.59;	author hope;	state Exp;
branches
	1.1.7.1.1.1
	1.1.7.1.2.1
	1.1.7.1.3.1;
next	;

1.1.7.1.1.1
date	97.07.28.18.10.40;	author daveb;	state Exp;
branches
	1.1.7.1.1.1.1.1;
next	;

1.1.7.1.1.1.1.1
date	97.10.07.11.34.55;	author jkbrook;	state Exp;
branches;
next	;

1.1.7.1.2.1
date	97.09.08.17.03.58;	author daveb;	state Exp;
branches;
next	;

1.1.7.1.3.1
date	97.09.09.13.58.58;	author daveb;	state Exp;
branches;
next	;

1.2.1.1
date	97.11.30.16.47.40;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.2
log
@[Bug #30199]
Update for new profiler library.
@
text
@require "btree";

(* Use
    fromList (mkList N , op < : int * int -> bool);
   where N is any number much greater than 0 (e.g. 10000) *)

local
  open MLWorks.Profile
in

(* See the reference manual 3.4.4 for info on the selector *)

val add'_manner =  make_manner 
                     {calls = true, copies = true, depth = 2,
                      space = true, time = true, breakdown = [TOTAL] }

val generic_manner = make_manner
                      {calls = false, copies = false, depth = 2,
                       space = false, time = false, breakdown = [] }

fun is_add' s = size s >= 4 andalso 
                substring (s,0,4) = "add'"

val fromList =
  profile
    (Options
      {scan = 3,
       selector = 
         fn s => if (is_add' s) then add'_manner else generic_manner
      }
     )
    Btree.fromList;

(* Add 100 to each value in the list as 42 is reserved for debugger demo *)

fun mkList 0 = []
|   mkList n = (n + 100) :: mkList (n-1);

end
@


1.2.1.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@@


1.1
log
@new file
@
text
@d3 21
d25 7
a31 4
  MLWorks.Profile.profile
    (MLWorks.Profile.OPTIONS
      {scan = 3, depth = 2, select = ["add'"]})
    std_out
d34 2
d37 1
a37 1
|   mkList n = n :: mkList (n-1);
d39 1
@


1.1.7.1
log
@branched from 1.1
@
text
@@


1.1.7.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.1.7.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.1.7.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.1.7.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.1.6.1
log
@branched from 1.1
@
text
@@


1.1.6.1.1.1
log
@branched from 1.1.6.1
@
text
@@


1.1.5.1
log
@branched from 1.1
@
text
@@


1.1.4.1
log
@branched from 1.1
@
text
@@


1.1.4.1.1.1
log
@branched from 1.1.4.1
@
text
@@


1.1.3.1
log
@branched from 1.1
@
text
@@


1.1.2.1
log
@branched from 1.1
@
text
@@


1.1.1.1
log
@branched from 1.1
@
text
@@
