(* Copyright (C) 1997 The Harlequin Group Limited.  All rights reserved.
 *
 * This file should be generated by a stub-generator from <ndbm.h>
 * This version has been written by hand.
 *
 * Revision Log
 * ------------
 * $Log: ndbm.sml,v $
 * Revision 1.2  1997/07/03 08:14:04  stephenb
 * [Bug #30029]
 * The previous version used the signatures/structures from
 * the prototype version the new FI.  This version uses the
 * signatures/structures that a customer will see.
 *
 *  Revision 1.1  1997/04/29  14:52:21  stephenb
 *  new unit
 *  [Bug #30030]
 *
 *)
 
require "$.basis.__word";

signature NDBM =
  sig
    eqtype DBM
    eqtype datum

    eqtype c_int
    eqtype c_uint
    eqtype c_char
    eqtype 'a c_ptr
 
    (* DBM utilities *)
    val DBM'size' : Word.word
    val DBM'addr' : DBM -> DBM c_ptr

    (* datum utilities *)
    val datum'size' : Word.word
    val datum'addr' : datum -> datum c_ptr

    (* DBM field addresses *)
    val DBM'dbm_dirf'addr : DBM -> c_int c_ptr
    val DBM'dbm_pagf'addr : DBM -> c_int c_ptr
    (* ... *)

    (* dbm field values *)
    val DBM'dbm_dirf : DBM -> c_int
    val DBM'dbm_pagf : DBM -> c_int
    (* ... *)

    (* datum field addresses *)
    val datum'dptr'addr : datum -> c_char c_ptr c_ptr
    val datum'dsize'addr : datum -> c_uint c_ptr

    (* datum field values *)
    val datum'dptr : datum -> c_char c_ptr
    val datum'dsize : datum -> c_uint


    val DBM_INSERT  : c_int
    val DBM_REPLACE : c_int

    val dbm_open :  c_char c_ptr * c_int * c_int -> DBM c_ptr
    val dbm_store : DBM c_ptr * datum * datum * c_int -> c_int
    val dbm_delete : DBM c_ptr * datum -> c_int
    val dbm_fetch : DBM c_ptr * datum -> datum
    val dbm_firstkey : DBM c_ptr -> datum
    val dbm_nextkey : DBM c_ptr -> datum
    val dbm_error : DBM c_ptr -> c_int
    val dbm_clearerr : DBM c_ptr -> c_int
    val dbm_close : DBM c_ptr -> unit
  end
