head	1.3;
access;
symbols
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.1
	MLWorks_20c0_1998_08_04:1.1
	MLWorks_20b2c2_1998_06_19:1.1
	MLWorks_20b2_Windows_1998_06_12:1.1
	MLWorks_20b1c1_1998_05_07:1.1
	MLWorks_20b0_1998_04_07:1.1
	MLWorks_20b0_1998_03_20:1.1
	MLWorks_20m2_1998_02_16:1.1
	MLWorks_workspace_97:1.1.1
	MLWorks_20m1_1997_10_23:1.1;
locks; strict;
comment	@# @;


1.3
date	98.10.28.06.58.51;	author jkbrook;	state Exp;
branches;
next	1.2;

1.2
date	98.10.26.19.41.48;	author jkbrook;	state Exp;
branches;
next	1.1;

1.1
date	97.07.01.09.35.51;	author stephenb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.11.30.16.47.23;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
** No reason given. **
@


1.3
log
@[Bug #70184]
Remove spurious runtime output
@
text
@kitten dump ok
cub dump ok
  $ ./kitten -pass args __kitten.sml __cub.sml args

The following uses 'cub' to do the same and write the file output.

  $ ./cub -pass args __kitten.sml __cub.sml args > output
  > kitten -pass args __kitten.sml __cub.sml args

The following uses 'cub' to do the same and write the file 'output' :-

  > cub -pass args __kitten.sml __cub.sml args > output
kitten: cannot open 'does-not-exist'
  $ ./kitten -pass args __kitten.sml __cub.sml args

The following uses 'cub' to do the same and write the file output.

  $ ./cub -pass args __kitten.sml __cub.sml args > output
  > kitten -pass args __kitten.sml __cub.sml args

The following uses 'cub' to do the same and write the file 'output' :-

  > cub -pass args __kitten.sml __cub.sml args > output
cub: cannot open 'does-not-exist'
@


1.2
log
@[Bug #70184]
Update for changes to test
@
text
@d2 1
a2 92
MLWorks 2.0 Professional Edition
Copyright (C) 1998 Harlequin Group plc.  All rights reserved.
MLWorks is a trademark of Harlequin Group plc.

MLWorks> MLWorks>> MLWorks>> MLWorks>> MLWorks>> MLWorks>> MLWorks>> MLWorks> MLWorks> val it : unit = ()
MLWorks> MLWorks> val it : unit = ()
MLWorks> val it : unit = ()
MLWorks> val it : unit = ()
MLWorks> Loading mo module string_cvt
Loading mo module __pre_basis
Loading mo module __pre_string_cvt
Loading mo module __string_cvt
Loading mo module char
Loading mo module __pre_int
Loading mo module __pre_int32
Loading mo module integer
Loading mo module __int
Loading mo module __pre_char
Loading mo module __char
Loading mo module __int16
Loading mo module __int32
Loading mo module __pre_word32
Loading mo module __pre_word
Loading mo module __large_int
Loading mo module word
Loading mo module __word
Loading mo module __word8
Loading mo module __word16
Loading mo module __word32
Loading mo module __sys_word
Loading mo module general
Loading mo module __general
Loading mo module math
Loading mo module __math
Loading mo module string
Loading mo module __string
Loading mo module list
Loading mo module __list
Loading mo module __pre_ieee_real
Loading mo module __pre_real
Loading mo module ieee_real
Loading mo module __ieee_real
Loading mo module real
Loading mo module __real
Loading mo module mlworks_c_pointer
Loading mo module mlworks_c_interface
Loading mo module __mlworks_c_interface
structure MLWorksCInterface = struct ... end
Loading mo module __position
Loading mo module time
Loading mo module __time
Loading mo module os_file_sys
Loading mo module os_path
Loading mo module os_process
Loading mo module os_io
Loading mo module os
Loading mo module mono_vector
Loading mo module __word8_vector
Loading mo module unixos
Loading mo module _os
Loading mo module _unixos
Loading mo module __unixos
Loading mo module __os_path
Loading mo module _os_file_sys
Loading mo module __os_file_sys
Loading mo module exit
Loading mo module __exit
Loading mo module _os_process
Loading mo module __os_process
Loading mo module _os_io
Loading mo module __os_io
Loading mo module __os
Loading mo module mono_array
Loading mo module __char_vector
Loading mo module __char_array
Loading mo module mlworks_c_resource
Loading mo module __mlworks_c_resource
Loading mo module __real_vector
Loading mo module __real_array
Loading mo module mlworks_dynamic_library
Loading mo module __mlworks_dynamic_library
Loading mo module mlworks_c_io
Loading mo module __mlworks_c_io
Loading mo module __cub
[Collection promote 0 inplace 1 inplace 2 inplace 1 inplace 2 20ms, 1Mb, 0.00
   gen  coll    resident      extent       limit  entry static
     0  0.00           0      262144     1048576      0      0
     1  0.00          82        1024    16777216      4      0
     2  0.00        4294        5120    16777216      1      0]
structure Cub = struct ... end
val it : unit = ()
MLWorks> MLWorks> cub dump ok
@


1.1
log
@new unit
** No reason given. **
@
text
@d2 92
a93 1
cub dump ok
@


1.1.1.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@@
