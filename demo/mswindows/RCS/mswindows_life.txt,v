head	1.6;
access;
symbols
	MLWorks_21c0_1999_03_25:1.6
	MLWorks_20c1_1998_08_20:1.5
	MLWorks_20c0_1998_08_04:1.5
	MLWorks_20b2c2_1998_06_19:1.5
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_workspace_97:1.4.1
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.3.1.1.1.2.1
	MLWorks_11c0_1997_09_09:1.3.1.1.1.2
	MLWorks_10r3:1.3.1.1.3
	MLWorks_10r2_551:1.3.1.1.2
	MLWorks_11:1.3.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.1.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.1
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.1
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.3.1.1
	MLWorks_1_0_Win32_1996_12_17:1.1.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.1.1
	MLWorks_1_0_Irix_1996_11_28:1.1.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.2
	MLWorks_1_0_Unix_1996_11_14:1.1.1;
locks; strict;
comment	@# @;


1.6
date	98.11.09.11.32.24;	author johnh;	state Exp;
branches;
next	1.5;

1.5
date	98.05.21.16.09.45;	author jkbrook;	state Exp;
branches;
next	1.4;

1.4
date	97.08.06.13.34.53;	author johnh;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	97.04.11.09.29.39;	author johnh;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	97.04.10.16.46.12;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	96.11.08.13.22.38;	author jkbrook;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	96.11.14.12.39.48;	author hope;	state Exp;
branches
	1.1.1.1.1.1;
next	;

1.1.1.1.1.1
date	96.11.28.14.51.41;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.11.22.18.00.20;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.12.17.17.39.14;	author hope;	state Exp;
branches
	1.1.3.1.1.1;
next	;

1.1.3.1.1.1
date	97.02.24.11.26.24;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	97.05.12.10.24.11;	author hope;	state Exp;
branches
	1.3.1.1.1.1
	1.3.1.1.2.1
	1.3.1.1.3.1;
next	;

1.3.1.1.1.1
date	97.07.28.18.10.10;	author daveb;	state Exp;
branches;
next	1.3.1.1.1.2;

1.3.1.1.1.2
date	97.08.07.08.54.08;	author johnh;	state Exp;
branches
	1.3.1.1.1.2.1.1;
next	;

1.3.1.1.1.2.1.1
date	97.10.07.11.34.09;	author jkbrook;	state Exp;
branches;
next	;

1.3.1.1.2.1
date	97.09.08.17.03.29;	author daveb;	state Exp;
branches;
next	;

1.3.1.1.3.1
date	97.09.09.13.58.06;	author daveb;	state Exp;
branches;
next	;

1.4.1.1
date	97.11.30.16.48.32;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Provide user information (.txt file) for mswindows version of life.sml
@


1.6
log
@[Bug #50105]
Make toplevel functions unique across demos to avoid conflicts when loading demo project.
@
text
@  Load File: life.sml

  Implements the Life game.

  To run from inside MLWorks, at the listener prompt type

	life_test ();

  This starts a new game with the default initial values.  To start
  the run, type `s' into this window -- this starts a continuous cycle
  of generations.  To stop this continuous cycle, press `s' again.  To
  see one generation at a time, press any other key, apart from `r'
  and `x'.

  Other controls are:

           s   start and stop
           r   return to initial configuration
  other keys   get next generation

           x   quit
 
  The setting of particular points can also be toggled using the left
  mouse-button.

  It is also possible to start games using different initial
  configurations. For instance, typing the following into the listener

    life (gunvals,world_x,world_y);

  starts a game with a `glider gun' in place and in a grid of the
  default size.  To use other pre-defined configurations, you will
  need to load the file `forms.sml'.


  To run as a standalone executable, first compile and load the
  module as usual using the project workspace.  Then create an
  executable file for instance by doing

      MLWorks.Deliver.deliver 
	("life", life_appl(gunvals,world_x,world_y), MLWorks.Deliver.WINDOWS);

  (life_appl(values,x,y) is a function of type unit -> unit which allows
  the demo to be run from the command-line without invoking MLWorks).  
  After delivery the MLWorks session will exit and the file `life.exe' 
  can then be run from the command-line.
  
  Note that MLWorks executables depend on the MLWorks runtime shared
  library (DLL).  If the DLL cannot be found, either add the bin
  subdirectory of the current directory to your path environment
  variable, or run the executable from either the MLWorks bin directory
  or the directory in which it is located.

@


1.5
log
@[Bug #50050]
Update for new delivery syntax, removal of image-saving
and projects
@
text
@d7 1
a7 1
	test ();
d41 1
a41 1
	("life", appl(gunvals,world_x,world_y), MLWorks.Deliver.WINDOWS);
d43 1
a43 1
  (appl(values,x,y) is a function of type unit -> unit which allows
@


1.4
log
@[Bug #20087]
Make the help text doc consistent with the life demo.
@
text
@d36 3
a38 2
  To run as a standalone executable after compiling, create an
  executable file, for instance by doing
d41 1
a41 1
	("life", appl(gunvals,world_x,world_y), true);
d43 10
a52 7
  (appl(values,x,y) is a function of type unit -> unit which starts X
  and then runs the demo.)  The file `tetris' can then be run from the
  command-line without invoking MLWorks.  Alternatively an image can
  be created by doing

      MLWorks.Deliver.deliver 
	("life.img", appl(gunvals,world_x,world_y), false);
a53 6
  and run using
   
      mlrun -load life.img

  at the command line.
  
@


1.4.1.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@@


1.3
log
@Made life demo behave more like the motif version.
@
text
@d9 5
a13 4
  This starts a new game with the default initial values.  To start the
  run, type `s' into this window -- this starts a continuous cycle of 
  generations.  To stop this continuous cycle, press `s' again.  To see
  one generation at a time, press any other key, apart from `r' and `x'.
d26 2
a27 3
  It is also possible to start games using different initial configurations, 
  examples of which are given in `forms.sml'. For instance, typing the
  following into the listener
d31 3
a33 3
  starts a game with a `glider gun' in place and in a grid of the default
  size.  To use other pre-defined configurations, you will need to load 
  the file `forms.sml'.
d35 21
@


1.3.1.1
log
@branched from 1.3
@
text
@@


1.3.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.3.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.3.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.3.1.1.1.2
log
@[Bug #20087]
Merging - Make text files consistent with demos.
@
text
@d9 4
a12 5
  This starts a new game with the default initial values.  To start
  the run, type `s' into this window -- this starts a continuous cycle
  of generations.  To stop this continuous cycle, press `s' again.  To
  see one generation at a time, press any other key, apart from `r'
  and `x'.
d25 3
a27 2
  It is also possible to start games using different initial
  configurations. For instance, typing the following into the listener
d31 3
a33 3
  starts a game with a `glider gun' in place and in a grid of the
  default size.  To use other pre-defined configurations, you will
  need to load the file `forms.sml'.
a34 3


  
@


1.3.1.1.1.2.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.2
log
@[Bug #2039]
The life window no longer pops up automatically.  Users must call test().
@
text
@d10 3
a12 3
  run, type `s' into this window -- this displays the configuration for
  the initial generation.  To see the next generation press any key.  
  To run continuously hold down any key, releasing it to stop. 
d16 1
a16 1
           s   start 
@


1.1
log
@new unit
Provide user information (.txt file) for mswindows version of life.sml
@
text
@d5 8
a12 5
  Load the file `life.sml' using File > Load from Source.  A new window
  should automatically appear.  To start a run, type `s' into this
  window -- this displays the configuration for the initial generation.  
  To see the next generation press any key.  To run continuously hold 
  down any key, releasing it to stop. 
a23 8


  To start a new run from within MLWorks after the file has been loaded, 
  type in a listener

    test ();

  This starts a new game with the default initial values.  
@


1.1.3.1
log
@branched from 1.1
@
text
@@


1.1.3.1.1.1
log
@branched from 1.1.3.1
@
text
@@


1.1.2.1
log
@branched from 1.1
@
text
@@


1.1.1.1
log
@branched from 1.1
@
text
@@


1.1.1.1.1.1
log
@branched from 1.1.1.1
@
text
@@
