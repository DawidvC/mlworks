head	1.1;
access;
symbols
	MLWorks_21c0_1999_03_25:1.1
	MLWorks_20c1_1998_08_20:1.1
	MLWorks_20c0_1998_08_04:1.1
	MLWorks_20b2c2_1998_06_19:1.1
	MLWorks_20b2_Windows_1998_06_12:1.1
	MLWorks_20b1c1_1998_05_07:1.1
	MLWorks_20b0_1998_04_07:1.1
	MLWorks_20b0_1998_03_20:1.1
	MLWorks_20m2_1998_02_16:1.1
	MLWorks_20m1_1997_10_23:1.1
	MLWorks_11r1:1.1.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.1.1.1.1.1
	MLWorks_10r3:1.1.1.1.3
	MLWorks_10r2_551:1.1.1.1.2
	MLWorks_11:1.1.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.1.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c2_1997_06_14:1.1.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.1
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1;
locks; strict;
comment	@ *  @;


1.1
date	96.12.17.13.29.23;	author matthew;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.12.10.23.42;	author hope;	state Exp;
branches
	1.1.1.1.1.1
	1.1.1.1.2.1
	1.1.1.1.3.1;
next	;

1.1.1.1.1.1
date	97.07.28.18.09.25;	author daveb;	state Exp;
branches
	1.1.1.1.1.1.1.1;
next	;

1.1.1.1.1.1.1.1
date	97.10.07.11.33.13;	author jkbrook;	state Exp;
branches;
next	;

1.1.1.1.2.1
date	97.09.08.17.02.47;	author daveb;	state Exp;
branches;
next	;

1.1.1.1.3.1
date	97.09.09.13.57.24;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
New unit
@


1.1
log
@new unit
New unit
@
text
@(* 2-d matrix multiply *)
use "utils/fastlude";

local
exception Shape
val dim = 200

  fun dot (i,j,A : int array2,B : int array2) =
      let val (ar,ac) = length2 A
	  val (br,bc) = length2 B
      in if ac<>br then raise Shape
         else let fun dot(k,sum) = 
                if k<ac then
                  let val sum'=sum + sub2(A,i,k) * sub2(B,k,j)
                  in dot(k+1,sum')
                  end
                else sum
              in dot(0,0)
              end
      end

   fun pr (A : int array2) =
       let val (ar,ac) = length2 A
           fun f(i) =
	        if i<ar then
		    let fun g(j) =
			if j<ac then (print(makestring_int(sub2(A,i,j)));
				      print " "; g(j+1))
			else (print "\n"; f(i+1))
		    in g 0
		    end
               else ()
      in f 0
      end

in
  fun mult (A : int array2, B : int array2) =
      let val (ar,ac) = length2 A
          val (br,bc) = length2 B
      in if ac<>br then raise Shape
         else
	    let val c = array2(ar,bc,0)
                fun f(i) =
                  if i<ar then
                    let fun g(j) =
	                if j<bc then (update2(c,i,j,dot(i,j,A,B));
				      g(j+1))
                        else ()
                    in (g 0; f(i+1))
                    end
                  else ()
            in f 0; c
            end
      end

val a = array2(dim,dim,1)
fun doit () = mult(a,a)
(*
val _ = pr b
*)
end


use "utils/benchmark";

test "matmult" 1 doit ();
@


1.1.1.1
log
@branched from 1.1
@
text
@@


1.1.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.1.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.1.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.1.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@
