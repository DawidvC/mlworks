head	1.3;
access;
symbols
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_11r1:1.2.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.2.1.1.1.1
	MLWorks_10r3:1.2.1.1.3
	MLWorks_10r2_551:1.2.1.1.2
	MLWorks_11:1.2.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.2.1.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.2.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.2.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.2.1
	MLWorks_BugFix_1997_04_24:1.2
	MLWorks_1_0_r2_Win32_1997_04_11:1.2
	MLWorks_1_0_r2_Unix_1997_04_04:1.2;
locks; strict;
comment	@ *  @;


1.3
date	98.02.26.10.45.40;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	97.04.04.11.55.08;	author jont;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	96.12.11.12.45.23;	author matthew;	state Exp;
branches;
next	;

1.2.1.1
date	97.05.12.10.23.34;	author hope;	state Exp;
branches
	1.2.1.1.1.1
	1.2.1.1.2.1
	1.2.1.1.3.1;
next	;

1.2.1.1.1.1
date	97.07.28.18.09.12;	author daveb;	state Exp;
branches
	1.2.1.1.1.1.1.1;
next	;

1.2.1.1.1.1.1.1
date	97.10.07.11.33.03;	author jkbrook;	state Exp;
branches;
next	;

1.2.1.1.2.1
date	97.09.08.17.02.36;	author daveb;	state Exp;
branches;
next	;

1.2.1.1.3.1
date	97.09.09.13.57.14;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.3
log
@[Bug #30364]
Remove use of loadSource
@
text
@(*************************************************************************)
(* Toolkit Functions for The Ghost CSG Raytracer - (C) Chris Walton 1994 *)
(*************************************************************************)

(* Standard error handler *)
exception Error of string
fun error s = raise Error s

(* ------------------------- REAL NUMBER FUNCTIONS --------------------- *)

(* Maths roundoff tolerance value *)
val epsilon = 1.0E~5;   

(* PI *)
val PI = 3.14159265358979323844

(* Tangent function (radians) *)
fun tan x = (sin x) / (cos x)

(* Real number equality testing *)
infix 4 ==
fun x == y = if x = y then true
             else if Real.== (x+y,0.0) then false
             else abs((x-y)/(x+y)) < epsilon

(* Real number power function x^y *)
exception power
fun pow x y = if x<0.0 then raise power
              else if x == 0.0 then 0.0
              else if y == 0.0 then 1.0
              else exp(y * ln x)

(* Minimum of two real numbers *)
fun min'r x (y:real) = if x<y then x else y

(* ---------------------- LIST MANIPULATING FUNCTIONS ------------------- *) 

(* Get the n 'th element of a list *)
exception element_not_found 
fun element ([], _) = raise element_not_found
  | element (h::t, 0) = h
  | element (h::t, n) = element(t, n-1)

(* Get the head of a list *)
exception Hd
fun hd [] = raise Hd
  | hd (h::_) = h

(* Get the tail of a list *)
exception Tl
fun tl [] = raise Tl
  | tl (_::t) = t

(* List fold left function *)
fun foldleft f e [] = e
  | foldleft f e (h::t) = foldleft f (f(e, h)) t

fun null [] = true
  | null _ = false
@


1.2
log
@[Bug #2025]
Use new version of Real.equal, called Real.==
@
text
@a0 2
Shell.Build.loadSource "basis.__real";

@


1.2.1.1
log
@branched from 1.2
@
text
@@


1.2.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.2.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.2.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.2.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.1
log
@new unit
@
text
@d25 1
a25 1
             else if Real.equal (x+y,0.0) then false
@
