head	1.1;
access;
symbols
	MLWorks_21c0_1999_03_25:1.1
	MLWorks_20c1_1998_08_20:1.1
	MLWorks_20c0_1998_08_04:1.1
	MLWorks_20b2c2_1998_06_19:1.1
	MLWorks_20b2_Windows_1998_06_12:1.1
	MLWorks_20b1c1_1998_05_07:1.1
	MLWorks_20b0_1998_04_07:1.1
	MLWorks_20b0_1998_03_20:1.1
	MLWorks_20m2_1998_02_16:1.1
	MLWorks_20m1_1997_10_23:1.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.1;
locks; strict;
comment	@# @;


1.1
date	97.05.15.14.39.05;	author matthew;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.22.13.48.39;	author hope;	state Exp;
branches;
next	;


desc
@new unit
@


1.1
log
@new unit
@
text
@Need to check if long literal lists compile "reasonably quickly".

Time using the relevant test_suite file:

  Shell.Timer.printTiming {function = use,
                           name = "Test",
                           stream = MLWorks.IO.std_out} 
  "test_suite/static_core/biglist.sml";

or whatever the relevant test suite path is for you.

On bessie, this takes about 10 seconds user time.  Similar for
dedekind and probably abel (within an order of magnitude
anyway). Anything slower than this should be cause for alarm.  The
problem isn't machine dependent so it doesn't matter what it runs on.


@


1.1.1.1
log
@branched from 1.1
@
text
@@
