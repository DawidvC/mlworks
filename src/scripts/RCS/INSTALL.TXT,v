head	1.9;
access;
symbols
	MLW_daveb_inline_1_4_99:1.9.1
	MLWorks_21c0_1999_03_25:1.9
	MLWorks_20c1_1998_08_20:1.8
	MLWorks_20c0_1998_08_04:1.8
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.8
	MLWorks_20b1c1_1998_05_07:1.8
	MLWorks_20b0_1998_04_07:1.8
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.8.1.1.1.1.1
	MLWorks_workspace_97:1.8.3
	MLWorks_dt_wizard:1.8.2
	MLWorks_11c0_1997_09_09:1.8.1.1.1.1
	MLWorks_10r3:1.8.1.1.3
	MLWorks_10r2_551:1.8.1.1.2
	MLWorks_11:1.8.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.8.1.1
	MLWorks_20m0_1997_06_20:1.8
	MLWorks_1_0_r2c2_1997_06_14:1.8.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.8.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.8.1
	MLWorks_BugFix_1997_04_24:1.8
	MLWorks_1_0_r2_Win32_1997_04_11:1.8
	MLWorks_1_0_r2_Unix_1997_04_04:1.8
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.3.1.1
	MLWorks_gui_1996_12_18:1.7.4
	MLWorks_1_0_Win32_1996_12_17:1.7.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.7.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.7.1.1
	MLWorks_1_0_Irix_1996_11_28:1.7.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.7.2
	MLWorks_1_0_Unix_1996_11_14:1.7.1
	MLWorks_Open_Beta2_1996_10_11:1.6.3
	MLWorks_License_dev:1.6.2
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.5
	MLWorks_Beta_1996_06_07:1.4
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@# @;


1.9
date	98.08.28.15.20.06;	author jkbrook;	state Exp;
branches
	1.9.1.1;
next	1.8;

1.8
date	97.04.02.15.34.13;	author daveb;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1;
next	1.7;

1.7
date	96.10.11.16.26.25;	author jont;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1;
next	1.6;

1.6
date	96.07.31.13.48.17;	author jont;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1;
next	1.5;

1.5
date	96.06.20.14.36.48;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	96.06.07.12.16.13;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	96.06.06.15.14.12;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	96.04.02.16.09.47;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	95.10.19.14.27.05;	author daveb;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.26.02;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.07.16.16.33;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.10.17.11.35.55;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	96.11.14.13.04.10;	author hope;	state Exp;
branches
	1.7.1.1.1.1;
next	;

1.7.1.1.1.1
date	96.11.28.15.13.33;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.11.22.18.21.34;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.12.17.17.59.32;	author hope;	state Exp;
branches
	1.7.3.1.1.1;
next	;

1.7.3.1.1.1
date	97.02.24.11.51.08;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	96.12.18.09.54.52;	author hope;	state Exp;
branches;
next	;

1.8.1.1
date	97.05.12.10.49.37;	author hope;	state Exp;
branches
	1.8.1.1.1.1
	1.8.1.1.2.1
	1.8.1.1.3.1;
next	;

1.8.1.1.1.1
date	97.07.28.18.31.49;	author daveb;	state Exp;
branches
	1.8.1.1.1.1.1.1;
next	;

1.8.1.1.1.1.1.1
date	97.10.07.11.57.53;	author jkbrook;	state Exp;
branches;
next	1.8.1.1.1.1.1.2;

1.8.1.1.1.1.1.2
date	97.10.07.13.21.18;	author jkbrook;	state Exp;
branches;
next	;

1.8.1.1.2.1
date	97.09.08.17.24.51;	author daveb;	state Exp;
branches;
next	;

1.8.1.1.3.1
date	97.09.09.14.21.38;	author daveb;	state Exp;
branches;
next	1.8.1.1.3.2;

1.8.1.1.3.2
date	97.09.24.11.02.56;	author jkbrook;	state Exp;
branches;
next	;

1.8.2.1
date	97.09.10.19.40.39;	author brucem;	state Exp;
branches;
next	;

1.8.3.1
date	97.09.11.21.08.18;	author daveb;	state Exp;
branches;
next	;

1.9.1.1
date	99.04.01.18.06.51;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Renamed from INSTALL to avoid name clash on the PC.
@


1.9
log
@[Bug #30044]
Remove instructions to choose main-static since no platforms now
provide a choice
@
text
@		  MLWORKS: UNIX INSTALLATION INSTRUCTIONS

The shell script `install-mlworks' in this directory does all the work
of building a correct MLWorks installation anywhere you choose. The
script optionally takes a directory into which to install MLWorks. By
default it installs MLWorks in /usr/local/lib/MLWorks. The directory
argument, if given, must be a full absolute path name. Relative
directory names, including those relative to home directories, are not
sufficient.

At the start of the install-mlworks script you will find a number of
settings of shell variables naming directories. If you wish finer
control over where the various components of the system are placed,
you can tailor these variables to your local site before running the
script.

The install-mlworks script does not need to be run as root, unless you
wish to install in a place where only root can write. Files will be
installed to be owned by the current user and with the current umask.
You can install over a previous installation; files are removed before
being replaced, so they will also be owned by the current user.

If you have special requirements, such as a partial installation, you
may need to modify the install script further or perform a manual
installation.

For Irix and Solaris, a dynamically linked executable is supplied for
MLWorks.  This requires a Motif shared library to operate.  On
Linux a statically linked executable is supplied.  You do not
need to own a copy of Motif to run MLWorks on Linux.

On Solaris 2.4, 2.5 and 2.6, MLWorks expects to find the
OpenWindows version of X11 and Xt, as distributed with Solaris by Sun.
On machines run "out of the box", MLWorks should work with no further
installation.  If you have installed another implementation of X as
well (e.g. MIT X), you will need to set your LD_LIBRARY_PATH
environment variable to include /usr/dt/lib when running MLWorks.

When using a statically linked executable, you may have to modify
the standard settings placed into all installed scripts in order to
add a setting to enable X to find XKeysymDB. This is done by modifying
the line similar to:-

XKEYSYMDB=/usr/lib/X11/XKeysymDB

You will need to replace /usr/lib/X11/XKeysymDB with the exact full
path of XKeysymDB on your system.


For each of the above options, here are the files which the dynamic
linked version requires:-

Irix:
 libm.so
 libXm.so.1
 libXt.so
 libXmu.so
 libX11.so.1
 libc.so.1
 libXext.so

Solaris 2.3:
 libm.so.1
 libXt.so.5.0
 libX11.so.5.0
 libsocket.so.1
 libnsl.so.1
 libintl.so.1
 libelf.so.1
 libdl.so.1
 libc.so.1
 libw.so.1

Solaris 2.4, 2.5 and 2.6:
 libm.so.1
 libXm.so.2.12
 libXt.so.4
 libX11.so.4
 libXext.so.0
 libsocket.so.1
 libnsl.so.1
 libintl.so.1
 libelf.so.1
 libdl.so.1
 libc.so.1
 libw.so.1
 libmp.so.1
@


1.9.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@@


1.8
log
@[Bug #2012]
Updated the information about runtimes on Sun machines.  Added a list of
dynamic libraries for Solaris 2.4/2.5.
@
text
@d27 4
d32 1
a32 15
For Irix, only one executable is supplied for MLWorks. This executable
is dynamic linked, and requires a motif shared library to operate.


For Sun platforms (SunOS and Solaris), both dynamically and statically
linked executables are provided. By default, the statically linked
version is used. If you wish to change the default, and use dynamic
linking, you should edit the install-mlworks script to set
"RUNTIME=main" instead of "RUNTIME=main-static". This will rely on
having the correct version of the motif shared library installed at
your site.  If the correct version is not available MLWorks will not
be able to run using dynamic linking, and you should revert to the
statically linked executable.

On Solaris 2.4 and Solaris 2.5, MLWorks expects to find the
d37 1
a37 4
environment variable to include /usr/openwin/lib when running MLWorks.
MLWorks does not work with the version of Motif distributed by Sun
(/usr/dt/lib/libXm.so).  Attempts to use the dynamically linked
runtime with this library are likely to fail.
d39 1
a39 1
When using the statically linked executable, you may have to modify
d74 1
a74 1
Solaris 2.4 and 2.5:
a87 7

SunOS:
 libXm.so.1.2
 libXt.so.5.0
 libX11.so.5.0
 libc.so.1.8.1
 libdl.so.1.0
@


1.8.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@@


1.8.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@@


1.8.1.1
log
@branched from 1.8
@
text
@@


1.8.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.8.1.1.3.2
log
@[Bug #30273]
Include Linux info
@
text
@a51 5

For Linux (Red Hat 4.0 onwards), only a statically linked executable is 
provided.


@


1.8.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.8.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.8.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.8.1.1.1.1.1.2
log
@[Bug #30273]
Merging from MLWorks_10r3:
Adding Linux info
@
text
@a51 5

For Linux (Red Hat 4.0 onwards), only a statically linked executable is 
provided.


@


1.7
log
@Modify blurb now we are using static linking by default
@
text
@d32 24
a55 11
For Sun platforms (SunOS and Solaris), both dynamic and static linked
executables are provided. By default, static linking is used. If you
wish to change the default, and use dynamic linking, you should edit
the install-mlworks script to set "RUNTIME=main" instead of
"RUNTIME=main-static". This will rely on having the correct version of
the motif shared library installed at your site. If the correct
version is not available MLWorks will not be able to run using dynamic
linking, and you should revert to the static linked executable. In
this case, you may have to modify the standard settings placed into
all installed scripts in order to add a setting to enable X to find
XKeysymDB. This is done by modifying the line similar to:-
d62 1
d75 1
a75 1
Solaris:
d86 15
@


1.7.4.1
log
@branched from 1.7
@
text
@@


1.7.3.1
log
@branched from 1.7
@
text
@@


1.7.3.1.1.1
log
@branched from 1.7.3.1
@
text
@@


1.7.2.1
log
@branched from 1.7
@
text
@@


1.7.1.1
log
@branched from 1.7
@
text
@@


1.7.1.1.1.1
log
@branched from 1.7.1.1
@
text
@@


1.6
log
@The shell script has moved to become install-mlworks.
Some explanatory text about XKEYSYMDB added.
@
text
@d28 15
a42 9
MLWorks uses Motif version 1.2.4. You may run it using dynamic or
static linking. By default the install-mlworks script installs the
version of the runtime that uses dynamic linking. This expects to find
a .so file of the correct version, e.g. libXm.so.1. If you do not have
Motif installed at your site, edit the install-mlworks script to set
"RUNTIME=main-static" instead of "RUNTIME=main". In this case, you may
well also have to modify the standard settings placed into all
installed scripts in order to add a setting to enable X to fin
XKeysysDB. This is done by adding two lines, of a form similar to:-
a44 1
export XKEYSYMDB
d46 33
a78 6
These lines need to be added to the section following the second
instance of #!/bin/sh (around line 187) in the install-mlworks script
(this section prepends environment variable settings into all scripts
used to run mlworks and subsidiary programs). You will need to replace
/usr/lib/X11/XKeysymDB with the exact full path of XKeysymDB on your
system.
@


1.6.3.1
log
@branched from 1.6
@
text
@@


1.6.2.1
log
@branched from 1.6
@
text
@@


1.6.1.1
log
@branched from 1.6
@
text
@@


1.5
log
@Added info about Motif library and app-defaults files.
@
text
@d3 13
a15 12
The shell script `install' in this directory does all the work of
building a correct MLWorks installation anywhere you choose.  The
script optionally takes a directory into which to install MLWorks.
By default it installs MLWorks in /usr/local/lib/MLWorks. The
directory argument, if given, must be a full absolute path name.
Relative directory names, including those relative to home directories,
are not sufficient.

At the start of the install script you will find a number of settings 
of shell variables naming directories.  If you wish finer control over
where the various components of the system are placed, you can tailor
these variables to your local site before running the script.
d17 2
a18 2
The install script does not need to be run as root, unless you wish
to install in a place where only root can write. Files will be
d28 19
a46 9
MLWorks uses Motif version 1.2.4.  You may run it using dynamic or
static linking.  By default the install script installs the version
of the runtime that uses dynamic linking.  This expects to find a .so
file of the correct version, e.g. libXm.so.1.  If you do not have
Motif installed at your site, edit the install script to set
"RUNTIME=main-static" instead of "RUNTIME=main".



@


1.4
log
@Change the checkout file mode
@
text
@d1 1
a1 1
		  MLWORKS INSTALLATION INSTRUCTIONS
d4 11
a14 5
building a correct MLWorks installation anywhere you choose. At the
start of the install script you will find a number of settings of
shell variables naming directories. You may need to tailor these to
your local site before running the script. The recommended place to
install MLWorks is in /usr/local/lib/MLWorks.
d16 1
a16 1
The install script does _not_ need to be run as root, unless you wish
d24 11
a34 2
installation.  The script is written in a straightforward manner and
is commented.
a35 5
The install script optionally takes a directory into which to install
as an argument. By default it installs in /usr/local/lib/MLWorks. The
directory argument, if given, must be a full absolute path name.
Relative directory names, including those relative to home
directories, are not sufficient.
@


1.3
log
@Improve the wording slightly to avoid people trying to do relative path installations
@
text
@@


1.2
log
@Bring up to date with latest version of install
@
text
@d22 4
a25 1
as an argument. By default it installs in /usr/local/lib/MLWorks.
@


1.1
log
@new unit
Renamed from INSTALL to avoid name clash on the PC.
@
text
@d4 1
a4 1
building a correct MLWorks installation anywhere you choose.  At the
d6 3
a8 3
shell variables naming directories.  Tailor these to your local site
before running the script.  The recommended place to install MLWorks
is in /usr/local/MLWorks.
d10 2
a11 1
The install script does _not_ need to be run as root.  Files will be
d21 2
a22 20
The install script optionally takes a list of `packages' as arguments,
and will install only those packages.  By default it installs all of
them.  You can use this facility to restart a failed installation, or
to reinstall part of the distribution.

The directory `edlib' contains a version of the Edinburgh SML Library
with support for the MLWorks make system.  This library includes the
MLLex scanner generator and MLYacc parser generator.  The INSTALL script
in that directory should be used to install the library in a suitable
location.  The install procedures for mlworks and the Edinburgh library 
are completely separate.  To install the library in /usr/local/MLWorks/edlib,
change directory to the edlib directory, and use the command 
INSTALL -mlworks /usr/local/MLWorks/edlib.

To use the Edinburgh Library with the MLWorks make system, add the directories
"/usr/local/MLWorks/edlib/signatures" and "/usr/local/MLWorks/edlib/mlworks"
to your source path, either by setting the MLWORKS_SRC_PATH shell variable
or by calling Shell.Make.set_source_path.  You can put this call in your
.mlworks file if you want it to be evaluated every time you start mlworks.

@
