head	1.9;
access;
symbols
	MLW_daveb_inline_1_4_99:1.9.1
	MLWorks_21c0_1999_03_25:1.9
	MLWorks_20c1_1998_08_20:1.9
	MLWorks_20c0_1998_08_04:1.9
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.8
	MLWorks_20b1c1_1998_05_07:1.8
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.7
	MLWorks_20m1_1997_10_23:1.7
	MLWorks_11r1:1.7.3.1.1.1.1
	MLWorks_workspace_97:1.7.5
	MLWorks_dt_wizard:1.7.4
	MLWorks_11c0_1997_09_09:1.7.3.1.1.1
	MLWorks_10r3:1.7.3.1.3
	MLWorks_10r2_551:1.7.3.1.2
	MLWorks_11:1.7.3.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.7.3.1
	MLWorks_20m0_1997_06_20:1.7
	MLWorks_1_0_r2c2_1997_06_14:1.7.3.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.7.3.1
	MLWorks_1_0_r2c1_1997_05_12:1.7.3
	MLWorks_BugFix_1997_04_24:1.7
	MLWorks_1_0_r2_Win32_1997_04_11:1.7
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.1.1.1
	MLWorks_gui_1996_12_18:1.7.2
	MLWorks_1_0_Win32_1996_12_17:1.7.1
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.6.4.1.1.2
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.6.4.2
	MLWorks_1_0_Irix_1996_11_28:1.6.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.6.5
	MLWorks_1_0_Unix_1996_11_14:1.6.4
	MLWorks_Open_Beta2_1996_10_11:1.6.3
	MLWorks_License_dev:1.6.2
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.4
	MLWorks_Beta_1996_06_07:1.4
	MLWorks_Beta_1996_06_06:1.4
	MLWorks_Beta_1996_06_05:1.4
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4
	ML_beta_release_12/08/94:1.3
	ML_beta_release_03/08/94:1.3
	ML_revised_beta_release_25/05/94:1.3
	ML_final_beta_release_02/03/94:1.2
	mlworks-28-01-1994:1.2
	Release:1.1
	mlworks-beta-01-09-1993:1.1;
locks; strict;


1.9
date	98.07.07.10.26.41;	author jont;	state Exp;
branches
	1.9.1.1;
next	1.8;

1.8
date	98.04.15.14.21.22;	author johnh;	state Exp;
branches;
next	1.7;

1.7
date	96.12.05.11.38.19;	author daveb;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1
	1.7.5.1;
next	1.6;

1.6
date	96.08.19.16.51.56;	author andrews;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1
	1.6.4.1
	1.6.5.1;
next	1.5;

1.5
date	96.08.16.02.24.02;	author andrews;	state Exp;
branches;
next	1.4;

1.4
date	96.03.15.15.06.56;	author matthew;	state Exp;
branches;
next	1.3;

1.3
date	94.03.08.12.29.39;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	93.12.06.13.25.32;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	93.08.31.12.49.14;	author daveb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	93.08.31.12.49.14;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.25.57;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.07.16.16.28;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.10.17.11.35.50;	author hope;	state Exp;
branches;
next	;

1.6.4.1
date	96.11.14.13.04.05;	author hope;	state Exp;
branches
	1.6.4.1.1.1;
next	1.6.4.2;

1.6.4.2
date	96.12.05.12.16.28;	author daveb;	state Exp;
branches;
next	;

1.6.4.1.1.1
date	96.11.28.15.13.28;	author hope;	state Exp;
branches;
next	1.6.4.1.1.2;

1.6.4.1.1.2
date	96.12.05.12.23.57;	author daveb;	state Exp;
branches;
next	;

1.6.5.1
date	96.11.22.18.21.30;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	96.12.17.17.59.27;	author hope;	state Exp;
branches
	1.7.1.1.1.1;
next	;

1.7.1.1.1.1
date	97.02.24.11.51.03;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.12.18.09.54.47;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	97.05.12.10.49.32;	author hope;	state Exp;
branches
	1.7.3.1.1.1
	1.7.3.1.2.1
	1.7.3.1.3.1;
next	;

1.7.3.1.1.1
date	97.07.28.18.32.05;	author daveb;	state Exp;
branches
	1.7.3.1.1.1.1.1;
next	;

1.7.3.1.1.1.1.1
date	97.10.07.11.58.12;	author jkbrook;	state Exp;
branches;
next	;

1.7.3.1.2.1
date	97.09.08.17.25.16;	author daveb;	state Exp;
branches;
next	;

1.7.3.1.3.1
date	97.09.09.14.21.56;	author daveb;	state Exp;
branches;
next	;

1.7.4.1
date	97.09.10.19.40.58;	author brucem;	state Exp;
branches;
next	;

1.7.5.1
date	97.09.11.21.08.37;	author daveb;	state Exp;
branches;
next	;

1.9.1.1
date	99.04.01.18.07.11;	author daveb;	state Exp;
branches;
next	;


desc
@Manual page for mlbatch.
@


1.9
log
@[Bug #20122]
Move pervasive signatures into __pervasive_library.sml
@
text
@'\" t
.TH MLBATCH 1 1998-04-15 Harlequin MLWORKS
.SH NAME
mlbatch \- The MLWorks 2.0 batch compiler
.SH SYNOPSIS
.B mlbatch
[
.I options
]
.SH DESCRIPTION
.LP
The batch compiler uses the MLWorks project system to compile 
Standard ML source files with the suffix
.B .sml
into MLWorks object files.  Object files have the suffix
.B .mo
and are suitable for loading into
.BR mlrun (1)
or
.BR mlpervasive (1)
for execution.  The batch compiler requires a project file, 
which must have been previously created using the MLWorks GUI.
.LP
Dependencies between files must be specified by the 
.B require
reserved word, a language extension (see the
.I MLWorks User Guide
for details).
.LP
.B mlbatch
is a shell script which invokes
.BR mlrun (1)
on an ML image containing the MLWorks compiler.
.SH OPTIONS
.TP 6
.B -verbose
Enable verbose mode.  When in verbose mode the system will give
messages indicating the various options interpreted during argument
processing, otherwise it will not.
.TP
.B -silent
Disable verbose mode.
.TP
.B -project \fIfilename
Specifies the project file to use.  This must precede all the 
following options on the command line.
.TP
.B -mode \fIname
Specifies which mode to use.  The project must have been specified
earlier on the command line.  Reports an error if the mode does 
not exist in the specified project file.  This option overrides 
the setting of the current mode in the project file.  If no mode 
is specified on the command line, the current mode specified in 
the project file is used.  The modes 'Debug' and 'Release' exist
in every project.
.TP
.B -target \fIname
Specifies a target to recompile.  The project must have been 
specified earlier on the command line, and also reports an error
if the target does not exist in the specified project file.  
Multiple targets may be specified by repeated use of this option.
If any options are specified on the command line, the current 
targets set in the project file are ignored.  If no 
targets are specified on the command line, those specified as 
current in the project file are recompiled.
.TP
.B -configuration \fIname
If the project includes configurations, this specifies which one
to use.  The project must have been specified earlier on the 
command line and also reports an error if the configuration does 
not exist in the specified project file.  This option overrides 
the setting of the current configuration in the project file.
If a project includes configurations, and none is specified on 
the command line, the current configuration specified in the 
project file is used.
.TP
.B -object-path \fIdirectory
Specifies the directory in which to find and/or put the object
files.  The project must have been specified earlier on the 
command line.  This overrides the specification in the project
file.  If the directory includes the string "%S", this is
expanded to the directory containing the source file.
.TP
.B -build 
Builds the specified project using the current targets in the 
current configuration (if any) with the current mode.
.TP
.B -show-build 
Show the files that would be recompiled by 
.B -build 
option.
.TP
.B -list-objects
Show all the files that are used in the building of the current 
targets.
.TP
.B -source-path \fIpath
Sets the path that
.B mlbatch
searches for source files.
.I path
is a colon-separated list of directories.  For example,
~/ml/src:/usr/sml/src.  The default path contains the current
directory and the directory in which 
.B MLWorks
was installed.
.TP
.B -compile \fIsource-file-names
Process the source files in compile mode.  Inclusion of the 
.B .sml 
suffix in source file names is optional.  For each file compiled,
produces an MLWorks object file with a name that has the same stem as
the source file, but a   
.B .mo
suffix.
.TP
.B -check-dependencies \fIsource-file-names
Process the source files in check-dependencies mode.  Inclusion of the 
.B .sml 
suffix in source file names is optional.  Produces a list of the
source files that would be compiled if you submitted the same list of
files to the
.B -compile
option.
.TP
.B -old-definition \fIon/off
When set to on, use the semantics of the old version of SML, dating back to
1990.  Default set to off.
.TP
.B -<option> \fI<option_arg>
The following compiler/language options may be set on the command 
line.  These override the settings in the mode specified.  They 
must follow the -mode argument, which must be present.
.TP
.B -debug \fIon/off
Generate (set to on) debugging information for all declarations in 
the files compiled.  
.TP
.B -debug-variables \fIon/off
Generate (set to on) variable debugging information.
.TP
.B -trace-profile \fIon/off
Generate code that can (or cannot) be traced or profiled with the call 
counter, for all declarations in the files compiled.  Default off.
.TP
.B -interrupt \fIon/off
Interruptable code enabled (set to on) or disabled.
.TP
.B -mips-r4000-and-later \fIon/off
Compile code for MIPS R400 and later versions.  Default on.
.TP
.B -sparc-v7 \fIon/off
Compile code for version 7 of the SPARC architecture.  Default off.
.TP
.SH ENVIRONMENT
.TP 20
.SB MLWORKS_SRC_PATH
If set, its value overrides the default search path, which contains the
current directory and the directory in which MLWorks was installed.  (The
.B -source-path 
flag, in turn, overrides this value.) 
.SH FILES
.PD 0
.LP
.B $MLWORKSDIR/pervasive/__builtin_library.mo
.LP
.B $MLWORKSDIR/pervasive/__pervasive_library.mo
.LP
.RS 4
MLWorks pervasive library object files used by 
.B mlbatch
when compiling all SML sources submitted to it.
.PD
.RE
.PD 0
.LP
.B $IMAGEDIR/batch.img
.LP
.RS 4
The batch compiler image.
.PD
.RE
.SH SEE ALSO
.BR mlimage (1),
.BR mlrun (1), 
.BR mlpervasive (1),
.BR mlworks (1),
.BR mlworks-basis (1)
.LP
.I MLWorks User Guide
@


1.9.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@@


1.8
log
@[Bug #30319]
Make documentation consistent with available options.
@
text
@a166 14
.B $MLWORKSDIR/pervasive/string.mo
.LP
.B $MLWORKSDIR/pervasive/array.mo
.LP
.B $MLWORKSDIR/pervasive/vector.mo
.LP
.B $MLWORKSDIR/pervasive/bits.mo
.LP
.B $MLWORKSDIR/pervasive/bytearray.mo
.LP
.B $MLWORKSDIR/pervasive/mlworks.mo
.LP
.B $MLWORKSDIR/pervasive/general.mo
.LP
@


1.7
log
@Minor updates for release.
@
text
@d2 1
a2 1
.TH MLBATCH 1 1996-08-15 Harlequin MLWORKS
d4 1
a4 1
mlbatch \- MLWorks batch compiler
a9 1
.I source-file-names
d12 2
a13 4
.B mlbatch
is a Standard ML compiler which is part of the
.B MLWorks
system.  It compiles Standard ML source files with the suffix
d21 2
a22 1
for execution.
d24 1
a24 11
.B mlbatch
can operate in one of two modes:
.I compile
and
.I check-dependencies.
In compile mode the compiler checks the consistency of the specified
sources and any source files on which they depend, and compiles all
source files that have changed since they were last compiled.  In
check-dependencies mode the compiler reports which files need to be
compiled, without actually compiling them. 
Dependencies between files must be specified by the
d39 1
a39 1
processing. Otherwise it will not.
d41 1
a41 1
.B -quiet
d44 52
a95 7
.B -pervasive-dir \fIdirectory
Specify the directory in which the object files for the pervasive
environment are found.  By default, 
.B mlbatch
uses the directory that was specified when
.B MLWorks
was installed from the distribution.
a107 16
.B -debug on
Generate debugging information for all declarations in the files
compiled.  
.TP
.B -debug off
Do not generate debugging information for all declarations in the
files compiled.  
.TP
.B -trace-profile on
Generate code that can be traced or profiled with the call counter,
for all declarations in the files compiled.  
.TP
.B -trace-profile off
Generate code that can not be traced or profiled with the call
counter, for all declarations in the files compiled.
.TP
d125 30
a156 6
.SB MLWORKS_PERVASIVE
If set, its value overrides the default location for the
.B MLWorks
pervasive library.  (The -pervasive-dir flag,
in turn, overrides this value.)
.TP
d160 2
a161 1
-source-path flag, in turn, overrides this value.) 
@


1.7.5.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@@


1.7.4.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@@


1.7.3.1
log
@branched from 1.7
@
text
@@


1.7.3.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.7.3.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.7.3.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.7.3.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.7.2.1
log
@branched from 1.7
@
text
@@


1.7.1.1
log
@branched from 1.7
@
text
@@


1.7.1.1.1.1
log
@branched from 1.7.1.1
@
text
@@


1.6
log
@Correct error naming pervasive directory path flag.
@
text
@d10 1
a10 1
.I source-filenames
d16 1
a16 2
system.  It
compiles Standard ML source files with the suffix
d18 1
a18 3
into MLWorks module files.
Module files have the
suffix
d32 5
a36 5
sources and any modules on which they depend, and compiles all those
that are themselves out of date or that depend on out of date modules.
In check-dependencies mode the compiler reports which modules need to be
compiled, without actually compiling them.
Dependencies between modules must be specified by the
d38 2
a39 2
language extension (see
.I MLWorks: User's Guide to the Environment
d43 1
a43 1
is actually a shell script which invokes
d45 1
a45 1
on an ML image containing the ML compiler.
d57 2
a58 2
Specify the directory in which the module files for the pervasive environment
are found.  By default, 
d60 1
a60 1
uses the directory specified when
d69 3
a71 3
is a colon-separated list of directories, e.g. ~/ml/src:/usr/sml/src.
The default path contains the current directory and the directory in
which 
d76 2
a77 2
Generate debugging information within the object files, for later use
by the debugger.
d80 2
a81 2
Do not generate debugging information in the output files. Output
files without debugging information will be smaller.
d84 2
a85 2
Generate code that can be traced or profiled with the call counter, at
the cost of some extra space.
d88 2
a89 1
Generate code that can not be traced or profiled with the call counter.
d91 15
d107 1
a107 5
Process the following modules in compile mode (see above).
.TP
.B -check-dependencies
Shows which modules would be compiled by 
.B -compile.
d142 3
a144 1
Inital modules required by all SML modules compiled by MLWorks.
d156 1
a156 1
.BR mlimage(1),
d162 1
a162 1
.I MLWorks: User's Guide to the Environment
@


1.6.5.1
log
@branched from 1.6
@
text
@@


1.6.4.1
log
@branched from 1.6
@
text
@@


1.6.4.2
log
@Minor updates for release.
@
text
@d10 1
a10 1
.I source-file-names
d16 2
a17 1
system.  It compiles Standard ML source files with the suffix
d19 3
a21 1
into MLWorks object files.  Object files have the suffix
d35 5
a39 5
sources and any source files on which they depend, and compiles all
source files that have changed since they were last compiled.  In
check-dependencies mode the compiler reports which files need to be
compiled, without actually compiling them. 
Dependencies between files must be specified by the
d41 2
a42 2
reserved word, a language extension (see the
.I MLWorks User Guide
d46 1
a46 1
is a shell script which invokes
d48 1
a48 1
on an ML image containing the MLWorks compiler.
d60 2
a61 2
Specify the directory in which the object files for the pervasive
environment are found.  By default, 
d63 1
a63 1
uses the directory that was specified when
d72 3
a74 3
is a colon-separated list of directories.  For example,
~/ml/src:/usr/sml/src.  The default path contains the current
directory and the directory in which 
d79 2
a80 2
Generate debugging information for all declarations in the files
compiled.  
d83 2
a84 2
Do not generate debugging information for all declarations in the
files compiled.  
d87 2
a88 2
Generate code that can be traced or profiled with the call counter,
for all declarations in the files compiled.  
d91 1
a91 2
Generate code that can not be traced or profiled with the call
counter, for all declarations in the files compiled.
d93 2
a94 8
.B -compile \fIsource-file-names
Process the source files in compile mode.  Inclusion of the 
.B .sml 
suffix in source file names is optional.  For each file compiled,
produces an MLWorks object file with a name that has the same stem as
the source file, but a   
.B .mo
suffix.
d96 3
a98 8
.B -check-dependencies \fIsource-file-names
Process the source files in check-dependencies mode.  Inclusion of the 
.B .sml 
suffix in source file names is optional.  Produces a list of the
source files that would be compiled if you submitted the same list of
files to the
.B -compile
option.
d133 1
a133 3
MLWorks pervasive library object files used by 
.B mlbatch
when compiling all SML sources submitted to it.
d145 1
a145 1
.BR mlimage (1),
d151 1
a151 1
.I MLWorks User Guide
@


1.6.4.1.1.1
log
@branched from 1.6.4.1
@
text
@@


1.6.4.1.1.2
log
@Minor updates for release.
@
text
@d10 1
a10 1
.I source-file-names
d16 2
a17 1
system.  It compiles Standard ML source files with the suffix
d19 3
a21 1
into MLWorks object files.  Object files have the suffix
d35 5
a39 5
sources and any source files on which they depend, and compiles all
source files that have changed since they were last compiled.  In
check-dependencies mode the compiler reports which files need to be
compiled, without actually compiling them. 
Dependencies between files must be specified by the
d41 2
a42 2
reserved word, a language extension (see the
.I MLWorks User Guide
d46 1
a46 1
is a shell script which invokes
d48 1
a48 1
on an ML image containing the MLWorks compiler.
d60 2
a61 2
Specify the directory in which the object files for the pervasive
environment are found.  By default, 
d63 1
a63 1
uses the directory that was specified when
d72 3
a74 3
is a colon-separated list of directories.  For example,
~/ml/src:/usr/sml/src.  The default path contains the current
directory and the directory in which 
d79 2
a80 2
Generate debugging information for all declarations in the files
compiled.  
d83 2
a84 2
Do not generate debugging information for all declarations in the
files compiled.  
d87 2
a88 2
Generate code that can be traced or profiled with the call counter,
for all declarations in the files compiled.  
d91 1
a91 2
Generate code that can not be traced or profiled with the call
counter, for all declarations in the files compiled.
d93 2
a94 8
.B -compile \fIsource-file-names
Process the source files in compile mode.  Inclusion of the 
.B .sml 
suffix in source file names is optional.  For each file compiled,
produces an MLWorks object file with a name that has the same stem as
the source file, but a   
.B .mo
suffix.
d96 3
a98 8
.B -check-dependencies \fIsource-file-names
Process the source files in check-dependencies mode.  Inclusion of the 
.B .sml 
suffix in source file names is optional.  Produces a list of the
source files that would be compiled if you submitted the same list of
files to the
.B -compile
option.
d133 1
a133 3
MLWorks pervasive library object files used by 
.B mlbatch
when compiling all SML sources submitted to it.
d145 1
a145 1
.BR mlimage (1),
d151 1
a151 1
.I MLWorks User Guide
@


1.6.3.1
log
@branched from 1.6
@
text
@@


1.6.2.1
log
@branched from 1.6
@
text
@@


1.6.1.1
log
@branched from 1.6
@
text
@@


1.5
log
@Updating for MLWorks 1.0 unrestricted Beta release.
@
text
@d104 1
a104 1
pervasive library.  (The -pervasive flag,
@


1.4
log
@Hyphenizing command line arguments
@
text
@d2 1
a2 1
.TH MLBATCH 1 1993-08-24 Harlequin MLWORKS
d34 3
a36 3
In compile mode the compiler checks the consistency of the specified sources
and any modules on which they depend, and compiles all those that are themselves
out of date or that depend on out of date modules.
d42 1
a42 1
.I MLWorks User Guide
d73 4
a76 1
The default path contains just the current directory.
d97 2
a98 1
Process the following modules in check-dependencies mode (see above).
d108 3
a110 2
If set, its value overrides the default search path, which contains just the
current directory.  (The -source-path flag, in turn, overrides this value.)
d128 2
d145 1
d148 2
a149 1
.BR mlworks (1)
d151 1
a151 2
.I MLWorks User's Guide

@


1.3
log
@Removed documentation of bogus options.
@
text
@d33 1
a33 1
.I check_dependencies.
d37 1
a37 1
In check_dependencies mode the compiler reports which modules need to be
d59 1
a59 1
.B -pervasive_dir \fIdirectory
d67 1
a67 1
.B -source_path \fIpath
d83 1
a83 1
.B -trace_profile on
d87 1
a87 1
.B -trace_profile off
d93 2
a94 2
.B -check_dependencies
Process the following modules in check_dependencies mode (see above).
d105 1
a105 1
current directory.  (The -source_path flag, in turn, overrides this value.)
@


1.2
log
@The old -compile option is now hidden from users, and the -recompile
option is called -compile.
@
text
@d84 2
a85 2
Generate calls to the profiler within the code. This will enable
profiling to give procedure call counts if requested.
d88 1
a88 1
Do not generate profiling calls within the code.
a89 6
.B -trace on
Generate tracing instructions within the code.
.TP
.B -trace off
Do not generate tracing instructions within the code.
.TP
a94 6
.TP
.B -save \fIfilename
Save an image of the batch compiler with the current state in
.I filename.
This option is used to build the batch compiler image in the first
place and should not be required by users.
@


1.1
log
@Initial revision
@
text
@d30 2
a31 3
can operate in one of three modes:
.IR compile ,
.I recompile
d34 6
a39 7
In compile mode each source file specified is compiled into a module
file without examining its dependencies.  In recompile mode the
compiler will check the consistency of module files on which the
specified sources depend, and compile them first if necessary.
In check_dependencies mode the compiler reports which files would be
compiled in recompile mode, without actually compiling them.
Dependencies are specified by the
a97 3
.TP
.B -recompile
Process the following modules in recompile mode (see above).
@


1.1.1.1
log
@Fork for bug fixing
@
text
@@
