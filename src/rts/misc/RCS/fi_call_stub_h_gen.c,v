head	1.2;
access;
symbols
	MLW_daveb_inline_1_4_99:1.2.13
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_MM_adapt:1.2.12
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_workspace_97:1.2.11
	MLWorks_dt_wizard:1.2.10
	MLWorks_10r3:1.2.9.1.3
	MLWorks_10r2_551:1.2.9.1.2
	MLWorks_11:1.2.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.2.9.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.2.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.2.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.2.9
	MLWorks_BugFix_1997_04_24:1.2
	MLWorks_1_0_r2_Win32_1997_04_11:1.2
	MLWorks_1_0_r2_Unix_1997_04_04:1.2
	MM_ML_release_korma_1997_04_01:1.2
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.2.7.1.1
	MLWorks_gui_1996_12_18:1.2.8
	MLWorks_1_0_Win32_1996_12_17:1.2.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.2.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.2.4.1
	JFHrts:1.2.6
	MLWorks_1_0_Irix_1996_11_28:1.2.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.2.5
	MLWorks_1_0_Unix_1996_11_14:1.2.4
	MLWorks_Open_Beta2_1996_10_11:1.2.3
	MLWorks_License_dev:1.2.2
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ * @;


1.2
date	96.05.14.11.22.57;	author stephenb;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1
	1.2.5.1
	1.2.6.1
	1.2.7.1
	1.2.8.1
	1.2.9.1
	1.2.10.1
	1.2.11.1
	1.2.12.1
	1.2.13.1;
next	1.1;

1.1
date	95.07.21.16.29.27;	author nickb;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.25.46;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.10.07.16.16.16;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.17.11.35.36;	author hope;	state Exp;
branches;
next	;

1.2.4.1
date	96.11.14.13.01.13;	author hope;	state Exp;
branches
	1.2.4.1.1.1;
next	;

1.2.4.1.1.1
date	96.11.28.15.11.19;	author hope;	state Exp;
branches;
next	;

1.2.5.1
date	96.11.22.18.19.05;	author hope;	state Exp;
branches;
next	;

1.2.6.1
date	96.12.17.10.05.48;	author hope;	state Exp;
branches;
next	;

1.2.7.1
date	96.12.17.17.57.23;	author hope;	state Exp;
branches
	1.2.7.1.1.1;
next	;

1.2.7.1.1.1
date	97.02.24.11.49.06;	author hope;	state Exp;
branches;
next	;

1.2.8.1
date	96.12.18.09.52.03;	author hope;	state Exp;
branches;
next	;

1.2.9.1
date	97.05.12.10.47.03;	author hope;	state Exp;
branches
	1.2.9.1.1.1
	1.2.9.1.2.1
	1.2.9.1.3.1;
next	;

1.2.9.1.1.1
date	97.07.28.18.26.31;	author daveb;	state Exp;
branches;
next	;

1.2.9.1.2.1
date	97.09.08.17.19.41;	author daveb;	state Exp;
branches;
next	;

1.2.9.1.3.1
date	97.09.09.14.15.47;	author daveb;	state Exp;
branches;
next	;

1.2.10.1
date	97.09.10.19.33.04;	author brucem;	state Exp;
branches;
next	;

1.2.11.1
date	97.09.11.21.02.18;	author daveb;	state Exp;
branches;
next	;

1.2.12.1
date	97.10.31.13.45.09;	author nickb;	state Exp;
branches;
next	;

1.2.13.1
date	99.04.01.18.01.44;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Replaced the old generation system.
@


1.2
log
@Fix warning about lack of prototype for `exit'.
Also added a comment explaining why various extern declarations are
included in the code (crappy SunOS header files).
@
text
@/*  ==== FOREIGN INTERFACE CALL STUB GENERATOR ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Implementation
 *  --------------
 *
 *  Revision Log
 *  ------------
 *  $Log: misc:fi_call_stub_h_gen.c,v $
 * Revision 1.1  1995/07/21  16:29:27  nickb
 * new unit
 * Replaced the old generation system.
 *
 */

#include <stdio.h>
#include <stdlib.h>		/* exit */


/* The following are here just for SunOS since its header files don't
 * contain prototypes -- and when they do they are vacuous ones
 */
extern int    printf(const char *, ...);
extern int    fprintf(FILE *stream, const char *, ...);
extern int    sscanf(const char *, const char *, ...);


static void nl(void)
{
  printf("\n");
}

extern int main(int argc, char *argv[])
{
  int size, code;

  if (argc == 2)
    code = sscanf(argv[1],"%d",&size);
  else
    code = 0;
  
  if (code != 1) {
    fprintf(stderr,
	    "Usage : %s <size> - makes foreign call stub of size <size>\n",
	    argv[0]);
    exit(1);
  }

  printf("   /*=====================================================*/\n");
  printf("   /*                                                     */\n");
  printf("   /*             FOREIGN INTERFACE CALL STUB             */\n");
  printf("   /*             ---------------------------             */\n");
  printf("   /*                                                     */\n");
  printf("   /*   Generated by rts/misc/fi_call_stub_h_gen.c        */\n");
  printf("   /*                                                     */\n");
  printf("   /*   (C) 1995 Harlequin Ltd.                           */\n");
  printf("   /*=====================================================*/\n");
  nl();
  printf("#include \"types.h\"\n");
  printf("#include \"mltypes.h\"\n");
  nl();
  printf("#define MAX_FI_ARG_LIMIT\t\t%d\n",size);
  printf("   /*                                                       \n");
  printf("    *  Gives the maximum no. of arguments that the FI can   \n");
  printf("    *  manage using the call stub.                          \n");
  printf("    */                                                      \n");
  nl();
  nl();
  printf("extern void *call_ffun(void *, void *[], int);              \n");
  printf("   /*                                                       \n");
  printf("    *  call_ffun(function, arg_vector, num_of_args) : result\n");
  printf("    *                                                       \n");
  printf("    *  Foreign call stub code  (see gen/fi_call_code.c)     \n");
  printf("    *  That code is automatically generated.                \n");
  printf("    *  (see misc/fi_call_code_c_gen.c)                      \n");
  printf("    */                                                      \n");
  nl();
  nl();
  printf("extern mlval call_ffun_error(int);                          \n");
  printf("   /*                                                       \n");
  printf("    *  call_ffun_error(num_of_args)                         \n");
  printf("    *                                                       \n");
  printf("    *  Reports error for request for too many foreign       \n");
  printf("    *  arguments. Can provide an mlval result.              \n");
  printf("    *  (implemented externally)                             \n");
  printf("    */                                                      \n");
  nl();
  return 0;
}
@


1.2.13.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.2.12.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.2.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.2.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.2.9.1
log
@branched from 1.2
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.2.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a10 3
 * Revision 1.2.9.1  1997/05/12  10:47:03  hope
 * branched from 1.2
 *
@


1.2.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a10 3
 * Revision 1.2.9.1  1997/05/12  10:47:03  hope
 * branched from 1.2
 *
@


1.2.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a10 3
 * Revision 1.2.9.1  1997/05/12  10:47:03  hope
 * branched from 1.2
 *
@


1.2.8.1
log
@branched from 1.2
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.2.7.1
log
@branched from 1.2
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.2.7.1.1.1
log
@branched from 1.2.7.1
@
text
@a10 3
 * Revision 1.2.7.1  1996/12/17  17:57:23  hope
 * branched from 1.2
 *
@


1.2.6.1
log
@branched from 1.2
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.2.5.1
log
@branched from 1.2
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.2.4.1
log
@branched from 1.2
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.2.4.1.1.1
log
@branched from 1.2.4.1
@
text
@a10 3
 * Revision 1.2.4.1  1996/11/14  13:01:13  hope
 * branched from 1.2
 *
@


1.2.3.1
log
@branched from 1.2
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a10 5
 * Revision 1.2  1996/05/14  11:22:57  stephenb
 * Fix warning about lack of prototype for `exit'.
 * Also added a comment explaining why various extern declarations are
 * included in the code (crappy SunOS header files).
 *
@


1.1
log
@new unit
Replaced the old generation system.
@
text
@d10 5
a14 1
 *  $Log$
d18 1
d20 4
d27 1
@
