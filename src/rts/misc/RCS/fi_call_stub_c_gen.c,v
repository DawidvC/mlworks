head	1.3;
access;
symbols
	MLW_daveb_inline_1_4_99:1.3.13
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_MM_adapt:1.3.12
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_workspace_97:1.3.11
	MLWorks_dt_wizard:1.3.10
	MLWorks_10r3:1.3.9.1.3
	MLWorks_10r2_551:1.3.9.1.2
	MLWorks_11:1.3.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.9.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.9
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MM_ML_release_korma_1997_04_01:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.7.1.1
	MLWorks_gui_1996_12_18:1.3.8
	MLWorks_1_0_Win32_1996_12_17:1.3.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	JFHrts:1.3.6
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3;
locks; strict;
comment	@ * @;


1.3
date	95.08.04.14.20.01;	author nickb;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1
	1.3.9.1
	1.3.10.1
	1.3.11.1
	1.3.12.1
	1.3.13.1;
next	1.2;

1.2
date	95.07.24.13.45.16;	author nickb;	state Exp;
branches;
next	1.1;

1.1
date	95.07.21.16.29.15;	author nickb;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.21.37;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.11.39;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.30.18;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.12.56.16;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.15.06.44;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.14.26;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.10.01.14;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.17.17.52.57;	author hope;	state Exp;
branches
	1.3.7.1.1.1;
next	;

1.3.7.1.1.1
date	97.02.24.11.43.49;	author hope;	state Exp;
branches;
next	;

1.3.8.1
date	96.12.18.09.47.30;	author hope;	state Exp;
branches;
next	;

1.3.9.1
date	97.05.12.10.39.55;	author hope;	state Exp;
branches
	1.3.9.1.1.1
	1.3.9.1.2.1
	1.3.9.1.3.1;
next	;

1.3.9.1.1.1
date	97.07.28.18.27.05;	author daveb;	state Exp;
branches;
next	;

1.3.9.1.2.1
date	97.09.08.17.20.14;	author daveb;	state Exp;
branches;
next	;

1.3.9.1.3.1
date	97.09.09.14.16.19;	author daveb;	state Exp;
branches;
next	;

1.3.10.1
date	97.09.10.19.34.00;	author brucem;	state Exp;
branches;
next	;

1.3.11.1
date	97.09.11.21.03.07;	author daveb;	state Exp;
branches;
next	;

1.3.12.1
date	97.10.31.13.46.00;	author nickb;	state Exp;
branches;
next	;

1.3.13.1
date	99.04.01.18.02.14;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Replaced the old generation system.
@


1.3
log
@Add stdio and stdarg inclusions.
@
text
@/*  ==== FOREIGN INTERFACE CALL STUB GENERATOR ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Implementation
 *  --------------
 *
 *  Revision Log
 *  ------------
 *  $Log: misc:fi_call_stub_c_gen.c,v $
 * Revision 1.2  1995/07/24  13:45:16  nickb
 * Add prototypes.
 *
 * Revision 1.1  1995/07/21  16:29:15  nickb
 * new unit
 * Replaced the old generation system.
 *
 */

#include "ansi.h"
#include <stdio.h>
#include <stdarg.h>

/* call stub file name */
#define filename       "fi_call_stub"

/* call stub function name */
#define vcall_ffun     "call_ffun"

/* function variable name */
#define vffun          "ffun"

/* argument vector name */
#define vargv          "argv"

/* argument size name */
#define vsize          "size"

/* argument (and return) type */
#define argtype        "void *"

/* Formatting sizes */
#define cwidth         5
#define cwidth_1       (cwidth - 1)

/* Definitions */
static void nl(void)
{
  printf("\n");
}

static int indent_level = 0;

static void push(int n)
{
  indent_level += n;
}

static void pop(int n)
{
  indent_level -= n;
  if (indent_level < 0) {
    fprintf(stderr, "Indentation level fell below 0\n");
    exit (1);
  }
}
 
static void line(const char *string, ...)
{
  int i = indent_level;
  va_list arg;

  va_start (arg,string);
  while(i--)
    putchar(' ');
  vfprintf(stdout,string,arg);
  va_end (arg);
}

static void print_cast(int args)
{
  int i, j, ln, cn;

  ln = (args-1) / cwidth;
  cn = (args-1) % cwidth +1;

  printf("((%s(*)\n", argtype);
  line("(");
  if (ln > 0) {
    for (i=0; i<ln; i++) {
      for (j=0; j<cwidth; j++)
	printf("%s, ", argtype);
      printf("\n");
      line(" ");
    }
  }

  if (cn > 0) {
    cn--;
    for (i=0; i<cn; i++)
      printf("%s, ", argtype);
    printf("%s", argtype);
  }
  printf("))%s)",vffun);
}

static void print_args(int args)
{
  int i, j, ln, cn, idx;

  ln = (args-1) / cwidth;
  cn = (args-1) % cwidth + 1;

  idx = 0;

  printf("(");
  if (ln > 0) {
    for (i=0;i<ln;i++) {
      for (j=0;j<cwidth;j++) {
	printf("%s[%d], ", vargv, idx);
	idx++;
      }
      printf("\n");
      line(" ");
    }
  }
  if (cn > 0) {
    cn--;
    for (i=0;i<cn;i++) {
      printf("%s[%d], ", vargv, idx);
      idx++;
    }
    printf("%s[%d]", vargv, idx);
  }
  printf(")");
}

static void print_switch_case(int i)
{
  line("case %d : \n", i);
  push(2);
  line("return(");
  push(7);
  print_cast(i);
  if (i > 0) {
    printf("\n");
    line("");
  }
  print_args(i);
  pop(7);
  printf(");\n");
  pop(2);
  return;
}

extern int main(int argc, char *argv[])
{
  int size, i, code;

  if (argc == 2)
    code = sscanf(argv[1],"%d",&size);
  else
    code = 0;
  
  if (code != 1) {
    fprintf(stderr,
	    "Usage : %s <size> - makes foreign call stub of size <size>\n",
	    argv[0]);
    exit(1);
  }

  printf("   /*=====================================================*/\n");
  printf("   /*                                                     */\n");
  printf("   /*             FOREIGN INTERFACE CALL STUB             */\n");
  printf("   /*             ---------------------------             */\n");
  printf("   /*                                                     */\n");
  printf("   /*   Generated by rts/misc/fi_call_stub_c_gen.c        */\n");
  printf("   /*                                                     */\n");
  printf("   /*   (C) 1995 Harlequin Ltd.                           */\n");
  printf("   /*=====================================================*/\n");
  nl();
  printf("#include \"%s.h\"\n",filename);
  nl();
  printf("%s%s(void *%s, %s%s[], int %s)\n"
	 , argtype, vcall_ffun, vffun, argtype, vargv, vsize);
  printf("{\n");
  push(2);
  line("switch (%s) {\n",vsize);
  push(2);
  for (i=0; i<=size;i++)
    print_switch_case(i);
  line("default : \n");
  line("  return((%s)%s_error(%s));\n",argtype,vcall_ffun,vsize);
  pop(2);
  line("}\n");
  pop(2);
  printf("}\n");
  return(0);
}
@


1.3.13.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.3.12.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.3.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.3.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.3.9.1
log
@branched from 1.3
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.3.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a10 3
 * Revision 1.3.9.1  1997/05/12  10:39:55  hope
 * branched from 1.3
 *
@


1.3.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a10 3
 * Revision 1.3.9.1  1997/05/12  10:39:55  hope
 * branched from 1.3
 *
@


1.3.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a10 3
 * Revision 1.3.9.1  1997/05/12  10:39:55  hope
 * branched from 1.3
 *
@


1.3.8.1
log
@branched from 1.3
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.3.7.1
log
@branched from 1.3
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.3.7.1.1.1
log
@branched from 1.3.7.1
@
text
@a10 3
 * Revision 1.3.7.1  1996/12/17  17:52:57  hope
 * branched from 1.3
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a10 3
 * Revision 1.3.4.1  1996/11/14  12:56:16  hope
 * branched from 1.3
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a10 3
 * Revision 1.3  1995/08/04  14:20:01  nickb
 * Add stdio and stdarg inclusions.
 *
@


1.2
log
@Add prototypes.
@
text
@d11 3
d21 2
@


1.1
log
@new unit
Replaced the old generation system.
@
text
@d10 5
a14 1
 *  $Log$
d17 1
a17 6
#include <stdio.h>
#include <fcntl.h>
#include <stdarg.h>

extern int    printf(const char *, ...);
extern int    sscanf(const char *, const char *, ...);
@
