head	1.5;
access;
symbols
	MLW_daveb_inline_1_4_99:1.5.1
	MLWorks_21c0_1999_03_25:1.5
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_MM_adapt:1.3.12
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_11r1:1.3.9.1.1.1.1
	MLWorks_workspace_97:1.3.11
	MLWorks_dt_wizard:1.3.10
	MLWorks_11c0_1997_09_09:1.3.9.1.1.1
	MLWorks_10r3:1.3.9.1.3
	MLWorks_10r2_551:1.3.9.1.2
	MLWorks_11:1.3.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.9.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.9
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MM_ML_release_korma_1997_04_01:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.7.1.1
	MLWorks_gui_1996_12_18:1.3.8
	MLWorks_1_0_Win32_1996_12_17:1.3.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	JFHrts:1.3.6
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3
	hope_poo:1.2.1
	ML_beta_release_12/08/94:1.2.1.1
	ML_beta_release_03/08/94:1.2;
locks; strict;
comment	@ * @;


1.5
date	98.08.21.16.34.08;	author jont;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	98.02.23.18.24.07;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	96.02.14.15.06.11;	author jont;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1
	1.3.9.1
	1.3.10.1
	1.3.11.1
	1.3.12.1;
next	1.2;

1.2
date	94.06.09.14.43.21;	author nickh;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	94.06.09.11.11.42;	author nickh;	state Exp;
branches;
next	;

1.2.1.1
date	95.07.05.10.30.40;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.21.16;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.11.16;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.29.49;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.12.55.44;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.15.06.23;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.14.03;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.10.00.51;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.17.17.52.34;	author hope;	state Exp;
branches
	1.3.7.1.1.1;
next	;

1.3.7.1.1.1
date	97.02.24.11.43.22;	author hope;	state Exp;
branches;
next	;

1.3.8.1
date	96.12.18.09.47.06;	author hope;	state Exp;
branches;
next	;

1.3.9.1
date	97.05.12.10.39.31;	author hope;	state Exp;
branches
	1.3.9.1.1.1
	1.3.9.1.2.1
	1.3.9.1.3.1;
next	;

1.3.9.1.1.1
date	97.07.28.18.29.29;	author daveb;	state Exp;
branches
	1.3.9.1.1.1.1.1;
next	;

1.3.9.1.1.1.1.1
date	97.10.07.11.55.19;	author jkbrook;	state Exp;
branches;
next	;

1.3.9.1.2.1
date	97.09.08.17.22.28;	author daveb;	state Exp;
branches;
next	;

1.3.9.1.3.1
date	97.09.09.14.18.31;	author daveb;	state Exp;
branches;
next	;

1.3.10.1
date	97.09.10.19.38.04;	author brucem;	state Exp;
branches;
next	;

1.3.11.1
date	97.09.11.21.05.46;	author daveb;	state Exp;
branches;
next	;

1.3.12.1
date	97.10.31.13.48.50;	author nickb;	state Exp;
branches;
next	;

1.5.1.1
date	99.04.01.18.04.30;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.5
log
@[Bug #30108]
Implement DLL based ML code
@
text
@/*  ==== GLOBAL MODULE TABLE ====
 *
 *  Copyright (C) 1992 Harlequin Ltd.
 *
 *  Implementation
 *  --------------
 *  The module table is an association list of ML values.
 *
 *  Revision Log
 *  ------------
 *  $Log: src:modules.c,v $
 * Revision 1.4  1998/02/23  18:24:07  jont
 * [Bug #70018]
 * Modify declare_root to accept a second parameter
 * indicating whether the root is live for image save
 *
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
 * Revision 1.2  1994/06/09  14:43:21  nickh
 * new file
 *
 * Revision 1.1  1994/06/09  11:11:42  nickh
 * new file
 *
 *  Revision 1.19  1993/11/22  16:51:26  jont
 *  Added extra function to lookup module timestamp
 *  Changed mt_add to accept extra parameter for module timestamp
 *
 *  Revision 1.18  1993/08/26  19:08:14  daveb
 *  mt_lookup no longer destructively modifies its argument.
 *
 *  Revision 1.17  1993/08/23  16:26:09  richard
 *  Added a missing root declaration in mt_lookup().
 *
 *  Revision 1.16  1993/08/17  16:39:05  daveb
 *  mt_lookup looks along the module path.
 *
 *  Revision 1.15  1993/04/19  14:45:16  richard
 *  Removed call to rusty polymorphic equality.
 *
 *  Revision 1.14  1993/02/01  14:48:21  richard
 *  Abolished SETFIELD and GETFIELD in favour of lvalue FIELD.
 *
 *  Revision 1.13  1992/09/23  08:19:55  clive
 *  Needed some roots in mt_add
 *
 *  Revision 1.12  1992/08/26  15:50:52  richard
 *  The module table is now a pervasive value.
 *
 *  Revision 1.11  1992/07/13  11:37:35  richard
 *  Implemented the module table as a proper ML list.
 *
 *  Revision 1.10  1992/07/08  17:17:43  clive
 *  MLNIL for test in lookup - not MLUNIT
 *
 *  Revision 1.9  1992/07/02  09:12:35  richard
 *  Returns MLERROR rather than IMPOSSIBLE in the error case.
 *
 *  Revision 1.8  1992/07/01  14:40:23  richard
 *  Changed modules to be an entirely ML type to make them storage
 *  manager independent.
 *
 *  Revision 1.7  1992/03/17  17:42:35  richard
 *  Rewrote and generalised.
 *
 *  Revision 1.6  1992/03/11  12:16:17  richard
 *  The module table is now a C entity containing many C roots rather than one
 *  ML object.  The ML approach failed because the ML object was _updated_
 *  causing havoc with the generation mechanism.
 */


#include <string.h>

#include "modules.h"
#include "diagnostic.h"
#include "mltypes.h"
#include "values.h"
#include "allocator.h"
#include "gc.h"
#include "pervasives.h"

mlval mt_empty(void)
{
  return(MLNIL);
}

mlval mt_add(mlval table, mlval name, mlval structure, mlval time)
{
  mlval triple = MLUNIT, new_table = MLUNIT;

  declare_root(&table, 0);
  declare_root(&name, 0);
  declare_root(&structure, 0);
  declare_root(&time, 0);

  triple = allocate_record(3);
  FIELD(triple, 0) = name;
  FIELD(triple, 1) = structure;
  FIELD(triple, 2) = time;
  retract_root(&table);
  retract_root(&name);
  retract_root(&structure);
  retract_root(&time);
  new_table = mlw_cons(triple, table);

  return(new_table);
}

mlval mt_lookup(mlval table, mlval name, mlval parent)
{
  char *end, *path;
  mlval mod_name, t;
  unsigned int index, name_len = CSTRINGLENGTH(name) + 1;

  declare_root(&table, 0);
  declare_root(&parent, 0);
  declare_root(&name, 0);
  mod_name = allocate_string (CSTRINGLENGTH(parent) + name_len);
  retract_root(&parent);
  retract_root(&name);
  retract_root(&table);

  path = CSTRING(parent);

  end = path + strlen (path) - 1;

  DIAGNOSTIC(2, "parent = %s, name = %s", CSTRING(parent), CSTRING(name));
  do {
    while (end > path && *end != '.')
      end--;

    if (end > path) {
      index = end - path + 1;
      strncpy (CSTRING(mod_name), path, index);
      end --;
    } else {
      index = 0;
    }

    strcpy (CSTRING(mod_name) + index, CSTRING(name));
    CSTRING(mod_name)[index + name_len] = '\0';

    t = table;

    while(!MLISNIL(t))
    {
      mlval triple = MLHEAD(t);
  
      if(!strcmp(CSTRING(FIELD(triple, 0)), CSTRING(mod_name)))
        return(FIELD(triple, 1));
  
      t = MLTAIL(t);
    }
  } while (index != 0);

  return(MLERROR);
}

mlval mt_lookup_time(mlval table, mlval name, mlval parent)
{
  char *end, *path;
  mlval mod_name, t;
  unsigned int index, name_len = CSTRINGLENGTH(name) + 1;

  declare_root(&table, 0);
  declare_root(&parent, 0);
  declare_root(&name, 0);
  mod_name = allocate_string (CSTRINGLENGTH(parent) + name_len);
  retract_root(&parent);
  retract_root(&name);
  retract_root(&table);

  path = CSTRING(parent);

  end = path + strlen (path) - 1;

  DIAGNOSTIC(2, "parent = %s, name = %s", CSTRING(parent), CSTRING(name));
  do {
    while (end > path && *end != '.')
      end--;

    if (end > path) {
      index = end - path + 1;
      strncpy (CSTRING(mod_name), path, index);
      end --;
    } else {
      index = 0;
    }

    strcpy (CSTRING(mod_name) + index, CSTRING(name));
    CSTRING(mod_name)[index + name_len] = '\0';

    t = table;

    while(!MLISNIL(t))
    {
      mlval triple = MLHEAD(t);
  
      if(!strcmp(CSTRING(FIELD(triple, 0)), CSTRING(mod_name)))
        return(FIELD(triple, 2));
  
      t = MLTAIL(t);
    }
  } while (index != 0);

  return(MLERROR);
}

extern void mt_update(mlval structure, mlval name, mlval time)
{
  mlval temp = mt_add(DEREF(modules), name, structure, time);
  /* Do NOT inline this */
  MLUPDATE(modules, 0, temp);
}
@


1.5.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a11 4
 * Revision 1.5  1998/08/21  16:34:08  jont
 * [Bug #30108]
 * Implement DLL based ML code
 *
@


1.4
log
@[Bug #70018]
Modify declare_root to accept a second parameter
indicating whether the root is live for image save
@
text
@d12 5
d82 1
d106 1
a106 1
  new_table = cons(triple, table);
d209 7
@


1.3
log
@Changing ERROR to MLERROR
@
text
@d12 3
d87 4
a90 4
  declare_root(&table);
  declare_root(&name);
  declare_root(&structure);
  declare_root(&time);
d111 3
a113 3
  declare_root(&table);
  declare_root(&parent);
  declare_root(&name);
d161 3
a163 3
  declare_root(&table);
  declare_root(&parent);
  declare_root(&name);
@


1.3.12.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a11 3
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
@


1.3.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a11 3
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
@


1.3.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a11 3
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
@


1.3.9.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
@


1.3.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a11 3
 * Revision 1.3.9.1  1997/05/12  10:39:31  hope
 * branched from 1.3
 *
@


1.3.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a11 3
 * Revision 1.3.9.1  1997/05/12  10:39:31  hope
 * branched from 1.3
 *
@


1.3.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a11 3
 * Revision 1.3.9.1  1997/05/12  10:39:31  hope
 * branched from 1.3
 *
@


1.3.9.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a11 3
 * Revision 1.3.9.1.1.1  1997/07/28  18:29:29  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3.8.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
@


1.3.7.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
@


1.3.7.1.1.1
log
@branched from 1.3.7.1
@
text
@a11 3
 * Revision 1.3.7.1  1996/12/17  17:52:34  hope
 * branched from 1.3
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a11 3
 * Revision 1.3.4.1  1996/11/14  12:55:44  hope
 * branched from 1.3
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/02/14  15:06:11  jont
 * Changing ERROR to MLERROR
 *
@


1.2
log
@new file
@
text
@d12 3
d50 1
a50 1
 *  Returns ERROR rather than IMPOSSIBLE in the error case.
d149 1
a149 1
  return(ERROR);
d199 1
a199 1
  return(ERROR);
@


1.2.1.1
log
@branched from 1.2
@
text
@a11 3
 * Revision 1.2  1994/06/09  14:43:21  nickh
 * new file
 *
@


1.1
log
@new file
@
text
@d11 4
a14 1
 *  $Log: modules.c,v $
@
