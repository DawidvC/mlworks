head	1.11;
access;
symbols
	MLW_daveb_inline_1_4_99:1.11.1
	MLWorks_21c0_1999_03_25:1.11
	MLWorks_20c1_1998_08_20:1.11
	MLWorks_20c0_1998_08_04:1.11
	MLWorks_20b2c2_1998_06_19:1.10
	MLWorks_20b2_Windows_1998_06_12:1.10
	MLWorks_20b1c1_1998_05_07:1.10
	MLWorks_20b0_1998_04_07:1.10
	MLWorks_20b0_1998_03_20:1.10
	MLWorks_20m2_1998_02_16:1.10
	MLWorks_MM_adapt:1.10.9
	MLWorks_20m1_1997_10_23:1.10
	MLWorks_11r1:1.10.6.1.1.1.1
	MLWorks_workspace_97:1.10.8
	MLWorks_dt_wizard:1.10.7
	MLWorks_11c0_1997_09_09:1.10.6.1.1.1
	MLWorks_10r3:1.10.6.1.3
	MLWorks_10r2_551:1.10.6.1.2
	MLWorks_11:1.10.6.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.10.6.1
	MLWorks_20m0_1997_06_20:1.10
	MLWorks_1_0_r2c2_1997_06_14:1.10.6.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.10.6.1
	MLWorks_1_0_r2c1_1997_05_12:1.10.6
	MLWorks_BugFix_1997_04_24:1.10
	MLWorks_1_0_r2_Win32_1997_04_11:1.10
	MLWorks_1_0_r2_Unix_1997_04_04:1.10
	MM_ML_release_korma_1997_04_01:1.10
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.10.4.1.1
	MLWorks_gui_1996_12_18:1.10.5
	MLWorks_1_0_Win32_1996_12_17:1.10.4
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.10.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.10.1.1
	JFHrts:1.10.3
	MLWorks_1_0_Irix_1996_11_28:1.10.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.10.2
	MLWorks_1_0_Unix_1996_11_14:1.10.1
	MLWorks_Open_Beta2_1996_10_11:1.9.3
	MLWorks_License_dev:1.9.2
	MLWorks_1_open_beta_1996_09_13:1.9.1
	MLWorks_Open_Beta_1996_08_22:1.9
	MLWorks_Beta_1996_07_02:1.9
	MLWorks_Beta_1996_06_07:1.9
	MLWorks_Beta_1996_06_06:1.9
	MLWorks_Beta_1996_06_05:1.9
	MLWorks_Beta_1996_06_03:1.9
	MLWorks_Beta_1996_05_31:1.9
	MLWorks_Beta_1996_05_30:1.9
	hope_poo:1.3.1
	ML_beta_release_12/08/94:1.3.1.1
	ML_beta_release_03/08/94:1.3;
locks; strict;
comment	@ * @;


1.11
date	98.07.02.14.54.08;	author jont;	state Exp;
branches
	1.11.1.1;
next	1.10;

1.10
date	96.10.17.14.05.23;	author jont;	state Exp;
branches
	1.10.1.1
	1.10.2.1
	1.10.3.1
	1.10.4.1
	1.10.5.1
	1.10.6.1
	1.10.7.1
	1.10.8.1
	1.10.9.1;
next	1.9;

1.9
date	96.02.08.17.53.01;	author jont;	state Exp;
branches
	1.9.1.1
	1.9.2.1
	1.9.3.1;
next	1.8;

1.8
date	96.01.17.15.21.48;	author nickb;	state Exp;
branches;
next	1.7;

1.7
date	96.01.11.12.51.34;	author nickb;	state Exp;
branches;
next	1.6;

1.6
date	96.01.09.13.54.14;	author nickb;	state Exp;
branches;
next	1.5;

1.5
date	95.09.15.14.59.43;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	95.03.15.13.32.08;	author nickb;	state Exp;
branches;
next	1.3;

1.3
date	94.07.08.09.54.11;	author nickh;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	94.06.09.14.51.15;	author nickh;	state Exp;
branches;
next	1.1;

1.1
date	94.06.09.11.25.59;	author nickh;	state Exp;
branches;
next	;

1.3.1.1
date	95.07.05.10.31.49;	author hope;	state Exp;
branches;
next	;

1.9.1.1
date	96.09.13.11.25.11;	author hope;	state Exp;
branches;
next	;

1.9.2.1
date	96.10.07.16.15.33;	author hope;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	96.10.09.11.06.16;	author nickb;	state Exp;
branches;
next	1.9.2.3;

1.9.2.3
date	96.10.09.13.52.46;	author nickb;	state Exp;
branches;
next	;

1.9.3.1
date	96.10.17.11.34.59;	author hope;	state Exp;
branches;
next	;

1.10.1.1
date	96.11.14.13.00.39;	author hope;	state Exp;
branches
	1.10.1.1.1.1;
next	;

1.10.1.1.1.1
date	96.11.28.15.10.42;	author hope;	state Exp;
branches;
next	;

1.10.2.1
date	96.11.22.18.18.29;	author hope;	state Exp;
branches;
next	;

1.10.3.1
date	96.12.17.10.05.11;	author hope;	state Exp;
branches;
next	;

1.10.4.1
date	96.12.17.17.56.47;	author hope;	state Exp;
branches
	1.10.4.1.1.1;
next	;

1.10.4.1.1.1
date	97.02.24.11.48.26;	author hope;	state Exp;
branches;
next	;

1.10.5.1
date	96.12.18.09.51.27;	author hope;	state Exp;
branches;
next	;

1.10.6.1
date	97.05.12.10.45.07;	author hope;	state Exp;
branches
	1.10.6.1.1.1
	1.10.6.1.2.1
	1.10.6.1.3.1;
next	;

1.10.6.1.1.1
date	97.07.28.18.28.52;	author daveb;	state Exp;
branches
	1.10.6.1.1.1.1.1;
next	;

1.10.6.1.1.1.1.1
date	97.10.07.11.54.42;	author jkbrook;	state Exp;
branches;
next	;

1.10.6.1.2.1
date	97.09.08.17.21.49;	author daveb;	state Exp;
branches;
next	;

1.10.6.1.3.1
date	97.09.09.14.17.54;	author daveb;	state Exp;
branches;
next	;

1.10.7.1
date	97.09.10.19.37.08;	author brucem;	state Exp;
branches;
next	;

1.10.8.1
date	97.09.11.21.05.10;	author daveb;	state Exp;
branches;
next	;

1.10.9.1
date	97.10.31.13.48.13;	author nickb;	state Exp;
branches;
next	;

1.11.1.1
date	99.04.01.18.03.56;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.11
log
@[Bug #70132]
Add signals_finalise
@
text
@/* ==== SIGNAL HANDLING ====
 * 
 * Copyright (C) 1994 Harlequin Ltd.
 *
 * Description
 * -----------
 * This file abstracts the OS-specific signal handling code from
 * the various parts of the runtime system.
 *
 * 
 * Revision Log
 * ------------
 * $Log: src:signals.h,v $
 * Revision 1.10  1996/10/17  14:05:23  jont
 * Merging in license server stuff
 *
 * Revision 1.9.2.3  1996/10/09  13:52:46  nickb
 * Improve comments.
 *
 * Revision 1.9.2.2  1996/10/09  11:06:16  nickb
 * Move to Harlequin license server.
 *
 * Revision 1.9.2.1  1996/10/07  16:15:33  hope
 * branched from 1.9
 *
 * Revision 1.9  1996/02/08  17:53:01  jont
 * Remove do_exportFn, as this is no longer part of the signals interface
 *
 * Revision 1.8  1996/01/17  15:21:48  nickb
 * Disable interrupt handling except when a handler is defined.
 *
 * Revision 1.7  1996/01/11  12:51:34  nickb
 * Add timer-triggered window updates.
 *
 * Revision 1.6  1996/01/09  13:54:14  nickb
 * Extensions to event handling for non-signal events.
 *
 * Revision 1.5  1995/09/15  14:59:43  jont
 * Add support for signals handling of export child process
 *
 * Revision 1.4  1995/03/15  13:32:08  nickb
 * Introduce the threads system.
 *
 * Revision 1.3  1994/07/08  09:54:11  nickh
 * Add interrupt signal number.
 *
 * Revision 1.2  1994/06/09  14:51:15  nickh
 * new file
 *
 * Revision 1.1  1994/06/09  11:25:59  nickh
 * new file
 *
 */

#ifndef signals_h
#define signals_h

#include "mltypes.h"

/* Initialize some signal handlers */

extern void signals_init (void);

/* Finalise signals. This may be responsible for killing some threads */

extern void signals_finalise (void);

/* This item used by the licenser. It should set up a real-time timer
 * with the specified interval, which will call refresh_license on
 * each tick. See license.h */

extern void signal_license_timer (int /* license interval */);

/* These values and functions control the interval timer. The actions
 * when it goes off are determined by whether we are profiling and
 * whether we are pre-empting threads. If we are profiling, the
 * profiler is run. If we are pre-empting, an event is signalled to
 * the current thread.
 * 
 * The intervals at which the timer goes off are also determined by
 * whether we are profiling. If we are, the profiling interval
 * determines the interval. Otherwise, the pre-emption interval does.
 */

extern unsigned int thread_preemption_interval;
extern unsigned int profiling_interval;
extern unsigned int window_update_interval;

extern void signal_preemption_start(void);
extern void signal_preemption_stop(void);
extern void signal_preemption_change(void);

extern void signal_profiling_start(void);
extern void signal_profiling_stop(void);

extern void signal_window_updates_start(void);
extern void signal_window_updates_stop(void);


/* Non-event signal support. To record a non-signal event (e.g. stack
   overflow, or to request window updates), other parts of the runtime
   call a function in the events module. That records the event on the
   event queue and then must set some flag or flags to notify the
   running ML code of the event. This platform-specific notification
   is done here. */

extern void signal_event(void);

/* ML signal handler support; establish or remove the ML signal handler.  */

extern unsigned int signal_nr_signals;

extern int signal_set_ml_handler(int sig);
extern int signal_clear_ml_handler(int sig);

extern int signal_set_interrupt_handler(void);
extern int signal_clear_interrupt_handler(void);

enum /* values for errno */
{
  ESIGNALNO = 1,		/* illegal signal number */
};

#endif /* signals_h */
@


1.11.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a13 4
 * Revision 1.11  1998/07/02  14:54:08  jont
 * [Bug #70132]
 * Add signals_finalise
 *
@


1.10
log
@Merging in license server stuff
@
text
@d14 3
d63 4
@


1.10.9.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a13 3
 * Revision 1.10  1996/10/17  14:05:23  jont
 * Merging in license server stuff
 *
@


1.10.8.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a13 3
 * Revision 1.10  1996/10/17  14:05:23  jont
 * Merging in license server stuff
 *
@


1.10.7.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a13 3
 * Revision 1.10  1996/10/17  14:05:23  jont
 * Merging in license server stuff
 *
@


1.10.6.1
log
@branched from 1.10
@
text
@a13 3
 * Revision 1.10  1996/10/17  14:05:23  jont
 * Merging in license server stuff
 *
@


1.10.6.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a13 3
 * Revision 1.10.6.1  1997/05/12  10:45:07  hope
 * branched from 1.10
 *
@


1.10.6.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a13 3
 * Revision 1.10.6.1  1997/05/12  10:45:07  hope
 * branched from 1.10
 *
@


1.10.6.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a13 3
 * Revision 1.10.6.1  1997/05/12  10:45:07  hope
 * branched from 1.10
 *
@


1.10.6.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a13 3
 * Revision 1.10.6.1.1.1  1997/07/28  18:28:52  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.10.5.1
log
@branched from 1.10
@
text
@a13 3
 * Revision 1.10  1996/10/17  14:05:23  jont
 * Merging in license server stuff
 *
@


1.10.4.1
log
@branched from 1.10
@
text
@a13 3
 * Revision 1.10  1996/10/17  14:05:23  jont
 * Merging in license server stuff
 *
@


1.10.4.1.1.1
log
@branched from 1.10.4.1
@
text
@a13 3
 * Revision 1.10.4.1  1996/12/17  17:56:47  hope
 * branched from 1.10
 *
@


1.10.3.1
log
@branched from 1.10
@
text
@a13 3
 * Revision 1.10  1996/10/17  14:05:23  jont
 * Merging in license server stuff
 *
@


1.10.2.1
log
@branched from 1.10
@
text
@a13 3
 * Revision 1.10  1996/10/17  14:05:23  jont
 * Merging in license server stuff
 *
@


1.10.1.1
log
@branched from 1.10
@
text
@a13 3
 * Revision 1.10  1996/10/17  14:05:23  jont
 * Merging in license server stuff
 *
@


1.10.1.1.1.1
log
@branched from 1.10.1.1
@
text
@a13 3
 * Revision 1.10.1.1  1996/11/14  13:00:39  hope
 * branched from 1.10
 *
@


1.9
log
@Remove do_exportFn, as this is no longer part of the signals interface
@
text
@d14 12
d61 5
a65 7
/* These items used by the licenser. The MLWorks process forks a child
 * process to keep an eye on the time, and will exit if the child is
 * tampered with or expires. */

extern int signal_license_child_pid;
extern void signal_license_watch_child (void);
extern void signal_license_child (int *pipefd);
@


1.9.3.1
log
@branched from 1.9
@
text
@a13 3
 * Revision 1.9  1996/02/08  17:53:01  jont
 * Remove do_exportFn, as this is no longer part of the signals interface
 *
@


1.9.2.1
log
@branched from 1.9
@
text
@a13 3
 * Revision 1.9  1996/02/08  17:53:01  jont
 * Remove do_exportFn, as this is no longer part of the signals interface
 *
@


1.9.2.2
log
@Move to Harlequin license server.
@
text
@a13 3
 * Revision 1.9.2.1  1996/10/07  16:15:33  hope
 * branched from 1.9
 *
d52 7
a58 3
/* This item used by the licenser */

extern void signal_license_timer (int /* license interval */);
@


1.9.2.3
log
@Improve comments.
@
text
@a13 3
 * Revision 1.9.2.2  1996/10/09  11:06:16  nickb
 * Move to Harlequin license server.
 *
d55 1
a55 3
/* This item used by the licenser. It should set up a real-time timer
 * with the specified interval, which will call refresh_license on
 * each tick. See license.h */
@


1.9.1.1
log
@branched from 1.9
@
text
@a13 3
 * Revision 1.9  1996/02/08  17:53:01  jont
 * Remove do_exportFn, as this is no longer part of the signals interface
 *
@


1.8
log
@Disable interrupt handling except when a handler is defined.
@
text
@d14 3
a55 6

/* These items used by exportFn. The MLWorks process forks a child
 * process so that garbage collection in this process does not
 * affect the main heap. */

extern mlval do_exportFn(mlval);
@


1.7
log
@Add timer-triggered window updates.
@
text
@d14 3
d101 3
@


1.6
log
@Extensions to event handling for non-signal events.
@
text
@d14 3
d70 1
d78 4
@


1.5
log
@Add support for signals handling of export child process
@
text
@d14 3
d75 6
a80 6
/* Stack overflow support: When we exceed the user-specified number of
 * stack blocks, we want to signal into the ML debugger. This is the
 * portable interface: self_signal (signal_stack_overflow) is called.
 */

extern void self_signal(int sig);
d82 1
a82 6
extern int signal_stack_overflow;

/* We also portably provide the interrupt signal number, so that
 * handlers can be set up for it through a separate ML function */

extern int signal_interrupt;
a90 9
/* The runtime can reserve certain signals to itself (e.g. VTALRM for
 * profiling, EMT for integer exception raising, &c). Attempting to
 * establish an ML handler on a signal reserved to MLWorks will raise
 * an exception */

extern int signal_reserve(int sig);
extern int signal_release(int sig);
extern int signal_reserved(int sig);

a93 1
  ESIGNALRES			/* signal already reserved */
@


1.4
log
@Introduce the threads system.
@
text
@d14 3
d31 2
d44 6
@


1.3
log
@Add interrupt signal number.
@
text
@d14 3
d40 17
a56 4
/* These two functions are used by the profiler. They start and stop a
 * virtual-time alarm clock, going off every 'interval' milliseconds.
 * Each time it goes off, the function profiler:profile_scan() gets
 * called. */
d58 2
a59 2
extern void signal_start_profiler_timer (unsigned int interval);
extern void signal_stop_profiler_timer (void);
@


1.3.1.1
log
@branched from 1.3
@
text
@a13 3
 * Revision 1.3  1994/07/08  09:54:11  nickh
 * Add interrupt signal number.
 *
@


1.2
log
@new file
@
text
@d14 3
d50 2
d54 4
a57 1
extern void self_signal(int sig);
@


1.1
log
@new file
@
text
@d13 4
a16 1
 * $Log:$
@
