head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.13
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_MM_adapt:1.4.12
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.9.1.1.1.1
	MLWorks_workspace_97:1.4.11
	MLWorks_dt_wizard:1.4.10
	MLWorks_11c0_1997_09_09:1.4.9.1.1.1
	MLWorks_10r3:1.4.9.1.3
	MLWorks_10r2_551:1.4.9.1.2
	MLWorks_11:1.4.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.9.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.9
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MM_ML_release_korma_1997_04_01:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.7.1.1
	MLWorks_gui_1996_12_18:1.4.8
	MLWorks_1_0_Win32_1996_12_17:1.4.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.4.1
	JFHrts:1.4.6
	MLWorks_1_0_Irix_1996_11_28:1.4.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.5
	MLWorks_1_0_Unix_1996_11_14:1.4.4
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.4
	MLWorks_Beta_1996_06_07:1.4
	MLWorks_Beta_1996_06_06:1.4
	MLWorks_Beta_1996_06_05:1.4
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4
	hope_poo:1.3.1
	ML_beta_release_12/08/94:1.3.1.1
	ML_beta_release_03/08/94:1.3;
locks; strict;
comment	@ * @;


1.4
date	94.10.19.15.25.19;	author nickb;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1
	1.4.8.1
	1.4.9.1
	1.4.10.1
	1.4.11.1
	1.4.12.1
	1.4.13.1;
next	1.3;

1.3
date	94.07.08.08.53.26;	author nickh;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	94.06.09.14.35.55;	author nickh;	state Exp;
branches;
next	1.1;

1.1
date	94.06.09.11.02.38;	author nickh;	state Exp;
branches;
next	;

1.3.1.1
date	95.07.05.10.30.46;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.23.29;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.13.40;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.33.06;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.14.12.58.51;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	96.11.28.15.08.49;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.22.18.16.33;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.17.10.03.18;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.17.17.54.55;	author hope;	state Exp;
branches
	1.4.7.1.1.1;
next	;

1.4.7.1.1.1
date	97.02.24.11.46.03;	author hope;	state Exp;
branches;
next	;

1.4.8.1
date	96.12.18.09.49.30;	author hope;	state Exp;
branches;
next	;

1.4.9.1
date	97.05.12.10.41.55;	author hope;	state Exp;
branches
	1.4.9.1.1.1
	1.4.9.1.2.1
	1.4.9.1.3.1;
next	;

1.4.9.1.1.1
date	97.07.28.18.27.20;	author daveb;	state Exp;
branches
	1.4.9.1.1.1.1.1;
next	;

1.4.9.1.1.1.1.1
date	97.10.07.11.53.22;	author jkbrook;	state Exp;
branches;
next	;

1.4.9.1.2.1
date	97.09.08.17.20.25;	author daveb;	state Exp;
branches;
next	;

1.4.9.1.3.1
date	97.09.09.14.16.32;	author daveb;	state Exp;
branches;
next	;

1.4.10.1
date	97.09.10.19.34.23;	author brucem;	state Exp;
branches;
next	;

1.4.11.1
date	97.09.11.21.03.27;	author daveb;	state Exp;
branches;
next	;

1.4.12.1
date	97.10.31.13.46.19;	author nickb;	state Exp;
branches;
next	;

1.4.13.1
date	99.04.01.18.02.27;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.4
log
@The Gcc extension for declaring non-returning functions has changed.
@
text
@/*  ==== C LANGUAGE EXTENSIONS ====
 *
 *  Copyright (C) 1992 Harleqiun Ltd.
 *
 *  Description
 *  -----------
 *  This header declares macros which allow optimising extensions of the C
 *  language to be used in conjunction with certain compilers, most notably,
 *  GCC.  On compilers which do not support the extensions the macros are
 *  defined to have no effect.  The macros defined are as follows:
 *
 *    `inline'
 *      Can be placed on functions to cause them to be inlined.  Not to be
 *      used  with `extern'.
 *
 *    `nonreturning(return_type,function_name,arguments)'
 *      Used to construct a function prototype which indicates that
 *      the function never returns, e.g.
 *      "nonreturning(extern void, exit, (int return_value))"
 *
 *    `data_aligned(variable,alignment)'
 *      Used in a declaration to indicate that 'variable' should be aligned:
 *	for instance the declaration 'struct foo data_aligned(x,16)'
 *      declares a struct foo called x aligned on a 16-byte boundary.
 *
 *  $Id: src:extensions.h,v 1.3 1994/07/08 08:53:26 nickh Exp $ */


#ifndef extensions_h
#define extensions_h


#ifdef __GNUC__
#  define inline	__inline__
#  define nonreturning(return_type,function_name,args) \
	return_type function_name args __attribute__ ((noreturn))
#  define data_aligned(x,alignment) x __attribute__ ((aligned (alignment)))
#else
#  define inline
#  define nonreturning(return_type, function_name,args) \
	return_type function_name args
#  define data_aligned(x,alignment) x
#endif


#endif
@


1.4.13.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.4.12.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.4.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.4.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.4.9.1
log
@branched from 1.4
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.4.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4.9.1 1997/05/12 10:41:55 hope Exp $ */
@


1.4.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4.9.1 1997/05/12 10:41:55 hope Exp $ */
@


1.4.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4.9.1 1997/05/12 10:41:55 hope Exp $ */
@


1.4.9.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4.9.1.1.1 1997/07/28 18:27:20 daveb Exp $ */
@


1.4.8.1
log
@branched from 1.4
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.4.7.1
log
@branched from 1.4
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.4.7.1.1.1
log
@branched from 1.4.7.1
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4.7.1 1996/12/17 17:54:55 hope Exp $ */
@


1.4.6.1
log
@branched from 1.4
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.4.5.1
log
@branched from 1.4
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.4.4.1
log
@branched from 1.4
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4.4.1 1996/11/14 12:58:51 hope Exp $ */
@


1.4.3.1
log
@branched from 1.4
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.4.2.1
log
@branched from 1.4
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.4.1.1
log
@branched from 1.4
@
text
@d26 1
a26 1
 *  $Id: src:extensions.h,v 1.4 1994/10/19 15:25:19 nickb Exp $ */
@


1.3
log
@Add data alignment declaration.
@
text
@d16 4
a19 3
 *    `nonreturning'
 *      Can qualify a function prorotype to indicate that the function never
 *      returns.
a20 4
 *    `functional'
 *      Indicates that a function will always return the same result for the
 *      same arguments.
 *	
d26 1
a26 2
 *  $Id: src:extensions.h,v 1.2 1994/06/09 14:35:55 nickh Exp $
 */
d35 2
a36 2
#  define nonreturning	volatile
#  define functional	const
d40 2
a41 2
#  define nonreturning
#  define functional
@


1.3.1.1
log
@branched from 1.3
@
text
@d29 1
a29 1
 *  $Id: src:extensions.h,v 1.3 1994/07/08 08:53:26 nickh Exp $
@


1.2
log
@new file
@
text
@d23 5
d29 1
a29 1
 *  $Id: src:extensions.h,v 1.1 1994/06/09 11:02:38 nickh Exp $
d41 1
d46 1
@


1.1
log
@new file
@
text
@d24 1
a24 1
 *  $Id: extensions.h,v 1.2 1992/10/02 09:31:27 richard Exp $
@
