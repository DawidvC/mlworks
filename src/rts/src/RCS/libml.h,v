head	1.3;
access;
symbols
	MLW_daveb_inline_1_4_99:1.3.13
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_MM_adapt:1.3.12
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_workspace_97:1.3.11
	MLWorks_dt_wizard:1.3.10
	MLWorks_10r3:1.3.9.1.3
	MLWorks_10r2_551:1.3.9.1.2
	MLWorks_11:1.3.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.9.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.9
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MM_ML_release_korma_1997_04_01:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.7.1.1
	MLWorks_gui_1996_12_18:1.3.8
	MLWorks_1_0_Win32_1996_12_17:1.3.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	JFHrts:1.3.6
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3;
locks; strict;
comment	@ * @;


1.3
date	95.07.06.15.52.40;	author brianm;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1
	1.3.9.1
	1.3.10.1
	1.3.11.1
	1.3.12.1
	1.3.13.1;
next	1.2;

1.2
date	95.07.05.22.02.23;	author brianm;	state Exp;
branches;
next	1.1;

1.1
date	95.07.05.14.55.58;	author brianm;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.22.54;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.13.04;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.32.19;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.12.58.15;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.15.08.11;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.15.52;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.10.02.35;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.17.17.54.18;	author hope;	state Exp;
branches
	1.3.7.1.1.1;
next	;

1.3.7.1.1.1
date	97.02.24.11.45.21;	author hope;	state Exp;
branches;
next	;

1.3.8.1
date	96.12.18.09.48.53;	author hope;	state Exp;
branches;
next	;

1.3.9.1
date	97.05.12.10.41.17;	author hope;	state Exp;
branches
	1.3.9.1.1.1
	1.3.9.1.2.1
	1.3.9.1.3.1;
next	;

1.3.9.1.1.1
date	97.07.28.18.27.21;	author daveb;	state Exp;
branches;
next	;

1.3.9.1.2.1
date	97.09.08.17.20.26;	author daveb;	state Exp;
branches;
next	;

1.3.9.1.3.1
date	97.09.09.14.16.33;	author daveb;	state Exp;
branches;
next	;

1.3.10.1
date	97.09.10.19.34.18;	author brucem;	state Exp;
branches;
next	;

1.3.11.1
date	97.09.11.21.03.23;	author daveb;	state Exp;
branches;
next	;

1.3.12.1
date	97.10.31.13.46.15;	author nickb;	state Exp;
branches;
next	;

1.3.13.1
date	99.04.01.18.02.25;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
New file.
@


1.3
log
@Modifications due to impl. of libml.c
@
text
@/*  ==== LIB-ML FOREIGN INTERFACE ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This header file identifies how C programmers will be able to access
 *  ML from C.
 *
 *  This is much simpler to implement then the FI interface for
 *  calling from ML into C since ML doesn't naturally deal with data
 *  in the same low-level way that C does.  On the other hand, C
 *  naturally expresses basic concepts from ML, making a workable
 *  interface easier to implement.
 *
 *  The accompanying libml.c then implements the protocol defined here.
 *
 *  Note that system specific versions of the libML.h that users will see
 *  can be extracted automagiclly from this file. 
 *
 *  Revision Log
 *  ------------
 *  $Log: src:libml.h,v $
 * Revision 1.2  1995/07/05  22:02:23  brianm
 * Interim version for impl. of libml.c
 *
 * Revision 1.1  1995/07/05  14:55:58  brianm
 * new unit
 * New file.
 *
 *
 */

#ifndef libml_h
#define libml_h

#include "values.h"
#include "sys_types.h"
#include <stddef.h>

extern void libml_init(void);


/* === START LIBML HEADER !!! DO NOT CHANGE THIS LINE !!! ===
 *
 * What follows below is the libML.h header file that users will see and use.
 *
 * Note that the user header file must eliminate the following symbols:
 *
 *   uint32
 *   MLTRUE, MLFALSE, MLUNIT
 *   VERSION
 *
 * The version string VERSION is to allow us to provide confirmation
 * info to the user such as what platform and release version this is
 * provided for and so on.
 *
 *
 */

/* libML.h
 *
 * Copyright (C) 1995 Harlequin Ltd.
 *
 * This header file describes the MLWorks interface for accessing ML from
 * C via the MLWorks Foreign Interface.
 *
 * Version VERSION
 *
 */


typedef uint32 MLvalue;


/* === ML EXTERNAL VALUE INTERFACE === */

extern MLvalue lookup_ml_value (char *name);
  /* Looks up ML values already registered from ML as external */

extern MLvalue call_ml_function (MLvalue fn_handle, int arity, ...);
  /* Calls ML function with given arguments */


/* === DATA CONVERSION FUNCTIONS : ML values --> C objects === */

extern int       ml2c_int(MLvalue val);
extern unsigned  ml2c_word(MLvalue val);
extern double    ml2c_real(MLvalue val);

   /* The following block of functions expect the user to have supplied
    * storage into which the result is written.
    */
extern void      ml2c_string(MLvalue val, char *result);
extern void      ml2c_tuple(MLvalue val, MLvalue *result);
extern void      ml2c_array(MLvalue val, MLvalue *result);

extern int       ml2c_string_length(MLvalue val);
extern int       ml2c_tuple_length(MLvalue val);
extern int       ml2c_array_length(MLvalue val);


/* === DATA CONVERSION FUNCTIONS : C objects --> ML values === */

#define   ml_true    MLTRUE
#define   ml_false   MLFALSE

#define   ml_unit    MLUNIT

extern MLvalue  c2ml_int(int obj);
extern MLvalue  c2ml_word(unsigned obj);
extern MLvalue  c2ml_real(double obj);
extern MLvalue  c2ml_string(char *obj);

extern MLvalue  c2ml_ref(MLvalue val);

extern MLvalue  c2ml_tuple(int count, ...);
extern MLvalue  c2ml_tuple1(int count, MLvalue table[]);

extern MLvalue  c2ml_array(int count, ...);
extern MLvalue  c2ml_array1(int count, MLvalue table[]);


/* === ML REF and ARRAY OPERATIONS === */

extern MLvalue  c2ml_content(MLvalue ref);
extern MLvalue  c2ml_assign(MLvalue ref, MLvalue val);

extern MLvalue  c2ml_sub(MLvalue arr, int index);
extern MLvalue  c2ml_update(MLvalue arr, int index, MLvalue val);


/* === PRIMITIVE DATA CLASSIFICATION === */

enum MLkind { Invalid_MLK, Int_MLK,       String_MLK,  Tuple_MLK,
              Array_MLK,   ByteArray_MLK, Closure_MLK, Other_MLK };

extern enum MLkind ml_kind(MLvalue val);


/* === INTEGRITY MAINTENANCE FUNCTIONS === */

extern void free_ml_value(MLvalue val);
extern void free_ml_vector(int count, MLvalue vec[]);
extern void free_all_ml_values(void);

/* === END LIBML HEADER !!! DO NOT CHANGE THIS LINE !!! === */

#endif
@


1.3.13.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.3.12.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.3.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.3.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.3.9.1
log
@branched from 1.3
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.3.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a23 3
 * Revision 1.3.9.1  1997/05/12  10:41:17  hope
 * branched from 1.3
 *
@


1.3.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a23 3
 * Revision 1.3.9.1  1997/05/12  10:41:17  hope
 * branched from 1.3
 *
@


1.3.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a23 3
 * Revision 1.3.9.1  1997/05/12  10:41:17  hope
 * branched from 1.3
 *
@


1.3.8.1
log
@branched from 1.3
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.3.7.1
log
@branched from 1.3
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.3.7.1.1.1
log
@branched from 1.3.7.1
@
text
@a23 3
 * Revision 1.3.7.1  1996/12/17  17:54:18  hope
 * branched from 1.3
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a23 3
 * Revision 1.3.4.1  1996/11/14  12:58:15  hope
 * branched from 1.3
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a23 3
 * Revision 1.3  1995/07/06  15:52:40  brianm
 * Modifications due to impl. of libml.c
 *
@


1.2
log
@Interim version for impl. of libml.c
@
text
@d24 3
d78 1
a78 1
extern MLvalue lookup_ML_value (char *name);
d81 1
a81 1
extern MLvalue call_ML_function (MLvalue fn_handle, int arity, ...);
d89 8
a96 1
extern real      ml2c_real(MLvalue val);
a97 1
extern void      ml2c_string(MLvalue val, MLvalue *result);
a98 2

extern void      ml2c_tuple(MLvalue val, MLvalue *result);
a99 2

extern void      ml2c_array(MLvalue val, MLvalue *result);
d145 1
@


1.1
log
@new unit
New file.
@
text
@d1 1
a1 1
/*  ==== LIB-ML C INTERFACE ====
d3 1
a3 1
 *  Copyright (C) 1995 Harelquin Ltd.
d7 2
d10 11
d23 4
a26 1
 *  $Log$
d28 1
d41 16
a56 1
/* === LIBML HEADER ===
d58 10
a67 1
   What follows below is the LIBML header file that users will see and use.
a68 1
   Note that external version must also eliminate the following symbols:
d70 1
a70 2
     uint32
     MLTRUE, MLFALSE, MLUNIT
a71 3
 */

typedef uint32 MLvalue;
d76 1
a76 1
  /* Looks up ML values already registered as external. */
d79 14
a92 1
  /* Calls ML function with given arguments. */
d94 2
d97 1
d105 4
a108 4
extern MLvalue  c2ml_int(int arg);
extern MLvalue  c2ml_word(unsigned arg);
extern MLvalue  c2ml_real(double arg);
extern MLvalue  c2ml_string(char *arg);
d110 1
a110 1
extern MLvalue  c2ml_ref(MLvalue arg);
d121 1
a121 1
extern MLvalue  c2ml_content(MLvalue arg);
d133 1
a133 1
enum MLkind ml_kind(MLvalue arg);
d136 1
a136 6
/* === DATA CONVERSION FUNCTIONS : ML values --> C objects === */

extern int       ml2c_int(MLvalue arg);
extern unsigned  ml2c_word(MLvalue arg);
extern real      ml2c_real(MLvalue arg);
extern char      *ml2c_string(MLvalue arg);
d138 2
a139 8
extern MLvalue   *ml2c_tuple(MLvalue arg);
extern int       ml2c_tuple_length(MLvalue arg);

extern MLvalue   *ml2c_array(MLvalue arg);
extern int       ml2c_array_length(MLvalue arg);


/* === INTEGRITY MAINTENANCE FUNCTIONS === */
d141 1
a141 2
extern free_ml_value(MLvalue arg);
extern free_ml_vector(int count, MLvalue vec[]);
@
