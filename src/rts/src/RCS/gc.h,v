head	1.20;
access;
symbols
	MLW_daveb_inline_1_4_99:1.20.1
	MLWorks_21c0_1999_03_25:1.20
	MLWorks_20c1_1998_08_20:1.20
	MLWorks_20c0_1998_08_04:1.20
	MLWorks_20b2c2_1998_06_19:1.20
	MLWorks_20b2_Windows_1998_06_12:1.20
	MLWorks_20b1c1_1998_05_07:1.20
	MLWorks_20b0_1998_04_07:1.18
	MLWorks_20b0_1998_03_20:1.18
	MLWorks_20m2_1998_02_16:1.16
	MLWorks_MM_adapt:1.16.12
	MLWorks_20m1_1997_10_23:1.16
	MLWorks_11r1:1.16.9.1.1.1.1
	MLWorks_workspace_97:1.16.11
	MLWorks_dt_wizard:1.16.10
	MLWorks_11c0_1997_09_09:1.16.9.1.1.1
	MLWorks_10r3:1.16.9.1.3
	MLWorks_10r2_551:1.16.9.1.2
	MLWorks_11:1.16.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.16.9.1
	MLWorks_20m0_1997_06_20:1.16
	MLWorks_1_0_r2c2_1997_06_14:1.16.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.16.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.16.9
	MLWorks_BugFix_1997_04_24:1.16
	MLWorks_1_0_r2_Win32_1997_04_11:1.16
	MLWorks_1_0_r2_Unix_1997_04_04:1.16
	MM_ML_release_korma_1997_04_01:1.16
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.16.7.1.1
	MLWorks_gui_1996_12_18:1.16.8
	MLWorks_1_0_Win32_1996_12_17:1.16.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.16.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.16.4.1
	JFHrts:1.16.6
	MLWorks_1_0_Irix_1996_11_28:1.16.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.16.5
	MLWorks_1_0_Unix_1996_11_14:1.16.4
	MLWorks_Open_Beta2_1996_10_11:1.16.3
	MLWorks_License_dev:1.16.2
	MLWorks_1_open_beta_1996_09_13:1.16.1
	MLWorks_Open_Beta_1996_08_22:1.16
	MLWorks_Beta_1996_07_02:1.15
	MLWorks_Beta_1996_06_07:1.15
	MLWorks_Beta_1996_06_06:1.15
	MLWorks_Beta_1996_06_05:1.15
	MLWorks_Beta_1996_06_03:1.15
	MLWorks_Beta_1996_05_31:1.15
	MLWorks_Beta_1996_05_30:1.15
	hope_poo:1.5.1
	ML_beta_release_12/08/94:1.5.1.1
	ML_beta_release_03/08/94:1.5;
locks; strict;
comment	@ * @;


1.20
date	98.04.27.13.43.44;	author jont;	state Exp;
branches
	1.20.1.1;
next	1.19;

1.19
date	98.04.23.13.29.11;	author jont;	state Exp;
branches;
next	1.18;

1.18
date	98.03.19.10.45.21;	author jont;	state Exp;
branches;
next	1.17;

1.17
date	98.03.02.13.22.04;	author jont;	state Exp;
branches;
next	1.16;

1.16
date	96.07.03.13.24.13;	author nickb;	state Exp;
branches
	1.16.1.1
	1.16.2.1
	1.16.3.1
	1.16.4.1
	1.16.5.1
	1.16.6.1
	1.16.7.1
	1.16.8.1
	1.16.9.1
	1.16.10.1
	1.16.11.1
	1.16.12.1;
next	1.15;

1.15
date	96.02.19.14.13.28;	author nickb;	state Exp;
branches;
next	1.14;

1.14
date	96.02.12.12.58.31;	author nickb;	state Exp;
branches;
next	1.13;

1.13
date	96.01.16.11.57.13;	author nickb;	state Exp;
branches;
next	1.12;

1.12
date	96.01.11.14.51.34;	author nickb;	state Exp;
branches;
next	1.11;

1.11
date	95.09.26.10.31.47;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	95.09.13.12.32.18;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	95.09.13.11.18.05;	author nickb;	state Exp;
branches;
next	1.8;

1.8
date	95.06.16.15.42.13;	author nickb;	state Exp;
branches;
next	1.7;

1.7
date	95.04.24.13.13.05;	author nickb;	state Exp;
branches;
next	1.6;

1.6
date	95.04.05.13.33.58;	author nickb;	state Exp;
branches;
next	1.5;

1.5
date	94.07.15.09.27.46;	author nickh;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	94.07.01.15.22.23;	author nickh;	state Exp;
branches;
next	1.3;

1.3
date	94.06.22.12.48.28;	author nickh;	state Exp;
branches;
next	1.2;

1.2
date	94.06.09.14.47.58;	author nickh;	state Exp;
branches;
next	1.1;

1.1
date	94.06.09.11.19.51;	author nickh;	state Exp;
branches;
next	;

1.5.1.1
date	95.07.05.10.28.45;	author hope;	state Exp;
branches;
next	;

1.16.1.1
date	96.09.13.11.23.15;	author hope;	state Exp;
branches;
next	;

1.16.2.1
date	96.10.07.16.13.25;	author hope;	state Exp;
branches;
next	;

1.16.3.1
date	96.10.17.11.32.45;	author hope;	state Exp;
branches;
next	;

1.16.4.1
date	96.11.14.12.58.36;	author hope;	state Exp;
branches
	1.16.4.1.1.1;
next	;

1.16.4.1.1.1
date	96.11.28.15.08.35;	author hope;	state Exp;
branches;
next	;

1.16.5.1
date	96.11.22.18.16.16;	author hope;	state Exp;
branches;
next	;

1.16.6.1
date	96.12.17.10.03.01;	author hope;	state Exp;
branches;
next	;

1.16.7.1
date	96.12.17.17.54.40;	author hope;	state Exp;
branches
	1.16.7.1.1.1;
next	;

1.16.7.1.1.1
date	97.02.24.11.45.46;	author hope;	state Exp;
branches;
next	;

1.16.8.1
date	96.12.18.09.49.16;	author hope;	state Exp;
branches;
next	;

1.16.9.1
date	97.05.12.10.41.40;	author hope;	state Exp;
branches
	1.16.9.1.1.1
	1.16.9.1.2.1
	1.16.9.1.3.1;
next	;

1.16.9.1.1.1
date	97.07.28.18.26.52;	author daveb;	state Exp;
branches
	1.16.9.1.1.1.1.1;
next	;

1.16.9.1.1.1.1.1
date	97.10.07.11.52.49;	author jkbrook;	state Exp;
branches;
next	;

1.16.9.1.2.1
date	97.09.08.17.20.00;	author daveb;	state Exp;
branches;
next	;

1.16.9.1.3.1
date	97.09.09.14.16.07;	author daveb;	state Exp;
branches;
next	;

1.16.10.1
date	97.09.10.19.33.36;	author brucem;	state Exp;
branches;
next	;

1.16.11.1
date	97.09.11.21.02.46;	author daveb;	state Exp;
branches;
next	;

1.16.12.1
date	97.10.31.13.45.38;	author nickb;	state Exp;
branches;
next	;

1.20.1.1
date	99.04.01.18.02.00;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.20
log
@[Bug #70032]
gen->values now measured in bytes
@
text
@/*  === GARBAGE COLLECTOR ===
 *
 *  Copyright (C) 1992 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *
 *  Revision Log
 *  ------------
 *  $Log: src:gc.h,v $
 * Revision 1.19  1998/04/23  13:29:11  jont
 * [Bug #70034]
 * Rationalising names in mem.h
 *
 * Revision 1.18  1998/03/19  10:45:21  jont
 * [Bug #70018]
 * Fix compiler warnings
 *
 * Revision 1.17  1998/03/02  13:22:04  jont
 * [Bug #70018]
 * Modify declare_root to accept a second parameter
 * indicating whether the root is live for image save
 *
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
 * Revision 1.15  1996/02/19  14:13:28  nickb
 * Change prototype for gc_clean_image.
 *
 * Revision 1.14  1996/02/12  12:58:31  nickb
 * Add heap-exploration hooks.
 *
 * Revision 1.13  1996/01/16  11:57:13  nickb
 * Remove "storage manager" interface; replace it with regular functions.
 *
 * Revision 1.12  1996/01/11  14:51:34  nickb
 * Remove gc-triggered window updates; these are now done by a timer.
 *
 * Revision 1.11  1995/09/26  10:31:47  jont
 * Add SM_EXEC_IMAGE_SAVE
 *
 * Revision 1.10  1995/09/13  12:32:18  jont
 * Add parameter to sm_interface to control whether stack_crawl is done
 *
 * Revision 1.9  1995/09/13  11:18:05  nickb
 * Add SM_PROMOTE_ALL
 *
 * Revision 1.8  1995/06/16  15:42:13  nickb
 * Make CREATION_SIZE visible.
 *
 * Revision 1.7  1995/04/24  13:13:05  nickb
 * Add SM_WINDOW_UPDATES
 *
 * Revision 1.6  1995/04/05  13:33:58  nickb
 * Add maximum memory use reporting.
 *
 * Revision 1.5  1994/07/15  09:27:46  nickh
 * Add simple garbage collection counter.
 *
 * Revision 1.4  1994/07/01  15:22:23  nickh
 * Add more analysis code.
 *
 * Revision 1.3  1994/06/22  12:48:28  nickh
 * Add heap analysis code.
 *
 * Revision 1.2  1994/06/09  14:47:58  nickh
 * new file
 *
 * Revision 1.1  1994/06/09  11:19:51  nickh
 * new file
 *
 *  Revision 1.17  1992/07/31  14:12:50  richard
 *  Added `creation'.  There are many underlying changes -- see gc.c.
 *
 *  Revision 1.16  1992/07/10  14:25:51  richard
 *  Removed redundent GC statistics.  See storeman.h.
 *
 *  Revision 1.15  1992/06/30  09:40:30  richard
 *  Removed most declarations to storeman.h in order to make storage
 *  manager replaceable.
 *
 *  Revision 1.14  1992/05/15  14:35:06  clive
 *  Added timers and code for compiling the make system
 *
 *  Revision 1.13  1992/05/13  13:08:23  clive
 *  Added code to allow memory profiling
 *
 *  Revision 1.12  1992/04/06  08:46:51  richard
 *  Added weak roots.
 *
 *  Revision 1.11  1992/03/23  13:16:03  richard
 *  Added `gc_stat_stream'.
 *
 *  Revision 1.10  1992/03/19  16:44:21  richard
 *  Documented and moved generation size macros to mem.h.
 *
 *  Revision 1.9  1992/03/12  16:58:03  richard
 *  Added in_ML here.  Needs documentation.
 *
 *  Revision 1.8  1992/03/12  11:44:16  richard
 *  Major revision: generations are now generalized to contain any number
 *  of spaces.  In particular this effects the GENBLKS and GENSPACES
 *  parameters specified here.
 *
 *  Revision 1.7  1992/03/10  12:42:33  richard
 *  Added missing parentheses to macros for generation sizes.
 *
 *  Revision 1.6  1992/02/24  16:19:56  clive
 *  Needed more roots
 *
 *  Revision 1.5  1992/01/27  14:54:54  richard
 *  Added gc_message_level to control collection messages.  Added
 *  macros which control generation sizes.  These should be tuned when we
 *  have some real programs running.
 *
 *  Revision 1.4  1992/01/14  15:30:30  richard
 *  Added MAX_NR_ROOTS.
 *
 *  Revision 1.3  1991/12/17  16:08:54  nickh
 *  Moved declare_root and retract_root to here.
 *
 *  Revision 1.2  91/11/28  15:44:07  richard
 *  Added a missing #include statement.
 *  
 *  Revision 1.1  91/10/29  17:00:56  davidt
 *  Initial revision
 */

#ifndef gc_h
#define gc_h

#include "types.h"
#include "values.h"
#include "mem.h"

#include <stddef.h>
#include <stdio.h>
#include <time.h>

/* The newest generation */

extern struct ml_heap *creation;

/*  == Garbage collection ==
 *
 *  This function is called when ML requires space for a new object and
 *  cannot allocate it directly using the heap start and heap limit
 *  pointers.
 */

extern void gc(size_t space_required, mlval closure);

/*  == C roots ==
 *
 *  C data (e.g. variables) which contain ML values which may refer
 *  onto the heap must be declared as `roots' so that the garbage
 *  collector can fix them. A root is declared by passing its address
 *  to declare_root(). If an object on the heap pointed to by a root
 *  is moved the root is updated as well.
 *
 *  NOTE: Be careful not to cache roots in other variables as they may
 *  change. Be careful to retract roots which drop out of scope. */

extern void declare_root(mlval *root, int live_for_image_save);
extern void retract_root(mlval *root);

/*  == Statistical output ==
 *
 *  If `gc_stat_stream' is not NULL it may be used as a stream to which
 *  garbage collection statistics are written.  It is initialised to
 *  be the file supplied to the `-gcstatistics' option.
 */

extern FILE *gc_stat_stream;

#ifdef COLLECT_STATS

/*  == Statistics collection ==
 *
 *  We measure the maximum size of the heap between GCs
 */

extern size_t max_heap_size;

#endif

/*  == GC running flag ==
 *  
 *  This integer is incremented when the GC is entered and decremeneted
 *  when it returns.
 */

extern int in_GC;

/*  == GC timing ==
 *  
 *  The user time (in microseconds) spent garbage collecting.
 */

extern double gc_clock;

#ifdef EXPLORER

/* explore_roots() applies explore_root to each GC root */

extern void explore_roots(void);

/* explore_heap() applies explore_heap_area to each area of the heap */

extern void explore_heap(void);

#endif

/* Miscellaneous GC functions */

extern void gc_collect_gen(unsigned int number);
extern void gc_collect_all(void);
extern void gc_promote_all(void);

extern mlval gc_collections(mlval unit);

extern void gc_clean_image(mlval package);

extern int live_in_gen(struct ml_heap *gen, mlval *value);

#ifdef DEBUG
extern void gc_analyse_heap(void);
extern void gc_analyse_creation_start(void);
extern void gc_analyse_creation_stop(void);
#endif

#endif
@


1.20.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a10 4
 * Revision 1.20  1998/04/27  13:43:44  jont
 * [Bug #70032]
 * gen->values now measured in bytes
 *
@


1.19
log
@[Bug #70034]
Rationalising names in mem.h
@
text
@d11 4
a151 10

/*  === GARBAGE COLLECTOR PARAMETERS ===
 *
 *  CREATION_SIZE is the limit on the number of values in generation 0
 *  (the creation space) and determines the frequency of calls to the
 *  garbage collector.  It also determines the minimum size of `large'
 *  objects.
 */

#define CREATION_SIZE	0x40000
@


1.18
log
@[Bug #70018]
Fix compiler warnings
@
text
@d11 4
d138 1
a138 1
extern struct gen *creation;
d230 1
a230 1
extern int live_in_gen(struct gen *gen, mlval *value);
@


1.17
log
@[Bug #70018]
Modify declare_root to accept a second parameter
indicating whether the root is live for image save
@
text
@d11 5
d226 1
a226 1
extern int live_in_gen(struct gen*gen, mlval value);
@


1.16
log
@Correct comment for declare_/retract_ root.
@
text
@d11 3
d161 1
a161 1
extern void declare_root(mlval *root);
d220 2
@


1.16.12.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a10 3
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
@


1.16.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a10 3
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
@


1.16.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a10 3
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
@


1.16.9.1
log
@branched from 1.16
@
text
@a10 3
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
@


1.16.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a10 3
 * Revision 1.16.9.1  1997/05/12  10:41:40  hope
 * branched from 1.16
 *
@


1.16.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a10 3
 * Revision 1.16.9.1  1997/05/12  10:41:40  hope
 * branched from 1.16
 *
@


1.16.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a10 3
 * Revision 1.16.9.1  1997/05/12  10:41:40  hope
 * branched from 1.16
 *
@


1.16.9.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a10 3
 * Revision 1.16.9.1.1.1  1997/07/28  18:26:52  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.16.8.1
log
@branched from 1.16
@
text
@a10 3
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
@


1.16.7.1
log
@branched from 1.16
@
text
@a10 3
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
@


1.16.7.1.1.1
log
@branched from 1.16.7.1
@
text
@a10 3
 * Revision 1.16.7.1  1996/12/17  17:54:40  hope
 * branched from 1.16
 *
@


1.16.6.1
log
@branched from 1.16
@
text
@a10 3
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
@


1.16.5.1
log
@branched from 1.16
@
text
@a10 3
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
@


1.16.4.1
log
@branched from 1.16
@
text
@a10 3
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
@


1.16.4.1.1.1
log
@branched from 1.16.4.1
@
text
@a10 3
 * Revision 1.16.4.1  1996/11/14  12:58:36  hope
 * branched from 1.16
 *
@


1.16.3.1
log
@branched from 1.16
@
text
@a10 3
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
@


1.16.2.1
log
@branched from 1.16
@
text
@a10 3
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
@


1.16.1.1
log
@branched from 1.16
@
text
@a10 3
 * Revision 1.16  1996/07/03  13:24:13  nickb
 * Correct comment for declare_/retract_ root.
 *
@


1.15
log
@Change prototype for gc_clean_image.
@
text
@d11 3
d149 5
a153 5
 *  ML objects allocated on the heap which are not visible to ML must be
 *  declared as `roots' so that the garbage collector doesn't throw them
 *  away.  A root is declared by passing declare_root() a pointer to the ML
 *  value (which may point onto the heap).  If an object on the heap pointed
 *  to by a root is moved the root is updated as well.
d156 1
a156 2
 *  change.  Be careful to retract roots which drop out of scope.
 */
@


1.14
log
@Add heap-exploration hooks.
@
text
@d11 3
d214 1
a214 1
extern void gc_clean_image(void);
@


1.13
log
@Remove "storage manager" interface; replace it with regular functions.
@
text
@d11 3
d190 12
@


1.12
log
@Remove gc-triggered window updates; these are now done by a timer.
@
text
@d11 3
d188 7
a194 5
/* sm_interface():
 *
 *  This function is exposed in the pervasive ML environment so that
 *  storage managers can perform special functions.
 */
d196 1
a196 8
#define SM_IMAGE_SAVE		0
#define SM_IMAGE_LOAD		10
#define SM_COLLECT		20
#define SM_IMAGE_TABLE		30
#define SM_EXTEND_STACK_LIMIT   40
#define SM_SET_STACK_LIMIT      50
#define SM_GET_STACK_LIMIT      60
#define SM_COLLECT_ALL		70
a197 1
/* the following only available in the debugging runtime */
d199 3
a201 3
#define SM_ANALYSE_HEAP		80
#define SM_ANALYSE_CREATION_START 90
#define SM_ANALYSE_CREATION_STOP 100
a202 20

#define SM_COLLECTIONS		110
#define SM_PROMOTE_ALL		130

#define SM_EXEC_IMAGE_SAVE	140

enum /* errno */
{
  EIMPL = 1,		/* The operation requested is unimplemented. */
  EIMAGEFORMAT,		/* The image is not in the correct format. */
  EIMAGEWRITE,		/* An error occured writing the image. */
  EIMAGEREAD,		/* An error occurred reading the image. */
  EIMAGEOPEN,		/* Unable to open file. */
  EIMAGEALLOC,		/* Unable to allocate memory. */
  EIMAGEVERSION		/* The image doesn't match the load code. */
};

extern mlval sm_interface(int function, int do_stack_crawl, mlval argument);
/* The parameter do_stack_crawl is for the benefit of exportFn */
/* Which wishes to discard the compiler */
@


1.11
log
@Add SM_EXEC_IMAGE_SAVE
@
text
@d11 3
a207 1
#define SM_WINDOW_UPDATES	120
@


1.10
log
@Add parameter to sm_interface to control whether stack_crawl is done
@
text
@d11 3
d207 2
@


1.9
log
@Add SM_PROMOTE_ALL
@
text
@d11 3
d216 3
a218 1
extern mlval sm_interface(int function, mlval argument);
@


1.8
log
@Make CREATION_SIZE visible.
@
text
@d11 3
d200 1
@


1.7
log
@Add SM_WINDOW_UPDATES
@
text
@d11 3
d112 10
@


1.6
log
@Add maximum memory use reporting.
@
text
@d11 3
d183 1
@


1.5
log
@Add simple garbage collection counter.
@
text
@d11 3
d130 11
@


1.5.1.1
log
@branched from 1.5
@
text
@a10 3
 * Revision 1.5  1994/07/15  09:27:46  nickh
 * Add simple garbage collection counter.
 *
@


1.4
log
@Add more analysis code.
@
text
@d11 3
d164 2
@


1.3
log
@Add heap analysis code.
@
text
@d11 3
d158 2
@


1.2
log
@new file
@
text
@d11 3
d151 5
@


1.1
log
@new file
@
text
@d10 4
a13 1
 *  $Log: gc.h,v $
@
