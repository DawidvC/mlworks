head	1.2;
access;
symbols
	MLW_daveb_inline_1_4_99:1.2.14
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_MM_adapt:1.2.13
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_11r1:1.2.10.1.1.1.1
	MLWorks_workspace_97:1.2.12
	MLWorks_dt_wizard:1.2.11
	MLWorks_11c0_1997_09_09:1.2.10.1.1.1
	MLWorks_10r3:1.2.10.1.3
	MLWorks_10r2_551:1.2.10.1.2
	MLWorks_11:1.2.10.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.2.10.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.2.10.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.2.10.1
	MLWorks_1_0_r2c1_1997_05_12:1.2.10
	MLWorks_BugFix_1997_04_24:1.2
	MLWorks_1_0_r2_Win32_1997_04_11:1.2
	MLWorks_1_0_r2_Unix_1997_04_04:1.2
	MM_ML_release_korma_1997_04_01:1.2
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.2.8.1.1
	MLWorks_gui_1996_12_18:1.2.9
	MLWorks_1_0_Win32_1996_12_17:1.2.8
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.2.5.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.2.5.1
	JFHrts:1.2.7
	MLWorks_1_0_Irix_1996_11_28:1.2.5.1.1
	MLWorks_1_0_Win32_1996_11_22:1.2.6
	MLWorks_1_0_Unix_1996_11_14:1.2.5
	MLWorks_Open_Beta2_1996_10_11:1.2.4
	MLWorks_License_dev:1.2.3
	MLWorks_1_open_beta_1996_09_13:1.2.2
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2
	hope_poo:1.2.1
	ML_beta_release_12/08/94:1.2.1.1
	ML_beta_release_03/08/94:1.2;
locks; strict;
comment	@ * @;


1.2
date	94.06.09.14.44.49;	author nickh;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1
	1.2.5.1
	1.2.6.1
	1.2.7.1
	1.2.8.1
	1.2.9.1
	1.2.10.1
	1.2.11.1
	1.2.12.1
	1.2.13.1
	1.2.14.1;
next	1.1;

1.1
date	94.06.09.11.13.47;	author nickh;	state Exp;
branches;
next	;

1.2.1.1
date	95.07.05.10.30.14;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.09.13.11.22.04;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.07.16.12.08;	author hope;	state Exp;
branches;
next	;

1.2.4.1
date	96.10.17.11.31.04;	author hope;	state Exp;
branches;
next	;

1.2.5.1
date	96.11.14.12.56.58;	author hope;	state Exp;
branches
	1.2.5.1.1.1;
next	;

1.2.5.1.1.1
date	96.11.28.15.07.14;	author hope;	state Exp;
branches;
next	;

1.2.6.1
date	96.11.22.18.14.55;	author hope;	state Exp;
branches;
next	;

1.2.7.1
date	96.12.17.10.01.42;	author hope;	state Exp;
branches;
next	;

1.2.8.1
date	96.12.17.17.53.26;	author hope;	state Exp;
branches
	1.2.8.1.1.1;
next	;

1.2.8.1.1.1
date	97.02.24.11.44.25;	author hope;	state Exp;
branches;
next	;

1.2.9.1
date	96.12.18.09.47.59;	author hope;	state Exp;
branches;
next	;

1.2.10.1
date	97.05.12.10.40.25;	author hope;	state Exp;
branches
	1.2.10.1.1.1
	1.2.10.1.2.1
	1.2.10.1.3.1;
next	;

1.2.10.1.1.1
date	97.07.28.18.25.10;	author daveb;	state Exp;
branches
	1.2.10.1.1.1.1.1;
next	;

1.2.10.1.1.1.1.1
date	97.10.07.11.51.04;	author jkbrook;	state Exp;
branches;
next	;

1.2.10.1.2.1
date	97.09.08.17.18.24;	author daveb;	state Exp;
branches;
next	;

1.2.10.1.3.1
date	97.09.09.14.14.36;	author daveb;	state Exp;
branches;
next	;

1.2.11.1
date	97.09.10.19.31.01;	author brucem;	state Exp;
branches;
next	;

1.2.12.1
date	97.09.11.21.00.37;	author daveb;	state Exp;
branches;
next	;

1.2.13.1
date	97.10.31.13.43.42;	author nickb;	state Exp;
branches;
next	;

1.2.14.1
date	99.04.01.18.00.43;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.2
log
@new file
@
text
@/*  ==== COMMAND LINE OPTIONS PARSER ====
 *
 *  Copyright (C) 1992 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This module provides a generalised parsing mechanism for the command
 *  line parameters passed to main().  A command line of the form:
 *
 *    command [options] parm...
 *
 *  where options are keywords beginning with OPTION_CHAR which can take
 *  zero or more arguments.  Options must come before any other parameters.
 *  The option OPTION_CHAR OPTION_CHAR (e.g. "--" on UNIX) is special: it
 *  terminates option processing.  All parameters after it are ignored.
 *
 *  Revision Log
 *  ------------
 *  $Log: src:options.h,v $
 * Revision 1.1  1994/06/09  11:13:47  nickh
 * new file
 *
 *  Revision 1.4  1993/06/02  13:06:46  richard
 *  Improved the use of const on the argv parameter type.
 *
 *  Revision 1.3  1993/04/30  12:36:39  richard
 *  Multiple arguments can now be passed to the storage manager in a general
 *  way.
 *
 *  Revision 1.2  1992/09/01  10:48:23  richard
 *  Implemented delimited options.
 *
 *  Revision 1.1  1992/03/18  14:06:00  richard
 *  Initial revision
 *
 */

#ifndef options_h
#define options_h

#include <stddef.h>


/*  == Option switch character ==
 *
 *  This character is used to distinguish options from other parameters.
 */

#define OPTION_CHAR	'-'


/*  == Option desciptor ==
 *
 *  An option descriptor specifies the keyword for an option and the number
 *  of arguments it requires.  An array of these desciptors is passed to
 *  option_parse() below and updated to contains the parameters.
 */

struct option
{
  const char *name;
  int nr_arguments;
  int specified;
  const char *const *arguments;
};



/*  === PARSE COMMAND LINE OPTIONS ===
 *
 *  The option_parse() function is passed pointers to a list of arguments
 *  such as those passed to main().  (Actually, it is passed argc-1 and
 *  argv+1.) It also takes an array of option descriptors (see
 *  above) terminated with a descriptor whose `name' field is NULL.  The
 *  parameters in the argv array are matched against the option names and
 *  the option desciptors are updated to inidicate that they were specified.
 *
 *  For example, if OPTION_CHAR is '-' and the desciptor array is
 *  initialised to
 *   {{"x", 0, 0, NULL}, {"y", 2, 0, NULL}, {"z", 1, 0, NULL},
 *    {NULL, 0, 0, NULL}}
 *  and the command line was
 *   foo -y A B -x -- -z loofah
 *  i.e. it is the array
 *   {"foo", "-y", "A", "B", "-x", "--", "-z", "loofah"}
 *  the desciptors will be updated to
 *   {{"x", 0, 1, ?}, {"y", 2, 1, {"A", "B"}}, {"z", 1, 0, NULL},
 *    {NULL, 0, 0, NULL}}
 *  and the command array will be
 *   {"-z", "loofah"}
 *
 *  A non-zero value is returned iff successful, otherwise `errno' is set to
 *  one of the enumerated values below and argv is left pointing to the
 *  problematical parameter.
 *
 *  NOTE: option_parse does not make use of the fact that argv[argc] is
 *  NULL, so it is safe to use on other arrays of strings.
 */

enum
{
  EOPTIONUNKNOWN=1,	/* An option not in the desciptors was specified. */
  EOPTIONARGS,		/* The wrong number of arguments were specified. */
  EOPTIONDELIM		/* Missing delimiter from delimited option. */
};

typedef const char *const *argv_t;

int option_parse(int *argcp,
		 argv_t *argvp,
		 struct option *options[]);


/*  === UTILITIES ===
 *
 *  These cause fatal errors if the string is of the wrong form.
 */

int to_int(const char *s);
unsigned int to_unsigned(const char *s);

#endif
@


1.2.14.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.13.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.12.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.11.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.10.1
log
@branched from 1.2
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.10.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a19 3
 * Revision 1.2.10.1  1997/05/12  10:40:25  hope
 * branched from 1.2
 *
@


1.2.10.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a19 3
 * Revision 1.2.10.1  1997/05/12  10:40:25  hope
 * branched from 1.2
 *
@


1.2.10.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a19 3
 * Revision 1.2.10.1  1997/05/12  10:40:25  hope
 * branched from 1.2
 *
@


1.2.10.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a19 3
 * Revision 1.2.10.1.1.1  1997/07/28  18:25:10  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.2.9.1
log
@branched from 1.2
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.8.1
log
@branched from 1.2
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.8.1.1.1
log
@branched from 1.2.8.1
@
text
@a19 3
 * Revision 1.2.8.1  1996/12/17  17:53:26  hope
 * branched from 1.2
 *
@


1.2.7.1
log
@branched from 1.2
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.6.1
log
@branched from 1.2
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.5.1
log
@branched from 1.2
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.5.1.1.1
log
@branched from 1.2.5.1
@
text
@a19 3
 * Revision 1.2.5.1  1996/11/14  12:56:58  hope
 * branched from 1.2
 *
@


1.2.4.1
log
@branched from 1.2
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.3.1
log
@branched from 1.2
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a19 3
 * Revision 1.2  1994/06/09  14:44:49  nickh
 * new file
 *
@


1.1
log
@new file
@
text
@d19 4
a22 1
 *  $Log: options.h,v $
@
