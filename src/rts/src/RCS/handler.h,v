head	1.2;
access;
symbols
	hope_poo:1.2.1
	ML_beta_release_12/08/94:1.2.1.1
	ML_beta_release_03/08/94:1.2;
locks; strict;
comment	@ * @;


1.2
date	94.06.09.14.37.25;	author nickh;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	94.06.09.11.04.14;	author nickh;	state Exp;
branches;
next	;

1.2.1.1
date	95.07.05.10.31.34;	author hope;	state Exp;
branches;
next	;


desc
@new file
@


1.2
log
@new file
@
text
@/*  ==== TOP LEVEL EXCEPTION HANDLER ====
 *
 *  Copyright (C) 1992 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This function is called when an uncaught exception is generated by
 *  ML, and is passed the exception packet.
 *
 *  Revision Log
 *  ------------
 *  $Log: src:handler.h,v $
 * Revision 1.1  1994/06/09  11:04:14  nickh
 * new file
 *
 *  Revision 1.8  1992/10/26  14:05:34  richard
 *  Removed debugger related stuff.
 *
 *  Revision 1.7  1992/07/16  14:34:32  clive
 *  Added the single_step hook
 *
 *  Revision 1.6  1992/07/02  15:15:15  richard
 *  Some changes toward proper debugger installation.
 *
 *  Revision 1.5  1992/06/19  13:34:32  clive
 *  Added outstanding_interrupts flag
 *
 *  Revision 1.4  1992/06/11  11:43:57  clive
 *  Adjusted to allow the call of the ML debugger via a hook
 *
 *  Revision 1.3  1992/05/05  13:07:49  clive
 *  Take note of the maximum depth number specified in main
 *
 *  Revision 1.2  1992/01/08  13:17:08  richard
 *  Changed the type of handler as this is no longer called via
 *  interpret_callc and the ml_externals array.
 *
 *  Revision 1.1  1992/01/02  13:09:53  richard
 *  Initial revision
 *
 */


#ifndef handler_h
#define handler_h

#include "mltypes.h"

extern mlval handler(mlval packet);

#endif




@


1.2.1.1
log
@branched from 1.2
@
text
@a12 3
 * Revision 1.2  1994/06/09  14:37:25  nickh
 * new file
 *
@


1.1
log
@new file
@
text
@d12 4
a15 1
 *  $Log: handler.h,v $
@
