head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.1
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_MM_adapt:1.3.12
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_11r1:1.3.9.1.1.1.1
	MLWorks_workspace_97:1.3.11
	MLWorks_dt_wizard:1.3.10
	MLWorks_11c0_1997_09_09:1.3.9.1.1.1
	MLWorks_10r3:1.3.9.1.3
	MLWorks_10r2_551:1.3.9.1.2
	MLWorks_11:1.3.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.9.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.9
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MM_ML_release_korma_1997_04_01:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.7.1.1
	MLWorks_gui_1996_12_18:1.3.8
	MLWorks_1_0_Win32_1996_12_17:1.3.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	JFHrts:1.3.6
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.1
	MLWorks_Beta_1996_05_31:1.1
	MLWorks_Beta_1996_05_30:1.1;
locks; strict;
comment	@ * @;


1.4
date	98.04.23.14.18.52;	author jont;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	96.07.11.16.25.07;	author nickb;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1
	1.3.9.1
	1.3.10.1
	1.3.11.1
	1.3.12.1;
next	1.2;

1.2
date	96.06.03.16.25.52;	author nickb;	state Exp;
branches;
next	1.1;

1.1
date	96.02.14.14.06.59;	author nickb;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.21.35;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.11.37;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.30.16;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.12.56.13;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.15.06.43;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.14.23;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.10.01.10;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.17.17.52.54;	author hope;	state Exp;
branches
	1.3.7.1.1.1;
next	;

1.3.7.1.1.1
date	97.02.24.11.43.43;	author hope;	state Exp;
branches;
next	;

1.3.8.1
date	96.12.18.09.47.25;	author hope;	state Exp;
branches;
next	;

1.3.9.1
date	97.05.12.10.39.51;	author hope;	state Exp;
branches
	1.3.9.1.1.1
	1.3.9.1.2.1
	1.3.9.1.3.1;
next	;

1.3.9.1.1.1
date	97.07.28.18.24.40;	author daveb;	state Exp;
branches
	1.3.9.1.1.1.1.1;
next	;

1.3.9.1.1.1.1.1
date	97.10.07.11.50.27;	author jkbrook;	state Exp;
branches;
next	;

1.3.9.1.2.1
date	97.09.08.17.17.58;	author daveb;	state Exp;
branches;
next	;

1.3.9.1.3.1
date	97.09.09.14.14.09;	author daveb;	state Exp;
branches;
next	;

1.3.10.1
date	97.09.10.19.30.23;	author brucem;	state Exp;
branches;
next	;

1.3.11.1
date	97.09.11.20.59.59;	author daveb;	state Exp;
branches;
next	;

1.3.12.1
date	97.10.31.13.43.11;	author nickb;	state Exp;
branches;
next	;

1.4.1.1
date	99.04.01.18.00.11;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
The explorer.
@


1.4
log
@[Bug #70034]
Rationalising names in mem.h
@
text
@#ifndef explore_h
#define explore_h

/*  ==== HEAP EXPLORATION ====
 * 
 *  Copyright (C) 1995 Harlequin Ltd
 *
 *  This file implements the 'explorer': a debugging tool which allows one
 *  to navigate an MLWorks heap. It's intended for internal use by MLWorkers.
 *
 * $Log: src:explore.h,v $
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
 * Revision 1.2  1996/06/03  16:25:52  nickb
 * Add argument to explore() dictating whether the stacks should be examined.
 *
 * Revision 1.1  1996/02/14  14:06:59  nickb
 * new unit
 * The explorer.
 *
 */

#ifdef EXPLORER

#include "values.h"
#include "threads.h"
#include "stacks.h"

/* if explore() returns non-zero, the runtime should terminate. */

extern int explore (mlval what, int use_stacks);

extern void explore_root(mlval *root);

extern void explore_stack_registers(struct thread_state *thread,
				    struct stack_frame *frame,
				    mlval *base, mlval *top);

extern void explore_stack_allocated(struct thread_state *thread,
				    struct stack_frame *frame,
				    mlval *base, mlval *top);

extern void explore_heap_area(struct ml_heap *gen, mlval *base, mlval *top);

#endif /* EXPLORER */

#endif /* explore_h */
@


1.4.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a11 4
 * Revision 1.4  1998/04/23  14:18:52  jont
 * [Bug #70034]
 * Rationalising names in mem.h
 *
@


1.3
log
@Allow the explorer to exit the runtime and to explore executable images.
@
text
@d12 3
d44 1
a44 1
extern void explore_heap_area(struct gen *gen, mlval *base, mlval *top);
@


1.3.12.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a11 3
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
@


1.3.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a11 3
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
@


1.3.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a11 3
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
@


1.3.9.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
@


1.3.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a11 3
 * Revision 1.3.9.1  1997/05/12  10:39:51  hope
 * branched from 1.3
 *
@


1.3.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a11 3
 * Revision 1.3.9.1  1997/05/12  10:39:51  hope
 * branched from 1.3
 *
@


1.3.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a11 3
 * Revision 1.3.9.1  1997/05/12  10:39:51  hope
 * branched from 1.3
 *
@


1.3.9.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a11 3
 * Revision 1.3.9.1.1.1  1997/07/28  18:24:40  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3.8.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
@


1.3.7.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
@


1.3.7.1.1.1
log
@branched from 1.3.7.1
@
text
@a11 3
 * Revision 1.3.7.1  1996/12/17  17:52:54  hope
 * branched from 1.3
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a11 3
 * Revision 1.3.4.1  1996/11/14  12:56:13  hope
 * branched from 1.3
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/07/11  16:25:07  nickb
 * Allow the explorer to exit the runtime and to explore executable images.
 *
@


1.2
log
@Add argument to explore() dictating whether the stacks should be examined.
@
text
@d12 3
d27 3
a29 1
extern void explore (mlval what, int use_stacks);
@


1.1
log
@new unit
The explorer.
@
text
@d11 5
a15 1
 * $Log$
d24 1
a24 1
extern void explore (mlval what);
@
