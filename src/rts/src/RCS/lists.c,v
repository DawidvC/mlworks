head	1.3;
access;
symbols
	MLW_daveb_inline_1_4_99:1.3.1
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_MM_adapt:1.2.13
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_11r1:1.2.10.1.1.1.1
	MLWorks_workspace_97:1.2.12
	MLWorks_dt_wizard:1.2.11
	MLWorks_11c0_1997_09_09:1.2.10.1.1.1
	MLWorks_10r3:1.2.10.1.3
	MLWorks_10r2_551:1.2.10.1.2
	MLWorks_11:1.2.10.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.2.10.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.2.10.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.2.10.1
	MLWorks_1_0_r2c1_1997_05_12:1.2.10
	MLWorks_BugFix_1997_04_24:1.2
	MLWorks_1_0_r2_Win32_1997_04_11:1.2
	MLWorks_1_0_r2_Unix_1997_04_04:1.2
	MM_ML_release_korma_1997_04_01:1.2
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.2.8.1.1
	MLWorks_gui_1996_12_18:1.2.9
	MLWorks_1_0_Win32_1996_12_17:1.2.8
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.2.5.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.2.5.1
	JFHrts:1.2.7
	MLWorks_1_0_Irix_1996_11_28:1.2.5.1.1
	MLWorks_1_0_Win32_1996_11_22:1.2.6
	MLWorks_1_0_Unix_1996_11_14:1.2.5
	MLWorks_Open_Beta2_1996_10_11:1.2.4
	MLWorks_License_dev:1.2.3
	MLWorks_1_open_beta_1996_09_13:1.2.2
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2
	hope_poo:1.2.1
	ML_beta_release_12/08/94:1.2.1.1
	ML_beta_release_03/08/94:1.2;
locks; strict;
comment	@ * @;


1.3
date	98.02.23.18.17.45;	author jont;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	94.06.09.14.38.05;	author nickh;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1
	1.2.5.1
	1.2.6.1
	1.2.7.1
	1.2.8.1
	1.2.9.1
	1.2.10.1
	1.2.11.1
	1.2.12.1
	1.2.13.1;
next	1.1;

1.1
date	94.06.09.11.05.13;	author nickh;	state Exp;
branches;
next	;

1.2.1.1
date	95.07.05.10.28.31;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.09.13.11.25.03;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.07.16.15.26;	author hope;	state Exp;
branches;
next	;

1.2.4.1
date	96.10.17.11.34.51;	author hope;	state Exp;
branches;
next	;

1.2.5.1
date	96.11.14.13.00.31;	author hope;	state Exp;
branches
	1.2.5.1.1.1;
next	;

1.2.5.1.1.1
date	96.11.28.15.10.34;	author hope;	state Exp;
branches;
next	;

1.2.6.1
date	96.11.22.18.18.21;	author hope;	state Exp;
branches;
next	;

1.2.7.1
date	96.12.17.10.05.04;	author hope;	state Exp;
branches;
next	;

1.2.8.1
date	96.12.17.17.56.39;	author hope;	state Exp;
branches
	1.2.8.1.1.1;
next	;

1.2.8.1.1.1
date	97.02.24.11.48.16;	author hope;	state Exp;
branches;
next	;

1.2.9.1
date	96.12.18.09.51.18;	author hope;	state Exp;
branches;
next	;

1.2.10.1
date	97.05.12.10.44.59;	author hope;	state Exp;
branches
	1.2.10.1.1.1
	1.2.10.1.2.1
	1.2.10.1.3.1;
next	;

1.2.10.1.1.1
date	97.07.28.18.24.43;	author daveb;	state Exp;
branches
	1.2.10.1.1.1.1.1;
next	;

1.2.10.1.1.1.1.1
date	97.10.07.11.50.31;	author jkbrook;	state Exp;
branches;
next	;

1.2.10.1.2.1
date	97.09.08.17.18.01;	author daveb;	state Exp;
branches;
next	;

1.2.10.1.3.1
date	97.09.09.14.14.12;	author daveb;	state Exp;
branches;
next	;

1.2.11.1
date	97.09.10.19.30.29;	author brucem;	state Exp;
branches;
next	;

1.2.12.1
date	97.09.11.21.00.05;	author daveb;	state Exp;
branches;
next	;

1.2.13.1
date	97.10.31.13.43.16;	author nickb;	state Exp;
branches;
next	;

1.3.1.1
date	99.04.01.18.00.24;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.3
log
@[Bug #70018]
Modify declare_root to accept a second parameter
indicating whether the root is live for image save
@
text
@/*  ==== PERVASIVE LISTS ====
 *
 *  Copyright (C) 1992 Harlequin Ltd
 *
 *  Revision Log
 *  ------------
 *  $Log: src:lists.c,v $
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
 * Revision 1.1  1994/06/09  11:05:13  nickh
 * new file
 *
 *  Revision 1.5  1993/02/01  16:13:18  richard
 *  Abolished SETFIELD and GETFIELD in favour of lvalue FIELD.
 *
 *  Revision 1.4  1993/01/14  14:59:27  daveb
 *  Temporary disabling assembler version of append, pending debugging
 *  of new version.
 *
 *  Revision 1.3  1993/01/14  13:16:18  daveb
 *  Changed definition of append to use new representation of lists.
 *
 *  Revision 1.2  1992/11/25  15:46:10  clive
 *  Added an assembler routine to do append
 *
 *  Revision 1.1  1992/10/23  16:15:44  richard
 *  Initial revision
 *
 */


#include "lists.h"
#include "mltypes.h"
#include "values.h"
#include "environment.h"
#include "gc.h"
#include "allocator.h"

static mlval first, second, tmp;

/*  == Append lists ==
 *
 *  This function could be written in ML, but is included here for
 *  efficiency.  It is rather sneaky.
 *
 *  It makes two passes over the first list.  On the first pass it attaches
 *  a list of MLUNITs to the front of the second list.  On the second pass
 *  it fills the new cells in with the contents of the first list.  It it
 *  alright to update the new cells because they are guaranteed to be
 *  younger than anything else.
 */

#define CONS_SIZE 2

static mlval append(mlval argument)
{
  mlval t, r;
  size_t length = 0;

  first = FIELD(argument, 0);
  second = FIELD(argument, 1);

  for(tmp = first; tmp != MLNIL; tmp = MLTAIL(tmp))
    length++;

  while(length > 0)
  {
    mlval *multiple_allocation;
    int multiple_allocated =
	  allocate_multiple(CONS_SIZE,length,&multiple_allocation);

    if(multiple_allocated)
    {
      length -= multiple_allocated;
      for(; multiple_allocated > 0;
	  multiple_allocated--, multiple_allocation += CONS_SIZE)
      {
	multiple_allocation[0] = MLUNIT;
	multiple_allocation[1] = second;
	second = MLPTR(PAIRPTR, &multiple_allocation[0]);
      }
    }
    else	
    {
      length--;
      tmp = allocate_record(2);
      FIELD(tmp, 0) = MLUNIT;
      FIELD(tmp, 1) = second;
      second = tmp;
    }
  }

  for(r = first, t = second; r != MLNIL; r = MLTAIL(r), t = MLTAIL(t))
    MLHEAD(t) = MLHEAD(r);

  t = second;
  first = second = tmp = MLUNIT;

  return(t);
}


/*  === INITIALISE ===  */

void lists_init()
{
  first = second = tmp = MLUNIT;
  declare_root(&first, 0);
  declare_root(&second, 0);
  declare_root(&tmp, 0);

  env_function("list append", append);
}
@


1.3.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a7 5
 * Revision 1.3  1998/02/23  18:17:45  jont
 * [Bug #70018]
 * Modify declare_root to accept a second parameter
 * indicating whether the root is live for image save
 *
@


1.2
log
@new file
@
text
@d8 3
d109 3
a111 3
  declare_root(&first);
  declare_root(&second);
  declare_root(&tmp);
@


1.2.13.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.2.12.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.2.11.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.2.10.1
log
@branched from 1.2
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.2.10.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a7 3
 * Revision 1.2.10.1  1997/05/12  10:44:59  hope
 * branched from 1.2
 *
@


1.2.10.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a7 3
 * Revision 1.2.10.1  1997/05/12  10:44:59  hope
 * branched from 1.2
 *
@


1.2.10.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a7 3
 * Revision 1.2.10.1  1997/05/12  10:44:59  hope
 * branched from 1.2
 *
@


1.2.10.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a7 3
 * Revision 1.2.10.1.1.1  1997/07/28  18:24:43  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.2.9.1
log
@branched from 1.2
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.2.8.1
log
@branched from 1.2
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.2.8.1.1.1
log
@branched from 1.2.8.1
@
text
@a7 3
 * Revision 1.2.8.1  1996/12/17  17:56:39  hope
 * branched from 1.2
 *
@


1.2.7.1
log
@branched from 1.2
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.2.6.1
log
@branched from 1.2
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.2.5.1
log
@branched from 1.2
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.2.5.1.1.1
log
@branched from 1.2.5.1
@
text
@a7 3
 * Revision 1.2.5.1  1996/11/14  13:00:31  hope
 * branched from 1.2
 *
@


1.2.4.1
log
@branched from 1.2
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.2.3.1
log
@branched from 1.2
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:38:05  nickh
 * new file
 *
@


1.1
log
@new file
@
text
@d7 4
a10 1
 *  $Log: lists.c,v $
@
