head	1.14;
access;
symbols
	MLW_daveb_inline_1_4_99:1.14.1
	MLWorks_21c0_1999_03_25:1.14
	MLWorks_20c1_1998_08_20:1.14
	MLWorks_20c0_1998_08_04:1.13
	MLWorks_20b2c2_1998_06_19:1.12
	MLWorks_20b2_Windows_1998_06_12:1.12
	MLWorks_20b1c1_1998_05_07:1.11
	MLWorks_20b0_1998_04_07:1.11
	MLWorks_20b0_1998_03_20:1.11
	MLWorks_20m2_1998_02_16:1.9
	MLWorks_MM_adapt:1.9.3
	MLWorks_20m1_1997_10_23:1.9
	MLWorks_11r1:1.6.1.1.1.5.1
	MLWorks_workspace_97:1.9.2
	MLWorks_dt_wizard:1.9.1
	MLWorks_11c0_1997_09_09:1.6.1.1.1.5
	MLWorks_10r3:1.6.1.1.3
	MLWorks_10r2_551:1.6.1.1.2
	MLWorks_11:1.6.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.1.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.6.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.1
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MM_ML_release_korma_1997_04_01:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.4.1.1
	MLWorks_gui_1996_12_18:1.4.5
	MLWorks_1_0_Win32_1996_12_17:1.4.4
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.1.1
	JFHrts:1.4.3
	MLWorks_1_0_Irix_1996_11_28:1.4.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.2
	MLWorks_1_0_Unix_1996_11_14:1.4.1
	MLWorks_Open_Beta2_1996_10_11:1.2.4
	MLWorks_License_dev:1.2.3
	MLWorks_1_open_beta_1996_09_13:1.2.2
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2
	hope_poo:1.2.1
	ML_beta_release_12/08/94:1.2.1.1
	ML_beta_release_03/08/94:1.2;
locks; strict;
comment	@ * @;


1.14
date	98.08.17.13.32.55;	author jkbrook;	state Exp;
branches
	1.14.1.1;
next	1.13;

1.13
date	98.07.10.14.19.05;	author jkbrook;	state Exp;
branches;
next	1.12;

1.12
date	98.06.11.14.15.22;	author jkbrook;	state Exp;
branches;
next	1.11;

1.11
date	98.03.12.14.44.16;	author jkbrook;	state Exp;
branches;
next	1.10;

1.10
date	98.03.12.14.03.07;	author jkbrook;	state Exp;
branches;
next	1.9;

1.9
date	97.09.01.11.23.36;	author jkbrook;	state Exp;
branches
	1.9.1.1
	1.9.2.1
	1.9.3.1;
next	1.8;

1.8
date	97.08.01.15.43.34;	author jkbrook;	state Exp;
branches;
next	1.7;

1.7
date	97.07.24.16.52.08;	author jkbrook;	state Exp;
branches;
next	1.6;

1.6
date	97.01.07.13.19.34;	author jont;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	96.12.19.12.07.32;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	96.10.23.11.18.41;	author jont;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1;
next	1.3;

1.3
date	96.10.17.14.04.45;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	94.06.09.14.40.58;	author nickh;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1;
next	1.1;

1.1
date	94.06.09.11.08.43;	author nickh;	state Exp;
branches;
next	;

1.2.1.1
date	95.07.05.10.31.23;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.09.13.11.24.57;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.07.16.15.19;	author hope;	state Exp;
branches;
next	1.2.3.2;

1.2.3.2
date	96.10.08.16.13.38;	author jont;	state Exp;
branches;
next	1.2.3.3;

1.2.3.3
date	96.10.09.12.05.36;	author nickb;	state Exp;
branches;
next	1.2.3.4;

1.2.3.4
date	96.10.15.14.46.01;	author jont;	state Exp;
branches;
next	;

1.2.4.1
date	96.10.17.11.34.45;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	96.11.14.13.00.26;	author hope;	state Exp;
branches
	1.4.1.1.1.1;
next	;

1.4.1.1.1.1
date	96.11.28.15.10.28;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.11.22.18.18.16;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.12.17.10.04.58;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.12.17.17.56.34;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	97.02.24.11.48.09;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.12.18.09.51.12;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	97.05.12.10.44.52;	author hope;	state Exp;
branches
	1.6.1.1.1.1
	1.6.1.1.2.1
	1.6.1.1.3.1;
next	;

1.6.1.1.1.1
date	97.07.28.18.28.35;	author daveb;	state Exp;
branches;
next	1.6.1.1.1.2;

1.6.1.1.1.2
date	97.08.11.08.49.44;	author jkbrook;	state Exp;
branches;
next	1.6.1.1.1.3;

1.6.1.1.1.3
date	97.08.11.16.27.16;	author jkbrook;	state Exp;
branches;
next	1.6.1.1.1.4;

1.6.1.1.1.4
date	97.09.04.11.41.43;	author jkbrook;	state Exp;
branches;
next	1.6.1.1.1.5;

1.6.1.1.1.5
date	97.09.05.14.02.32;	author jkbrook;	state Exp;
branches
	1.6.1.1.1.5.1.1;
next	;

1.6.1.1.1.5.1.1
date	97.10.07.11.54.28;	author jkbrook;	state Exp;
branches;
next	;

1.6.1.1.2.1
date	97.09.08.17.21.34;	author daveb;	state Exp;
branches;
next	;

1.6.1.1.3.1
date	97.09.09.14.17.39;	author daveb;	state Exp;
branches;
next	;

1.9.1.1
date	97.09.10.19.36.44;	author brucem;	state Exp;
branches;
next	;

1.9.2.1
date	97.09.11.21.04.54;	author daveb;	state Exp;
branches;
next	;

1.9.3.1
date	97.10.31.13.47.56;	author nickb;	state Exp;
branches;
next	;

1.14.1.1
date	99.04.01.18.03.38;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.14
log
@[Bug #50100]
Export license_edition
@
text
@/*  === LICENSING ===
 *
 *  Copyright (C) 1992 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  The license function is a black box which takes care of licensing.
 *
 *  Revision Log
 *  ------------
 *  $Log: src:license.h,v $
 * Revision 1.13  1998/07/10  14:19:05  jkbrook
 * [Bug #40435]
 * Add new responses to license errors
 *
 * Revision 1.12  1998/06/11  14:15:22  jkbrook
 * [Bug #30411]
 * Handle free copies of MLWorks
 *
 * Revision 1.11  1998/03/12  14:44:16  jkbrook
 * [Bug #30368]
 * Update version info for 2.0b0
 *
 * Revision 1.10  1998/03/12  14:03:07  jkbrook
 * [Bug #50044]
 * Licence codes should not contain 0 or 1
 * or lower-case letters on input
 *
 * Revision 1.9  1997/09/01  11:23:36  jkbrook
 * [Bug #30227]
 * Moving license_check_result type and specific edition info
 * from register.h since they are not used by mklic
 *
 * Revision 1.8  1997/08/01  15:43:34  jkbrook
 * [Bug #20072]
 * Adding edition info (e.g., student, personal) to licensing
 *
 * Revision 1.7  1997/07/24  16:52:08  jkbrook
 * [Bug #20077]
 * Adding an install-by date
 *
 * Revision 1.6  1997/01/07  13:19:34  jont
 * [Bug #1884]
 * Add a license expired error message
 *
 * Revision 1.5  1996/12/19  12:07:32  jont
 * Add definition of license error string for common use
 *
 * Revision 1.4  1996/10/23  11:18:41  jont
 * Add flag to indicate how to process license failure
 *
 * Revision 1.3  1996/10/17  14:04:45  jont
 * Merging in license server stuff
 *
 * Revision 1.2.3.4  1996/10/15  14:46:01  jont
 * Make license_release extern
 *
 * Revision 1.2.3.3  1996/10/09  12:05:36  nickb
 * interval is no longer extern.
 *
 * Revision 1.2.3.2  1996/10/08  16:13:38  jont
 * Add interface for use by signal handler
 *
 * Revision 1.2.3.1  1996/10/07  16:15:19  hope
 * branched from 1.2
 *
 * Revision 1.2  1994/06/09  14:40:58  nickh
 * new file
 *
 * Revision 1.1  1994/06/09  11:08:43  nickh
 * new file
 *
 *  Revision 1.1  1992/12/17  17:26:28  richard
 *  Initial revision
 *
 */

#ifndef license_h
#define license_h

#include "hqn_ls.h"
#include "mlw_mklic.h"

/* license_init prepares things for licensing to run. Licensing is
   actually started by a call from ML (so the runtime on its own is
   not licensed. */

extern void license_init(void);

/* refresh_license is called by the timer set up by
 * signal_license_timer (see signals.h). */

extern void refresh_license(void);

/* The license should be released by main when it exits
 * This gets around systems which only allow one atexit function
 */

extern void license_release(void);

/* this type must correspond to that in main/_license.sml */
/* alphabetical order of identifiers must be preserved when
adding new values */

enum license_check_result {EXPIRED,
                           ILLEGAL_CHARS,
                           INSTALLDATE,
                           INTERNAL_ERROR,
                           INVALID,
                           NOT_FOUND,
                           OK,
                           WRONG_EDITION};

extern int license_failure_hang;

extern int act_as_free;

extern enum edition license_edition;

#define LICENSE_ERROR_CONTACT \
  "Contact MLWorks customer license support:\n"\
  "   North and South America, Japan:\n"\
  "     mail mlworks-keys@@harlequin.com\n"\
  "   UK, Europe, Australasia, Africa, Asia:\n"\
  "     mail mlworks-keys@@harlequin.co.uk"

/* We need two versions of each error message, one for the initial
   license-code entry and validation stage (*REG) and the other for
   the initial check within MLWorks which offers a Personal session
   in the case in which license info has become corrupt but no longer 
   prompts for new info.
*/

#define LICENSE_ERROR_INVALID \
  "Your license is invalid.\n" 

#define LICENSE_ERROR_EXPIRED \
  "Your license has expired.\n" 

#define LICENSE_ERROR_INSTALL \
  "Your license installation date has passed.\n" 

#define LICENSE_ERROR_VERSION \
  "Your license is for a different edition of MLWorks.\n" 

#define LICENSE_ERROR_CHARS \
   "The license code input contains illegal characters\n0 (zero) or 1 (one) or lower-case letters. \nPlease retry.\n" 


#define LICENSE_ERROR_INVALID_REG \
  LICENSE_ERROR_INVALID LICENSE_ERROR_CONTACT

#define LICENSE_ERROR_EXPIRED_REG \
  LICENSE_ERROR_EXPIRED LICENSE_ERROR_CONTACT

#define LICENSE_ERROR_INSTALL_REG \
  LICENSE_ERROR_INSTALL LICENSE_ERROR_CONTACT

#define LICENSE_ERROR_VERSION_REG \
  LICENSE_ERROR_VERSION LICENSE_ERROR_CONTACT

#define LICENSE_ERROR_CHARS_REG \
  LICENSE_ERROR_CHARS LICENSE_ERROR_CONTACT

#endif
@


1.14.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a11 4
 * Revision 1.14  1998/08/17  13:32:55  jkbrook
 * [Bug #50100]
 * Export license_edition
 *
@


1.13
log
@[Bug #40435]
Add new responses to license errors
@
text
@d12 4
d82 1
d117 2
@


1.12
log
@[Bug #30411]
Handle free copies of MLWorks
@
text
@d12 4
d120 7
d128 1
a128 1
  "Your license is invalid.\n" LICENSE_ERROR_CONTACT
d131 1
a131 1
  "Your license has expired.\n" LICENSE_ERROR_CONTACT
d134 1
a134 1
  "Your license installation date has passed.\n" LICENSE_ERROR_CONTACT
d137 1
a137 1
  "Your license is for a different edition of MLWorks.\n" LICENSE_ERROR_CONTACT
d140 17
a156 1
   "The license code input contains illegal characters\n0 (zero) or 1 (one) or lower-case letters. \nPlease retry.\n" LICENSE_ERROR_CONTACT
@


1.11
log
@[Bug #30368]
Update version info for 2.0b0
@
text
@d12 4
d105 1
a105 1
/* the edition of this particular runtime */
d107 1
a107 3
#define EDITION BETA

extern int license_failure_hang;
@


1.10
log
@[Bug #50044]
Licence codes should not contain 0 or 1
or lower-case letters on input
@
text
@d12 5
d103 1
a103 1
#define EDITION PERSONAL
@


1.9
log
@[Bug #30227]
Moving license_check_result type and specific edition info
from register.h since they are not used by mklic
@
text
@d12 5
d88 1
d120 3
@


1.9.3.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a11 5
 * Revision 1.9  1997/09/01  11:23:36  jkbrook
 * [Bug #30227]
 * Moving license_check_result type and specific edition info
 * from register.h since they are not used by mklic
 *
@


1.9.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a11 5
 * Revision 1.9  1997/09/01  11:23:36  jkbrook
 * [Bug #30227]
 * Moving license_check_result type and specific edition info
 * from register.h since they are not used by mklic
 *
@


1.9.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a11 5
 * Revision 1.9  1997/09/01  11:23:36  jkbrook
 * [Bug #30227]
 * Moving license_check_result type and specific edition info
 * from register.h since they are not used by mklic
 *
@


1.8
log
@[Bug #20072]
Adding edition info (e.g., student, personal) to licensing
@
text
@d12 4
d77 16
@


1.7
log
@[Bug #20077]
Adding an install-by date
@
text
@d12 4
d91 3
@


1.6
log
@[Bug #1884]
Add a license expired error message
@
text
@d12 4
d84 3
@


1.6.1.1
log
@branched from 1.6
@
text
@a11 4
 * Revision 1.6  1997/01/07  13:19:34  jont
 * [Bug #1884]
 * Add a license expired error message
 *
@


1.6.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a11 3
 * Revision 1.6.1.1  1997/05/12  10:44:52  hope
 * branched from 1.6
 *
@


1.6.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a11 3
 * Revision 1.6.1.1  1997/05/12  10:44:52  hope
 * branched from 1.6
 *
@


1.6.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a11 3
 * Revision 1.6.1.1  1997/05/12  10:44:52  hope
 * branched from 1.6
 *
@


1.6.1.1.1.2
log
@[Bug #20077]
Merging into 1.1:
Adding an install-by date
@
text
@a11 3
 * Revision 1.6.1.1.1.1  1997/07/28  18:28:35  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
a86 3

#define LICENSE_ERROR_INSTALL \
  "Your license installation date has passed.\n" LICENSE_ERROR_CONTACT
@


1.6.1.1.1.3
log
@[Bug #20072]
Merging into 1.1:
Adding edition info
@
text
@a11 5
 * Revision 1.6.1.1.1.2  1997/08/11  08:49:44  jkbrook
 * [Bug #20077]
 * Merging into 1.1:
 * Adding an install-by date
 *
a92 3

#define LICENSE_ERROR_VERSION \
  "Your license is for a different edition of MLWorks.\n" LICENSE_ERROR_CONTACT
@


1.6.1.1.1.4
log
@[Bug #30227]
Merging into 1.1:
Move definition of license_check_result and EDITION from register.h
@
text
@a11 5
 * Revision 1.6.1.1.1.3  1997/08/11  16:27:16  jkbrook
 * [Bug #20072]
 * Merging into 1.1:
 * Adding edition info
 *
a79 16

/* this type must correspond to that in main/_license.sml */
/* alphabetical order of identifiers must be preserved when
adding new values */

enum license_check_result {EXPIRED,
                           INSTALLDATE,
                           INTERNAL_ERROR,
                           INVALID,
                           NOT_FOUND,
                           OK,
                           WRONG_EDITION};

/* the edition of this particular runtime */

#define EDITION PERSONAL
@


1.6.1.1.1.5
log
@[Bug #30258]
Fixing merge fault -- resetting EDITION to STUDENT
@
text
@a11 5
 * Revision 1.6.1.1.1.4  1997/09/04  11:41:43  jkbrook
 * [Bug #30227]
 * Merging into 1.1:
 * Move definition of license_check_result and EDITION from register.h
 *
d100 1
a100 1
#define EDITION STUDENT
@


1.6.1.1.1.5.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a11 4
 * Revision 1.6.1.1.1.5  1997/09/05  14:02:32  jkbrook
 * [Bug #30258]
 * Fixing merge fault -- resetting EDITION to STUDENT
 *
@


1.5
log
@Add definition of license error string for common use
@
text
@d12 3
d68 1
a68 2
#define LICENSE_ERROR_STRING \
  "Your license is invalid.\n"\
d75 5
@


1.4
log
@Add flag to indicate how to process license failure
@
text
@d12 3
d64 9
@


1.4.5.1
log
@branched from 1.4
@
text
@a11 3
 * Revision 1.4  1996/10/23  11:18:41  jont
 * Add flag to indicate how to process license failure
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a11 3
 * Revision 1.4  1996/10/23  11:18:41  jont
 * Add flag to indicate how to process license failure
 *
@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@a11 3
 * Revision 1.4.4.1  1996/12/17  17:56:34  hope
 * branched from 1.4
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a11 3
 * Revision 1.4  1996/10/23  11:18:41  jont
 * Add flag to indicate how to process license failure
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a11 3
 * Revision 1.4  1996/10/23  11:18:41  jont
 * Add flag to indicate how to process license failure
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a11 3
 * Revision 1.4  1996/10/23  11:18:41  jont
 * Add flag to indicate how to process license failure
 *
@


1.4.1.1.1.1
log
@branched from 1.4.1.1
@
text
@a11 3
 * Revision 1.4.1.1  1996/11/14  13:00:26  hope
 * branched from 1.4
 *
@


1.3
log
@Merging in license server stuff
@
text
@d12 3
d59 2
@


1.2
log
@new file
@
text
@d7 1
a7 2
 *  The license function is a black box which takes care The process is forked.  The child continues with the normal running, the
 *  parent monitors the license and kills them both if it expires.
d12 15
d37 20
a56 1
extern void license(void);
@


1.2.4.1
log
@branched from 1.2
@
text
@a12 3
 * Revision 1.2  1994/06/09  14:40:58  nickh
 * new file
 *
@


1.2.3.1
log
@branched from 1.2
@
text
@a12 3
 * Revision 1.2  1994/06/09  14:40:58  nickh
 * new file
 *
@


1.2.3.2
log
@Add interface for use by signal handler
@
text
@a12 3
 * Revision 1.2.3.1  1996/10/07  16:15:19  hope
 * branched from 1.2
 *
a25 5

#include "hqn_ls.h"

extern hls_uint license_period;

a26 3

extern void refresh_license(void);

@


1.2.3.3
log
@interval is no longer extern.
@
text
@d7 2
a8 1
 *  The license function is a black box which takes care of licensing.
a12 3
 * Revision 1.2.3.2  1996/10/08  16:13:38  jont
 * Add interface for use by signal handler
 *
d32 1
a32 5
/* license_init prepares things for licensing to run. Licensing is
   actually started by a call from ML (so the runtime on its own is
   not licensed. */

extern void license_init(void);
d34 1
a34 2
/* refresh_license is called by the timer set up by
 * signal_license_timer (see signals.h). */
@


1.2.3.4
log
@Make license_release extern
@
text
@a11 3
 * Revision 1.2.3.3  1996/10/09  12:05:36  nickb
 * interval is no longer extern.
 *
a43 6

/* The license should be released by main when it exits
 * This gets around systems which only allow one atexit function
 */

extern void license_release(void);
@


1.2.2.1
log
@branched from 1.2
@
text
@a12 3
 * Revision 1.2  1994/06/09  14:40:58  nickh
 * new file
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a12 3
 * Revision 1.2  1994/06/09  14:40:58  nickh
 * new file
 *
@


1.1
log
@new file
@
text
@d12 4
a15 1
 *  $Log: license.h,v $
@
