head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.1
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.1
	MLWorks_MM_adapt:1.1.12
	MLWorks_20m1_1997_10_23:1.1
	MLWorks_11r1:1.1.9.1.1.1.1
	MLWorks_workspace_97:1.1.11
	MLWorks_dt_wizard:1.1.10
	MLWorks_11c0_1997_09_09:1.1.9.1.1.1
	MLWorks_10r3:1.1.9.1.3
	MLWorks_10r2_551:1.1.9.1.2
	MLWorks_11:1.1.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.9.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c2_1997_06_14:1.1.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.9
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1
	MM_ML_release_korma_1997_04_01:1.1
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.7.1.1
	MLWorks_gui_1996_12_18:1.1.8
	MLWorks_1_0_Win32_1996_12_17:1.1.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.4.1
	JFHrts:1.1.6
	MLWorks_1_0_Irix_1996_11_28:1.1.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.5
	MLWorks_1_0_Unix_1996_11_14:1.1.4
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1
	MLWorks_Beta_1996_07_02:1.1
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1
	MLWorks_Beta_1996_06_03:1.1
	MLWorks_Beta_1996_05_31:1.1
	MLWorks_Beta_1996_05_30:1.1;
locks; strict;
comment	@ * @;


1.4
date	98.08.11.12.07.37;	author jont;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	98.04.20.12.43.24;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	98.03.20.13.49.00;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	96.02.19.15.36.26;	author stephenb;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1
	1.1.6.1
	1.1.7.1
	1.1.8.1
	1.1.9.1
	1.1.10.1
	1.1.11.1
	1.1.12.1;
next	;

1.1.1.1
date	96.09.13.11.23.42;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.16.13.55;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.33.21;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	96.11.14.12.59.04;	author hope;	state Exp;
branches
	1.1.4.1.1.1;
next	;

1.1.4.1.1.1
date	96.11.28.15.09.03;	author hope;	state Exp;
branches;
next	;

1.1.5.1
date	96.11.22.18.16.47;	author hope;	state Exp;
branches;
next	;

1.1.6.1
date	96.12.17.10.03.31;	author hope;	state Exp;
branches;
next	;

1.1.7.1
date	96.12.17.17.55.08;	author hope;	state Exp;
branches
	1.1.7.1.1.1;
next	;

1.1.7.1.1.1
date	97.02.24.11.46.17;	author hope;	state Exp;
branches;
next	;

1.1.8.1
date	96.12.18.09.49.44;	author hope;	state Exp;
branches;
next	;

1.1.9.1
date	97.05.12.10.42.09;	author hope;	state Exp;
branches
	1.1.9.1.1.1
	1.1.9.1.2.1
	1.1.9.1.3.1;
next	;

1.1.9.1.1.1
date	97.07.28.18.25.04;	author daveb;	state Exp;
branches
	1.1.9.1.1.1.1.1;
next	;

1.1.9.1.1.1.1.1
date	97.10.07.11.50.57;	author jkbrook;	state Exp;
branches;
next	;

1.1.9.1.2.1
date	97.09.08.17.18.18;	author daveb;	state Exp;
branches;
next	;

1.1.9.1.3.1
date	97.09.09.14.14.30;	author daveb;	state Exp;
branches;
next	;

1.1.10.1
date	97.09.10.19.30.53;	author brucem;	state Exp;
branches;
next	;

1.1.11.1
date	97.09.11.21.00.28;	author daveb;	state Exp;
branches;
next	;

1.1.12.1
date	97.10.31.13.43.35;	author nickb;	state Exp;
branches;
next	;

1.4.1.1
date	99.04.01.18.00.37;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
This used to be called src/rts/src/OS/common/wintimer.c
@


1.4
log
@[Bug #01957]
Retry setTimeEvent if it returns NULL
@
text
@/*  ==== TIMER INTERFACE FOR WIN32 ====
 *
 *  Copyright (C) 1995 Harlequin Ltd
 *
 *  Notes:
 * 
 *  Under Windows, we cannot use a Unix-style signal handler to run
 *  our profiling and thread preemption timer code. Instead we use
 *  "multi-media timers" (intimately connected with joysticks, in that
 *  serious programming environment which is Windows). Sadly these are
 *  real-time rather than virtual-time, so they run constantly. 
 *  
 *  Revision Log
 *  ------------
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.3  1998/04/20  12:43:24  jont
 * [Bug #70100]
 * Remove compiler warning
 *
 * Revision 1.2  1998/03/20  13:49:00  jont
 * [Bug #70083]
 * Ensure that all timer events that are created are killed
 * Avoid trying to kill timer events that haven't ticked
 * as this seems to cause NT to hang
 *
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
 * Revision 1.4  1996/02/14  10:53:41  jont
 * Add some type casts to achieve compilation under VC++ without warnings
 *
 * Revision 1.3  1996/01/18  12:56:34  stephenb
 * Add missing include file needed in order to get it to compile!
 *
 * Revision 1.2  1996/01/17  17:05:20  nickb
 * Add control-key handling here.
 *
 * Revision 1.1  1995/11/15  15:11:57  nickb
 * new unit
 * Timer facilities (for profiling and thread preemption).
 * */

#include "utils.h"
#include "types.h"
#include "diagnostic.h"
#include "native_threads.h"
#include "event.h"

#include <windows.h>
#include <mmsystem.h>

static unsigned long int time_resolution;

static void get_min_period(void)
{
  TIMECAPS tc;
  MMRESULT result = timeGetDevCaps(&tc, sizeof(TIMECAPS));
  switch(result) {
  case TIMERR_NOERROR:
    DIAGNOSTIC(4,"time caps: %d min, %d max",tc.wPeriodMin,tc.wPeriodMax);
    break;
  case TIMERR_STRUCT:
    error("timeGetDevCaps() failed");
  default:
    error ("timeGetDevCaps() returned %d",result);
  }
  time_resolution = tc.wPeriodMin;
}

static void time_begin(void)
{
  MMRESULT result = timeBeginPeriod(time_resolution);
  switch(result) {
  case TIMERR_NOERROR:
    DIAGNOSTIC(4,"timeBeginPeriod(%d) succeeded",time_resolution,0);
    break;
  case TIMERR_NOCANDO:
    error("timeBeginPeriod() reports that %d resolution is not possible",
	  time_resolution);
  default:
    error("timeBeginPeriod() returned %d",result);
  }
}

extern void init_timer(void)
{
  get_min_period();
  time_begin();
}

MMRESULT timer_event;

static void CALLBACK time_callback(UINT id,
				   UINT msg,
				   DWORD arg,
				   DWORD dw1,
				   DWORD dw2)
{
  DIAGNOSTIC(4,"in timer callback, notifying timer thread",0,0);
  timer_event = (MMRESULT)NULL;
  notify_timer_thread();
}

extern void start_timer(unsigned int milliseconds)
{
/* would like to use TIME_CALLBACK_EVENT_SET here, but it doesn't work
 * on Win95 */
  int tries = 0;
  while (tries < 10) {
    timer_event = timeSetEvent(milliseconds,	/* how soon */
			       time_resolution,	/* with what resolution */
			       (LPTIMECALLBACK) time_callback,
			       0,			/* argument to time_callback */
			       TIME_ONESHOT);	/* not periodic */
    if (timer_event == (MMRESULT)NULL) {
      tries++;
      DIAGNOSTIC(1, "timeSetEvent() returned NULL at try %d", tries, 0);
    } else {
      DIAGNOSTIC(4,"set timer event id %d with delay of %dms",
		 timer_event,milliseconds);
      break;
    }
  }
  if (tries >= 10)
    error("timeSetEvent() returned NULL");
}

extern void stop_timer(void)
{
  if (timer_event) {
    timer_event = (MMRESULT)NULL;
  }
}

/* ctrl-c handling */

BOOL control_key_handler(DWORD ctrl_type)
{
  switch (ctrl_type) {

  case CTRL_C_EVENT:
    record_event(EV_INTERRUPT, (word) 0);
    return TRUE;

  case CTRL_BREAK_EVENT:
  case CTRL_CLOSE_EVENT:
  case CTRL_LOGOFF_EVENT:
  case CTRL_SHUTDOWN_EVENT:
    return FALSE;
  }
}

extern int win32_set_ctrl_c_handler(void)
{
  BOOL result = SetConsoleCtrlHandler((PHANDLER_ROUTINE)control_key_handler,
				      TRUE);
  if (result == FALSE)
    return -1;
  else
    return 0;
}

extern int win32_clear_ctrl_c_handler(void)
{
  BOOL result = SetConsoleCtrlHandler((PHANDLER_ROUTINE)control_key_handler,
				      FALSE);
  if (result == FALSE)
    return -1;
  else
    return 0;
}
@


1.4.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a15 4
 * Revision 1.4  1998/08/11  12:07:37  jont
 * [Bug #01957]
 * Retry setTimeEvent if it returns NULL
 *
@


1.3
log
@[Bug #70100]
Remove compiler warning
@
text
@d16 4
d109 17
a125 6
  timer_event = timeSetEvent(milliseconds,	/* how soon */
			     time_resolution,	/* with what resolution */
			     (LPTIMECALLBACK) time_callback,
			     0,			/* argument to time_callback */
			     TIME_ONESHOT);	/* not periodic */
  if (timer_event == (MMRESULT)NULL)
a126 2
  DIAGNOSTIC(4,"set timer event id %d with delay of %dms",
	     timer_event,milliseconds);
@


1.2
log
@[Bug #70083]
Ensure that all timer events that are created are killed
Avoid trying to kill timer events that haven't ticked
as this seems to cause NT to hang
@
text
@d16 6
a117 1
  MMRESULT result;
a118 1
    DIAGNOSTIC(4,"timeKillEvent(%d) returned %d\n",timer_event,result);
@


1.1
log
@new unit
This used to be called src/rts/src/OS/common/wintimer.c
@
text
@d15 5
a19 1
 *  $Log: src:OS:common:wintimer.c,v $
a113 1
    result = timeKillEvent(timer_event);
@


1.1.12.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@d15 1
a15 5
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
@


1.1.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@d15 1
a15 5
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
@


1.1.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@d15 1
a15 5
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
@


1.1.9.1
log
@branched from 1.1
@
text
@d15 1
a15 5
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
@


1.1.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a15 3
 * Revision 1.1.9.1  1997/05/12  10:42:09  hope
 * branched from 1.1
 *
@


1.1.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a15 3
 * Revision 1.1.9.1  1997/05/12  10:42:09  hope
 * branched from 1.1
 *
@


1.1.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a15 3
 * Revision 1.1.9.1  1997/05/12  10:42:09  hope
 * branched from 1.1
 *
@


1.1.9.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a15 3
 * Revision 1.1.9.1.1.1  1997/07/28  18:25:04  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.1.8.1
log
@branched from 1.1
@
text
@d15 1
a15 5
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
@


1.1.7.1
log
@branched from 1.1
@
text
@d15 1
a15 5
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
@


1.1.7.1.1.1
log
@branched from 1.1.7.1
@
text
@a15 3
 * Revision 1.1.7.1  1996/12/17  17:55:08  hope
 * branched from 1.1
 *
@


1.1.6.1
log
@branched from 1.1
@
text
@d15 1
a15 5
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
@


1.1.5.1
log
@branched from 1.1
@
text
@d15 1
a15 5
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
@


1.1.4.1
log
@branched from 1.1
@
text
@d15 1
a15 5
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
@


1.1.4.1.1.1
log
@branched from 1.1.4.1
@
text
@a15 3
 * Revision 1.1.4.1  1996/11/14  12:59:04  hope
 * branched from 1.1
 *
@


1.1.3.1
log
@branched from 1.1
@
text
@d15 1
a15 5
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
@


1.1.2.1
log
@branched from 1.1
@
text
@d15 1
a15 5
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
@


1.1.1.1
log
@branched from 1.1
@
text
@d15 1
a15 5
 *  $Log: src:OS:Win32:timer.c,v $
 * Revision 1.1  1996/02/19  15:36:26  stephenb
 * new unit
 * This used to be called src/rts/src/OS/common/wintimer.c
 *
@
