head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.13
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_MM_adapt:1.4.12
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.9.1.1.1.1
	MLWorks_workspace_97:1.4.11
	MLWorks_dt_wizard:1.4.10
	MLWorks_11c0_1997_09_09:1.4.9.1.1.1
	MLWorks_10r3:1.4.9.1.3
	MLWorks_10r2_551:1.4.9.1.2
	MLWorks_11:1.4.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.9.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.9
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MM_ML_release_korma_1997_04_01:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.7.1.1
	MLWorks_gui_1996_12_18:1.4.8
	MLWorks_1_0_Win32_1996_12_17:1.4.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.4.1
	JFHrts:1.4.6
	MLWorks_1_0_Irix_1996_11_28:1.4.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.5
	MLWorks_1_0_Unix_1996_11_14:1.4.4
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.1
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1
	MLWorks_Beta_1996_06_03:1.1
	MLWorks_Beta_1996_05_31:1.1
	MLWorks_Beta_1996_05_30:1.1;
locks; strict;
comment	@ * @;


1.4
date	96.07.31.12.39.59;	author stephenb;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1
	1.4.8.1
	1.4.9.1
	1.4.10.1
	1.4.11.1
	1.4.12.1
	1.4.13.1;
next	1.3;

1.3
date	96.07.25.10.08.46;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	96.07.24.16.46.09;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	96.03.04.12.07.05;	author stephenb;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.25.40;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.16.06;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.35.30;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.14.13.01.08;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	96.11.28.15.11.12;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.22.18.19.00;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.17.10.05.42;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.17.17.57.17;	author hope;	state Exp;
branches
	1.4.7.1.1.1;
next	;

1.4.7.1.1.1
date	97.02.24.11.48.59;	author hope;	state Exp;
branches;
next	;

1.4.8.1
date	96.12.18.09.51.57;	author hope;	state Exp;
branches;
next	;

1.4.9.1
date	97.05.12.10.45.38;	author hope;	state Exp;
branches
	1.4.9.1.1.1
	1.4.9.1.2.1
	1.4.9.1.3.1;
next	;

1.4.9.1.1.1
date	97.07.28.18.27.43;	author daveb;	state Exp;
branches
	1.4.9.1.1.1.1.1;
next	;

1.4.9.1.1.1.1.1
date	97.10.07.11.53.43;	author jkbrook;	state Exp;
branches;
next	;

1.4.9.1.2.1
date	97.09.08.17.20.48;	author daveb;	state Exp;
branches;
next	;

1.4.9.1.3.1
date	97.09.09.14.16.53;	author daveb;	state Exp;
branches;
next	;

1.4.10.1
date	97.09.10.19.35.11;	author brucem;	state Exp;
branches;
next	;

1.4.11.1
date	97.09.11.21.03.57;	author daveb;	state Exp;
branches;
next	;

1.4.12.1
date	97.10.31.13.46.54;	author nickb;	state Exp;
branches;
next	;

1.4.13.1
date	99.04.01.18.02.52;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
This used to be src/rts/src/OS/common/win32_syscalls.h
@


1.4
log
@Remove most of the declarations since they can be found in
<windows.h> and it is safe to #include <windows.h> since we
are using VC++ to compile and not gcc (which chokes on <windows.h>)
@
text
@/*  Copyright (C) 1994 Harlequin Ltd
 *
 * Description
 * -----------
 * In theory this header declares system calls which are not declared in
 * system header files.  In practice all it now contains a couple of misc.
 * prototypes which would perhaps be better placed elsewhere.
 *
 * Revision Log
 * ------------
 * 
 *  $Log: src:OS:Win32:syscalls.h,v $
 * Revision 1.3  1996/07/25  10:08:46  jont
 * Add include of float.h to get prototype for _isnan
 *
 * Revision 1.2  1996/07/24  16:46:09  jont
 * Add prototype for _isnan and definition of isnan(p) as _isnan(p)
 *
 * Revision 1.1  1996/03/04  12:07:05  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/win32_syscalls.h
 *
 * Revision 1.1  1996/02/14  12:07:01  jont
 * new unit
 *
 * Revision 1.3  1996/01/15  16:13:25  matthew
 * Adding some more stuff
 *
 *
 */

#ifndef syscalls_h
#define syscalls_h

#include <float.h>

extern void winmain_init(void);

#define isnan(p) _isnan(p)

#endif /* syscalls_h */
@


1.4.13.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.4.12.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.4.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.4.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.4.9.1
log
@branched from 1.4
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.4.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a12 3
 * Revision 1.4.9.1  1997/05/12  10:45:38  hope
 * branched from 1.4
 *
@


1.4.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a12 3
 * Revision 1.4.9.1  1997/05/12  10:45:38  hope
 * branched from 1.4
 *
@


1.4.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a12 3
 * Revision 1.4.9.1  1997/05/12  10:45:38  hope
 * branched from 1.4
 *
@


1.4.9.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a12 3
 * Revision 1.4.9.1.1.1  1997/07/28  18:27:43  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.4.8.1
log
@branched from 1.4
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.4.7.1
log
@branched from 1.4
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.4.7.1.1.1
log
@branched from 1.4.7.1
@
text
@a12 3
 * Revision 1.4.7.1  1996/12/17  17:57:17  hope
 * branched from 1.4
 *
@


1.4.6.1
log
@branched from 1.4
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.4.5.1
log
@branched from 1.4
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@a12 3
 * Revision 1.4.4.1  1996/11/14  13:01:08  hope
 * branched from 1.4
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a12 5
 * Revision 1.4  1996/07/31  12:39:59  stephenb
 * Remove most of the declarations since they can be found in
 * <windows.h> and it is safe to #include <windows.h> since we
 * are using VC++ to compile and not gcc (which chokes on <windows.h>)
 *
@


1.3
log
@Add include of float.h to get prototype for _isnan
@
text
@d1 1
a1 1
/*  ==== Win32 SYSCALL DECLARATIONS HEADER ====
d3 12
a14 6
 *  Copyright (C) 1994 Harlequin Ltd
 *
 *  Description
 *  -----------
 *  This header declares system calls which are not declared in
 *  system header files. 
a15 2
 *  $Id: src:OS:Win32:syscalls.h,v 1.2 1996/07/24 16:46:09 jont Exp $
 *  $Log: src:OS:Win32:syscalls.h,v $
d32 2
a33 2
#ifndef syscall_h
#define syscall_h
a36 79
typedef void *LPVOID;
typedef unsigned long DWORD;
#define PAGE_NOACCESS          0x01
#define PAGE_READONLY          0x02
#define PAGE_READWRITE         0x04
#define PAGE_WRITECOPY         0x08
#define PAGE_EXECUTE           0x10
#define PAGE_EXECUTE_READ      0x20
#define PAGE_EXECUTE_READWRITE 0x40
#define PAGE_EXECUTE_WRITECOPY 0x80
#define PAGE_GUARD            0x100
#define PAGE_NOCACHE          0x200
#define MEM_COMMIT           0x1000
#define MEM_RESERVE          0x2000
#define MEM_DECOMMIT         0x4000
#define MEM_RELEASE          0x8000
#define MEM_FREE            0x10000
#define MEM_PRIVATE         0x20000
#define MEM_MAPPED          0x40000
#define MEM_TOP_DOWN       0x100000

extern void * VirtualAlloc(LPVOID start, DWORD length, DWORD alloc_type, DWORD prot);
extern int VirtualFree(LPVOID start, DWORD length, DWORD free_type);
typedef struct _SYSTEM_INFO {
    DWORD dwOemId;
    DWORD dwPageSize;
    LPVOID lpMinimumApplicationAddress;
    LPVOID lpMaximumApplicationAddress;
    DWORD dwActiveProcessorMask;
    DWORD dwNumberOfProcessors;
    DWORD dwProcessorType;
    DWORD dwAllocationGranularity;
    DWORD dwReserved;
} SYSTEM_INFO, *LPSYSTEM_INFO;
extern DWORD GetLastError(void);

typedef struct  _FILETIME
{
  DWORD dwLowDateTime;
  DWORD dwHighDateTime;
} FILETIME, *LPFILETIME;

typedef void *HANDLE;

typedef unsigned short WORD;
typedef char CHAR;

typedef struct  _SYSTEMTIME
{
  WORD wYear;
  WORD wMonth;
  WORD wDayOfWeek;
  WORD wDay;
  WORD wHour;
  WORD wMinute;
  WORD wSecond;
  WORD wMilliseconds;
} SYSTEMTIME, *LPSYSTEMTIME;

#define MAX_PATH 260

typedef struct _WIN32_FIND_DATAA {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    CHAR   cFileName[ MAX_PATH ];
    CHAR   cAlternateFileName[ 14 ];
} WIN32_FIND_DATAA, *PWIN32_FIND_DATAA, *LPWIN32_FIND_DATAA, WIN32_FIND_DATA;

#define INVALID_HANDLE_VALUE (HANDLE)-1

#define FALSE 0
#define TRUE 1

a38 26
#define GetFullPathName GetFullPathNameA
#define GetCurrentDirectory GetCurrentDirectoryA
#define FindFirstFile FindFirstFileA

extern void GetSystemInfo(LPSYSTEM_INFO);

extern void GetLocalTime(LPSYSTEMTIME);

extern void GetSystemTime(LPSYSTEMTIME);

typedef long BOOL;

extern BOOL SystemTimeToFileTime(const SYSTEMTIME *, LPFILETIME);

typedef const char *LPCSTR;

extern HANDLE FindFirstFileA(LPCSTR, LPWIN32_FIND_DATAA);

extern DWORD GetTickCount(void);

extern BOOL GetProcessTimes(HANDLE, LPFILETIME, LPFILETIME, LPFILETIME, LPFILETIME);

extern BOOL SetFileTime(HANDLE, LPFILETIME, LPFILETIME, LPFILETIME);

extern HANDLE GetCurrentProcess(void);

d41 1
a41 1
#endif /* syscall_h */
@


1.2
log
@Add prototype for _isnan and definition of isnan(p) as _isnan(p)
@
text
@d10 1
a10 1
 *  $Id: src:OS:Win32:syscalls.h,v 1.1 1996/03/04 12:07:05 stephenb Exp $
d12 3
d31 2
a140 2

extern int _isnan(double);
@


1.1
log
@new unit
This used to be src/rts/src/OS/common/win32_syscalls.h
@
text
@d10 6
a15 2
 *  $Id: src:OS:common:win32_syscalls.h,v 1.1 1996/02/14 12:07:01 jont Exp $
 *  $Log: src:OS:common:win32_syscalls.h,v $
d134 4
@
