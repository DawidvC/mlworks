head	1.29;
access;
symbols
	MLW_daveb_inline_1_4_99:1.29.1
	MLWorks_21c0_1999_03_25:1.29
	MLWorks_20c1_1998_08_20:1.26
	MLWorks_20c0_1998_08_04:1.24
	MLWorks_20b2c2_1998_06_19:1.22
	MLWorks_20b2_Windows_1998_06_12:1.22
	MLWorks_20b1c1_1998_05_07:1.22
	MLWorks_20b0_1998_04_07:1.20
	MLWorks_20b0_1998_03_20:1.20
	MLWorks_20m2_1998_02_16:1.20
	MLWorks_MM_adapt:1.20.1
	MLWorks_20m1_1997_10_23:1.18
	MLWorks_11r1:1.14.5.1.1.3.1
	MLWorks_workspace_97:1.18.2
	MLWorks_dt_wizard:1.18.1
	MLWorks_11c0_1997_09_09:1.14.5.1.1.3
	MLWorks_10r3:1.14.5.1.3
	MLWorks_10r2_551:1.14.5.1.2
	MLWorks_11:1.14.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.14.5.1
	MLWorks_20m0_1997_06_20:1.16
	MLWorks_1_0_r2c2_1997_06_14:1.14.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.14.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.14.5
	MLWorks_BugFix_1997_04_24:1.14
	MLWorks_1_0_r2_Win32_1997_04_11:1.14
	MLWorks_1_0_r2_Unix_1997_04_04:1.14
	MM_ML_release_korma_1997_04_01:1.14
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.14.3.1.1
	MLWorks_gui_1996_12_18:1.14.4
	MLWorks_1_0_Win32_1996_12_17:1.14.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.13.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.13.1.1
	JFHrts:1.14.2
	MLWorks_1_0_Irix_1996_11_28:1.13.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.14.1
	MLWorks_1_0_Unix_1996_11_14:1.13.1
	MLWorks_Open_Beta2_1996_10_11:1.11.1
	MLWorks_License_dev:1.10.2
	MLWorks_1_open_beta_1996_09_13:1.10.1
	MLWorks_Open_Beta_1996_08_22:1.9
	MLWorks_Beta_1996_07_02:1.8
	MLWorks_Beta_1996_06_07:1.8
	MLWorks_Beta_1996_06_06:1.8
	MLWorks_Beta_1996_06_05:1.8
	MLWorks_Beta_1996_06_03:1.7
	MLWorks_Beta_1996_05_31:1.7
	MLWorks_Beta_1996_05_30:1.4;
locks; strict;
comment	@# @;


1.29
date	99.03.19.15.35.16;	author daveb;	state Exp;
branches
	1.29.1.1;
next	1.28;

1.28
date	99.03.11.16.43.37;	author daveb;	state Exp;
branches;
next	1.27;

1.27
date	98.08.18.10.19.06;	author jont;	state Exp;
branches;
next	1.26;

1.26
date	98.08.10.15.39.16;	author jont;	state Exp;
branches;
next	1.25;

1.25
date	98.08.04.14.58.04;	author jkbrook;	state Exp;
branches;
next	1.24;

1.24
date	98.07.10.09.04.01;	author jkbrook;	state Exp;
branches;
next	1.23;

1.23
date	98.07.02.11.48.08;	author mitchell;	state Exp;
branches;
next	1.22;

1.22
date	98.04.20.12.36.00;	author jont;	state Exp;
branches;
next	1.21;

1.21
date	98.03.30.12.31.25;	author jont;	state Exp;
branches;
next	1.20;

1.20
date	97.10.29.09.39.34;	author johnh;	state Exp;
branches
	1.20.1.1;
next	1.19;

1.19
date	97.10.27.14.25.10;	author johnh;	state Exp;
branches;
next	1.18;

1.18
date	97.07.23.10.03.10;	author johnh;	state Exp;
branches
	1.18.1.1
	1.18.2.1;
next	1.17;

1.17
date	97.07.22.16.42.20;	author andreww;	state Exp;
branches;
next	1.16;

1.16
date	97.05.21.10.37.24;	author johnh;	state Exp;
branches;
next	1.15;

1.15
date	97.05.17.10.12.43;	author johnh;	state Exp;
branches;
next	1.14;

1.14
date	96.11.20.13.39.20;	author daveb;	state Exp;
branches
	1.14.1.1
	1.14.2.1
	1.14.3.1
	1.14.4.1
	1.14.5.1;
next	1.13;

1.13
date	96.11.08.10.06.50;	author johnh;	state Exp;
branches
	1.13.1.1;
next	1.12;

1.12
date	96.10.28.15.43.09;	author johnh;	state Exp;
branches;
next	1.11;

1.11
date	96.10.11.11.02.38;	author jont;	state Exp;
branches
	1.11.1.1;
next	1.10;

1.10
date	96.09.09.17.55.05;	author jont;	state Exp;
branches
	1.10.1.1
	1.10.2.1;
next	1.9;

1.9
date	96.07.24.16.12.54;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	96.06.04.13.17.30;	author stephenb;	state Exp;
branches;
next	1.7;

1.7
date	96.05.30.15.58.35;	author stephenb;	state Exp;
branches;
next	1.6;

1.6
date	96.05.30.13.24.24;	author stephenb;	state Exp;
branches;
next	1.5;

1.5
date	96.05.30.12.39.54;	author stephenb;	state Exp;
branches;
next	1.4;

1.4
date	96.05.28.10.41.57;	author stephenb;	state Exp;
branches;
next	1.3;

1.3
date	96.05.14.16.03.09;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	96.05.13.16.03.32;	author nickb;	state Exp;
branches;
next	1.1;

1.1
date	96.05.13.15.53.48;	author nickb;	state Exp;
branches;
next	;

1.10.1.1
date	96.09.13.11.22.36;	author hope;	state Exp;
branches;
next	;

1.10.2.1
date	96.10.07.16.12.43;	author hope;	state Exp;
branches;
next	;

1.11.1.1
date	96.10.17.11.31.48;	author hope;	state Exp;
branches;
next	;

1.13.1.1
date	96.11.14.12.57.51;	author hope;	state Exp;
branches
	1.13.1.1.1.1;
next	;

1.13.1.1.1.1
date	96.11.28.15.07.51;	author hope;	state Exp;
branches;
next	;

1.14.1.1
date	96.11.22.18.15.32;	author hope;	state Exp;
branches;
next	;

1.14.2.1
date	96.12.17.10.02.16;	author hope;	state Exp;
branches;
next	;

1.14.3.1
date	96.12.17.17.54.00;	author hope;	state Exp;
branches
	1.14.3.1.1.1;
next	;

1.14.3.1.1.1
date	97.02.24.11.45.02;	author hope;	state Exp;
branches;
next	;

1.14.4.1
date	96.12.18.09.48.34;	author hope;	state Exp;
branches;
next	1.14.4.2;

1.14.4.2
date	96.12.19.14.27.52;	author johnh;	state Exp;
branches;
next	;

1.14.5.1
date	97.05.12.10.40.59;	author hope;	state Exp;
branches
	1.14.5.1.1.1
	1.14.5.1.2.1
	1.14.5.1.3.1;
next	;

1.14.5.1.1.1
date	97.07.28.18.29.11;	author daveb;	state Exp;
branches;
next	1.14.5.1.1.2;

1.14.5.1.1.2
date	97.08.05.14.07.21;	author johnh;	state Exp;
branches;
next	1.14.5.1.1.3;

1.14.5.1.1.3
date	97.08.18.12.42.20;	author johnh;	state Exp;
branches
	1.14.5.1.1.3.1.1;
next	;

1.14.5.1.1.3.1.1
date	97.10.07.11.55.01;	author jkbrook;	state Exp;
branches;
next	;

1.14.5.1.2.1
date	97.09.08.17.22.08;	author daveb;	state Exp;
branches;
next	;

1.14.5.1.3.1
date	97.09.09.14.18.13;	author daveb;	state Exp;
branches;
next	;

1.18.1.1
date	97.09.10.19.37.35;	author brucem;	state Exp;
branches;
next	;

1.18.2.1
date	97.09.11.21.05.29;	author daveb;	state Exp;
branches;
next	;

1.20.1.1
date	97.10.31.13.48.32;	author nickb;	state Exp;
branches;
next	;

1.29.1.1
date	99.04.01.18.04.14;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
General Win32 make file.
@


1.29
log
@[Bug #190523]
Ensure that statuses.sml is generated automatically.
@
text
@# Win32-specific GNU make file. Holds all Win32-specific build
# information. For instance, using Visual C++

# $Log: src:OS:Win32:GNUmake,v $
# Revision 1.28  1999/03/11  16:43:37  daveb
# [Bug #190523]
# Added make_statuses.
#
# Revision 1.27  1998/08/18  10:19:06  jont
# [Bug #20133]
# Avoid trying to update code vectors in DLL based version
#
# Revision 1.26  1998/08/10  15:39:16  jont
# [Bug #70151]
# Change the debugging linker options to put the debug info in the DLL
#
# Revision 1.25  1998/08/04  14:58:04  jkbrook
# [Bug #30457]
# Make license-code offsets platform-dependent
#
# Revision 1.24  1998/07/10  09:04:01  jkbrook
# [Bug #30435]
# Need validate_license.lib to create a standalone license validator
#
# Revision 1.23  1998/07/02  11:48:08  mitchell
# [Bug #30345]
# Add support for building validate_license.dll
#
# Revision 1.22  1998/04/20  12:36:00  jont
# [Bug #70102]
# Remove time_zone from list of modules
#
# Revision 1.21  1998/03/30  12:31:25  jont
# [Bug #70086]
# Add make_key_rights for windows NT registry key security
#
# Revision 1.20  1997/10/29  09:39:34  johnh
# [Bug #30059]
# Don't copy __control_names.sml into winsys.
#
# Revision 1.19  1997/10/27  14:25:10  johnh
# [Bug #30059]
# Implement interface to Win32 resource dialogs.
#
# Revision 1.18  1997/07/23  10:03:10  johnh
# [Bug #30124]
# Add shell32.lib to list of libraries.
#
# Revision 1.17  1997/07/22  16:42:20  andreww
# [Bug #30057]
# Altering bits'n'bobs to make DLLization work.
#
# Revision 1.16  1997/05/21  10:37:24  johnh
# [Bug #01702]
# Added new win32_error.c file.
#
# Revision 1.15  1997/05/17  10:12:43  johnh
# Need another library to support the implementation of toolbars.
#
# Revision 1.14  1996/11/20  13:39:20  daveb
# Removed runtime.rc, runtime.rcv and runtime.dlg.  We can edit the .res
# file directly, using VC++ 4.x.
# Also removed runtime.hlp, which is currently not used.
#

MODULES		:= $(MODULES) win32_error win32 window native_threads timer \
	                heap i386_code dde_lib mach_fixup

# note the module name "window-dll" in the following.  The "-dll" suffix
# tells the top-level rts makefile to use window.c, but compile it with
# a special flag, RUNTIME_DLL set.

DLLMODULES    := $(DLLMODULES) win32_error win32 window-dll native_threads \
	 	timer i386_code dde_lib mach_fixup

RTSMODULES    := $(RTSMODULES) heap

MODULESSTATIC := $(MODULES)

GENFILES      := $(GENFILES) $(ARCH)/$(OS)/keys.sml $(ARCH)/$(OS)/statuses.sml

VCCOPTS = -nologo -Gd -W3

# -nologo suppresses copyright message
#
# -Gd is __cdecl calling convention
#
# -W3 sets the warning level to 3
#
# 

VCCDEBUGOPTS = $(VCCOPTS) -Zi -Od -FR

# -Zi generates debugging info
#
# -Od disables optimization
#
# -FR extended SBR file

VCCNODEBUGOPTS = $(VCCOPTS) -O2

# -O2 optimize for speed

DEFINES := $(DEFINES) SPACE_PROFILE_OVERFLOW

DEFINEOPTS = $(DEFINES:%=/D%)

DEFINEDEBUGOPTS = $(DEFINESDEBUG:%=/D%)

INCLUDES = $(INCLUDEDIRS:%=/I %)

CFLAGS		 = $(DEFINEOPTS) $(INCLUDES) $(VCCNODEBUGOPTS) $(TARGETOPTS)
CFLAGSDEBUG	 = $(DEFINEOPTS) $(DEFINEDEBUGOPTS) $(INCLUDES) $(VCCDEBUGOPTS) $(TARGETOPTSDEBUG)
CC		 = cl

CPU=I386
hc=hcw
rc=rc
proj=runtime

GUILIBS = user32.lib gdi32.lib comdlg32.lib winspool.lib version.lib winmm.lib wsock32.lib advapi32.lib comctl32.lib shell32.lib

LIBRARIES = libc.lib kernel32.lib msvcrt.lib $(GUILIBS)

foo:	all

# $(proj).rc should be edited with the MSVC++ dialog editor

$(proj).res: $(proj).rc 
	$(rc) $(rcvars) -r -isrc -isrc/arch/I386 -fo $(proj).res $(cvars) $(proj).rc

$(proj).rbj:	$(proj).res $(proj).rc $(proj).ico $(proj).bmp
	cvtres -$(CPU) $(proj).res -o $(proj).rbj

$(proj): $(proj).res $(proj).def $(proj).rbj

# Use MSVC++ for compiling and linking:

COMPILE		= $(CC)
COMPILEFLAGS	= $(CFLAGS) -c -Fo
COMPILEFLAGSDEBUG = $(CFLAGSDEBUG) -c -Fo

LINK            = $(CC)
LINKFLAGS       = $(CFLAGS) -Fe
LINKFLAGSDEBUG  = $(CFLAGSDEBUG) -Fe

# These flags have to come at the end of the link line, before the subsystem:
# directive

LINKENDFLAGS      = -link
LINKENDFLAGSDEBUG = -link -debug:full -debugtype:both -pdb:none

# We also use GCC, to generate dependencies and to assemble .S files
# We don't need any warnings or optimization for this....

GCC		 = gcc
GCCINCLUDES      = $(INCLUDEDIRS:%=-I%)
GCCDEFINES	 = $(DEFINES:%=-D%)
GCCDEFINESDEBUG	 = $(DEFINESDEBUG:%=-D%)
GCCFLAGS         = -ansi $(GCCINCLUDES) $(GCCDEFINES)
GCCFLAGSDEBUG    = -ansi -g $(GCCINCLUDES) $(GCCDEFINES) $(GCCDEFINESDEBUG)

ASM	       = $(GCC)
ASMFLAGS       = $(GCCFLAGS) -c -o 
ASMFLAGSDEBUG  = $(GCCFLAGSDEBUG) -c -o 

DEPENDGEN          = $(GCC)
DEPENDGENFLAGS     = $(GCCFLAGS) -MM -D_M_IX86 -D_WIN32

# The extra flags are pre-defined constant macros in Visual C++, and
# are required for some internal Windows header files.

# Since this file is included by ../../../GNUmakefile before the "all" 
# target is defined, any system specific rules will be hit instead of
# all if no specific target is requested.  The following ensures that
# the default "all" rule is hit instead.

win32all: all



# os_errors.c is build in two parts because awk isn't very good at reading
# from more than one file at a time therefore there are two scripts, one
# for winerror.h and one for error.h.
#
# winerror.h and errno.h in the following refers to local copies of 
# standard Win32 (Visual C++) headers.  This is hopefully a temporary
# hack until we sort out how we can reference the files in their real
# locations.
#
# The reason that this cannot currently be done very easily is that
# the compiler is installed in different places on different machines
# and there is no variable which uniquely identifies the location of
# the compiler on all of the machines :-<

gen/$(ARCH)/$(OS)/os_errors.c: awk/win32_os_errors_c.awk awk/win32_c_errors_c.awk
	echo 'MAKE: $< -> $@@'
	$(MKDIR) gen/$(ARCH)/$(OS) $(MKDIREND)
	$(AWK) -f awk/win32_c_errors_c.awk < src/OS/Win32/errno.h > $@@
	$(AWK) -f awk/win32_os_errors_c.awk < src/OS/Win32/winerror.h >> $@@

$(TARGETDIR)/make_keys:	obj/$(ARCH)/$(OS)/make_keys.o
	@@echo 'MAKE: $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
	@@$(LINK) $(LINKFLAGS)$@@ $< $(LINKENDFLAGS) -subsystem:console

gen/$(ARCH)/$(OS)/keys.sml:	$(TARGETDIR)/make_keys
	@@echo 'MAKE: $@@'
	$< > $@@

$(TARGETDIR)/make_statuses:	obj/$(ARCH)/$(OS)/make_statuses.o
	@@echo 'MAKE: $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
	@@$(LINK) $(LINKFLAGS)$@@ $< $(LINKENDFLAGS) -subsystem:console

gen/$(ARCH)/$(OS)/statuses.sml:	$(TARGETDIR)/make_statuses
	@@echo 'MAKE: $@@'
	$< > $@@


# validate_license.dll is made here

VALIDATE_SOURCES= \
	src/OS/$(OS_TYPE)/validate_license.c \
	sha/mlw_mklic.h \
	sha/sha.h \
	src/license.h \
	src/license_offset.h \
	src/version.h

VALIDATE_OBJS= \
	$(OBJECTDIR)/sha.o \
	$(OBJECTDIR)/license_offset.o \
	$(OBJECTDIR)/validate_license.o

VALIDATE_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib\
 advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib\
 odbccp32.lib /nologo /subsystem:windows /dll \
 /pdb:"$(TARGETDIR)\validate_license.pdb" \
 /out:"$(TARGETDIR)\validate_license.dll" 
 /implib:"$(TARGETDIR)\validate_license.lib" 

$(OBJECTDIR)/validate_license.o : $(VALIDATE_SOURCES)

$(TARGETDIR)/validate_license.dll: $(TARGETDIR)/mlw_mklic $(VALIDATE_OBJS)
	link.exe $(VALIDATE_FLAGS) $(VALIDATE_OBJS)

validate_license.dll:	force $(TARGETDIR)/validate_license.dll
	@@rm -f $(TARGETDIR)/validate_license.exp

$(OBJDIR)/mlworks_license.o:	mlworks_license.c
	@@$(COMPILE) $(COMPILEFLAGS) $@@ $<


@


1.29.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a4 4
# Revision 1.29  1999/03/19  15:35:16  daveb
# [Bug #190523]
# Ensure that statuses.sml is generated automatically.
#
@


1.28
log
@[Bug #190523]
Added make_statuses.
@
text
@d5 4
d80 1
a80 1
GENFILES      := $(GENFILES) $(ARCH)/$(OS)/keys.sml
@


1.27
log
@[Bug #20133]
Avoid trying to update code vectors in DLL based version
@
text
@d5 4
d204 9
@


1.26
log
@[Bug #70151]
Change the debugging linker options to put the debug info in the DLL
@
text
@d5 4
d95 2
@


1.25
log
@[Bug #30457]
Make license-code offsets platform-dependent
@
text
@d5 4
d137 1
a137 1
LINKENDFLAGSDEBUG = -link -debug -debugtype:both
@


1.24
log
@[Bug #30435]
Need validate_license.lib to create a standalone license validator
@
text
@d5 4
d201 1
d206 1
@


1.23
log
@[Bug #30345]
Add support for building validate_license.dll
@
text
@d5 4
a215 1
	@@rm -f $(TARGETDIR)/validate_license.lib
d218 2
a219 6






@


1.22
log
@[Bug #70102]
Remove time_zone from list of modules
@
text
@d5 4
d184 39
@


1.21
log
@[Bug #70086]
Add make_key_rights for windows NT registry key security
@
text
@d5 4
d39 1
a39 1
	                heap i386_code dde_lib mach_fixup time_zone
d46 1
a46 1
	 	timer i386_code dde_lib mach_fixup time_zone
@


1.20
log
@[Bug #30059]
Don't copy __control_names.sml into winsys.
@
text
@d5 4
d46 3
a48 1
MODULESSTATIC   := $(MODULES)
d168 8
@


1.20.1.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a4 4
# Revision 1.20  1997/10/29  09:39:34  johnh
# [Bug #30059]
# Don't copy __control_names.sml into winsys.
#
@


1.19
log
@[Bug #30059]
Implement interface to Win32 resource dialogs.
@
text
@d5 4
a161 4
gen/$(ARCH)/$(OS)/__control_names.sml: awk/__control_names.awk resource.h
	echo 'MAKE: $< -> $@@'
	$(AWK) -f awk/__control_names.awk < resource.h > $@@
	cp $@@ ../winsys
@


1.18
log
@[Bug #30124]
Add shell32.lib to list of libraries.
@
text
@d5 4
d83 4
a86 1
# $(proj.res) should be edited with the MSVC++ dialog editor
d88 1
a88 1
$(proj).rbj:	$(proj).res $(proj).ico $(proj).bmp
d157 5
@


1.18.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a4 4
# Revision 1.18  1997/07/23  10:03:10  johnh
# [Bug #30124]
# Add shell32.lib to list of libraries.
#
@


1.18.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a4 4
# Revision 1.18  1997/07/23  10:03:10  johnh
# [Bug #30124]
# Add shell32.lib to list of libraries.
#
@


1.17
log
@[Bug #30057]
Altering bits'n'bobs to make DLLization work.
@
text
@d5 4
d73 1
a73 1
GUILIBS = user32.lib gdi32.lib comdlg32.lib winspool.lib version.lib winmm.lib wsock32.lib advapi32.lib comctl32.lib
@


1.16
log
@[Bug #01702]
Added new win32_error.c file.
@
text
@d5 4
d18 11
a28 2
MODULES		:= $(MODULES) win32_error win32 window native_threads timer heap \
			i386_code dde_lib mach_fixup time_zone
d32 1
a32 1
VCCOPTS = -nologo -Gd -W3 -ML
a39 2
# -ML links with libc.lib
#
d69 1
a69 1
GUILIBS = user32.lib gdi32.lib comdlg32.lib winspool.lib version.lib winmm.lib wsock32.lib advapi32.lib comctl32.lib $(proj).rbj
@


1.15
log
@Need another library to support the implementation of toolbars.
@
text
@d5 3
d14 1
a14 1
MODULES		:= $(MODULES) win32 window native_threads timer heap \
@


1.14
log
@Removed runtime.rc, runtime.rcv and runtime.dlg.  We can edit the .res
file directly, using VC++ 4.x.
Also removed runtime.hlp, which is currently not used.
@
text
@d4 6
a9 1
# $Log$
d55 1
a55 1
GUILIBS = user32.lib gdi32.lib comdlg32.lib winspool.lib version.lib winmm.lib wsock32.lib advapi32.lib $(proj).rbj
@


1.14.5.1
log
@branched from 1.14
@
text
@d4 1
a4 6
# $Log: src:OS:Win32:GNUmake,v $
# Revision 1.14  1996/11/20  13:39:20  daveb
# Removed runtime.rc, runtime.rcv and runtime.dlg.  We can edit the .res
# file directly, using VC++ 4.x.
# Also removed runtime.hlp, which is currently not used.
#
@


1.14.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a4 3
# Revision 1.14.5.1  1997/05/12  10:40:59  hope
# branched from 1.14
#
@


1.14.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a4 3
# Revision 1.14.5.1  1997/05/12  10:40:59  hope
# branched from 1.14
#
@


1.14.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a4 3
# Revision 1.14.5.1  1997/05/12  10:40:59  hope
# branched from 1.14
#
@


1.14.5.1.1.2
log
@[Bug #30124]
Merging - Help interface to documentation (Win32).
Add shell32.lib to list of libraries.
@
text
@a4 4
#
# Revision 1.14.5.1.1.1  1997/07/28  18:29:11  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
d58 1
a58 1
GUILIBS = user32.lib gdi32.lib comdlg32.lib winspool.lib version.lib winmm.lib wsock32.lib advapi32.lib comctl32.lib shell32.lib
@


1.14.5.1.1.3
log
@[Bug #30124]
Fixing merge fault - adding $(proj).rbj to GUILIBS.
@
text
@a4 5
# Revision 1.14.5.1.1.2  1997/08/05  14:07:21  johnh
# [Bug #30124]
# Merging - Help interface to documentation (Win32).
# Add shell32.lib to list of libraries.
#
d62 1
a62 1
GUILIBS = user32.lib gdi32.lib comdlg32.lib winspool.lib version.lib winmm.lib wsock32.lib advapi32.lib comctl32.lib shell32.lib $(proj).rbj
@


1.14.5.1.1.3.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a4 4
# Revision 1.14.5.1.1.3  1997/08/18  12:42:20  johnh
# [Bug #30124]
# Fixing merge fault - adding $(proj).rbj to GUILIBS.
#
@


1.14.4.1
log
@branched from 1.14
@
text
@d4 1
a4 6
# $Log: src:OS:Win32:GNUmake,v $
# Revision 1.14  1996/11/20  13:39:20  daveb
# Removed runtime.rc, runtime.rcv and runtime.dlg.  We can edit the .res
# file directly, using VC++ 4.x.
# Also removed runtime.hlp, which is currently not used.
#
@


1.14.4.2
log
@Adding comctl32.lib
@
text
@a4 3
# Revision 1.14.4.1  1996/12/18  09:48:34  hope
# branched from 1.14
#
d55 1
a55 1
GUILIBS = user32.lib gdi32.lib comdlg32.lib winspool.lib version.lib winmm.lib wsock32.lib advapi32.lib comctl32.lib $(proj).rbj
@


1.14.3.1
log
@branched from 1.14
@
text
@d4 1
a4 6
# $Log: src:OS:Win32:GNUmake,v $
# Revision 1.14  1996/11/20  13:39:20  daveb
# Removed runtime.rc, runtime.rcv and runtime.dlg.  We can edit the .res
# file directly, using VC++ 4.x.
# Also removed runtime.hlp, which is currently not used.
#
@


1.14.3.1.1.1
log
@branched from 1.14.3.1
@
text
@a4 3
# Revision 1.14.3.1  1996/12/17  17:54:00  hope
# branched from 1.14
#
@


1.14.2.1
log
@branched from 1.14
@
text
@d4 1
a4 6
# $Log: src:OS:Win32:GNUmake,v $
# Revision 1.14  1996/11/20  13:39:20  daveb
# Removed runtime.rc, runtime.rcv and runtime.dlg.  We can edit the .res
# file directly, using VC++ 4.x.
# Also removed runtime.hlp, which is currently not used.
#
@


1.14.1.1
log
@branched from 1.14
@
text
@d4 1
a4 6
# $Log: src:OS:Win32:GNUmake,v $
# Revision 1.14  1996/11/20  13:39:20  daveb
# Removed runtime.rc, runtime.rcv and runtime.dlg.  We can edit the .res
# file directly, using VC++ 4.x.
# Also removed runtime.hlp, which is currently not used.
#
@


1.13
log
@Adding options to compile runtime and runtime.rbj if runtime.{ico,bmp} are out of date.
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.12 1996/10/28 15:43:09 johnh Exp $
d56 1
a56 9
# Update the help file if necessary
# hcw options: /c compiles the project, /e quits the help compiler application.
#  /m minimises the help compiler application.
$(proj).hlp : $(proj).rtf
	$(hc) /c /e /m $(proj).hpj

# Update the resource if necessary
$(proj).res: $(proj).rc $(proj).rcv $(proj).dlg
	$(rc) $(rcvars) -r -isrc -isrc/arch/I386 -fo $(proj).res $(cvars) $(proj).rc
d61 1
a61 1
$(proj): $(proj).res $(proj).def $(proj).hlp $(proj).rbj
@


1.13.1.1
log
@branched from 1.13
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.13 1996/11/08 10:06:50 johnh Exp $
@


1.13.1.1.1.1
log
@branched from 1.13.1.1
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.13.1.1 1996/11/14 12:57:51 hope Exp $
@


1.12
log
@Using new help compiler: hcw, and added advapi32.lib to GUILIBS.
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.11 1996/10/11 11:02:38 jont Exp $
d66 1
a66 1
$(proj).rbj:	$(proj).res
d69 1
a69 1
$(proj): $(proj).res $(proj).def $(proj).hlp
@


1.11
log
@Remove reference to static_link
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.10 1996/09/09 17:55:05 jont Exp $
d46 1
a46 1
hc=hc
d50 1
a50 1
GUILIBS = user32.lib gdi32.lib comdlg32.lib winspool.lib version.lib winmm.lib wsock32.lib $(proj).rbj
d57 2
d60 1
a60 1
	$(hc) -n $(proj).hpj
@


1.11.1.1
log
@branched from 1.11
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.11 1996/10/11 11:02:38 jont Exp $
@


1.10
log
@Add to time_zone to list of modules
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.9 1996/07/24 16:12:54 jont Exp $
d9 1
a9 1
MODULESSTATIC   := $(MODULES) static_link
@


1.10.2.1
log
@branched from 1.10
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.10 1996/09/09 17:55:05 jont Exp $
@


1.10.1.1
log
@branched from 1.10
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.10 1996/09/09 17:55:05 jont Exp $
@


1.9
log
@Add msvcrt.lib to list of libraries to link with to get __isnan
@
text
@d4 6
a9 1
# $Id: src:OS:Win32:GNUmake,v 1.8 1996/06/04 13:17:30 stephenb Exp $
@


1.8
log
@Extend the os_errors.c rule since it now has to deal with C as well
as Win32 errors.
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.7 1996/05/30 15:58:35 stephenb Exp $
d47 1
a47 1
LIBRARIES = libc.lib kernel32.lib $(GUILIBS)
@


1.7
log
@Make sure that the default is to run all and not any system
specific rules defined in the Unix/OS makefiles.
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.6 1996/05/30 13:24:24 stephenb Exp $
d109 10
a118 3
# winerror.h in the following refers to a local copy of standard Win32
# header.  This is hopefully a temporary hack until we sort out how
# we can reference the file in its real location.  The problem is that
d123 1
a123 1
gen/$(ARCH)/$(OS)/os_errors.c: awk/win32_os_errors_c.awk
d126 2
a127 1
	$(AWK) -f awk/win32_os_errors_c.awk < src/OS/Win32/winerror.h > $@@
@


1.6
log
@The last change didn't fix the problem due to not all users having
$(include) set up.  The ugly hack is to have a local copy of
winerror.h and use that.
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.5 1996/05/30 12:39:54 stephenb Exp $
d99 8
@


1.5
log
@Remove the explicit path to winerror.h since it isn't in the same
place on all machines.
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.4 1996/05/28 10:41:57 stephenb Exp $
d101 6
a106 2
# $(include) in the following is hopefully a standard Visual C++ environment
# variable that is set up when the compiler is installed.
d111 1
a111 1
	$(AWK) -f awk/win32_os_errors_c.awk < $(include)\winerror.h > $@@
@


1.4
log
@Add rules to generate os_errors.c
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.3 1996/05/14 16:03:09 jont Exp $
d101 2
d105 3
a107 3
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) gen/$(ARCH)/$(OS) $(MKDIREND)
	@@$(AWK) -f awk/win32_os_errors_c.awk < C:/msdev/include/winerror.h > $@@
@


1.3
log
@Get GCCFLAGSDEBUG correct (doesn't include the GCCDEFINES, whereas it should)
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.2 1996/05/13 16:03:32 nickb Exp $
d99 7
@


1.2
log
@Debugging assembler needs debugging C constant macros.
@
text
@d4 1
a4 1
# $Id: src:OS:Win32:GNUmake,v 1.1 1996/05/13 15:53:48 nickb Exp $
d88 1
a88 1
GCCFLAGSDEBUG    = -ansi -g $(GCCINCLUDES) $(GCCDEFINESDEBUG)
@


1.1
log
@new unit
General Win32 make file.
@
text
@d4 1
a4 1
# $Id$
d86 1
d88 1
a88 1
GCCFLAGSDEBUG    = -ansi -g $(GCCINCLUDES) $(GCCDEFINES)
@
