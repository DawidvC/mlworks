head	1.1;
access;
symbols
	MLW_daveb_inline_1_4_99:1.1.13
	MLWorks_21c0_1999_03_25:1.1
	MLWorks_20c1_1998_08_20:1.1
	MLWorks_20c0_1998_08_04:1.1
	MLWorks_20b2c2_1998_06_19:1.1
	MLWorks_20b2_Windows_1998_06_12:1.1
	MLWorks_20b1c1_1998_05_07:1.1
	MLWorks_20b0_1998_04_07:1.1
	MLWorks_20b0_1998_03_20:1.1
	MLWorks_20m2_1998_02_16:1.1
	MLWorks_MM_adapt:1.1.12
	MLWorks_20m1_1997_10_23:1.1
	MLWorks_11r1:1.1.9.1.1.1.1
	MLWorks_workspace_97:1.1.11
	MLWorks_dt_wizard:1.1.10
	MLWorks_11c0_1997_09_09:1.1.9.1.1.1
	MLWorks_10r3:1.1.9.1.3
	MLWorks_10r2_551:1.1.9.1.2
	MLWorks_11:1.1.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.9.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c2_1997_06_14:1.1.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.9
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1
	MM_ML_release_korma_1997_04_01:1.1
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.7.1.1
	MLWorks_gui_1996_12_18:1.1.8
	MLWorks_1_0_Win32_1996_12_17:1.1.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.4.1
	JFHrts:1.1.6
	MLWorks_1_0_Irix_1996_11_28:1.1.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.5
	MLWorks_1_0_Unix_1996_11_14:1.1.4
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1
	MLWorks_Beta_1996_07_02:1.1
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1
	MLWorks_Beta_1996_06_03:1.1
	MLWorks_Beta_1996_05_31:1.1
	MLWorks_Beta_1996_05_30:1.1;
locks; strict;
comment	@ * @;


1.1
date	96.02.12.11.58.33;	author stephenb;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1
	1.1.6.1
	1.1.7.1
	1.1.8.1
	1.1.9.1
	1.1.10.1
	1.1.11.1
	1.1.12.1
	1.1.13.1;
next	;

1.1.1.1
date	96.09.13.11.22.35;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.16.12.41;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.31.44;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	96.11.14.12.57.48;	author hope;	state Exp;
branches
	1.1.4.1.1.1;
next	;

1.1.4.1.1.1
date	96.11.28.15.07.49;	author hope;	state Exp;
branches;
next	;

1.1.5.1
date	96.11.22.18.15.30;	author hope;	state Exp;
branches;
next	;

1.1.6.1
date	96.12.17.10.02.14;	author hope;	state Exp;
branches;
next	;

1.1.7.1
date	96.12.17.17.53.58;	author hope;	state Exp;
branches
	1.1.7.1.1.1;
next	;

1.1.7.1.1.1
date	97.02.24.11.45.00;	author hope;	state Exp;
branches;
next	;

1.1.8.1
date	96.12.18.09.48.32;	author hope;	state Exp;
branches;
next	;

1.1.9.1
date	97.05.12.10.40.57;	author hope;	state Exp;
branches
	1.1.9.1.1.1
	1.1.9.1.2.1
	1.1.9.1.3.1;
next	;

1.1.9.1.1.1
date	97.07.28.18.25.49;	author daveb;	state Exp;
branches
	1.1.9.1.1.1.1.1;
next	;

1.1.9.1.1.1.1.1
date	97.10.07.11.51.34;	author jkbrook;	state Exp;
branches;
next	;

1.1.9.1.2.1
date	97.09.08.17.19.03;	author daveb;	state Exp;
branches;
next	;

1.1.9.1.3.1
date	97.09.09.14.15.12;	author daveb;	state Exp;
branches;
next	;

1.1.10.1
date	97.09.10.19.32.05;	author brucem;	state Exp;
branches;
next	;

1.1.11.1
date	97.09.11.21.01.26;	author daveb;	state Exp;
branches;
next	;

1.1.12.1
date	97.10.31.13.44.23;	author nickb;	state Exp;
branches;
next	;

1.1.13.1
date	99.04.01.18.01.11;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
This used to be src/rts/src/OS/common/native_threads.h
@


1.1
log
@new unit
This used to be src/rts/src/OS/common/native_threads.h
@
text
@/*  ==== NATIVE THREADS INTERFACE FOR WIN32 ====
 *
 *  Copyright (C) 1995 Harlequin Ltd
 *
 *  Notes:
 *  
 * Under Windows 95, certain system calls can only be made when
 * residing on a stack created by the OS. This prevents us from
 * using our own threads system unaltered, since our threads run on
 * stacks which we create and manipulate. Our solution is to run each
 * of our threads in its own Win32 thread. In order to keep our own
 * scheduling &c, we only allow one of these threads to run at a
 * time. We enforce that restriction by associating an event with each
 * thread. An thread which is inactive is waiting for the event
 * associated with it. To switch to a thread, we signal its event and
 * wait on our own.
 *
 *  Revision Log
 *  ------------
 *  $Log: src:OS:common:native_threads.h,v $
 * Revision 1.3  1995/12/13  15:42:34  nickb
 * Add thread sp reconstruction.
 *
 * Revision 1.2  1995/11/15  13:11:35  nickb
 * Add facilities for a timer thread.
 *
 * Revision 1.1  1995/11/13  13:26:04  nickb
 * new unit
 * Native threads functionality for Windows (95).
 *
 */

#ifndef _native_threads_h
#define _native_threads_h

#include "types.h"

#ifdef NATIVE_THREADS

/* an MLWorks thread C state contains one of these: */

struct native
{
  word* thread; /* the windows thread HANDLE */
  word* event;  /* the windows event HANDLE */
};

/* create a thread, which will wait on its event */
extern void native_make_thread(struct c_state *c_state);

/* fill in the top thread's native slots */
extern void native_make_top_thread(struct c_state *c_state);

/* destroy a thread. */
extern void native_unmake_thread(struct c_state *c_state);

/* yield from one thread to another. This function call will only
   return when the current thread is scheduled once more. It returns
   the 'previous thread' (i.e. the thread which yields to this one. */

extern struct thread_state *
native_thread_yield(struct thread_state *this_thread,
		    struct thread_state *other_thread);

#endif

/* support for a timer thread, which waits until notified and then runs */

extern void make_timer_thread(void (*thread_fun) (void));
extern void unmake_timer_thread(void);
extern void timer_thread_wait(void);
extern void notify_timer_thread(void);

/* one of the things the timer thread does is profiling, for which we have
 * to suspend the currently-running ML thread, and reconstruct its sp */

/* suspend_current_thread() suspends the current ML thread and returns
 * its handle */

extern word *suspend_current_thread(void);
extern void resume_current_thread(word *thread);

/* reconstruct_thread_sp(thread) uses architecture-specific hacks to
 * reconstruct the stack of the given (suspended) thread and returns a
 * faked sp */

extern word reconstruct_thread_sp(word *thread);

#endif
@


1.1.13.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@


1.1.12.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@


1.1.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@


1.1.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@


1.1.9.1
log
@branched from 1.1
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@


1.1.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a20 3
 * Revision 1.1.9.1  1997/05/12  10:40:57  hope
 * branched from 1.1
 *
@


1.1.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a20 3
 * Revision 1.1.9.1  1997/05/12  10:40:57  hope
 * branched from 1.1
 *
@


1.1.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a20 3
 * Revision 1.1.9.1  1997/05/12  10:40:57  hope
 * branched from 1.1
 *
@


1.1.9.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a20 3
 * Revision 1.1.9.1.1.1  1997/07/28  18:25:49  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.1.8.1
log
@branched from 1.1
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@


1.1.7.1
log
@branched from 1.1
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@


1.1.7.1.1.1
log
@branched from 1.1.7.1
@
text
@a20 3
 * Revision 1.1.7.1  1996/12/17  17:53:58  hope
 * branched from 1.1
 *
@


1.1.6.1
log
@branched from 1.1
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@


1.1.5.1
log
@branched from 1.1
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@


1.1.4.1
log
@branched from 1.1
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@


1.1.4.1.1.1
log
@branched from 1.1.4.1
@
text
@a20 3
 * Revision 1.1.4.1  1996/11/14  12:57:48  hope
 * branched from 1.1
 *
@


1.1.3.1
log
@branched from 1.1
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@


1.1.2.1
log
@branched from 1.1
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@


1.1.1.1
log
@branched from 1.1
@
text
@d20 1
a20 5
 *  $Log: src:OS:Win32:native_threads.h,v $
 * Revision 1.1  1996/02/12  11:58:33  stephenb
 * new unit
 * This used to be src/rts/src/OS/common/native_threads.h
 *
@
