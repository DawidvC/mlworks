head	1.2;
access;
symbols
	MLW_daveb_inline_1_4_99:1.2.5
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_MM_adapt:1.2.4
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_11r1:1.2.1.1.1.1.1
	MLWorks_workspace_97:1.2.3
	MLWorks_dt_wizard:1.2.2
	MLWorks_11c0_1997_09_09:1.2.1.1.1.1
	MLWorks_10r3:1.2.1.1.3
	MLWorks_10r2_551:1.2.1.1.2
	MLWorks_11:1.2.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.2.1.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.2.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.2.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.2.1
	MLWorks_BugFix_1997_04_24:1.2
	MLWorks_1_0_r2_Win32_1997_04_11:1.2
	MLWorks_1_0_r2_Unix_1997_04_04:1.2
	MM_ML_release_korma_1997_04_01:1.2
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.5.1.1
	MLWorks_gui_1996_12_18:1.1.6
	MLWorks_1_0_Win32_1996_12_17:1.1.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.2.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.2.1
	JFHrts:1.1.4
	MLWorks_1_0_Irix_1996_11_28:1.1.2.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.3
	MLWorks_1_0_Unix_1996_11_14:1.1.2
	MLWorks_Open_Beta2_1996_10_11:1.1.1;
locks; strict;
comment	@# @;


1.2
date	97.02.06.11.41.49;	author nickb;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1
	1.2.5.1;
next	1.1;

1.1
date	96.10.14.14.17.36;	author nickb;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1
	1.1.6.1;
next	;

1.1.1.1
date	96.10.17.11.30.01;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.11.14.12.56.02;	author hope;	state Exp;
branches
	1.1.2.1.1.1;
next	;

1.1.2.1.1.1
date	96.11.28.15.06.35;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.11.22.18.14.16;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	96.12.17.10.01.03;	author hope;	state Exp;
branches;
next	;

1.1.5.1
date	96.12.17.17.52.47;	author hope;	state Exp;
branches
	1.1.5.1.1.1;
next	;

1.1.5.1.1.1
date	97.02.24.11.43.35;	author hope;	state Exp;
branches;
next	1.1.5.1.1.2;

1.1.5.1.1.2
date	97.02.24.14.26.28;	author jont;	state Exp;
branches;
next	;

1.1.6.1
date	96.12.18.09.47.18;	author hope;	state Exp;
branches;
next	;

1.2.1.1
date	97.05.12.10.39.43;	author hope;	state Exp;
branches
	1.2.1.1.1.1
	1.2.1.1.2.1
	1.2.1.1.3.1;
next	;

1.2.1.1.1.1
date	97.07.28.18.26.56;	author daveb;	state Exp;
branches
	1.2.1.1.1.1.1.1;
next	;

1.2.1.1.1.1.1.1
date	97.10.07.11.52.54;	author jkbrook;	state Exp;
branches;
next	;

1.2.1.1.2.1
date	97.09.08.17.20.04;	author daveb;	state Exp;
branches;
next	;

1.2.1.1.3.1
date	97.09.09.14.16.11;	author daveb;	state Exp;
branches;
next	;

1.2.2.1
date	97.09.10.19.33.42;	author brucem;	state Exp;
branches;
next	;

1.2.3.1
date	97.09.11.21.02.53;	author daveb;	state Exp;
branches;
next	;

1.2.4.1
date	97.10.31.13.45.45;	author nickb;	state Exp;
branches;
next	;

1.2.5.1
date	99.04.01.18.02.05;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Register window cleaning trap incompatible between SPARC and UltraSPARC
platforms.
@


1.2
log
@Change to deal with new trap handler on UltraSPARCs.
@
text
@/* Copyright (C) 1996 Harlequin Ltd.
 * 
 * Solaris/UltraSPARC compatibility check. Allows us to exit with
 * a clean message on broken platforms, rather than a messy SEGV.
 * 
 * $Log: src:OS:Solaris:arch:SPARC:check_windows.S,v $
# Revision 1.1  1996/10/14  14:17:36  nickb
# new unit
# Register window cleaning trap incompatible between SPARC and UltraSPARC
# platforms.
#
 */

#include "naming.h"
#include "macros.h"

/* check_windows() dirties a register window, then does a clean_windows trap,
 * then SAVEs up to 16 windows. It checks in each
 * window whether the new window is dirty (l0-l7, o0-o5). If it is, it
 * returns the ORed-together value. Otherwise, it returns zero, */
	
.global	C_NAME(check_windows)

C_NAME(check_windows):
	save	%sp, -64, %sp
	mov	0xf00, %l0	/* dirty this window */
	mov	0xf01, %l1
	mov	0xf02, %l2
	mov	0xf03, %l3
	mov	0xf04, %l4
	mov	0xf05, %l5
	mov	0xf06, %l6
	mov	0xf07, %l7
	mov	0xf10, %i0
	mov	0xf11, %i1
	mov	0xf12, %i2
	mov	0xf13, %i3
	mov	0xf14, %i4
	mov	0xf15, %i5
	save	%sp, -64, %sp
	clean_windows		/* the ST_CLEAN_WINDOWS trap */
/* On UltraSPARC, this does not clean current outs, locals, and ins, so
 * we have to clean those by hand */
	mov	%g0, %o0
	mov	%g0, %o1
	mov	%g0, %o2
	mov	%g0, %o3
	mov	%g0, %o4
	mov	%g0, %o5
	mov	%g0, %l0
	mov	%g0, %l1
	mov	%g0, %l2
	mov	%g0, %l3
	mov	%g0, %l4
	mov	%g0, %l5
	mov	%g0, %l6
	mov	%g0, %l7
	mov	%g0, %i0
	mov	%g0, %i1
	mov	%g0, %i2
	mov	%g0, %i3
	mov	%g0, %i4
	mov	%g0, %i5
	call	loop		/* loop ... */
	mov	0x10, %g1	/* ... 16 times */
	restore
	mov	%g1, %i0	/* then return g1 */
	ret
	restore

loop:	save	%sp, -64, %sp
	sub	%g1, 1, %g1	/* if count zero */
	cmp	%g1, %g0
	beq	exit		/* return zero */
	nop
	or	%l0, %l1, %l0	/* or together this "clean" window */
	or	%l0, %l2, %l0
	or	%l0, %l3, %l0
	or	%l0, %l4, %l0
	or	%l0, %l5, %l0
	or	%l0, %l6, %l0
	or	%l0, %l7, %l0
	or	%l0, %o0, %l0
	or	%l0, %o1, %l0
	or	%l0, %o2, %l0
	or	%l0, %o3, %l0
	or	%l0, %o4, %l0
	or	%l0, %o5, %l0
	cmp	%l0, %g0	/* if this window is actually dirty, */
	bne,a	exit
	mov	%l0, %g1	/* return the OR'ed together content */
	call	loop
	nop
exit:	ret
	restore
@


1.2.5.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a6 3
# Revision 1.2  1997/02/06  11:41:49  nickb
# Change to deal with new trap handler on UltraSPARCs.
#
@


1.2.4.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a6 3
# Revision 1.2  1997/02/06  11:41:49  nickb
# Change to deal with new trap handler on UltraSPARCs.
#
@


1.2.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a6 3
# Revision 1.2  1997/02/06  11:41:49  nickb
# Change to deal with new trap handler on UltraSPARCs.
#
@


1.2.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a6 3
# Revision 1.2  1997/02/06  11:41:49  nickb
# Change to deal with new trap handler on UltraSPARCs.
#
@


1.2.1.1
log
@branched from 1.2
@
text
@a6 3
# Revision 1.2  1997/02/06  11:41:49  nickb
# Change to deal with new trap handler on UltraSPARCs.
#
@


1.2.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a6 3
# Revision 1.2.1.1  1997/05/12  10:39:43  hope
# branched from 1.2
#
@


1.2.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a6 3
# Revision 1.2.1.1  1997/05/12  10:39:43  hope
# branched from 1.2
#
@


1.2.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a6 3
# Revision 1.2.1.1  1997/05/12  10:39:43  hope
# branched from 1.2
#
@


1.2.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a6 3
# Revision 1.2.1.1.1.1  1997/07/28  18:26:56  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.1
log
@new unit
Register window cleaning trap incompatible between SPARC and UltraSPARC
platforms.
@
text
@d6 6
a11 1
 * $Log$
d15 1
d17 3
a19 3
/* check_windows() does a clean_windows trap, then dirties %l0-%i5
 * and SAVEs up to 16 windows. It checks in each
 * window whether the new %l0-%i5 are dirty. If they are, it
a24 1
	ta 4			/* clean windows */
d40 24
d66 1
d83 6
a88 6
	or	%l0, %i0, %l0
	or	%l0, %i1, %l0
	or	%l0, %i2, %l0
	or	%l0, %i3, %l0
	or	%l0, %i4, %l0
	or	%l0, %i5, %l0
@


1.1.6.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: src:OS:Solaris:arch:SPARC:check_windows.S,v $
# Revision 1.1  1996/10/14  14:17:36  nickb
# new unit
# Register window cleaning trap incompatible between SPARC and UltraSPARC
# platforms.
#
@


1.1.5.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: src:OS:Solaris:arch:SPARC:check_windows.S,v $
# Revision 1.1  1996/10/14  14:17:36  nickb
# new unit
# Register window cleaning trap incompatible between SPARC and UltraSPARC
# platforms.
#
@


1.1.5.1.1.1
log
@branched from 1.1.5.1
@
text
@a6 3
# Revision 1.1.5.1  1996/12/17  17:52:47  hope
# branched from 1.1
#
@


1.1.5.1.1.2
log
@[Bug #0]
Make ULTRA SPARC capable version
@
text
@d7 8
a14 14
 * Revision 1.2  1997/02/06  11:41:49  nickb
 * Change to deal with new trap handler on UltraSPARCs.
 *
 * Revision 1.1.5.1.1.1  1997/02/24  11:43:35  hope
 * branched from 1.1.5.1
 *
 * Revision 1.1.5.1  1996/12/17  17:52:47  hope
 * branched from 1.1
 *
 * Revision 1.1  1996/10/14  14:17:36  nickb
 * new unit
 * Register window cleaning trap incompatible between SPARC and UltraSPARC
 * platforms.
 *
a17 1
#include "macros.h"
d19 3
a21 3
/* check_windows() dirties a register window, then does a clean_windows trap,
 * then SAVEs up to 16 windows. It checks in each
 * window whether the new window is dirty (l0-l7, o0-o5). If it is, it
d27 1
a42 24
	save	%sp, -64, %sp
	clean_windows		/* the ST_CLEAN_WINDOWS trap */
/* On UltraSPARC, this does not clean current outs, locals, and ins, so
 * we have to clean those by hand */
	mov	%g0, %o0
	mov	%g0, %o1
	mov	%g0, %o2
	mov	%g0, %o3
	mov	%g0, %o4
	mov	%g0, %o5
	mov	%g0, %l0
	mov	%g0, %l1
	mov	%g0, %l2
	mov	%g0, %l3
	mov	%g0, %l4
	mov	%g0, %l5
	mov	%g0, %l6
	mov	%g0, %l7
	mov	%g0, %i0
	mov	%g0, %i1
	mov	%g0, %i2
	mov	%g0, %i3
	mov	%g0, %i4
	mov	%g0, %i5
a44 1
	restore
d61 6
a66 6
	or	%l0, %o0, %l0
	or	%l0, %o1, %l0
	or	%l0, %o2, %l0
	or	%l0, %o3, %l0
	or	%l0, %o4, %l0
	or	%l0, %o5, %l0
@


1.1.4.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: src:OS:Solaris:arch:SPARC:check_windows.S,v $
# Revision 1.1  1996/10/14  14:17:36  nickb
# new unit
# Register window cleaning trap incompatible between SPARC and UltraSPARC
# platforms.
#
@


1.1.3.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: src:OS:Solaris:arch:SPARC:check_windows.S,v $
# Revision 1.1  1996/10/14  14:17:36  nickb
# new unit
# Register window cleaning trap incompatible between SPARC and UltraSPARC
# platforms.
#
@


1.1.2.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: src:OS:Solaris:arch:SPARC:check_windows.S,v $
# Revision 1.1  1996/10/14  14:17:36  nickb
# new unit
# Register window cleaning trap incompatible between SPARC and UltraSPARC
# platforms.
#
@


1.1.2.1.1.1
log
@branched from 1.1.2.1
@
text
@a6 3
# Revision 1.1.2.1  1996/11/14  12:56:02  hope
# branched from 1.1
#
@


1.1.1.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: src:OS:Solaris:arch:SPARC:check_windows.S,v $
# Revision 1.1  1996/10/14  14:17:36  nickb
# new unit
# Register window cleaning trap incompatible between SPARC and UltraSPARC
# platforms.
#
@
