head	1.2;
access;
symbols
	MLW_daveb_inline_1_4_99:1.2.1
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.1
	MLWorks_MM_adapt:1.1.12
	MLWorks_20m1_1997_10_23:1.1
	MLWorks_11r1:1.1.9.1.1.1.1
	MLWorks_workspace_97:1.1.11
	MLWorks_dt_wizard:1.1.10
	MLWorks_11c0_1997_09_09:1.1.9.1.1.1
	MLWorks_10r3:1.1.9.1.3
	MLWorks_10r2_551:1.1.9.1.2
	MLWorks_11:1.1.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.9.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c2_1997_06_14:1.1.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.9
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1
	MM_ML_release_korma_1997_04_01:1.1
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.7.1.1
	MLWorks_gui_1996_12_18:1.1.8
	MLWorks_1_0_Win32_1996_12_17:1.1.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.4.1
	JFHrts:1.1.6
	MLWorks_1_0_Irix_1996_11_28:1.1.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.5
	MLWorks_1_0_Unix_1996_11_14:1.1.4
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1
	MLWorks_Beta_1996_07_02:1.1
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1
	MLWorks_Beta_1996_06_03:1.1
	MLWorks_Beta_1996_05_31:1.1;
locks; strict;
comment	@ * @;


1.2
date	98.02.23.18.44.36;	author jont;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	96.05.30.11.27.53;	author stephenb;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1
	1.1.6.1
	1.1.7.1
	1.1.8.1
	1.1.9.1
	1.1.10.1
	1.1.11.1
	1.1.12.1;
next	;

1.1.1.1
date	96.09.13.11.21.57;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.16.12.01;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.30.53;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	96.11.14.12.56.48;	author hope;	state Exp;
branches
	1.1.4.1.1.1;
next	;

1.1.4.1.1.1
date	96.11.28.15.07.08;	author hope;	state Exp;
branches;
next	;

1.1.5.1
date	96.11.22.18.14.48;	author hope;	state Exp;
branches;
next	;

1.1.6.1
date	96.12.17.10.01.36;	author hope;	state Exp;
branches;
next	;

1.1.7.1
date	96.12.17.17.53.20;	author hope;	state Exp;
branches
	1.1.7.1.1.1;
next	;

1.1.7.1.1.1
date	97.02.24.11.44.16;	author hope;	state Exp;
branches;
next	;

1.1.8.1
date	96.12.18.09.47.53;	author hope;	state Exp;
branches;
next	;

1.1.9.1
date	97.05.12.10.40.17;	author hope;	state Exp;
branches
	1.1.9.1.1.1
	1.1.9.1.2.1
	1.1.9.1.3.1;
next	;

1.1.9.1.1.1
date	97.07.28.18.29.42;	author daveb;	state Exp;
branches
	1.1.9.1.1.1.1.1;
next	;

1.1.9.1.1.1.1.1
date	97.10.07.11.55.31;	author jkbrook;	state Exp;
branches;
next	;

1.1.9.1.2.1
date	97.09.08.17.22.40;	author daveb;	state Exp;
branches;
next	;

1.1.9.1.3.1
date	97.09.09.14.18.44;	author daveb;	state Exp;
branches;
next	;

1.1.10.1
date	97.09.10.19.38.16;	author brucem;	state Exp;
branches;
next	;

1.1.11.1
date	97.09.11.21.05.59;	author daveb;	state Exp;
branches;
next	;

1.1.12.1
date	97.10.31.13.49.03;	author nickb;	state Exp;
branches;
next	;

1.2.1.1
date	99.04.01.18.04.40;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.2
log
@[Bug #70018]
Modify declare_root to accept a second parameter
indicating whether the root is live for image save
@
text
@/* Copyright 1996 The Harlequin Group Limited.  All rights reserved.
 *
 * The default Unix timer implementation (../Unix/mlw_timer.c) uses
 * getrusage which is only supported under Solaris as part of the BSD
 * compatability package which we (generally) don't want to rely on.
 * Although the SunOS (4.1.X) manual page lists times as being obsolete
 * this is the mechanism that is used under Solaris to get user and system
 * times!
 *
 * Note that Solaris does support a higher resolution timer than 
 * gettimeofday, called gethrtime, which could be used to provide more
 * accurate results for Timer.real_timer.  Hopefully this will be integrated
 * when there is time to overhaul the time implementation again.
 * 
 * Revision Log
 * ------------
 *
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
 */

#include <assert.h>		/* assert */
#include <sys/times.h>		/* times */
#include <unistd.h>		/* sysconf */
#include <errno.h>		/* errno */
#include <string.h>		/* strerror */
#include "environment.h"	/* env_function ... etc. */
#include "allocator.h"		/* allocate_record */
#include "gc.h"			/* gc_clock, declare_root, ... etc. */
#include "utils.h"		/* error */
#include "time_date.h"		/* mlw_time_make */
#include "mlw_timer.h"
#include "mlw_timer_init.h"


/*
 * Normally I'd just use CLK_TCK, but this is wrapped up in #ifdefs
 * in <limits.h> under Solaris to avoid it being seen because the value is 
 * is not fixed at compile time.  The correct way to determine the tick value 
 * is to use sysconf ...
 */
static int mlw_timer_tick; /* = sysconf(_SC_CLK_TCK) */




/*
 * Timer.now : unit -> cpu_timer
 *
 * This is an auxiliary function that it used to support the implementation
 * of Timer.startCPUTimer and Timer.checkCPUTimer.  It just returns the
 * current user, system and gc time.
 */

static mlval mlw_timer_now(mlval unit)
{
  mlval gc_time, usr_time, sys_time, cpu_time;

  assert(mlw_timer_tick > 0);

  {
    long gc_time_sec, gc_time_usec;
    gc_time_sec= gc_clock / 1000000.0;
    gc_time_usec= gc_clock - ((double)gc_time_sec * 1000000.0);
    gc_time= mlw_time_make(gc_time_sec, gc_time_usec);
    declare_root(&gc_time, 0);
  }

  {
    long secs, usecs;
    struct tms tms;
    (void)times(&tms);
    secs= tms.tms_utime/mlw_timer_tick;
    usecs= (tms.tms_utime%mlw_timer_tick)*mlw_time_usecs_per_sec/mlw_timer_tick;
    usr_time= mlw_time_make(secs, usecs);
    declare_root(&usr_time, 0);
    secs= tms.tms_stime/mlw_timer_tick;
    usecs= (tms.tms_stime%mlw_timer_tick)*mlw_time_usecs_per_sec/mlw_timer_tick;
    sys_time= mlw_time_make(secs, usecs);
    declare_root(&sys_time, 0);
  }

  cpu_time= mlw_timer_cpu_make();
  mlw_timer_cpu_usr(cpu_time)= usr_time;
  mlw_timer_cpu_sys(cpu_time)= sys_time;
  mlw_timer_cpu_gc(cpu_time)= gc_time;
  retract_root(&sys_time);
  retract_root(&usr_time);
  retract_root(&gc_time);
  return cpu_time;
}



void mlw_timer_init(void)
{
  if ((mlw_timer_tick= sysconf(_SC_CLK_TCK)) < 0)
    error(" cannot determine CLK_TCK: %s\n", strerror(errno));
  env_function("Timer.now", mlw_timer_now);
}
@


1.2.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a18 5
 * Revision 1.2  1998/02/23  18:44:36  jont
 * [Bug #70018]
 * Modify declare_root to accept a second parameter
 * indicating whether the root is live for image save
 *
@


1.1
log
@new unit
@
text
@d18 4
a21 1
 * $Log$
d68 1
a68 1
    declare_root(&gc_time);
d78 1
a78 1
    declare_root(&usr_time);
d82 1
a82 1
    declare_root(&sys_time);
@


1.1.12.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@d18 1
a18 4
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
@


1.1.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@d18 1
a18 4
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
@


1.1.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@d18 1
a18 4
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
@


1.1.9.1
log
@branched from 1.1
@
text
@d18 1
a18 4
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
@


1.1.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a18 3
 * Revision 1.1.9.1  1997/05/12  10:40:17  hope
 * branched from 1.1
 *
@


1.1.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a18 3
 * Revision 1.1.9.1  1997/05/12  10:40:17  hope
 * branched from 1.1
 *
@


1.1.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a18 3
 * Revision 1.1.9.1  1997/05/12  10:40:17  hope
 * branched from 1.1
 *
@


1.1.9.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a18 3
 * Revision 1.1.9.1.1.1  1997/07/28  18:29:42  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.1.8.1
log
@branched from 1.1
@
text
@d18 1
a18 4
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
@


1.1.7.1
log
@branched from 1.1
@
text
@d18 1
a18 4
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
@


1.1.7.1.1.1
log
@branched from 1.1.7.1
@
text
@a18 3
 * Revision 1.1.7.1  1996/12/17  17:53:20  hope
 * branched from 1.1
 *
@


1.1.6.1
log
@branched from 1.1
@
text
@d18 1
a18 4
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
@


1.1.5.1
log
@branched from 1.1
@
text
@d18 1
a18 4
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
@


1.1.4.1
log
@branched from 1.1
@
text
@d18 1
a18 4
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
@


1.1.4.1.1.1
log
@branched from 1.1.4.1
@
text
@a18 3
 * Revision 1.1.4.1  1996/11/14  12:56:48  hope
 * branched from 1.1
 *
@


1.1.3.1
log
@branched from 1.1
@
text
@d18 1
a18 4
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
@


1.1.2.1
log
@branched from 1.1
@
text
@d18 1
a18 4
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
@


1.1.1.1
log
@branched from 1.1
@
text
@d18 1
a18 4
 * $Log: src:OS:Solaris:mlw_timer.c,v $
 * Revision 1.1  1996/05/30  11:27:53  stephenb
 * new unit
 *
@
