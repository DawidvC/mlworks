head	1.28;
access;
symbols
	MLW_daveb_inline_1_4_99:1.28.1
	MLWorks_21c0_1999_03_25:1.28
	MLWorks_20c1_1998_08_20:1.27
	MLWorks_20c0_1998_08_04:1.27
	MLWorks_20b2c2_1998_06_19:1.27
	MLWorks_20b2_Windows_1998_06_12:1.27
	MLWorks_20b1c1_1998_05_07:1.27
	MLWorks_20b0_1998_04_07:1.27
	MLWorks_20b0_1998_03_20:1.27
	MLWorks_20m2_1998_02_16:1.27
	MLWorks_MM_adapt:1.27.3
	MLWorks_20m1_1997_10_23:1.27
	MLWorks_11r1:1.26.6.1.1.1.1
	MLWorks_workspace_97:1.27.2
	MLWorks_dt_wizard:1.27.1
	MLWorks_11c0_1997_09_09:1.26.6.1.1.1
	MLWorks_10r3:1.26.6.1.3
	MLWorks_10r2_551:1.26.6.1.2
	MLWorks_11:1.26.6.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.26.6.1
	MLWorks_20m0_1997_06_20:1.26
	MLWorks_1_0_r2c2_1997_06_14:1.26.6.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.26.6.1
	MLWorks_1_0_r2c1_1997_05_12:1.26.6
	MLWorks_BugFix_1997_04_24:1.26
	MLWorks_1_0_r2_Win32_1997_04_11:1.26
	MLWorks_1_0_r2_Unix_1997_04_04:1.26
	MM_ML_release_korma_1997_04_01:1.26
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.26.4.1.1
	MLWorks_gui_1996_12_18:1.26.5
	MLWorks_1_0_Win32_1996_12_17:1.26.4
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.26.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.26.1.1
	JFHrts:1.26.3
	MLWorks_1_0_Irix_1996_11_28:1.26.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.26.2
	MLWorks_1_0_Unix_1996_11_14:1.26.1
	MLWorks_Open_Beta2_1996_10_11:1.25.3
	MLWorks_License_dev:1.25.2
	MLWorks_1_open_beta_1996_09_13:1.25.1
	MLWorks_Open_Beta_1996_08_22:1.24
	MLWorks_Beta_1996_07_02:1.24
	MLWorks_Beta_1996_06_07:1.24
	MLWorks_Beta_1996_06_06:1.24
	MLWorks_Beta_1996_06_05:1.24
	MLWorks_Beta_1996_06_03:1.24
	MLWorks_Beta_1996_05_31:1.24
	MLWorks_Beta_1996_05_30:1.24;
locks; strict;
comment	@# @;


1.28
date	98.12.15.15.08.03;	author johnh;	state Exp;
branches
	1.28.1.1;
next	1.27;

1.27
date	97.05.21.16.19.05;	author andreww;	state Exp;
branches
	1.27.1.1
	1.27.2.1
	1.27.3.1;
next	1.26;

1.26
date	96.11.08.11.15.09;	author daveb;	state Exp;
branches
	1.26.1.1
	1.26.2.1
	1.26.3.1
	1.26.4.1
	1.26.5.1
	1.26.6.1;
next	1.25;

1.25
date	96.09.09.17.55.08;	author jont;	state Exp;
branches
	1.25.1.1
	1.25.2.1
	1.25.3.1;
next	1.24;

1.24
date	96.05.13.15.31.23;	author nickb;	state Exp;
branches;
next	1.23;

1.23
date	96.05.02.14.02.18;	author stephenb;	state Exp;
branches;
next	1.22;

1.22
date	96.04.18.11.56.49;	author matthew;	state Exp;
branches;
next	1.21;

1.21
date	96.04.16.09.11.23;	author brianm;	state Exp;
branches;
next	1.20;

1.20
date	96.04.10.12.10.56;	author matthew;	state Exp;
branches;
next	1.19;

1.19
date	96.03.12.13.19.45;	author jont;	state Exp;
branches;
next	1.18;

1.18
date	96.03.04.12.23.47;	author stephenb;	state Exp;
branches;
next	1.17;

1.17
date	96.02.14.11.29.27;	author jont;	state Exp;
branches;
next	1.16;

1.16
date	96.02.08.16.19.54;	author jont;	state Exp;
branches;
next	1.15;

1.15
date	96.01.18.14.07.41;	author stephenb;	state Exp;
branches;
next	1.14;

1.14
date	95.12.13.16.04.25;	author nickb;	state Exp;
branches;
next	1.13;

1.13
date	95.12.11.11.06.37;	author jont;	state Exp;
branches;
next	1.12;

1.12
date	95.11.24.15.19.20;	author jont;	state Exp;
branches;
next	1.11;

1.11
date	95.11.15.14.24.40;	author nickb;	state Exp;
branches;
next	1.10;

1.10
date	95.10.17.13.48.04;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	95.10.10.14.51.54;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	95.09.01.10.18.42;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	95.08.22.14.45.59;	author nickb;	state Exp;
branches;
next	1.6;

1.6
date	95.08.11.16.22.04;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	95.08.02.16.33.50;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	95.06.23.09.55.16;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	95.04.11.11.34.04;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	95.03.03.12.49.20;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	95.02.07.16.55.24;	author jont;	state Exp;
branches;
next	;

1.25.1.1
date	96.09.13.11.24.43;	author hope;	state Exp;
branches;
next	;

1.25.2.1
date	96.10.07.16.15.03;	author hope;	state Exp;
branches;
next	;

1.25.3.1
date	96.10.17.11.34.29;	author hope;	state Exp;
branches;
next	;

1.26.1.1
date	96.11.14.13.00.08;	author hope;	state Exp;
branches
	1.26.1.1.1.1;
next	;

1.26.1.1.1.1
date	96.11.28.15.10.11;	author hope;	state Exp;
branches;
next	;

1.26.2.1
date	96.11.22.18.17.57;	author hope;	state Exp;
branches;
next	;

1.26.3.1
date	96.12.17.10.04.39;	author hope;	state Exp;
branches;
next	;

1.26.4.1
date	96.12.17.17.56.16;	author hope;	state Exp;
branches
	1.26.4.1.1.1;
next	;

1.26.4.1.1.1
date	97.02.24.11.47.50;	author hope;	state Exp;
branches;
next	;

1.26.5.1
date	96.12.18.09.50.55;	author hope;	state Exp;
branches;
next	;

1.26.6.1
date	97.05.12.10.44.34;	author hope;	state Exp;
branches
	1.26.6.1.1.1
	1.26.6.1.2.1
	1.26.6.1.3.1;
next	;

1.26.6.1.1.1
date	97.07.28.18.29.49;	author daveb;	state Exp;
branches
	1.26.6.1.1.1.1.1;
next	;

1.26.6.1.1.1.1.1
date	97.10.07.11.55.38;	author jkbrook;	state Exp;
branches;
next	;

1.26.6.1.2.1
date	97.09.08.17.22.47;	author daveb;	state Exp;
branches;
next	;

1.26.6.1.3.1
date	97.09.09.14.18.51;	author daveb;	state Exp;
branches;
next	;

1.27.1.1
date	97.09.10.19.38.25;	author brucem;	state Exp;
branches;
next	;

1.27.2.1
date	97.09.11.21.06.05;	author daveb;	state Exp;
branches;
next	;

1.27.3.1
date	97.10.31.13.49.08;	author nickb;	state Exp;
branches;
next	;

1.28.1.1
date	99.04.01.18.04.45;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
No reason given
@


1.28
log
@[Bug #01860]
use native threads on NT to fix explorer file dialog problem.
@
text
@# ==== MLWorks runtime system x86/WinNT-specific (Gnu) Makefile ====
#
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.27 1997/05/21 16:19:05 andreww Exp $

# Windows NT supports Win32

OS_TYPE := Win32

# add target-specific defines

DEFINES		:= $(DEFINES) MACH_FIXUP OS_NT WIN32 NATIVE_THREADS LICENSE LITTLE_ENDIAN

# add target-specific includes

INCLUDEDIRS	:= $(INCLUDEDIRS)

# add target-specific options (none for Windows)

TARGETOPTS	=
TARGETOPTSDEBUG =

# other target-specific things

STRIP		= /usr/bin/strip

#runtime dll-ization specific details

DLLFLAGS	= /LD
DLLLIBRARIES	= libc.lib
@


1.28.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.28 1998/12/15 15:08:03 johnh Exp $
@


1.27
log
@[Bug #30045]
Adding System specific details for runtime DLL-ization.
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26 1996/11/08 11:15:09 daveb Exp $
d11 1
a11 1
DEFINES		:= $(DEFINES) MACH_FIXUP OS_NT WIN32 LICENSE LITTLE_ENDIAN
@


1.27.3.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.27 1997/05/21 16:19:05 andreww Exp $
@


1.27.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.27 1997/05/21 16:19:05 andreww Exp $
@


1.27.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.27 1997/05/21 16:19:05 andreww Exp $
@


1.26
log
@Added LITTLE_ENDIAN to the DEFINES (for the SHA algorithm).
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.25 1996/09/09 17:55:08 jont Exp $
d25 5
@


1.26.6.1
log
@branched from 1.26
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26 1996/11/08 11:15:09 daveb Exp $
@


1.26.6.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26.6.1 1997/05/12 10:44:34 hope Exp $
@


1.26.6.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26.6.1 1997/05/12 10:44:34 hope Exp $
@


1.26.6.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26.6.1 1997/05/12 10:44:34 hope Exp $
@


1.26.6.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26.6.1.1.1 1997/07/28 18:29:49 daveb Exp $
@


1.26.5.1
log
@branched from 1.26
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26 1996/11/08 11:15:09 daveb Exp $
@


1.26.4.1
log
@branched from 1.26
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26 1996/11/08 11:15:09 daveb Exp $
@


1.26.4.1.1.1
log
@branched from 1.26.4.1
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26.4.1 1996/12/17 17:56:16 hope Exp $
@


1.26.3.1
log
@branched from 1.26
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26 1996/11/08 11:15:09 daveb Exp $
@


1.26.2.1
log
@branched from 1.26
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26 1996/11/08 11:15:09 daveb Exp $
@


1.26.1.1
log
@branched from 1.26
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26 1996/11/08 11:15:09 daveb Exp $
@


1.26.1.1.1.1
log
@branched from 1.26.1.1
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.26.1.1 1996/11/14 13:00:08 hope Exp $
@


1.25
log
@Move list of extra modules into Win32/GNUmake
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.24 1996/05/13 15:31:23 nickb Exp $
d11 1
a11 1
DEFINES		:= $(DEFINES) MACH_FIXUP OS_NT WIN32 LICENSE
@


1.25.3.1
log
@branched from 1.25
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.25 1996/09/09 17:55:08 jont Exp $
@


1.25.2.1
log
@branched from 1.25
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.25 1996/09/09 17:55:08 jont Exp $
@


1.25.1.1
log
@branched from 1.25
@
text
@d3 1
a3 1
# $Id: src:OS:NT:arch:I386:GNUmake,v 1.25 1996/09/09 17:55:08 jont Exp $
@


1.24
log
@Make "include" and "define" C compiler options more portable.
@
text
@d3 1
a3 1
# $Id$
a7 8

# add target-specific modules

MODULES		:= $(MODULES) win32 window native_threads timer heap \
			i386_code dde_lib mach_fixup
#		poly_equal intmul

MODULESSTATIC   := $(MODULES) static_link
@


1.23
log
@Add socket library in order to support OS.IO.poll
@
text
@d1 1
a1 4
# Revision Log
# ------------
#
# $Log$
d3 5
d12 2
a13 2
			i386_code  dde_lib
#		poly_equal intmul mach_fixup
d19 1
a19 11
DEFINES		:= $(DEFINES) -DMACH_FIXUP -DOS_NT -D_M_IX86
#		-DMACH_INT_MUL -DMACH_POLY_EQ -DMACH_STRINGS -D_CFRONT_PASS_ -D_X86_ -DWIN32


# NT supports the Win32 API ...

OS_TYPE := Win32

# Note that this must come before the following since INCLUDES
# is defined in terms of OS_TYPE

d23 1
a23 1
INCLUDES	:= $(INCLUDES) -I- -IC:/mstools/h
d25 1
a25 1
# add target-specific libraries
d27 2
a28 1
LIBRARIES	:= $(LIBRARIES)
d30 1
a30 1
# add an assortment of other target-specific features
a32 32

OPTS = /nologo /Gd /I src /I src/arch/I386 /I src/OS/NT /I src/OS/Win32 /I src/OS/NT/arch/I386 /I gen /W3 /ML
DEFS	= /DOS_NT /DWIN32 /DLICENSE
DEFSREL	= $(DEFS)
DEFSDEB	= $(DEFS) /DDEBUG /DDIAGNOSTICS /DCOLLECT_STATS

OPTSREL = $(OPTS) /O2
OPTSDEB = $(OPTS) /Od /Zi /FR
CFLAGSREL = $(OPTSREL) $(DEFSREL)
CFLAGSDEB = $(OPTSDEB) $(DEFSDEB)

CPU=I386
hc=hc
rc=rc
proj=runtime

GUILIBS = user32.lib gdi32.lib comdlg32.lib winspool.lib version.lib winmm.lib wsock32.lib $(proj).rbj

foo:	all

# Update the help file if necessary
$(proj).hlp : $(proj).rtf
	$(hc) -n $(proj).hpj

# Update the resource if necessary
$(proj).res: $(proj).rc $(proj).rcv $(proj).dlg
	$(rc) $(rcvars) -r -isrc -isrc/arch/I386 -fo $(proj).res $(cvars) $(proj).rc

$(proj).rbj:	$(proj).res
	cvtres -$(CPU) $(proj).res -o $(proj).rbj

$(proj): $(proj).res $(proj).def $(proj).hlp
@


1.22
log
@Removing GUIFLAGS
@
text
@d1 6
d56 1
a56 1
GUILIBS = user32.lib gdi32.lib comdlg32.lib winspool.lib version.lib winmm.lib $(proj).rbj
@


1.21
log
@Adding DDE libraries stuff ...
@
text
@a51 6
ifeq "$(SUBSYSTEM)" ""
	SUBSYSTEM = "console"
endif

GUIFLAGS = /subsystem:$(SUBSYSTEM)

@


1.20
log
@Adding subsystem variable
@
text
@d4 1
a4 1
			i386_code 
@


1.19
log
@Ading extra target to ensure make works without targets on command line
@
text
@d51 6
a56 1
GUIFLAGS = /subsystem:console
@


1.18
log
@Add OS_TYPE = Win32 so that files common to all Win32 variants can
be picked up from src/rts/src/OS/Win32
@
text
@d53 2
@


1.17
log
@Tidying up
@
text
@d3 2
a4 2
MODULES		:= $(MODULES) win32 winmain native_threads wintimer heap \
			i386_code win32_export
d14 9
d35 1
a35 1
OPTS = /nologo /Gd /I src /I src/arch/I386 /I src/OS/NT /I src/OS/common /I src/OS/NT/arch/I386 /I gen /W3 /ML
@


1.16
log
@Adding win32_export
@
text
@a43 6
$(OBJECTDIR)/winmain.o : winmain.c
	cl $< $(CFLAGSREL) /c /Fo$@@

$(OBJECTDIR)/winmain-g.o : winmain.c
	cl $< $(CFLAGSDEB) /c /Fo$@@

@


1.15
log
@OS reorganisation: remove any reference to unix since this
is not needed by the NT version not that OS specific stuff
is not in the pervasive library.
@
text
@d4 1
a4 1
			i386_code
@


1.14
log
@Add i386_code, which we need for time profiling (stack frame reconstruction).
@
text
@d3 1
a3 1
MODULES		:= $(MODULES) unix nt winmain native_threads wintimer heap \
@


1.13
log
@Introduce rule for runtime.rbj, depending on runtime.res
@
text
@d3 2
a4 1
MODULES		:= $(MODULES) unix nt winmain native_threads wintimer heap
@


1.12
log
@Adding module heap to generate the ML_HEAP COFF section
@
text
@d56 2
@


1.11
log
@Add timer capabilities.
@
text
@d3 1
a3 1
MODULES		:= $(MODULES) unix nt winmain native_threads wintimer
@


1.10
log
@Add src/OS/common to include path for cl
@
text
@d3 1
a3 1
MODULES		:= $(MODULES) unix nt winmain
d40 1
a40 1
GUILIBS = user32.lib gdi32.lib comdlg32.lib winspool.lib version.lib $(proj).rbj
@


1.9
log
@Modifications for use using cl instead of gcc
@
text
@d25 1
a25 1
OPTS = /nologo /Gd /I src /I src/arch/I386 /I src/OS/NT /I src/OS/NT/arch/I386 /I gen /W3 /ML
@


1.8
log
@Remove /Z7 from debug compilation options, it's not necessary
Sort out debug and release options to correspond to the ones we use with gcc
@
text
@d3 2
a4 2
MODULES		:= $(MODULES) unix nt winmain mach_fixup
#		poly_equal intmul
d31 1
a31 1
OPTSDEB = $(OPTS) /Od /Zi
@


1.7
log
@Slight rearrangement.
@
text
@d26 1
a26 1
DEFS	= /DOS_NT /DWIN32
d28 1
a28 1
DEFSDEB	= $(DEFS)
d31 2
a32 2
OPTSDEB = $(OPTS) /DDIAGNOSTICS /Z7 /Od /Zi
CFLAGSREL = $(OPTSDEB) $(DEFSDEB)
@


1.6
log
@Add codeview generation to compilation of winmain in debugging version
@
text
@d21 2
@


1.5
log
@Modifications for latest NT (grrrrr)
@
text
@d29 1
a29 1
OPTSDEB = $(OPTS) /DDIAGNOSTICS /Z7 /Od
@


1.4
log
@Allow use of assembler version of fixup
@
text
@d10 2
a11 2
DEFINES		:= $(DEFINES) -DOS_NT -D_CFRONT_PASS_ -D_X86_ -D_M_IX86 -DWIN32 -DMACH_FIXUP
#		-DMACH_INT_MUL -DMACH_POLY_EQ -DMACH_STRINGS
d23 5
a27 1
OPTS = /nologo /Gd /I src /I src/arch/I386 /I src/OS/NT /I src/OS/NT/arch/I386 /I gen /W3
a38 1
#GUIFLAGS = /subsystem:windows /entry:WinMainCRTStartup
@


1.3
log
@Set up correct line to make winmain-g.o
@
text
@d3 2
a4 2
MODULES		:= $(MODULES) unix nt winmain
#		poly_equal intmul mach_fixup
d10 2
a11 2
DEFINES		:= $(DEFINES) -DOS_NT -D_CFRONT_PASS_ -D_X86_ -D_M_IX86 -DWIN32
#		-DMACH_FIXUP -DMACH_INT_MUL -DMACH_POLY_EQ -DMACH_STRINGS
@


1.2
log
@Work on windowing version
@
text
@d41 3
@


1.1
log
@new unit
No reason given
@
text
@d3 1
a3 1
MODULES		:= $(MODULES) unix nt
d10 1
a10 1
DEFINES		:= $(DEFINES) -DOS_NT -D_CFRONT_PASS_ -D_X86_ -D_M_IX86
d22 29
@
