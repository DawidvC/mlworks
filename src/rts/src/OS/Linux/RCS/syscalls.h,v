head	1.6;
access;
symbols
	MLW_daveb_inline_1_4_99:1.6.1
	MLWorks_21c0_1999_03_25:1.6
	MLWorks_20c1_1998_08_20:1.5
	MLWorks_20c0_1998_08_04:1.5
	MLWorks_20b2c2_1998_06_19:1.5
	MLWorks_20b2_Windows_1998_06_12:1.5
	MLWorks_20b1c1_1998_05_07:1.5
	MLWorks_20b0_1998_04_07:1.5
	MLWorks_20b0_1998_03_20:1.5
	MLWorks_20m2_1998_02_16:1.5
	MLWorks_MM_adapt:1.4.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.1.1.1.1.1
	MLWorks_workspace_97:1.4.3
	MLWorks_dt_wizard:1.4.2
	MLWorks_11c0_1997_09_09:1.4.1.1.1.1
	MLWorks_10r3:1.4.1.1.3
	MLWorks_10r2_551:1.4.1.1.2
	MLWorks_11:1.4.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.1.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.1
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MM_ML_release_korma_1997_04_01:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.7.1.1
	MLWorks_gui_1996_12_18:1.3.8
	MLWorks_1_0_Win32_1996_12_17:1.3.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	JFHrts:1.3.6
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ * @;


1.6
date	98.09.30.15.53.49;	author jont;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	97.11.06.14.22.54;	author johnh;	state Exp;
branches;
next	1.4;

1.4
date	97.04.04.17.41.37;	author jont;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1;
next	1.3;

1.3
date	96.07.24.14.22.32;	author jont;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1;
next	1.2;

1.2
date	95.08.04.13.44.35;	author nickb;	state Exp;
branches;
next	1.1;

1.1
date	94.10.04.16.33.03;	author jont;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.23.30;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.13.41;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.33.07;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.12.58.52;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.15.08.50;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.16.33;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.10.03.18;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.17.17.54.56;	author hope;	state Exp;
branches
	1.3.7.1.1.1;
next	;

1.3.7.1.1.1
date	97.02.24.11.46.04;	author hope;	state Exp;
branches;
next	;

1.3.8.1
date	96.12.18.09.49.31;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	97.05.12.10.41.57;	author hope;	state Exp;
branches
	1.4.1.1.1.1
	1.4.1.1.2.1
	1.4.1.1.3.1;
next	;

1.4.1.1.1.1
date	97.07.28.18.25.22;	author daveb;	state Exp;
branches
	1.4.1.1.1.1.1.1;
next	;

1.4.1.1.1.1.1.1
date	97.10.07.11.51.16;	author jkbrook;	state Exp;
branches;
next	;

1.4.1.1.2.1
date	97.09.08.17.18.37;	author daveb;	state Exp;
branches;
next	;

1.4.1.1.3.1
date	97.09.09.14.14.46;	author daveb;	state Exp;
branches;
next	;

1.4.2.1
date	97.09.10.19.31.28;	author brucem;	state Exp;
branches;
next	;

1.4.3.1
date	97.09.11.21.00.55;	author daveb;	state Exp;
branches;
next	;

1.4.4.1
date	97.10.31.13.43.57;	author nickb;	state Exp;
branches;
next	;

1.6.1.1
date	99.04.01.18.00.50;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.6
log
@[Bug #70108]
Add definition for struct timespec as Red Hat 5 has buggered this
@
text
@/*  ==== UNIX SYSCALL DECLARATIONS HEADER ====
 *
 *  Copyright (C) 1994 Harlequin Ltd
 *
 *  Description
 *  -----------
 *  This header declares Unix system calls which are not declared in
 *  system header files. 
 *
 *  $Id: src:OS:Linux:syscalls.h,v 1.5 1997/11/06 14:22:54 johnh Exp $
 */

#ifndef syscall_h
#define syscall_h

/* Most things get defined OK in Linux header files */

#include <sys/types.h>
#include <sys/socket.h>

/* files */

extern int open (const char *path, int flags, ...);
extern int close (int fd);
extern char *getwd (char *pathname);
extern int pipe (int fd[2]);
extern off_t lseek(int fd, off_t offset, int whence);
extern char *realpath(__const char *__path,
		      char __resolved_path []);

/* time */

extern int getpagesize (void);

/* signals */

/* struct sigcontext from /usr/include/asm/signal.h, #ifdeffed __KERNEL__ */

struct sigcontext {
	unsigned short gs, __gsh;
	unsigned short fs, __fsh;
	unsigned short es, __esh;
	unsigned short ds, __dsh;
	unsigned long edi;
	unsigned long esi;
	unsigned long ebp;
	unsigned long esp;
	unsigned long ebx;
	unsigned long edx;
	unsigned long ecx;
	unsigned long eax;
	unsigned long trapno;
	unsigned long err;
	unsigned long eip;
	unsigned short cs, __csh;
	unsigned long eflags;
	unsigned long esp_at_signal;
	unsigned short ss, __ssh;
	unsigned long i387;
	unsigned long oldmask;
	unsigned long cr2;
};

/* processes */

extern int getpid(void);
extern int fork (void);
extern char **environ;
extern int vfork (void);
extern int kill (pid_t pid, int signal);

/* uids */

/* sockets */

/* passwords */

struct passwd *getpwent(void);
extern void setpwent(void);
extern void endpwent(void);

/* option parsing */

/* math */

extern int isnan(double);

/* misc */

extern char *sys_errlist [];

/* Return the current machine's Internet number.  */
extern long int gethostid __P ((void));

/* struct timespec, messed up in Red Hat 5 */

#ifndef _STRUCT_TIMESPEC
#define _STRUCT_TIMESPEC
struct timespec {
	long	tv_sec;		/* seconds */
	long	tv_nsec;	/* nanoseconds */
};
#endif /* _STRUCT_TIMESPEC */

/* lstat, messed up in Red Hat 5 */

#define lstat __lstat

/* S_ISLNK and S_ISSOCK, also screwed up in Red Hat 5 */

#define S_ISLNK(m)	(((m) & S_IFMT) == S_IFLNK)
#define S_ISSOCK(m)	(((m) & S_IFMT) == S_IFSOCK)
#endif /* syscall_h */
@


1.6.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.6 1998/09/30 15:53:49 jont Exp $
@


1.5
log
@[Bug #30125]
Change declaration of kill.
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.4 1997/04/04 17:41:37 jont Exp $
d95 18
@


1.4
log
@[Bug #1095]
Define _SVID_SOURCE to get definition of sbrk
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.3 1996/07/24 14:22:32 jont Exp $
d70 1
a70 1
extern int kill (int pid, int signal);
@


1.4.4.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.4 1997/04/04 17:41:37 jont Exp $
@


1.4.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.4 1997/04/04 17:41:37 jont Exp $
@


1.4.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.4 1997/04/04 17:41:37 jont Exp $
@


1.4.1.1
log
@branched from 1.4
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.4 1997/04/04 17:41:37 jont Exp $
@


1.4.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.4.1.1 1997/05/12 10:41:57 hope Exp $
@


1.4.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.4.1.1 1997/05/12 10:41:57 hope Exp $
@


1.4.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.4.1.1 1997/05/12 10:41:57 hope Exp $
@


1.4.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.4.1.1.1.1 1997/07/28 18:25:22 daveb Exp $
@


1.3
log
@Add prototype for isnan
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.2 1995/08/04 13:44:35 nickb Exp $
d28 2
a32 2
/* memory */

d91 3
@


1.3.8.1
log
@branched from 1.3
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.3 1996/07/24 14:22:32 jont Exp $
@


1.3.7.1
log
@branched from 1.3
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.3 1996/07/24 14:22:32 jont Exp $
@


1.3.7.1.1.1
log
@branched from 1.3.7.1
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.3.7.1 1996/12/17 17:54:56 hope Exp $
@


1.3.6.1
log
@branched from 1.3
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.3 1996/07/24 14:22:32 jont Exp $
@


1.3.5.1
log
@branched from 1.3
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.3 1996/07/24 14:22:32 jont Exp $
@


1.3.4.1
log
@branched from 1.3
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.3 1996/07/24 14:22:32 jont Exp $
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.3.4.1 1996/11/14 12:58:52 hope Exp $
@


1.3.3.1
log
@branched from 1.3
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.3 1996/07/24 14:22:32 jont Exp $
@


1.3.2.1
log
@branched from 1.3
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.3 1996/07/24 14:22:32 jont Exp $
@


1.3.1.1
log
@branched from 1.3
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.3 1996/07/24 14:22:32 jont Exp $
@


1.2
log
@Add sigcontext.
@
text
@d10 1
a10 1
 *  $Id: src:OS:Linux:syscalls.h,v 1.1 1994/10/04 16:33:03 jont Exp $
d85 2
@


1.1
log
@new file
@
text
@d10 1
a10 1
 *  $Id: src:OS:SunOS:syscalls.h,v 1.2 1994/06/09 14:24:55 nickh Exp $
d16 1
a16 1
/* Hardly anything gets defined properly in SunOS header files */
a17 1
#include <stdio.h>
a18 3
#include <sys/time.h>
#include <signal.h>
#include <sys/resource.h>
a19 2
#include <sys/stat.h>
#include <math.h>
d23 1
a23 12
/* open has an optional argument for mode. Files which use the mode
should define OPEN_MODE_ARGUMENT before including this file. C is a
language too stupid to live */

/*
extern int open (const char *path, int flags
#ifdef OPEN_MODE_ARGUMENT
, mode_t mode
#endif
		 );
*/

a24 2
extern int read (int fd, char *buf, int nbyte);
extern int write (int fd, char *buf, unsigned int nbyte);
a25 5
extern char* realpath(char *path,char resolved_path[]);
extern int chdir (char *path);
extern int rmdir (char *path);
extern int unlink (char *path);
extern int fsync (int fd);
d27 1
a27 10

/* GNU has its own header files, which do not use ANSI-style function
prototypes for certain functions. For mkdir this is a problem since
mode_t is a type with implicit promotion. */

#ifdef __GNUC__
extern int mkdir ();
#else
extern int mkdir (char *path, mode_t mode);
#endif
a30 5
extern int gettimeofday(struct timeval *tp, struct timezone *tzp);
/*
extern int setitimer (int which, struct itimerval *value, struct itimerval *ovalue);
*/

a32 5
extern int brk (caddr_t addr);
extern caddr_t sbrk (int incr);
extern int plock (int op);
extern void bcopy (char *b1, char *b2, int length);
extern int munmap (caddr_t addr, size_t len); /* mmap is in <sys/mman.h> */
d37 26
a62 3
extern int sigblock (int mask);
extern int sigvec (int sig, struct sigaction *vec, struct sigaction *ovec);
extern int sigstack (struct sigstack *ss, struct sigstack *oss);
a66 7
extern int sleep(unsigned int seconds);
extern int kill (int pid, int signal);
extern volatile void _exit (int status);
extern int getrusage (int who, struct rusage *rusage);
extern int execve (char *path, char *argv[], char *envp[]);
extern int execv (char *path, char *argv[]);
extern int execvp (char *file, char *argv[]);
d68 1
d70 1
a70 1
extern char **environ;
a73 3
extern int seteuid(int euid);
extern int getuid(void);

a75 12
extern int socket (int domain, int type, int protocol);
/*
extern int connect (int s, struct sockaddr *name, unsigned int namelen);
extern int bind (int s, struct sockaddr *name, unsigned int namelen);
extern int getsockname (int s, struct sockaddr *name, unsigned int *namelen);
extern int getpeername (int s, struct sockaddr *name, unsigned int *namelen);
*/
extern int listen (int s, int backlog);
/*
extern int accept (int s, struct sockaddr *name, unsigned int *namelen);
*/

d78 1
a83 3
extern char *optarg;
extern int optind;

a85 6
/* have to give a full prototype of matherr to avoid a warning */

/*
extern int matherr(struct exception *exn);
*/

a87 1
extern int gethostname (char *name, int namelen);
@
