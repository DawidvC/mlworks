head	1.12;
access;
symbols
	MLW_daveb_inline_1_4_99:1.12.5
	MLWorks_21c0_1999_03_25:1.12
	MLWorks_20c1_1998_08_20:1.12
	MLWorks_20c0_1998_08_04:1.12
	MLWorks_20b2c2_1998_06_19:1.12
	MLWorks_20b2_Windows_1998_06_12:1.12
	MLWorks_20b1c1_1998_05_07:1.12
	MLWorks_20b0_1998_04_07:1.12
	MLWorks_20b0_1998_03_20:1.12
	MLWorks_20m2_1998_02_16:1.12
	MLWorks_MM_adapt:1.12.4
	MLWorks_20m1_1997_10_23:1.12
	MLWorks_11r1:1.12.1.1.1.1.1
	MLWorks_workspace_97:1.12.3
	MLWorks_dt_wizard:1.12.2
	MLWorks_11c0_1997_09_09:1.12.1.1.1.1
	MLWorks_10r3:1.12.1.1.3
	MLWorks_10r2_551:1.12.1.1.2
	MLWorks_11:1.12.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.12.1.1
	MLWorks_20m0_1997_06_20:1.12
	MLWorks_1_0_r2c2_1997_06_14:1.12.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.12.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.12.1
	MLWorks_BugFix_1997_04_24:1.12
	MLWorks_1_0_r2_Win32_1997_04_11:1.12
	MLWorks_1_0_r2_Unix_1997_04_04:1.10
	MM_ML_release_korma_1997_04_01:1.10
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.8.7.1.1
	MLWorks_gui_1996_12_18:1.8.8
	MLWorks_1_0_Win32_1996_12_17:1.8.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.8.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.8.4.1
	JFHrts:1.8.6
	MLWorks_1_0_Irix_1996_11_28:1.8.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.8.5
	MLWorks_1_0_Unix_1996_11_14:1.8.4
	MLWorks_Open_Beta2_1996_10_11:1.8.3
	MLWorks_License_dev:1.8.2
	MLWorks_1_open_beta_1996_09_13:1.8.1
	MLWorks_Open_Beta_1996_08_22:1.7
	MLWorks_Beta_1996_07_02:1.7
	MLWorks_Beta_1996_06_07:1.7
	MLWorks_Beta_1996_06_06:1.7
	MLWorks_Beta_1996_06_05:1.7
	MLWorks_Beta_1996_06_03:1.7
	MLWorks_Beta_1996_05_31:1.7
	MLWorks_Beta_1996_05_30:1.7;
locks; strict;
comment	@ * @;


1.12
date	97.04.11.13.52.08;	author jont;	state Exp;
branches
	1.12.1.1
	1.12.2.1
	1.12.3.1
	1.12.4.1
	1.12.5.1;
next	1.11;

1.11
date	97.04.04.17.47.03;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	97.03.24.15.03.29;	author nickb;	state Exp;
branches;
next	1.9;

1.9
date	97.01.30.13.16.03;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	96.08.27.16.07.04;	author nickb;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1
	1.8.4.1
	1.8.5.1
	1.8.6.1
	1.8.7.1
	1.8.8.1;
next	1.7;

1.7
date	96.05.10.09.10.37;	author matthew;	state Exp;
branches;
next	1.6;

1.6
date	96.01.19.17.13.21;	author stephenb;	state Exp;
branches;
next	1.5;

1.5
date	95.08.04.10.54.50;	author nickb;	state Exp;
branches;
next	1.4;

1.4
date	95.04.24.14.09.51;	author nickb;	state Exp;
branches;
next	1.3;

1.3
date	94.12.09.17.17.07;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	94.12.08.13.49.41;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	94.10.04.16.27.57;	author jont;	state Exp;
branches;
next	;

1.8.1.1
date	96.09.13.11.21.39;	author hope;	state Exp;
branches;
next	;

1.8.2.1
date	96.10.07.16.11.42;	author hope;	state Exp;
branches;
next	;

1.8.3.1
date	96.10.17.11.30.23;	author hope;	state Exp;
branches;
next	;

1.8.4.1
date	96.11.14.12.56.19;	author hope;	state Exp;
branches
	1.8.4.1.1.1;
next	;

1.8.4.1.1.1
date	96.11.28.15.06.47;	author hope;	state Exp;
branches;
next	;

1.8.5.1
date	96.11.22.18.14.28;	author hope;	state Exp;
branches;
next	;

1.8.6.1
date	96.12.17.10.01.16;	author hope;	state Exp;
branches;
next	;

1.8.7.1
date	96.12.17.17.52.59;	author hope;	state Exp;
branches
	1.8.7.1.1.1;
next	;

1.8.7.1.1.1
date	97.02.24.11.43.52;	author hope;	state Exp;
branches;
next	;

1.8.8.1
date	96.12.18.09.47.34;	author hope;	state Exp;
branches;
next	;

1.12.1.1
date	97.05.12.10.39.57;	author hope;	state Exp;
branches
	1.12.1.1.1.1
	1.12.1.1.2.1
	1.12.1.1.3.1;
next	;

1.12.1.1.1.1
date	97.07.28.18.27.06;	author daveb;	state Exp;
branches
	1.12.1.1.1.1.1.1;
next	;

1.12.1.1.1.1.1.1
date	97.10.07.11.53.08;	author jkbrook;	state Exp;
branches;
next	;

1.12.1.1.2.1
date	97.09.08.17.20.14;	author daveb;	state Exp;
branches;
next	;

1.12.1.1.3.1
date	97.09.09.14.16.20;	author daveb;	state Exp;
branches;
next	;

1.12.2.1
date	97.09.10.19.34.02;	author brucem;	state Exp;
branches;
next	;

1.12.3.1
date	97.09.11.21.03.08;	author daveb;	state Exp;
branches;
next	;

1.12.4.1
date	97.10.31.13.46.02;	author nickb;	state Exp;
branches;
next	;

1.12.5.1
date	99.04.01.18.02.15;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.12
log
@[Bug #1412]
Implement os_set_rounding_mode
@
text
@/*  ==== OPERATING SYSTEM INTERFACE ====
 *
 *  Copyright (C) 1994 Harlequin Ltd
 *
 *  Revision Log
 *  ------------
 *  $Log: src:OS:Linux:os.c,v $
 * Revision 1.11  1997/04/04  17:47:03  jont
 * [Bug #1905]
 * Include utils.h for definition of error
 *
 * Revision 1.10  1997/03/24  15:03:29  nickb
 * Make malloc() and realloc() edge cases match the OS libraries.
 *
 * Revision 1.9  1997/01/30  13:16:03  jont
 * Add x interface
 *
 * Revision 1.8  1996/08/27  16:07:04  nickb
 * Add os_on_exit.
 *
 * Revision 1.7  1996/05/10  09:10:37  matthew
 * Adding get/set rounding mode functions
 *
 * Revision 1.6  1996/01/19  17:13:21  stephenb
 * OS reorganisation: Since the pervasive library no longer
 * contains OS specific stuff, there is no need to include
 * NT stuff under UNIX.
 *
 * Revision 1.5  1995/08/04  10:54:50  nickb
 * Fix gcc warnings.
 *
 * Revision 1.4  1995/04/24  14:09:51  nickb
 * Add os_update_windows().
 *
 * Revision 1.3  1994/12/09  17:17:07  jont
 * Add call to nt_init
 *
 * Revision 1.2  1994/12/08  13:49:41  matthew
 * Nasty little hack for setting the fpu to not trap
 *
 * Revision 1.1  1994/10/04  16:27:57  jont
 * new file
 *
 * Revision 1.2  1994/06/09  14:28:33  nickh
 * new file
 *
 * Revision 1.1  1994/06/09  10:52:56  nickh
 * new file
 *
 *
 */

#include <stdio.h>
#include <fpu_control.h>
#include <stdlib.h>		/* atexit */
#include <assert.h>

#include "os.h"
#include "unix.h"
#include "x.h"
#include "syscalls.h"
#include "diagnostic.h"
#include "utils.h"

extern void os_init(void)
{
  unix_init();
  /* This should be done properly sometime */
  __setfpucw (0x037f);
  x_init();
}

extern void os_on_exit(void (*f)(void))
{
  atexit(f);
}

/* On Solbournes, need a call to fsync between flushing and closing,
otherwise the wrong modification time may be obtained subsequently. As
far as we know there is no such requirement for Linux. */

extern void os_filesync(FILE *f)
{
}

/* this gets called 'every so often'. We use it to handle expose
 * events so windows which are brought to the top don't sit there
 * un-refreshed. */

extern void os_update_windows(void)
{
/* if we ever add Motif for Linux, this has to go in here:
  x_handle_expose_events();
  */
}

/* Modes are :
  0 : to nearest
  1 : to zero
  2 : to positive infinity
  3 : to negative infinity
*/

static unsigned short modes[] =
  {_FPU_RC_NEAREST, _FPU_RC_ZERO, _FPU_RC_UP, _FPU_RC_DOWN};

#define _FPU_MASK _FPU_RC_ZERO

extern unsigned short get_fpu_control_word(void);

extern int os_get_rounding_mode (void)
{
  unsigned short control = get_fpu_control_word() & _FPU_MASK;
  switch(control) {
  case _FPU_RC_NEAREST:
    return 0;
  case _FPU_RC_ZERO:
    return 1;
  case _FPU_RC_UP:
    return 2;
  case _FPU_RC_DOWN:
    return 3;
  default:
    return 0; /* Shouldn't happen */
  }
  return (0);
}

extern void os_set_rounding_mode (int arg)
{
  unsigned short control, old;
  assert(arg >= 0 && arg <= 3);
  control = modes[arg];
  old = get_fpu_control_word();
  control |= (old & (~_FPU_MASK));
  __setfpucw(control);
}

/* The behaviour of malloc(0), realloc(NULL,0) and realloc(p,0)
 * depends on the OS, because we have to maintain compatibility with
 * the OS libraries See <URI:spring://MM_InfoSys/analysis/realloc> for
 * more information. */

extern void *os_allocator(int code, void *arg)
{
  switch (code) {
  case OS_ALLOCATOR_MALLOC_ZERO:
    DIAGNOSTIC(4,"malloc(0)",0,0);
    return malloc(1);
    break;
  case OS_ALLOCATOR_REALLOC_NULL_ZERO:
    DIAGNOSTIC(4,"realloc(NULL,0)",0,0);
    return malloc(1);
    break;
  case OS_ALLOCATOR_REALLOC_P_ZERO:
    DIAGNOSTIC(4,"realloc(0x%08x,0)",arg,0);
    free(arg);
    return arg;
    break;
  default:
    error("Unknown code in os_allocator");
  }
  return NULL;
}

@


1.12.5.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a7 4
 * Revision 1.12  1997/04/11  13:52:08  jont
 * [Bug #1412]
 * Implement os_set_rounding_mode
 *
@


1.12.4.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a7 4
 * Revision 1.12  1997/04/11  13:52:08  jont
 * [Bug #1412]
 * Implement os_set_rounding_mode
 *
@


1.12.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a7 4
 * Revision 1.12  1997/04/11  13:52:08  jont
 * [Bug #1412]
 * Implement os_set_rounding_mode
 *
@


1.12.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a7 4
 * Revision 1.12  1997/04/11  13:52:08  jont
 * [Bug #1412]
 * Implement os_set_rounding_mode
 *
@


1.12.1.1
log
@branched from 1.12
@
text
@a7 4
 * Revision 1.12  1997/04/11  13:52:08  jont
 * [Bug #1412]
 * Implement os_set_rounding_mode
 *
@


1.12.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a7 3
 * Revision 1.12.1.1  1997/05/12  10:39:57  hope
 * branched from 1.12
 *
@


1.12.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a7 3
 * Revision 1.12.1.1  1997/05/12  10:39:57  hope
 * branched from 1.12
 *
@


1.12.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a7 3
 * Revision 1.12.1.1  1997/05/12  10:39:57  hope
 * branched from 1.12
 *
@


1.12.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a7 3
 * Revision 1.12.1.1.1.1  1997/07/28  18:27:06  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.11
log
@[Bug #1905]
Include utils.h for definition of error
@
text
@d8 4
d56 1
d104 7
d113 13
a125 1
  printf ("os_get_rounding_mode unimplemented");
d131 6
a136 1
  printf ("os_set_rounding_mode unimplemented");
@


1.10
log
@Make malloc() and realloc() edge cases match the OS libraries.
@
text
@d8 3
d58 1
@


1.9
log
@Add x interface
@
text
@d8 3
d54 1
d105 28
@


1.8
log
@Add os_on_exit.
@
text
@d8 3
d49 1
d57 1
@


1.8.8.1
log
@branched from 1.8
@
text
@a7 3
 * Revision 1.8  1996/08/27  16:07:04  nickb
 * Add os_on_exit.
 *
@


1.8.7.1
log
@branched from 1.8
@
text
@a7 3
 * Revision 1.8  1996/08/27  16:07:04  nickb
 * Add os_on_exit.
 *
@


1.8.7.1.1.1
log
@branched from 1.8.7.1
@
text
@a7 3
 * Revision 1.8.7.1  1996/12/17  17:52:59  hope
 * branched from 1.8
 *
@


1.8.6.1
log
@branched from 1.8
@
text
@a7 3
 * Revision 1.8  1996/08/27  16:07:04  nickb
 * Add os_on_exit.
 *
@


1.8.5.1
log
@branched from 1.8
@
text
@a7 3
 * Revision 1.8  1996/08/27  16:07:04  nickb
 * Add os_on_exit.
 *
@


1.8.4.1
log
@branched from 1.8
@
text
@a7 3
 * Revision 1.8  1996/08/27  16:07:04  nickb
 * Add os_on_exit.
 *
@


1.8.4.1.1.1
log
@branched from 1.8.4.1
@
text
@a7 3
 * Revision 1.8.4.1  1996/11/14  12:56:19  hope
 * branched from 1.8
 *
@


1.8.3.1
log
@branched from 1.8
@
text
@a7 3
 * Revision 1.8  1996/08/27  16:07:04  nickb
 * Add os_on_exit.
 *
@


1.8.2.1
log
@branched from 1.8
@
text
@a7 3
 * Revision 1.8  1996/08/27  16:07:04  nickb
 * Add os_on_exit.
 *
@


1.8.1.1
log
@branched from 1.8
@
text
@a7 3
 * Revision 1.8  1996/08/27  16:07:04  nickb
 * Add os_on_exit.
 *
@


1.7
log
@Adding get/set rounding mode functions
@
text
@d8 3
d42 1
d53 5
@


1.6
log
@OS reorganisation: Since the pervasive library no longer
contains OS specific stuff, there is no need to include
NT stuff under UNIX.
@
text
@d8 5
d68 18
@


1.5
log
@Fix gcc warnings.
@
text
@d8 3
a36 1
#include "nt.h"
a41 1
  nt_init();
@


1.4
log
@Add os_update_windows().
@
text
@d8 3
d46 2
a47 1
otherwise the wrong modification time may be obtained subsequently */
a50 1
  fsync(fileno(f));
@


1.3
log
@Add call to nt_init
@
text
@d8 3
d48 11
@


1.2
log
@Nasty little hack for setting the fpu to not trap
@
text
@d8 3
d28 1
d34 1
@


1.1
log
@new file
@
text
@d7 4
a10 1
 *  $Log: src:OS:SunOS:os.c,v $
d21 1
d30 2
@
