head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	96.01.22.16.51.55;	author stephenb;	state Exp;
branches;
next	1.2;

1.2
date	95.10.20.15.27.06;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	95.10.17.13.43.04;	author jont;	state Exp;
branches;
next	;


desc
@new unit
@


1.3
log
@change "nt_init" to "win32_init".
Also remove any lingering references to Unix.
@
text
@/*  ==== OPERATING SYSTEM INTERFACE ====
 *
 *  Copyright (C) 1994 Harlequin Ltd
 *
 *  Revision Log
 *  ------------
 *  $Log: src:OS:Win95:os.c,v $
 * Revision 1.2  1995/10/20  15:27:06  jont
 * Remove debugging text accidentally left in
 *
 * Revision 1.1  1995/10/17  13:43:04  jont
 * new unit
 *
 * Revision 1.4  1995/08/02  15:20:27  jont
 * Remove dependence on winmain.h
 *
 * Revision 1.3  1995/04/24  14:10:45  nickb
 * Add os_update_windows().
 *
 * Revision 1.2  1995/03/01  16:41:00  jont
 * Add winmain initialisation
 *
 * Revision 1.1  1994/12/12  14:27:06  jont
 * new file
 *
 * Revision 1.1  1994/10/04  16:27:57  jont
 * new file
 *
 * Revision 1.2  1994/06/09  14:28:33  nickh
 * new file
 *
 * Revision 1.1  1994/06/09  10:52:56  nickh
 * new file
 *
 *
 */

#include <stdio.h>

#include "os.h"
#include "win32.h"
#include "syscalls.h"

extern void os_init(void)
{
  win32_init();
  winmain_init();
}

/* On Solbournes, need a call to fsync between flushing and closing,
otherwise the wrong modification time may be obtained subsequently */

extern void os_filesync(FILE *f)
{
/*
  fsync(fileno(f));
*/
}

/* this gets called 'every so often'. We could use it to handle expose
 * events, but I don't know whether that's appropriate in NT */

extern void os_update_windows(void)
{
/* the non-NT ports have this here:
   x_handle_expose_events();
*/
}
@


1.2
log
@Remove debugging text accidentally left in
@
text
@d8 3
d41 1
a41 2
#include "unix.h"
#include "nt.h"
d46 1
a46 2
  unix_init();
  nt_init();
@


1.1
log
@new unit
@
text
@d7 4
a10 1
 *  $Log: src:OS:NT:os.c,v $
a43 2
/*
  printf("Call unix_init\n");
a44 1
  printf("Call nt_init\n");
a45 2
*/
  printf("Call winmain_init\n");
a46 1
  printf("Called winmain_init\n");
@
