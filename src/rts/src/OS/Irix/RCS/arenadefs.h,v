head	1.3;
access;
symbols
	MLW_daveb_inline_1_4_99:1.3.10
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_MM_adapt:1.3.9
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_11r1:1.3.6.1.1.1.1
	MLWorks_workspace_97:1.3.8
	MLWorks_dt_wizard:1.3.7
	MLWorks_11c0_1997_09_09:1.3.6.1.1.1
	MLWorks_10r3:1.3.6.1.3
	MLWorks_10r2_551:1.3.6.1.2
	MLWorks_11:1.3.6.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.6.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.6.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.6.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.6
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MM_ML_release_korma_1997_04_01:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.4.1.1
	MLWorks_gui_1996_12_18:1.3.5
	MLWorks_1_0_Win32_1996_12_17:1.3.4
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.1.1
	JFHrts:1.3.3
	MLWorks_1_0_Irix_1996_11_28:1.3.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.2
	MLWorks_1_0_Unix_1996_11_14:1.3.1
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1
	MLWorks_Beta_1996_07_02:1.1
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1
	MLWorks_Beta_1996_06_03:1.1
	MLWorks_Beta_1996_05_31:1.1
	MLWorks_Beta_1996_05_30:1.1;
locks; strict;
comment	@ * @;


1.3
date	96.10.31.12.34.49;	author nickb;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1
	1.3.9.1
	1.3.10.1;
next	1.2;

1.2
date	96.10.29.17.10.04;	author nickb;	state Exp;
branches;
next	1.1;

1.1
date	94.10.13.13.32.59;	author nickb;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	96.09.13.11.25.43;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.16.16.12;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.35.34;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	96.11.14.13.01.11;	author hope;	state Exp;
branches
	1.3.1.1.1.1;
next	;

1.3.1.1.1.1
date	96.11.28.15.11.16;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.11.22.18.19.03;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.12.17.10.05.45;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.12.17.17.57.20;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	97.02.24.11.49.03;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.12.18.09.52.01;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	97.05.12.10.47.00;	author hope;	state Exp;
branches
	1.3.6.1.1.1
	1.3.6.1.2.1
	1.3.6.1.3.1;
next	;

1.3.6.1.1.1
date	97.07.28.18.27.48;	author daveb;	state Exp;
branches
	1.3.6.1.1.1.1.1;
next	;

1.3.6.1.1.1.1.1
date	97.10.07.11.53.45;	author jkbrook;	state Exp;
branches;
next	;

1.3.6.1.2.1
date	97.09.08.17.20.51;	author daveb;	state Exp;
branches;
next	;

1.3.6.1.3.1
date	97.09.09.14.16.55;	author daveb;	state Exp;
branches;
next	;

1.3.7.1
date	97.09.10.19.35.14;	author brucem;	state Exp;
branches;
next	;

1.3.8.1
date	97.09.11.21.03.59;	author daveb;	state Exp;
branches;
next	;

1.3.9.1
date	97.10.31.13.46.59;	author nickb;	state Exp;
branches;
next	;

1.3.10.1
date	99.04.01.18.02.56;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.3
log
@Missing close comment.
@
text
@/*  ==== ARENA MANAGEMENT ====
 *
 *  Copyright (C) 1996 Harlequin Ltd
 *
 *  Description
 *  -----------
 *  This header defines values controlling the overall structure of
 *  the memory arena. It can be included by either C or asm sources,
 *  so contains no C declarations. C declarations concerned with the
 *  arena are in arena.h (which includes this header). For more
 *  information, see arena.h
 *
 *  $Id: src:OS:Irix:arenadefs.h,v 1.2 1996/10/29 17:10:04 nickb Exp $
 */

#ifndef arenadefs_h
#define arenadefs_h

/* MLWorks only works in environments where "void *" and "word" have
 * ADDRESS_WIDTH bits. This is used to define the size of tables in
 * which any address can be looked up. */

#define ADDRESS_WIDTH	32

/* The "arena" is memory between 0 and 1 << ARENA_WIDTH. All the
   managed memory lies in this range. */

#define ARENA_WIDTH	31

/* We divide the whole address space into spaces, each of size 1 <<
 * SPACE_WIDTH. We manage the arena a space at a time. */

#define SPACE_WIDTH	24	/* 128 * 16Mb spaces */

/* some spaces are further subdivided into blocks, each of size 1 <<
   BLOCK_WIDTH */

#define BLOCK_WIDTH	16	/* 64Kb blocks */

#endif
@


1.3.10.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3 1996/10/31 12:34:49 nickb Exp $
@


1.3.9.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3 1996/10/31 12:34:49 nickb Exp $
@


1.3.8.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3 1996/10/31 12:34:49 nickb Exp $
@


1.3.7.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3 1996/10/31 12:34:49 nickb Exp $
@


1.3.6.1
log
@branched from 1.3
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3 1996/10/31 12:34:49 nickb Exp $
@


1.3.6.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3.6.1 1997/05/12 10:47:00 hope Exp $
@


1.3.6.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3.6.1 1997/05/12 10:47:00 hope Exp $
@


1.3.6.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3.6.1 1997/05/12 10:47:00 hope Exp $
@


1.3.6.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3.6.1.1.1 1997/07/28 18:27:48 daveb Exp $
@


1.3.5.1
log
@branched from 1.3
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3 1996/10/31 12:34:49 nickb Exp $
@


1.3.4.1
log
@branched from 1.3
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3 1996/10/31 12:34:49 nickb Exp $
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3.4.1 1996/12/17 17:57:20 hope Exp $
@


1.3.3.1
log
@branched from 1.3
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3 1996/10/31 12:34:49 nickb Exp $
@


1.3.2.1
log
@branched from 1.3
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3 1996/10/31 12:34:49 nickb Exp $
@


1.3.1.1
log
@branched from 1.3
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3 1996/10/31 12:34:49 nickb Exp $
@


1.3.1.1.1.1
log
@branched from 1.3.1.1
@
text
@d13 1
a13 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.3.1.1 1996/11/14 13:01:11 hope Exp $
@


1.2
log
@Fix space lookup for pointers with top bit set.
@
text
@d13 2
a14 1
 *  $Id$
@


1.1
log
@new file
@
text
@d3 1
a3 1
 *  Copyright (C) 1994 Harlequin Ltd
d10 2
a11 1
 *  arena are in arena.h (which includes this header).
a13 1
 */
d18 14
a31 1
#define ADDRESS_WIDTH	31	/* 2Gb address space */
d33 4
a37 6

#define ADDRESS_TOP	((1ul << ADDRESS_WIDTH)-1)
#define SPACE_SIZE	(1 << SPACE_WIDTH)
#define NR_SPACES	(1 << (ADDRESS_WIDTH-SPACE_WIDTH))
#define BLOCK_SIZE	(1 << BLOCK_WIDTH)
#define BLOCKS_PER_SPACE (SPACE_SIZE / BLOCK_SIZE)
@


1.1.3.1
log
@branched from 1.1
@
text
@d12 1
a12 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.1 1994/10/13 13:32:59 nickb Exp $
@


1.1.2.1
log
@branched from 1.1
@
text
@d12 1
a12 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.1 1994/10/13 13:32:59 nickb Exp $
@


1.1.1.1
log
@branched from 1.1
@
text
@d12 1
a12 1
 *  $Id: src:OS:Irix:arenadefs.h,v 1.1 1994/10/13 13:32:59 nickb Exp $
@
