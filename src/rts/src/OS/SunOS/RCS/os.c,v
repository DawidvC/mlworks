head	1.11;
access;
symbols
	MLW_daveb_inline_1_4_99:1.11.5
	MLWorks_21c0_1999_03_25:1.11
	MLWorks_20c1_1998_08_20:1.11
	MLWorks_20c0_1998_08_04:1.11
	MLWorks_20b2c2_1998_06_19:1.11
	MLWorks_20b2_Windows_1998_06_12:1.11
	MLWorks_20b1c1_1998_05_07:1.11
	MLWorks_20b0_1998_04_07:1.11
	MLWorks_20b0_1998_03_20:1.11
	MLWorks_20m2_1998_02_16:1.11
	MLWorks_MM_adapt:1.11.4
	MLWorks_20m1_1997_10_23:1.11
	MLWorks_11r1:1.11.1.1.1.1.1
	MLWorks_workspace_97:1.11.3
	MLWorks_dt_wizard:1.11.2
	MLWorks_11c0_1997_09_09:1.11.1.1.1.1
	MLWorks_10r3:1.11.1.1.3
	MLWorks_10r2_551:1.11.1.1.2
	MLWorks_11:1.11.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.11.1.1
	MLWorks_20m0_1997_06_20:1.11
	MLWorks_1_0_r2c2_1997_06_14:1.11.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.11.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.11.1
	MLWorks_BugFix_1997_04_24:1.11
	MLWorks_1_0_r2_Win32_1997_04_11:1.11
	MLWorks_1_0_r2_Unix_1997_04_04:1.11
	MM_ML_release_korma_1997_04_01:1.11
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.9.4.1.1
	MLWorks_gui_1996_12_18:1.9.5
	MLWorks_1_0_Win32_1996_12_17:1.9.4
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.9.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.9.1.1
	JFHrts:1.9.3
	MLWorks_1_0_Irix_1996_11_28:1.9.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.9.2
	MLWorks_1_0_Unix_1996_11_14:1.9.1
	MLWorks_Open_Beta2_1996_10_11:1.8.3
	MLWorks_License_dev:1.8.2
	MLWorks_1_open_beta_1996_09_13:1.8.1
	MLWorks_Open_Beta_1996_08_22:1.7
	MLWorks_Beta_1996_07_02:1.7
	MLWorks_Beta_1996_06_07:1.7
	MLWorks_Beta_1996_06_06:1.7
	MLWorks_Beta_1996_06_05:1.7
	MLWorks_Beta_1996_06_03:1.7
	MLWorks_Beta_1996_05_31:1.7
	MLWorks_Beta_1996_05_30:1.7
	hope_poo:1.2.1
	ML_beta_release_12/08/94:1.2.1.1
	ML_beta_release_03/08/94:1.2;
locks; strict;
comment	@ * @;


1.11
date	97.03.25.12.40.06;	author nickb;	state Exp;
branches
	1.11.1.1
	1.11.2.1
	1.11.3.1
	1.11.4.1
	1.11.5.1;
next	1.10;

1.10
date	97.03.24.15.03.27;	author nickb;	state Exp;
branches;
next	1.9;

1.9
date	96.10.17.14.00.18;	author jont;	state Exp;
branches
	1.9.1.1
	1.9.2.1
	1.9.3.1
	1.9.4.1
	1.9.5.1;
next	1.8;

1.8
date	96.08.27.15.01.55;	author nickb;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1;
next	1.7;

1.7
date	96.05.13.08.35.34;	author stephenb;	state Exp;
branches;
next	1.6;

1.6
date	96.05.10.09.08.44;	author matthew;	state Exp;
branches;
next	1.5;

1.5
date	96.01.19.17.08.24;	author stephenb;	state Exp;
branches;
next	1.4;

1.4
date	95.04.24.12.55.52;	author nickb;	state Exp;
branches;
next	1.3;

1.3
date	94.12.09.15.47.51;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	94.06.09.14.28.33;	author nickh;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	94.06.09.10.52.56;	author nickh;	state Exp;
branches;
next	;

1.2.1.1
date	95.07.05.10.29.15;	author hope;	state Exp;
branches;
next	;

1.8.1.1
date	96.09.13.11.21.44;	author hope;	state Exp;
branches;
next	;

1.8.2.1
date	96.10.07.16.11.49;	author hope;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	96.10.15.14.42.12;	author jont;	state Exp;
branches;
next	;

1.8.3.1
date	96.10.17.11.30.31;	author hope;	state Exp;
branches;
next	;

1.9.1.1
date	96.11.14.12.56.28;	author hope;	state Exp;
branches
	1.9.1.1.1.1;
next	;

1.9.1.1.1.1
date	96.11.28.15.06.54;	author hope;	state Exp;
branches;
next	;

1.9.2.1
date	96.11.22.18.14.34;	author hope;	state Exp;
branches;
next	;

1.9.3.1
date	96.12.17.10.01.21;	author hope;	state Exp;
branches;
next	;

1.9.4.1
date	96.12.17.17.53.05;	author hope;	state Exp;
branches
	1.9.4.1.1.1;
next	;

1.9.4.1.1.1
date	97.02.24.11.43.59;	author hope;	state Exp;
branches;
next	;

1.9.5.1
date	96.12.18.09.47.39;	author hope;	state Exp;
branches;
next	;

1.11.1.1
date	97.05.12.10.40.03;	author hope;	state Exp;
branches
	1.11.1.1.1.1
	1.11.1.1.2.1
	1.11.1.1.3.1;
next	;

1.11.1.1.1.1
date	97.07.28.18.27.15;	author daveb;	state Exp;
branches
	1.11.1.1.1.1.1.1;
next	;

1.11.1.1.1.1.1.1
date	97.10.07.11.53.16;	author jkbrook;	state Exp;
branches;
next	;

1.11.1.1.2.1
date	97.09.08.17.20.19;	author daveb;	state Exp;
branches;
next	;

1.11.1.1.3.1
date	97.09.09.14.16.25;	author daveb;	state Exp;
branches;
next	;

1.11.2.1
date	97.09.10.19.34.14;	author brucem;	state Exp;
branches;
next	;

1.11.3.1
date	97.09.11.21.03.19;	author daveb;	state Exp;
branches;
next	;

1.11.4.1
date	97.10.31.13.46.11;	author nickb;	state Exp;
branches;
next	;

1.11.5.1
date	99.04.01.18.02.23;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.11
log
@Remove compilation warnings.
@
text
@/*  ==== OPERATING SYSTEM INTERFACE ====
 *
 *  Copyright (C) 1994 Harlequin Ltd
 *
 *  Revision Log
 *  ------------
 *  $Log: src:OS:SunOS:os.c,v $
 * Revision 1.10  1997/03/24  15:03:27  nickb
 * Make malloc() and realloc() edge cases match the OS libraries.
 *
 * Revision 1.9  1996/10/17  14:00:18  jont
 * Merging in license server stuff
 *
 * Revision 1.8.2.2  1996/10/15  14:42:12  jont
 * Fix problems with os_on_exit
 *
 * Revision 1.8.2.1  1996/10/07  16:11:49  hope
 * branched from 1.8
 *
 * Revision 1.8  1996/08/27  15:01:55  nickb
 * Add os_on_exit.
 *
 * Revision 1.7  1996/05/13  08:35:34  stephenb
 * Flesh out the IEEE rounding function stubs.
 *
 * Revision 1.6  1996/05/10  09:08:44  matthew
 * Adding get/set rounding mode functions
 *
 * Revision 1.5  1996/01/19  17:08:24  stephenb
 * OS reorganisation: The pervasive library no longer contains
 * OS specific stuff so there is no need to support NT on
 * UNIX platforms anymore.
 *
 * Revision 1.4  1995/04/24  12:55:52  nickb
 * Add update_windows().
 *
 * Revision 1.3  1994/12/09  15:47:51  jont
 * Add call to nt_init
 *
 * Revision 1.2  1994/06/09  14:28:33  nickh
 * new file
 *
 * Revision 1.1  1994/06/09  10:52:56  nickh
 * new file
 *
 *
 */

#include <stdio.h>
#include <assert.h>
#include <sys/ieeefp.h>

#include "syscalls.h"

#include "utils.h"
#include "alloc.h"
#include "diagnostic.h"
#include "unix.h"
#include "x.h"

#include "os.h"

extern void os_init(void)
{
  unix_init();
  x_init();
}

static void (*os_exit_fn)(void) = NULL;


static void os_exit(int status, caddr_t arg)
{
  if (os_exit_fn != NULL)
    os_exit_fn();
}

extern void os_on_exit(void (*f)(void))
{
  os_exit_fn = f;
  on_exit(os_exit,0);
}



/* On Solbournes, need a call to fsync between flushing and closing,
otherwise the wrong modification time may be obtained subsequently */

extern void os_filesync(FILE *f)
{
  fsync(fileno(f));
}



/* this gets called 'every so often'. We use it to handle expose
 * events so windows which are brought to the top don't sit there
 * un-refreshed. */

extern void os_update_windows(void)
{
  x_handle_expose_events();
}



/* The following should be declared in sys/ieeefp.h but as with most SunOS
 * header files it is not.  This could go into ansi.h but since this is
 * the only place it should ever be used it might as well go here
 */
extern int ieee_flags(char const *, char const *, char const *, char **);



/* Modes are :
  0 : to nearest
  1 : to zero
  2 : to positive infinity
  3 : to negative infinity
*/


/* A mapping from the above modes to the strings that SunOS uses to
 * represent them.  The obviously must be in the same order as the 
 * above codes.
 */
static char const *
mlw_ieeefp_int_to_str[]={ "nearest", "tozero", "positive", "negative"};




int os_get_rounding_mode (void)
{
  char * out;
  int mode= ieee_flags("get", "direction", "",  &out);
  return mode;
}



/* Note that the result if the ieee_flags is ignored because the SML
 * routine that this implements (IEEEReal.setRoundingMode) doesn't expect
 * any failure.
 */
void os_set_rounding_mode(int mode)
{
  char * out;
  assert(mode >= 0 && mode <= 3);
  (void)ieee_flags("set", "direction", mlw_ieeefp_int_to_str[mode], &out);
}

/* The behaviour of malloc(0), realloc(NULL,0) and realloc(p,0)
 * depends on the OS, because we have to maintain compatibility with
 * the OS libraries See <URI:spring://MM_InfoSys/analysis/realloc> for
 * more information. */

extern void *os_allocator(int code, void *arg)
{
  switch (code) {
  case OS_ALLOCATOR_MALLOC_ZERO:
    DIAGNOSTIC(4,"malloc(0)",0,0);
    return malloc(1);
    break;
  case OS_ALLOCATOR_REALLOC_NULL_ZERO:
    DIAGNOSTIC(4,"realloc(NULL,0)",0,0);
    return NULL;
    break;
  case OS_ALLOCATOR_REALLOC_P_ZERO:
    DIAGNOSTIC(4,"realloc(0x%08x,0)",arg,0);
    free(arg);
    return arg;
    break;
  default:
    error("Unknown code in os_allocator");
  }
  return NULL;
}

@


1.11.5.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a7 3
 * Revision 1.11  1997/03/25  12:40:06  nickb
 * Remove compilation warnings.
 *
@


1.11.4.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a7 3
 * Revision 1.11  1997/03/25  12:40:06  nickb
 * Remove compilation warnings.
 *
@


1.11.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a7 3
 * Revision 1.11  1997/03/25  12:40:06  nickb
 * Remove compilation warnings.
 *
@


1.11.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a7 3
 * Revision 1.11  1997/03/25  12:40:06  nickb
 * Remove compilation warnings.
 *
@


1.11.1.1
log
@branched from 1.11
@
text
@a7 3
 * Revision 1.11  1997/03/25  12:40:06  nickb
 * Remove compilation warnings.
 *
@


1.11.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a7 3
 * Revision 1.11.1.1  1997/05/12  10:40:03  hope
 * branched from 1.11
 *
@


1.11.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a7 3
 * Revision 1.11.1.1  1997/05/12  10:40:03  hope
 * branched from 1.11
 *
@


1.11.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a7 3
 * Revision 1.11.1.1  1997/05/12  10:40:03  hope
 * branched from 1.11
 *
@


1.11.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a7 3
 * Revision 1.11.1.1.1.1  1997/07/28  18:27:15  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.10
log
@Make malloc() and realloc() edge cases match the OS libraries.
@
text
@d8 3
d51 7
a57 1
#include "os.h"
a59 3
#include "syscalls.h"
#include "diagnostic.h"
#include <sys/ieeefp.h>
d61 1
@


1.9
log
@Merging in license server stuff
@
text
@d8 3
d52 1
d145 28
@


1.9.5.1
log
@branched from 1.9
@
text
@a7 3
 * Revision 1.9  1996/10/17  14:00:18  jont
 * Merging in license server stuff
 *
@


1.9.4.1
log
@branched from 1.9
@
text
@a7 3
 * Revision 1.9  1996/10/17  14:00:18  jont
 * Merging in license server stuff
 *
@


1.9.4.1.1.1
log
@branched from 1.9.4.1
@
text
@a7 3
 * Revision 1.9.4.1  1996/12/17  17:53:05  hope
 * branched from 1.9
 *
@


1.9.3.1
log
@branched from 1.9
@
text
@a7 3
 * Revision 1.9  1996/10/17  14:00:18  jont
 * Merging in license server stuff
 *
@


1.9.2.1
log
@branched from 1.9
@
text
@a7 3
 * Revision 1.9  1996/10/17  14:00:18  jont
 * Merging in license server stuff
 *
@


1.9.1.1
log
@branched from 1.9
@
text
@a7 3
 * Revision 1.9  1996/10/17  14:00:18  jont
 * Merging in license server stuff
 *
@


1.9.1.1.1.1
log
@branched from 1.9.1.1
@
text
@a7 3
 * Revision 1.9.1.1  1996/11/14  12:56:28  hope
 * branched from 1.9
 *
@


1.8
log
@Add os_on_exit.
@
text
@d8 9
d69 1
@


1.8.3.1
log
@branched from 1.8
@
text
@a7 3
 * Revision 1.8  1996/08/27  15:01:55  nickb
 * Add os_on_exit.
 *
@


1.8.2.1
log
@branched from 1.8
@
text
@a7 3
 * Revision 1.8  1996/08/27  15:01:55  nickb
 * Add os_on_exit.
 *
@


1.8.2.2
log
@Fix problems with os_on_exit
@
text
@a7 3
 * Revision 1.8.2.1  1996/10/07  16:11:49  hope
 * branched from 1.8
 *
a62 1
  os_exit_fn = f;
@


1.8.1.1
log
@branched from 1.8
@
text
@a7 3
 * Revision 1.8  1996/08/27  15:01:55  nickb
 * Add os_on_exit.
 *
@


1.7
log
@Flesh out the IEEE rounding function stubs.
@
text
@d8 3
d47 14
@


1.6
log
@Adding get/set rounding mode functions
@
text
@d8 3
d32 1
a32 1

d37 2
d46 2
d56 2
d67 10
d84 12
a95 1
extern int os_get_rounding_mode (void)
d97 3
a99 2
  printf ("os_get_rounding_mode unimplemented");
  return (0);
d102 7
a108 1
extern void os_set_rounding_mode (int arg)
d110 3
a112 1
  printf ("os_set_rounding_mode unimplemented");
@


1.5
log
@OS reorganisation: The pervasive library no longer contains
OS specific stuff so there is no need to support NT on
UNIX platforms anymore.
@
text
@d8 5
d56 18
@


1.4
log
@Add update_windows().
@
text
@d8 3
a26 1
#include "nt.h"
a32 1
  nt_init();
@


1.3
log
@Add call to nt_init
@
text
@d8 3
d41 9
@


1.2
log
@new file
@
text
@d8 3
d21 1
d28 1
@


1.2.1.1
log
@branched from 1.2
@
text
@a7 3
 * Revision 1.2  1994/06/09  14:28:33  nickh
 * new file
 *
@


1.1
log
@new file
@
text
@d7 4
a10 1
 *  $Log: $
@
