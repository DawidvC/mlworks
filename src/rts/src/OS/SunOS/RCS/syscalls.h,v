head	1.9;
access;
symbols
	MLW_daveb_inline_1_4_99:1.9.1
	MLWorks_21c0_1999_03_25:1.9
	MLWorks_20c1_1998_08_20:1.9
	MLWorks_20c0_1998_08_04:1.9
	MLWorks_20b2c2_1998_06_19:1.9
	MLWorks_20b2_Windows_1998_06_12:1.9
	MLWorks_20b1c1_1998_05_07:1.9
	MLWorks_20b0_1998_04_07:1.9
	MLWorks_20b0_1998_03_20:1.9
	MLWorks_20m2_1998_02_16:1.9
	MLWorks_MM_adapt:1.8.4
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.8.1.1.1.1.1
	MLWorks_workspace_97:1.8.3
	MLWorks_dt_wizard:1.8.2
	MLWorks_11c0_1997_09_09:1.8.1.1.1.1
	MLWorks_10r3:1.8.1.1.3
	MLWorks_10r2_551:1.8.1.1.2
	MLWorks_11:1.8.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.8.1.1
	MLWorks_20m0_1997_06_20:1.8
	MLWorks_1_0_r2c2_1997_06_14:1.8.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.8.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.8.1
	MLWorks_BugFix_1997_04_24:1.8
	MLWorks_1_0_r2_Win32_1997_04_11:1.8
	MLWorks_1_0_r2_Unix_1997_04_04:1.8
	MM_ML_release_korma_1997_04_01:1.8
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.4.1.1
	MLWorks_gui_1996_12_18:1.7.5
	MLWorks_1_0_Win32_1996_12_17:1.7.4
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.7.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.7.1.1
	JFHrts:1.7.3
	MLWorks_1_0_Irix_1996_11_28:1.7.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.7.2
	MLWorks_1_0_Unix_1996_11_14:1.7.1
	MLWorks_Open_Beta2_1996_10_11:1.6.3
	MLWorks_License_dev:1.6.2
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.6
	MLWorks_Beta_1996_06_07:1.6
	MLWorks_Beta_1996_06_06:1.6
	MLWorks_Beta_1996_06_05:1.6
	MLWorks_Beta_1996_06_03:1.6
	MLWorks_Beta_1996_05_31:1.6
	MLWorks_Beta_1996_05_30:1.6
	hope_poo:1.2.1
	ML_beta_release_12/08/94:1.2.1.2
	ML_beta_release_03/08/94:1.2;
locks; strict;
comment	@ * @;


1.9
date	97.11.06.11.03.32;	author johnh;	state Exp;
branches
	1.9.1.1;
next	1.8;

1.8
date	96.12.18.13.51.56;	author stephenb;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1
	1.8.4.1;
next	1.7;

1.7
date	96.10.17.14.01.09;	author jont;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1
	1.7.5.1;
next	1.6;

1.6
date	96.01.29.15.59.18;	author stephenb;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1;
next	1.5;

1.5
date	95.06.01.10.47.03;	author nickb;	state Exp;
branches;
next	1.4;

1.4
date	95.05.09.14.12.22;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	94.10.19.15.39.08;	author nickb;	state Exp;
branches;
next	1.2;

1.2
date	94.06.09.14.24.55;	author nickh;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	94.06.09.10.49.43;	author nickh;	state Exp;
branches;
next	;

1.2.1.1
date	95.07.05.10.30.35;	author hope;	state Exp;
branches;
next	1.2.1.2;

1.2.1.2
date	95.07.05.10.34.52;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.23.35;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.07.16.13.47;	author hope;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	96.10.15.14.50.54;	author jont;	state Exp;
branches;
next	;

1.6.3.1
date	96.10.17.11.33.13;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	96.11.14.12.58.57;	author hope;	state Exp;
branches
	1.7.1.1.1.1;
next	;

1.7.1.1.1.1
date	96.11.28.15.08.56;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.11.22.18.16.39;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.12.17.10.03.24;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	96.12.17.17.55.01;	author hope;	state Exp;
branches
	1.7.4.1.1.1;
next	;

1.7.4.1.1.1
date	97.02.24.11.46.09;	author hope;	state Exp;
branches;
next	;

1.7.5.1
date	96.12.18.09.49.37;	author hope;	state Exp;
branches;
next	;

1.8.1.1
date	97.05.12.10.42.02;	author hope;	state Exp;
branches
	1.8.1.1.1.1
	1.8.1.1.2.1
	1.8.1.1.3.1;
next	;

1.8.1.1.1.1
date	97.07.28.18.25.29;	author daveb;	state Exp;
branches
	1.8.1.1.1.1.1.1;
next	;

1.8.1.1.1.1.1.1
date	97.10.07.11.51.18;	author jkbrook;	state Exp;
branches;
next	;

1.8.1.1.2.1
date	97.09.08.17.18.42;	author daveb;	state Exp;
branches;
next	;

1.8.1.1.3.1
date	97.09.09.14.14.51;	author daveb;	state Exp;
branches;
next	;

1.8.2.1
date	97.09.10.19.31.35;	author brucem;	state Exp;
branches;
next	;

1.8.3.1
date	97.09.11.21.00.59;	author daveb;	state Exp;
branches;
next	;

1.8.4.1
date	97.10.31.13.44.01;	author nickb;	state Exp;
branches;
next	;

1.9.1.1
date	99.04.01.18.00.55;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.9
log
@[Bug #30125]
Correct the declaration of kill.
@
text
@/*  ==== UNIX SYSCALL DECLARATIONS HEADER ====
 *
 *  Copyright (C) 1994 Harlequin Ltd
 *
 *  Description
 *  -----------
 *  This header declares Unix system calls which are not declared in
 *  system header files. 
 *
 * $Log: src:OS:SunOS:syscalls.h,v $
 * Revision 1.8  1996/12/18  13:51:56  stephenb
 * [Bug #1758]
 * Add a prototype for gethostid since it is missing from unistd.h and
 * needed by rts/src/OS/Unix/license.c
 *
 * Revision 1.7  1996/10/17  14:01:09  jont
 * Merge in license stuff
 *
 */

#ifndef syscall_h
#define syscall_h

/* Hardly anything gets defined properly in SunOS header files */

#include <stdio.h>
#include <sys/types.h>
#include <sys/time.h>
#include <signal.h>
#include <sys/resource.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <math.h>
#include <fcntl.h>

#define EXIT_FAILURE 1
#define EXIT_SUCCESS 0

typedef signed int ssize_t;


/* files */

extern int ioctl (int fd, int request, caddr_t arg);
extern char *getwd (char *pathname);
extern char *realpath(char *path,char resolved_path[]);
extern int fsync (int fd);


/* time */

extern int gettimeofday(struct timeval *tp, struct timezone *tzp);
extern int setitimer (int which, struct itimerval *value, struct itimerval *ovalue);

/* memory */

extern int brk (caddr_t addr);
extern caddr_t sbrk (int incr);
extern int plock (int op);
extern void bcopy (char *b1, char *b2, int length);
extern int munmap (caddr_t addr, size_t len); /* mmap is in <sys/mman.h> */
extern int getpagesize (void);

/* signals */

extern int sigblock (int mask);
extern int sigvec (int sig, struct sigvec *vec, struct sigvec *ovec);
extern int sigstack (struct sigstack *ss, struct sigstack *oss);

/* processes */

extern int getpid(void);
extern int kill (pid_t pid, int signal);
extern int on_exit (void (*fun)(int status, caddr_t arg), caddr_t arg);
extern int getrusage (int who, struct rusage *rusage);
extern int fork (void);
extern int vfork (void);
extern char **environ;
extern unsigned int sleep(unsigned int);

/* uids */

extern int seteuid(int euid);


/* sockets */

extern int socket (int domain, int type, int protocol);
extern int connect (int s, struct sockaddr *name, int namelen);
extern int bind (int s, struct sockaddr *name, int namelen);
extern int getsockname (int s, struct sockaddr *name, unsigned int *namelen);
extern int getpeername (int s, struct sockaddr *name, unsigned int *namelen);
extern int listen (int s, int backlog);
extern int accept (int s, struct sockaddr *name, unsigned int *namelen);

/* passwords */

extern void setpwent(void);
extern void endpwent(void);

/* math */

/* have to give a full prototype of matherr to avoid a warning */

extern int matherr(struct exception *exn);

/* misc */

extern int gethostname (char *name, int namelen);


/* Missing from <unistd.h> */

/*
 * If the SunOS <unistd.h> had a prototype for this it would define
 * it as returning an int.  However, since it doesn't and the code
 * that uses it expects it to return a long (a la POSIX prototype)
 * we lie here and give the POSIX prototype sure in the knowledge
 * that sizeof(int) == sizeof(long) under SunOS 4.1.X.
 */
extern long gethostid(void);


#endif /* syscall_h */
@


1.9.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a10 4
 * Revision 1.9  1997/11/06  11:03:32  johnh
 * [Bug #30125]
 * Correct the declaration of kill.
 *
@


1.8
log
@[Bug #1758]
Add a prototype for gethostid since it is missing from unistd.h and
needed by rts/src/OS/Unix/license.c
@
text
@d11 5
d73 1
a73 1
extern int kill (int pid, int signal);
@


1.8.4.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a10 5
 * Revision 1.8  1996/12/18  13:51:56  stephenb
 * [Bug #1758]
 * Add a prototype for gethostid since it is missing from unistd.h and
 * needed by rts/src/OS/Unix/license.c
 *
@


1.8.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a10 5
 * Revision 1.8  1996/12/18  13:51:56  stephenb
 * [Bug #1758]
 * Add a prototype for gethostid since it is missing from unistd.h and
 * needed by rts/src/OS/Unix/license.c
 *
@


1.8.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a10 5
 * Revision 1.8  1996/12/18  13:51:56  stephenb
 * [Bug #1758]
 * Add a prototype for gethostid since it is missing from unistd.h and
 * needed by rts/src/OS/Unix/license.c
 *
@


1.8.1.1
log
@branched from 1.8
@
text
@a10 5
 * Revision 1.8  1996/12/18  13:51:56  stephenb
 * [Bug #1758]
 * Add a prototype for gethostid since it is missing from unistd.h and
 * needed by rts/src/OS/Unix/license.c
 *
@


1.8.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a10 3
 * Revision 1.8.1.1  1997/05/12  10:42:02  hope
 * branched from 1.8
 *
@


1.8.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a10 3
 * Revision 1.8.1.1  1997/05/12  10:42:02  hope
 * branched from 1.8
 *
@


1.8.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a10 3
 * Revision 1.8.1.1  1997/05/12  10:42:02  hope
 * branched from 1.8
 *
@


1.8.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a10 3
 * Revision 1.8.1.1.1.1  1997/07/28  18:25:29  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.7
log
@Merge in license stuff
@
text
@d10 4
a13 1
 * $Log$
d105 13
@


1.7.5.1
log
@branched from 1.7
@
text
@d10 1
a10 4
 * $Log: src:OS:SunOS:syscalls.h,v $
 * Revision 1.7  1996/10/17  14:01:09  jont
 * Merge in license stuff
 *
@


1.7.4.1
log
@branched from 1.7
@
text
@d10 1
a10 4
 * $Log: src:OS:SunOS:syscalls.h,v $
 * Revision 1.7  1996/10/17  14:01:09  jont
 * Merge in license stuff
 *
@


1.7.4.1.1.1
log
@branched from 1.7.4.1
@
text
@a10 3
 * Revision 1.7.4.1  1996/12/17  17:55:01  hope
 * branched from 1.7
 *
@


1.7.3.1
log
@branched from 1.7
@
text
@d10 1
a10 4
 * $Log: src:OS:SunOS:syscalls.h,v $
 * Revision 1.7  1996/10/17  14:01:09  jont
 * Merge in license stuff
 *
@


1.7.2.1
log
@branched from 1.7
@
text
@d10 1
a10 4
 * $Log: src:OS:SunOS:syscalls.h,v $
 * Revision 1.7  1996/10/17  14:01:09  jont
 * Merge in license stuff
 *
@


1.7.1.1
log
@branched from 1.7
@
text
@d10 1
a10 4
 * $Log: src:OS:SunOS:syscalls.h,v $
 * Revision 1.7  1996/10/17  14:01:09  jont
 * Merge in license stuff
 *
@


1.7.1.1.1.1
log
@branched from 1.7.1.1
@
text
@a10 3
 * Revision 1.7.1.1  1996/11/14  12:58:57  hope
 * branched from 1.7
 *
@


1.6
log
@Removed some prototypes that clash with those provided in the unistd.h
munged by gcc.  Also removed anything that was found not to be used
anywhere.
@
text
@d10 1
a10 1
 *  $Id: src:OS:SunOS:syscalls.h,v 1.5 1995/06/01 10:47:03 nickb Exp $
d71 1
@


1.6.3.1
log
@branched from 1.6
@
text
@d10 1
a10 1
 *  $Id: src:OS:SunOS:syscalls.h,v 1.6 1996/01/29 15:59:18 stephenb Exp $
@


1.6.2.1
log
@branched from 1.6
@
text
@d10 1
a10 1
 *  $Id: src:OS:SunOS:syscalls.h,v 1.6 1996/01/29 15:59:18 stephenb Exp $
@


1.6.2.2
log
@Add prototype for sleep
@
text
@d10 1
a10 1
 *  $Id: src:OS:SunOS:syscalls.h,v 1.6.2.1 1996/10/07 16:13:47 hope Exp $
a70 1
extern unsigned int sleep(unsigned int);
@


1.6.1.1
log
@branched from 1.6
@
text
@d10 1
a10 1
 *  $Id: src:OS:SunOS:syscalls.h,v 1.6 1996/01/29 15:59:18 stephenb Exp $
@


1.5
log
@Add on_exit().
@
text
@d10 1
a10 1
 *  $Id: src:OS:SunOS:syscalls.h,v 1.4 1995/05/09 14:12:22 daveb Exp $
d28 6
a35 10
#ifndef SEEK_SET
#define SEEK_SET        0       /* Set file pointer to "offset" */
#define SEEK_CUR        1       /* Set file pointer to current plus "offset" */
#define SEEK_END        2       /* Set file pointer to EOF plus "offset" */
#endif

extern int close (int fd);
extern int read (int fd, char *buf, int nbyte);
extern int write (int fd, char *buf, unsigned int nbyte);
extern int lseek (int fd, off_t offset, int whence);
d38 1
a38 4
extern char* realpath(char *path,char resolved_path[]);
extern int chdir (char *path);
extern int rmdir (char *path);
extern int unlink (char *path);
a39 1
extern int pipe (int fd[2]);
a40 9
/* GNU has its own header files, which do not use ANSI-style function
prototypes for certain functions. For mkdir this is a problem since
mode_t is a type with implicit promotion. */

#ifdef __GNUC__
extern int mkdir ();
#else
extern int mkdir (char *path, mode_t mode);
#endif
a64 1
extern int sleep(unsigned int seconds);
a65 1
extern volatile void _exit (int status);
a67 3
extern int execve (char *path, char *argv[], char *envp[]);
extern int execv (char *path, char *argv[]);
extern int execvp (char *file, char *argv[]);
d75 1
a75 1
extern int getuid(void);
d80 2
a81 2
extern int connect (int s, struct sockaddr *name, unsigned int namelen);
extern int bind (int s, struct sockaddr *name, unsigned int namelen);
a91 5
/* option parsing */

extern char *optarg;
extern int optind;

a100 1
extern char *sys_errlist [];
@


1.4
log
@Added ioctl and lseek.
@
text
@d10 1
a10 1
 *  $Id: src:OS:SunOS:syscalls.h,v 1.3 1994/10/19 15:39:08 nickb Exp $
d85 1
@


1.3
log
@Moving to GCC 2.5.8, which has a prototype for "open".
@
text
@d10 1
a10 1
 *  $Id: src:OS:SunOS:syscalls.h,v 1.2 1994/06/09 14:24:55 nickh Exp $
d30 6
d39 2
@


1.2
log
@new file
@
text
@d10 1
a10 1
 *  $Id: src:OS:SunOS:syscalls.h,v 1.1 1994/06/09 10:49:43 nickh Exp $
d26 1
a28 10

/* open has an optional argument for mode. Files which use the mode
should define OPEN_MODE_ARGUMENT before including this file. C is a
language too stupid to live */

extern int open (const char *path, int flags
#ifdef OPEN_MODE_ARGUMENT
, mode_t mode
#endif
		 );
@


1.2.1.1
log
@branched from 1.2
@
text
@d10 1
a10 1
 *  $Id: src:OS:SunOS:syscalls.h,v 1.2 1994/06/09 14:24:55 nickh Exp $
@


1.2.1.2
log
@Remove open prototype, now handled by gcc include files
@
text
@d10 1
a10 1
 *  $Id: src:OS:SunOS:syscalls.h,v 1.2.1.1 1995/07/05 10:30:35 hope Exp $
d28 10
@


1.1
log
@new file
@
text
@d10 1
a10 1
 *  $Id: syscalls.h,v 1.2 1994/02/08 18:04:34 matthew Exp $
@
