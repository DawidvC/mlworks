head	1.7;
access;
symbols
	MLW_daveb_inline_1_4_99:1.7.10
	MLWorks_21c0_1999_03_25:1.7
	MLWorks_20c1_1998_08_20:1.7
	MLWorks_20c0_1998_08_04:1.7
	MLWorks_20b2c2_1998_06_19:1.7
	MLWorks_20b2_Windows_1998_06_12:1.7
	MLWorks_20b1c1_1998_05_07:1.7
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.7
	MLWorks_MM_adapt:1.7.9
	MLWorks_20m1_1997_10_23:1.7
	MLWorks_11r1:1.7.6.1.1.1.1
	MLWorks_workspace_97:1.7.8
	MLWorks_dt_wizard:1.7.7
	MLWorks_11c0_1997_09_09:1.7.6.1.1.1
	MLWorks_10r3:1.7.6.1.3
	MLWorks_10r2_551:1.7.6.1.2
	MLWorks_11:1.7.6.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.7.6.1
	MLWorks_20m0_1997_06_20:1.7
	MLWorks_1_0_r2c2_1997_06_14:1.7.6.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.7.6.1
	MLWorks_1_0_r2c1_1997_05_12:1.7.6
	MLWorks_BugFix_1997_04_24:1.7
	MLWorks_1_0_r2_Win32_1997_04_11:1.7
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MM_ML_release_korma_1997_04_01:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.4.1.1
	MLWorks_gui_1996_12_18:1.7.5
	MLWorks_1_0_Win32_1996_12_17:1.7.4
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.7.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.7.1.1
	JFHrts:1.7.3
	MLWorks_1_0_Irix_1996_11_28:1.7.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.7.2
	MLWorks_1_0_Unix_1996_11_14:1.7.1
	MLWorks_Open_Beta2_1996_10_11:1.6.1
	MLWorks_License_dev:1.5.2
	MLWorks_1_open_beta_1996_09_13:1.5.1
	MLWorks_Open_Beta_1996_08_22:1.5
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@# @;


1.7
date	96.11.07.15.28.13;	author jont;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1
	1.7.5.1
	1.7.6.1
	1.7.7.1
	1.7.8.1
	1.7.9.1
	1.7.10.1;
next	1.6;

1.6
date	96.10.08.11.36.17;	author stephenb;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	96.08.07.10.15.53;	author stephenb;	state Exp;
branches
	1.5.1.1
	1.5.2.1;
next	1.4;

1.4
date	96.07.10.16.28.01;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	96.05.30.15.50.08;	author stephenb;	state Exp;
branches;
next	1.2;

1.2
date	96.05.24.15.56.15;	author stephenb;	state Exp;
branches;
next	1.1;

1.1
date	96.05.13.15.53.54;	author nickb;	state Exp;
branches;
next	;

1.5.1.1
date	96.09.13.11.22.21;	author hope;	state Exp;
branches;
next	;

1.5.2.1
date	96.10.07.16.12.27;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	96.10.17.11.31.27;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	96.11.14.12.57.23;	author hope;	state Exp;
branches
	1.7.1.1.1.1;
next	;

1.7.1.1.1.1
date	96.11.28.15.07.33;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.11.22.18.15.14;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.12.17.10.02.00;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	96.12.17.17.53.43;	author hope;	state Exp;
branches
	1.7.4.1.1.1;
next	;

1.7.4.1.1.1
date	97.02.24.11.44.44;	author hope;	state Exp;
branches;
next	;

1.7.5.1
date	96.12.18.09.48.18;	author hope;	state Exp;
branches;
next	;

1.7.6.1
date	97.05.12.10.40.41;	author hope;	state Exp;
branches
	1.7.6.1.1.1
	1.7.6.1.2.1
	1.7.6.1.3.1;
next	;

1.7.6.1.1.1
date	97.07.28.18.26.39;	author daveb;	state Exp;
branches
	1.7.6.1.1.1.1.1;
next	;

1.7.6.1.1.1.1.1
date	97.10.07.11.52.29;	author jkbrook;	state Exp;
branches;
next	;

1.7.6.1.2.1
date	97.09.08.17.19.47;	author daveb;	state Exp;
branches;
next	;

1.7.6.1.3.1
date	97.09.09.14.15.54;	author daveb;	state Exp;
branches;
next	;

1.7.7.1
date	97.09.10.19.33.12;	author brucem;	state Exp;
branches;
next	;

1.7.8.1
date	97.09.11.21.02.26;	author daveb;	state Exp;
branches;
next	;

1.7.9.1
date	97.10.31.13.45.16;	author nickb;	state Exp;
branches;
next	;

1.7.10.1
date	99.04.01.18.01.51;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
General Unix make file.
@


1.7
log
@[Bug #1740]
[Bug #1740]
Make reference to app-defaults relative to source tree rather than
to ~sml
@
text
@# Unix-specific GNU make file. Holds all Unix-specific build
# information. For instance, using GCC.

# $Log$

GCCOPTS         = -O -ansi \
                  -Wall \
		  -Wpointer-arith \
		  -Wwrite-strings \
                  -Winline \
		  -Waggregate-return \
		  -Wmissing-prototypes \
		  -Wnested-externs

# cannot use -Wcast-align, as we regularly do things which it will warn
# 	e.g. mlval foo = f();
#            mlval bar = *(mlval *)(foo - THE_TAG_WHICH_I_KNOW)
#
# cannot use -Wcast-qual, as the prototype for XtOpenDisplay()
# does not use (const char *) arguments.
#
# cannot use -Wshadow, as we don't have a naming scheme that enforces
# it (e.g. ml_string is a function, as is exn_name, ...).
#
# cannot use -Wstrict-prototypes, because it complains (for no good
# reason) about signal-handling code like:
#
#		sv.sv_handler = SIG_IGN;
#
# cannot use -Wredundant-decls, because the Gcc-installed include
# files break this rule all the time (e.g. sys/signal.h declares
# "void (*signal())()" twice!)
#
# cannot use -Wconversion, as we frequently do use prototypes to
# force argument types, e.g. arena.c:
# 
#	extern byte *block_alloc(byte type,size_t size);
#
#       arena_init(/* ... */)
#       { /* ... */
#	  block_alloc( (byte)0, foo);
#
# Here the first argument would be converted to int if it were not for
# the prototype. On SPARC and MIPS, GCC 2.5.8 does not complain because
# ints and chars (bytes) are passed the same way so the compiler does
# not warn (and we can use -Wconversion; see the platform-specific make
# file).  However, gcc-2.7.2 warns on SPARC, MIPS and i386 so -Wconversion
# cannot be used at all any more.

DEFINEOPTS = $(DEFINES:%=-D%)

DEFINEDEBUGOPTS = $(DEFINESDEBUG:%=-D%)

INCLUDEDIRS	:= $(INCLUDEDIRS) ../app-defaults
INCLUDES = $(INCLUDEDIRS:%=-I%)

GCCOPTSDEBUG     = $(GCCOPTS) -g

GCCFLAGS      = $(DEFINEOPTS) $(INCLUDES) $(GCCOPTS) $(TARGETOPTS)
GCCFLAGSDEBUG = $(DEFINEOPTS) $(DEFINEDEBUGOPTS) $(INCLUDES) $(GCCOPTSDEBUG) $(TARGETOPTSDEBUG)
GCC	    = gcc

# Use GCC for: compiling, assembling, linking, and generating dependencies.

COMPILE		= $(GCC)
COMPILEFLAGS	= $(GCCFLAGS) -c -o 
COMPILEFLAGSDEBUG = $(GCCFLAGSDEBUG) -c -o 

ASM	       = $(GCC)
ASMFLAGS       = $(GCCFLAGS) -c -o 
ASMFLAGSDEBUG  = $(GCCFLAGSDEBUG) -c -o 

LINK            = $(GCC)
LINKFLAGS       = $(GCCFLAGS) -B/bin/ -o 
LINKFLAGSDEBUG  = $(GCCFLAGSDEBUG) -B/bin/ -o 

LINKENDFLAGS       = 
LINKENDFLAGSDEBUG  = 

DEPENDGEN          = $(GCC)
DEPENDGENFLAGS     = $(GCCFLAGS) -MM


#
# ERRNO_HEADER is the name of the file that contains all the error
# number #defines.  On most machines it is in /usr/include/sys/errno.h
# and so that is the default that is used if ERRNO_HEADER is not overriden
# in the OS/ARCH specific GNUmake (see rts/src/OS/Linux/arch/I386/GNUmake
# for an example of this being overriden).
#
ifeq (,$(ERRNO_HEADER))
  ERRNO_HEADER = /usr/include/sys/errno.h
endif



# Since this file is included by ../../../GNUmakefile before the "all" 
# target is defined, any system specific rules will be hit instead of
# all if no specific target is requested.  The following ensures that
# the default "all" rule is hit instead.

unixall: all



gen/$(ARCH)/$(OS)/os_errors.c: awk/unix_os_errors_c.awk
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) gen/$(ARCH)/$(OS) $(MKDIREND)
	@@$(AWK) -f awk/unix_os_errors_c.awk < $(ERRNO_HEADER) > $@@
@


1.7.10.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@d4 1
a4 7
# $Log: src:OS:Unix:GNUmake,v $
# Revision 1.7  1996/11/07  15:28:13  jont
# [Bug #1740]
# [Bug #1740]
# Make reference to app-defaults relative to source tree rather than
# to ~sml
#
@


1.7.9.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@d4 1
a4 7
# $Log: src:OS:Unix:GNUmake,v $
# Revision 1.7  1996/11/07  15:28:13  jont
# [Bug #1740]
# [Bug #1740]
# Make reference to app-defaults relative to source tree rather than
# to ~sml
#
@


1.7.8.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@d4 1
a4 7
# $Log: src:OS:Unix:GNUmake,v $
# Revision 1.7  1996/11/07  15:28:13  jont
# [Bug #1740]
# [Bug #1740]
# Make reference to app-defaults relative to source tree rather than
# to ~sml
#
@


1.7.7.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@d4 1
a4 7
# $Log: src:OS:Unix:GNUmake,v $
# Revision 1.7  1996/11/07  15:28:13  jont
# [Bug #1740]
# [Bug #1740]
# Make reference to app-defaults relative to source tree rather than
# to ~sml
#
@


1.7.6.1
log
@branched from 1.7
@
text
@d4 1
a4 7
# $Log: src:OS:Unix:GNUmake,v $
# Revision 1.7  1996/11/07  15:28:13  jont
# [Bug #1740]
# [Bug #1740]
# Make reference to app-defaults relative to source tree rather than
# to ~sml
#
@


1.7.6.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a4 3
# Revision 1.7.6.1  1997/05/12  10:40:41  hope
# branched from 1.7
#
@


1.7.6.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a4 3
# Revision 1.7.6.1  1997/05/12  10:40:41  hope
# branched from 1.7
#
@


1.7.6.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a4 3
# Revision 1.7.6.1  1997/05/12  10:40:41  hope
# branched from 1.7
#
@


1.7.6.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a4 3
# Revision 1.7.6.1.1.1  1997/07/28  18:26:39  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.7.5.1
log
@branched from 1.7
@
text
@d4 1
a4 7
# $Log: src:OS:Unix:GNUmake,v $
# Revision 1.7  1996/11/07  15:28:13  jont
# [Bug #1740]
# [Bug #1740]
# Make reference to app-defaults relative to source tree rather than
# to ~sml
#
@


1.7.4.1
log
@branched from 1.7
@
text
@d4 1
a4 7
# $Log: src:OS:Unix:GNUmake,v $
# Revision 1.7  1996/11/07  15:28:13  jont
# [Bug #1740]
# [Bug #1740]
# Make reference to app-defaults relative to source tree rather than
# to ~sml
#
@


1.7.4.1.1.1
log
@branched from 1.7.4.1
@
text
@a4 3
# Revision 1.7.4.1  1996/12/17  17:53:43  hope
# branched from 1.7
#
@


1.7.3.1
log
@branched from 1.7
@
text
@d4 1
a4 7
# $Log: src:OS:Unix:GNUmake,v $
# Revision 1.7  1996/11/07  15:28:13  jont
# [Bug #1740]
# [Bug #1740]
# Make reference to app-defaults relative to source tree rather than
# to ~sml
#
@


1.7.2.1
log
@branched from 1.7
@
text
@d4 1
a4 7
# $Log: src:OS:Unix:GNUmake,v $
# Revision 1.7  1996/11/07  15:28:13  jont
# [Bug #1740]
# [Bug #1740]
# Make reference to app-defaults relative to source tree rather than
# to ~sml
#
@


1.7.1.1
log
@branched from 1.7
@
text
@d4 1
a4 7
# $Log: src:OS:Unix:GNUmake,v $
# Revision 1.7  1996/11/07  15:28:13  jont
# [Bug #1740]
# [Bug #1740]
# Make reference to app-defaults relative to source tree rather than
# to ~sml
#
@


1.7.1.1.1.1
log
@branched from 1.7.1.1
@
text
@a4 3
# Revision 1.7.1.1  1996/11/14  12:57:23  hope
# branched from 1.7
#
@


1.6
log
@[Bug #1559]
The filename from which to generate os_errors.c is no longer hard
coded to be /usr/include/sys/errno.h.  Instead ERRNO_HEADER defaults
to /usr/include/sys/errno.h if ERRNO_HEADER is not defined in the
more specific OS/ARCH GNUmake (as it now is for Linux).
@
text
@d4 1
a4 1
# $Id: src:OS:Unix:GNUmake,v 1.5 1996/08/07 10:15:53 stephenb Exp $
d54 1
a54 1
INCLUDEDIRS	:= $(INCLUDEDIRS) /u/sml/MLW/src/app-defaults
@


1.6.1.1
log
@branched from 1.6
@
text
@d4 1
a4 1
# $Id: src:OS:Unix:GNUmake,v 1.6 1996/10/08 11:36:17 stephenb Exp $
@


1.5
log
@Update comment about -Wconversion in light of differences between
gcc-2.5.8 and gcc-2.7.2.
@
text
@d4 1
a4 1
# $Id: src:OS:Unix:GNUmake,v 1.4 1996/07/10 16:28:01 jont Exp $
d84 13
d109 1
a109 1
	@@$(AWK) -f awk/unix_os_errors_c.awk < /usr/include/sys/errno.h > $@@
@


1.5.2.1
log
@branched from 1.5
@
text
@d4 1
a4 1
# $Id: src:OS:Unix:GNUmake,v 1.5 1996/08/07 10:15:53 stephenb Exp $
@


1.5.1.1
log
@branched from 1.5
@
text
@d4 1
a4 1
# $Id: src:OS:Unix:GNUmake,v 1.5 1996/08/07 10:15:53 stephenb Exp $
@


1.4
log
@Modify the way the icon is picked up to get around motif 2 problems on linux
@
text
@d4 1
a4 1
# $Id: src:OS:Unix:GNUmake,v 1.3 1996/05/30 15:50:08 stephenb Exp $
d44 5
a48 4
# the prototype. On SPARC and MIPS, GCC does not complain because ints
# and chars (bytes) are passed the same way so the compiler does not
# warn (and we can use -Wconversion; see the platform-specific make
# file).
@


1.3
log
@Make sure that the default is to run all and not any system
specific rules defined in the Unix/OS makefiles.
@
text
@d4 1
a4 1
# $Id: src:OS:Unix:GNUmake,v 1.2 1996/05/24 15:56:15 stephenb Exp $
d53 1
@


1.2
log
@Add rule to generate os_errors.c
@
text
@d4 1
a4 1
# $Id: src:OS:Unix:GNUmake,v 1.1 1996/05/13 15:53:54 nickb Exp $
d80 8
@


1.1
log
@new unit
General Unix make file.
@
text
@d4 1
a4 1
# $Id$
d80 7
@
