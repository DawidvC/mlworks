head	1.8;
access;
symbols
	MLW_daveb_inline_1_4_99:1.8.4
	MLWorks_21c0_1999_03_25:1.8
	MLWorks_20c1_1998_08_20:1.8
	MLWorks_20c0_1998_08_04:1.8
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.8
	MLWorks_20b1c1_1998_05_07:1.8
	MLWorks_20b0_1998_04_07:1.8
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_MM_adapt:1.8.3
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.6.9.1.1.1.1
	MLWorks_workspace_97:1.8.2
	MLWorks_dt_wizard:1.8.1
	MLWorks_11c0_1997_09_09:1.6.9.1.1.1
	MLWorks_10r3:1.6.9.1.3
	MLWorks_10r2_551:1.6.9.1.2
	MLWorks_11:1.6.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.9.1
	MLWorks_20m0_1997_06_20:1.8
	MLWorks_1_0_r2c2_1997_06_14:1.6.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.9
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MM_ML_release_korma_1997_04_01:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.6.7.1.1
	MLWorks_gui_1996_12_18:1.6.8
	MLWorks_1_0_Win32_1996_12_17:1.6.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.6.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.6.4.1
	JFHrts:1.6.6
	MLWorks_1_0_Irix_1996_11_28:1.6.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.6.5
	MLWorks_1_0_Unix_1996_11_14:1.6.4
	MLWorks_Open_Beta2_1996_10_11:1.6.3
	MLWorks_License_dev:1.6.2
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.6
	MLWorks_Beta_1996_06_07:1.6
	MLWorks_Beta_1996_06_06:1.6
	MLWorks_Beta_1996_06_05:1.6
	MLWorks_Beta_1996_06_03:1.6
	MLWorks_Beta_1996_05_31:1.6
	MLWorks_Beta_1996_05_30:1.6;
locks; strict;
comment	@ * @;


1.8
date	97.06.03.09.24.41;	author jont;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1
	1.8.4.1;
next	1.7;

1.7
date	97.05.30.12.11.48;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	95.09.01.13.58.12;	author nickb;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1
	1.6.4.1
	1.6.5.1
	1.6.6.1
	1.6.7.1
	1.6.8.1
	1.6.9.1;
next	1.5;

1.5
date	95.08.31.13.44.33;	author nickb;	state Exp;
branches;
next	1.4;

1.4
date	94.12.08.13.47.20;	author matthew;	state Exp;
branches;
next	1.3;

1.3
date	94.10.19.17.52.51;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	94.10.10.15.57.30;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	94.10.04.16.52.52;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.25.29;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.07.16.15.53;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.10.17.11.35.19;	author hope;	state Exp;
branches;
next	;

1.6.4.1
date	96.11.14.13.00.58;	author hope;	state Exp;
branches
	1.6.4.1.1.1;
next	;

1.6.4.1.1.1
date	96.11.28.15.11.01;	author hope;	state Exp;
branches;
next	;

1.6.5.1
date	96.11.22.18.18.49;	author hope;	state Exp;
branches;
next	;

1.6.6.1
date	96.12.17.10.05.31;	author hope;	state Exp;
branches;
next	;

1.6.7.1
date	96.12.17.17.57.06;	author hope;	state Exp;
branches
	1.6.7.1.1.1;
next	;

1.6.7.1.1.1
date	97.02.24.11.48.46;	author hope;	state Exp;
branches;
next	;

1.6.8.1
date	96.12.18.09.51.45;	author hope;	state Exp;
branches;
next	;

1.6.9.1
date	97.05.12.10.45.28;	author hope;	state Exp;
branches
	1.6.9.1.1.1
	1.6.9.1.2.1
	1.6.9.1.3.1;
next	;

1.6.9.1.1.1
date	97.07.28.18.25.03;	author daveb;	state Exp;
branches
	1.6.9.1.1.1.1.1;
next	;

1.6.9.1.1.1.1.1
date	97.10.07.11.50.54;	author jkbrook;	state Exp;
branches;
next	;

1.6.9.1.2.1
date	97.09.08.17.18.16;	author daveb;	state Exp;
branches;
next	;

1.6.9.1.3.1
date	97.09.09.14.14.28;	author daveb;	state Exp;
branches;
next	;

1.8.1.1
date	97.09.10.19.30.50;	author brucem;	state Exp;
branches;
next	;

1.8.2.1
date	97.09.11.21.00.25;	author daveb;	state Exp;
branches;
next	;

1.8.3.1
date	97.10.31.13.43.33;	author nickb;	state Exp;
branches;
next	;

1.8.4.1
date	99.04.01.18.00.36;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.8
log
@[Bug #30076]
[Bug #30076]
Modifications to allow 3 bites of information for nmber of stack arguments
@
text
@/*
 * ==== Architecture dependent ML VALUE TOOLS ====
 *		I386
 *
 * Copyright (C) 1994 Harlequin Ltd.
 *
 * Description
 * -----------
 * These macros are used by other I386 assembly language routines in
 * the ML to C interface and the C language routines for loading.
 * They deal with code vectors.
 *
 * $Log: src:arch:I386:mach_values.h,v $
 * Revision 1.7  1997/05/30  12:11:48  jont
 * [Bug #30076]
 * Modifications to allow stack based parameter passing on the I386
 *
 * Revision 1.6  1995/09/01  13:58:12  nickb
 * Add CCODE_UNIT_SIZE
 *
 * Revision 1.5  1995/08/31  13:44:33  nickb
 * Add INTERCEPT_LENGTH.
 *
 * Revision 1.4  1994/12/08  13:47:20  matthew
 * Added REVERSE_REAL_BYTES flag to control real to bytestring conversion
 *
 * Revision 1.3  1994/10/19  17:52:51  jont
 * Fix problems with too many code vectors
 *
 * Revision 1.2  1994/10/10  15:57:30  jont
 * Sort out interception bits etc
 *
 * Revision 1.1  1994/10/04  16:52:52  jont
 * new file
 *
 */

#ifndef mach_values_h
#define mach_values_h

/* If defined, reverse real bytes when converting from real to byte string */
#define REVERSE_REAL_BYTES

#define CCODE_NONGC_BITS	8
#define CCODE_SAVES_BITS	2
#define CCODE_NUMBER_BITS	10
#define CCODE_ARGS_BITS         3

/* The next few macros calculate the sizes and offsets of the other
fields; they're used in other macros in this file but shouldn't be
used directly.
 */

#define CCODE_INTERCEPT_BITS	(31 - CCODE_NONGC_BITS - CCODE_ARGS_BITS - CCODE_SAVES_BITS - CCODE_NUMBER_BITS)
#define CCODE_LEAF_BIT		(31 - CCODE_NONGC_BITS - CCODE_ARGS_BITS - CCODE_SAVES_BITS)
#define CCODE_NONGC_SHIFT	(32 - CCODE_NONGC_BITS)
#define CCODE_SAVES_SHIFT	(32 - CCODE_NONGC_BITS - CCODE_ARGS_BITS - CCODE_SAVES_BITS)
#define CCODE_INTERCEPT_SHIFT	CCODE_NUMBER_BITS
#define CCODE_INTERCEPT_MASK	((1 << CCODE_INTERCEPT_BITS)-1)
#define CCODE_ARGS_SHIFT	(32-CCODE_NONGC_BITS-CCODE_ARGS_BITS)

/* Now we get on to macros used out there in the runtime system:

CCODE_MAX_<field> is the maximum valid number in a field.
CCODE_NO_INTERCEPT is the value placed in the 'intercept' field of a
code item not compiled for tracing or call-counting.
*/

#define CCODE_MAX_NUMBER	((1 << CCODE_NUMBER_BITS)-1)
#define CCODE_MAX_SAVES		((1 << CCODE_SAVES_BITS)-1)
#define CCODE_MAX_NONGC		((1 << CCODE_NONGC_BITS)-1)
#define CCODE_MAX_ARGS		((1 << CCODE_ARGS_BITS)-1)
#define CCODE_MAX_INTERCEPT	(CCODE_INTERCEPT_MASK -1)
#define CCODE_NO_INTERCEPT	CCODE_INTERCEPT_MASK

#define change_code_endian	0

#define INTERCEPT_LENGTH	I386_INTERCEPT_LENGTH

#define CCODE_UNIT_SIZE		1

#endif
@


1.8.4.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a13 5
 * Revision 1.8  1997/06/03  09:24:41  jont
 * [Bug #30076]
 * [Bug #30076]
 * Modifications to allow 3 bites of information for nmber of stack arguments
 *
@


1.8.3.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a13 5
 * Revision 1.8  1997/06/03  09:24:41  jont
 * [Bug #30076]
 * [Bug #30076]
 * Modifications to allow 3 bites of information for nmber of stack arguments
 *
@


1.8.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a13 5
 * Revision 1.8  1997/06/03  09:24:41  jont
 * [Bug #30076]
 * [Bug #30076]
 * Modifications to allow 3 bites of information for nmber of stack arguments
 *
@


1.8.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a13 5
 * Revision 1.8  1997/06/03  09:24:41  jont
 * [Bug #30076]
 * [Bug #30076]
 * Modifications to allow 3 bites of information for nmber of stack arguments
 *
@


1.7
log
@[Bug #30076]
Modifications to allow stack based parameter passing on the I386
@
text
@d14 4
d44 1
a44 1
#define CCODE_NONGC_BITS	11
d47 1
a47 1
#define CCODE_ARGS_BITS         0
@


1.6
log
@Add CCODE_UNIT_SIZE
@
text
@d14 3
d40 1
a40 1
#define CCODE_SPILLS_BITS	11
d43 1
d50 4
a53 4
#define CCODE_INTERCEPT_BITS	(31 - CCODE_SPILLS_BITS - CCODE_SAVES_BITS - CCODE_NUMBER_BITS)
#define CCODE_LEAF_BIT		(31 - CCODE_SPILLS_BITS - CCODE_SAVES_BITS)
#define CCODE_SPILLS_SHIFT	(32 - CCODE_SPILLS_BITS)
#define CCODE_SAVES_SHIFT	(32 - CCODE_SPILLS_BITS - CCODE_SAVES_BITS)
d56 1
d67 2
a68 1
#define CCODE_MAX_SPILL		((1 << CCODE_SPILLS_BITS)-1)
@


1.6.9.1
log
@branched from 1.6
@
text
@a13 3
 * Revision 1.6  1995/09/01  13:58:12  nickb
 * Add CCODE_UNIT_SIZE
 *
@


1.6.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a13 3
 * Revision 1.6.9.1  1997/05/12  10:45:28  hope
 * branched from 1.6
 *
@


1.6.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a13 3
 * Revision 1.6.9.1  1997/05/12  10:45:28  hope
 * branched from 1.6
 *
@


1.6.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a13 3
 * Revision 1.6.9.1  1997/05/12  10:45:28  hope
 * branched from 1.6
 *
@


1.6.9.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a13 3
 * Revision 1.6.9.1.1.1  1997/07/28  18:25:03  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.6.8.1
log
@branched from 1.6
@
text
@a13 3
 * Revision 1.6  1995/09/01  13:58:12  nickb
 * Add CCODE_UNIT_SIZE
 *
@


1.6.7.1
log
@branched from 1.6
@
text
@a13 3
 * Revision 1.6  1995/09/01  13:58:12  nickb
 * Add CCODE_UNIT_SIZE
 *
@


1.6.7.1.1.1
log
@branched from 1.6.7.1
@
text
@a13 3
 * Revision 1.6.7.1  1996/12/17  17:57:06  hope
 * branched from 1.6
 *
@


1.6.6.1
log
@branched from 1.6
@
text
@a13 3
 * Revision 1.6  1995/09/01  13:58:12  nickb
 * Add CCODE_UNIT_SIZE
 *
@


1.6.5.1
log
@branched from 1.6
@
text
@a13 3
 * Revision 1.6  1995/09/01  13:58:12  nickb
 * Add CCODE_UNIT_SIZE
 *
@


1.6.4.1
log
@branched from 1.6
@
text
@a13 3
 * Revision 1.6  1995/09/01  13:58:12  nickb
 * Add CCODE_UNIT_SIZE
 *
@


1.6.4.1.1.1
log
@branched from 1.6.4.1
@
text
@a13 3
 * Revision 1.6.4.1  1996/11/14  13:00:58  hope
 * branched from 1.6
 *
@


1.6.3.1
log
@branched from 1.6
@
text
@a13 3
 * Revision 1.6  1995/09/01  13:58:12  nickb
 * Add CCODE_UNIT_SIZE
 *
@


1.6.2.1
log
@branched from 1.6
@
text
@a13 3
 * Revision 1.6  1995/09/01  13:58:12  nickb
 * Add CCODE_UNIT_SIZE
 *
@


1.6.1.1
log
@branched from 1.6
@
text
@a13 3
 * Revision 1.6  1995/09/01  13:58:12  nickb
 * Add CCODE_UNIT_SIZE
 *
@


1.5
log
@Add INTERCEPT_LENGTH.
@
text
@d14 3
d69 2
@


1.4
log
@Added REVERSE_REAL_BYTES flag to control real to bytestring conversion
@
text
@d14 3
d64 2
@


1.3
log
@Fix problems with too many code vectors
@
text
@d14 3
d27 3
@


1.2
log
@Sort out interception bits etc
@
text
@d14 3
d27 1
a27 1
#define CCODE_NUMBER_BITS	8
@


1.1
log
@new file
@
text
@d3 1
a3 1
 *		SPARC
d9 1
a9 1
 * These macros are used by other SPARC assembly language routines in
d13 2
a14 5
 * $Log: src:arch:SPARC:mach_values.h,v $
 * Revision 1.2  1994/08/25  10:08:29  matthew
 * Increase CCODE_NUMBER_BITS to 10
 *
 * Revision 1.1  1994/07/25  15:58:03  jont
d22 3
a24 3
#define CCODE_SPILLS_BITS	16
#define CCODE_SAVES_BITS	0
#define CCODE_NUMBER_BITS	10
@
