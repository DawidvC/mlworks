head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	95.05.03.09.51.09;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	95.03.30.13.57.53;	author nickb;	state Exp;
branches;
next	;


desc
@new unit
Offsets in the thread state structure, for use in asm.
@


1.2
log
@Removing debugger implicit vector entries
@
text
@/* 
 * rts/src/arch/$ARCH/asm_offsets.h
 *
 * Copyright (c) 1995 Harlequin Ltd.
 *
 * This file defines offsets within the thread_state and global_state
 * structs for use from asm files. It was originally generated
 * automatically, but is now maintained by hand.
 *
 * $Log: src:arch:MIPS:asm_offsets.h,v $
 * Revision 1.1  1995/03/30  13:57:53  nickb
 * new unit
 * Offsets in the thread state structure, for use in asm.
 *
 * 
 */

/* many of these offsets are not needed, or are the same as those in
 * rts/gen/offsets.h, but are included here in comments for
 * completeness:

 * in offsets.h:

#define THREAD_implicit_gc_modified_list	  0
#define THREAD_implicit_gc			  4
#define THREAD_implicit_gc_leaf			  8
#define THREAD_implicit_external		 12
#define THREAD_implicit_extend			 16
#define THREAD_implicit_raise			 20
#define THREAD_implicit_ml_raise_leaf		 24
#define THREAD_implicit_replace			 28
#define THREAD_implicit_replace_leaf		 32
#define THREAD_implicit_intercept		 36
#define THREAD_implicit_intercept_leaf		 40
#define THREAD_implicit_interrupt		 44
#define THREAD_implicit_event_check		 48
#define THREAD_implicit_event_check_leaf	 52
#define THREAD_implicit_gc_base			 56
#define THREAD_implicit_gc_limit		 60
#define THREAD_implicit_handler			 64
#define THREAD_implicit_stack_limit		 68

 * Then some which are only used in C:

#define THREAD_roots				188
#define THREAD_declared				204
#define THREAD_locals				220

The rest are going to be used from asm:

*/

/* note that the c_state contains doubles, so (1) it must have an
   aligned base offset, (2) the doubles within it must have an aligned
   base offset, (3) it must be aligned in length. This can introduce
   up to 3 words of padding. (actually it introduces 2, because
   condition (1) is naturally satisfied for the current thread state
   structure). */

#define THREAD_c_callee_saves			 72
#define THREAD_c_float_saves			112
#define THREAD_c_pc				160
#define THREAD_c_stack				164
#define THREAD_c_sp				168

#define THREAD_ml_global			176
#define THREAD_ml_sp				180
#define THREAD_ml_stack_top			184

#define THREAD_global				252

/* Global state offsets : */

#define GLOBAL_in_ML				  0
#define GLOBAL_current_thread			  4
#define GLOBAL_toplevel_thread			  8
@


1.1
log
@new unit
Offsets in the thread state structure, for use in asm.
@
text
@d10 5
a14 1
 * $Log$
a41 4
#define THREAD_implicit_breakpoint_fn		 72
#define THREAD_implicit_stepper_fn		 76
#define THREAD_implicit_exit_breakpoint_fn	 80
#define THREAD_implicit_stepper_handler_fn	 84
d45 3
a47 3
#define THREAD_roots				204
#define THREAD_declared				220
#define THREAD_locals				236
d60 9
a68 9
#define THREAD_c_callee_saves			 88
#define THREAD_c_float_saves			128
#define THREAD_c_pc				176
#define THREAD_c_stack				180
#define THREAD_c_sp				184

#define THREAD_ml_global			192
#define THREAD_ml_sp				196
#define THREAD_ml_stack_top			200
d70 1
a70 1
#define THREAD_global				268
@
