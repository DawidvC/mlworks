head	1.9;
access;
symbols
	Final_version_of_old_runtime:1.9
	ML_revised_beta_release_25/05/94:1.9
	ML_final_beta_release_02/03/94:1.9
	mlworks-28-01-1994:1.9
	Release:1.8
	mlworks-beta-01-09-1993:1.8
	MLWorks-1-0-3-21/12/1992:1.6
	MLWorks-1-0-2-15/12/1992:1.6
	MLWorks-1-0-1-04/12/1992:1.6
	checkpoint_17_08_92:1.5;
locks; strict;
comment	@ *  @;


1.9
date	93.11.05.15.09.58;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	93.04.21.14.16.12;	author jont;	state Exp;
branches
	1.8.1.1;
next	1.7;

1.7
date	93.04.14.13.24.03;	author richard;	state Exp;
branches;
next	1.6;

1.6
date	92.11.11.11.38.07;	author clive;	state Exp;
branches;
next	1.5;

1.5
date	92.07.10.14.19.27;	author richard;	state Exp;
branches;
next	1.4;

1.4
date	92.07.03.09.20.43;	author richard;	state Exp;
branches;
next	1.3;

1.3
date	92.01.20.13.51.38;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	92.01.08.09.30.32;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	91.10.24.16.11.49;	author davidt;	state Exp;
branches;
next	;

1.8.1.1
date	93.04.21.14.16.12;	author jont;	state Exp;
branches;
next	;


desc
@The `implicit' vector.
@


1.9
log
@Added check_event entries for leaf and non-leaf.
@
text
@/*  ==== THE IMPLICIT VECTOR ====
 *
 *  Copyright (C) 1991 Harlequin Ltd
 *
 *  Description
 *  -----------
 *  The `implicit vector' is an extension to the global ML state which
 *  contains various values which ML needs to access fairly quickly.
 *
 *  IMPORTANT
 *  ---------
 *  This file is scanned automatically by implicit.awk and __implicit.awk to
 *  produce ML sources.
 *
 *  Revision Log
 *  ------------
 *  $Log: implicit.h,v $
 *  Revision 1.8  1993/04/21  14:16:12  jont
 *  Added leaf raise code
 *
 *  Revision 1.7  1993/04/14  13:24:03  richard
 *  Removed old junk.  Added entries for new tracing mechanism.
 *  (See sparc/interface.m4s.)
 *
 *  Revision 1.6  1992/11/11  11:38:07  clive
 *  Added the trace_hook
 *
 *  Revision 1.5  1992/07/10  14:19:27  richard
 *  Removed redundent memory_profiler entry.
 *
 *  Revision 1.4  1992/07/03  09:20:43  richard
 *  The implicit vector is now a struct, since it contains
 *  various things of various types.
 *
 *  Revision 1.3  1992/01/20  13:51:38  richard
 *  Added MODIFIED_REF_LINK.
 *
 *  Revision 1.2  1992/01/08  09:30:32  richard
 *  Tidied up the documentation and altered the declaration to make the
 *  machine scanning safer.
 *
 *  Revision 1.1  1991/10/24  16:11:49  davidt
 *  Initial revision
 */

#ifndef implicit_h
#define implicit_h

#include "types.h"
#include "mltypes.h"


/* The following declaration is scanned automatically by implicit.awk and */
/* __implicit.awk.  Each element of the struct must be one word in size. */

extern struct implicit_vector
{
  /* ref_chain              */  union ml_array_header *gc_modified_list;
  /* gc                     */  void (*gc)(void);
  /* gc_leaf                */  void (*gc_leaf)(void);
  /* external               */  void (*external)(void);
  /* extend                 */  void (*extend)(void);
  /* raise_code             */  void (*raise)(void);
  /* leaf_raise_code        */  void (*ml_raise_leaf)(void);
  /* replace		    */  void (*replace)(void);
  /* replace_leaf	    */  void (*replace_leaf)(void);
  /* intercept              */  void (*intercept)(void);
  /* intercept_leaf         */  void (*intercept_leaf)(void);
  /* interrupt              */  word interrupt;
  /* event_check	    */  void (*event_check) (void);
  /* event_check_leaf	    */  void (*event_check_leaf) (void);
} implicit_vector;


#endif
@


1.8
log
@Added leaf raise code
@
text
@d18 3
d70 2
@


1.8.1.1
log
@Fork for bug fixing
@
text
@a17 3
 *  Revision 1.8  1993/04/21  14:16:12  jont
 *  Added leaf raise code
 *
@


1.7
log
@Removed old junk.  Added entries for new tracing mechanism.
(See sparc/interface.m4s.)
@
text
@d18 4
d61 1
@


1.6
log
@Added the trace_hook
@
text
@d18 3
d52 9
a60 8
  /* gc                     */  void (*ml_gc)(void);
  /* external               */  void (*ml_external)(void);
  /* trace                  */  void (*ml_trace)(void);
  /* extend                 */  void (*ml_extend)(void);
  /* raise_code             */  void (*ml_raise)(void);
  /* profiler               */  void (*ml_profile)(void);
  /* interrupt_exception    */  mlval interrupt_exception;
  /* gc_leaf                */  void (*ml_gc_leaf)(void);
a61 1
  /* trace_hook             */  word trace_hook;
@


1.5
log
@Removed redundent memory_profiler entry.
@
text
@d18 3
d51 1
a51 1
  /* poly_equal             */  void (*ml_poly_equal)(void);
d58 1
@


1.4
log
@The implicit vector is now a struct, since it contains
various things of various types.
@
text
@d18 4
d52 1
a52 1
  /* memory_profiler        */  void (*ml_memory_profile)(void);
a53 1
  /* interrupt_exception    */  mlval interrupt_exception;
@


1.3
log
@Added MODIFIED_REF_LINK.
@
text
@d7 2
a8 6
 *  The `implicit vector' is an array of pointers to machine-code
 *  subroutines which are useful to the compiled ML code and whose
 *  addresses would otherwise be difficult to obtain.  All of the
 *  routines referenced are currently in `interface.s'.  The exception is
 *  implicit_vector[0] which is the first link in the chain of recently
 *  modified arrays.  See `gc.c' for details.
d10 5
d18 3
d33 5
d39 14
a52 1
#define MODIFIED_REF_LINK	(*implicit_vector)
a53 1
extern word implicit_vector[];
@


1.2
log
@Tidied up the documentation and altered the declaration to make the
machine scanning safer.
@
text
@d10 3
a12 1
 *  routines referenced are currently in `interface.s'.
d17 4
d29 2
@


1.1
log
@Initial revision
@
text
@d1 16
a16 6
/*
 * implicit.h
 * The `implicit' vector.
 * $Log$
 * 
 * Copyright (c) Harlequin 1991.
a18 1
/* Avoid multiple inclusion */
a21 2
/* For efficiency */
#ifndef types_h
a22 1
#endif
d24 1
a24 1
extern word implicit_vector [];
@
