head	1.116;
access;
symbols
	MLW_daveb_inline_1_4_99:1.116.1
	MLWorks_21c0_1999_03_25:1.116
	MLWorks_20c1_1998_08_20:1.112
	MLWorks_20c0_1998_08_04:1.110
	MLWorks_20b2c2_1998_06_19:1.107
	MLWorks_20b2_Windows_1998_06_12:1.106
	MLWorks_20b1c1_1998_05_07:1.105
	MLWorks_20b0_1998_04_07:1.103
	MLWorks_20b0_1998_03_20:1.103
	MLWorks_20m2_1998_02_16:1.102
	MLWorks_MM_adapt:1.96.1
	MLWorks_20m1_1997_10_23:1.93
	MLWorks_11r1:1.80.1.1.1.7.1
	MLWorks_workspace_97:1.91.2
	MLWorks_dt_wizard:1.91.1
	MLWorks_11c0_1997_09_09:1.80.1.1.1.7
	MLWorks_10r3:1.80.1.1.3
	MLWorks_10r2_551:1.80.1.1.2
	MLWorks_11:1.80.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.80.1.1
	MLWorks_20m0_1997_06_20:1.84
	MLWorks_1_0_r2c2_1997_06_14:1.80.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.80.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.80.1
	MLWorks_BugFix_1997_04_24:1.81
	MLWorks_1_0_r2_Win32_1997_04_11:1.80
	MLWorks_1_0_r2_Unix_1997_04_04:1.79
	MM_ML_release_korma_1997_04_01:1.79
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.72.3.1.1
	MLWorks_gui_1996_12_18:1.72.4
	MLWorks_1_0_Win32_1996_12_17:1.72.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.70.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.70.1.1
	JFHrts:1.72.2
	MLWorks_1_0_Irix_1996_11_28:1.70.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.72.1
	MLWorks_1_0_Unix_1996_11_14:1.70.1
	MLWorks_Open_Beta2_1996_10_11:1.66.3
	MLWorks_License_dev:1.66.2
	MLWorks_1_open_beta_1996_09_13:1.66.1
	MLWorks_Open_Beta_1996_08_22:1.66
	MLWorks_Beta_1996_07_02:1.66
	MLWorks_Beta_1996_06_07:1.62
	MLWorks_Beta_1996_06_06:1.61
	MLWorks_Beta_1996_06_05:1.61
	MLWorks_Beta_1996_06_03:1.60
	MLWorks_Beta_1996_05_31:1.59
	MLWorks_Beta_1996_05_30:1.58
	hope_poo:1.11.1
	ML_beta_release_12/08/94:1.11.1.1
	ML_beta_release_03/08/94:1.11;
locks; strict;
comment	@# @;


1.116
date	99.03.12.15.11.16;	author mitchell;	state Exp;
branches
	1.116.1.1;
next	1.115;

1.115
date	99.03.09.15.06.42;	author johnh;	state Exp;
branches;
next	1.114;

1.114
date	98.11.10.15.57.08;	author mitchell;	state Exp;
branches;
next	1.113;

1.113
date	98.10.16.13.55.06;	author jont;	state Exp;
branches;
next	1.112;

1.112
date	98.08.18.10.46.10;	author jont;	state Exp;
branches;
next	1.111;

1.111
date	98.08.07.15.56.17;	author jont;	state Exp;
branches;
next	1.110;

1.110
date	98.08.03.16.21.07;	author jkbrook;	state Exp;
branches;
next	1.109;

1.109
date	98.08.03.15.46.49;	author jont;	state Exp;
branches;
next	1.108;

1.108
date	98.07.15.14.47.47;	author jkbrook;	state Exp;
branches;
next	1.107;

1.107
date	98.06.15.15.01.18;	author johnh;	state Exp;
branches;
next	1.106;

1.106
date	98.06.11.15.37.52;	author johnh;	state Exp;
branches;
next	1.105;

1.105
date	98.05.01.19.28.14;	author jkbrook;	state Exp;
branches;
next	1.104;

1.104
date	98.03.30.11.40.19;	author jont;	state Exp;
branches;
next	1.103;

1.103
date	98.02.13.14.56.16;	author jont;	state Exp;
branches;
next	1.102;

1.102
date	98.01.30.15.26.27;	author jont;	state Exp;
branches;
next	1.101;

1.101
date	98.01.28.14.54.59;	author jont;	state Exp;
branches;
next	1.100;

1.100
date	98.01.20.10.26.02;	author jkbrook;	state Exp;
branches;
next	1.99;

1.99
date	98.01.13.17.38.58;	author jkbrook;	state Exp;
branches;
next	1.98;

1.98
date	97.12.16.14.42.35;	author jont;	state Exp;
branches;
next	1.97;

1.97
date	97.12.09.15.55.32;	author johnh;	state Exp;
branches;
next	1.96;

1.96
date	97.10.29.09.40.02;	author johnh;	state Exp;
branches
	1.96.1.1;
next	1.95;

1.95
date	97.10.27.13.40.58;	author johnh;	state Exp;
branches;
next	1.94;

1.94
date	97.10.23.09.59.16;	author jont;	state Exp;
branches;
next	1.93;

1.93
date	97.10.22.15.37.54;	author daveb;	state Exp;
branches;
next	1.92;

1.92
date	97.10.09.10.19.23;	author jont;	state Exp;
branches;
next	1.91;

1.91
date	97.09.10.14.54.42;	author jont;	state Exp;
branches
	1.91.1.1
	1.91.2.1;
next	1.90;

1.90
date	97.09.03.15.10.47;	author jkbrook;	state Exp;
branches;
next	1.89;

1.89
date	97.09.01.16.32.33;	author jkbrook;	state Exp;
branches;
next	1.88;

1.88
date	97.07.28.14.28.20;	author jont;	state Exp;
branches;
next	1.87;

1.87
date	97.07.28.11.35.33;	author jont;	state Exp;
branches;
next	1.86;

1.86
date	97.07.22.10.36.48;	author andreww;	state Exp;
branches;
next	1.85;

1.85
date	97.06.27.09.26.17;	author stephenb;	state Exp;
branches;
next	1.84;

1.84
date	97.06.04.11.41.52;	author jont;	state Exp;
branches;
next	1.83;

1.83
date	97.05.22.10.51.04;	author stephenb;	state Exp;
branches;
next	1.82;

1.82
date	97.05.07.08.36.58;	author stephenb;	state Exp;
branches;
next	1.81;

1.81
date	97.04.08.10.49.14;	author jont;	state Exp;
branches;
next	1.80;

1.80
date	97.04.07.10.28.37;	author jont;	state Exp;
branches
	1.80.1.1;
next	1.79;

1.79
date	97.03.13.18.22.21;	author jont;	state Exp;
branches;
next	1.78;

1.78
date	97.03.03.12.52.00;	author matthew;	state Exp;
branches;
next	1.77;

1.77
date	97.01.28.11.31.52;	author nickb;	state Exp;
branches;
next	1.76;

1.76
date	97.01.10.16.02.26;	author jont;	state Exp;
branches;
next	1.75;

1.75
date	97.01.08.15.32.18;	author jont;	state Exp;
branches;
next	1.74;

1.74
date	96.12.24.14.58.00;	author jont;	state Exp;
branches;
next	1.73;

1.73
date	96.12.19.12.28.48;	author jont;	state Exp;
branches;
next	1.72;

1.72
date	96.11.20.11.10.45;	author jont;	state Exp;
branches
	1.72.1.1
	1.72.2.1
	1.72.3.1
	1.72.4.1;
next	1.71;

1.71
date	96.11.19.14.04.32;	author jont;	state Exp;
branches;
next	1.70;

1.70
date	96.11.07.14.57.06;	author daveb;	state Exp;
branches
	1.70.1.1;
next	1.69;

1.69
date	96.11.06.15.41.31;	author jont;	state Exp;
branches;
next	1.68;

1.68
date	96.10.28.14.19.45;	author stephenb;	state Exp;
branches;
next	1.67;

1.67
date	96.10.17.16.02.36;	author jont;	state Exp;
branches;
next	1.66;

1.66
date	96.07.02.15.40.00;	author jont;	state Exp;
branches
	1.66.1.1
	1.66.2.1
	1.66.3.1;
next	1.65;

1.65
date	96.06.26.15.22.27;	author brianm;	state Exp;
branches;
next	1.64;

1.64
date	96.06.22.13.20.48;	author brianm;	state Exp;
branches;
next	1.63;

1.63
date	96.06.13.13.00.31;	author jont;	state Exp;
branches;
next	1.62;

1.62
date	96.06.07.12.46.51;	author jont;	state Exp;
branches;
next	1.61;

1.61
date	96.06.04.13.26.21;	author brianm;	state Exp;
branches;
next	1.60;

1.60
date	96.05.31.11.42.57;	author stephenb;	state Exp;
branches;
next	1.59;

1.59
date	96.05.29.14.24.06;	author stephenb;	state Exp;
branches;
next	1.58;

1.58
date	96.05.24.15.04.17;	author stephenb;	state Exp;
branches;
next	1.57;

1.57
date	96.05.14.16.37.38;	author jont;	state Exp;
branches;
next	1.56;

1.56
date	96.05.13.16.04.02;	author nickb;	state Exp;
branches;
next	1.55;

1.55
date	96.05.07.10.00.38;	author stephenb;	state Exp;
branches;
next	1.54;

1.54
date	96.04.18.13.59.45;	author matthew;	state Exp;
branches;
next	1.53;

1.53
date	96.04.18.11.53.43;	author matthew;	state Exp;
branches;
next	1.52;

1.52
date	96.03.14.11.33.02;	author jont;	state Exp;
branches;
next	1.51;

1.51
date	96.03.14.11.12.13;	author jont;	state Exp;
branches;
next	1.50;

1.50
date	96.03.04.10.52.08;	author stephenb;	state Exp;
branches;
next	1.49;

1.49
date	96.02.28.17.33.23;	author jont;	state Exp;
branches;
next	1.48;

1.48
date	96.02.15.13.48.34;	author jont;	state Exp;
branches;
next	1.47;

1.47
date	96.02.14.13.51.44;	author nickb;	state Exp;
branches;
next	1.46;

1.46
date	96.02.14.11.55.47;	author jont;	state Exp;
branches;
next	1.45;

1.45
date	95.12.11.11.35.01;	author jont;	state Exp;
branches;
next	1.44;

1.44
date	95.10.11.11.09.26;	author jont;	state Exp;
branches;
next	1.43;

1.43
date	95.10.05.14.15.54;	author jont;	state Exp;
branches;
next	1.42;

1.42
date	95.09.20.16.43.42;	author jont;	state Exp;
branches;
next	1.41;

1.41
date	95.09.01.09.51.55;	author jont;	state Exp;
branches;
next	1.40;

1.40
date	95.08.22.14.30.05;	author nickb;	state Exp;
branches;
next	1.39;

1.39
date	95.08.02.16.20.32;	author jont;	state Exp;
branches;
next	1.38;

1.38
date	95.07.31.13.41.54;	author nickb;	state Exp;
branches;
next	1.37;

1.37
date	95.07.24.13.34.41;	author nickb;	state Exp;
branches;
next	1.36;

1.36
date	95.07.21.16.22.48;	author io;	state Exp;
branches;
next	1.35;

1.35
date	95.07.20.13.19.55;	author jont;	state Exp;
branches;
next	1.34;

1.34
date	95.07.19.14.31.19;	author nickb;	state Exp;
branches;
next	1.33;

1.33
date	95.07.06.23.22.50;	author brianm;	state Exp;
branches;
next	1.32;

1.32
date	95.06.26.15.36.04;	author jont;	state Exp;
branches;
next	1.31;

1.31
date	95.06.26.13.39.48;	author daveb;	state Exp;
branches;
next	1.30;

1.30
date	95.06.08.16.37.55;	author jont;	state Exp;
branches;
next	1.29;

1.29
date	95.06.06.16.06.01;	author jont;	state Exp;
branches;
next	1.28;

1.28
date	95.05.26.14.26.03;	author nickb;	state Exp;
branches;
next	1.27;

1.27
date	95.04.26.10.00.46;	author nickb;	state Exp;
branches;
next	1.26;

1.26
date	95.04.24.15.25.48;	author nickb;	state Exp;
branches;
next	1.25;

1.25
date	95.04.11.11.23.48;	author jont;	state Exp;
branches;
next	1.24;

1.24
date	95.04.07.13.49.53;	author jont;	state Exp;
branches;
next	1.23;

1.23
date	95.04.04.12.01.12;	author nickb;	state Exp;
branches;
next	1.22;

1.22
date	95.03.28.14.12.34;	author nickb;	state Exp;
branches;
next	1.21;

1.21
date	95.03.17.15.34.41;	author brianm;	state Exp;
branches;
next	1.20;

1.20
date	95.03.17.14.28.54;	author jont;	state Exp;
branches;
next	1.19;

1.19
date	95.03.12.15.01.02;	author brianm;	state Exp;
branches;
next	1.18;

1.18
date	95.03.01.16.12.32;	author brianm;	state Exp;
branches;
next	1.17;

1.17
date	95.02.14.15.16.38;	author io;	state Exp;
branches;
next	1.16;

1.16
date	95.02.07.16.42.27;	author jont;	state Exp;
branches;
next	1.15;

1.15
date	95.01.05.11.06.22;	author nickb;	state Exp;
branches;
next	1.14;

1.14
date	94.11.09.16.16.31;	author nickb;	state Exp;
branches;
next	1.13;

1.13
date	94.08.15.12.30.21;	author daveb;	state Exp;
branches;
next	1.12;

1.12
date	94.08.15.10.35.21;	author daveb;	state Exp;
branches;
next	1.11;

1.11
date	94.07.12.13.06.50;	author jont;	state Exp;
branches
	1.11.1.1;
next	1.10;

1.10
date	94.07.08.10.29.47;	author nickh;	state Exp;
branches;
next	1.9;

1.9
date	94.07.04.13.29.22;	author nickh;	state Exp;
branches;
next	1.8;

1.8
date	94.07.01.10.14.26;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	94.06.14.14.49.50;	author nickh;	state Exp;
branches;
next	1.6;

1.6
date	94.06.13.12.17.11;	author nickh;	state Exp;
branches;
next	1.5;

1.5
date	94.06.13.12.10.18;	author nickh;	state Exp;
branches;
next	1.4;

1.4
date	94.06.09.16.18.33;	author nickh;	state Exp;
branches;
next	1.3;

1.3
date	94.06.09.14.21.45;	author nickh;	state Exp;
branches;
next	1.2;

1.2
date	94.06.09.13.20.47;	author nickh;	state Exp;
branches;
next	1.1;

1.1
date	94.06.09.10.46.02;	author nickh;	state Exp;
branches;
next	;

1.11.1.1
date	95.07.05.10.30.50;	author hope;	state Exp;
branches;
next	;

1.66.1.1
date	96.09.13.11.22.55;	author hope;	state Exp;
branches;
next	;

1.66.2.1
date	96.10.07.16.13.05;	author hope;	state Exp;
branches;
next	1.66.2.2;

1.66.2.2
date	96.10.08.16.16.51;	author jont;	state Exp;
branches;
next	;

1.66.3.1
date	96.10.17.11.32.20;	author hope;	state Exp;
branches;
next	;

1.70.1.1
date	96.11.14.12.58.16;	author hope;	state Exp;
branches
	1.70.1.1.1.1;
next	;

1.70.1.1.1.1
date	96.11.28.15.08.12;	author hope;	state Exp;
branches;
next	;

1.72.1.1
date	96.11.22.18.15.54;	author hope;	state Exp;
branches;
next	;

1.72.2.1
date	96.12.17.10.02.36;	author hope;	state Exp;
branches;
next	;

1.72.3.1
date	96.12.17.17.54.19;	author hope;	state Exp;
branches
	1.72.3.1.1.1;
next	;

1.72.3.1.1.1
date	97.02.24.11.45.22;	author hope;	state Exp;
branches;
next	;

1.72.4.1
date	96.12.18.09.48.54;	author hope;	state Exp;
branches;
next	;

1.80.1.1
date	97.05.12.10.41.18;	author hope;	state Exp;
branches
	1.80.1.1.1.1
	1.80.1.1.2.1
	1.80.1.1.3.1;
next	;

1.80.1.1.1.1
date	97.07.28.18.27.18;	author daveb;	state Exp;
branches;
next	1.80.1.1.1.2;

1.80.1.1.1.2
date	97.08.06.13.34.57;	author daveb;	state Exp;
branches;
next	1.80.1.1.1.3;

1.80.1.1.1.3
date	97.08.07.13.19.18;	author daveb;	state Exp;
branches;
next	1.80.1.1.1.4;

1.80.1.1.1.4
date	97.08.08.10.47.52;	author daveb;	state Exp;
branches;
next	1.80.1.1.1.5;

1.80.1.1.1.5
date	97.08.22.09.03.55;	author jkbrook;	state Exp;
branches;
next	1.80.1.1.1.6;

1.80.1.1.1.6
date	97.09.04.10.22.07;	author jkbrook;	state Exp;
branches;
next	1.80.1.1.1.7;

1.80.1.1.1.7
date	97.09.04.11.16.38;	author jkbrook;	state Exp;
branches
	1.80.1.1.1.7.1.1;
next	;

1.80.1.1.1.7.1.1
date	97.10.07.11.53.20;	author jkbrook;	state Exp;
branches;
next	1.80.1.1.1.7.1.2;

1.80.1.1.1.7.1.2
date	97.10.10.17.05.31;	author jkbrook;	state Exp;
branches;
next	1.80.1.1.1.7.1.3;

1.80.1.1.1.7.1.3
date	97.10.22.13.03.15;	author jkbrook;	state Exp;
branches;
next	;

1.80.1.1.2.1
date	97.09.08.17.20.23;	author daveb;	state Exp;
branches;
next	;

1.80.1.1.3.1
date	97.09.09.14.16.30;	author daveb;	state Exp;
branches;
next	1.80.1.1.3.2;

1.80.1.1.3.2
date	97.10.10.14.57.52;	author jkbrook;	state Exp;
branches;
next	1.80.1.1.3.3;

1.80.1.1.3.3
date	97.10.16.20.35.18;	author jkbrook;	state Exp;
branches;
next	;

1.91.1.1
date	97.09.10.19.34.20;	author brucem;	state Exp;
branches;
next	;

1.91.2.1
date	97.09.11.21.03.24;	author daveb;	state Exp;
branches;
next	;

1.96.1.1
date	97.10.31.13.46.16;	author nickb;	state Exp;
branches;
next	;

1.116.1.1
date	99.04.01.18.02.25;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.116
log
@[Bug #190526]
Move splash advert to distribution
@
text
@# ==== MLWORKS RUNTIME SYSTEM (GNU) MAKEFILE ====
#
# $Log: GNUmakefile,v $
# Revision 1.115  1999/03/09  15:06:42  johnh
# [Bug #190506]
# Remove old FI.
#
# Revision 1.114  1998/11/10  15:57:08  mitchell
# [Bug #70242]
# Link in sockets code
#
# Revision 1.113  1998/10/16  13:55:06  jont
# [Bug #70207]
# Add extra source file for start_mlworks to avoid code replication
#
# Revision 1.112  1998/08/18  10:46:10  jont
# [Bug #70154]
# Delete libmlw.dll and libmlw-g.dll during make clean
#
# Revision 1.111  1998/08/07  15:56:17  jont
# [Bug #70126]
# Don't try to remove license server objects when under Win32
#
# Revision 1.110  1998/08/03  16:21:07  jkbrook
# [Bug #30457]
# Differentiate between price not OS when indexing into license codes
#
# Revision 1.109  1998/08/03  15:46:49  jont
# [Bug #70126]
# Make sure license server stuff cleaned up on make clean
#
# Revision 1.108  1998/07/15  14:47:47  jkbrook
# [Bug #30435]
# Make standalone and DLL-ised license validators
# and distribute as appropriate to platform
#
# Revision 1.107  1998/06/15  15:01:18  johnh
# [Bug #30411]
# Put spalsh pixmaps in right place.
#
# Revision 1.106  1998/06/11  15:37:52  johnh
# [Bug #30411]
# Distribute splash screen bitmaps.
#
# Revision 1.105  1998/05/01  19:28:14  jkbrook
# [Bug #30354]
# Temporarily restore old FI to distribution
#
# Revision 1.104  1998/03/30  11:40:19  jont
# [Bug #70086]
# Add make_key_rights for windows NT registry key security
#
# Revision 1.103  1998/02/13  14:56:16  jont
# [Bug #30242]
# Add new file ml_utilities
#
# Revision 1.102  1998/01/30  15:26:27  jont
# [Bug #70025]
# Reinsert a couple of @@ that accidentally got removed
#
# Revision 1.101  1998/01/28  14:54:59  jont
# [Bug #20103]
# Ensure main-windows is built using libmlw.dll
#
# Revision 1.100  1998/01/20  10:26:02  jkbrook
# [Bug #30289]
# Merging from MLWorks_10r3:
# strip is in /usr/bin on Linux
#
# Revision 1.99  1998/01/13  17:38:58  jkbrook
# [Bug #30306]
# Removing incomplete FI from 2.0m2 distribution
#
# Revision 1.98  1997/12/16  14:42:35  jont
# [Bug #30246]
# Move dummy script creation from rts/GNUmakefile to scripts/Makefile
#
# Revision 1.97  1997/12/09  15:55:32  johnh
# [Bug #30185]
# make main-windows and main-windows-g depend on $(proj).rbj to link to resources.
#
# Revision 1.96  1997/10/29  09:40:02  johnh
# [Bug #30059]
# Fix build problem - generate __control_names.sml although only used on Win32 platforms.
#
# Revision 1.95  1997/10/27  13:40:58  johnh
# [Bug #30059]
# Add Win32 specific generated files.
#
# Revision 1.94  1997/10/23  09:59:16  jont
# [Bug #7015]
# Modify definition of RMRECURSIVELY for Win32
#
# Revision 1.93  1997/10/22  15:37:54  daveb
# [Bug #30044]
# Removed main-static from the default list of targets and distributed files.
#
# Revision 1.92  1997/10/09  10:19:23  jont
# [Bug #30279]
# Add localreals implementation
# This corrects some defects in the linux pow function
#
# Revision 1.91  1997/09/10  14:54:42  jont
# [Bug #70004]
# Produce all generated files required to build the rts
# in arch/OS specific directories. Remove gen from all vpaths
# and include paths. Modify the general rule for %.h (which is
# only used for offsets.h) to build its result in gen/$(ARCH)/$(OS)
# Modify all explicit dependencies on offsets.h accordingly
#
# Revision 1.90  1997/09/03  15:10:47  jkbrook
# [Bug #30227]
# Getting mlw_mklic to make recursively under Windows
#
# Revision 1.89  1997/09/01  16:32:33  jkbrook
# [Bug #30227]
# New cross-platform license generator is made recursively
# and from rts/sha not rts/src/sha due to hope restrictions
#
# Revision 1.88  1997/07/28  14:28:20  jont
# [Bug #20098]
# Copy the win32 dlls into rts to avoid path problems
#
# Revision 1.87  1997/07/28  11:35:33  jont
# [Bug #50024]
# Make a runtime script to get the LD_LIBRARY_PATH right automatically
#
# Revision 1.86  1997/07/22  10:36:48  andreww
# [Bug #30045]
# Add targets for the new DLLized runtime
#
# Revision 1.85  1997/06/27  09:26:17  stephenb
# [Bug #30029]
# Add mlw_c_io
#
# Revision 1.84  1997/06/04  11:41:52  jont
# [Bug #1816]
# Allow for possibilty that gcc may write object file direct to
# standard .o file rather than .obj file under Win32.
#
# Revision 1.83  1997/05/22  10:51:04  stephenb
# [Bug #30121]
# Get the new FI into the distribution.
#
# Revision 1.82  1997/05/07  08:36:58  stephenb
# Request 30030: add mlw_ci_os and mlw_ci to list of modules.
#
# Revision 1.81  1997/04/08  10:49:14  jont
# Adding src/OS/$OS_TYPE/arch/$ARCH to path
#
# Revision 1.80  1997/04/07  10:28:37  jont
# [Bug #0]
# Fix problems creating mlimage-windows.bat and friends under new make
#
# Revision 1.79  1997/03/13  18:22:21  jont
# [Bug #0]
# Make generated stuff first
#
# Revision 1.78  1997/03/03  12:52:00  matthew
# Adding dtoa.c
#
# Revision 1.77  1997/01/28  11:31:52  nickb
# Change make rules for test_fixup, so that it gets the license archive
# for linking.
#
# Revision 1.76  1997/01/10  16:02:26  jont
# [Bug #1890]
# Removed all recursive makes, replacing with an equivalent but better mechanism
#
# Revision 1.75  1997/01/08  15:32:18  jont
# [Bug #1816]
# Modify to use improved PC make
#
# Revision 1.74  1996/12/24  14:58:00  jont
# [Bug #1816]
# Remove expiry from list of modules
#
# Revision 1.73  1996/12/19  12:28:48  jont
# [Bug #1809]
# Stop make clean deleting runtime.res, which is no longer a generated file
#
# Revision 1.72  1996/11/20  11:10:45  jont
# [Bug #0]
# Ensure splash.bmp is added to Win32 distribution
#
# Revision 1.71  1996/11/19  14:04:32  jont
# Add stuff to make the registerer
#
# Revision 1.70  1996/11/07  14:57:06  daveb
# Support for registration-style licensing:
# Added src/sha to INCLUDE directories and vpath; added sha to MODULES.
#
# Revision 1.69  1996/11/06  15:41:31  jont
# Modifications mlimage splits into mlimage-windows and mlimage-console
#
# Revision 1.68  1996/10/28  14:19:45  stephenb
# As discussed in mlworks.mail.{8739,8740}, change do-make to ./do-make
# so that it is not necessary for . to be your path.
#
# Revision 1.67  1996/10/17  16:02:36  jont
# Merging in license server stuff
#
# Revision 1.66.2.2  1996/10/08  16:16:51  jont
# Add license serving stuff
#
# Revision 1.66.2.1  1996/10/07  16:13:05  hope
# branched from 1.66
#
# Revision 1.66  1996/07/02  15:40:00  jont
# Add dummy files for the scripts under NT so install process will remove them properly
#
# Revision 1.65  1996/06/26  15:22:27  brianm
# Removed unnecessary dependnecies on libml.h ...
#
# Revision 1.64  1996/06/22  13:20:48  brianm
# Adding expiry to CMODULES.
#
# Revision 1.63  1996/06/13  13:00:31  jont
# Sort out problems with libml.h in NT distribution
#
# Revision 1.62  1996/06/07  12:46:51  jont
# Ensure distributed files are made suitably readable
#
# Revision 1.61  1996/06/04  13:26:21  brianm
# Adding src/foreign/auxfiles/libml.h to distribution ...
#
# Revision 1.60  1996/05/31  11:42:57  stephenb
# Fix the problem with the dependency on the generated file os_errors.c
# which make it impossible to do a build in a clean directory without
# manually creating gen/$(ARCH)/$(OS).
#
# Revision 1.59  1996/05/29  14:24:06  stephenb
# Add support for Timer as defined in March 1996 basis definition.
#
# Revision 1.58  1996/05/24  15:04:17  stephenb
# Add generated file os_errors to sources and modify vpath to pick it up
# from rts/gen/$(ARCH)/$(OS).
#
# Revision 1.57  1996/05/14  16:37:38  jont
# Fix problem building main-windows
#
# Revision 1.56  1996/05/13  16:04:02  nickb
# Make "include" and "define" C compiler options more portable.
#
# Revision 1.55  1996/05/07  10:00:38  stephenb
# Add time_date and os_io_poll to the list of source files.
#
#

#
# Most of this Makefile should be split into common and OS specific 
# portions with the latter being moved off to OS/{Win32,Unix}/GNUmake
#

# To make, provide environment variables OS, ARCH:
# 
# (SunOS, SPARC), (Solaris, SPARC), (Irix, MIPS), ...
#
# and do "gnumake"

CMODULES = alloc allocator arena bytearrays cache diagnostic endian \
          environment event exceptions fixup \
          gc global image implicit initialise integers intercept \
          license lists loader marshal mem modules \
          options pack_words pervasives print profiler reals dtoa stacks state \
          streams strings system time trace utils value values vector words \
          os signals stubs threads sockets mach_state arch_code exec_delivery explore \
          export time_date os_io_poll os_errors mlw_timer sha mlw_ci_os \
	  mlw_ci mlw_ci_io localreals ml_utilities mlw_start

MODULES	= $(CMODULES) main interface
DLLMODULES= $(CMODULES) mlw_dll interface 

# RTSMODULES contains the list of objects used to build the workaround
# rts that loads the runtime dynamic library and behaves "as if" it were
# the normal runtime.   for unix platforms, main_stub suffices, but for
# windows, we also need heap (because it is this workaround that is used
# when delivering executables: the delivered heap is inserted into the
# workaround).

RTSMODULES= main_stub

MODULESSTATIC = $(MODULES)

ifeq "$(OS)" "NT"
NTTYPE=TRUE
else
ifeq "$(OS)" "Win95"
NTTYPE=TRUE
else
NTTYPE=FALSE
endif
endif

ifeq "$(NTTYPE)" "TRUE"
TARGETFILES	= main main-g main-windows
else
TARGETFILES	= main main-g
endif

TARGETDIR 	= bin/$(ARCH)/$(OS)
NTTARGETDIR 	= bin\\$(ARCH)\\$(OS)
ifeq "$(NTTYPE)" "TRUE"
DISTFILES	= main.exe main-windows.exe libmlw.dll libmlw.lib
else
DISTFILES	= main libmlw.so
endif

GENFILES = objectfile.sml __objectfile.sml \
           implicit.sml __implicit.sml \
           tags.sml __tags.sml \
	   __control_names.sml \
           $(ARCH)/$(OS)/offsets.h \
           $(ARCH)/$(OS)/asm_offsets.h \
           $(ARCH)/$(OS)/os_errors.c

INCLUDEDIRS    = gen/$(ARCH)/$(OS) src/OS/$(OS)/arch/$(ARCH) \
                 src/OS/$(OS) src/OS/$(OS_TYPE) src/OS/$(OS_TYPE)/arch/$(ARCH) \
		 src/arch/$(ARCH) src \
		 license/liclient/export sha

DEFINES      = LICENSE
DEFINESDEBUG = DEBUG DIAGNOSTICS COLLECT_STATS EXPLORER

ifeq "$(NTTYPE)" "TRUE"
OBJ		= obj
RM		= rm
RMRECURSIVELY   = rm -r -f
AWK		= gawk
MKDIR           = mkdir -p
MKDIREND        =
QUOTE		= "
EXEC            = sh -c
TAR 		= tar
else
OBJ		= o
RM              = /bin/rm -f
RMRECURSIVELY   = /bin/rm -r -f
AWK		= /usr/bin/awk
# mkdir -p on Irix warns and errors if a directory already exists
MKDIR		= /bin/mkdir -p 2>/dev/null
MKDIREND	= || :
QUOTE		= '
EXEC            =
TAR 		= /bin/tar
endif

LN		= /bin/ln
FIND            = /bin/find
AS		= as

ifeq "$(OS)" "Linux"
STRIP		= /usr/bin/strip
else
STRIP		= /bin/strip
endif

chmod_exec=chmod 775
chmod_read_only=chmod 444

# Some stuff to deal with building the license server interface

ifeq "$(NTTYPE)" "TRUE"
else
BUILD_MACH := $(shell /usr/local/bin/class)
endif

# now include the target-specific makefiles, which can redefine any of
# the above macros as it likes. Typically will add to MODULES,
# DEFINES, INCLUDES, LIBRARIES, and may tinker with CCOPTS.

# Need to define OBJECTDIR first so this included file can see it.

OBJECTDIR	= obj/$(ARCH)/$(OS)

include src/OS/$(OS)/arch/$(ARCH)/GNUmake
include src/OS/$(OS_TYPE)/GNUmake

GENERATED      = $(GENFILES:%=gen/%)
OBJECTS         = $(MODULES:%=$(OBJECTDIR)/%.o)
DLLOBJECTS      = $(DLLMODULES:%=$(OBJECTDIR)/%.o)
RTSOBJECTS	= $(RTSMODULES:%=$(OBJECTDIR)/%.o)
OBJECTSDEBUG    = $(MODULES:%=$(OBJECTDIR)/%-g.o)
DLLOBJECTSDEBUG = $(DLLMODULES:%=$(OBJECTDIR)/%-g.o)
RTSOBJECTSDEBUG = $(RTSMODULES:%=$(OBJECTDIR)/%-g.o)
OBJECTSSBR	= $(CMODULES:%=%.sbr)
DLLOBJECTSSBR	= $(CMODULES:%=%.sbr) mlw_dll.sbr
OBJECTSSTATIC   = $(MODULESSTATIC:%=$(OBJECTDIR)/%.o)
ifeq "$(NTTYPE)" "TRUE"
else
ARCHIVES	= license/liclient/$(BUILD_MACH)/liclient.a license/licshar/$(BUILD_MACH)/licshar.a
endif
TARGETS 	= $(TARGETFILES:%=$(TARGETDIR)/%)
DISTRIB		= $(DISTFILES:%=$(TARGETDIR)/%)
ifeq "$(NTTYPE)" "TRUE"
DISTRIBUTED	= $(DISTRIB) runtime.ico splash.bmp splash_free.bmp splash_advert.bmp $(TARGETDIR)/validate_license.dll
else
DISTRIBUTED	= $(DISTRIB) splash.xpm splash_free.xpm splash_advert.xpm mlworks_license
endif

TESTFIXOBJECTS	= $(subst main,test_fixup,$(OBJECTSDEBUG))

DEPENDDIR	= depend/$(ARCH)/$(OS)

ifeq "$(NTTYPE)" "TRUE"
RUNTIMES	= runtime runtime-g runtime-windows runtime-windows-g
else
RUNTIMES	= runtime runtime-g runtime-static
endif

all: $(GENERATED) $(RUNTIMES)
generated: $(GENERATED)
objects: $(OBJECTS)
objectsdebug: $(OBJECTSDEBUG)

REGMODULES	= sha mlw_mklic
SHAREGOBJECTS   = $(REGMODULES:%=sha/%.o)
MLWREGOBJECTS	= $(REGMODULES:%=$(OBJECTDIR)/%.o)

ifeq "$(NTTYPE)" "TRUE"
MLWLICMODULES	= mlworks_license sha license_offset
MLWLICOBJECTS	= $(MLWLICMODULES:%=$(OBJECTDIR)/%.o) 
MLWLICDEPENDS	= $(MLWLICOBJECTS) $(TARGETDIR)/validate_license.dll
else
MLWLICMODULES	= mlworks_license validate_license sha license_offset
MLWLICOBJECTS	= $(MLWLICMODULES:%=$(OBJECTDIR)/%.o)
MLWLICOBJECTSDEBUG	= $(MLWLICMODULES:%=$(OBJECTDIR)/%-g.o)
MLWLICDEPENDS	= $(MLWLICOBJECTS) 
endif

# the new license generator is made recursively

$(TARGETDIR)/mlw_mklic: $(MLWREGOBJECTS)
	@@cd sha && $(MAKE) -f Makefile OS=$(OS) mlw_mklic
	@@mv $(SHAREGOBJECTS) $(OBJECTDIR)
ifeq  "$(NTTYPE)" "TRUE"
	@@mv sha/mlw_mklic.exe $(TARGETDIR)
else
	@@mv sha/mlw_mklic $(TARGETDIR)
	@@$(STRIP) $@@
endif


# === MAKE DIRECTIVES ===

# Disable traditional suffix searches.

.SUFFIXES:

# == General Rules ==

$(DEPENDDIR)/%.d: %.c
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(DEPENDDIR) $(MKDIREND)
	@@$(DEPENDGEN) $(DEPENDGENFLAGS) $< | sed $(QUOTE)/:/s!$*.o!$(OBJECTDIR)/$*.o $(OBJECTDIR)/$*-g.o $@@!$(QUOTE) > $@@


# gen/$(ARCH)/$(OS)/os_errors.c is automatically generated (see 
# rts/src/OS/{Win32,Unix}/GNUmake) and so does not exist when the dependency
# maker runs.  This confuses it no end and it fails to generate a dependency
# file.  The following rule makes the dependency maker build the C file before
# continuing, so all is well.  There may be a better way of doing this, but I 
# don't know it.

$(DEPENDDIR)/os_errors.d: gen/$(ARCH)/$(OS)/os_errors.c
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(DEPENDDIR) $(MKDIREND)
	@@$(DEPENDGEN) $(DEPENDGENFLAGS) $< | sed $(QUOTE)/:/s!os_errors.o!$(OBJECTDIR)/os_errors.o $(OBJECTDIR)/os_errors-g.o $@@!$(QUOTE) > $@@


$(DEPENDDIR)/%.d: %.S
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(DEPENDDIR) $(MKDIREND)
	@@$(DEPENDGEN) $(DEPENDGENFLAGS) $< | sed $(QUOTE)/:/s!$*.o!$(OBJECTDIR)/$*.o $(OBJECTDIR)/$*-g.o $@@!$(QUOTE) > $@@

$(OBJECTDIR)/%-dll.o: %.c
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(OBJECTDIR) $(MKDIREND)
	@@$(COMPILE) /DRUNTIME_DLL $(COMPILEFLAGS)$@@ $<

$(OBJECTDIR)/%.o: %.c
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(OBJECTDIR) $(MKDIREND)
	@@$(COMPILE) $(COMPILEFLAGS)$@@ $<

$(OBJECTDIR)/%-dll-g.o: %.c
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(OBJECTDIR) $(MKDIREND)
	@@$(COMPILE) /DRUNTIME_DLL $(COMPILEFLAGSDEBUG)$@@ $<

$(OBJECTDIR)/%-g.o: %.c
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(OBJECTDIR) $(MKDIREND)
	@@$(COMPILE) $(COMPILEFLAGSDEBUG)$@@ $<

$(OBJECTDIR)/%.o: %.S
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(OBJECTDIR) $(MKDIREND)
	@@$(ASM) $(ASMFLAGS)$@@ $<
ifeq "$(NTTYPE)" "TRUE"
	@@if test -f $(OBJECTDIR)/$*.obj; then mv $(OBJECTDIR)/$*.obj $@@; fi
endif

$(OBJECTDIR)/%-g.o: %.S
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(OBJECTDIR) $(MKDIREND)
	@@$(ASM) $(ASMFLAGSDEBUG)$@@ $<
ifeq "$(NTTYPE)" "TRUE"
	@@if test -f $(OBJECTDIR)/$*.obj; then mv $(OBJECTDIR)/$*-g.obj $@@; fi
endif

gen/%.sml: src/%.h awk/%.awk
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) gen $(MKDIREND)
	@@$(AWK) -f awk/$*.awk < src/$*.h > gen/$*.sml

gen/__%.sml: src/%.h awk/__%.awk
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) gen $(MKDIREND)
	@@$(AWK) -f awk/__$*.awk < src/$*.h > gen/__$*.sml

gen/$(ARCH)/$(OS)/%.h: awk/%.awk src/implicit.h
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) gen/$(ARCH)/$(OS) $(MKDIREND)
	@@$(AWK) -f awk/$*.awk < src/implicit.h > $@@

# == Specific Rules

gen/__control_names.sml: awk/__control_names.awk resource.h
	echo 'MAKE: $< -> $@@'
	$(AWK) -f awk/__control_names.awk < resource.h > $@@

gen/$(ARCH)/$(OS)/asm_offsets.h: $(TARGETDIR)/make_asm_offsets
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) gen/$(ARCH)/$(OS) $(MKDIREND)
	@@$(EXEC) $< > $@@

$(TARGETDIR)/make_asm_offsets: $(OBJECTDIR)/make_asm_offsets.o
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) $(LINKFLAGS)$@@.exe $< $(LINKENDFLAGS) -subsystem:console
else
	@@$(LINK) $(LINKFLAGS)$@@ $< $(LINKENDFLAGS)
endif

# Have to put explicit dependencies on the offsets files here, because
# Make isn't smart enough to figure them all out (in fact, because gcc
# -MM insists on finding all the depended-upon files, rather than
# recording them as dependencies).

$(OBJECTDIR)/interface.o: gen/$(ARCH)/$(OS)/offsets.h gen/$(ARCH)/$(OS)/asm_offsets.h
$(OBJECTDIR)/interface-g.o: gen/$(ARCH)/$(OS)/offsets.h gen/$(ARCH)/$(OS)/asm_offsets.h
$(OBJECTDIR)/poly_equal.o: gen/$(ARCH)/$(OS)/offsets.h
$(OBJECTDIR)/poly_equal-g.o: gen/$(ARCH)/$(OS)/offsets.h


# == Search paths ==
#
# NOTE: The order of these paths is IMPORTANT.  Please think about it.

# C sources may be located in general source and architecture-specific
# directories.

vpath %.c \
  src/OS/$(OS)/arch/$(ARCH) \
  src/OS/$(OS) \
  src/OS/$(OS_TYPE) \
  src/OS/$(OS_TYPE)/arch/$(ARCH) \
  src/arch/$(ARCH) \
  src \
  gen/$(ARCH)/$(OS) \
  sha \
  misc

# C headers may be generated.

vpath %.h gen/$(ARCH)/$(OS) misc

# Name-value and name-offset definition files are like C sources.
# 
# vpath %.nv \
#   src/OS/$(OS)/arch/$(ARCH) \
#   src/OS/$(OS) \
#   src/arch/$(ARCH) \
#   src gen
# 
# vpath %.no \
#   src/OS/$(OS)/arch/$(ARCH) \
#   src/OS/$(OS) \
#   src/arch/$(ARCH) \
#   src gen

# Note that assembler sources may only be located in
# architecture-specific directories.

vpath %.S \
  src/OS/$(OS)/arch/$(ARCH) \
  src/arch/$(ARCH) \
  gen/$(ARCH)/$(OS)

# === AUTOMATIC DEPENDENCIES ===
#
# Dependency files are kept in the depend directory and are
# automatically kept up to date by the general rules above.
# For details, see the GNU make documentation.

include $(MODULESSTATIC:%=$(DEPENDDIR)/%.d)
include $(DEPENDDIR)/test_fixup.d

# === TARGETS ===

# Want to do this explicitly to get correct enddianness

$(OBJDIR)/sha.o:	sha.c
	@@cd sha && $(MAKE) -f Makefile OS=$(OS) sha.o
	@@mv sha.o $(OBJECTDIR)

$(TARGETDIR)/mlworks_license:	$(MLWLICDEPENDS) 
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) $(LINKFLAGS) -o $@@.exe $(MLWLICOBJECTS) $(TARGETDIR)/validate_license.lib $(LINKENDFLAGS) -subsystem:console
else
	@@$(LINK) $(LINKFLAGS) $@@ $(MLWLICOBJECTS) $(LIBRARIES)
	@@$(STRIP) $@@
endif

mlworks_license:	force $(TARGETDIR)/mlworks_license
ifeq "$(NTTYPE)" "TRUE"
	@@rm -f $@@.exe
	cp $(TARGETDIR)/mlworks_license.exe $@@.exe
	cp $(TARGETDIR)/validate_license.dll validate_license.dll
else
	@@$(RM) $@@
	$(LN) -s $(TARGETDIR)/mlworks_license $@@
endif

ifeq "$(NTTYPE)" "TRUE"
$(TARGETDIR)/libmlw: $(DLLOBJECTS)
else
$(TARGETDIR)/libmlw: $(DLLOBJECTS) $(ARCHIVES)
endif
	@@echo 'MAKE: $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) /LD $(LINKFLAGS)$@@ $(DLLOBJECTS) $(DLLLIBRARIES) $(LIBRARIES) $(LINKENDFLAGS) -subsystem:console
else
# 	for the sole benefit of Irix 5.1 OS, we have to name the shared library
# 	"libmlw.so" rather than "bin/MIPS/Irix/libmlw.so", otherwise at
# 	run time the system will start looking for a shared object called
#	"bin/MIPS..."
	@@$(LINK) $(DLLFLAGS) $(LINKFLAGS) libmlw.so $(DLLOBJECTS) $(ARCHIVES) $(LIBRARIES) $(DLLLIBRARIES) $(LINKENDFLAGS)
	@@mv libmlw.so $(TARGETDIR)
endif



ifeq "$(NTTYPE)" "TRUE"
$(TARGETDIR)/libmlw-g: $(DLLOBJECTSDEBUG)
else
$(TARGETDIR)/libmlw-g: $(DLLOBJECTSDEBUG) $(ARCHIVES)
endif
	@@echo 'MAKE: $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) /LDd  $(LINKFLAGSDEBUG)$@@ $(DLLOBJECTSDEBUG) $(DLLLIBRARIES) $(LIBRARIES) $(LINKENDFLAGSDEBUG) -subsystem:console
	@@bscmake /oruntime-g.bsc $(DLLOBJECTSSBR)
else
#see note in libmlw target
	@@$(LINK) $(DLLFLAGS) $(LINKFLAGS)libmlw-g.so $(DLLOBJECTSDEBUG) $(ARCHIVES) $(LIBRARIES) $(DLLLIBRARIES) $(LINKENDFLAGS)
	@@mv libmlw-g.so $(TARGETDIR)
endif





#Runtime as a shared object.  Creates both a "libmlw" dynamic
#library and an rts workaround which simply calls it in the target
#directory.  Note that the fact that we don't build a dynamic library
#runtime on SunOS is handled at the top level runtime target.

ifeq "$(NTTYPE)" "TRUE"
$(TARGETDIR)/main: $(TARGETDIR)/libmlw $(RTSOBJECTS) $(proj).rbj
else
$(TARGETDIR)/main: $(TARGETDIR)/libmlw $(RTSOBJECTS)
endif
	@@echo 'MAKE: $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) $(LINKFLAGS)$@@ $(RTSOBJECTS) $(proj).rbj $(TARGETDIR)/libmlw.lib  $(LINKENDFLAGS) -subsystem:console
else
	@@$(LINK) $(LINKFLAGS)$@@ $(RTSOBJECTS) -L$(TARGETDIR) -lmlw $(LINKENDFLAGS)
	@@$(STRIP) $@@
endif


ifeq "$(NTTYPE)" "TRUE"
$(TARGETDIR)/old-main: $(OBJECTS) $(proj).rbj
else
$(TARGETDIR)/old-main: $(OBJECTS) $(ARCHIVES)
endif
	@@echo 'MAKE: $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) $(LINKFLAGS)$(TARGETDIR)/main $(OBJECTS) $(proj).rbj $(LIBRARIES) $(LINKENDFLAGS) -subsystem:console
else
	@@$(LINK) $(LINKFLAGS)$(TARGETDIR)/main $(OBJECTS) $(ARCHIVES) $(LIBRARIES) $(LINKENDFLAGS)
	@@$(STRIP) $(TARGETDIR)/main
endif

ifeq "$(NTTYPE)" "TRUE"
$(TARGETDIR)/main-windows: $(TARGETDIR)/libmlw $(RTSOBJECTS) $(proj).rbj
	@@echo 'MAKE: $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
	@@$(LINK) $(LINKFLAGS)$@@ $(RTSOBJECTS) $(proj).rbj $(TARGETDIR)/libmlw.lib  $(LINKENDFLAGS) -subsystem:windows
endif

ifeq "$(NTTYPE)" "TRUE"
else
$(TARGETDIR)/main-static: $(OBJECTSSTATIC) $(ARCHIVES)
	@@echo 'MAKE: $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
	@@$(LINK) -Xlinker -Bstatic $(LINKFLAGS)$@@ $(OBJECTSSTATIC) $(ARCHIVES) $(LIBRARIESSTATIC) $(LINKENDFLAGS)
	@@$(STRIP) $@@
endif



ifeq "$(NTTYPE)" "TRUE"
$(TARGETDIR)/main-g: $(TARGETDIR)/libmlw-g $(RTSOBJECTSDEBUG) $(proj).rbj
else
$(TARGETDIR)/main-g: $(TARGETDIR)/libmlw-g $(RTSOBJECTSDEBUG)
endif
	@@echo 'MAKE: $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) $(LINKFLAGSDEBUG)$@@  $(RTSOBJECTSDEBUG) $(proj).rbj $(TARGETDIR)/libmlw-g.lib $(LINKENDFLAGS) -subsystem:console
	@@bscmake /oruntime-g.bsc $(OBJECTSSBR) main_stub.sbr
else
	@@$(LINK) $(LINKFLAGSDEBUG)$@@ $(RTSOBJECTSDEBUG) -L$(TARGETDIR) -lmlw-g $(LINKENDFLAGS)
endif


ifeq "$(NTTYPE)" "TRUE"
$(TARGETDIR)/old-main-g: $(OBJECTSDEBUG) $(proj).rbj
else
$(TARGETDIR)/old-main-g: $(OBJECTSDEBUG) $(ARCHIVES)
endif
	@@echo 'MAKE: $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) $(LINKFLAGSDEBUG)runtime-g  $(OBJECTSDEBUG) $(proj).rbj $(LIBRARIES) $(LINKENDFLAGSDEBUG) -subsystem:console
	@@cp runtime-g.exe $(TARGETDIR)/main-g.exe
	@@bscmake /oruntime-g.bsc $(OBJECTSSBR) main.sbr
else
	@@$(LINK) $(LINKFLAGSDEBUG)$(TARGETDIR)/main-g $(OBJECTSDEBUG) $(ARCHIVES) $(LIBRARIES) $(LINKENDFLAGSDEBUG)
endif




ifeq "$(NTTYPE)" "TRUE"
$(TARGETDIR)/main-windows-g: $(TARGETDIR)/libmlw-g $(RTSOBJECTSDEBUG) $(proj).rbj
	@@echo 'MAKE: $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
	@@$(LINK) $(LINKFLAGSDEBUG)$@@  $(RTSOBJECTSDEBUG) $(proj).rbj $(TARGETDIR)/libmlw-g.lib $(LINKENDFLAGS) -subsystem:windows
	@@bscmake /oruntime-g.bsc $(OBJECTSSBR) main_stub.sbr
endif

$(TARGETDIR)/test_fixup-g: $(TESTFIXOBJECTS) $(ARCHIVES)
	@@echo 'MAKE: $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
	@@$(LINK) $(LINKFLAGSDEBUG) $@@ $(TESTFIXOBJECTS) $(ARCHIVES) $(LIBRARIES) $(LINKENDFLAGSDEBUG)
 
ifeq "$(NTTYPE)" "TRUE"
else
$(ARCHIVES): force
	@@unset MAKEFLAGS && cd license/liclient && ./do-make
	@@unset MAKEFLAGS && cd license/licshar && ./do-make
endif

# === PSUEDO TARGETS ===

clean: force
	@@cd sha && $(MAKE) -f Makefile OS=$(OS) clean
ifeq "$(NTTYPE)" "TRUE"
	$(RM) -f $(OBJECTDIR)/* $(TARGETDIR)/* $(RUNTIMES:%=%.exe) runtime.rbj libmlw.dll libmlw-g.dll validate_license.dll
else
	@@unset MAKEFLAGS && cd license/liclient && ./do-make clean
	@@unset MAKEFLAGS && cd license/licshar && ./do-make clean
	$(RM) -f $(OBJECTDIR)/* core $(TARGETDIR)/* $(RUNTIMES)
endif

cleandepend: force
	$(RM) $(DEPENDDIR)/*

cleangen: force
	$(RMRECURSIVELY) gen/*

#the following creates a dynamic library version of the runtime
#on all platforms except SunOS, which just builds a normal runtime.

ifeq "$(OS)" "SunOS"
runtime: old-runtime
else
runtime: force $(TARGETDIR)/main
endif
ifeq "$(NTTYPE)" "TRUE"
	@@rm -f $@@.exe
	cp $(TARGETDIR)/main.exe $@@.exe
	cp $(TARGETDIR)/libmlw.dll .
else
	@@$(RM) $@@
	@@echo '#!/bin/sh' > $@@
	@@echo 'exec_dir=`dirname $$0`' >> $@@
	@@echo 'LD_LIBRARY_PATH=$$exec_dir/bin/${ARCH}/${OS}:$$LD_LIBRARY_PATH;export LD_LIBRARY_PATH'  >> $@@
	@@echo '$$exec_dir/bin/${ARCH}/${OS}/main $$*' >> $@@
	@@chmod 775 $@@
endif

old-runtime: force $(TARGETDIR)/old-main
ifeq "$(NTTYPE)" "TRUE"
	@@rm -f runtime.exe
	cp $(TARGETDIR)/main.exe runtime.exe
else
	@@$(RM) runtime
	$(LN) -s $(TARGETDIR)/main runtime
endif

ifeq "$(NTTYPE)" "TRUE"
runtime-windows: force $(TARGETDIR)/main-windows
	@@rm -f $@@.exe
	cp $(TARGETDIR)/main-windows.exe $@@.exe
	cp $(TARGETDIR)/libmlw.dll .
endif

ifeq "$(NTTYPE)" "TRUE"
else
runtime-static: force $(TARGETDIR)/main-static
	@@$(RM) $@@
	$(LN) -s $(TARGETDIR)/main-static $@@
endif

ifeq "$(OS)" "SunOS"
runtime-g: old-runtime-g
else
runtime-g: force $(TARGETDIR)/main-g
endif
ifeq "$(NTTYPE)" "TRUE"
	@@rm -f $@@.exe
	cp $(TARGETDIR)/main-g.exe $@@.exe
	cp $(TARGETDIR)/libmlw-g.dll .
else
	@@$(RM) $@@
	@@echo '#!/bin/sh' > $@@
	@@echo 'exec_dir=`dirname $$0`' >> $@@
	@@echo 'LD_LIBRARY_PATH=$$exec_dir/bin/${ARCH}/${OS}:$$LD_LIBRARY_PATH;export LD_LIBRARY_PATH'  >> $@@
	@@echo '$$exec_dir/bin/${ARCH}/${OS}/main-g $$*' >> $@@
	@@chmod 775 $@@
endif

old-runtime-g: force $(TARGETDIR)/old-main-g
ifeq "$(NTTYPE)" "TRUE"
	@@rm -f runtime-g.exe
	cp $(TARGETDIR)/main-g.exe runtime-g.exe
else
	@@$(RM) runtime-g
	$(LN) -s $(TARGETDIR)/main-g runtime-g
endif


ifeq "$(NTTYPE)" "TRUE"
runtime-windows-g: force $(TARGETDIR)/main-windows-g
	@@rm -f $@@.exe
	cp $(TARGETDIR)/main-windows-g.exe $@@.exe
	cp $(TARGETDIR)/libmlw-g.dll .
endif


mklic:	force $(TARGETDIR)/mlw_mklic
ifeq "$(NTTYPE)" "TRUE"
	@@rm -f $@@.exe
	cp $(TARGETDIR)/mlw_mklic.exe $@@.exe
else
	@@$(RM) $@@
	$(LN) -s $(TARGETDIR)/mlw_mklic $@@
endif

test_fixup-g: $(TARGETDIR)/test_fixup-g
	@@$(RM) $@@
	@@$(LN) -s $(TARGETDIR)/test_fixup-g $@@

distribution: $(DISTRIBUTED)
	cd $(DISTDIR) && $(RM) -rf bin
	$(MKDIR) $(DISTDIR)/bin $(MKDIREND)
	$(MKDIR) $(DISTDIR)/bin/$(ARCH) $(MKDIREND)
	$(MKDIR) $(DISTDIR)/bin/$(ARCH)/$(OS) $(MKDIREND)
	cp $(DISTRIBUTED) $(DISTDIR)/bin/$(ARCH)/$(OS)
	chmod o+r $(DISTDIR)/bin/$(ARCH)/$(OS)/*
	cd $(DISTDIR) && $(RM) -rf examples
	$(MKDIR) $(DISTDIR)/examples
	$(chmod_exec) $(DISTDIR)/examples

force:
@


1.116.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
# Revision 1.116  1999/03/12  15:11:16  mitchell
# [Bug #190526]
# Move splash advert to distribution
#
@


1.115
log
@[Bug #190506]
Remove old FI.
@
text
@d4 4
d396 1
a396 1
DISTRIBUTED	= $(DISTRIB) runtime.ico splash.bmp splash_free.bmp $(TARGETDIR)/validate_license.dll
d398 1
a398 1
DISTRIBUTED	= $(DISTRIB) splash.xpm splash_free.xpm mlworks_license
@


1.114
log
@[Bug #70242]
Link in sockets code
@
text
@d4 4
d258 1
a258 1
          environment event exceptions fi_call_stub fixup foreign_loader \
d260 1
a260 1
          libml license lists loader marshal mem modules \
a310 1
           fi_call_stub.c fi_call_stub.h \
d313 1
a313 1
INCLUDEDIRS    = gen/$(ARCH)/$(OS) gen src/OS/$(OS)/arch/$(ARCH) \
a320 3
FI_CALL_SIZE    = 32
# Maximum number of arguments to foreign foreign calls

a452 9
# bit of a bizarre rule here; when making the dependency files, gnumake
# needs the directory of the source file to exist in order to make it.
# In the case of the fi_call_stub.d dependency, this is gen/

$(DEPENDDIR)/%.d: misc/%_c_gen.c
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) gen $(MKDIREND)


a542 28
$(TARGETDIR)/fi_call_stub_h_gen: $(OBJECTDIR)/fi_call_stub_h_gen.o
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) $(LINKFLAGS)$@@.exe $< $(LINKENDFLAGS) -subsystem:console
else
	@@$(LINK) $(LINKFLAGS)$@@ $< $(LINKENDFLAGS)
endif

gen/fi_call_stub.h: $(TARGETDIR)/fi_call_stub_h_gen
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) gen $(MKDIREND)
	@@$< $(FI_CALL_SIZE) > $@@

$(TARGETDIR)/fi_call_stub_c_gen: $(OBJECTDIR)/fi_call_stub_c_gen.o
	@@echo 'MAKE: $< -> $@@'
	$(MKDIR) $(TARGETDIR) $(MKDIREND)
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) $(LINKFLAGS)$@@.exe $< $(LINKENDFLAGS) -subsystem:console 
else
	@@$(LINK) $(LINKFLAGS)$@@ $< $(LINKENDFLAGS)
endif

gen/fi_call_stub.c: $(TARGETDIR)/fi_call_stub_c_gen
	@@echo 'MAKE: $< -> $@@'
	$(MKDIR) gen $(MKDIREND)
	$< $(FI_CALL_SIZE) > $@@

a551 4
$(OBJECTDIR)/foreign_loader-g.o: gen/fi_call_stub.h
$(OBJECTDIR)/foreign_loader.o: gen/fi_call_stub.h
$(OBJECTDIR)/fi_call_stub.o: gen/fi_call_stub.h gen/fi_call_stub.c
$(OBJECTDIR)/fi_call_stub-g.o: gen/fi_call_stub.h gen/fi_call_stub.c
a568 1
  gen \
@


1.113
log
@[Bug #70207]
Add extra source file for start_mlworks to avoid code replication
@
text
@d4 4
d259 1
a259 1
          os signals stubs threads mach_state arch_code exec_delivery explore \
@


1.112
log
@[Bug #70154]
Delete libmlw.dll and libmlw-g.dll during make clean
@
text
@d4 4
d257 1
a257 1
	  mlw_ci mlw_ci_io localreals ml_utilities
@


1.111
log
@[Bug #70126]
Don't try to remove license server objects when under Win32
@
text
@d4 4
d817 1
a817 1
	$(RM) -f $(OBJECTDIR)/* $(TARGETDIR)/* $(RUNTIMES:%=%.exe) runtime.rbj
@


1.110
log
@[Bug #30457]
Differentiate between price not OS when indexing into license codes
@
text
@d4 4
a661 1
		
a811 2
	@@unset MAKEFLAGS && cd license/liclient && ./do-make clean
	@@unset MAKEFLAGS && cd license/licshar && ./do-make clean
d815 2
@


1.109
log
@[Bug #70126]
Make sure license server stuff cleaned up on make clean
@
text
@d4 4
d401 1
a401 1
MLWLICMODULES	= mlworks_license sha
d405 1
a405 1
MLWLICMODULES	= mlworks_license validate_license sha
d658 1
@


1.108
log
@[Bug #30435]
Make standalone and DLL-ised license validators
and distribute as appropriate to platform
@
text
@d4 5
a653 1
		
d803 3
@


1.107
log
@[Bug #30411]
Put spalsh pixmaps in right place.
@
text
@d4 4
d367 1
a367 1
DISTRIBUTED	= $(DISTRIB) runtime.ico splash.bmp splash_free.bmp
d369 1
a369 1
DISTRIBUTED	= $(DISTRIB) splash.xpm splash_free.xpm
d391 11
d414 1
d626 24
a913 1

@


1.106
log
@[Bug #30411]
Distribute splash screen bitmaps.
@
text
@d4 4
d213 5
a863 5
#
# Like most of this Makefile, the following target should be split
# into common and OS specific portions with the latter being moved
# off to OS/{Win32,Unix}/GNUmake
#
a866 1
ifeq "$(NTTYPE)" "TRUE"
a869 3
else
	$(TAR) cvf - $(DISTRIBUTED) | ( cd $(DISTDIR); $(TAR) xf - )
endif
@


1.105
log
@[Bug #30354]
Temporarily restore old FI to distribution
@
text
@d4 4
d354 1
a354 1
DISTRIBUTED	= $(DISTRIB) runtime.ico splash.bmp
d356 1
a356 1
DISTRIBUTED	= $(DISTRIB)
@


1.104
log
@[Bug #70086]
Add make_key_rights for windows NT registry key security
@
text
@d4 4
d212 1
a212 1
          environment event exceptions fixup \
d214 2
a215 2
          license lists loader marshal mem modules options \
          pack_words pervasives print profiler reals dtoa stacks state \
d222 1
a222 1
DLLMODULES= $(CMODULES) mlw_dll interface
d265 1
d268 1
a268 1
INCLUDEDIRS    = gen/$(ARCH)/$(OS) src/OS/$(OS)/arch/$(ARCH) \
d276 2
a333 1

d399 8
d498 27
d535 4
d556 1
d837 1
a850 1

d868 1
a868 1
	$(MKDIR) $(DISTDIR)/examples	
@


1.103
log
@[Bug #30242]
Add new file ml_utilities
@
text
@d4 4
a262 2
GENERATED      = $(GENFILES:%=gen/%)

d325 2
@


1.102
log
@[Bug #70025]
Reinsert a couple of @@ that accidentally got removed
@
text
@d4 4
d211 1
a211 1
	  mlw_ci mlw_ci_io localreals
@


1.101
log
@[Bug #20103]
Ensure main-windows is built using libmlw.dll
@
text
@d4 4
d418 1
a418 1
	$(COMPILE) /DRUNTIME_DLL $(COMPILEFLAGSDEBUG)$@@ $<
d644 1
a644 1
	$(LINK) $(LINKFLAGSDEBUG)$@@  $(RTSOBJECTSDEBUG) $(proj).rbj $(TARGETDIR)/libmlw-g.lib $(LINKENDFLAGS) -subsystem:console
@


1.100
log
@[Bug #30289]
Merging from MLWorks_10r3:
strip is in /usr/bin on Linux
@
text
@d4 5
d238 1
a238 1
DISTFILES	= main.exe main-windows.exe libmlw.dll libmlw.exp libmlw.lib
d414 1
a414 1
	@@$(COMPILE) /DRUNTIME_DLL $(COMPILEFLAGSDEBUG)$@@ $<
d586 1
a586 1
$(TARGETDIR)/main:  $(TARGETDIR)/libmlw $(RTSOBJECTS) $(proj).rbj
d615 1
a615 1
$(TARGETDIR)/main-windows: $(OBJECTS) $(proj).rbj
d618 1
a618 1
	@@$(LINK) $(LINKFLAGS)$@@ $(OBJECTS) $(proj).rbj $(LIBRARIES) $(LINKENDFLAGS) -subsystem:windows 
d666 1
a666 1
$(TARGETDIR)/main-windows-g: $(OBJECTSDEBUG) $(proj).rbj
d669 1
a669 2
	@@$(LINK) $(LINKFLAGSDEBUG)runtime-windows-g $(OBJECTSDEBUG) $(proj).rbj $(LIBRARIES) $(LINKENDFLAGSDEBUG) -subsystem:windows
	@@cp runtime-windows-g.exe $@@.exe
@


1.99
log
@[Bug #30306]
Removing incomplete FI from 2.0m2 distribution
@
text
@d4 4
d283 4
d288 1
@


1.98
log
@[Bug #30246]
Move dummy script creation from rts/GNUmakefile to scripts/Makefile
@
text
@d4 4
a798 11
	cd $(DISTDIR)/examples && $(RM) -rf foreign
	$(MKDIR) $(DISTDIR)/examples/foreign
	$(chmod_exec) $(DISTDIR)/examples/foreign
	../../tools/remove_log.sh < src/mlw_ci.h > $(DISTDIR)/examples/foreign/mlw_ci.h
	$(chmod_read_only) $(DISTDIR)/examples/foreign/mlw_ci.h
ifeq "$(NTTYPE)" "TRUE"
	-$(MKDIR) $(DISTDIR)/lib
	cd $(DISTDIR)/lib && $(RM) -f mlw_ci.lib
	cp bin/$(ARCH)/$(OS)/main.lib $(DISTDIR)/lib/mlw_ci.lib
	$(chmod_read_only) $(DISTDIR)/lib/mlw_ci.lib
endif
@


1.97
log
@[Bug #30185]
make main-windows and main-windows-g depend on $(proj).rbj to link to resources.
@
text
@d4 4
a787 4
	cat NUL: > $(DISTDIR)/bin/$(ARCH)/$(OS)/mlbatch.bat
	cat NUL: > $(DISTDIR)/bin/$(ARCH)/$(OS)/mlpervasive.bat
	cat NUL: > $(DISTDIR)/bin/$(ARCH)/$(OS)/mlimage-windows.bat
	cat NUL: > $(DISTDIR)/bin/$(ARCH)/$(OS)/mlimage-console.bat
@


1.96
log
@[Bug #30059]
Fix build problem - generate __control_names.sml although only used on Win32 platforms.
@
text
@d4 4
d596 1
a596 1
	@@$(LINK) $(LINKFLAGS)$@@ $(OBJECTS) $(LIBRARIES) $(LINKENDFLAGS) -subsystem:windows 
d647 1
a647 1
	@@$(LINK) $(LINKFLAGSDEBUG)runtime-windows-g $(OBJECTSDEBUG) $(LIBRARIES) $(LINKENDFLAGSDEBUG) -subsystem:windows
@


1.96.1.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@a3 4
# Revision 1.96  1997/10/29  09:40:02  johnh
# [Bug #30059]
# Fix build problem - generate __control_names.sml although only used on Win32 platforms.
#
@


1.95
log
@[Bug #30059]
Add Win32 specific generated files.
@
text
@d4 4
d222 1
a222 1
COMMON_GENFILES = objectfile.sml __objectfile.sml \
d225 1
a229 6
ifeq "$(NTTYPE)" "TRUE"
GENFILES       = $(COMMON_GENFILES) $(ARCH)/$(OS)/__control_names.sml
else
GENFILES       = $(COMMON_GENFILES)
endif

d427 4
@


1.94
log
@[Bug #7015]
Modify definition of RMRECURSIVELY for Win32
@
text
@d4 4
d218 1
a218 1
GENFILES = objectfile.sml __objectfile.sml \
d224 6
@


1.93
log
@[Bug #30044]
Removed main-static from the default list of targets and distributed files.
@
text
@d4 4
d235 1
d245 1
a254 1
RMRECURSIVELY   = /bin/rm -r -f
@


1.92
log
@[Bug #30279]
Add localreals implementation
This corrects some defects in the linux pow function
@
text
@d4 5
d199 1
a199 1
TARGETFILES	= main main-g main-static
a203 1
TARGETS 	= $(TARGETFILES:%=$(TARGETDIR)/%)
d207 1
a207 7
DISTFILES	= main main-static libmlw.so
endif
DISTRIB		= $(DISTFILES:%=$(TARGETDIR)/%)
ifeq "$(NTTYPE)" "TRUE"
DISTRIBUTED	= $(DISTRIB) runtime.ico splash.bmp
else
DISTRIBUTED	= $(DISTRIB)
d288 7
@


1.91
log
@[Bug #70004]
Produce all generated files required to build the rts
in arch/OS specific directories. Remove gen from all vpaths
and include paths. Modify the general rule for %.h (which is
only used for offsets.h) to build its result in gen/$(ARCH)/$(OS)
Modify all explicit dependencies on offsets.h accordingly
@
text
@d4 8
d165 1
a165 1
	  mlw_ci mlw_ci_io
@


1.91.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 8
# Revision 1.91  1997/09/10  14:54:42  jont
# [Bug #70004]
# Produce all generated files required to build the rts
# in arch/OS specific directories. Remove gen from all vpaths
# and include paths. Modify the general rule for %.h (which is
# only used for offsets.h) to build its result in gen/$(ARCH)/$(OS)
# Modify all explicit dependencies on offsets.h accordingly
#
@


1.91.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 8
# Revision 1.91  1997/09/10  14:54:42  jont
# [Bug #70004]
# Produce all generated files required to build the rts
# in arch/OS specific directories. Remove gen from all vpaths
# and include paths. Modify the general rule for %.h (which is
# only used for offsets.h) to build its result in gen/$(ARCH)/$(OS)
# Modify all explicit dependencies on offsets.h accordingly
#
@


1.90
log
@[Bug #30227]
Getting mlw_mklic to make recursively under Windows
@
text
@d4 4
d207 1
a207 1
           offsets.h \
d213 1
a213 1
INCLUDEDIRS    = gen gen/$(ARCH)/$(OS) src/OS/$(OS)/arch/$(ARCH) \
d394 1
a394 1
gen/%.h: awk/%.awk src/implicit.h
d396 2
a397 2
	@@$(MKDIR) gen $(MKDIREND)
	@@$(AWK) -f awk/$*.awk < src/implicit.h > gen/$*.h
d421 4
a424 4
$(OBJECTDIR)/interface.o: gen/offsets.h gen/$(ARCH)/$(OS)/asm_offsets.h
$(OBJECTDIR)/interface-g.o: gen/offsets.h gen/$(ARCH)/$(OS)/asm_offsets.h
$(OBJECTDIR)/poly_equal.o: gen/offsets.h
$(OBJECTDIR)/poly_equal-g.o: gen/offsets.h
a441 1
  gen \
d447 1
a447 1
vpath %.h gen misc
d469 1
a469 1
  gen
@


1.89
log
@[Bug #30227]
New cross-platform license generator is made recursively
and from rts/sha not rts/src/sha due to hope restrictions
@
text
@d4 5
d302 4
a305 5
	cd sha && $(MAKE) -f Makefile mlw_mklic
	mv $(SHAREGOBJECTS) $(OBJECTDIR)
	mv sha/mlw_mklic $(TARGETDIR)
ifeq  "$(NTTYPE)" "FALSE"
	/usr/ccs/bin/strip $@@
d307 2
@


1.88
log
@[Bug #20098]
Copy the win32 dlls into rts to avoid path problems
@
text
@d4 4
d207 1
a207 1
		 license/liclient/export src/sha
d290 12
a301 6
REGMODULES	= register sha register_common
REGOBJECTS	= $(REGMODULES:%=$(OBJECTDIR)/%.o)

$(TARGETDIR)/register:	$(REGOBJECTS)
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) $(LINKFLAGS)$@@ $(REGOBJECTS) $(LIBRARIES) $(LINKENDFLAGS) -subsystem:console
a302 2
	@@$(LINK) $(LINKFLAGS)$@@ $(REGOBJECTS) $(LIBRARIES) $(LINKENDFLAGS)
	@@$(STRIP) $@@
d433 1
a433 1
  src/sha \
d714 1
a714 1
mklic:	force $(TARGETDIR)/register
d717 1
a717 1
	cp $(TARGETDIR)/register.exe $@@.exe
d720 1
a720 1
	$(LN) -s $(TARGETDIR)/register $@@
@


1.87
log
@[Bug #50024]
Make a runtime script to get the LD_LIBRARY_PATH right automatically
@
text
@d4 4
d263 1
a263 1
OBJECTSSBR	= $(CMODULES:%=%.sbr) main.sbr
d567 1
a567 1
	@@bscmake /oruntime-g.bsc $(OBJECTSSBR)
d583 1
a583 1
	@@bscmake /oruntime-g.bsc $(OBJECTSSBR)
d597 1
a597 1
	@@bscmake /oruntime-g.bsc $(OBJECTSSBR)
@


1.86
log
@[Bug #30045]
Add targets for the new DLLized runtime
@
text
@d4 4
d634 1
d637 5
a641 1
	$(LN) -s $(TARGETDIR)/main $@@ 
d657 1
d675 1
d678 5
a682 1
	$(LN) -s $(TARGETDIR)/main-g $@@
d699 1
@


1.85
log
@[Bug #30029]
Add mlw_c_io
@
text
@d4 4
d131 1
a131 1
          license lists loader main marshal mem modules options \
d138 11
a148 1
MODULES	= $(CMODULES) interface
d172 1
a172 1
DISTFILES	= main.exe main-windows.exe
d174 1
a174 1
DISTFILES	= main main-static
d250 2
d253 4
a256 1
OBJECTSSBR	= $(CMODULES:%=%.sbr)
d322 5
d332 5
d457 21
d479 1
a479 1
$(TARGETDIR)/main: $(OBJECTS) $(proj).rbj
d481 1
a481 1
$(TARGETDIR)/main: $(OBJECTS) $(ARCHIVES)
d486 2
a487 1
	@@$(LINK) $(LINKFLAGS)$@@ $(OBJECTS) $(LIBRARIES) $(LINKENDFLAGS) -subsystem:console
d489 25
a513 1
	@@$(LINK) $(LINKFLAGS)$@@ $(OBJECTS) $(ARCHIVES) $(LIBRARIES) $(LINKENDFLAGS)
d517 15
d548 2
d551 1
a551 1
$(TARGETDIR)/main-g: $(OBJECTSDEBUG) $(proj).rbj
d553 1
a553 1
$(TARGETDIR)/main-g: $(OBJECTSDEBUG) $(ARCHIVES)
d558 1
a558 2
	@@$(LINK) $(LINKFLAGSDEBUG)runtime-g  $(OBJECTSDEBUG) $(LIBRARIES) $(LINKENDFLAGSDEBUG) -subsystem:console
	@@cp runtime-g.exe $@@.exe
d561 1
a561 1
	@@$(LINK) $(LINKFLAGSDEBUG)$@@ $(OBJECTSDEBUG) $(ARCHIVES) $(LIBRARIES) $(LINKENDFLAGSDEBUG)
d564 19
d619 6
d626 1
d635 9
d657 3
d661 1
d669 10
@


1.84
log
@[Bug #1816]
Allow for possibilty that gcc may write object file direct to
standard .o file rather than .obj file under Win32.
@
text
@d4 5
d131 2
a132 1
          export time_date os_io_poll os_errors mlw_timer sha mlw_ci_os mlw_ci
@


1.83
log
@[Bug #30121]
Get the new FI into the distribution.
@
text
@d4 4
d312 1
a312 1
	@@mv $(OBJECTDIR)/$*.obj $@@
d320 1
a320 1
	@@mv $(OBJECTDIR)/$*-g.obj $@@
@


1.82
log
@Request 30030: add mlw_ci_os and mlw_ci to list of modules.
@
text
@d4 3
d116 1
a116 1
          environment event exceptions fi_call_stub fixup foreign_loader \
d118 2
a119 2
          libml license lists loader main marshal mem modules \
          options pack_words pervasives print profiler reals dtoa stacks state \
a163 1
           fi_call_stub.c fi_call_stub.h \
a175 2
FI_CALL_SIZE    = 32
# Maximum number of arguments to foreign foreign calls
d204 3
a272 8
# bit of a bizarre rule here; when making the dependency files, gnumake
# needs the directory of the source file to exist in order to make it.
# In the case of the fi_call_stub.d dependency, this is gen/

$(DEPENDDIR)/%.d: misc/%_c_gen.c
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) gen $(MKDIREND)

a349 27
$(TARGETDIR)/fi_call_stub_h_gen: $(OBJECTDIR)/fi_call_stub_h_gen.o
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) $(LINKFLAGS)$@@.exe $< $(LINKENDFLAGS) -subsystem:console
else
	@@$(LINK) $(LINKFLAGS)$@@ $< $(LINKENDFLAGS)
endif

gen/fi_call_stub.h: $(TARGETDIR)/fi_call_stub_h_gen
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) gen $(MKDIREND)
	@@$< $(FI_CALL_SIZE) > $@@

$(TARGETDIR)/fi_call_stub_c_gen: $(OBJECTDIR)/fi_call_stub_c_gen.o
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) $(TARGETDIR) $(MKDIREND)
ifeq "$(NTTYPE)" "TRUE"
	@@$(LINK) $(LINKFLAGS)$@@.exe $< $(LINKENDFLAGS) -subsystem:console 
else
	@@$(LINK) $(LINKFLAGS)$@@ $< $(LINKENDFLAGS)
endif

gen/fi_call_stub.c: $(TARGETDIR)/fi_call_stub_c_gen
	@@echo 'MAKE: $< -> $@@'
	@@$(MKDIR) gen $(MKDIREND)
	@@$< $(FI_CALL_SIZE) > $@@
a359 4
$(OBJECTDIR)/foreign_loader-g.o: gen/fi_call_stub.h
$(OBJECTDIR)/foreign_loader.o: gen/fi_call_stub.h
$(OBJECTDIR)/fi_call_stub.o: gen/fi_call_stub.h gen/fi_call_stub.c
$(OBJECTDIR)/fi_call_stub-g.o: gen/fi_call_stub.h gen/fi_call_stub.c
d549 6
d570 15
@


1.81
log
@Adding src/OS/$OS_TYPE/arch/$ARCH to path
@
text
@d4 3
d119 1
a119 1
          export time_date os_io_poll os_errors mlw_timer sha
@


1.80
log
@[Bug #0]
Fix problems creating mlimage-windows.bat and friends under new make
@
text
@d4 4
d164 2
a165 1
                 src/OS/$(OS) src/OS/$(OS_TYPE) src/arch/$(ARCH) src \
d406 1
@


1.80.1.1
log
@branched from 1.80
@
text
@a3 4
# Revision 1.80  1997/04/07  10:28:37  jont
# [Bug #0]
# Fix problems creating mlimage-windows.bat and friends under new make
#
@


1.80.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
# Revision 1.80.1.1  1997/05/12  10:41:18  hope
# branched from 1.80
#
@


1.80.1.1.3.2
log
@[Bug #30279]
Merging from trunk:
Add localreals implementation
This corrects some defects in the linux pow function
involving infinity
@
text
@a3 3
# Revision 1.80.1.1.3.1  1997/09/09  14:16:30  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
#
d119 1
a119 1
          export time_date os_io_poll os_errors mlw_timer sha localreals
@


1.80.1.1.3.3
log
@[Bug #30289]
Linux strip is in /usr/bin not /bin
@
text
@a3 7
# Revision 1.80.1.1.3.2  1997/10/10  14:57:52  jkbrook
# [Bug #30279]
# Merging from trunk:
# Add localreals implementation
# This corrects some defects in the linux pow function
# involving infinity
#
a203 4

ifeq "$(OS)" "Linux"
STRIP		= /usr/bin/strip
else
a204 1
endif
@


1.80.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
# Revision 1.80.1.1  1997/05/12  10:41:18  hope
# branched from 1.80
#
@


1.80.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
# Revision 1.80.1.1  1997/05/12  10:41:18  hope
# branched from 1.80
#
@


1.80.1.1.1.2
log
@[Bug #30190]
Removed foreign examples from distribution.
@
text
@a3 3
# Revision 1.80.1.1.1.1  1997/07/28  18:27:18  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
d113 1
a113 1
          environment event exceptions fixup \
d115 1
a115 1
          license lists loader main marshal mem modules \
d161 1
d173 2
d354 28
d391 5
@


1.80.1.1.1.3
log
@[Bug #30191]
Removed mlimage-console and mlimage-windows from student edition.
@
text
@a3 4
# Revision 1.80.1.1.1.2  1997/08/06  13:34:57  daveb
# [Bug #30190]
# Removed foreign examples from distribution.
#
d559 2
@


1.80.1.1.1.4
log
@[Bug #30198]
Removed mlbatch.bat from Student Edition.
@
text
@a3 4
# Revision 1.80.1.1.1.3  1997/08/07  13:19:18  daveb
# [Bug #30191]
# Removed mlimage-console and mlimage-windows from student edition.
#
d561 1
@


1.80.1.1.1.5
log
@[Bug #30191]
Restored mlimage-console.bat since users can still create an image
by saving a session in 1.1
@
text
@a3 4
# Revision 1.80.1.1.1.4  1997/08/08  10:47:52  daveb
# [Bug #30198]
# Removed mlbatch.bat from Student Edition.
#
a565 1
	cat NUL: > $(DISTDIR)/bin/$(ARCH)/$(OS)/mlimage-console.bat
@


1.80.1.1.1.6
log
@[Bug #30227]
Merging into 1.1:
Integrating new license-generator compound HQNsha into build
@
text
@a3 5
# Revision 1.80.1.1.1.5  1997/08/22  09:03:55  jkbrook
# [Bug #30191]
# Restored mlimage-console.bat since users can still create an image
# by saving a session in 1.1
#
d182 1
a182 1
		 license/liclient/export sha
d257 6
a262 12
REGMODULES	= sha mlw_mklic
SHAREGOBJECTS   = $(REGMODULES:%=sha/%.o)
MLWREGOBJECTS	= $(REGMODULES:%=$(OBJECTDIR)/%.o)

# the new license generator is made recursively

$(TARGETDIR)/mlw_mklic: $(MLWREGOBJECTS)
	cd sha && $(MAKE) -f Makefile mlw_mklic
	mv $(SHAREGOBJECTS) $(OBJECTDIR)
	mv sha/mlw_mklic $(TARGETDIR)
ifeq  "$(NTTYPE)" "FALSE"
	/usr/ccs/bin/strip $@@
d264 2
d391 1
a391 1
  sha \
d549 1
a549 1
mklic:	force $(TARGETDIR)/mlw_mklic
d552 1
a552 1
	cp $(TARGETDIR)/mlw_mklic.exe $@@.exe
d555 1
a555 1
	$(LN) -s $(TARGETDIR)/mlw_mklic $@@
@


1.80.1.1.1.7
log
@[Bug #30227]
Merging into 1.1:
Fixing recursive make of mlw_mklic under Windows
@
text
@a3 5
# Revision 1.80.1.1.1.6  1997/09/04  10:22:07  jkbrook
# [Bug #30227]
# Merging into 1.1:
# Integrating new license-generator compound HQNsha into build
#
d269 5
a273 4
	@@cd sha && $(MAKE) -f Makefile OS=$(OS) mlw_mklic
	@@mv $(SHAREGOBJECTS) $(OBJECTDIR)
ifeq  "$(NTTYPE)" "TRUE"
	@@mv sha/mlw_mklic.exe $(TARGETDIR)
a274 2
	@@mv sha/mlw_mklic $(TARGETDIR)
	@@$(STRIP) $@@
@


1.80.1.1.1.7.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 5
# Revision 1.80.1.1.1.7  1997/09/04  11:16:38  jkbrook
# [Bug #30227]
# Merging into 1.1:
# Fixing recursive make of mlw_mklic under Windows
#
@


1.80.1.1.1.7.1.2
log
@[Bug #30279]
Merging from trunk:
Adding localreals files containing Linux-specific power functions
on Linux and dummies on all other platforms
@
text
@a3 3
# Revision 1.80.1.1.1.7.1.1  1997/10/07  11:53:20  jkbrook
# branched from MLWorks_11 for label MLWorks_11r1
#
d149 1
a149 1
          export time_date os_io_poll os_errors mlw_timer sha localreals
@


1.80.1.1.1.7.1.3
log
@[Bug #30289]
Merging from MLWorks_10r3:
Linux strip is in /usr/bin
@
text
@a3 6
# Revision 1.80.1.1.1.7.1.2  1997/10/10  17:05:31  jkbrook
# [Bug #30279]
# Merging from trunk:
# Adding localreals files containing Linux-specific power functions
# on Linux and dummies on all other platforms
#
a230 4

ifeq "$(OS)" "Linux"
STRIP		= /usr/bin/strip
else
a231 1
endif
@


1.79
log
@[Bug #0]
Make generated stuff first
@
text
@d4 4
d583 4
a586 4
	cat NUL: > $(DISTDIR)\bin\$(ARCH)\$(OS)\mlbatch.bat
	cat NUL: > $(DISTDIR)\bin\$(ARCH)\$(OS)\mlpervasive.bat
	cat NUL: > $(DISTDIR)\bin\$(ARCH)\$(OS)\mlimage-windows.bat
	cat NUL: > $(DISTDIR)\bin\$(ARCH)\$(OS)\mlimage-console.bat
@


1.78
log
@Adding dtoa.c
@
text
@d4 3
d229 1
a229 1
all: $(RUNTIMES) $(GENERATED)
a280 1
	
@


1.77
log
@Change make rules for test_fixup, so that it gets the license archive
for linking.
@
text
@d4 4
d102 1
a102 1
          options pack_words pervasives print profiler reals stacks state \
@


1.76
log
@[Bug #1890]
Removed all recursive makes, replacing with an equivalent but better mechanism
@
text
@d4 4
d489 1
a489 1
$(TARGETDIR)/test_fixup-g: $(TESTFIXOBJECTS)
d492 1
a492 1
	@@$(LINK) $(LINKFLAGSDEBUG) $@@ $(TESTFIXOBJECTS) $(LIBRARIES) $(LINKENDFLAGSDEBUG)
@


1.75
log
@[Bug #1816]
[Bug #1816]
Modify to use improved PC make
@
text
@d4 4
a498 3
doc: force
	cd doc && $(MAKE) $(MAKEFLAGS)

d501 1
a501 1
	$(RM) $(OBJECTDIR)/* $(TARGETDIR)/* $(RUNTIMES:%=%.exe) runtime.rbj
d503 1
a503 1
	$(RM) $(OBJECTDIR)/* core $(TARGETDIR)/* $(RUNTIMES)
d512 1
a512 2
runtime: force
	$(MAKE) $(MAKEFLAGS) $(TARGETDIR)/main
d515 1
a515 1
	@@cp $(TARGETDIR)/main.exe $@@.exe
d518 1
a518 1
	@@$(LN) -s $(TARGETDIR)/main $@@ 
d522 1
a522 2
runtime-windows: force
	$(MAKE) $(MAKEFLAGS) $(TARGETDIR)/main-windows
d524 1
a524 1
	@@cp $(TARGETDIR)/main-windows.exe $@@.exe
d529 1
a529 2
runtime-static: force
	$(MAKE) $(MAKEFLAGS) $(TARGETDIR)/main-static
d531 1
a531 1
	@@$(LN) -s $(TARGETDIR)/main-static $@@
d534 1
a534 2
runtime-g: force
	$(MAKE) $(MAKEFLAGS) $(TARGETDIR)/main-g
d537 1
a537 1
	@@cp $(TARGETDIR)/main-g.exe $@@.exe
d540 1
a540 1
	@@$(LN) -s $(TARGETDIR)/main-g $@@
d544 1
a544 2
runtime-windows-g: force
	$(MAKE) $(MAKEFLAGS) $(TARGETDIR)/main-windows-g
d546 1
a546 1
	@@cp $(TARGETDIR)/main-windows-g.exe $@@.exe
d549 1
a549 2
mklic:	force
	$(MAKE) $(MAKEFLAGS) $(TARGETDIR)/register
d552 1
a552 1
	@@cp $(TARGETDIR)/register.exe $@@.exe
d555 1
a555 1
	@@$(LN) -s $(TARGETDIR)/register $@@
@


1.74
log
@[Bug #1816]
Remove expiry from list of modules
@
text
@d4 4
a340 3
ifeq "$(NTTYPE)" "TRUE"
	@@$(NTTARGETDIR)\fi_call_stub_h_gen $(FI_CALL_SIZE) > $@@
else
a341 1
endif
a354 3
ifeq "$(NTTYPE)" "TRUE"
	@@$(NTTARGETDIR)\fi_call_stub_c_gen $(FI_CALL_SIZE) > $@@
else
a355 1
endif
a450 1
endif
a451 2
ifeq "$(NTTYPE)" "TRUE"
else
d512 1
a512 1
	$(MAKE) $(TARGETDIR)/main
d523 1
a523 1
	$(MAKE) $(TARGETDIR)/main-windows
d531 1
a531 1
	$(MAKE) $(TARGETDIR)/main-static
d537 1
a537 1
	$(MAKE) $(TARGETDIR)/main-g
d548 1
a548 1
	$(MAKE) $(TARGETDIR)/main-windows-g
d554 1
a554 1
	$(MAKE) $(TARGETDIR)/register
d568 1
a568 1
	$(RM) -rf $(DISTDIR)/bin
d575 3
a577 3
	cat NUL: > $(DISTDIR)\bin\\$(ARCH)\\$(OS)\\mlpervasive.bat
	cat NUL: > $(DISTDIR)\bin\\$(ARCH)\\$(OS)\\mlimage-windows.bat
	cat NUL: > $(DISTDIR)\bin\\$(ARCH)\\$(OS)\\mlimage-console.bat
@


1.73
log
@[Bug #1809]
Stop make clean deleting runtime.res, which is no longer a generated file
@
text
@d4 4
d83 1
a83 1
          environment event exceptions expiry fi_call_stub fixup foreign_loader \
@


1.72
log
@[Bug #0]
Ensure splash.bmp is added to Win32 distribution
@
text
@d4 4
d503 1
a503 1
	$(RM) $(OBJECTDIR)/* $(TARGETDIR)/* $(RUNTIMES:%=%.exe) runtime.res runtime.rbj
@


1.72.4.1
log
@branched from 1.72
@
text
@a3 4
# Revision 1.72  1996/11/20  11:10:45  jont
# [Bug #0]
# Ensure splash.bmp is added to Win32 distribution
#
@


1.72.3.1
log
@branched from 1.72
@
text
@a3 4
# Revision 1.72  1996/11/20  11:10:45  jont
# [Bug #0]
# Ensure splash.bmp is added to Win32 distribution
#
@


1.72.3.1.1.1
log
@branched from 1.72.3.1
@
text
@a3 3
# Revision 1.72.3.1  1996/12/17  17:54:19  hope
# branched from 1.72
#
@


1.72.2.1
log
@branched from 1.72
@
text
@a3 4
# Revision 1.72  1996/11/20  11:10:45  jont
# [Bug #0]
# Ensure splash.bmp is added to Win32 distribution
#
@


1.72.1.1
log
@branched from 1.72
@
text
@a3 4
# Revision 1.72  1996/11/20  11:10:45  jont
# [Bug #0]
# Ensure splash.bmp is added to Win32 distribution
#
@


1.71
log
@Add stuff to make the registerer
@
text
@d4 3
d113 1
a113 1
DISTRIBUTED	= $(DISTRIB) runtime.hlp runtime.ico
@


1.70
log
@SUpupport for tregistration -stule yloe licencsing:
Added src/sha to INCLUDE directories and vpath; added sha to MODULES.
@
text
@d4 4
d204 11
d496 1
a496 1
	$(RM) $(OBJECTDIR)/* core $(TARGETDIR)/* $(RUNTIMES:%=%.exe) runtime.res runtime.rbj
d547 10
@


1.70.1.1
log
@branched from 1.70
@
text
@a3 4
# Revision 1.70  1996/11/07  14:57:06  daveb
# SUpupport for tregistration -stule yloe licencsing:
# Added src/sha to INCLUDE directories and vpath; added sha to MODULES.
#
@


1.70.1.1.1.1
log
@branched from 1.70.1.1
@
text
@a3 3
# Revision 1.70.1.1  1996/11/14  12:58:16  hope
# branched from 1.70
#
@


1.69
log
@Modifications mlimage splits into mlimage-windows and mlimage-console
@
text
@d4 3
d74 1
a74 1
          export time_date os_io_poll os_errors mlw_timer
d123 1
a123 1
		 license/liclient/export
d365 1
@


1.68
log
@As discussed in mlworks.mail.{8739,8740}, change do-make to ./do-make
so that it is not necessary for . to be your path.
@
text
@d4 4
d543 2
a544 1
	cat NUL: > $(DISTDIR)\bin\\$(ARCH)\\$(OS)\\mlimage.bat
@


1.67
log
@Merging in license server stuff
@
text
@d4 3
d462 2
a463 2
	@@unset MAKEFLAGS && cd license/liclient && do-make
	@@unset MAKEFLAGS && cd license/licshar && do-make
@


1.66
log
@Add dummy files for the scripts under NT so install process will remove them properly
@
text
@d4 9
d112 2
a113 1
                  src/OS/$(OS) src/OS/$(OS_TYPE) src/arch/$(ARCH) src
d148 7
d170 4
d397 1
a397 1
$(TARGETDIR)/main: $(OBJECTS)
d404 1
a404 1
	@@$(LINK) $(LINKFLAGS)$@@ $(OBJECTS) $(LIBRARIES) $(LINKENDFLAGS)
a409 3
else
$(TARGETDIR)/main-windows: $(OBJECTS)
endif
a411 1
ifeq "$(NTTYPE)" "TRUE"
a412 2
else
	@@echo Don't know how to make main-windows
a415 1
$(TARGETDIR)/main-static: $(OBJECTSSTATIC) $(proj).rbj
d417 1
a417 1
$(TARGETDIR)/main-static: $(OBJECTSSTATIC)
a420 1
	@@echo Don't know how to make main-static
d423 1
a423 1
	@@$(LINK) -Xlinker -Bstatic $(LINKFLAGS)$@@ $(OBJECTSSTATIC) $(LIBRARIESSTATIC) $(LINKENDFLAGS)
d430 1
a430 1
$(TARGETDIR)/main-g: $(OBJECTSDEBUG)
d439 1
a439 1
	@@$(LINK) $(LINKFLAGSDEBUG)$@@ $(OBJECTSDEBUG) $(LIBRARIES) $(LINKENDFLAGSDEBUG)
a443 3
else
$(TARGETDIR)/main-windows-g: $(OBJECTSDEBUG)
endif
a445 1
ifeq "$(NTTYPE)" "TRUE"
a448 2
else
	@@echo Don't know how to make runtime-windows-g
d456 7
d491 1
a493 1
ifeq "$(NTTYPE)" "TRUE"
a495 2
else
	@@echo Don't know how to make runtime-windows
d498 2
a501 3
ifeq "$(NTTYPE)" "TRUE"
	@@echo Don't know how to make runtime-static
else
d516 1
a518 1
ifeq "$(NTTYPE)" "TRUE"
a520 2
else
	@@echo Don't know how to make runtime-windows-g
@


1.66.3.1
log
@branched from 1.66
@
text
@a3 3
# Revision 1.66  1996/07/02  15:40:00  jont
# Add dummy files for the scripts under NT so install process will remove them properly
#
@


1.66.2.1
log
@branched from 1.66
@
text
@a3 3
# Revision 1.66  1996/07/02  15:40:00  jont
# Add dummy files for the scripts under NT so install process will remove them properly
#
@


1.66.2.2
log
@Add license serving stuff
@
text
@a3 3
# Revision 1.66.2.1  1996/10/07  16:13:05  hope
# branched from 1.66
#
d106 1
a106 2
                 src/OS/$(OS) src/OS/$(OS_TYPE) src/arch/$(ARCH) src \
		 license/liclient/export
a140 4
# Some stuff to deal with building the license server interface

BUILD_MACH := $(shell /usr/local/bin/class)

a155 1
ARCHIVES	= license/liclient/$(BUILD_MACH)/liclient.a license/licshar/$(BUILD_MACH)/licshar.a
d379 1
a379 1
$(TARGETDIR)/main: $(OBJECTS) $(ARCHIVES)
d386 1
a386 1
	@@$(LINK) $(LINKFLAGS)$@@ $(OBJECTS) $(ARCHIVES) $(LIBRARIES) $(LINKENDFLAGS)
d392 3
d397 1
d399 2
d404 1
d406 1
a406 1
$(TARGETDIR)/main-static: $(OBJECTSSTATIC) $(ARCHIVES)
d410 1
d413 1
a413 1
	@@$(LINK) -Xlinker -Bstatic $(LINKFLAGS)$@@ $(OBJECTSSTATIC) $(ARCHIVES) $(LIBRARIESSTATIC) $(LINKENDFLAGS)
d420 1
a420 1
$(TARGETDIR)/main-g: $(OBJECTSDEBUG) $(ARCHIVES)
d429 1
a429 1
	@@$(LINK) $(LINKFLAGSDEBUG)$@@ $(OBJECTSDEBUG) $(ARCHIVES) $(LIBRARIES) $(LINKENDFLAGSDEBUG)
d434 2
d443 2
a451 4
$(ARCHIVES): force
	@@unset MAKEFLAGS && cd license/liclient && do-make
	@@unset MAKEFLAGS && cd license/licshar && do-make

@


1.66.1.1
log
@branched from 1.66
@
text
@a3 3
# Revision 1.66  1996/07/02  15:40:00  jont
# Add dummy files for the scripts under NT so install process will remove them properly
#
@


1.65
log
@Removed unnecessary dependnecies on libml.h ...
@
text
@d4 3
d525 3
@


1.64
log
@Adding expiry to CMODULES.
@
text
@d4 3
d78 1
a78 1
DISTFILES	= main.exe main-windows.exe libml.h
d80 1
a80 1
DISTFILES	= main main-static libml.h
a298 10
endif

$(TARGETDIR)/libml.h: ../foreign/auxfiles/libml.h
	@@echo 'MAKE: $< -> $@@'
ifeq "$(NTTYPE)" "TRUE"
	@@$(RM) -f $(NTTARGETDIR)\\libml.h
	@@cp ..\\foreign\\auxfiles\\libml.h $(NTTARGETDIR)\\libml.h 
else
	@@$(RM) -f $(TARGETDIR)/libml.h
	@@cp -p ../foreign/auxfiles/libml.h $(TARGETDIR)/libml.h 
@


1.63
log
@Sort out problems with libml.h in NT distribution
@
text
@d4 3
d43 1
a43 1
          environment event exceptions fi_call_stub fixup foreign_loader \
@


1.62
log
@Ensure distributed files are made suitably readable
@
text
@d4 3
d69 1
a69 1
NTTARGETDIR 	= bin\$(ARCH)\$(OS)
d298 2
a299 2
	@@$(RM) $(NTTARGETDIR)\libml.h
	@@copy ..\foreign\auxfiles\libml.h $(NTTARGETDIR)\libml.h 
@


1.61
log
@Adding src/foreign/auxfiles/libml.h to distribution ...
@
text
@d4 3
d526 1
@


1.60
log
@Fix the problem with the dependency on the generated file os_errors.c
which make it impossible to do a build in a clean directory without
manually creating gen/$(ARCH)/$(OS).
@
text
@d4 5
d66 1
a66 1
DISTFILES	= main.exe main-windows.exe
d68 1
a68 1
DISTFILES	= main main-static
d287 10
@


1.59
log
@Add support for Timer as defined in March 1996 basis definition.
@
text
@d4 3
d170 10
a179 1
$(DEPENDDIR)/%.d: gen/$(ARCH)/$(OS)/%.c
d181 4
a184 1
	@@$(MKDIR) gen/$(ARCH)/$(OS) $(MKDIREND)
@


1.58
log
@Add generated file os_errors to sources and modify vpath to pick it up
from rts/gen/$(ARCH)/$(OS).
@
text
@d4 4
d32 1
a32 1
          export time_date os_io_poll os_errors
@


1.57
log
@Fix problem building main-windows
@
text
@d4 3
d28 1
a28 1
          export time_date os_io_poll
d70 2
a71 1
           fi_call_stub.c fi_call_stub.h
d162 4
d279 1
d292 4
a295 1
  src gen misc
@


1.56
log
@Make "include" and "define" C compiler options more portable.
@
text
@d4 3
d344 1
a344 1
	@@$(LINK) $(LINKFLAGS)$@@ $(OBJECTS) $(LINKENDFLAGS) -subsystem:windows 
d386 1
a386 1
	@@$(LINK) $(LINKFLAGSDEBUG) runtime-windows-g $(OBJECTSDEBUG) $(LIBRARIES) $(LINKENDFLAGSDEBUG) -subsystem:windows
@


1.55
log
@Add time_date and os_io_poll to the list of source files.
@
text
@d3 4
a6 1
# $Log$
d37 1
d43 1
d67 6
a72 39
INCLUDES        = -Igen -Igen/$(ARCH)/$(OS) -Isrc/OS/$(OS)/arch/$(ARCH) \
                  -Isrc/OS/$(OS) -Isrc/OS/$(OS_TYPE) \
                  -Isrc/arch/$(ARCH) -Isrc -Iinclude
DEFINES         = -DLICENSE
DEFINESDEBUG    = -DDEBUG -DDIAGNOSTICS -DCOLLECT_STATS -DEXPLORER
LIBRARIES       = -lm
LIBRARIESSTATIC = $(LIBRARIES)
CCOPTS          = -O -ansi \
                  -Wall -Wpointer-arith -Wwrite-strings \
                  -Winline -Waggregate-return \
		  -Wmissing-prototypes -Wnested-externs

# cannot use -Wcast-align, as we regularly do things which it will warn
# 	e.g. mlval foo = f();
#            mlval bar = *(mlval *)(foo - THE_TAG_WHICH_I_KNOW)
#
# cannot use -Wcast-qual, as the prototype for XtOpenDisplay()
# does not use (const char *) arguments.
#
# cannot use -Wshadow, as we don't have a naming scheme that enforces
# it (e.g. ml_string is a function, as is exn_name, ...).
#
# cannot use -Wstrict-prototypes, because it complains (for no good
# reason) about signal-handling code like:
#
#		sv.sv_handler = SIG_IGN;
#
# cannot use -Wredundant-decls, because the Gcc-installed include
# files break this rule all the time (e.g. sys/signal.h declares
# "void (*signal())()" twice!)
# 
# cannot use -Wconversion, as we frequently do use prototypes to
# require conversion, e.g. arena.c:
# 
#	extern byte *block_alloc(byte type,size_t size);
#
#       arena_init(/* ... */)
#       { /* ... */
#	  block_alloc((byte)0);
d78 1
d87 1
a100 1
CC              = gcc
d104 1
a104 1
# now include the target-specific makefile, which can redefine any of
d113 1
a121 9
CCOPTSDEBUG     = $(CCOPTS) -g
ifeq "$(NTTYPE)" "TRUE"
# For the dependency stuff only
CFLAGS          = $(CCOPTS) $(DEFINES) $(INCLUDES) -D_WIN32
else
CFLAGS          = $(CCOPTS) $(DEFINES) $(INCLUDES)
endif
CFLAGSDEBUG     = $(CCOPTSDEBUG) $(DEFINES) $(DEFINESDEBUG) $(INCLUDES)

d146 1
a146 1
	@@$(CC) -MM $(CFLAGS) $< | sed $(QUOTE)/:/s!$*.o!$(OBJECTDIR)/$*.o $(OBJECTDIR)/$*-g.o $@@!$(QUOTE) > $@@
d159 1
a159 1
	@@$(CC) -MM $(CFLAGS) $< | sed $(QUOTE)/:/s!$*.o!$(OBJECTDIR)/$*.o $(OBJECTDIR)/$*-g.o $@@!$(QUOTE) > $@@
d164 1
a164 6
ifeq "$(NTTYPE)" "TRUE"
	@@cl $< $(CFLAGSREL) /c /Fo$@@
#	@@mv $(OBJECTDIR)/$*.obj $@@
else
	@@$(CC) -c $(CFLAGS) -o $@@ $<
endif
d169 1
a169 6
ifeq "$(NTTYPE)" "TRUE"
	@@cl $< $(CFLAGSDEB) /c /Fo$@@
#	@@mv $(OBJECTDIR)/$*-g.obj $@@
else
	@@$(CC) -c $(CFLAGSDEBUG) -o $@@ $<
endif
d174 1
a174 1
	@@$(CC) -c $(CFLAGS) -o $@@ $<
d182 1
a182 1
	@@$(CC) -c $(CFLAGSDEBUG) -o $@@ $<
d209 1
a209 1
$(TARGETDIR)/make_asm_offsets: make_asm_offsets.c make_asm_offsets_common.c
d213 1
a213 1
	@@cl $< $(CFLAGSREL) /Fe$@@.exe /link /nologo libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
d215 1
a215 1
	@@$(CC) $(CFLAGS) -o $@@ $<
d218 1
a218 1
$(TARGETDIR)/fi_call_stub_h_gen: misc/fi_call_stub_h_gen.c
d222 1
a222 1
	@@cl $< /Fe$@@.exe /link /nologo libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
d224 1
a224 1
	@@$(CC) $(CFLAGS) -o $@@ $<
d231 1
a231 1
	$(NTTARGETDIR)\fi_call_stub_h_gen $(FI_CALL_SIZE) > $@@
d236 1
a236 1
$(TARGETDIR)/fi_call_stub_c_gen: misc/fi_call_stub_c_gen.c
d240 1
a240 1
	@@cl $< /Fe$@@.exe /Isrc/OS/NT /Isrc/OS/Win32 /link /nologo  libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
d242 1
a242 1
	@@$(CC) $(CFLAGS) -o $@@ $<
d249 1
a249 1
	$(NTTARGETDIR)\fi_call_stub_c_gen $(FI_CALL_SIZE) > $@@
d280 1
a280 1
  src gen
d284 1
a284 1
vpath %.h gen
d327 1
a327 1
	@@cl /Fe$@@ $(OBJECTS) /link /nologo libc.lib kernel32.lib $(GUILIBS) /subsystem:console
d329 1
a329 1
	@@$(CC) $(CFLAGS) -B/bin/ -o $@@ $(OBJECTS) $(LIBRARIES)
d341 1
a341 1
	@@cl /Fe$@@ $(OBJECTS) /link /nologo libc.lib kernel32.lib $(GUILIBS) /subsystem:windows 
d356 1
a356 1
	@@$(CC) $(CFLAGS) -B/bin/ -Xlinker -Bstatic -o $@@ $(OBJECTSSTATIC) $(LIBRARIESSTATIC)
d368 1
a368 1
	@@cl /Feruntime-g $(OBJECTSDEBUG) /link /nologo /debug /debugtype:both libc.lib kernel32.lib $(GUILIBS) /subsystem:console
d372 1
a372 1
	@@$(CC) $(CFLAGSDEBUG) -B/bin/ -o $@@ $(OBJECTSDEBUG) $(LIBRARIES)
d383 1
a383 1
	@@cl /Feruntime-windows-g $(OBJECTSDEBUG) /link /nologo /debug /debugtype:both libc.lib kernel32.lib $(GUILIBS) /subsystem:windows
d393 1
a393 2
	@@$(CC) $(CFLAGSDEBUG) -B/bin/ -o $@@ $(TESTFIXOBJECTS) $(LIBRARIES)

d419 2
a420 2
	$(RM) $@@
	$(LN) -s $(TARGETDIR)/main $@@ 
d437 2
a438 2
	$(RM) $@@
	$(LN) -s $(TARGETDIR)/main-static $@@
d447 2
a448 2
	$(RM) $@@
	$(LN) -s $(TARGETDIR)/main-g $@@
d461 2
a462 2
	$(RM) $@@
	$(LN) -s $(TARGETDIR)/test_fixup-g $@@
@


1.54
log
@Fixing benign typo
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.53 1996/04/18 11:53:43 matthew Exp $
d19 1
a19 1
          export
@


1.53
log
@Adding runtime-windows for Windows.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.52 1996/03/14 11:33:02 jont Exp $
d413 1
a413 1
	@@cl /Feruntime-g $(OBJECTSDEBUG) /link /nologo /debug /debugtype:both libc.lib kernel32.lib $(GUILIBS) /substem:console
@


1.52
log
@Fix a couple of typos
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.51 1996/03/14 11:12:13 jont Exp $
d35 1
a35 1
TARGETFILES	= main main-g
d43 1
a43 1
DISTFILES	= main.exe
d160 1
a160 1
RUNTIMES	= runtime runtime-g
d372 1
a372 1
	@@cl /Fe$@@ $(OBJECTS) /link /nologo libc.lib kernel32.lib $(GUILIBS) $(GUIFLAGS) 
d379 14
a392 1
$(TARGETDIR)/main-statis: $(OBJECTSSTATIC) $(proj).rbj
d413 1
a413 1
	@@cl /Feruntime-g $(OBJECTSDEBUG) /link /nologo /debug /debugtype:both libc.lib kernel32.lib $(GUILIBS) $(GUIFLAGS)
d420 15
d469 9
d495 9
@


1.51
log
@More improvements to distribution mechanism for NT
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.50 1996/03/04 10:52:08 stephenb Exp $
d258 1
a258 1
	@@cl $< $(CFLAGSREL) /Fe$@@.exe /link libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
@


1.50
log
@Modify various parameters to include src/OS/$(OS_TYPE)
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.49 1996/02/28 17:33:23 jont Exp $
d47 6
a52 1
DISTRIBUTED	= $(DISTFILES:%=$(TARGETDIR)/%)
d258 1
a258 1
	@@cl $< $(CFLAGSREL) /Fe$@@.exe /link /nologo libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
d465 1
a465 1
	$(RM) -r $(DISTDIR)/bin
@


1.49
log
@Change RUNTIMES not to include runtime-static in the Win32 case
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.48 1996/02/15 13:48:34 jont Exp $
d18 2
a19 1
          os signals stubs threads mach_state arch_code exec_delivery explore
a56 1

d58 1
a58 1
                  -Isrc/OS/$(OS) -Isrc/OS/common \
d280 1
a280 1
	@@cl $< /Fe$@@.exe /Isrc/OS/NT /Isrc/OS/common /link /nologo  libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
d318 1
a318 1
  src/OS/common \
@


1.48
log
@Problems with moving to VC++
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.47 1996/02/14 13:51:44 nickb Exp $
d24 12
d37 1
d41 3
d45 1
a99 9
ifeq "$(OS)" "NT"
NTTYPE=TRUE
else
ifeq "$(OS)" "Win95"
NTTYPE=TRUE
else
NTTYPE=FALSE
endif
endif
d107 1
d116 1
a119 1
TAR 		= /bin/tar
d154 3
d158 1
d462 5
d468 1
@


1.47
log
@Add "explorer".
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.46 1996/02/14 11:55:47 jont Exp $
d135 4
d140 1
@


1.46
log
@Stop echoing cl comand line when compiling under NT
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.45 1995/12/11 11:35:01 jont Exp $
d18 1
a18 1
          os signals stubs threads mach_state arch_code exec_delivery
d44 1
a44 1
DEFINESDEBUG    = -DDEBUG -DDIAGNOSTICS -DCOLLECT_STATS
@


1.45
log
@Make main-g for nt also depend on runtime.rbj
Remove dependence on runtime.res, this is replaced by
rule for runtime.rbj
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.44 1995/10/11 11:09:26 jont Exp $
d177 1
a177 1
	cl $< $(CFLAGSREL) /c /Fo$@@
d187 1
a187 1
	cl $< $(CFLAGSDEB) /c /Fo$@@
d235 1
a235 1
	@@cl $< $(CFLAGSREL) /Fe$@@.exe /link libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
d244 1
a244 1
	cl $< /Fe$@@.exe /link libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
d262 1
a262 1
	cl $< /Fe$@@.exe /Isrc/OS/NT /link libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
d349 1
a349 1
	cl /Fe$@@ $(OBJECTS) /link libc.lib kernel32.lib $(GUILIBS) $(GUIFLAGS) 
d377 1
a377 1
	cl /Feruntime-g $(OBJECTSDEBUG) /link /debug /debugtype:both libc.lib kernel32.lib $(GUILIBS) $(GUIFLAGS)
@


1.44
log
@Adding Win95 support
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.43 1995/10/05 14:15:54 jont Exp $
d342 1
a342 1
$(TARGETDIR)/main: $(OBJECTS) $(proj).res
d355 3
d359 1
d369 3
d373 1
d377 1
a377 1
	cl /Feruntime-g $(OBJECTSDEBUG) /link /debug /debugtype:both libc.lib kernel32.lib  $(GUILIBS) $(GUIFLAGS)
d396 3
d400 1
@


1.43
log
@Modifying to use gawk in place of awk on NT
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.42 1995/09/20 16:43:42 jont Exp $
d12 1
a12 1
MODULES = alloc allocator arena bytearrays cache diagnostic endian \
d15 1
a15 1
          interface libml license lists loader main marshal mem modules \
d20 2
d84 9
d129 1
d176 1
a176 1
ifeq "$(OS)" "NT"
d186 1
a186 1
ifeq "$(OS)" "NT"
d197 1
a197 1
ifeq "$(OS)" "NT"
d205 1
a205 1
ifeq "$(OS)" "NT"
d234 1
a234 1
ifeq "$(OS)" "NT"
d243 1
a243 1
ifeq "$(OS)" "NT"
d252 1
a252 1
ifeq "$(OS)" "NT"
d261 1
a261 1
ifeq "$(OS)" "NT"
d270 1
a270 1
ifeq "$(OS)" "NT"
d341 1
a341 1
ifeq "$(OS)" "NT"
d348 1
a348 1
ifeq "$(OS)" "NT"
d357 1
a357 1
ifeq "$(OS)" "NT"
d368 4
a371 2
ifeq "$(OS)" "NT"
	cl /Fe$@@ $(OBJECTSDEBUG) /link /debug libc.lib kernel32.lib  $(GUILIBS) $(GUIFLAGS)
d398 1
a398 1
ifeq "$(OS)" "NT"
d400 1
a400 1
	@@cp -p $(TARGETDIR)/main.exe $@@.exe
d408 1
a408 1
ifeq "$(OS)" "NT"
d417 1
a417 1
ifeq "$(OS)" "NT"
d419 1
a419 1
	@@cp -p $(TARGETDIR)/main-g.exe $@@.exe
@


1.42
log
@Add executable delivery module
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.41 1995/09/01 09:51:55 jont Exp $
d83 1
a83 1
AWK		= awk
@


1.41
log
@Add /debug to link command for main-g
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.40 1995/08/22 14:30:05 nickb Exp $
d18 1
a18 1
          os signals stubs threads mach_state arch_code
@


1.40
log
@Remove -Wconversion warning, as we don't actually want it.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.39 1995/08/02 16:20:32 jont Exp $
d164 4
a168 2
ifeq "$(OS)" "NT"
	@@mv $(OBJECTDIR)/$*.obj $@@
d174 4
a178 2
ifeq "$(OS)" "NT"
	@@mv $(OBJECTDIR)/$*-g.obj $@@
d357 1
a357 1
	cl /Fe$@@ $(OBJECTSDEBUG) /link libc.lib kernel32.lib  $(GUILIBS) $(GUIFLAGS)
@


1.39
log
@Bring up to scratch on NT
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.38 1995/07/31 13:41:54 nickb Exp $
d47 1
a47 1
                  -Wconversion -Winline -Waggregate-return \
d68 9
@


1.38
log
@Fix mkdir on NT
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.37 1995/07/24 13:34:41 nickb Exp $
d24 1
d227 5
a231 1
	@@$(EXEC) $< $(FI_CALL_SIZE) > $@@
d237 1
a237 1
	cl $< /Fe$@@.exe /link libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
d245 5
a249 1
	@@$(EXEC) $< $(FI_CALL_SIZE) > $@@
@


1.37
log
@Fix dependency problems.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.36 1995/07/21 16:22:48 io Exp $
d74 1
a74 1
MKDIR           = /bin/mkdir -p
@


1.36
log
@cleangen should deleted nested directories in gen/*
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.35 1995/07/20 13:19:55 jont Exp $
d15 3
a17 3
          interface libml license lists loader main marshal mem modules options \
	  pack_words pervasives print profiler reals stacks state streams \
          strings system time trace utils value values vector words \
d33 1
a33 1
           fi_call_stub.c
a67 1

d73 5
d80 6
d87 1
a88 2

MKDIR		= /bin/mkdir
a91 5
ifeq "$(OS)" "NT"
AWK		= awk
else
AWK		= /usr/bin/awk
endif
d135 6
a140 7
ifeq "$(OS)" "NT"
	@@mkdir -p $(DEPENDDIR)
	$(CC) -MM $(CFLAGS) $< | sed "/:/s!$*.o!$(OBJECTDIR)/$*.o $(OBJECTDIR)/$*-g.o $@@!" > $@@
else
	@@mkdir -p $(DEPENDDIR) 2>/dev/null || :
	@@$(CC) -MM $(CFLAGS) $< | sed '/:/s!$*.o!$(OBJECTDIR)/$*.o $(OBJECTDIR)/$*-g.o $@@!' > $@@
endif
d142 4
d148 2
a149 7
ifeq "$(OS)" "NT"
	@@mkdir -p $(DEPENDDIR)
	@@$(CC) -MM $(CFLAGS) $< | sed "/:/s!$*.o!$(OBJECTDIR)/$*.o $(OBJECTDIR)/$*-g.o $@@!" > $@@
else
	@@mkdir -p $(DEPENDDIR) 2>/dev/null || :
	@@$(CC) -MM $(CFLAGS) $< | sed '/:/s!$*.o!$(OBJECTDIR)/$*.o $(OBJECTDIR)/$*-g.o $@@!' > $@@
endif
d153 2
a155 2
	@@mkdir -p $(OBJECTDIR)
	@@$(CC) -c $(CFLAGS) -o $@@ $<
a156 3
else
	@@mkdir -p $(OBJECTDIR) 2>/dev/null || :
	@@$(CC) -c $(CFLAGS) -o $@@ $<
d161 2
a163 2
	@@mkdir -p $(OBJECTDIR)
	@@$(CC) -c $(CFLAGSDEBUG) -o $@@ $<
a164 3
else
	@@mkdir -p $(OBJECTDIR) 2>/dev/null || :
	@@$(CC) -c $(CFLAGSDEBUG) -o $@@ $<
d169 2
a171 2
	@@mkdir -p $(OBJECTDIR)
	@@$(CC) -c $(CFLAGS) -o $@@ $<
a172 2
else
	@@$(CC) -c $(CFLAGS) -o $@@ $<
d177 2
a179 2
	@@mkdir -p $(OBJECTDIR)
	@@$(CC) -c $(CFLAGSDEBUG) -o $@@ $<
a180 3
else
	@@mkdir -p $(OBJECTDIR) 2>/dev/null || :
	@@$(CC) -c $(CFLAGSDEBUG) -o $@@ $<
d185 1
a185 5
ifeq "$(OS)" "NT"
	@@mkdir -p gen
else
	@@mkdir -p gen 2>/dev/null || :
endif
d190 1
a190 5
ifeq "$(OS)" "NT"
	@@mkdir -p gen
else
	@@mkdir -p gen 2>/dev/null || :
endif
d193 7
d202 2
a203 7
ifeq "$(OS)" "NT"
	@@mkdir -p gen/$(ARCH)/$(OS)
	sh -c $< > $@@
else
	@@mkdir -p gen/$(ARCH)/$(OS) 2>/dev/null || :
	$< > $@@
endif
d205 1
a205 1
gen/%.h: awk/%.awk src/implicit.h
d207 1
d209 1
a209 1
	@@mkdir -p gen
d211 1
a211 1
	@@mkdir -p gen 2>/dev/null || :
a212 1
	@@$(AWK) -f awk/$*.awk < src/implicit.h > gen/$*.h
d214 3
a216 2

$(TARGETDIR)/make_asm_offsets: make_asm_offsets.c make_asm_offsets_common.c
d218 1
a218 2
	@@mkdir -p $(TARGETDIR)
	cl $< $(CFLAGSREL) /Fe$@@.exe /link libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
d220 1
a220 2
	@@mkdir -p $(TARGETDIR) 2>/dev/null || :
	$(CC) $(CFLAGS) -o $@@ $<
d223 4
a226 4
# Have to put explicit dependencies on the offsets file here, because
# Make isn't smart enough to figure them all out (in fact, because gcc
# -MM insists on finding all the depended-upon files, rather than
# recording them as dependencies).
d228 1
a228 4
src/arch/$(ARCH)/interface.o: gen/offsets.h gen/$(ARCH)/$(OS)/asm_offsets.h
src/arch/$(ARCH)/poly_equal.o: gen/offsets.h

gen/fi_call_stub.h: misc/fi_call_stub_h.gen
d230 1
d232 1
a232 1
	@@mkdir -p gen
d234 1
a234 1
	@@mkdir -p gen 2>/dev/null || :
a235 1
	@@cat misc/fi_call_stub_h.gen | sed -e "s/+NN+/"$(FI_CALL_SIZE)"/" > gen/fi_call_stub.h
d237 1
a237 1
gen/fi_call_stub.c: gen/fi_call_stub.h
d239 2
a240 12
ifeq "$(OS)" "NT"
	@@mkdir -p gen
else
	@@mkdir -p gen 2>/dev/null || :
endif
#       The call stub gen. is made afresh each time it is used:
ifeq "$(OS)" "NT"
	@@$(CC) -c misc/fi_call_stub_gen.c -o misc/fi_call_stub_gen.obj
	cl /Femisc/fi_call_stub_gen misc/fi_call_stub_gen.obj /link libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
else
	@@$(CC) misc/fi_call_stub_gen.c -o misc/fi_call_stub_gen
endif
d242 4
a245 6
#       Use the call stub gen. 
ifeq "$(OS)" "NT"
	@@misc\\fi_call_stub_gen $(FI_CALL_SIZE) > gen/fi_call_stub.c
else
	@@misc/fi_call_stub_gen $(FI_CALL_SIZE) > gen/fi_call_stub.c
endif
d247 8
a254 6
#       Now remove the call stub gen.
ifeq "$(OS)" "NT"
	rm misc/fi_call_stub_gen.exe
else
	@@$(RM) misc/fi_call_stub_gen
endif
d313 1
a314 1
	@@mkdir -p $(TARGETDIR)
a316 1
	@@mkdir -p $(TARGETDIR) 2>/dev/null || :
d326 1
a326 1
	@@mkdir -p $(TARGETDIR) 2>/dev/null || :
d333 1
a334 1
	@@mkdir -p $(TARGETDIR)
a336 1
	@@mkdir -p $(TARGETDIR) 2>/dev/null || :
d342 1
a342 1
	@@mkdir -p $(TARGETDIR) 2>/dev/null || :
a351 3
ifeq "$(OS)" "NT"
	rm -f $(OBJECTDIR)/* core $(TARGETDIR)/* $(RUNTIMES)
else
a352 1
endif
d395 1
a395 1
	$(MKDIR) $(DISTDIR)/bin
@


1.35
log
@Sort out problems with not remaking make_asm_offsets
and dependency problems of .S files
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.34 1995/07/19 14:31:19 nickb Exp $
d77 2
d393 1
a393 1
	$(RM) gen/*
@


1.34
log
@Add arch_code for space profiler.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.33 1995/07/06 23:22:50 brianm Exp $
d242 2
a243 2
src/arch/$(ARCH)/interface.S: gen/offsets.h gen/$(ARCH)/$(OS)/asm_offsets.h
src/arch/$(ARCH)/poly_equal.S: gen/offsets.h
d382 1
a382 1
	rm -f $(OBJECTDIR)/* core $(TARGETS) $(RUNTIMES)
d384 1
a384 1
	$(RM) $(OBJECTDIR)/* core $(TARGETS) $(RUNTIMES)
@


1.33
log
@Adding libml unit to runtime.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.32 1995/06/26 15:36:04 jont Exp $
d18 1
a18 1
          os signals stubs threads mach_state
@


1.32
log
@Fix runtime-g and runtime-static errors
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.31 1995/06/26 13:39:48 daveb Exp $
d15 1
a15 1
          interface license lists loader main marshal mem modules options \
@


1.31
log
@Changed the runtime* targets so that the links are always reset.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.30 1995/06/08 16:37:55 jont Exp $
d404 1
a404 1
	$(TARGETDIR)/main-static
d413 1
a413 1
	$(TARGETDIR)/main-g
@


1.30
log
@Fix production of make_asm_offsets under NT
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.29 1995/06/06 16:06:01 jont Exp $
d393 2
a394 1
runtime: $(TARGETDIR)/main
d403 2
a404 1
runtime-static: $(TARGETDIR)/main-static
d412 2
a413 1
runtime-g: $(TARGETDIR)/main-g
@


1.29
log
@Change awk definition
Add rules to produce automatically generated asm_offsets.h files
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.28 1995/05/26 14:26:03 nickb Exp $
d212 1
d215 1
a216 1
	$< > $@@
d231 1
d234 1
a235 1
	$(CC) $(CFLAGS) -o $@@ $<
@


1.28
log
@Add test_fixup target.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.27 1995/04/26 10:00:46 nickb Exp $
d32 1
d37 1
a37 1
INCLUDES        = -Igen -Isrc/OS/$(OS)/arch/$(ARCH) \
d84 1
a84 1
AWK		= /bin/awk
d208 9
d226 9
d240 1
a240 1
src/arch/$(ARCH)/interface.S: gen/offsets.h
@


1.27
log
@Fix 'make clean' only to remove runtime links, not runtime*
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.26 1995/04/24 15:25:48 nickb Exp $
d103 2
d309 1
d347 6
d397 4
@


1.26
log
@Add src/OS/common/
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.25 1995/04/11 11:23:48 jont Exp $
d109 3
a111 1
all: runtime runtime-g runtime-static $(GENERATED)
d352 1
a352 1
	rm -f $(OBJECTDIR)/* core $(TARGETS) runtime*
d354 1
a354 1
	$(RM) $(OBJECTDIR)/* core $(TARGETS) runtime*
@


1.25
log
@Get working with new awk from MKS for NT
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.24 1995/04/07 13:49:53 jont Exp $
d37 2
a38 2
                  -Isrc/OS/$(OS) -Isrc/arch/$(ARCH) \
                  -Isrc -Iinclude
d268 1
@


1.24
log
@Further work on making under NT
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.23 1995/04/04 12:01:12 nickb Exp $
d71 3
d75 1
d80 3
d84 1
d126 1
a126 1
	@@$(CC) -MM $(CFLAGS) $< | sed "/:/s!$*.o!$(OBJECTDIR)/$*.o $(OBJECTDIR)/$*-g.o $@@!" > $@@
d237 4
d242 1
d245 3
d249 1
d252 3
d256 1
a256 1

d336 1
a336 1
	cl /Fe$@@ $(OBJECTSDEBUG) /link libc.lib kernel32.lib /SUBSYSTEM:windows
@


1.23
log
@Allow separate static and dynamic sets of libraries.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.22 1995/03/28 14:12:34 nickb Exp $
d287 3
d291 1
d295 1
a295 1
	cl /Fe$@@ $(OBJECTS) /link libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
d316 1
a316 1
	cl /Fe$@@ $(OBJECTSDEBUG) /link libc.lib kernel32.lib /SUBSYSTEM:CONSOLE
@


1.22
log
@Thread system changes.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.21 1995/03/17 15:34:41 brianm Exp $
d42 1
d304 1
a304 1
	@@$(CC) $(CFLAGS) -B/bin/ -Xlinker -Bstatic -o $@@ $(OBJECTSSTATIC) $(LIBRARIES)
@


1.21
log
@Adding pack_words to modules.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.20 1995/03/17 14:28:54 jont Exp $
d14 1
a14 1
          gc global handler image implicit initialise integers intercept \
d18 1
a18 1
          os signals stubs
@


1.20
log
@Get make clean to work under NT
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.19 1995/03/12 15:01:02 brianm Exp $
d16 1
a16 1
	  pervasives print profiler reals stacks state streams \
@


1.19
log
@Adding words to modules.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.18 1995/03/01 16:12:32 brianm Exp $
d323 3
d327 1
@


1.18
log
@Adding in foreign interface components:
- foreign_loader to modules list
- fi_call_stub generation
- Variable to control size of stub.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.17 1995/02/14 15:16:38 io Exp $
d13 3
a15 3
          environment event exceptions fi_call_stub fixup foreign_loader gc global \
	  handler image implicit initialise integers intercept interface \
          license lists loader main marshal mem modules options \
d17 2
a18 1
          strings system time trace utils value values vector os signals stubs
@


1.17
log
@removed "gen" directory creation message in Unix
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.16 1995/02/07 16:42:27 jont Exp $
d13 2
a14 2
          environment event exceptions fixup gc global handler image \
          implicit initialise integers intercept interface \
d30 2
a31 1
           offsets.h
d65 4
d209 26
@


1.16
log
@Add NT stuff
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.15 1995/01/05 11:06:22 nickb Exp $
d173 2
a175 2
else
	@@mkdir -p gen
d182 2
a184 2
else
	@@mkdir -p gen
d191 2
a193 2
else
	@@mkdir -p gen
@


1.15
log
@Add license server
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.14 1994/11/09 16:16:31 nickb Exp $
d71 1
d109 4
d115 1
d119 4
d125 1
d129 5
d136 1
d140 5
d147 1
d151 5
a155 1
	@@mkdir -p $(OBJECTDIR) 2>/dev/null || :
d157 1
d161 5
d168 1
d172 1
d174 3
d181 1
d183 3
d190 1
d192 3
d202 2
a203 2
src/arch/SPARC/interface.S: gen/offsets.h
src/arch/SPARC/poly_equal.S: gen/offsets.h
d256 4
d263 1
d267 3
d273 1
d277 4
d283 1
d300 7
a306 2
	 $(RM) $@@
	 $(LN) -s $(TARGETDIR)/main $@@ 
d309 3
d314 1
d317 4
d323 1
@


1.14
log
@Add module 'cache' which supports instruction-cache flushing.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.13 1994/08/15 12:30:21 daveb Exp $
d37 1
a37 1
DEFINES         = 
@


1.13
log
@Corrected spelling:  distributed -> distribution.
Added definition of $(TAR).
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.12 1994/08/15 10:35:21 daveb Exp $
d12 1
a12 1
MODULES = alloc allocator arena bytearrays diagnostic endian \
@


1.12
log
@Added distribution target.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.11 1994/07/12 13:06:50 jont Exp $
d66 1
d251 4
a254 4
distributed: $(DISTRIBUTED)
	$(RM) -r $(DISTDIR)/run
	$(MKDIR) $(DISTDIR)/run
	$(TAR) cvf - $(DISTRIBUTED) | ( cd $(DISTDIR)/run; $(TAR) xf - )
@


1.11
log
@Add stubs to set of modules
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.10 1994/07/08 10:29:47 nickh Exp $
d24 2
d57 1
d65 1
d249 5
@


1.11.1.1
log
@branched from 1.11
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.11 1994/07/12 13:06:50 jont Exp $
@


1.10
log
@Put 'strip' into a variable.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.9 1994/07/04 13:29:22 nickh Exp $
d17 1
a17 1
          strings system time trace utils value values vector os signals
@


1.9
log
@Fix mkdir error behaviour
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.10 1994/07/04 12:48:34 nickh Exp $
d8 1
a8 1
# (SunOS, SPARC), (Solaris, SPARC), (Ultrix, MIPS), 
d10 1
a10 1
# and do "make -e" (with GNU make).
d66 1
d207 1
a207 1
	@@strip $@@
d213 1
a213 1
	@@strip $@@
@


1.8
log
@Define OBJECTDIR before including the specific makefile
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.7 1994/06/14 14:49:50 nickh Exp $
d102 1
a102 1
	@@mkdir -p $(DEPENDDIR)
d107 1
a107 1
	@@mkdir -p $(DEPENDDIR)
d112 1
a112 1
	@@mkdir -p $(OBJECTDIR)
d117 1
a117 1
	@@mkdir -p $(OBJECTDIR)
d122 1
a122 1
	@@mkdir -p $(OBJECTDIR)
d127 1
a127 1
	@@mkdir -p $(OBJECTDIR)
d132 1
a132 1
	@@mkdir -p gen
d137 1
a137 1
	@@mkdir -p gen
d142 1
a142 1
	@@mkdir -p gen
d204 1
a204 1
	@@mkdir -p $(TARGETDIR)
d210 1
a210 1
	@@mkdir -p $(TARGETDIR)
d216 1
a216 1
	@@mkdir -p $(TARGETDIR)
@


1.7
log
@Fix to static linking bug under SunOS 4.1.x.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.6 1994/06/13 12:17:11 nickh Exp $
d71 4
a76 1
OBJECTDIR	= obj/$(ARCH)/$(OS)
@


1.6
log
@Add -f switch to rm to prevent failure.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.5 1994/06/13 12:10:18 nickh Exp $
d19 2
d62 1
d76 1
d100 1
a100 1
	@@$(CC) -MM $(CFLAGS) $< | sed '/:/s!$*.o!obj/$*.o obj/$*-g.o $@@!' > $@@
d105 1
a105 1
	@@$(CC) -MM $(CFLAGS) $< | sed '/:/s!$*.o!obj/$*.o obj/$*-g.o $@@!' > $@@
d195 1
a195 1
include $(MODULES:%=$(DEPENDDIR)/%.d)
d205 1
a205 1
$(TARGETDIR)/main-static: $(OBJECTS)
d208 1
a208 1
	@@$(CC) $(CFLAGS) -B/bin/ -Xlinker -Bstatic -o $@@ $(OBJECTS) $(LIBRARIES)
d222 1
a222 1
	$(RM) -f $(OBJECTDIR)/* core $(TARGETS) runtime*
d225 1
a225 1
	$(RM) -f $(DEPENDDIR)/*
d228 1
a228 1
	$(RM) -f gen/*
d231 2
a232 2
	 rm -f $@@
	 ln -s $(TARGETDIR)/main $@@ 
d235 2
a236 2
	rm -f $@@
	ln -s $(TARGETDIR)/main-static $@@
d239 2
a240 2
	rm -f $@@
	ln -s $(TARGETDIR)/main-g $@@
@


1.5
log
@Add 'runtime' and fellows to list of targets.
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.3 1994/06/09 14:21:45 nickh Exp $
d218 1
a218 1
	$(RM) $(OBJECTDIR)/* core $(TARGETS) runtime*
d221 1
a221 1
	$(RM) $(DEPENDDIR)/*
d224 1
a224 1
	$(RM) gen/*
d227 1
a227 1
	 rm #@@
d231 1
a231 1
	rm $@@
d235 1
a235 1
	rm $@@
@


1.4
log
@Put in symbolic links.
@
text
@d80 1
a80 1
all: $(TARGETS) $(GENERATED)
d218 1
a218 1
	$(RM) $(OBJECTDIR)/* core $(TARGETS)
d227 2
a228 1
	 ln -s $(TARGETDIR)/main runtime	 
d231 2
a232 1
	ln -s $(TARGETDIR)/main-static runtime-static
d235 2
a236 1
	ln -s $(TARGETDIR)/main-g runtime-g
a238 1

@


1.3
log
@new file
@
text
@d3 1
a3 1
# RCS Id: $Id: GNUmakefile,v 1.2 1994/06/09 13:20:47 nickh Exp $
d227 1
d230 1
d233 1
@


1.2
log
@new file
@
text
@d3 1
a3 1
# RCS Id: $Id$
@


1.1
log
@new file
@
text
@@
