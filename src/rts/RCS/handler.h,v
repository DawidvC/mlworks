head	1.8;
access;
symbols
	Final_version_of_old_runtime:1.8
	ML_revised_beta_release_25/05/94:1.8
	ML_final_beta_release_02/03/94:1.8
	mlworks-28-01-1994:1.8
	Release:1.8
	mlworks-beta-01-09-1993:1.8
	MLWorks-1-0-3-21/12/1992:1.8
	MLWorks-1-0-2-15/12/1992:1.8
	MLWorks-1-0-1-04/12/1992:1.8
	checkpoint_17_08_92:1.7;
locks; strict;
comment	@ *  @;


1.8
date	92.10.26.14.05.34;	author richard;	state Exp;
branches
	1.8.1.1;
next	1.7;

1.7
date	92.07.16.14.34.32;	author clive;	state Exp;
branches;
next	1.6;

1.6
date	92.07.02.15.15.15;	author richard;	state Exp;
branches;
next	1.5;

1.5
date	92.06.19.13.34.32;	author clive;	state Exp;
branches;
next	1.4;

1.4
date	92.06.11.11.43.57;	author clive;	state Exp;
branches;
next	1.3;

1.3
date	92.05.05.13.07.49;	author clive;	state Exp;
branches;
next	1.2;

1.2
date	92.01.08.13.17.08;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	92.01.02.13.09.53;	author richard;	state Exp;
branches;
next	;

1.8.1.1
date	92.10.26.14.05.34;	author jont;	state Exp;
branches;
next	;


desc
@Top Level Exception Handler.
@


1.8
log
@Removed debugger related stuff.
@
text
@/*  ==== TOP LEVEL EXCEPTION HANDLER ====
 *
 *  Copyright (C) 1992 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This function is called when an uncaught exception is generated by
 *  ML, and is passed the exception packet.
 *
 *  Revision Log
 *  ------------
 *  $Log: handler.h,v $
 *  Revision 1.7  1992/07/16  14:34:32  clive
 *  Added the single_step hook
 *
 *  Revision 1.6  1992/07/02  15:15:15  richard
 *  Some changes toward proper debugger installation.
 *
 *  Revision 1.5  1992/06/19  13:34:32  clive
 *  Added outstanding_interrupts flag
 *
 *  Revision 1.4  1992/06/11  11:43:57  clive
 *  Adjusted to allow the call of the ML debugger via a hook
 *
 *  Revision 1.3  1992/05/05  13:07:49  clive
 *  Take note of the maximum depth number specified in main
 *
 *  Revision 1.2  1992/01/08  13:17:08  richard
 *  Changed the type of handler as this is no longer called via
 *  interpret_callc and the ml_externals array.
 *
 *  Revision 1.1  1992/01/02  13:09:53  richard
 *  Initial revision
 *
 */


#ifndef handler_h
#define handler_h

#include "mltypes.h"

extern int max_backtrace_depth ;

extern mlval handler(mlval packet);

#endif




@


1.8.1.1
log
@Fork for bug fixing
@
text
@a12 3
 *  Revision 1.8  1992/10/26  14:05:34  richard
 *  Removed debugger related stuff.
 *
@


1.7
log
@Added the single_step hook
@
text
@d13 3
a42 3

extern mlval debugger_hook;
extern mlval single_step_hook;
@


1.6
log
@Some changes toward proper debugger installation.
@
text
@d13 3
d42 1
@


1.5
log
@Added outstanding_interrupts flag
@
text
@d13 3
d37 1
a38 1
mlval handler(mlval packet);
d40 2
a41 1
extern unsigned int outstanding_interrupts ;
@


1.4
log
@Adjusted to allow the call of the ML debugger via a hook
@
text
@d13 3
d37 1
@


1.3
log
@Take note of the maximum depth number specified in main
@
text
@d13 3
d31 2
a32 2

void handler(mlval packet);
d36 4
@


1.2
log
@Changed the type of handler as this is no longer called via
interpret_callc and the ml_externals array.
@
text
@d13 4
d30 1
a30 1

@


1.1
log
@Initial revision
@
text
@d12 4
a15 1
 *  $Log$
d25 1
a25 1
mlval handler(mlval packet);
@
