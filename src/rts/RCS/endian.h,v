head	1.4;
access;
symbols
	Final_version_of_old_runtime:1.4
	ML_revised_beta_release_25/05/94:1.4
	ML_final_beta_release_02/03/94:1.4
	mlworks-28-01-1994:1.4
	Release:1.4
	mlworks-beta-01-09-1993:1.4
	MLWorks-1-0-3-21/12/1992:1.4
	MLWorks-1-0-2-15/12/1992:1.4
	MLWorks-1-0-1-04/12/1992:1.4
	checkpoint_17_08_92:1.4;
locks; strict;
comment	@ * @;


1.4
date	92.03.17.14.27.25;	author richard;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	91.10.21.09.34.20;	author davidt;	state Exp;
branches;
next	1.2;

1.2
date	91.10.17.16.21.42;	author davidt;	state Exp;
branches;
next	1.1;

1.1
date	91.05.14.11.07.03;	author jont;	state Exp;
branches;
next	;

1.4.1.1
date	92.03.17.14.27.25;	author jont;	state Exp;
branches;
next	;


desc
@Handling cross-endian issues for cross-hosting (bootstrap etc)
@


1.4
log
@Changed error behaviour.
@
text
@/*
 * endian.h
 * Handle endian change requirements.
 * $Log: endian.h,v $
 * Revision 1.3  1991/10/21  09:34:20  davidt
 * change_endian now changes a number of words (this is so that we can
 * call change_endian on a complete piece of code).
 *
 * Revision 1.2  91/10/17  16:21:42  davidt
 * Moved MAGIC_ENDIAN into objectfile.h and tidied up a bit,
 * including doing the renaming of types to come into line
 * with the rest of the run-time system.
 * 
 * Revision 1.1  91/05/14  11:07:03  jont
 * Initial revision
 * 
 * Copyright (c) 1991 Harlequin Ltd.
 */

#ifndef endian_h
#define endian_h

#include "types.h"

/*
 * Check if we need to change endian.
 */

extern int find_endian(word magic);

/*
 * Change the endianness of a number of words.
 */

extern void change_endian(word *words, int length);

#endif
@


1.4.1.1
log
@Fork for bug fixing
@
text
@a4 3
 * Revision 1.4  1992/03/17  14:27:25  richard
 * Changed error behaviour.
 *
@


1.3
log
@change_endian now changes a number of words (this is so that we can
call change_endian on a complete piece of code).
@
text
@d4 5
a8 1
 * $Log:	endian.h,v $
a19 1
/* Avoid multiple inclusion */
a22 2
/* For efficiency */
#ifndef types_h
a23 1
#endif
d29 1
a29 1
extern void find_endian(char *file_name, word magic);
@


1.2
log
@Moved MAGIC_ENDIAN into objectfile.h and tidied up a bit,
including doing the renaming of types to come into line
with the rest of the run-time system.
@
text
@d5 5
d32 1
a32 1
 * Change the endianness of a word.
d35 1
a35 1
extern word handle_endian(word);
@


1.1
log
@Initial revision
@
text
@d4 5
a8 1
 * $Log$
d11 2
a12 1
#ifndef endian_h /* Avoid multiple inclusion */
d15 2
a16 1
#ifndef types_h /* For efficiency */
d20 3
a22 1
#define MAGIC_ENDIAN 0x01020304
d24 1
a24 1
#define handle_endian(x) ((endian) ? change_endian(x) : (x))
d26 3
a28 1
extern int endian; /* 1 for change endian, 0 for leave it alone */
d30 1
a30 1
extern void find_endian(u_int32);
a31 2
extern u_int32 change_endian(u_int32);

a32 1
/* End endian.h */
@
