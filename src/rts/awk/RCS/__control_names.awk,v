head	1.2;
access;
symbols
	MLW_daveb_inline_1_4_99:1.2.2
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_MM_adapt:1.2.1;
locks; strict;
comment	@# @;


1.2
date	97.10.29.10.19.18;	author johnh;	state Exp;
branches
	1.2.1.1
	1.2.2.1;
next	1.1;

1.1
date	97.04.29.08.37.00;	author johnh;	state Exp;
branches;
next	;

1.2.1.1
date	97.10.31.13.47.15;	author nickb;	state Exp;
branches;
next	;

1.2.2.1
date	99.04.01.18.03.05;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Generates ML values for control ids from the resource header file (resource.h).
@


1.2
log
@[Bug #30059]
__control_names.sml now lives in rts.gen and needs to refer to mswindows\control_names.sml.
@
text
@BEGIN {
  print "(*  ==== CONTROL IDENTIFIERS FOR MS WINDOWS DIALOGS ====";
  print " *";
  print " *  Machine generated from rts/resource.h by rts/awk/__control_names.awk";
  print " *  DO NOT ALTER";
  print " *)";
  print "require \"$.winsys.control_names\";";
  print "\nstructure ControlName : CONTROL_NAME = ";
  print "  struct";
  print "    exception NotFound of string";
  print "    fun getResID str = ";
  print "      case str of";
  first =1;
}

($1 == "#define" && $2 ~ /^[a-zA-Z_]/ && $3 ~ /^[0-9]/) {
  if (first == 1)
    print "        \"" $2 "\" => " $3;
  else
    print "      | \"" $2 "\" => " $3;
  first = 0;
}

END   {
  print "      | _ => raise NotFound str";
  print "  end";
}

@


1.2.2.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@@


1.2.1.1
log
@branched from trunk for label MLWorks_MM_adapt
@
text
@@


1.1
log
@new unit
Generates ML values for control ids from the resource header file (resource.h).
@
text
@d7 1
a7 1
  print "require \"control_names\";";
@
