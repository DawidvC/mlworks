head	1.21;
access;
symbols
	MLW_daveb_inline_1_4_99:1.21.1
	MLWorks_21c0_1999_03_25:1.21
	MLWorks_20c1_1998_08_20:1.21
	MLWorks_20c0_1998_08_04:1.21
	MLWorks_20b2c2_1998_06_19:1.21
	MLWorks_20b2_Windows_1998_06_12:1.21
	MLWorks_20b1c1_1998_05_07:1.21
	MLWorks_20b0_1998_04_07:1.21
	MLWorks_20b0_1998_03_20:1.20
	MLWorks_20m2_1998_02_16:1.19
	MLWorks_20m1_1997_10_23:1.18
	MLWorks_11r1:1.15.1.1.1.1.1
	MLWorks_workspace_97:1.18.2
	MLWorks_dt_wizard:1.18.1
	MLWorks_11c0_1997_09_09:1.15.1.1.1.1
	MLWorks_10r3:1.15.1.1.3
	MLWorks_10r2_551:1.15.1.1.2
	MLWorks_11:1.15.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.15.1.1
	MLWorks_20m0_1997_06_20:1.18
	MLWorks_1_0_r2c2_1997_06_14:1.15.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.15.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.15.1
	MLWorks_BugFix_1997_04_24:1.15
	MLWorks_1_0_r2_Win32_1997_04_11:1.15
	MLWorks_1_0_r2_Unix_1997_04_04:1.15
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.14.4.1.1
	MLWorks_gui_1996_12_18:1.14.5
	MLWorks_1_0_Win32_1996_12_17:1.14.4
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.14.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.14.1.1
	JFHgui:1.14.3
	MLWorks_1_0_Irix_1996_11_28:1.14.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.14.2
	MLWorks_1_0_Unix_1996_11_14:1.14.1
	MLWorks_Open_Beta2_1996_10_11:1.12.3
	MLWorks_License_dev:1.12.2
	MLWorks_1_open_beta_1996_09_13:1.12.1
	MLWorks_Open_Beta_1996_08_22:1.12
	MLWorks_Beta_1996_07_02:1.11
	MLWorks_Beta_1996_06_07:1.11
	MLWorks_Beta_1996_06_06:1.11
	MLWorks_Beta_1996_06_05:1.11
	MLWorks_Beta_1996_06_03:1.11
	MLWorks_Beta_1996_05_31:1.11
	MLWorks_Beta_1996_05_30:1.11;
locks; strict;
comment	@ * @;


1.21
date	98.03.31.16.02.58;	author johnh;	state Exp;
branches
	1.21.1.1;
next	1.20;

1.20
date	98.02.13.15.58.16;	author johnh;	state Exp;
branches;
next	1.19;

1.19
date	98.01.30.09.34.06;	author johnh;	state Exp;
branches;
next	1.18;

1.18
date	97.06.12.15.13.36;	author johnh;	state Exp;
branches
	1.18.1.1
	1.18.2.1;
next	1.17;

1.17
date	97.05.16.15.36.25;	author johnh;	state Exp;
branches;
next	1.16;

1.16
date	97.05.12.16.40.27;	author jont;	state Exp;
branches;
next	1.15;

1.15
date	97.03.21.11.04.17;	author johnh;	state Exp;
branches
	1.15.1.1;
next	1.14;

1.14
date	96.11.01.11.02.08;	author johnh;	state Exp;
branches
	1.14.1.1
	1.14.2.1
	1.14.3.1
	1.14.4.1
	1.14.5.1;
next	1.13;

1.13
date	96.10.10.02.46.06;	author io;	state Exp;
branches;
next	1.12;

1.12
date	96.08.09.15.25.58;	author nickb;	state Exp;
branches
	1.12.1.1
	1.12.2.1
	1.12.3.1;
next	1.11;

1.11
date	96.04.18.15.18.34;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	96.04.12.08.58.00;	author stephenb;	state Exp;
branches;
next	1.9;

1.9
date	96.03.27.15.16.10;	author stephenb;	state Exp;
branches;
next	1.8;

1.8
date	96.03.15.15.39.41;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	96.03.14.11.55.42;	author matthew;	state Exp;
branches;
next	1.6;

1.6
date	96.03.12.15.31.49;	author matthew;	state Exp;
branches;
next	1.5;

1.5
date	96.02.05.11.33.13;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	96.01.19.15.57.35;	author stephenb;	state Exp;
branches;
next	1.3;

1.3
date	96.01.12.10.48.58;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	95.12.15.14.34.10;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	95.12.13.12.46.07;	author daveb;	state Exp;
branches;
next	;

1.12.1.1
date	96.09.13.11.12.58;	author hope;	state Exp;
branches;
next	;

1.12.2.1
date	96.10.07.16.03.38;	author hope;	state Exp;
branches;
next	;

1.12.3.1
date	96.10.17.11.21.53;	author hope;	state Exp;
branches;
next	;

1.14.1.1
date	96.11.14.12.45.44;	author hope;	state Exp;
branches
	1.14.1.1.1.1;
next	;

1.14.1.1.1.1
date	96.11.28.14.57.37;	author hope;	state Exp;
branches;
next	;

1.14.2.1
date	96.11.22.18.06.15;	author hope;	state Exp;
branches;
next	;

1.14.3.1
date	96.12.17.09.54.16;	author hope;	state Exp;
branches;
next	;

1.14.4.1
date	96.12.17.17.44.56;	author hope;	state Exp;
branches
	1.14.4.1.1.1;
next	;

1.14.4.1.1.1
date	97.02.24.11.34.25;	author hope;	state Exp;
branches;
next	;

1.14.5.1
date	96.12.18.09.38.56;	author hope;	state Exp;
branches;
next	;

1.15.1.1
date	97.05.12.10.31.15;	author hope;	state Exp;
branches
	1.15.1.1.1.1
	1.15.1.1.2.1
	1.15.1.1.3.1;
next	;

1.15.1.1.1.1
date	97.07.28.18.17.08;	author daveb;	state Exp;
branches
	1.15.1.1.1.1.1.1;
next	;

1.15.1.1.1.1.1.1
date	97.10.07.11.42.00;	author jkbrook;	state Exp;
branches;
next	;

1.15.1.1.2.1
date	97.09.08.17.10.42;	author daveb;	state Exp;
branches;
next	;

1.15.1.1.3.1
date	97.09.09.14.06.16;	author daveb;	state Exp;
branches;
next	;

1.18.1.1
date	97.09.10.19.20.45;	author brucem;	state Exp;
branches;
next	;

1.18.2.1
date	97.09.11.20.52.00;	author daveb;	state Exp;
branches;
next	1.18.2.2;

1.18.2.2
date	97.11.20.16.52.25;	author daveb;	state Exp;
branches;
next	;

1.21.1.1
date	99.04.01.17.55.25;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Extracted relevant source from the old File Tool.
@


1.21
log
@[Bug #30346]
Call Capi.getNextWindowPos().
@
text
@(*
 * Copyright (c) 1995 Harlequin Ltd.
 *  $Log: _path_tool.sml,v $
 * Revision 1.20  1998/02/13  15:58:16  johnh
 * [Bug #30344]
 * Allow windows to retain size and position.
 *
 * Revision 1.19  1998/01/30  09:34:06  johnh
 * [Bug #30326]
 * Merge in change from branch MLWorks_workspace_97
 *
 * Revision 1.18.2.2  1997/11/20  16:52:25  daveb
 * [Bug #30326]
 *
 * Revision 1.18.2.1  1997/09/11  20:52:00  daveb
 * branched from trunk for label MLWorks_workspace_97
 *
 * Revision 1.18  1997/06/12  15:13:36  johnh
 * [Bug #30175]
 * Add extra arg to make_main_window.
 *
 * Revision 1.17  1997/05/16  15:36:25  johnh
 * Implementing single menu bar on Windows, and re-organising menus for Motif.
 * BUT using old menus here temporarily until we decide where they should go.
 *
 * Revision 1.16  1997/05/12  16:40:27  jont
 * [Bug #20050]
 * main/io now exports MLWORKS_IO
 *
 * Revision 1.15  1997/03/21  11:04:17  johnh
 * [Bug #1965]
 * Added comment for handling NotSet exception.
 *
 * Revision 1.14  1996/11/01  11:02:08  johnh
 * Enabling close from control box on top left of window.
 *
 * Revision 1.13  1996/10/10  02:46:06  io
 * moving String from toplevel
 *
 * Revision 1.12  1996/08/09  15:25:58  nickb
 * Option dialog setter functions now return accept/reject.
 *
 * Revision 1.11  1996/04/18  15:18:34  jont
 * initbasis moves to basis
 *
 * Revision 1.10  1996/04/12  08:58:00  stephenb
 * Rename Os -> OS to conform with latest basis revision.
 *
 * Revision 1.9  1996/03/27  15:16:10  stephenb
 * Replace FileSys/FILE_SYS by OS.FileSys/OS_FILE_SYS
 *
 * Revision 1.8  1996/03/15  15:39:41  daveb
 * Fixed use of Info.default_options.
 *
 * Revision 1.7  1996/03/14  11:55:42  matthew
 * Renaming resource
 *
 * Revision 1.6  1996/03/12  15:31:49  matthew
 * Adding object path entry
 *
 * Revision 1.5  1996/02/05  11:33:13  daveb
 * Capi.make_scrolllist now returns a record, with an add_items field.
 *
 *  Revision 1.4  1996/01/19  15:57:35  stephenb
 *  OS reorganisation: parameterise functor with UnixOS since all
 *  OS specific stuff has been removed from the pervasive library.
 *
 *  Revision 1.3  1996/01/12  10:48:58  daveb
 *  Replaced Capi.find_file with Capi.open_dir_dialog.
 *
 *  Revision 1.2  1995/12/15  14:34:10  jont
 *  Add signature constraint to functor result
 *
 *  Revision 1.1  1995/12/13  12:46:07  daveb
 *  new unit
 *  Extracted relevant source from the old File Tool.
 *
 *  
 *)

require "../utils/lists";
require "../main/mlworks_io";
require "../main/info";
require "../main/options";
require "../basis/os";
require "capi";
require "menus";
require "path_tool";

functor PathTool (
  structure Lists : LISTS
  structure Capi : CAPI
  structure Menus : MENUS
  structure Io: MLWORKS_IO
  structure Info: INFO
  structure Options: OPTIONS
  structure OS: OS

  sharing type Menus.Widget = Capi.Widget
  sharing type Io.Location = Info.Location.T

) : PATH_TOOL =
  struct

    structure Location = Info.Location

    type Widget = Capi.Widget

    fun objectCreate parent =
      #1 (Menus.create_dialog (parent,
                               "Set Object Path",
                               "objectPathDialog",
                               fn _ => (),
                               [Menus.OPTSEPARATOR,
                                Menus.OPTTEXT ("objectPath",
                                               Io.get_object_path,
                                               fn s => (Io.set_object_path
							(s, Location.UNKNOWN);
							true))]))
		(* XXXEXCEPTION: should handle Io.NotSet for get_object_path *)

    fun setWD parent = 
      case Capi.open_dir_dialog parent of
        SOME s => OS.FileSys.chDir s      (* XXXEXCEPTION: OS.SysErr *)
      | NONE => ()

    val sizeRef = ref NONE
    val posRef = ref NONE

    fun sourceCreate parent =
      let
        val title = "Set Source Path"

        val name = "pathTool"

        (*** Make the windows ***)
        val (shell, form, menuBar, contextLabel) =
          Capi.make_main_window 
	       {name = name, 
		title = title, 
		parent = parent, 
		contextLabel = false, 
		winMenu = true,
		pos = getOpt (!posRef, Capi.getNextWindowPos())}

        val pathLabel =
	  Capi.make_managed_widget ("pathLabel",Capi.Label,form,[])

        fun number_entries ([], _) = []
        |   number_entries (h::t, n) = (h, n) :: number_entries (t, n + 1)

        val entries = ref (number_entries (Io.get_source_path (), 1))

        val current_pos = ref (if !entries = [] then 0 else 1)

        val current_entry_selected = ref true;

        fun print_entry print_options (s, _) = s;

        fun select_fn _ (_, n) =
          if !current_pos <> n then
            (current_pos := n;
             current_entry_selected := false)
          else
            ()

        fun action_fn _ (s, _) =
          ((* set_directory s; *)
           current_entry_selected := true)

        val {scroll, list, set_items, ...} =
          Capi.make_scrolllist
            {parent = form, name = "sourcePath", select_fn = select_fn,
             action_fn = action_fn, print_fn = print_entry}

        val _ =
          let val init_dir =
                    case !entries
                    of [] => OS.FileSys.getDir() (* XXXEXCEPTION: OS.SysErr *)
                    |  ((dir, _) :: _) => dir
          in
            set_items Options.default_print_options (!entries);
            if !current_pos <> 0 then
              Capi.List.select_pos (list, 1, false)
            else ()
          end

	fun renumber_up (s, n) = (s, n + 1)

	fun renumber_down (s, n) = (s, n - 1)

	fun is_in (n:string, []) = false
	|   is_in (n, (n', _)::t) = n = n' orelse is_in (n, t)
	infix is_in

	fun add_nth ([], s, n) = [(s, n)] 
	|   add_nth (l as h::t, s, n) =
	  if n = #2 h then
	    (s, n) :: map renumber_up l
	  else
	    h :: add_nth (t, s, n) 

	fun remove_nth ([], _) = []
	|   remove_nth (h::t, n) =
	  if n = #2 h then
	    map renumber_down t
	  else
	    h :: remove_nth (t, n)

	fun get_directory () =
	  case Capi.open_dir_dialog (shell)
	  of SOME s => s
	  |  NONE => ""

        fun crash s =
	  Info.default_error' (Info.FAULT,Location.UNKNOWN,s)

	fun delete_from_source_path _ =
	  let val new_entries =
		remove_nth (!entries, !current_pos)
	      val new_source_path = map #1 new_entries
	  in
	    entries := new_entries;
	    Io.set_source_path new_source_path;
	    current_entry_selected := false;
	    set_items Options.default_print_options new_entries;
	    if !current_pos > Lists.length new_entries then
	      current_pos := Lists.length new_entries
	    else ();
	    if !current_pos <> 0 then
	      Capi.List.select_pos (list, !current_pos, false)
	    else ()
	  end

	fun insert_into_source_path _ =
	  let val dir = get_directory ()
	  in
	    if dir = "" orelse dir is_in !entries then
	      ()
	    else let
	      val new_entries =
		add_nth
		  (!entries, dir, if !current_pos = 0 then 1 else !current_pos)
	      val new_source_path = map #1 new_entries
	    in
	      current_pos := !current_pos + 1;
	      entries := new_entries;
	      Io.set_source_path new_source_path;
	      set_items Options.default_print_options new_entries;
	      Capi.List.select_pos (list, !current_pos, false)
	    end
	  end

	fun append_into_source_path _ =
	  let val dir = get_directory ()
	  in
	    if dir = "" orelse dir is_in !entries then
	      ()
	    else let
	      val new_entries =
		add_nth (!entries, dir, !current_pos + 1)
	      val new_source_path = map #1 new_entries
	    in
	      if !current_pos = 0 then current_pos := 1 else ();
	      Io.set_source_path new_source_path;
	      entries := new_entries;
	      set_items Options.default_print_options new_entries;
	      Capi.List.select_pos (list, !current_pos, false)
	    end
	  end

	fun cd_to_source_path _ =
	  ((* set_directory (#1 (Lists.nth (!current_pos - 1, !entries))); *)
	   current_entry_selected := true)

        fun storeSizePos () = 
	  (sizeRef := SOME (Capi.widget_size shell);
	   posRef := SOME (Capi.widget_pos shell))

	(* Need to handle closes correctly.  Should unmap window. *)
	fun close_window _ = 
	  (storeSizePos(); Capi.destroy shell)

        val menuspec =
          [Menus.CASCADE
	     ("action",
	      [(* Menus.PUSH
		 ("moveto", cd_to_source_path, fn _ => !current_pos <> 0),
	       *)
               Menus.PUSH ("insert", insert_into_source_path, fn _ => true),
               Menus.PUSH ("append", append_into_source_path, fn _ => true),
               Menus.PUSH
		 ("delete", delete_from_source_path, fn _ => !current_pos <> 0),
	       Menus.SEPARATOR,
               Menus.PUSH ("close", fn _ => close_window (), fn _ => true)
	      ],
              fn _ => true)]
      in
	(* third argument (boolean) here means that this window is not the podium *)
	(* Using make_menus is a temporary hack until we decide what to do with the
	 * menu items on the source path dialog.  make_menus should only be called 
	 * by the podium, and when that happens this third argument will be removed *)
        Menus.make_menus (menuBar,menuspec,false);
        Capi.Layout.lay_out
          (form, !sizeRef,
           [Capi.Layout.MENUBAR menuBar,
            Capi.Layout.SPACE,
            Capi.Layout.FIXED pathLabel,
            Capi.Layout.FLEX scroll,
            Capi.Layout.SPACE]);
	Capi.set_close_callback(form, close_window);
        Capi.initialize_toplevel shell
      end

  end;
@


1.21.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.21  1998/03/31  16:02:58  johnh
 * [Bug #30346]
 * Call Capi.getNextWindowPos().
 *
@


1.20
log
@[Bug #30344]
Allow windows to retain size and position.
@
text
@d4 4
d144 1
a144 1
		pos = getOpt (!posRef, (100,100))}
@


1.19
log
@[Bug #30326]
Merge in change from branch MLWorks_workspace_97
@
text
@d4 4
d123 3
d134 7
a140 1
          Capi.make_main_window (name, title, parent, false, true)
d272 4
d277 2
a278 1
	fun close_window _ = Capi.destroy shell
d301 1
a301 1
          (form,
@


1.18
log
@[Bug #30175]
Add extra arg to make_main_window.
@
text
@d4 10
d74 1
a74 1
require "../main/io";
@


1.18.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.18  1997/06/12  15:13:36  johnh
 * [Bug #30175]
 * Add extra arg to make_main_window.
 *
@


1.18.2.2
log
@[Bug #30326]
@
text
@a3 3
 * Revision 1.18.2.1  1997/09/11  20:52:00  daveb
 * branched from trunk for label MLWorks_workspace_97
 *
d68 1
a68 1
require "../main/mlworks_io";
@


1.18.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.18  1997/06/12  15:13:36  johnh
 * [Bug #30175]
 * Add extra arg to make_main_window.
 *
@


1.17
log
@Implementing single menu bar on Windows, and re-organising menus for Motif.
BUT using old menus here temporarily until we decide where they should go.
@
text
@d4 4
d117 1
a117 1
          Capi.make_main_window (name, title, parent, false)
@


1.16
log
@[Bug #20050]
main/io now exports MLWORKS_IO
@
text
@d4 4
d263 5
a267 1
        Menus.make_submenus (menuBar,menuspec);
@


1.15
log
@[Bug #1965]
Added comment for handling NotSet exception.
@
text
@d4 4
d68 1
a68 1
  structure Io: IO
@


1.15.1.1
log
@branched from 1.15
@
text
@a3 4
 * Revision 1.15  1997/03/21  11:04:17  johnh
 * [Bug #1965]
 * Added comment for handling NotSet exception.
 *
@


1.15.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.15.1.1  1997/05/12  10:31:15  hope
 * branched from 1.15
 *
@


1.15.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.15.1.1  1997/05/12  10:31:15  hope
 * branched from 1.15
 *
@


1.15.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.15.1.1  1997/05/12  10:31:15  hope
 * branched from 1.15
 *
@


1.15.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.15.1.1.1.1  1997/07/28  18:17:08  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.14
log
@Enabling close from control box on top left of window.
@
text
@d4 3
d90 1
@


1.14.5.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/11/01  11:02:08  johnh
 * Enabling close from control box on top left of window.
 *
@


1.14.4.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/11/01  11:02:08  johnh
 * Enabling close from control box on top left of window.
 *
@


1.14.4.1.1.1
log
@branched from 1.14.4.1
@
text
@a3 3
 * Revision 1.14.4.1  1996/12/17  17:44:56  hope
 * branched from 1.14
 *
@


1.14.3.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/11/01  11:02:08  johnh
 * Enabling close from control box on top left of window.
 *
@


1.14.2.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/11/01  11:02:08  johnh
 * Enabling close from control box on top left of window.
 *
@


1.14.1.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/11/01  11:02:08  johnh
 * Enabling close from control box on top left of window.
 *
@


1.14.1.1.1.1
log
@branched from 1.14.1.1
@
text
@a3 3
 * Revision 1.14.1.1  1996/11/14  12:45:44  hope
 * branched from 1.14
 *
@


1.13
log
@moving String from toplevel
@
text
@d4 3
d259 1
@


1.12
log
@Option dialog setter functions now return accept/reject.
@
text
@d4 3
a67 2

    open MLWorks.Option
@


1.12.3.1
log
@branched from 1.12
@
text
@a3 3
 * Revision 1.12  1996/08/09  15:25:58  nickb
 * Option dialog setter functions now return accept/reject.
 *
@


1.12.2.1
log
@branched from 1.12
@
text
@a3 3
 * Revision 1.12  1996/08/09  15:25:58  nickb
 * Option dialog setter functions now return accept/reject.
 *
@


1.12.1.1
log
@branched from 1.12
@
text
@a3 3
 * Revision 1.12  1996/08/09  15:25:58  nickb
 * Option dialog setter functions now return accept/reject.
 *
@


1.11
log
@initbasis moves to basis
@
text
@d4 3
d80 3
a82 2
                                               fn s => Io.set_object_path (s,
                                                                           Location.UNKNOWN))]))
@


1.10
log
@Rename Os -> OS to conform with latest basis revision.
@
text
@d4 3
d43 1
a43 1
require "../initbasis/os";
@


1.9
log
@Replace FileSys/FILE_SYS by OS.FileSys/OS_FILE_SYS
@
text
@d4 3
d52 1
a52 1
  structure Os: OS
d79 1
a79 1
        SOME s => Os.FileSys.chDir s
d125 1
a125 1
                    of [] => Os.FileSys.getDir()
@


1.8
log
@Fixed use of Info.default_options.
@
text
@d4 3
d37 1
a37 1
require "../initbasis/filesys";
d49 1
a49 1
  structure FileSys: FILE_SYS
d76 1
a76 1
        SOME s => FileSys.chDir s
d122 1
a122 1
                    of [] => FileSys.getDir()
@


1.7
log
@Renaming resource
@
text
@d4 3
d156 1
a156 1
	  Info.error' Info.default_options (Info.FAULT,Location.UNKNOWN,s)
@


1.6
log
@Adding object path entry
@
text
@d4 3
d63 1
a63 1
                                Menus.OPTTEXT ("Object Path",
@


1.5
log
@Capi.make_scrolllist now returns a record, with an add_items field.
@
text
@d4 3
d43 2
d54 17
a70 1
    fun create parent =
d72 1
a72 1
        val title = "Path Tool"
d234 1
a234 1
            Capi.Layout.FIXED scroll,
@


1.4
log
@OS reorganisation: parameterise functor with UnixOS since all
OS specific stuff has been removed from the pervasive library.
@
text
@d4 4
d84 1
a84 1
        val (scroll, list, set_items) =
@


1.3
log
@Replaced Capi.find_file with Capi.open_dir_dialog.
@
text
@d4 3
d21 1
d33 1
d88 1
a88 1
                    of [] => MLWorks.OS.Unix.getwd()
@


1.2
log
@Add signature constraint to functor result
@
text
@d4 3
d115 1
a115 1
	  case Capi.find_file (shell, "", Capi.DIRECTORY)
@


1.1
log
@new unit
Extracted relevant source from the old File Tool.
@
text
@d3 5
a7 1
 *  $Log$
d17 1
d28 1
a28 1
) =
@
