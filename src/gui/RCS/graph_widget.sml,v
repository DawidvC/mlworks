head	1.16;
access;
symbols
	MLW_daveb_inline_1_4_99:1.16.3
	MLWorks_21c0_1999_03_25:1.16
	MLWorks_20c1_1998_08_20:1.16
	MLWorks_20c0_1998_08_04:1.16
	MLWorks_20b2c2_1998_06_19:1.16
	MLWorks_20b2_Windows_1998_06_12:1.16
	MLWorks_20b1c1_1998_05_07:1.16
	MLWorks_20b0_1998_04_07:1.16
	MLWorks_20b0_1998_03_20:1.16
	MLWorks_20m2_1998_02_16:1.16
	MLWorks_20m1_1997_10_23:1.16
	MLWorks_11r1:1.14.9.1.1.1.1
	MLWorks_workspace_97:1.16.2
	MLWorks_dt_wizard:1.16.1
	MLWorks_11c0_1997_09_09:1.14.9.1.1.1
	MLWorks_10r3:1.14.9.1.3
	MLWorks_10r2_551:1.14.9.1.2
	MLWorks_11:1.14.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.14.9.1
	MLWorks_20m0_1997_06_20:1.14
	MLWorks_1_0_r2c2_1997_06_14:1.14.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.14.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.14.9
	MLWorks_BugFix_1997_04_24:1.14
	MLWorks_1_0_r2_Win32_1997_04_11:1.14
	MLWorks_1_0_r2_Unix_1997_04_04:1.14
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.14.7.1.1
	MLWorks_gui_1996_12_18:1.14.8
	MLWorks_1_0_Win32_1996_12_17:1.14.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.14.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.14.4.1
	JFHgui:1.14.6
	MLWorks_1_0_Irix_1996_11_28:1.14.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.14.5
	MLWorks_1_0_Unix_1996_11_14:1.14.4
	MLWorks_Open_Beta2_1996_10_11:1.14.3
	MLWorks_License_dev:1.14.2
	MLWorks_1_open_beta_1996_09_13:1.14.1
	MLWorks_Open_Beta_1996_08_22:1.14
	MLWorks_Beta_1996_07_02:1.14
	MLWorks_Beta_1996_06_07:1.14
	MLWorks_Beta_1996_06_06:1.14
	MLWorks_Beta_1996_06_05:1.14
	MLWorks_Beta_1996_06_03:1.14
	MLWorks_Beta_1996_05_31:1.14
	MLWorks_Beta_1996_05_30:1.14;
locks; strict;
comment	@ * @;


1.16
date	97.09.05.10.43.34;	author johnh;	state Exp;
branches
	1.16.1.1
	1.16.2.1
	1.16.3.1;
next	1.15;

1.15
date	97.08.04.10.00.12;	author brucem;	state Exp;
branches;
next	1.14;

1.14
date	96.05.28.14.23.24;	author matthew;	state Exp;
branches
	1.14.1.1
	1.14.2.1
	1.14.3.1
	1.14.4.1
	1.14.5.1
	1.14.6.1
	1.14.7.1
	1.14.8.1
	1.14.9.1;
next	1.13;

1.13
date	96.05.07.11.33.46;	author jont;	state Exp;
branches;
next	1.12;

1.12
date	96.04.04.11.30.06;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	96.01.25.13.07.56;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	95.10.15.13.43.45;	author brianm;	state Exp;
branches;
next	1.9;

1.9
date	95.10.13.15.46.17;	author brianm;	state Exp;
branches;
next	1.8;

1.8
date	95.10.10.14.53.51;	author brianm;	state Exp;
branches;
next	1.7;

1.7
date	95.10.09.01.23.56;	author brianm;	state Exp;
branches;
next	1.6;

1.6
date	95.10.06.12.31.46;	author brianm;	state Exp;
branches;
next	1.5;

1.5
date	95.10.05.13.46.54;	author brianm;	state Exp;
branches;
next	1.4;

1.4
date	95.09.07.09.39.54;	author matthew;	state Exp;
branches;
next	1.3;

1.3
date	95.09.06.13.55.37;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	95.08.02.15.06.07;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	95.07.27.10.39.30;	author matthew;	state Exp;
branches;
next	;

1.14.1.1
date	96.09.13.11.13.45;	author hope;	state Exp;
branches;
next	;

1.14.2.1
date	96.10.07.16.04.21;	author hope;	state Exp;
branches;
next	;

1.14.3.1
date	96.10.17.11.22.34;	author hope;	state Exp;
branches;
next	;

1.14.4.1
date	96.11.14.12.46.43;	author hope;	state Exp;
branches
	1.14.4.1.1.1;
next	;

1.14.4.1.1.1
date	96.11.28.14.58.20;	author hope;	state Exp;
branches;
next	;

1.14.5.1
date	96.11.22.18.06.55;	author hope;	state Exp;
branches;
next	;

1.14.6.1
date	96.12.17.09.55.01;	author hope;	state Exp;
branches;
next	;

1.14.7.1
date	96.12.17.17.45.39;	author hope;	state Exp;
branches
	1.14.7.1.1.1;
next	;

1.14.7.1.1.1
date	97.02.24.11.35.08;	author hope;	state Exp;
branches;
next	;

1.14.8.1
date	96.12.18.09.39.38;	author hope;	state Exp;
branches;
next	;

1.14.9.1
date	97.05.12.10.31.58;	author hope;	state Exp;
branches
	1.14.9.1.1.1
	1.14.9.1.2.1
	1.14.9.1.3.1;
next	;

1.14.9.1.1.1
date	97.07.28.18.17.00;	author daveb;	state Exp;
branches
	1.14.9.1.1.1.1.1;
next	;

1.14.9.1.1.1.1.1
date	97.10.07.11.41.50;	author jkbrook;	state Exp;
branches;
next	;

1.14.9.1.2.1
date	97.09.08.17.10.33;	author daveb;	state Exp;
branches;
next	;

1.14.9.1.3.1
date	97.09.09.14.06.07;	author daveb;	state Exp;
branches;
next	;

1.16.1.1
date	97.09.10.19.20.34;	author brucem;	state Exp;
branches;
next	;

1.16.2.1
date	97.09.11.20.51.48;	author daveb;	state Exp;
branches;
next	;

1.16.3.1
date	99.04.01.17.55.20;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Moved from library
@


1.16
log
@[Bug #30241]
Implement proper find dialog.
@
text
@(*
 * Copyright (c) 1995 Harlequin Ltd.
 *  $Log: graph_widget.sml,v $
 * Revision 1.15  1997/08/04  10:00:12  brucem
 * [Bug #30202]
 * Added comment explaining how to use function make,
 * Added search facility.
 *
 * Revision 1.14  1996/05/28  14:23:24  matthew
 * Adding parent_title parameter to make
 *
 * Revision 1.13  1996/05/07  11:33:46  jont
 * Array moving to MLWorks.Array
 *
 * Revision 1.12  1996/04/04  11:30:06  matthew
 * Changing interface ot allow monitoring of options
 *
 * Revision 1.11  1996/01/25  13:07:56  matthew
 * Adding highlighted flag to draw_item
 *
 * Revision 1.10  1995/10/15  13:43:45  brianm
 * Added Extent datatype and modified GraphWidget.make interface to
 * include modified item_draw and item_extent functions.
 *
 * Revision 1.9  1995/10/13  15:46:17  brianm
 * Update to button action interface ...
 *
 * Revision 1.8  1995/10/10  14:53:51  brianm
 * Modifications to selection/expansion protocol + changes to GraphSpec.
 *
 * Revision 1.7  1995/10/09  01:23:56  brianm
 * Slightly changing the graph selection repositioning interface.
 *
 * Revision 1.6  1995/10/06  12:31:46  brianm
 * Modifying make interface so that initialise takes the selection function
 * and added utilities for repositioning the graph selection.
 *
 * Revision 1.5  1995/10/05  13:46:54  brianm
 * Adding user-controlled graph positioning.
 *
 * Revision 1.4  1995/09/07  09:39:54  matthew
 * Extending GraphSpec type
 *
 * Revision 1.3  1995/09/06  13:55:37  matthew
 * General improvements
 *
 * Revision 1.2  1995/08/02  15:06:07  matthew
 * Changing interface to grapher
 *
 * Revision 1.1  1995/07/27  10:39:30  matthew
 * new unit
 * Moved from library
 *
 *  Revision 1.2  1995/07/26  13:19:25  matthew
 *  Adding name and title to make function
 *
 *  Revision 1.1  1995/07/20  16:16:34  matthew
 *  new unit
 *  New graph unit
 *
*)
signature GRAPH_WIDGET =
  sig
    type Point
    type Region
    type Widget
    type GraphicsPort

    (* NEXT = put the children next to the parent *)
    (* BELOW = put the children below the parent (like FileManager) *)
    datatype ChildPosition = NEXT | BELOW | CENTRE

    (* ALWAYS - always expand children (but never contract) *)
    (* TOGGLE - toggle between hidden/exposed               *)
    (* SOMETIMES(hfun) - parent-controlled exposure of children :-) *)
    datatype ChildExpansion = ALWAYS | TOGGLE | SOMETIMES of (bool -> bool)

    (* Horizontal = root on left hand side *)
    (* Vertical = root on top *)
    datatype Orientation = HORIZONTAL | VERTICAL

    datatype LineStyle = STRAIGHT | STEP

    datatype GraphSpec = 
      GRAPH_SPEC of 
      {child_position : ChildPosition ref,
       child_expansion : ChildExpansion ref,
       default_visibility : bool ref,
       show_root_children : bool ref,  (* expose root's children? *) 
       indicateHiddenChildren : bool ref,
       orientation : Orientation ref,
       line_style: LineStyle ref,
       horizontal_delta : int ref,
       vertical_delta : int ref,
       graph_origin : (int * int) ref,  (* origin for root and hence graph *) 
       show_all : bool ref}


    (* Extents:

       Graph node are presently rectangular regions - with origin located
       centrally.  This means that layout algorithms are neutral to the
       orientation HORIZONTAL or VERTICAL.  The dimensions of the region
       occupied by a graph node are represented as offsets from this point
       i.e. left, right, up, down.  These dimensions are collectively called
       an Extent.
    *)
    datatype Extent = EXTENT of { left : int, right : int, up : int, down : int } 


    (* `make' builds an instance of the graph widget *)
    (* Use:
           make name title parent_title parent graph_spec make_graph
                draw_item item_extent
          name : string
          title : string
          parent_title : string
          parent : widget
          graph_spec : GraphSpec  -- describes the style
          make_graph : () -> (nodes array , roots list) 
                       --  returns a pair of nodes and roots
          draw_item : (...) -> unit  -- a function to draw a node
          item_extend : (...) -> unit  -- a function to give the size of a node
       Returns:
           {widget, initialise, update, popup_menu, set_position,
            set_button_actions, initialiseSearch}
         widget : widget  -- the widget
         initialise : (... -> ... ) -> unit
                  -- takes a function to be executed when a node is selected
         update : (...) -> unit  -- redraws the graph
         popup_menu : unit -> unit 
               -- can be added to a menu to bring up the dialog box
         set_position : (...) -> (...)
         set_button_actions : (...) -> (...)
         initialiseSearch : (unit -> string) -> (string -> '_a -> bool) list
                            -> unit -> unit
               -- takes unit -> string getDefault function
                  two match functions - one for matching against whole words and
			the other for partial matches
                  returns a unit -> unit which can be put on menus
      *)
    val make : 
        string * string * string * Widget *
        GraphSpec * 
        (unit -> ('_a * int list) MLWorks.Internal.Array.array * int list) * 
        ('_a * bool * GraphicsPort * Point -> unit)  *
        ('_a * GraphicsPort -> Extent)
        ->
           {widget: Widget,
            initialize : ('_a * Region -> unit)  -> unit,
            update : unit -> unit,
            popup_menu : unit-> unit,
            set_position : Point -> unit,
            set_button_actions : {  left    : ((unit -> unit) * Point -> unit),
                                    right   : ((unit -> unit) * Point -> unit),
                                    middle  : ((unit -> unit) * Point -> unit)
                                 } -> unit,
            initialiseSearch :
             (unit -> string) ->
             ((string -> '_a -> bool) * (string -> '_a -> bool)) ->
             unit -> unit
           }


     (* Graph selection repositioning utility *)

     datatype Position  = NONE | TOP  | CENTER | BOTTOM | LEFT | RIGHT | ORIGIN

     val reposition_graph_selection :
         ( Widget * (Point -> unit) ) ->
           { reposition_fn : Region -> unit, (* Perform repositioning *)
             redisplay_fn  : unit -> unit,  (* redisplay in current position *)
             popup_fn      : Widget -> (unit -> unit),(* Popup menu *)
             v_position    : Position ref,  (* Vert. Position *)
             h_position    : Position ref,  (* Hori. Position *)
             v_offset      : int ref,  (* Vert. Offset   *)
             h_offset      : int ref      (* Hori. Offset   *)
           }
  end

@


1.16.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.16  1997/09/05  10:43:34  johnh
 * [Bug #30241]
 * Implement proper find dialog.
 *
@


1.16.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.16  1997/09/05  10:43:34  johnh
 * [Bug #30241]
 * Implement proper find dialog.
 *
@


1.16.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.16  1997/09/05  10:43:34  johnh
 * [Bug #30241]
 * Implement proper find dialog.
 *
@


1.15
log
@[Bug #30202]
Added comment explaining how to use function make,
Added search facility.
@
text
@d4 5
d138 2
a139 1
                  list of match functions with names
d160 1
a160 1
             ( (string -> '_a -> bool) * string ) list  ->
@


1.14
log
@Adding parent_title parameter to make
@
text
@d4 3
d85 1
d106 30
a135 1
    (*  make() builds a graph widget instance *)
a138 1
      (* The graph items and their children and the roots *)
a139 1
      (* Drawing and extent functions *)
a143 1
            (* initialize takes select_fn as argument *)
d151 5
a155 1
                                 } -> unit
d165 2
a166 2
           { reposition_fn : Region -> unit,          (* Perform repositioning *)
             redisplay_fn  : unit -> unit,            (* redisplay in current position *)
d168 4
a171 4
             v_position    : Position ref,            (* Vert. Position *)
             h_position    : Position ref,            (* Hori. Position *)
             v_offset      : int ref,                 (* Vert. Offset   *)
             h_offset      : int ref                  (* Hori. Offset   *)
@


1.14.9.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/05/28  14:23:24  matthew
 * Adding parent_title parameter to make
 *
@


1.14.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.14.9.1  1997/05/12  10:31:58  hope
 * branched from 1.14
 *
@


1.14.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.14.9.1  1997/05/12  10:31:58  hope
 * branched from 1.14
 *
@


1.14.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.14.9.1  1997/05/12  10:31:58  hope
 * branched from 1.14
 *
@


1.14.9.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.14.9.1.1.1  1997/07/28  18:17:00  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.14.8.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/05/28  14:23:24  matthew
 * Adding parent_title parameter to make
 *
@


1.14.7.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/05/28  14:23:24  matthew
 * Adding parent_title parameter to make
 *
@


1.14.7.1.1.1
log
@branched from 1.14.7.1
@
text
@a3 3
 * Revision 1.14.7.1  1996/12/17  17:45:39  hope
 * branched from 1.14
 *
@


1.14.6.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/05/28  14:23:24  matthew
 * Adding parent_title parameter to make
 *
@


1.14.5.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/05/28  14:23:24  matthew
 * Adding parent_title parameter to make
 *
@


1.14.4.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/05/28  14:23:24  matthew
 * Adding parent_title parameter to make
 *
@


1.14.4.1.1.1
log
@branched from 1.14.4.1
@
text
@a3 3
 * Revision 1.14.4.1  1996/11/14  12:46:43  hope
 * branched from 1.14
 *
@


1.14.3.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/05/28  14:23:24  matthew
 * Adding parent_title parameter to make
 *
@


1.14.2.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/05/28  14:23:24  matthew
 * Adding parent_title parameter to make
 *
@


1.14.1.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/05/28  14:23:24  matthew
 * Adding parent_title parameter to make
 *
@


1.13
log
@Array moving to MLWorks.Array
@
text
@d4 3
d104 1
a104 1
        string * string * Widget *
@


1.12
log
@Changing interface ot allow monitoring of options
@
text
@d4 3
d104 1
a104 1
        (unit -> ('_a * int list) Array.array * int list) * 
@


1.11
log
@Adding highlighted flag to draw_item
@
text
@d4 3
d72 2
a73 2
      {child_position : ChildPosition,
       child_expansion : ChildExpansion,
d75 7
a81 7
       show_root_children : bool,  (* expose root's children? *) 
       orientation : Orientation,
       line_style: LineStyle,
       horizontal_delta : int,
       vertical_delta : int,
       graph_origin : (int * int),  (* origin for root and hence graph *) 
       show_all : bool}
@


1.10
log
@Added Extent datatype and modified GraphWidget.make interface to
include modified item_draw and item_extent functions.
@
text
@d4 4
d100 1
a100 1
        ('_a * GraphicsPort * Point -> unit)  *
@


1.9
log
@Update to button action interface ...
@
text
@d4 3
d67 1
d73 1
a73 1
       graph_origin : (int * int),
d76 14
d96 3
a98 2
        ('_a * GraphicsPort * int * int -> unit)  *
        ('_a * GraphicsPort -> int * int * int * int) ->
d101 3
a103 3
            initialize: ('_a * Region -> unit)  -> unit,
            update: unit -> unit,
            popup_menu: unit-> unit,
@


1.8
log
@Modifications to selection/expansion protocol + changes to GraphSpec.
@
text
@d4 3
d86 3
a88 3
            set_button_actions : {  left    : (Point -> unit),
                                    right   : (Point -> unit),
                                    middle  : (Point -> unit)
a94 1

d99 7
a105 6
           { reposition_fn : Region -> unit,
             popup_fn      : Widget -> (unit -> unit),
             v_position    : Position ref,
             h_position    : Position ref,
             v_offset      : int ref,
             h_offset      : int ref
@


1.7
log
@Slightly changing the graph selection repositioning interface.
@
text
@d4 3
d41 1
d46 5
d53 1
a54 1
    datatype Orientation = HORIZONTAL | VERTICAL
d60 2
d66 1
@


1.6
log
@Modifying make interface so that initialise takes the selection function
and added utilities for repositioning the graph selection.
@
text
@d4 4
d70 5
a74 1
            set_position : Point -> unit
d80 2
a81 1
     datatype SelectPosn = NONE | TOP | CENTER | BOTTOM | ORIGIN
d86 5
a90 2
             popup_fn      : (Widget * string * (unit -> unit)) -> (unit -> unit),
             position      : SelectPosn ref
@


1.5
log
@Adding user-controlled graph positioning.
@
text
@d4 3
d54 2
a55 2
      string * string * Widget *
      GraphSpec * 
d57 1
a57 2
      (unit -> ('_a * int list) Array.array * int list) * 
      ('_a * Region -> unit) * (* select function *)
d59 14
a72 7
      ('_a * GraphicsPort * int * int -> unit)  *
      ('_a * GraphicsPort -> int * int * int * int) ->
      {widget: Widget,
       initialize: unit -> unit,
       update: unit -> unit,
       popup_menu: unit-> unit,
       set_position : Point -> unit}
d74 6
@


1.4
log
@Extending GraphSpec type
@
text
@d4 3
d27 2
d55 1
a55 1
      ('_a -> unit) * (* select function *)
d62 2
a63 1
       popup_menu: unit-> unit}
@


1.3
log
@General improvements
@
text
@d4 3
d42 2
a43 1
       vertical_delta : int}
@


1.2
log
@Changing interface to grapher
@
text
@d4 3
d42 1
a42 1
      string * string *
d44 4
d49 1
a49 3
      ('_a * GraphicsPort -> int * int * int * int) *
      (unit -> ('_a * ('_a -> '_a list) * ('_a * '_a -> bool) MLWorks.Option.option)) *
      Widget ->
d54 1
@


1.1
log
@new unit
Moved from library
@
text
@d4 4
d22 1
a22 2
    datatype ChildPosition = NEXT | BELOW
    datatype ParentPosition = TOP | CENTRE
a32 1
       parent_position : ParentPosition,
d45 4
a48 1
      Widget * (unit -> unit) * (unit -> unit)
@
