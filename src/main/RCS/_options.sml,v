head	1.47;
access;
symbols
	MLW_daveb_inline_1_4_99:1.47.1
	MLWorks_21c0_1999_03_25:1.47
	MLWorks_20c1_1998_08_20:1.47
	MLWorks_20c0_1998_08_04:1.47
	MLWorks_20b2c2_1998_06_19:1.47
	MLWorks_20b2_Windows_1998_06_12:1.47
	MLWorks_20b1c1_1998_05_07:1.47
	MLWorks_20b0_1998_04_07:1.46
	MLWorks_20b0_1998_03_20:1.46
	MLWorks_20m2_1998_02_16:1.45
	MLWorks_20m1_1997_10_23:1.45
	MLWorks_11r1:1.42.1.3.1.1.1
	MLWorks_workspace_97:1.44.2
	MLWorks_dt_wizard:1.44.1
	MLWorks_11c0_1997_09_09:1.42.1.3.1.1
	MLWorks_10r3:1.42.1.3.3
	MLWorks_10r2_551:1.42.1.3.2
	MLWorks_11:1.42.1.3.1
	MLWorks_1_0_r2c2_1997_07_28:1.42.1.3
	MLWorks_20m0_1997_06_20:1.44
	MLWorks_1_0_r2c2_1997_06_14:1.42.1.3
	MLWorks_1_0_r2c1_released_1997_05_23:1.42.1.3
	MLWorks_1_0_r2c1_1997_05_12:1.42.1
	MLWorks_BugFix_1997_04_24:1.43
	MLWorks_1_0_r2_Win32_1997_04_11:1.42
	MLWorks_1_0_r2_Unix_1997_04_04:1.42
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.38.5.1.1
	MLWorks_gui_1996_12_18:1.38.6
	MLWorks_1_0_Win32_1996_12_17:1.38.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.38.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.38.3.1
	MLWorks_1_0_Irix_1996_11_28:1.38.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.38.4
	MLWorks_1_0_Unix_1996_11_14:1.38.3
	MLWorks_Open_Beta2_1996_10_11:1.38.2
	MLWorks_License_dev:1.38.1
	MLWorks_1_open_beta_1996_09_13:1.37.1
	MLWorks_Open_Beta_1996_08_22:1.37
	MLWorks_Beta_1996_07_02:1.36
	MLWorks_Beta_1996_06_07:1.36
	MLWorks_Beta_1996_06_06:1.36
	MLWorks_Beta_1996_06_05:1.36
	MLWorks_Beta_1996_06_03:1.36
	MLWorks_Beta_1996_05_31:1.36
	MLWorks_Beta_1996_05_30:1.36
	ML_beta_release_12/08/94:1.27
	ML_beta_release_03/08/94:1.27
	ML_revised_beta_release_25/05/94:1.25
	ML_final_beta_release_02/03/94:1.24
	mlworks-28-01-1994:1.23
	Release:1.18
	mlworks-beta-01-09-1993:1.18;
locks; strict;
comment	@ * @;


1.47
date	98.04.24.11.29.54;	author johnh;	state Exp;
branches
	1.47.1.1;
next	1.46;

1.46
date	98.03.03.08.49.41;	author mitchell;	state Exp;
branches;
next	1.45;

1.45
date	97.10.10.09.19.19;	author daveb;	state Exp;
branches;
next	1.44;

1.44
date	97.05.27.11.12.58;	author daveb;	state Exp;
branches
	1.44.1.1
	1.44.2.1;
next	1.43;

1.43
date	97.04.23.10.43.01;	author daveb;	state Exp;
branches;
next	1.42;

1.42
date	97.04.01.09.20.15;	author daveb;	state Exp;
branches
	1.42.1.1;
next	1.41;

1.41
date	97.03.25.11.24.32;	author matthew;	state Exp;
branches;
next	1.40;

1.40
date	97.01.24.14.25.27;	author matthew;	state Exp;
branches;
next	1.39;

1.39
date	97.01.02.14.59.02;	author matthew;	state Exp;
branches;
next	1.38;

1.38
date	96.09.23.11.59.43;	author andreww;	state Exp;
branches
	1.38.1.1
	1.38.2.1
	1.38.3.1
	1.38.4.1
	1.38.5.1
	1.38.6.1;
next	1.37;

1.37
date	96.07.18.16.56.57;	author jont;	state Exp;
branches
	1.37.1.1;
next	1.36;

1.36
date	96.05.21.13.37.44;	author daveb;	state Exp;
branches;
next	1.35;

1.35
date	96.03.19.10.58.09;	author matthew;	state Exp;
branches;
next	1.34;

1.34
date	95.11.17.13.18.51;	author daveb;	state Exp;
branches;
next	1.33;

1.33
date	95.10.30.11.28.36;	author jont;	state Exp;
branches;
next	1.32;

1.32
date	95.06.30.15.01.31;	author daveb;	state Exp;
branches;
next	1.31;

1.31
date	95.05.23.14.35.10;	author daveb;	state Exp;
branches;
next	1.30;

1.30
date	95.05.15.14.43.44;	author matthew;	state Exp;
branches;
next	1.29;

1.29
date	95.05.02.11.43.09;	author matthew;	state Exp;
branches;
next	1.28;

1.28
date	95.02.14.12.02.18;	author matthew;	state Exp;
branches;
next	1.27;

1.27
date	94.07.29.16.39.49;	author daveb;	state Exp;
branches;
next	1.26;

1.26
date	94.07.26.13.39.04;	author daveb;	state Exp;
branches;
next	1.25;

1.25
date	94.05.05.13.03.24;	author daveb;	state Exp;
branches;
next	1.24;

1.24
date	94.02.28.05.44.38;	author nosa;	state Exp;
branches;
next	1.23;

1.23
date	93.12.17.16.19.30;	author matthew;	state Exp;
branches;
next	1.22;

1.22
date	93.11.04.16.29.15;	author jont;	state Exp;
branches;
next	1.21;

1.21
date	93.10.13.11.43.43;	author daveb;	state Exp;
branches;
next	1.20;

1.20
date	93.10.08.15.58.37;	author matthew;	state Exp;
branches;
next	1.19;

1.19
date	93.09.03.10.36.01;	author nosa;	state Exp;
branches;
next	1.18;

1.18
date	93.08.23.14.17.06;	author richard;	state Exp;
branches
	1.18.1.1;
next	1.17;

1.17
date	93.08.09.15.50.59;	author matthew;	state Exp;
branches;
next	1.16;

1.16
date	93.07.14.09.23.15;	author nosa;	state Exp;
branches;
next	1.15;

1.15
date	93.06.11.13.28.17;	author matthew;	state Exp;
branches;
next	1.14;

1.14
date	93.06.10.13.13.22;	author matthew;	state Exp;
branches;
next	1.13;

1.13
date	93.05.28.14.10.56;	author matthew;	state Exp;
branches;
next	1.12;

1.12
date	93.05.25.10.41.14;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	93.05.18.16.37.17;	author daveb;	state Exp;
branches;
next	1.10;

1.10
date	93.05.14.13.02.01;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	93.05.13.16.26.48;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	93.05.11.14.53.18;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	93.04.27.13.49.44;	author richard;	state Exp;
branches;
next	1.6;

1.6
date	93.04.22.11.42.41;	author richard;	state Exp;
branches;
next	1.5;

1.5
date	93.04.07.15.41.59;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	93.04.01.11.15.31;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	93.03.23.15.56.35;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	93.03.10.14.35.52;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	93.03.08.16.19.22;	author matthew;	state Exp;
branches;
next	;

1.18.1.1
date	93.08.23.14.17.06;	author jont;	state Exp;
branches;
next	1.18.1.2;

1.18.1.2
date	93.10.06.16.17.36;	author matthew;	state Exp;
branches;
next	1.18.1.3;

1.18.1.3
date	93.10.13.11.42.02;	author daveb;	state Exp;
branches;
next	;

1.37.1.1
date	96.09.13.11.18.38;	author hope;	state Exp;
branches;
next	;

1.38.1.1
date	96.10.07.16.08.31;	author hope;	state Exp;
branches;
next	;

1.38.2.1
date	96.10.17.11.26.46;	author hope;	state Exp;
branches;
next	;

1.38.3.1
date	96.11.14.12.52.09;	author hope;	state Exp;
branches
	1.38.3.1.1.1;
next	;

1.38.3.1.1.1
date	96.11.28.15.03.08;	author hope;	state Exp;
branches;
next	;

1.38.4.1
date	96.11.22.18.11.19;	author hope;	state Exp;
branches;
next	;

1.38.5.1
date	96.12.17.17.49.51;	author hope;	state Exp;
branches
	1.38.5.1.1.1;
next	;

1.38.5.1.1.1
date	97.02.24.11.40.03;	author hope;	state Exp;
branches;
next	;

1.38.6.1
date	96.12.18.09.43.56;	author hope;	state Exp;
branches;
next	;

1.42.1.1
date	97.05.12.10.36.25;	author hope;	state Exp;
branches;
next	1.42.1.2;

1.42.1.2
date	97.05.14.14.06.53;	author daveb;	state Exp;
branches;
next	1.42.1.3;

1.42.1.3
date	97.05.19.17.56.23;	author daveb;	state Exp;
branches
	1.42.1.3.1.1
	1.42.1.3.2.1
	1.42.1.3.3.1;
next	;

1.42.1.3.1.1
date	97.07.28.18.21.05;	author daveb;	state Exp;
branches
	1.42.1.3.1.1.1.1;
next	;

1.42.1.3.1.1.1.1
date	97.10.07.11.46.34;	author jkbrook;	state Exp;
branches;
next	;

1.42.1.3.2.1
date	97.09.08.17.14.32;	author daveb;	state Exp;
branches;
next	;

1.42.1.3.3.1
date	97.09.09.14.10.25;	author daveb;	state Exp;
branches;
next	;

1.44.1.1
date	97.09.10.19.26.21;	author brucem;	state Exp;
branches;
next	;

1.44.2.1
date	97.09.11.20.56.23;	author daveb;	state Exp;
branches;
next	;

1.47.1.1
date	99.04.01.17.58.01;	author daveb;	state Exp;
branches;
next	;


desc
@Options facility
@


1.47
log
@[Bug #30229]
local_functions set to false by default.
@
text
@(*  ==== COMPILER OPTIONS CONTROL ====
 *
 *  Copyright (C) 1992 Harlequin Ltd
 *
 *  Description
 *  -----------
 *
 *  Revision Log
 *  ------------
 *  $Log: _options.sml,v $
 * Revision 1.46  1998/03/03  08:49:41  mitchell
 * [Bug #70074]
 * Add depth limit support for signature printing
 *
 * Revision 1.45  1997/10/10  09:19:19  daveb
 * [Bug #30280]
 *
 * No longer compile for R3000 by default on MIPS.
 *
 * Revision 1.44  1997/05/27  11:12:58  daveb
 * [Bug #30136]
 * Removed early-mips-r4000 option.
 *
 * Revision 1.43  1997/04/23  10:43:01  daveb
 * [Bug #30040]
 * Turned on local function optimisation by default.
 *
 * Revision 1.42  1997/04/01  09:20:15  daveb
 * [Bug #1995]
 * Changed the default setting of the MIPS-specific compiler options back to
 * the most general values, so that we can build and distribute images on the
 * R3000.
 *
 * Revision 1.41  1997/03/25  11:24:32  matthew
 * Platform specific compiler options changes
 *
 * Revision 1.40  1997/01/24  14:25:27  matthew
 * Adding architecture dependent options
 *
 * Revision 1.39  1997/01/02  14:59:02  matthew
 * Adding local function option
 *
 * Revision 1.38  1996/09/23  11:59:43  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
 * Revision 1.37  1996/07/18  16:56:57  jont
 * Add option to turn on/off compilation messages from intermake
 *
 * Revision 1.36  1996/05/21  13:37:44  daveb
 * Removed some redundant options; moved abstractions from extensions to
 * compatibility options.
 *
 * Revision 1.35  1996/03/19  10:58:09  matthew
 * Adding options for new language definition
 *
 * Revision 1.34  1995/11/17  13:18:51  daveb
 * Removed no_execute.
 *
 *  Revision 1.33  1995/10/30  11:28:36  jont
 *  Add opt_handlers to compiler options
 *
 *  Revision 1.32  1995/06/30  15:01:31  daveb
 *  Added float_precision option to ValuePrinter options.
 *
 *  Revision 1.31  1995/05/23  14:35:10  daveb
 *  Removed the output_lambda option.
 *
 *  Revision 1.30  1995/05/15  14:43:44  matthew
 *  Moving NJ semicolons (or whatever) to extensions
 *
 *  Revision 1.29  1995/05/02  11:43:09  matthew
 *  Removing debug_polyvariables option
 *
 *  Revision 1.28  1995/02/14  12:02:18  matthew
 *  Adding set_no_execute
 *
 *  Revision 1.27  1994/07/29  16:39:49  daveb
 *  Moved preferences into separate structure.
 *
 *  Revision 1.26  1994/07/26  13:39:04  daveb
 *  Added full_menus option.
 *
 *  Revision 1.25  1994/05/05  13:03:24  daveb
 *  Adding overloading options.
 *
 *  Revision 1.24  1994/02/28  05:44:38  nosa
 *  Step and Modules Debugger compiler options.
 *
 *  Revision 1.23  1993/12/17  16:19:30  matthew
 *  Added maximum_str_depth to options.
 *
 *  Revision 1.22  1993/11/04  16:29:15  jont
 *  Added interrupt option
 *
 *  Revision 1.21  1993/10/13  11:43:43  daveb
 *  Merged in bug fix.
 *
 *  Revision 1.20  1993/10/08  15:58:37  matthew
 *  Bug fixes
 *
 *  Revision 1.19  1993/09/03  10:36:01  nosa
 *  New compiler option debug_polyvariables for polymorphic debugger.
 *
 *  Revision 1.18.1.3  1993/10/13  11:42:02  daveb
 *  Changed print options.
 *
 *  Revision 1.18.1.2  1993/10/06  16:17:36  matthew
 *  Set default for print_exn_details to false
 *
 *  Revision 1.18.1.1  1993/08/23  14:17:06  jont
 *  Fork for bug fixing
 *
 *  Revision 1.18  1993/08/23  14:17:06  richard
 *  Added output_lambda option.
 *
 *  Revision 1.17  1993/08/09  15:50:59  matthew
 *  Added more environment preferences
 *
 *  Revision 1.16  1993/07/14  09:23:15  nosa
 *  new compiler option debug_variables for local and closure variable
 *  inspection in the debugger.
 *
 *  Revision 1.15  1993/06/11  13:28:17  matthew
 *   Changed defaults for fixity_specs and open_fixity to false
 *
 *  Revision 1.14  1993/06/10  13:13:22  matthew
 *  Added open fixity and fixity spec options
 *
 *  Revision 1.13  1993/05/28  14:10:56  matthew
 *  > Added environment options
 *
 *  Revision 1.12  1993/05/25  10:41:14  matthew
 *  Changed default for abstractions to true
 *
 *  Revision 1.11  1993/05/18  16:37:17  daveb
 *  Rearranged some of the options.
 *
 *  Revision 1.10  1993/05/14  13:02:01  jont
 *  Added options to control parse treatment of New Jersey style weak type variables
 *
 *  Revision 1.9  1993/05/13  16:26:48  jont
 *  Changed default for op_in_datatype to true
 *
 *  Revision 1.8  1993/05/11  14:53:18  jont
 *  Added option to control make -n type facility
 *
 *  Revision 1.7  1993/04/27  13:49:44  richard
 *  Unified profiling and tracing options into `intercept'.
 *  Removed poly_makestring option.
 *
 *  Revision 1.6  1993/04/22  11:42:41  richard
 *  The editor interface is now implemented directly through
 *  Unix system calls, and is not part of the pervasive library
 *  or the runtime system.
 *
 *  Revision 1.5  1993/04/07  15:41:59  jont
 *  Added editor options
 *
 *  Revision 1.4  1993/04/01  11:15:31  jont
 *  Added compatibility options
 *  
 *  Revision 1.3  1993/03/23  15:56:35  daveb
 *  Added extension options.
 *  
 *  Revision 1.2  1993/03/10  14:35:52  matthew
 *  Added compat_options
 *  options now a tagged record rather than tuple.
 *  
 *  Revision 1.1  1993/03/08  16:19:22  matthew
 *  Initial revision
 *)

require "options";

(* These options objects contain only the options that are user modifiable *)

functor Options () : OPTIONS =
  struct
    datatype listing_options =
      LISTINGOPTIONS of {show_absyn      : bool,
                         show_lambda     : bool,
                         show_match      : bool,
                         show_opt_lambda : bool,
                         show_environ    : bool,
                         show_mir        : bool,
                         show_opt_mir    : bool,
                         show_mach       : bool}

    val default_listing_options =
      LISTINGOPTIONS {show_absyn = false,
                      show_lambda = false,
                      show_match = false,
                      show_opt_lambda = false,
                      show_environ = false,
                      show_mir = false,
                      show_opt_mir = false,
                      show_mach = false}

    datatype compiler_options =
      COMPILEROPTIONS of {generate_debug_info            : bool,
                          debug_variables                : bool,
                          generate_moduler               : bool,
                          intercept		         : bool,
			  interrupt                      : bool,
                          opt_handlers                   : bool,
                          opt_leaf_fns                   : bool,
                          opt_tail_calls                 : bool,
                          opt_self_calls                 : bool,
                          local_functions                : bool,
			  print_messages		 : bool,
                          (* Architecture options.  If we have too many of *)
                          (* these, then another mechanism would be *)
                          (* desirable *)
                          mips_r4000                     : bool,
                          sparc_v7                       : bool}


    val default_compiler_options =
      COMPILEROPTIONS {generate_debug_info = false,
                       debug_variables = false,
                       generate_moduler = false,
                       intercept = false,
		       interrupt = false,
                       opt_handlers = false,
                       opt_leaf_fns = true,
                       opt_tail_calls = true,
                       opt_self_calls = true,
                       local_functions = false,
		       print_messages = true,
                       mips_r4000 = true,
                       sparc_v7 = false}

    datatype print_options =
      PRINTOPTIONS of {maximum_seq_size : int,
                       maximum_string_size : int,
                       maximum_ref_depth : int,
                       maximum_str_depth : int,
                       maximum_sig_depth : int,
                       maximum_depth : int,
		       float_precision : int,
                       print_fn_details : bool,
                       print_exn_details : bool,
                       show_id_class: bool,
                       show_eq_info : bool
                       }

    val default_print_options =
      PRINTOPTIONS {maximum_seq_size = 10,
                    maximum_string_size = 255,
                    maximum_ref_depth = 3,
                    maximum_str_depth = 2,
                    maximum_sig_depth = 1,
                    maximum_depth = 7,
		    float_precision = 10,
                    print_fn_details = false,
                    print_exn_details = false,
                    show_eq_info = false,
                    show_id_class = false}

    datatype extension_options =
      EXTENSIONOPTIONS of {require_keyword : bool,
			   type_dynamic : bool}

    val default_extension_options =
      EXTENSIONOPTIONS {require_keyword = true,
		        type_dynamic = false}

    datatype compat_options =
      COMPATOPTIONS of {nj_op_in_datatype   : bool,
			nj_signatures       : bool,
			weak_type_vars      : bool,
                        fixity_specs        : bool,
                        open_fixity         : bool,
			abstractions        : bool,
                        old_definition      : bool}

    val default_compat_options =
      COMPATOPTIONS {nj_op_in_datatype = false,
		     nj_signatures = false,
		     weak_type_vars = false,
                     fixity_specs = false,
                     open_fixity = false,
		     abstractions = false,
                     old_definition = false}

    datatype options = OPTIONS of {listing_options : listing_options,
                                   compiler_options : compiler_options,
                                   print_options : print_options,
                                   extension_options : extension_options,
                                   compat_options : compat_options}

    val default_options = OPTIONS {listing_options = default_listing_options,
                                   compiler_options = default_compiler_options,
                                   print_options = default_print_options,
                                   extension_options = default_extension_options,
                                   compat_options = default_compat_options}

  end
@


1.47.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a10 4
 * Revision 1.47  1998/04/24  11:29:54  johnh
 * [Bug #30229]
 * local_functions set to false by default.
 *
@


1.46
log
@[Bug #70074]
Add depth limit support for signature printing
@
text
@d11 4
d229 1
a229 1
                       local_functions = true,
@


1.45
log
@[Bug #30280]

No longer compile for R3000 by default on MIPS.
@
text
@d11 5
d235 1
d249 1
@


1.44
log
@[Bug #30136]
Removed early-mips-r4000 option.
@
text
@d11 4
d222 1
a222 1
                       mips_r4000 = false,
@


1.44.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a10 4
 * Revision 1.44  1997/05/27  11:12:58  daveb
 * [Bug #30136]
 * Removed early-mips-r4000 option.
 *
@


1.44.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a10 4
 * Revision 1.44  1997/05/27  11:12:58  daveb
 * [Bug #30136]
 * Removed early-mips-r4000 option.
 *
@


1.43
log
@[Bug #30040]
Turned on local function optimisation by default.
@
text
@d11 4
a201 1
                          early_mips_r4000               : bool,
a217 1
                       early_mips_r4000 = true,
@


1.42
log
@[Bug #1995]
Changed the default setting of the MIPS-specific compiler options back to
the most general values, so that we can build and distribute images on the
R3000.
@
text
@d11 6
d213 1
a213 1
                       local_functions = false,
@


1.42.1.1
log
@branched from 1.42
@
text
@a10 6
 * Revision 1.42  1997/04/01  09:20:15  daveb
 * [Bug #1995]
 * Changed the default setting of the MIPS-specific compiler options back to
 * the most general values, so that we can build and distribute images on the
 * R3000.
 *
@


1.42.1.2
log
@[Bug #30040]
Turned on local function optimisation by default.
@
text
@a10 3
 * Revision 1.42.1.1  1997/05/12  10:36:25  hope
 * branched from 1.42
 *
d213 1
a213 1
                       local_functions = true,
@


1.42.1.3
log
@[Bug #30136]
Hid early_mips_r4000 option from users.
@
text
@a10 4
 * Revision 1.42.1.2  1997/05/14  14:06:53  daveb
 * [Bug #30040]
 * Turned on local function optimisation by default.
 *
d218 1
a218 1
                       early_mips_r4000 = false,
@


1.42.1.3.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a10 4
 * Revision 1.42.1.3  1997/05/19  17:56:23  daveb
 * [Bug #30136]
 * Hid early_mips_r4000 option from users.
 *
@


1.42.1.3.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a10 4
 * Revision 1.42.1.3  1997/05/19  17:56:23  daveb
 * [Bug #30136]
 * Hid early_mips_r4000 option from users.
 *
@


1.42.1.3.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a10 4
 * Revision 1.42.1.3  1997/05/19  17:56:23  daveb
 * [Bug #30136]
 * Hid early_mips_r4000 option from users.
 *
@


1.42.1.3.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a10 3
 * Revision 1.42.1.3.1.1  1997/07/28  18:21:05  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.41
log
@Platform specific compiler options changes
@
text
@d11 3
d209 2
a210 2
                       early_mips_r4000 = false,
                       mips_r4000 = true,
@


1.40
log
@Adding architecture dependent options
@
text
@d11 3
d189 1
a190 1
                          mips2                          : bool,
d206 1
d208 1
a208 2
                       mips2 = false,
                       sparc_v7 = true}
@


1.39
log
@Adding local function option
@
text
@d11 3
d182 8
a189 1
			  print_messages		 : bool}
d202 4
a205 2
		       print_messages = true}

@


1.38
log
@[Bug #1605]
removing default_overloads flag.  Now subsumed by old_definition.
@
text
@d11 4
d157 1
d169 1
a169 1
      COMPILEROPTIONS of {generate_debug_info                          : bool,
d178 1
d191 1
@


1.38.6.1
log
@branched from 1.38
@
text
@a10 4
 * Revision 1.38  1996/09/23  11:59:43  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
@


1.38.5.1
log
@branched from 1.38
@
text
@a10 4
 * Revision 1.38  1996/09/23  11:59:43  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
@


1.38.5.1.1.1
log
@branched from 1.38.5.1
@
text
@a10 3
 * Revision 1.38.5.1  1996/12/17  17:49:51  hope
 * branched from 1.38
 *
@


1.38.4.1
log
@branched from 1.38
@
text
@a10 4
 * Revision 1.38  1996/09/23  11:59:43  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
@


1.38.3.1
log
@branched from 1.38
@
text
@a10 4
 * Revision 1.38  1996/09/23  11:59:43  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
@


1.38.3.1.1.1
log
@branched from 1.38.3.1
@
text
@a10 3
 * Revision 1.38.3.1  1996/11/14  12:52:09  hope
 * branched from 1.38
 *
@


1.38.2.1
log
@branched from 1.38
@
text
@a10 4
 * Revision 1.38  1996/09/23  11:59:43  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
@


1.38.1.1
log
@branched from 1.38
@
text
@a10 4
 * Revision 1.38  1996/09/23  11:59:43  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
@


1.37
log
@Add option to turn on/off compilation messages from intermake
@
text
@d11 3
a226 1
                        default_overloads   : bool,
a235 1
                     default_overloads = false,
@


1.37.1.1
log
@branched from 1.37
@
text
@a10 3
 * Revision 1.37  1996/07/18  16:56:57  jont
 * Add option to turn on/off compilation messages from intermake
 *
@


1.36
log
@Removed some redundant options; moved abstractions from extensions to
compatibility options.
@
text
@d11 4
d169 2
a170 1
                          opt_self_calls                 : bool}
d181 2
a182 1
                       opt_self_calls = true}
@


1.35
log
@Adding options for new language definition
@
text
@d11 3
d166 1
d206 1
a206 2
			   type_dynamic : bool,
			   abstractions : bool}
d210 1
a210 2
		        type_dynamic = true,
			abstractions = true}
d219 1
a219 4
                        vector_literals     : bool,
                        wildcard_warnings   : bool,
			core_only           : bool,
			functional          : bool,
d229 1
a229 4
                     vector_literals = false,
                     wildcard_warnings = false,
		     core_only = false,
		     functional = false,
@


1.34
log
@Removed no_execute.
@
text
@d11 3
d203 1
a203 2
			   abstractions : bool,
                           topdec_semicolons : bool}
d208 1
a208 2
			abstractions = true,
                        topdec_semicolons = true}
d211 1
a211 4
      COMPATOPTIONS of {string_inequalities : bool,
			infixr_assoc        : bool,
			nj_op_in_datatype   : bool,
			derived_redef       : bool,
d220 2
a221 1
			functional          : bool}
d224 1
a224 4
      COMPATOPTIONS {string_inequalities = true,
		     infixr_assoc = false,
		     nj_op_in_datatype = false,
		     derived_redef = true,
d233 2
a234 1
		     functional = false}
@


1.33
log
@Add opt_handlers to compiler options
@
text
@d11 3
a153 1
			  no_execute		         : bool,
a163 1
		       no_execute = false,
a249 39

  (* This is needed in _incremental, unfortunately *)
  fun set_no_execute (OPTIONS{listing_options,
                              compiler_options,
                              print_options,
                              compat_options,
                              extension_options
                              }) =
    let
      val COMPILEROPTIONS {generate_debug_info,
			   debug_variables,
			   generate_moduler,
			   no_execute,
			   intercept,
			   interrupt,
			   opt_handlers,
			   opt_leaf_fns,
			   opt_tail_calls,
			   opt_self_calls} = compiler_options
      val new_compiler_options = 
        COMPILEROPTIONS
        {generate_debug_info = generate_debug_info,
         debug_variables = debug_variables,
         generate_moduler = generate_moduler,
         no_execute = true,  (* Aha!! *)
         intercept = intercept,
         interrupt = interrupt,
         opt_handlers = opt_handlers,
         opt_leaf_fns = opt_leaf_fns,
         opt_tail_calls = opt_tail_calls,
         opt_self_calls = opt_self_calls} 
    in
      OPTIONS
      {listing_options = listing_options,
       compiler_options = new_compiler_options,
       print_options = print_options,
       compat_options = compat_options,
       extension_options = extension_options}
    end
@


1.32
log
@Added float_precision option to ValuePrinter options.
@
text
@d11 3
d154 1
d165 1
d257 11
a267 9
    let val COMPILEROPTIONS {generate_debug_info,
                             debug_variables,
                             generate_moduler,
                             no_execute,
                             intercept,
                             interrupt,
                             opt_leaf_fns,
                             opt_tail_calls,
                             opt_self_calls} = compiler_options
d276 1
@


1.31
log
@Removed the output_lambda option.
@
text
@d11 3
d172 1
d185 1
@


1.30
log
@Moving NJ semicolons (or whatever) to extensions
@
text
@d11 3
d130 1
a130 2
                         show_mach       : bool,
                         output_lambda	 : bool}
d139 1
a139 2
                      show_mach = false,
                      output_lambda = false}
@


1.29
log
@Removing debug_polyvariables option
@
text
@d11 3
d188 2
a189 1
			   abstractions : bool}
d194 2
a195 1
			abstractions = true}
a203 1
			nj_semicolons       : bool,
a218 1
		     nj_semicolons = false,
@


1.28
log
@Adding set_no_execute
@
text
@d11 3
a139 2
                          debug_polyvariables            : bool,
                          generate_stepper               : bool,
a140 1
                          generate_stepper_specific      : string,
a149 3
                       debug_polyvariables = false,
                       generate_stepper = false,
                       generate_stepper_specific = "",
a244 2
                             debug_polyvariables,
                             generate_stepper,
a245 1
                             generate_stepper_specific,
a255 2
         debug_polyvariables = debug_polyvariables,
         generate_stepper = generate_stepper,
a256 1
         generate_stepper_specific = generate_stepper_specific,
@


1.27
log
@Moved preferences into separate structure.
@
text
@d11 3
d135 1
a135 1
      COMPILEROPTIONS of {debug                          : bool,
d148 1
a148 1
      COMPILEROPTIONS {debug = false,
d238 42
@


1.26
log
@Added full_menus option.
@
text
@d11 3
a223 20
    datatype editor_options =
      EDITOR_OPTIONS of {editor : string ref}

    val default_editor_options = EDITOR_OPTIONS{editor = ref "emacs"}

    datatype environment_options =
      ENVIRONMENT_OPTIONS of {history_length: int ref,
                              window_debugger : bool ref,
                              auto_output_window:       bool ref,
                              completion_menu:          bool ref,
			      full_menus:		bool ref
                              }

    val default_environment_options =
      ENVIRONMENT_OPTIONS {window_debugger = ref true,
                           history_length = ref 20,
                           auto_output_window = ref false,
                           completion_menu = ref true,
			   full_menus = ref false}

d228 1
a228 4
                                   compat_options : compat_options,
				   editor_options : editor_options,
                                   environment_options : environment_options
                                   }
d234 1
a234 4
                                   compat_options = default_compat_options,
				   editor_options = default_editor_options,
                                   environment_options = default_environment_options
                                   }
@


1.25
log
@Adding overloading options.
@
text
@d11 3
d230 2
a231 1
                              completion_menu:          bool ref
d234 6
a239 4
    val default_environment_options = ENVIRONMENT_OPTIONS{window_debugger = ref true,
                                                          history_length = ref 20,
                                                          auto_output_window = ref false,
                                                          completion_menu = ref true}
@


1.24
log
@Step and Modules Debugger compiler options.
@
text
@d11 3
d196 3
d212 3
@


1.23
log
@Added maximum_str_depth to options.
@
text
@d11 3
d123 12
a134 9
      COMPILEROPTIONS of {debug                 : bool,
                          debug_variables       : bool,
                          debug_polyvariables   : bool,
			  no_execute		: bool,
                          intercept		: bool,
			  interrupt             : bool,
                          opt_leaf_fns          : bool,
                          opt_tail_calls        : bool,
                          opt_self_calls        : bool}
d139 3
@


1.22
log
@Added interrupt option
@
text
@d11 3
d145 1
d157 1
@


1.21
log
@Merged in bug fix.
@
text
@d11 3
d122 1
d132 1
@


1.20
log
@Bug fixes
@
text
@d11 3
d17 3
d134 2
a135 1
      PRINTOPTIONS of {maximum_list_size : int,
d145 2
a146 1
      PRINTOPTIONS {maximum_list_size = 10,
@


1.19
log
@New compiler option debug_polyvariables for polymorphic debugger.
@
text
@d11 9
d142 1
a142 1
                    print_exn_details = true,
@


1.18
log
@Added output_lambda option.
@
text
@d11 3
d101 1
d110 1
@


1.18.1.1
log
@Fork for bug fixing
@
text
@a10 3
 *  Revision 1.18  1993/08/23  14:17:06  richard
 *  Added output_lambda option.
 *
@


1.18.1.2
log
@Set default for print_exn_details to false
@
text
@a10 3
 *  Revision 1.18.1.1  1993/08/23  14:17:06  jont
 *  Fork for bug fixing
 *
d131 1
a131 1
                    print_exn_details = false,
@


1.18.1.3
log
@Changed print options.
@
text
@a10 3
 *  Revision 1.18.1.2  1993/10/06  16:17:36  matthew
 *  Set default for print_exn_details to false
 *
d120 1
a120 2
      PRINTOPTIONS of {maximum_seq_size : int,
                       maximum_string_size : int,
d130 1
a130 2
      PRINTOPTIONS {maximum_seq_size = 10,
                    maximum_string_size = 255,
@


1.17
log
@Added more environment preferences
@
text
@d11 3
d82 2
a83 1
                         show_mach       : bool}
d92 2
a93 1
                      show_mach = false}
@


1.16
log
@new compiler option debug_variables for local and closure variable
inspection in the debugger.
@
text
@d11 4
d169 10
a178 3
      ENVIRONMENT_OPTIONS of {window_debugger : bool ref}

    val default_environment_options = ENVIRONMENT_OPTIONS{window_debugger = ref true}
@


1.15
log
@ Changed defaults for fixity_specs and open_fixity to false
@
text
@d11 3
d88 1
d96 1
@


1.14
log
@Added open fixity and fixity spec options
@
text
@d11 3
d149 2
a150 2
                     fixity_specs = true,
                     open_fixity = true,
@


1.13
log
@> Added environment options
@
text
@d11 3
d133 2
d146 2
@


1.12
log
@Changed default for abstractions to true
@
text
@d11 3
d149 5
d159 3
a161 1
				   editor_options : editor_options}
d168 3
a170 1
				   editor_options = default_editor_options}
@


1.11
log
@Rearranged some of the options.
@
text
@d11 3
d117 1
a117 1
			abstractions = false}
@


1.10
log
@Added options to control parse treatment of New Jersey style weak type variables
@
text
@d11 3
a72 1
                          debug_warnings        : bool,
d77 1
a77 2
                          opt_self_calls        : bool
                          }
a79 1
                       debug_warnings = false,
a89 1
                       maximum_shape_depth : int,
a99 1
                    maximum_shape_depth = 10,
d108 2
a109 2
			type_dynamic : bool
		       }
d113 2
a114 2
		     type_dynamic = true
		    }
d118 8
a125 8
			infixr_assoc : bool,
			op_in_datatype : bool,
			derived_redef : bool,
			nj_include : bool,
			nj_local_open : bool,
			weak_type_vars : bool,
			semicolons : bool
			}
d130 1
a130 1
		     op_in_datatype = true,
d132 1
a132 2
		     nj_include = false,
		     nj_local_open = false,
d134 3
a136 2
		     semicolons = true
		     }
d139 1
a139 1
      EDITOR_OPTIONS of {editor : string}
d141 1
a141 1
    val default_editor_options = EDITOR_OPTIONS{editor="emacs"}
@


1.9
log
@Changed default for op_in_datatype to true
@
text
@d11 3
d125 1
d136 1
@


1.8
log
@Added option to control make -n type facility
@
text
@d11 3
d128 1
a128 1
		     op_in_datatype = false,
@


1.7
log
@Unified profiling and tracing options into `intercept'.
Removed poly_makestring option.
@
text
@d11 4
d65 1
d74 1
@


1.6
log
@The editor interface is now implemented directly through
Unix system calls, and is not part of the pervasive library
or the runtime system.
@
text
@d11 5
d61 1
a61 2
                          profile               : bool,
                          trace                 : bool,
d69 1
a69 2
                       profile = false,
                       trace = false,
a107 1
			poly_makestring : bool,
a117 1
		     poly_makestring = true,
@


1.5
log
@Added editor options
@
text
@d11 15
a25 14
Revision 1.4  1993/04/01  11:15:31  jont
Added compatibility options

Revision 1.3  1993/03/23  15:56:35  daveb
Added extension options.

Revision 1.2  1993/03/10  14:35:52  matthew
Added compat_options
options now a tagged record rather than tuple.

Revision 1.1  1993/03/08  16:19:22  matthew
Initial revision


d126 1
a126 1
      EDITOR_OPTIONS of {editor : MLWorks.Editor.Editor}
d128 1
a128 1
    val default_editor_options = EDITOR_OPTIONS{editor=MLWorks.Editor.EMACS}
@


1.4
log
@Added compatibility options
@
text
@d11 3
d124 5
d133 2
a134 1
                                   compat_options : compat_options}
d140 2
a141 1
                                   compat_options = default_compat_options}
@


1.3
log
@Added extension options.
@
text
@d11 3
d100 9
a108 1
      COMPATOPTIONS of {}
d111 9
a119 1
      COMPATOPTIONS {}
@


1.2
log
@Added compat_options
options now a tagged record rather than tuple.
@
text
@d11 4
d86 10
d97 1
a97 1
      COMPATOPTIONS of {dummy : bool}
d99 2
a100 1
    val default_compat_options = COMPATOPTIONS {dummy = false}
d105 1
d111 1
@


1.1
log
@Initial revision
@
text
@d11 2
d14 1
d82 4
a85 1
    datatype options = OPTIONS of listing_options * compiler_options * print_options
d87 9
a95 1
    val default_options = OPTIONS (default_listing_options,default_compiler_options,default_print_options)
@
