head	1.14;
access;
symbols
	MLW_daveb_inline_1_4_99:1.14.3
	MLWorks_21c0_1999_03_25:1.14
	MLWorks_20c1_1998_08_20:1.14
	MLWorks_20c0_1998_08_04:1.14
	MLWorks_20b2c2_1998_06_19:1.14
	MLWorks_20b2_Windows_1998_06_12:1.14
	MLWorks_20b1c1_1998_05_07:1.14
	MLWorks_20b0_1998_04_07:1.14
	MLWorks_20b0_1998_03_20:1.14
	MLWorks_20m2_1998_02_16:1.14
	MLWorks_20m1_1997_10_23:1.14
	MLWorks_11r1:1.13.8.1.1.1.1
	MLWorks_workspace_97:1.14.2
	MLWorks_dt_wizard:1.14.1
	MLWorks_11c0_1997_09_09:1.13.8.1.1.1
	MLWorks_10r3:1.13.8.1.3
	MLWorks_10r2_551:1.13.8.1.2
	MLWorks_11:1.13.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.13.8.1
	MLWorks_20m0_1997_06_20:1.14
	MLWorks_1_0_r2c2_1997_06_14:1.13.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.13.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.13.8
	MLWorks_BugFix_1997_04_24:1.13
	MLWorks_1_0_r2_Win32_1997_04_11:1.13
	MLWorks_1_0_r2_Unix_1997_04_04:1.13
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.13.6.1.1
	MLWorks_gui_1996_12_18:1.13.7
	MLWorks_1_0_Win32_1996_12_17:1.13.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.13.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.13.4.1
	MLWorks_1_0_Irix_1996_11_28:1.13.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.13.5
	MLWorks_1_0_Unix_1996_11_14:1.13.4
	MLWorks_Open_Beta2_1996_10_11:1.13.3
	MLWorks_License_dev:1.13.2
	MLWorks_1_open_beta_1996_09_13:1.13.1
	MLWorks_Open_Beta_1996_08_22:1.13
	MLWorks_Beta_1996_07_02:1.13
	MLWorks_Beta_1996_06_07:1.13
	MLWorks_Beta_1996_06_06:1.13
	MLWorks_Beta_1996_06_05:1.13
	MLWorks_Beta_1996_06_03:1.13
	MLWorks_Beta_1996_05_31:1.13
	MLWorks_Beta_1996_05_30:1.13
	ML_beta_release_12/08/94:1.9
	ML_beta_release_03/08/94:1.9
	ML_revised_beta_release_25/05/94:1.9
	ML_final_beta_release_02/03/94:1.9
	mlworks-28-01-1994:1.9
	Release:1.7
	mlworks-beta-01-09-1993:1.7
	MLWorks-1-0-4-29/01/1993:1.3
	MLWorks-1-0-3-21/12/1992:1.3
	MLWorks-1-0-2-15/12/1992:1.3
	MLWorks-1-0-1-04/12/1992:1.3;
locks; strict;
comment	@ * @;


1.14
date	97.05.22.11.04.51;	author jont;	state Exp;
branches
	1.14.1.1
	1.14.2.1
	1.14.3.1;
next	1.13;

1.13
date	96.04.30.14.19.55;	author jont;	state Exp;
branches
	1.13.1.1
	1.13.2.1
	1.13.3.1
	1.13.4.1
	1.13.5.1
	1.13.6.1
	1.13.7.1
	1.13.8.1;
next	1.12;

1.12
date	96.04.01.13.17.16;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	96.03.15.12.27.01;	author daveb;	state Exp;
branches;
next	1.10;

1.10
date	96.01.22.16.06.08;	author matthew;	state Exp;
branches;
next	1.9;

1.9
date	93.12.10.17.17.16;	author matthew;	state Exp;
branches;
next	1.8;

1.8
date	93.11.29.15.43.56;	author matthew;	state Exp;
branches;
next	1.7;

1.7
date	93.07.28.14.33.53;	author matthew;	state Exp;
branches
	1.7.1.1;
next	1.6;

1.6
date	93.05.27.10.28.13;	author matthew;	state Exp;
branches;
next	1.5;

1.5
date	93.04.16.15.39.52;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	93.03.03.18.25.45;	author matthew;	state Exp;
branches;
next	1.3;

1.3
date	92.11.30.16.32.34;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	92.11.25.20.10.37;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	92.11.17.16.46.29;	author matthew;	state Exp;
branches;
next	;

1.7.1.1
date	93.07.28.14.33.53;	author jont;	state Exp;
branches;
next	;

1.13.1.1
date	96.09.13.11.18.11;	author hope;	state Exp;
branches;
next	;

1.13.2.1
date	96.10.07.16.08.03;	author hope;	state Exp;
branches;
next	;

1.13.3.1
date	96.10.17.11.26.18;	author hope;	state Exp;
branches;
next	;

1.13.4.1
date	96.11.14.12.51.34;	author hope;	state Exp;
branches
	1.13.4.1.1.1;
next	;

1.13.4.1.1.1
date	96.11.28.15.02.38;	author hope;	state Exp;
branches;
next	;

1.13.5.1
date	96.11.22.18.10.47;	author hope;	state Exp;
branches;
next	;

1.13.6.1
date	96.12.17.17.49.22;	author hope;	state Exp;
branches
	1.13.6.1.1.1;
next	;

1.13.6.1.1.1
date	97.02.24.11.39.30;	author hope;	state Exp;
branches;
next	;

1.13.7.1
date	96.12.18.09.43.26;	author hope;	state Exp;
branches;
next	;

1.13.8.1
date	97.05.12.10.35.55;	author hope;	state Exp;
branches
	1.13.8.1.1.1
	1.13.8.1.2.1
	1.13.8.1.3.1;
next	;

1.13.8.1.1.1
date	97.07.28.18.21.37;	author daveb;	state Exp;
branches
	1.13.8.1.1.1.1.1;
next	;

1.13.8.1.1.1.1.1
date	97.10.07.11.47.16;	author jkbrook;	state Exp;
branches;
next	;

1.13.8.1.2.1
date	97.09.08.17.15.01;	author daveb;	state Exp;
branches;
next	;

1.13.8.1.3.1
date	97.09.09.14.10.53;	author daveb;	state Exp;
branches;
next	;

1.14.1.1
date	97.09.10.19.26.55;	author brucem;	state Exp;
branches;
next	;

1.14.2.1
date	97.09.11.20.56.55;	author daveb;	state Exp;
branches;
next	;

1.14.3.1
date	99.04.01.17.58.09;	author daveb;	state Exp;
branches;
next	;


desc
@General information output structure, replacing Error.
@


1.14
log
@[Bug #30090]
Replace MLWorks.IO with TextIO where applicable
@
text
@(*  ==== COMPILER INFORMATION OUTPUT ====
 *
 *  Copyright (C) 1992 Harlequin Ltd
 *
 *  Description
 *  -----------
 *
 *  Revision Log
 *  ------------
 *  $Log: info.sml,v $
 * Revision 1.13  1996/04/30  14:19:55  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
 * Revision 1.12  1996/04/01  13:17:16  matthew
 * Adding error_occurred function
 *
 * Revision 1.11  1996/03/15  12:27:01  daveb
 * Removed default_options, as it could be used inappropriately.
 * Added default_error' to handle cases where the default options can be used
 * reasonably safely.
 * Removed with_error_list because it wasn't used anywhere.
 *
 * Revision 1.10  1996/01/22  16:06:08  matthew
 * Adding null_options
 *
Revision 1.9  1993/12/10  17:17:16  matthew
Added with_error_list to determine errors occuring in dynamic scope.

Revision 1.8  1993/11/29  15:43:56  matthew
Added a limit to the number of recoverable errors occuring.
(Modifiable) maximum number of errors is in max_num_errors: int ref

Revision 1.7  1993/07/28  14:33:53  matthew
Added make_default_options function

Revision 1.6  1993/05/27  10:28:13  matthew
Added Location.T parameter to wrap
Added string_error and with_report_fun

Revision 1.5  1993/04/16  15:39:52  matthew
Hid definition of options type
Added error list field to Stop exception

Revision 1.4  1993/03/03  18:25:45  matthew
Removed printing controls

Revision 1.3  1992/11/30  16:32:34  matthew
Used pervasive streams

Revision 1.2  1992/11/25  20:10:37  daveb
Changes to make show_id_class and show_eq_info part of Info structure
instead of references.

Revision 1.1  1992/11/17  16:46:29  matthew
Initial revision

 *)

require "../basis/__text_io";

require "../basics/location";

signature INFO =
  sig

    structure Location	: LOCATION

    datatype severity =
      ADVICE |                          (* e.g. `unnecessary op' *)
      WARNING |                         (* legal, but odd *)
      NONSTANDARD |                     (* non-standard, but understood *)
      RECOVERABLE |                     (* recoverable error *)
      FATAL |                           (* can't continue *)
      FAULT                             (* fault in the compiler *)

    val < : severity * severity -> bool

    type options

    val null_options: options

    val make_default_options : unit -> options

    datatype error =
      ERROR of severity * Location.T * string

    val string_error : error -> string

    exception Stop of (error * error list)

    val error	: options -> severity * Location.T * string -> unit
    val error'	: options -> severity * Location.T * string -> 'a
    val default_error'	: severity * Location.T * string -> 'a

    val wrap	: options -> severity * severity * severity * Location.T ->
		    (options -> 'a -> 'b) -> 'a -> 'b

    val with_report_fun :
	  options -> (error -> unit) -> (options -> 'a -> 'b) -> 'a -> 'b

    val listing_fn	: options -> int * (TextIO.outstream -> unit) -> unit

    val max_num_errors  : int ref

    val worst_error : options -> severity

  end;
@


1.14.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a10 4
 * Revision 1.14  1997/05/22  11:04:51  jont
 * [Bug #30090]
 * Replace MLWorks.IO with TextIO where applicable
 *
@


1.14.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a10 4
 * Revision 1.14  1997/05/22  11:04:51  jont
 * [Bug #30090]
 * Replace MLWorks.IO with TextIO where applicable
 *
@


1.14.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a10 4
 * Revision 1.14  1997/05/22  11:04:51  jont
 * [Bug #30090]
 * Replace MLWorks.IO with TextIO where applicable
 *
@


1.13
log
@String functions explode, implode, chr and ord now only available from String
io functions and types
instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
now only available from MLWorks.IO
@
text
@d11 6
d62 2
d104 1
a104 1
    val listing_fn	: options -> int * (MLWorks.IO.outstream -> unit) -> unit
@


1.13.8.1
log
@branched from 1.13
@
text
@a10 6
 * Revision 1.13  1996/04/30  14:19:55  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a10 3
 * Revision 1.13.8.1  1997/05/12  10:35:55  hope
 * branched from 1.13
 *
@


1.13.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a10 3
 * Revision 1.13.8.1  1997/05/12  10:35:55  hope
 * branched from 1.13
 *
@


1.13.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a10 3
 * Revision 1.13.8.1  1997/05/12  10:35:55  hope
 * branched from 1.13
 *
@


1.13.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a10 3
 * Revision 1.13.8.1.1.1  1997/07/28  18:21:37  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.13.7.1
log
@branched from 1.13
@
text
@a10 6
 * Revision 1.13  1996/04/30  14:19:55  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.6.1
log
@branched from 1.13
@
text
@a10 6
 * Revision 1.13  1996/04/30  14:19:55  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.6.1.1.1
log
@branched from 1.13.6.1
@
text
@a10 3
 * Revision 1.13.6.1  1996/12/17  17:49:22  hope
 * branched from 1.13
 *
@


1.13.5.1
log
@branched from 1.13
@
text
@a10 6
 * Revision 1.13  1996/04/30  14:19:55  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.4.1
log
@branched from 1.13
@
text
@a10 6
 * Revision 1.13  1996/04/30  14:19:55  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.4.1.1.1
log
@branched from 1.13.4.1
@
text
@a10 3
 * Revision 1.13.4.1  1996/11/14  12:51:34  hope
 * branched from 1.13
 *
@


1.13.3.1
log
@branched from 1.13
@
text
@a10 6
 * Revision 1.13  1996/04/30  14:19:55  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.2.1
log
@branched from 1.13
@
text
@a10 6
 * Revision 1.13  1996/04/30  14:19:55  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.1.1
log
@branched from 1.13
@
text
@a10 6
 * Revision 1.13  1996/04/30  14:19:55  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.12
log
@Adding error_occurred function
@
text
@d11 3
d96 1
a96 1
    val listing_fn	: options -> int * (outstream -> unit) -> unit
@


1.11
log
@Removed default_options, as it could be used inappropriately.
Added default_error' to handle cases where the default options can be used
reasonably safely.
Removed with_error_list because it wasn't used anywhere.
@
text
@d11 6
d96 3
@


1.10
log
@Adding null_options
@
text
@d11 3
a65 1
    val default_options: options
a76 2
    val with_error_list : ('a -> 'b) -> 'a -> ('b * error list)

d79 2
d84 2
a85 1
    val with_report_fun : options -> (error -> unit) -> (options -> 'a -> 'b) -> 'a -> 'b
@


1.9
log
@Added with_error_list to determine errors occuring in dynamic scope.
@
text
@d11 3
d64 1
a83 1
    val information	: options -> int * string -> unit
a84 2
    val diagnostic	: options -> int * string -> unit
    val diagnostic_fn	: options -> int * (outstream -> unit) -> unit
@


1.8
log
@Added a limit to the number of recoverable errors occuring.
(Modifiable) maximum number of errors is in max_num_errors: int ref
@
text
@d11 4
d70 2
@


1.7
log
@Added make_default_options function
@
text
@d11 3
d79 1
@


1.7.1.1
log
@Fork for bug fixing
@
text
@a10 3
Revision 1.7  1993/07/28  14:33:53  matthew
Added make_default_options function

@


1.6
log
@Added Location.T parameter to wrap
Added string_error and with_report_fun
@
text
@d11 4
d54 2
@


1.5
log
@Hid definition of options type
Added error list field to Stop exception
@
text
@d11 4
d54 2
d60 1
a60 1
    val wrap	: options -> severity * severity * severity ->
d63 2
a70 2


@


1.4
log
@Removed printing controls
@
text
@d11 3
d43 1
a43 13
    datatype options =
      OPTIONS of
      {error       : {outstream : outstream,
                      stop	: severity,
                      report	: severity,
                      worst	: severity ref},
       information : {outstream : outstream,
                      level	: int},
       listing	   : {outstream : outstream,
                      level     : int},
       diagnostic  : {outstream : outstream,
                      level     : int}
      }
d50 1
a50 1
    exception Stop of error
@


1.3
log
@Used pervasive streams
@
text
@d11 3
d51 1
a51 3
                      level     : int},
       show_id_class: bool,
       show_eq_info : bool
@


1.2
log
@Changes to make show_id_class and show_eq_info part of Info structure
instead of references.
@
text
@d11 4
a19 1
require "../utils/stream";
a24 1
    structure Stream	: STREAM
d39 1
a39 1
      {error       : {outstream : Stream.outstream,
d43 1
a43 1
       information : {outstream : Stream.outstream,
d45 1
a45 1
       listing	   : {outstream : Stream.outstream,
d47 1
a47 1
       diagnostic  : {outstream : Stream.outstream,
d66 1
a66 1
    val listing_fn	: options -> int * (Stream.outstream -> unit) -> unit
d68 1
a68 1
    val diagnostic_fn	: options -> int * (Stream.outstream -> unit) -> unit
@


1.1
log
@Initial revision
@
text
@d10 4
a13 1
 *  $Log$
d46 6
a51 1
                      level     : int}}
d60 2
a61 1
    val wrap	: options -> severity * severity * severity -> (options -> 'a -> 'b) -> 'a -> 'b
@
