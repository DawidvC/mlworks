head	1.50;
access;
symbols
	MLW_daveb_inline_1_4_99:1.50.1
	MLWorks_21c0_1999_03_25:1.50
	MLWorks_20c1_1998_08_20:1.50
	MLWorks_20c0_1998_08_04:1.50
	MLWorks_20b2c2_1998_06_19:1.50
	MLWorks_20b2_Windows_1998_06_12:1.50
	MLWorks_20b1c1_1998_05_07:1.50
	MLWorks_20b0_1998_04_07:1.49
	MLWorks_20b0_1998_03_20:1.49
	MLWorks_20m2_1998_02_16:1.47
	MLWorks_20m1_1997_10_23:1.47
	MLWorks_11r1:1.45.1.1.1.2.1
	MLWorks_workspace_97:1.46.2
	MLWorks_dt_wizard:1.46.1
	MLWorks_11c0_1997_09_09:1.45.1.1.1.2
	MLWorks_10r3:1.45.1.1.3
	MLWorks_10r2_551:1.45.1.1.2
	MLWorks_11:1.45.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.45.1.1
	MLWorks_20m0_1997_06_20:1.46
	MLWorks_1_0_r2c2_1997_06_14:1.45.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.45.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.45.1
	MLWorks_BugFix_1997_04_24:1.45
	MLWorks_1_0_r2_Win32_1997_04_11:1.45
	MLWorks_1_0_r2_Unix_1997_04_04:1.45
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.42.5.1.1
	MLWorks_gui_1996_12_18:1.42.6
	MLWorks_1_0_Win32_1996_12_17:1.42.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.42.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.42.3.1
	MLWorks_1_0_Irix_1996_11_28:1.42.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.42.4
	MLWorks_1_0_Unix_1996_11_14:1.42.3
	MLWorks_Open_Beta2_1996_10_11:1.42.2
	MLWorks_License_dev:1.42.1
	MLWorks_1_open_beta_1996_09_13:1.41.1
	MLWorks_Open_Beta_1996_08_22:1.41
	MLWorks_Beta_1996_07_02:1.40
	MLWorks_Beta_1996_06_07:1.40
	MLWorks_Beta_1996_06_06:1.40
	MLWorks_Beta_1996_06_05:1.40
	MLWorks_Beta_1996_06_03:1.40
	MLWorks_Beta_1996_05_31:1.40
	MLWorks_Beta_1996_05_30:1.40
	ML_beta_release_12/08/94:1.26
	ML_beta_release_03/08/94:1.26
	ML_revised_beta_release_25/05/94:1.24
	ML_final_beta_release_02/03/94:1.23
	mlworks-28-01-1994:1.22
	Release:1.16
	mlworks-beta-01-09-1993:1.16;
locks; strict;
comment	@ * @;


1.50
date	98.04.23.13.42.06;	author johnh;	state Exp;
branches
	1.50.1.1;
next	1.49;

1.49
date	98.03.20.16.03.38;	author jont;	state Exp;
branches;
next	1.48;

1.48
date	98.03.02.15.07.22;	author mitchell;	state Exp;
branches;
next	1.47;

1.47
date	97.10.01.16.29.02;	author jkbrook;	state Exp;
branches;
next	1.46;

1.46
date	97.05.27.11.13.25;	author daveb;	state Exp;
branches
	1.46.1.1
	1.46.2.1;
next	1.45;

1.45
date	97.03.25.11.50.03;	author matthew;	state Exp;
branches
	1.45.1.1;
next	1.44;

1.44
date	97.01.21.10.40.14;	author matthew;	state Exp;
branches;
next	1.43;

1.43
date	97.01.02.15.02.14;	author matthew;	state Exp;
branches;
next	1.42;

1.42
date	96.09.23.12.02.44;	author andreww;	state Exp;
branches
	1.42.1.1
	1.42.2.1
	1.42.3.1
	1.42.4.1
	1.42.5.1
	1.42.6.1;
next	1.41;

1.41
date	96.07.18.17.22.32;	author jont;	state Exp;
branches
	1.41.1.1;
next	1.40;

1.40
date	96.05.22.12.46.11;	author daveb;	state Exp;
branches;
next	1.39;

1.39
date	96.05.21.14.25.49;	author daveb;	state Exp;
branches;
next	1.38;

1.38
date	96.05.20.12.36.40;	author daveb;	state Exp;
branches;
next	1.37;

1.37
date	96.05.01.09.40.12;	author jont;	state Exp;
branches;
next	1.36;

1.36
date	96.03.19.10.45.04;	author matthew;	state Exp;
branches;
next	1.35;

1.35
date	96.02.29.14.01.02;	author matthew;	state Exp;
branches;
next	1.34;

1.34
date	95.11.17.13.47.13;	author daveb;	state Exp;
branches;
next	1.33;

1.33
date	95.10.25.18.02.29;	author jont;	state Exp;
branches;
next	1.32;

1.32
date	95.06.30.15.39.16;	author daveb;	state Exp;
branches;
next	1.31;

1.31
date	95.06.01.11.31.40;	author daveb;	state Exp;
branches;
next	1.30;

1.30
date	95.05.15.14.46.31;	author matthew;	state Exp;
branches;
next	1.29;

1.29
date	95.05.02.11.53.18;	author matthew;	state Exp;
branches;
next	1.28;

1.28
date	95.03.13.12.16.46;	author daveb;	state Exp;
branches;
next	1.27;

1.27
date	95.03.09.21.21.00;	author daveb;	state Exp;
branches;
next	1.26;

1.26
date	94.08.01.14.07.18;	author daveb;	state Exp;
branches;
next	1.25;

1.25
date	94.07.26.13.47.10;	author daveb;	state Exp;
branches;
next	1.24;

1.24
date	94.05.05.16.12.44;	author daveb;	state Exp;
branches;
next	1.23;

1.23
date	94.02.28.05.35.34;	author nosa;	state Exp;
branches;
next	1.22;

1.22
date	93.12.17.16.16.56;	author matthew;	state Exp;
branches;
next	1.21;

1.21
date	93.12.01.17.04.50;	author io;	state Exp;
branches;
next	1.20;

1.20
date	93.12.01.14.24.10;	author io;	state Exp;
branches;
next	1.19;

1.19
date	93.11.04.16.29.20;	author jont;	state Exp;
branches;
next	1.18;

1.18
date	93.10.13.14.51.56;	author daveb;	state Exp;
branches;
next	1.17;

1.17
date	93.09.03.10.39.38;	author nosa;	state Exp;
branches;
next	1.16;

1.16
date	93.08.23.14.14.53;	author richard;	state Exp;
branches
	1.16.1.1;
next	1.15;

1.15
date	93.08.10.16.06.54;	author matthew;	state Exp;
branches;
next	1.14;

1.14
date	93.08.09.15.36.55;	author matthew;	state Exp;
branches;
next	1.13;

1.13
date	93.07.13.14.22.46;	author nosa;	state Exp;
branches;
next	1.12;

1.12
date	93.06.10.13.21.09;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	93.05.19.09.52.12;	author daveb;	state Exp;
branches;
next	1.10;

1.10
date	93.05.14.13.04.52;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	93.05.11.14.53.52;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	93.04.27.13.49.42;	author richard;	state Exp;
branches;
next	1.7;

1.7
date	93.04.22.11.43.10;	author richard;	state Exp;
branches;
next	1.6;

1.6
date	93.04.07.15.35.25;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	93.04.01.13.41.12;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	93.03.23.15.46.59;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	93.03.10.14.33.09;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	93.03.05.11.58.36;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	93.03.01.15.19.08;	author daveb;	state Exp;
branches;
next	;

1.16.1.1
date	93.08.23.14.14.53;	author jont;	state Exp;
branches;
next	1.16.1.2;

1.16.1.2
date	93.10.12.14.15.03;	author daveb;	state Exp;
branches;
next	;

1.41.1.1
date	96.09.13.11.18.34;	author hope;	state Exp;
branches;
next	;

1.42.1.1
date	96.10.07.16.08.25;	author hope;	state Exp;
branches;
next	;

1.42.2.1
date	96.10.17.11.26.41;	author hope;	state Exp;
branches;
next	;

1.42.3.1
date	96.11.14.12.52.05;	author hope;	state Exp;
branches
	1.42.3.1.1.1;
next	;

1.42.3.1.1.1
date	96.11.28.15.03.05;	author hope;	state Exp;
branches;
next	;

1.42.4.1
date	96.11.22.18.11.16;	author hope;	state Exp;
branches;
next	;

1.42.5.1
date	96.12.17.17.49.48;	author hope;	state Exp;
branches
	1.42.5.1.1.1;
next	;

1.42.5.1.1.1
date	97.02.24.11.39.59;	author hope;	state Exp;
branches;
next	;

1.42.6.1
date	96.12.18.09.43.53;	author hope;	state Exp;
branches;
next	;

1.45.1.1
date	97.05.12.10.36.21;	author hope;	state Exp;
branches
	1.45.1.1.1.1
	1.45.1.1.2.1
	1.45.1.1.3.1;
next	;

1.45.1.1.1.1
date	97.07.28.18.21.04;	author daveb;	state Exp;
branches;
next	1.45.1.1.1.2;

1.45.1.1.1.2
date	97.08.08.17.15.45;	author daveb;	state Exp;
branches
	1.45.1.1.1.2.1.1;
next	;

1.45.1.1.1.2.1.1
date	97.10.07.11.46.31;	author jkbrook;	state Exp;
branches;
next	;

1.45.1.1.2.1
date	97.09.08.17.14.30;	author daveb;	state Exp;
branches;
next	;

1.45.1.1.3.1
date	97.09.09.14.10.23;	author daveb;	state Exp;
branches;
next	;

1.46.1.1
date	97.09.10.19.26.19;	author brucem;	state Exp;
branches;
next	;

1.46.2.1
date	97.09.11.20.56.21;	author daveb;	state Exp;
branches;
next	;

1.50.1.1
date	99.04.01.17.57.59;	author daveb;	state Exp;
branches;
next	;


desc
@Defines the user-settable options.  Used to be in shell.
@


1.50
log
@[Bug #30229]
group compiler options to allow more flexibility.
@
text
@(*  User-visible options.
 *
 *  Copyright (C) 1993 Harlequin Ltd
 *  $Log: user_options.sml,v $
 * Revision 1.49  1998/03/20  16:03:38  jont
 * [Bug #30090]
 * Modify to use TextIO instead of MLWorks.IO
 *
 * Revision 1.48  1998/03/02  15:07:22  mitchell
 * [Bug #70074]
 * Add depth limit support for signature printing
 *
 * Revision 1.47  1997/10/01  16:29:02  jkbrook
 * [Bug #20088]
 * Merging from MLWorks_11:
 * SML'96 should be SML'97
 *
 * Revision 1.46  1997/05/27  11:13:25  daveb
 * [Bug #30136]
 * Removed early-mips-r4000 option.
 *
 * Revision 1.45  1997/03/25  11:50:03  matthew
 * Renaming R4000 option
 *
 * Revision 1.44  1997/01/21  10:40:14  matthew
 * Adding architecture dependent options
 *
 * Revision 1.43  1997/01/02  15:02:14  matthew
 * Adding local_functions option
 *
 * Revision 1.42  1996/09/23  12:02:44  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
 * Revision 1.41  1996/07/18  17:22:32  jont
 * Add option to turn on/off compilation messages from intermake
 *
 * Revision 1.40  1996/05/22  12:46:11  daveb
 * Combined Local Variable and Debugging modes.
 *
 * Revision 1.39  1996/05/21  14:25:49  daveb
 * Renaming modes.
 *
 * Revision 1.38  1996/05/20  12:36:40  daveb
 * Added functions to set and clear particular user options, including modes.
 *
 * Revision 1.37  1996/05/01  09:40:12  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
 * Revision 1.36  1996/03/19  10:45:04  matthew
 * Adding "old_definition" option
 *
 * Revision 1.35  1996/02/29  14:01:02  matthew
 * Adding facility to save to stream
 *
 * Revision 1.34  1995/11/17  13:47:13  daveb
 * Removed no_execute.
 *
 *  Revision 1.33  1995/10/25  18:02:29  jont
 *  Adding opt_handlers compiler option
 *
 *  Revision 1.32  1995/06/30  15:39:16  daveb
 *  Added float_precision option to ValuePrinter options.
 *   .
 *
 *  Revision 1.31  1995/06/01  11:31:40  daveb
 *  Divided user options into per-tool options and per-context options.
 *
 *  Revision 1.30  1995/05/15  14:46:31  matthew
 *  Renaming nj_semicolons
 *
 *  Revision 1.29  1995/05/02  11:53:18  matthew
 *  Removing debug_polyvariables option
 *
 *  Revision 1.28  1995/03/13  12:16:46  daveb
 *  Added set_context and sense_context.
 *
 *  Revision 1.27  1995/03/09  21:21:00  daveb
 *  Added sensitivity options.
 *
 *  Revision 1.26  1994/08/01  14:07:18  daveb
 *  Moved preferences into separate structure.
 *
 *  Revision 1.25  1994/07/26  13:47:10  daveb
 *  Added full_menus option.
 *
 *  Revision 1.24  1994/05/05  16:12:44  daveb
 *  Added default_overloads.
 *
 *  Revision 1.23  1994/02/28  05:35:34  nosa
 *  Step and Modules Debugger compiler options.
 *
 *  Revision 1.22  1993/12/17  16:16:56  matthew
 *  Added maximum_str_depth to options.
 *
 *  Revision 1.21  1993/12/01  17:04:50  io
 *  Added max_num_errors
 *
 *
 *  Revision 1.19  1993/11/04  16:29:20  jont
 *  Added interrupt option
 *
 *  Revision 1.18  1993/10/13  14:51:56  daveb
 *  Merged in bug fix.
 *
 *  Revision 1.17  1993/09/03  10:39:38  nosa
 *  New compiler option debug_polyvariables for polymorphic debugger.
 *
 *  Revision 1.16.1.2  1993/10/12  14:15:03  daveb
 *  Changed print options.
 *
 *  Revision 1.16.1.1  1993/08/23  14:14:53  jont
 *  Fork for bug fixing
 *
 *  Revision 1.16  1993/08/23  14:14:53  richard
 *  Added output_lambda option.
 *
 *  Revision 1.15  1993/08/10  16:06:54  matthew
 *  Added update function list component to user_options type
 *
 *  Revision 1.14  1993/08/09  15:36:55  matthew
 *  Added more environment preferences
 *
 *  Revision 1.13  1993/07/13  14:22:46  nosa
 *  new compiler option debug_variables for local and closure variable
 *  inspection in the debugger.
 *
 *  Revision 1.12  1993/06/10  13:21:09  matthew
 *  Added open fixity and fixity spec options
 *
 *  Revision 1.11  1993/05/19  09:52:12  daveb
 *  Rearranged some of the options.
 *
 *  Revision 1.10  1993/05/14  13:04:52  jont
 *  Added options to control parse treatment of New Jersey style weak type variables
 *
 *  Revision 1.9  1993/05/11  14:53:52  jont
 *  Added option to control make -n type facility
 *
 *  Revision 1.8  1993/04/27  13:49:42  richard
 *  Unified profiling and tracing options into `intercept'.
 *  Removed poly_makestring option.
 *
 *  Revision 1.7  1993/04/22  11:43:10  richard
 *  The editor interface is now implemented directly through
 *  Unix system calls, and is not part of the pervasive library
 *  or the runtime system.
 *
 *  Revision 1.6  1993/04/07  15:35:25  jont
 *  Added editor options
 *  
 *  Revision 1.5  1993/04/01  13:41:12  jont
 *  Added compatibility options
 *  
 *  Revision 1.4  1993/03/23  15:46:59  daveb
 *  Added require_keyword and type_dynamic options.
 *  
 *  Revision 1.3  1993/03/10  14:33:09  matthew
 *  Removed new_xxx_options functions
 *  
 *  Revision 1.2  1993/03/05  11:58:36  matthew
 *  Options & Info changes
 *  
 *  Revision 1.1  1993/03/01  15:19:08  daveb
 *  Initial revision
 *)

require "../main/options";
require "../basis/__text_io";

signature USER_OPTIONS =
sig
  structure Options: OPTIONS
  
  (* There are two sorts of options.  Context-specific options are stored in
     MotifContexts (defined in motif_utils).  Tool-specific options are
     stored in each tool.  Global options (preferences) are defined in
     the eponymous file. *)

  datatype user_context_options = USER_CONTEXT_OPTIONS of
    ({generate_interceptable_code:                   bool ref,
      generate_debug_info:                           bool ref,
      generate_variable_debug_info:                  bool ref,
      generate_moduler:                              bool ref,
      generate_interruptable_code:                   bool ref,
      optimize_handlers:			     bool ref,
      optimize_leaf_fns:                             bool ref,
      optimize_tail_calls:                           bool ref,
      optimize_self_tail_calls:                      bool ref,
      local_functions:                               bool ref,
      print_messages:                                bool ref,
      mips_r4000:                                    bool ref,
      sparc_v7:                                      bool ref,
      require_keyword:		                     bool ref,
      type_dynamic:		                     bool ref,
      abstractions:		                     bool ref,
      nj_op_in_datatype:	                     bool ref,
      nj_signatures:		                     bool ref,
      fixity_specs:                                  bool ref,
      open_fixity:                                   bool ref,
      weak_type_vars:		                     bool ref,
      old_definition:		                     bool ref}
    * (unit -> unit) list ref)

  datatype user_tool_options = USER_TOOL_OPTIONS of
    ({show_fn_details:                               bool ref,
      show_exn_details:                              bool ref,
      maximum_seq_size:                              int ref,
      maximum_string_size:                           int ref,
      maximum_depth:                                 int ref,
      maximum_ref_depth:                             int ref,
      maximum_str_depth:                             int ref,
      maximum_sig_depth:                             int ref,
      float_precision:                               int ref,
      show_id_class:                                 bool ref,
      show_eq_info:                                  bool ref,
      show_absyn:                                    bool ref,
      show_match:                                    bool ref,
      show_environ:                                  bool ref,
      show_lambda:                                   bool ref,
      show_opt_lambda:                               bool ref,
      show_mir:                                      bool ref,
      show_opt_mir:                                  bool ref,
      show_mach:                                     bool ref,
      show_debug_info:                               bool ref,
      show_timings:                                  bool ref,
      show_print_timings:                            bool ref,
      set_selection:		                     bool ref,
      sense_selection:		             	     bool ref,
      set_context:		                     bool ref,
      sense_context:		             	     bool ref}
    * (unit -> unit) list ref)

  val make_user_context_options: Options.options -> user_context_options
  val make_user_tool_options: Options.options -> user_tool_options

  val update_user_context_options: user_context_options -> unit
  val update_user_tool_options: user_tool_options -> unit

  val select_compatibility: user_context_options -> unit
  val select_sml'97: user_context_options -> unit
  val select_sml'90: user_context_options -> unit

  val select_quick_compile: user_context_options -> unit
  val select_optimizing: user_context_options -> unit
  val select_debugging: user_context_options -> unit

  val is_sml'97: user_context_options -> bool
  val is_compatibility: user_context_options -> bool
  val is_sml'90: user_context_options -> bool
  val is_debugging: user_context_options -> bool
  val is_optimizing: user_context_options -> bool
  val is_quick_compile: user_context_options -> bool

  val new_options: user_tool_options * user_context_options -> Options.options
  val new_print_options: user_tool_options -> Options.print_options

  val copy_user_context_options: user_context_options -> user_context_options
  val copy_user_tool_options: user_tool_options -> user_tool_options

  val save_to_stream : user_context_options * TextIO.outstream -> unit
  val set_from_list : user_context_options * (string * string) list -> unit
end;
@


1.50.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a4 4
 * Revision 1.50  1998/04/23  13:42:06  johnh
 * [Bug #30229]
 * group compiler options to allow more flexibility.
 *
@


1.49
log
@[Bug #30090]
Modify to use TextIO instead of MLWorks.IO
@
text
@d5 4
d246 4
a249 2
  val select_optimizing: user_context_options * bool -> unit
  val select_debugging: user_context_options * bool -> unit
d256 1
@


1.48
log
@[Bug #70074]
Add depth limit support for signature printing
@
text
@d5 4
d168 1
d257 1
a257 1
  val save_to_stream : user_context_options * MLWorks.IO.outstream -> unit
a259 2


@


1.47
log
@[Bug #20088]
Merging from MLWorks_11:
SML'96 should be SML'97
@
text
@d5 5
d207 1
@


1.46
log
@[Bug #30136]
Removed early-mips-r4000 option.
@
text
@d5 4
d229 1
a229 1
  val select_sml'96: user_context_options -> unit
d234 1
a234 1
  val is_sml'96: user_context_options -> bool
@


1.46.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a4 4
 * Revision 1.46  1997/05/27  11:13:25  daveb
 * [Bug #30136]
 * Removed early-mips-r4000 option.
 *
@


1.46.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a4 4
 * Revision 1.46  1997/05/27  11:13:25  daveb
 * [Bug #30136]
 * Removed early-mips-r4000 option.
 *
@


1.45
log
@Renaming R4000 option
@
text
@d5 3
a176 1
      early_mips_r4000:                              bool ref,
@


1.45.1.1
log
@branched from 1.45
@
text
@a4 3
 * Revision 1.45  1997/03/25  11:50:03  matthew
 * Renaming R4000 option
 *
@


1.45.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a4 3
 * Revision 1.45.1.1  1997/05/12  10:36:21  hope
 * branched from 1.45
 *
@


1.45.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a4 3
 * Revision 1.45.1.1  1997/05/12  10:36:21  hope
 * branched from 1.45
 *
@


1.45.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a4 3
 * Revision 1.45.1.1  1997/05/12  10:36:21  hope
 * branched from 1.45
 *
@


1.45.1.1.1.2
log
@[Bug #20088]
Change sml'96 to sml'97.
@
text
@a4 3
 * Revision 1.45.1.1.1.1  1997/07/28  18:21:04  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
d229 1
a229 1
  val select_sml'97: user_context_options -> unit
d234 1
a234 1
  val is_sml'97: user_context_options -> bool
@


1.45.1.1.1.2.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a4 4
 * Revision 1.45.1.1.1.2  1997/08/08  17:15:45  daveb
 * [Bug #20088]
 * Change sml'96 to sml'97.
 *
@


1.44
log
@Adding architecture dependent options
@
text
@d5 3
d174 1
a175 1
      mips2:                                         bool ref,
@


1.43
log
@Adding local_functions option
@
text
@d5 3
d171 3
@


1.42
log
@[Bug #1605]
removing default_overloads flag.  Now subsumed by old_definition.
@
text
@d5 4
d166 1
@


1.42.6.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/09/23  12:02:44  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
@


1.42.5.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/09/23  12:02:44  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
@


1.42.5.1.1.1
log
@branched from 1.42.5.1
@
text
@a4 3
 * Revision 1.42.5.1  1996/12/17  17:49:48  hope
 * branched from 1.42
 *
@


1.42.4.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/09/23  12:02:44  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
@


1.42.3.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/09/23  12:02:44  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
@


1.42.3.1.1.1
log
@branched from 1.42.3.1
@
text
@a4 3
 * Revision 1.42.3.1  1996/11/14  12:52:05  hope
 * branched from 1.42
 *
@


1.42.2.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/09/23  12:02:44  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
@


1.42.1.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/09/23  12:02:44  andreww
 * [Bug #1605]
 * removing default_overloads flag.  Now subsumed by old_definition.
 *
@


1.41
log
@Add option to turn on/off compilation messages from intermake
@
text
@d5 3
a169 1
      default_overloads:			     bool ref,
@


1.41.1.1
log
@branched from 1.41
@
text
@a4 3
 * Revision 1.41  1996/07/18  17:22:32  jont
 * Add option to turn on/off compilation messages from intermake
 *
@


1.40
log
@Combined Local Variable and Debugging modes.
@
text
@d5 3
d159 1
@


1.39
log
@Renaming modes.
@
text
@d5 3
a206 1
  val select_var_info: user_context_options * bool -> unit
a211 1
  val is_var_info: user_context_options -> bool
@


1.38
log
@Added functions to set and clear particular user options, including modes.
@
text
@d5 3
d162 1
a162 3
      core_only:		                     bool ref,
      old_definition:		                     bool ref,
      functional:		                     bool ref}
d199 3
a201 3
  val select_new_jersey: user_context_options -> unit
  val select_harlequin: user_context_options -> unit
  val select_standard: user_context_options -> unit
d206 3
a208 3
  val is_harlequin: user_context_options -> bool
  val is_new_jersey: user_context_options -> bool
  val is_standard: user_context_options -> bool
@


1.37
log
@String functions explode, implode, chr and ord now only available from String
io functions and types
instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
now only available from MLWorks.IO
@
text
@d5 6
d194 17
@


1.36
log
@Adding "old_definition" option
@
text
@d5 3
d195 1
a195 1
  val save_to_stream : user_context_options * outstream -> unit
@


1.35
log
@Adding facility to save to stream
@
text
@d5 3
a143 2
      string_inequalities:	                     bool ref,
      infixr_assoc:		                     bool ref,
a144 1
      derived_redef:		                     bool ref,
a145 1
      topdec_semicolons:	                     bool ref,
d151 1
@


1.34
log
@Removed no_execute.
@
text
@d5 3
d191 3
d195 2
@


1.33
log
@Adding opt_handlers compiler option
@
text
@d5 3
a129 1
      no_execute:		                     bool ref,
@


1.32
log
@Added float_precision option to ValuePrinter options.
 .
@
text
@d5 4
d129 1
@


1.31
log
@Divided user options into per-tool options and per-context options.
@
text
@d5 3
d153 1
@


1.30
log
@Renaming nj_semicolons
@
text
@d5 3
d110 7
a116 10
  type preferences
  datatype user_options = USER_OPTIONS of
   ({ show_fn_details:                               bool ref,
      show_exn_details:                              bool ref,
      maximum_seq_size:                              int ref,
      maximum_string_size:                           int ref,
      maximum_depth:                                 int ref,
      maximum_ref_depth:                             int ref,
      maximum_str_depth:                             int ref,
      generate_interceptable_code:                   bool ref,
a124 13
      show_id_class:                                 bool ref,
      show_eq_info:                                  bool ref,
      show_absyn:                                    bool ref,
      show_match:                                    bool ref,
      show_environ:                                  bool ref,
      show_lambda:                                   bool ref,
      show_opt_lambda:                               bool ref,
      show_mir:                                      bool ref,
      show_opt_mir:                                  bool ref,
      show_mach:                                     bool ref,
      show_debug_info:                               bool ref,
      show_timings:                                  bool ref,
      show_print_timings:                            bool ref,
d139 24
a162 11
      functional:		                     bool ref,
      editor:			                     string ref,
      x_editor_command:			             string ref,
      xterm_editor_command:			     string ref,
      history_length:		                     int ref,
      max_num_errors:			             int ref,
      window_debugger:		                     bool ref,
      auto_output_window:                            bool ref,
      completion_menu:                               bool ref,
      full_menus:                                    bool ref,
      output_lambda:		                     bool ref,
d166 2
a167 3
      sense_context:		             	     bool ref
    } *
    (unit -> unit) list ref)
d169 2
a170 1
  val make_user_options: Options.options * preferences -> user_options
d172 2
a173 2
  val new_options: user_options -> Options.options
  val new_preferences: user_options -> preferences
d175 2
a176 1
  val copy: user_options -> user_options
@


1.29
log
@Removing debug_polyvariables option
@
text
@d5 3
d146 1
a146 1
      nj_semicolons:		                     bool ref,
@


1.28
log
@Added set_context and sense_context.
@
text
@d5 3
a115 2
      generate_polyvariable_debug_info:              bool ref,
      generate_stepper:                              bool ref,
a116 1
      generate_stepper_specific:                     string ref,
@


1.27
log
@Added sensitivity options.
@
text
@d5 3
d161 3
a163 1
      sense_selection:		             	     bool ref
@


1.26
log
@Moved preferences into separate structure.
@
text
@d5 3
d156 3
a158 1
      output_lambda:		                     bool ref
@


1.25
log
@Added full_menus option.
@
text
@d5 3
d95 1
d145 2
d157 1
a157 1
  val make_user_options: Options.options -> user_options
d160 1
@


1.24
log
@Added default_overloads.
@
text
@d5 3
d146 1
@


1.23
log
@Step and Modules Debugger compiler options.
@
text
@d5 3
d133 1
@


1.22
log
@Added maximum_str_depth to options.
@
text
@d5 3
d87 53
a139 50
   ({ show_fn_details:                      bool ref,
      show_exn_details:                     bool ref,
      maximum_seq_size:                     int ref,
      maximum_string_size:                  int ref,
      maximum_depth:                        int ref,
      maximum_ref_depth:                    int ref,
      maximum_str_depth:                    int ref,
      generate_interceptable_code:          bool ref,
      generate_debug_info:                  bool ref,
      generate_variable_debug_info:         bool ref,
      generate_polyvariable_debug_info:     bool ref,
      no_execute:		            bool ref,
      generate_interruptable_code:          bool ref,
      optimize_leaf_fns:                    bool ref,
      optimize_tail_calls:                  bool ref,
      optimize_self_tail_calls:             bool ref,
      show_id_class:                        bool ref,
      show_eq_info:                         bool ref,
      show_absyn:                           bool ref,
      show_match:                           bool ref,
      show_environ:                         bool ref,
      show_lambda:                          bool ref,
      show_opt_lambda:                      bool ref,
      show_mir:                             bool ref,
      show_opt_mir:                         bool ref,
      show_mach:                            bool ref,
      show_debug_info:                      bool ref,
      show_timings:                         bool ref,
      show_print_timings:                   bool ref,
      require_keyword:		            bool ref,
      type_dynamic:		            bool ref,
      abstractions:		            bool ref,
      string_inequalities:	            bool ref,
      infixr_assoc:		            bool ref,
      nj_op_in_datatype:	            bool ref,
      derived_redef:		            bool ref,
      nj_signatures:		            bool ref,
      nj_semicolons:		            bool ref,
      fixity_specs:                         bool ref,
      open_fixity:                          bool ref,
      weak_type_vars:		            bool ref,
      core_only:		            bool ref,
      functional:		            bool ref,
      editor:			            string ref,
      history_length:		            int ref,
      max_num_errors:			    int ref,
      window_debugger:		            bool ref,
      auto_output_window:                   bool ref,
      completion_menu:                      bool ref,
      output_lambda:		            bool ref
@


1.21
log
@Added max_num_errors
@
text
@d4 3
a6 1
 *  $Log: _user_options.sml,v $
d8 1
d90 1
@


1.20
log
@Added max_num_errors
@
text
@d4 1
@


1.19
log
@Added interrupt option
@
text
@d5 3
a7 1
 *  $Log: user_options.sml,v $
d124 1
@


1.18
log
@Merged in bug fix.
@
text
@d6 3
d89 1
@


1.17
log
@New compiler option debug_polyvariables for polymorphic debugger.
@
text
@d6 9
d77 2
a78 1
      maximum_list_size:                    int ref,
@


1.16
log
@Added output_lambda option.
@
text
@d6 3
d66 46
a111 45
    ({show_fn_details:          bool ref,
      show_exn_details:         bool ref,
      maximum_list_size:        int ref,
      maximum_depth:            int ref,
      maximum_ref_depth:        int ref,
      generate_interceptable_code: bool ref,
      generate_debug_info:      bool ref,
      generate_variable_debug_info:      bool ref,
      no_execute:		bool ref,
      optimize_leaf_fns:        bool ref,
      optimize_tail_calls:      bool ref,
      optimize_self_tail_calls: bool ref,
      show_id_class:            bool ref,
      show_eq_info:             bool ref,
      show_absyn:               bool ref,
      show_match:               bool ref,
      show_environ:             bool ref,
      show_lambda:              bool ref,
      show_opt_lambda:          bool ref,
      show_mir:                 bool ref,
      show_opt_mir:             bool ref,
      show_mach:                bool ref,
      show_debug_info:          bool ref,
      show_timings:             bool ref,
      show_print_timings:       bool ref,
      require_keyword:		bool ref,
      type_dynamic:		bool ref,
      abstractions:		bool ref,
      string_inequalities:	bool ref,
      infixr_assoc:		bool ref,
      nj_op_in_datatype:	bool ref,
      derived_redef:		bool ref,
      nj_signatures:		bool ref,
      nj_semicolons:		bool ref,
      fixity_specs:             bool ref,
      open_fixity:              bool ref,
      weak_type_vars:		bool ref,
      core_only:		bool ref,
      functional:		bool ref,
      editor:			string ref,
      history_length:		int ref,
      window_debugger:		bool ref,
      auto_output_window:       bool ref,
      completion_menu:          bool ref,
      output_lambda:		bool ref
@


1.16.1.1
log
@Fork for bug fixing
@
text
@a5 3
 *  Revision 1.16  1993/08/23  14:14:53  richard
 *  Added output_lambda option.
 *
@


1.16.1.2
log
@Changed print options.
@
text
@a5 3
 *  Revision 1.16.1.1  1993/08/23  14:14:53  jont
 *  Fork for bug fixing
 *
d68 1
a68 2
      maximum_seq_size:         int ref,
      maximum_string_size:      int ref,
@


1.15
log
@Added update function list component to user_options type
@
text
@d6 3
d106 2
a107 1
      completion_menu:          bool ref
@


1.14
log
@Added more environment preferences
@
text
@d6 3
d60 1
a60 1
    { show_fn_details:          bool ref,
d104 2
a105 1
    }
@


1.13
log
@new compiler option debug_variables for local and closure variable
inspection in the debugger.
@
text
@d6 4
d98 3
a100 1
      window_debugger:		bool ref
@


1.12
log
@Added open fixity and fixity spec options
@
text
@d6 3
d60 1
@


1.11
log
@Rearranged some of the options.
@
text
@d6 3
d83 2
@


1.10
log
@Added options to control parse treatment of New Jersey style weak type variables
@
text
@d6 3
a50 1
      maximum_shape_depth:      int ref,
d55 3
a57 4
      show_debug_warnings:      bool ref,
      optimise_leaf_fns:        bool ref,
      optimise_tail_calls:      bool ref,
      optimise_self_tail_calls: bool ref,
d73 1
d76 1
a76 1
      op_in_datatype:		bool ref,
d78 2
a79 3
      nj_include:		bool ref,
      nj_local_open:		bool ref,
      semicolons:		bool ref,
d81 5
a85 1
      editor:			string ref
d92 1
@


1.9
log
@Added option to control make -n type facility
@
text
@d6 3
d79 1
@


1.8
log
@Unified profiling and tracing options into `intercept'.
Removed poly_makestring option.
@
text
@d6 4
d49 1
@


1.7
log
@The editor interface is now implemented directly through
Unix system calls, and is not part of the pervasive library
or the runtime system.
@
text
@d6 5
d43 1
a43 2
      generate_tracing_code:    bool ref,
      generate_profiling_code:  bool ref,
a64 1
      poly_makestring:		bool ref,
@


1.6
log
@Added editor options
@
text
@d6 17
a22 16
Revision 1.5  1993/04/01  13:41:12  jont
Added compatibility options

Revision 1.4  1993/03/23  15:46:59  daveb
Added require_keyword and type_dynamic options.

Revision 1.3  1993/03/10  14:33:09  matthew
Removed new_xxx_options functions

Revision 1.2  1993/03/05  11:58:36  matthew
Options & Info changes

Revision 1.1  1993/03/01  15:19:08  daveb
Initial revision

 *
d68 1
a68 1
      editor:			MLWorks.Editor.Editor ref
@


1.5
log
@Added compatibility options
@
text
@d6 3
d66 2
a67 1
      semicolons:		bool ref
a74 1

@


1.4
log
@Added require_keyword and type_dynamic options.
@
text
@d6 3
d55 9
a63 1
      type_dynamic:		bool ref
@


1.3
log
@Removed new_xxx_options functions
@
text
@d6 3
d50 3
a52 1
      show_print_timings:       bool ref
@


1.2
log
@Options & Info changes
@
text
@d6 3
a52 6

  val new_print_options: user_options -> Options.print_options

  val new_listing_options: user_options -> Options.listing_options

  val new_compiler_options: user_options -> Options.compiler_options
@


1.1
log
@Initial revision
@
text
@d5 4
a8 1
 *  $Log$
d12 1
a12 1
require "incremental";
d16 1
a16 1
  structure Incremental: INCREMENTAL
a17 2
  type printer_descriptor

d47 10
a56 26
  val new_info_options:
    user_options *
    Incremental.InterMake.Compiler.BasisTypes.Info.options ->
      Incremental.InterMake.Compiler.BasisTypes.Info.options

  val make_user_options: 
    printer_descriptor *
    Incremental.InterMake.Compiler.MirTypes.options ->
      user_options

  val new_pr_options:
    user_options *
    printer_descriptor ->
      printer_descriptor

  val new_compiler_options:
    user_options *
    Incremental.InterMake.Compiler.BasisTypes.Info.options ->
      Incremental.InterMake.Compiler.MirTypes.options

  val new_shell_options:   
    user_options *
    Incremental.InterMake.Compiler.BasisTypes.Info.options *
    Incremental.options ->
      Incremental.InterMake.Compiler.BasisTypes.Info.options *
      Incremental.options
@
