head	1.27;
access;
symbols
	MLW_daveb_inline_1_4_99:1.27.1
	MLWorks_21c0_1999_03_25:1.27
	MLWorks_20c1_1998_08_20:1.26
	MLWorks_20c0_1998_08_04:1.25
	MLWorks_20b2c2_1998_06_19:1.23
	MLWorks_20b2_Windows_1998_06_12:1.23
	MLWorks_20b1c1_1998_05_07:1.20
	MLWorks_20b0_1998_04_07:1.20
	MLWorks_20b0_1998_03_20:1.20
	MLWorks_20m2_1998_02_16:1.19
	MLWorks_20m1_1997_10_23:1.18
	MLWorks_11r1:1.15.1.3.1.3.1
	MLWorks_workspace_97:1.17.2
	MLWorks_dt_wizard:1.17.1
	MLWorks_11c0_1997_09_09:1.15.1.3.1.3
	MLWorks_10r3:1.15.1.3.3
	MLWorks_10r2_551:1.15.1.3.2
	MLWorks_11:1.15.1.3.1
	MLWorks_1_0_r2c2_1997_07_28:1.15.1.3
	MLWorks_20m0_1997_06_20:1.16
	MLWorks_1_0_r2c2_1997_06_14:1.15.1.3
	MLWorks_1_0_r2c1_released_1997_05_23:1.15.1.2
	MLWorks_1_0_r2c1_1997_05_12:1.15.1
	MLWorks_BugFix_1997_04_24:1.15
	MLWorks_1_0_r2_Win32_1997_04_11:1.15
	MLWorks_1_0_r2_Unix_1997_04_04:1.15
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.14.3.1.1
	MLWorks_gui_1996_12_18:1.14.4
	MLWorks_1_0_Win32_1996_12_17:1.14.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.14.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.14.1.1
	MLWorks_1_0_Irix_1996_11_28:1.14.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.14.2
	MLWorks_1_0_Unix_1996_11_14:1.14.1
	MLWorks_Open_Beta2_1996_10_11:1.13.3
	MLWorks_License_dev:1.13.2
	MLWorks_1_open_beta_1996_09_13:1.13.1
	MLWorks_Open_Beta_1996_08_22:1.12
	MLWorks_Beta_1996_07_02:1.11
	MLWorks_Beta_1996_06_07:1.10
	MLWorks_Beta_1996_06_06:1.10
	MLWorks_Beta_1996_06_05:1.10
	MLWorks_Beta_1996_06_03:1.10
	MLWorks_Beta_1996_05_31:1.10
	MLWorks_Beta_1996_05_30:1.10
	ML_beta_release_12/08/94:1.10
	ML_beta_release_03/08/94:1.10
	ML_revised_beta_release_25/05/94:1.9
	ML_final_beta_release_02/03/94:1.9
	mlworks-28-01-1994:1.9
	Release:1.8
	mlworks-beta-01-09-1993:1.8
	MLWorks-1-0-4-29/01/1993:1.4
	MLWorks-1-0-3-21/12/1992:1.3
	MLWorks-1-0-2-15/12/1992:1.2
	MLWorks-1-0-1-04/12/1992:1.1;
locks; strict;
comment	@ * @;


1.27
date	99.03.09.15.54.47;	author mitchell;	state Exp;
branches
	1.27.1.1;
next	1.26;

1.26
date	98.08.14.14.18.33;	author jkbrook;	state Exp;
branches;
next	1.25;

1.25
date	98.07.30.14.01.02;	author jkbrook;	state Exp;
branches;
next	1.24;

1.24
date	98.07.17.14.53.01;	author jkbrook;	state Exp;
branches;
next	1.23;

1.23
date	98.06.12.11.18.37;	author jkbrook;	state Exp;
branches;
next	1.22;

1.22
date	98.06.10.19.41.34;	author jkbrook;	state Exp;
branches;
next	1.21;

1.21
date	98.05.11.16.20.20;	author johnh;	state Exp;
branches;
next	1.20;

1.20
date	98.03.12.16.36.32;	author jkbrook;	state Exp;
branches;
next	1.19;

1.19
date	98.01.12.14.39.25;	author jkbrook;	state Exp;
branches;
next	1.18;

1.18
date	97.10.03.13.33.48;	author jkbrook;	state Exp;
branches;
next	1.17;

1.17
date	97.08.07.14.25.00;	author brucem;	state Exp;
branches
	1.17.1.1
	1.17.2.1;
next	1.16;

1.16
date	97.06.16.10.13.20;	author daveb;	state Exp;
branches;
next	1.15;

1.15
date	97.03.27.15.06.33;	author daveb;	state Exp;
branches
	1.15.1.1;
next	1.14;

1.14
date	96.11.12.13.00.34;	author jont;	state Exp;
branches
	1.14.1.1
	1.14.2.1
	1.14.3.1
	1.14.4.1;
next	1.13;

1.13
date	96.09.04.16.12.26;	author jont;	state Exp;
branches
	1.13.1.1
	1.13.2.1
	1.13.3.1;
next	1.12;

1.12
date	96.07.04.13.57.45;	author jont;	state Exp;
branches;
next	1.11;

1.11
date	96.06.27.09.50.16;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	94.06.23.10.18.32;	author nickh;	state Exp;
branches;
next	1.9;

1.9
date	94.01.28.11.11.50;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	93.06.02.12.49.45;	author richard;	state Exp;
branches
	1.8.1.1;
next	1.7;

1.7
date	93.05.12.14.01.43;	author richard;	state Exp;
branches;
next	1.6;

1.6
date	93.03.08.18.41.32;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	93.02.02.15.02.21;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	93.01.29.11.19.49;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	92.12.22.13.03.17;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	92.12.15.15.15.50;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	92.12.01.10.47.32;	author clive;	state Exp;
branches;
next	;

1.8.1.1
date	93.06.02.12.49.45;	author jont;	state Exp;
branches;
next	;

1.13.1.1
date	96.09.13.11.18.02;	author hope;	state Exp;
branches;
next	;

1.13.2.1
date	96.10.07.16.07.52;	author hope;	state Exp;
branches;
next	;

1.13.3.1
date	96.10.17.11.26.08;	author hope;	state Exp;
branches;
next	;

1.14.1.1
date	96.11.14.12.51.23;	author hope;	state Exp;
branches
	1.14.1.1.1.1;
next	;

1.14.1.1.1.1
date	96.11.28.15.02.27;	author hope;	state Exp;
branches;
next	;

1.14.2.1
date	96.11.22.18.10.36;	author hope;	state Exp;
branches;
next	;

1.14.3.1
date	96.12.17.17.49.12;	author hope;	state Exp;
branches
	1.14.3.1.1.1;
next	;

1.14.3.1.1.1
date	97.02.24.11.39.18;	author hope;	state Exp;
branches;
next	;

1.14.4.1
date	96.12.18.09.43.16;	author hope;	state Exp;
branches;
next	;

1.15.1.1
date	97.05.12.10.35.45;	author hope;	state Exp;
branches;
next	1.15.1.2;

1.15.1.2
date	97.05.15.09.12.16;	author daveb;	state Exp;
branches;
next	1.15.1.3;

1.15.1.3
date	97.06.09.16.19.23;	author daveb;	state Exp;
branches
	1.15.1.3.1.1
	1.15.1.3.2.1
	1.15.1.3.3.1;
next	;

1.15.1.3.1.1
date	97.07.28.18.21.27;	author daveb;	state Exp;
branches;
next	1.15.1.3.1.2;

1.15.1.3.1.2
date	97.08.08.09.35.27;	author johnh;	state Exp;
branches;
next	1.15.1.3.1.3;

1.15.1.3.1.3
date	97.08.15.15.31.13;	author jkbrook;	state Exp;
branches
	1.15.1.3.1.3.1.1;
next	;

1.15.1.3.1.3.1.1
date	97.10.07.11.47.02;	author jkbrook;	state Exp;
branches;
next	1.15.1.3.1.3.1.2;

1.15.1.3.1.3.1.2
date	97.10.07.16.00.20;	author jkbrook;	state Exp;
branches;
next	1.15.1.3.1.3.1.3;

1.15.1.3.1.3.1.3
date	97.11.13.18.06.15;	author jkbrook;	state Exp;
branches;
next	;

1.15.1.3.2.1
date	97.09.08.17.14.52;	author daveb;	state Exp;
branches;
next	;

1.15.1.3.3.1
date	97.09.09.14.10.44;	author daveb;	state Exp;
branches;
next	1.15.1.3.3.2;

1.15.1.3.3.2
date	97.09.22.17.51.06;	author jkbrook;	state Exp;
branches;
next	1.15.1.3.3.3;

1.15.1.3.3.3
date	97.11.13.15.35.06;	author jkbrook;	state Exp;
branches;
next	;

1.17.1.1
date	97.09.10.19.26.45;	author brucem;	state Exp;
branches;
next	;

1.17.2.1
date	97.09.11.20.56.44;	author daveb;	state Exp;
branches;
next	;

1.27.1.1
date	99.04.01.17.58.07;	author daveb;	state Exp;
branches;
next	;


desc
@Version data
@


1.27
log
@[Bug #190509]
Update version strings to 2.1
@
text
@(* __version.sml the structure *)
(*
$Log: __version.sml,v $
 * Revision 1.26  1998/08/14  14:18:33  jkbrook
 * [Bug #30477]
 * Remove extra space after edition name in version string
 *
 * Revision 1.25  1998/07/30  14:01:02  jkbrook
 * [Bug #30456]
 * Update for 2.0c0
 *
 * Revision 1.24  1998/07/17  14:53:01  jkbrook
 * [Bug #30436]
 * Update edition names
 *
 * Revision 1.23  1998/06/12  11:18:37  jkbrook
 * [Bug #30415]
 * Update version strings for 2.0b2
 *
 * Revision 1.22  1998/06/10  19:41:34  jkbrook
 * [Bug #30411]
 * Need to pass version number to license-file checking code
 *
 * Revision 1.21  1998/05/11  16:20:20  johnh
 * [Bug #30303]
 * pick up edition from runtime.
 *
 * Revision 1.20  1998/03/12  16:36:32  jkbrook
 * [Bug #30368]
 * Update version info for 2.0b0
 *
 * Revision 1.19  1998/01/12  14:39:25  jkbrook
 * [Bug #30315]
 * Updating version strings for 2.0m2
 *
 * Revision 1.18  1997/10/03  13:33:48  jkbrook
 * [Bug #30272]
 * Updating version info to 2.0m1
 *
 * Revision 1.17  1997/08/07  14:25:00  brucem
 * [Bug #30232]
 * Dont' print r0 in version string.
 *
 * Revision 1.16  1997/06/16  10:13:20  daveb
 * [Bug #30169]
 * Updated version strings for 2.0m0.
 *
 * Revision 1.15  1997/03/27  15:06:33  daveb
 * [Bug #1990]
 * Replaced the version string with a function that constructs the string from
 * a datatype.  The MLW_FULL_VERSION environment/registry setting controls
 * whether the full version string is printed.
 *
 * Revision 1.14  1996/11/12  13:00:34  jont
 * Update to release copyright string
 *
 * Revision 1.13  1996/09/04  16:12:26  jont
 * Add expiry date warning
 *
 * Revision 1.12  1996/07/04  13:57:45  jont
 * Upgrade version number again
 *
 * Revision 1.11  1996/06/27  09:50:16  jont
 * Change to be revision 11
 *
 * Revision 1.10  1994/06/23  10:18:32  nickh
 * Lots of recent changes (new runtime, new ancillaries, new code names).
 *
Revision 1.9  1994/01/28  11:11:50  daveb
Released version 8 to ts; changed version number to 9.

Revision 1.8  1993/06/02  12:49:45  richard
Revision 7 released to ts.  Changed revision to 8.

Revision 1.7  1993/05/12  14:01:43  richard
Revision 6 released to ts.  Now revision 7.

Revision 1.6  1993/03/08  18:41:32  jont
Upgraded to version 5 to indicate move to native motif mode

Revision 1.5  1993/02/02  15:02:21  jont
Added copyright message

Revision 1.4  1993/01/29  11:19:49  jont
New revision number 4

Revision 1.3  1992/12/22  13:03:17  jont
Now revision 3

Revision 1.2  1992/12/15  15:15:50  jont
Revision 2

Revision 1.1  1992/12/01  10:47:32  clive
Initial revision

Copyright (C) 1993 Harlequin Ltd
*)

require "version";
require "../basis/__int";
require "../system/__getenv";

structure Version_ : VERSION =
  struct
    datatype kind = MILESTONE of int 
                  | ALPHA of int 
                  | BETA of int 
                  | FULL of int 

    (* constructors must kept consistent with those in rts/sha/mlw_mklic.h *)
    (* and in alphabetical order *)

    datatype edition = ENTERPRISE | PERSONAL | PROFESSIONAL

    val env = MLWorks.Internal.Runtime.environment
    val get_edition : unit -> edition = env "license get edition"

    fun edition () = get_edition () 

    fun current () = {major = 2, 
                      minor = 1, 
                      revision = 0, 
                      status = FULL 0,
                      edition = edition()}

    fun get_status () = #status(current())

    (* this tells us whether to print "Beta" after the main edition, 
       e.g., Personal Beta *)

    fun statusString status = 
      case status of
         BETA _ => "Beta "
       | _  => ""

    val copyright =
      "Copyright (C) 1999 Harlequin Group plc." ^
      "  All rights reserved.\n" ^
      "MLWorks is a trademark of Harlequin Group plc.\n"

    fun printEdition (edition) =
      case edition of 
          ENTERPRISE => "Enterprise"
        | PERSONAL => "Personal"
        | PROFESSIONAL => "Professional"

    fun printStatus (MILESTONE i) = "m" ^ Int.toString i
    |   printStatus (ALPHA i) = "a" ^ Int.toString i
    |   printStatus (BETA i) = "b" ^ Int.toString i
    |   printStatus (FULL i) =
      case Getenv_.get_version_setting () of
	SOME "full" => "c" ^ Int.toString i
      | _ => ""

    fun printVersion {major, minor, revision, status, edition} =
      Int.toString major ^ "." ^
      Int.toString minor ^ 
      (if (revision=0) then "" else ("r" ^ Int.toString revision)) ^
      printStatus status ^
       " " ^ printEdition edition ^ " " ^ 
       statusString status ^ 
       "Edition" 

    fun versionString () =
      "MLWorks " ^ (printVersion (current())) ^ "\n" ^ copyright

  end







@


1.27.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.27  1999/03/09  15:54:47  mitchell
 * [Bug #190509]
 * Update version strings to 2.1
 *
@


1.26
log
@[Bug #30477]
Remove extra space after edition name in version string
@
text
@d4 4
d121 1
a121 1
                      minor = 0, 
d137 1
a137 1
      "Copyright (C) 1998 Harlequin Group plc." ^
d168 7
@


1.25
log
@[Bug #30456]
Update for 2.0c0
@
text
@d4 4
d129 1
a129 1
         BETA _ => "Beta"
d156 3
a158 2
       " " ^ printEdition edition ^ " " ^ statusString status ^ 
       " Edition" 
@


1.24
log
@[Bug #30436]
Update edition names
@
text
@d4 4
d115 1
a115 1
                      status = BETA 2,
@


1.23
log
@[Bug #30415]
Update version strings for 2.0b2
@
text
@d4 4
d98 1
a98 1
    (* constructors must kept consistent with those in rts/src/mlw_mklic.h *)
d101 1
a101 1
    datatype edition = FREE | PERSONAL | STUDENT
d117 1
a117 1
       e.g., Personal *)
d131 1
a131 1
          FREE => "Free"
d133 1
a133 1
        | STUDENT => "Student"
@


1.22
log
@[Bug #30411]
Need to pass version number to license-file checking code
@
text
@d4 4
d107 1
a107 1
                      status = BETA 0,
@


1.21
log
@[Bug #30303]
pick up edition from runtime.
@
text
@d4 4
d90 5
d96 9
a104 1
    val get_edition : unit -> int = env "license get edition"
d106 9
a114 12
    val editionStr = 
      case get_edition() of
	0 => "Beta"
      | 1 => "Personal"
      | 2 => "Student"
      | _ => "Personal"

    val current = {major = 2, 
                   minor = 0, 
                   revision = 0, 
                   status = BETA 0,
                   edition = editionStr}
d121 6
d140 2
a141 1
       " " ^ edition ^ " Edition" 
d144 2
a145 1
      "MLWorks " ^ printVersion current ^ "\n" ^ copyright
@


1.20
log
@[Bug #30368]
Update version info for 2.0b0
@
text
@d4 4
d86 10
d100 1
a100 1
                   edition = "Beta"}
@


1.19
log
@[Bug #30315]
Updating version strings for 2.0m2
@
text
@d4 4
d85 2
a86 2
                   status = MILESTONE 2,
                   edition = "Personal"}
@


1.18
log
@[Bug #30272]
Updating version info to 2.0m1
@
text
@d4 4
d81 1
a81 1
                   status = MILESTONE 1,
d85 1
a85 1
      "Copyright (C) 1997 The Harlequin Group Limited." ^
d87 1
a87 1
      "MLWorks is a trademark of The Harlequin Group Limited.\n"
@


1.17
log
@[Bug #30232]
Dont' print r0 in version string.
@
text
@d4 4
d69 10
a78 4
    datatype kind =
      MILESTONE of int | ALPHA of int | BETA of int | FULL of int

    val current = {major = 2, minor = 0, revision = 0, status = MILESTONE 0}
d93 1
a93 1
    fun printVersion {major, minor, revision, status} =
d97 2
a98 1
      printStatus status
@


1.17.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.17  1997/08/07  14:25:00  brucem
 * [Bug #30232]
 * Dont' print r0 in version string.
 *
@


1.17.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.17  1997/08/07  14:25:00  brucem
 * [Bug #30232]
 * Dont' print r0 in version string.
 *
@


1.16
log
@[Bug #30169]
Updated version strings for 2.0m0.
@
text
@d4 4
d85 2
a86 2
      Int.toString minor ^ "r" ^
      Int.toString revision ^
@


1.15
log
@[Bug #1990]
Replaced the version string with a function that constructs the string from
a datatype.  The MLW_FULL_VERSION environment/registry setting controls
whether the full version string is printed.
@
text
@d4 6
d64 1
a64 1
    val current = {major = 1, minor = 0, revision = 2, status = FULL 0}
d67 1
a67 1
      "Copyright (C) 1996 The Harlequin Group Limited." ^
@


1.15.1.1
log
@branched from 1.15
@
text
@a3 6
 * Revision 1.15  1997/03/27  15:06:33  daveb
 * [Bug #1990]
 * Replaced the version string with a function that constructs the string from
 * a datatype.  The MLW_FULL_VERSION environment/registry setting controls
 * whether the full version string is printed.
 *
@


1.15.1.2
log
@[Bug #30126]
Updated version for 1.0r2c1.
@
text
@a3 3
 * Revision 1.15.1.1  1997/05/12  10:35:45  hope
 * branched from 1.15
 *
d64 1
a64 1
    val current = {major = 1, minor = 0, revision = 2, status = FULL 1}
d67 1
a67 1
      "Copyright (C) 1997 The Harlequin Group Limited." ^
@


1.15.1.3
log
@[Bug #30168]
Updated version info for 1.0r2c2.
@
text
@a3 4
 * Revision 1.15.1.2  1997/05/15  09:12:16  daveb
 * [Bug #30126]
 * Updated version for 1.0r2c1.
 *
d55 1
a55 1
Copyright (C) 1997 The Harlequin Group Ltd. All rights reserved.
d67 1
a67 1
    val current = {major = 1, minor = 0, revision = 2, status = FULL 2}
@


1.15.1.3.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 4
 * Revision 1.15.1.3  1997/06/09  16:19:23  daveb
 * [Bug #30168]
 * Updated version info for 1.0r2c2.
 *
@


1.15.1.3.3.2
log
@[Bug #30271]
Updating version strings for 1.0r3
@
text
@a3 3
 * Revision 1.15.1.3.3.1  1997/09/09  14:10:44  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
 *
d75 1
a75 1
    val current = {major = 1, minor = 0, revision = 3, status = FULL 0}
@


1.15.1.3.3.3
log
@[Bug #30271]
Changing version string from 1.0r3 to 1.0r2
@
text
@a3 4
 * Revision 1.15.1.3.3.2  1997/09/22  17:51:06  jkbrook
 * [Bug #30271]
 * Updating version strings for 1.0r3
 *
d78 1
a78 1
    val current = {major = 1, minor = 0, revision = 2, status = FULL 0}
@


1.15.1.3.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 4
 * Revision 1.15.1.3  1997/06/09  16:19:23  daveb
 * [Bug #30168]
 * Updated version info for 1.0r2c2.
 *
@


1.15.1.3.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 4
 * Revision 1.15.1.3  1997/06/09  16:19:23  daveb
 * [Bug #30168]
 * Updated version info for 1.0r2c2.
 *
@


1.15.1.3.1.2
log
@[Bug #30232]
Merging into MLWorks_11 - Dont' print r0 in version string.
@
text
@a3 3
 * Revision 1.15.1.3.1.1  1997/07/28  18:21:27  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
d92 2
a93 2
      Int.toString minor ^ 
      (if (revision=0) then "" else ("r" ^ Int.toString revision)) ^
@


1.15.1.3.1.3
log
@[Bug #30196]
Updating version info for student version
Adding edition printing
@
text
@a3 4
 * Revision 1.15.1.3.1.2  1997/08/08  09:35:27  johnh
 * [Bug #30232]
 * Merging into MLWorks_11 - Dont' print r0 in version string.
 *
d75 4
a78 10
    datatype kind = MILESTONE of int 
                  | ALPHA of int 
                  | BETA of int 
                  | FULL of int 

    val current = {major = 1, 
                   minor = 1, 
                   revision = 0, 
                   status = FULL 0,
                   edition = "Student"}
d93 1
a93 1
    fun printVersion {major, minor, revision, status, edition} =
d97 1
a97 2
      printStatus status ^
       " " ^ edition ^ " Edition" 
@


1.15.1.3.1.3.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 5
 * Revision 1.15.1.3.1.3  1997/08/15  15:31:13  jkbrook
 * [Bug #30196]
 * Updating version info for student version
 * Adding edition printing
 *
@


1.15.1.3.1.3.1.2
log
@[Bug #30277]
Update version info for 1.1r1 (Student Linux version)
@
text
@a3 3
 * Revision 1.15.1.3.1.3.1.1  1997/10/07  11:47:02  jkbrook
 * branched from MLWorks_11 for label MLWorks_11r1
 *
d91 1
a91 1
                   revision = 1, 
@


1.15.1.3.1.3.1.3
log
@[Bug #30277]
Changing version strings from 1.1r1 to 1.1
@
text
@a3 4
 * Revision 1.15.1.3.1.3.1.2  1997/10/07  16:00:20  jkbrook
 * [Bug #30277]
 * Update version info for 1.1r1 (Student Linux version)
 *
d94 1
a94 1
                   revision = 0, 
@


1.14
log
@Update to release copyright string
@
text
@d4 3
d50 2
d55 8
a62 3
    val version_string =
      "MLWorks 1.0\n" ^
      "Copyright (C) 1996 The Harlequin Group Limited.  All rights reserved.\n" ^
d64 17
@


1.14.4.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/11/12  13:00:34  jont
 * Update to release copyright string
 *
@


1.14.3.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/11/12  13:00:34  jont
 * Update to release copyright string
 *
@


1.14.3.1.1.1
log
@branched from 1.14.3.1
@
text
@a3 3
 * Revision 1.14.3.1  1996/12/17  17:49:12  hope
 * branched from 1.14
 *
@


1.14.2.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/11/12  13:00:34  jont
 * Update to release copyright string
 *
@


1.14.1.1
log
@branched from 1.14
@
text
@a3 3
 * Revision 1.14  1996/11/12  13:00:34  jont
 * Update to release copyright string
 *
@


1.14.1.1.1.1
log
@branched from 1.14.1.1
@
text
@a3 3
 * Revision 1.14.1.1  1996/11/14  12:51:23  hope
 * branched from 1.14
 *
@


1.13
log
@Add expiry date warning
@
text
@d4 3
d51 3
a53 2
      "Harlequin MLWorks(TM) 1.0 Beta will expire on 31 December 1996, when the\n" ^
      "commercial version may be purchased directly from Harlequin.\n"
@


1.13.3.1
log
@branched from 1.13
@
text
@a3 3
 * Revision 1.13  1996/09/04  16:12:26  jont
 * Add expiry date warning
 *
@


1.13.2.1
log
@branched from 1.13
@
text
@a3 3
 * Revision 1.13  1996/09/04  16:12:26  jont
 * Add expiry date warning
 *
@


1.13.1.1
log
@branched from 1.13
@
text
@a3 3
 * Revision 1.13  1996/09/04  16:12:26  jont
 * Add expiry date warning
 *
@


1.12
log
@Upgrade version number again
@
text
@d4 3
d47 3
a49 1
    val version_string = "MLWorks(TM) Version 1.0 (beta) Revision 12"
@


1.11
log
@Change to be revision 11
@
text
@d4 3
d44 1
a44 1
    val version_string = "MLWorks(TM) Version 1.0 (beta) Revision 11"
@


1.10
log
@Lots of recent changes (new runtime, new ancillaries, new code names).
@
text
@d4 3
d41 1
a41 1
    val version_string = "MLWorks(TM) Version 1.0 (beta) Revision 10"
@


1.9
log
@Released version 8 to ts; changed version number to 9.
@
text
@d4 3
d38 1
a38 1
    val version_string = "MLWorks(TM) Version 1.0 Revision 9"
@


1.8
log
@Revision 7 released to ts.  Changed revision to 8.
@
text
@d4 3
d35 1
a35 1
    val version_string = "MLWorks(TM) Version 1.0 Revision 8"
@


1.8.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.8  1993/06/02  12:49:45  richard
Revision 7 released to ts.  Changed revision to 8.

@


1.7
log
@Revision 6 released to ts.  Now revision 7.
@
text
@d4 3
d32 1
a32 1
    val version_string = "MLWorks(TM) Version 1.0 Revision 7"
@


1.6
log
@Upgraded to version 5 to indicate move to native motif mode
@
text
@d4 3
d29 1
a29 1
    val version_string = "MLWorks(TM) Version 1.0 Revision 5"
@


1.5
log
@Added copyright message
@
text
@d4 3
d26 1
a26 1
    val version_string = "MLWorks(TM) Version 1.0 Revision 4"
@


1.4
log
@New revision number 4
@
text
@d1 1
d4 3
d16 1
@


1.3
log
@Now revision 3
@
text
@d3 3
d18 1
a18 1
    val version_string = "MLWorks(TM) Version 1.0 Revision 3"
@


1.2
log
@Revision 2
@
text
@d3 3
d15 1
a15 1
    val version_string = "MLWorks(TM) Version 1.0 Revision 2"
@


1.1
log
@Initial revision
@
text
@d2 4
a5 1
$Log$
d12 1
a12 1
    val version_string = "MLWorks(TM) Version 1.0 Revision 1"
@
