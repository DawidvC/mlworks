head	1.15;
access;
symbols
	MLW_daveb_inline_1_4_99:1.15.1
	MLWorks_21c0_1999_03_25:1.15
	MLWorks_20c1_1998_08_20:1.15
	MLWorks_20c0_1998_08_04:1.15
	MLWorks_20b2c2_1998_06_19:1.15
	MLWorks_20b2_Windows_1998_06_12:1.15
	MLWorks_20b1c1_1998_05_07:1.15
	MLWorks_20b0_1998_04_07:1.15
	MLWorks_20b0_1998_03_20:1.15
	MLWorks_20m2_1998_02_16:1.14
	MLWorks_20m1_1997_10_23:1.13
	MLWorks_11r1:1.13.1.1.1.1.1
	MLWorks_workspace_97:1.13.3
	MLWorks_dt_wizard:1.13.2
	MLWorks_11c0_1997_09_09:1.13.1.1.1.1
	MLWorks_10r3:1.13.1.1.3
	MLWorks_10r2_551:1.13.1.1.2
	MLWorks_11:1.13.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.13.1.1
	MLWorks_20m0_1997_06_20:1.13
	MLWorks_1_0_r2c2_1997_06_14:1.13.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.13.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.13.1
	MLWorks_BugFix_1997_04_24:1.13
	MLWorks_1_0_r2_Win32_1997_04_11:1.13
	MLWorks_1_0_r2_Unix_1997_04_04:1.13
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.12.3.1.1
	MLWorks_gui_1996_12_18:1.12.4
	MLWorks_1_0_Win32_1996_12_17:1.12.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.12.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.12.1.1
	MLWorks_1_0_Irix_1996_11_28:1.12.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.12.2
	MLWorks_1_0_Unix_1996_11_14:1.12.1
	MLWorks_Open_Beta2_1996_10_11:1.10.3
	MLWorks_License_dev:1.10.2
	MLWorks_1_open_beta_1996_09_13:1.10.1
	MLWorks_Open_Beta_1996_08_22:1.10
	MLWorks_Beta_1996_07_02:1.10
	MLWorks_Beta_1996_06_07:1.9
	MLWorks_Beta_1996_06_06:1.9
	MLWorks_Beta_1996_06_05:1.9
	MLWorks_Beta_1996_06_03:1.9
	MLWorks_Beta_1996_05_31:1.9
	MLWorks_Beta_1996_05_30:1.9
	ML_beta_release_12/08/94:1.2
	ML_beta_release_03/08/94:1.2;
locks; strict;
comment	@ * @;


1.15
date	98.03.20.15.58.07;	author jont;	state Exp;
branches
	1.15.1.1;
next	1.14;

1.14
date	97.10.30.13.25.52;	author johnh;	state Exp;
branches;
next	1.13;

1.13
date	97.03.19.16.50.20;	author matthew;	state Exp;
branches
	1.13.1.1
	1.13.2.1
	1.13.3.1;
next	1.12;

1.12
date	96.11.06.11.29.00;	author matthew;	state Exp;
branches
	1.12.1.1
	1.12.2.1
	1.12.3.1
	1.12.4.1;
next	1.11;

1.11
date	96.10.29.16.35.01;	author io;	state Exp;
branches;
next	1.10;

1.10
date	96.06.15.16.41.21;	author brianm;	state Exp;
branches
	1.10.1.1
	1.10.2.1
	1.10.3.1;
next	1.9;

1.9
date	96.05.21.16.12.15;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	96.05.01.09.38.12;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	96.04.29.14.59.55;	author matthew;	state Exp;
branches;
next	1.6;

1.6
date	96.04.11.14.58.55;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	96.02.29.14.14.15;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	95.06.14.12.50.06;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	95.05.26.10.07.03;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	94.08.02.16.37.46;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	94.08.01.15.17.37;	author daveb;	state Exp;
branches;
next	;

1.10.1.1
date	96.09.13.11.18.41;	author hope;	state Exp;
branches;
next	;

1.10.2.1
date	96.10.07.16.08.34;	author hope;	state Exp;
branches;
next	;

1.10.3.1
date	96.10.17.11.26.48;	author hope;	state Exp;
branches;
next	;

1.12.1.1
date	96.11.14.12.52.12;	author hope;	state Exp;
branches
	1.12.1.1.1.1;
next	;

1.12.1.1.1.1
date	96.11.28.15.03.11;	author hope;	state Exp;
branches;
next	;

1.12.2.1
date	96.11.22.18.11.22;	author hope;	state Exp;
branches;
next	;

1.12.3.1
date	96.12.17.17.49.53;	author hope;	state Exp;
branches
	1.12.3.1.1.1;
next	;

1.12.3.1.1.1
date	97.02.24.11.40.06;	author hope;	state Exp;
branches;
next	;

1.12.4.1
date	96.12.18.09.43.59;	author hope;	state Exp;
branches;
next	;

1.13.1.1
date	97.05.12.10.36.27;	author hope;	state Exp;
branches
	1.13.1.1.1.1
	1.13.1.1.2.1
	1.13.1.1.3.1;
next	;

1.13.1.1.1.1
date	97.07.28.18.21.10;	author daveb;	state Exp;
branches
	1.13.1.1.1.1.1.1;
next	;

1.13.1.1.1.1.1.1
date	97.10.07.11.46.39;	author jkbrook;	state Exp;
branches;
next	;

1.13.1.1.2.1
date	97.09.08.17.14.36;	author daveb;	state Exp;
branches;
next	;

1.13.1.1.3.1
date	97.09.09.14.10.29;	author daveb;	state Exp;
branches;
next	;

1.13.2.1
date	97.09.10.19.26.26;	author brucem;	state Exp;
branches;
next	;

1.13.3.1
date	97.09.11.20.56.27;	author daveb;	state Exp;
branches;
next	;

1.15.1.1
date	99.04.01.17.58.02;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.15
log
@[Bug #30090]
Modify to use TextIO instead of MLWorks.IO
@
text
@(*  ==== ENVIRONMENT PREFERENCES ====
 *
 *  Copyright (C) 1994 Harlequin Ltd
 *
 *  Revision Log
 *  ------------
 *  $Log: _preferences.sml,v $
 * Revision 1.14  1997/10/30  13:25:52  johnh
 * [Bug #30233]
 * Change editor interface.
 *
 * Revision 1.13  1997/03/19  16:50:20  matthew
 * Adding use_relative_pathname preference
 *
 * Revision 1.12  1996/11/06  11:29:00  matthew
 * [Bug #1728]
 * __integer becomes __int
 *
 * Revision 1.11  1996/10/29  16:35:01  io
 * moving String from toplevel
 *
 * Revision 1.10  1996/06/15  16:41:21  brianm
 * Modifications to add custom editor interface ...
 *
 * Revision 1.9  1996/05/21  16:12:15  daveb
 * Removed auto_output_window preference.
 *
 * Revision 1.8  1996/05/01  09:38:12  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
 * Revision 1.7  1996/04/29  14:59:55  matthew
 * Removing MLWorks.Integer
 *
 * Revision 1.6  1996/04/11  14:58:55  daveb
 * Added remove_duplicates_from_context.
 *
 * Revision 1.5  1996/02/29  14:14:15  matthew
 * Adding function to read preferences from a file
 *
 * Revision 1.4  1995/06/14  12:50:06  daveb
 * Added use_debugger and use_error_browser preferences.
 *
 *  Revision 1.3  1995/05/26  10:07:03  daveb
 *  Moved user_preferences here from user_options.
 *
 *  Revision 1.2  1994/08/02  16:37:46  daveb
 *  Added +%l arguments to default editor commands.
 *  
 *  Revision 1.1  1994/08/01  15:17:37  daveb
 *  new file
 *  
 *)

require "^.basis.__int";
require "../basis/__text_io";
require "preferences";
require "info";

functor Preferences (
  structure Info: INFO
): PREFERENCES =
struct
  datatype editor_options =
    EDITOR_OPTIONS of
      {editor : string ref,
       oneWayEditorName : string ref,
       twoWayEditorName : string ref,
       externalEditorCommand : string ref}


  val default_editor_options =
    EDITOR_OPTIONS
      {editor = ref "External",
       oneWayEditorName = ref "Vi",
       twoWayEditorName = ref "Emacs",
       externalEditorCommand = ref "xterm -name VIsual -e vi +%l %f"}

  datatype environment_options =
    ENVIRONMENT_OPTIONS of
      {history_length: 		int ref,
       window_debugger: 	bool ref,
       use_debugger: 		bool ref,
       use_error_browser : 	bool ref,
       use_relative_pathname:   bool ref,
       completion_menu:         bool ref,
       remove_duplicates_from_context:
				bool ref,
       full_menus:		bool ref}

  val default_environment_options =
    ENVIRONMENT_OPTIONS
      {window_debugger = ref true,
       use_debugger = ref true,
       use_error_browser  = ref true,
       use_relative_pathname = ref false,
       history_length = ref 20,
       completion_menu = ref true,
       remove_duplicates_from_context = ref false,
       full_menus = ref false}

  datatype preferences =
    PREFERENCES of
      {editor_options : editor_options,
       environment_options : environment_options}

  val default_preferences =
    PREFERENCES
      {editor_options = default_editor_options,
       environment_options = default_environment_options}

  datatype user_preferences = USER_PREFERENCES of
    ({editor:                                         string ref,
      externalEditorCommand:                          string ref,
      oneWayEditorName:				      string ref,
      twoWayEditorName:				      string ref,
      history_length:                                 int ref,
      max_num_errors:                                 int ref,
      window_debugger:                                bool ref,
      use_debugger:                                   bool ref,
      use_error_browser:                              bool ref,
      use_relative_pathname:                          bool ref,
      completion_menu:                                bool ref,
      remove_duplicates_from_context:		      bool ref,
      full_menus:                                     bool ref}
    * (unit -> unit) list ref)

  fun make_user_preferences
    (PREFERENCES
       {editor_options = EDITOR_OPTIONS
          {editor, externalEditorCommand, oneWayEditorName, twoWayEditorName},
        environment_options = ENVIRONMENT_OPTIONS
          {window_debugger, history_length,
           use_debugger, use_error_browser, use_relative_pathname,
           completion_menu, full_menus,
	   remove_duplicates_from_context}}) =
    USER_PREFERENCES
      ({editor                   = editor,
        externalEditorCommand    = externalEditorCommand,
        oneWayEditorName         = oneWayEditorName,
        twoWayEditorName         = twoWayEditorName,
        history_length           = history_length,
        max_num_errors           = Info.max_num_errors,
        window_debugger          = window_debugger,
        use_debugger             = use_debugger,
        use_error_browser        = use_error_browser,
        use_relative_pathname    = use_relative_pathname,
        completion_menu          = completion_menu,
        remove_duplicates_from_context = remove_duplicates_from_context,
        full_menus               = full_menus},
       ref nil)

  fun new_editor_options (USER_PREFERENCES (r, _)) =
    EDITOR_OPTIONS
      {editor = #editor r,
       externalEditorCommand = #externalEditorCommand r,
       oneWayEditorName = #oneWayEditorName r,
       twoWayEditorName = #twoWayEditorName r}

  fun new_environment_options (USER_PREFERENCES (r, _)) =
    ENVIRONMENT_OPTIONS
      {history_length = #history_length r,
       window_debugger = #window_debugger r,
       use_debugger = #use_debugger r,
       use_error_browser = #use_error_browser r,
       use_relative_pathname = #use_relative_pathname r,
       completion_menu = #completion_menu r,
       remove_duplicates_from_context = #remove_duplicates_from_context r,
       full_menus = #full_menus r}


  fun new_preferences user_preferences =
    PREFERENCES
      {editor_options    = new_editor_options user_preferences,
       environment_options = new_environment_options user_preferences }

  fun set_from_list (USER_PREFERENCES (r,_),items) =
    let
      fun do_one (component,value) =
        let
          (* Not much error checking here *)
          fun get_bool "false" = false
            | get_bool _ = true
          fun get_int s =
            let
              fun scan ([],acc) = acc
                | scan (c :: rest,acc) =
                  scan (rest, ord c - ord #"0" + (10 * acc))
            in
              scan (explode s,0)
            end
        in
          case component of
            "editor" => (#editor r) := value
          | "externalEditorCommand" => (#externalEditorCommand r) := value
          | "oneWayEditorName" => (#oneWayEditorName r) := value
          | "twoWayEditorName" => (#twoWayEditorName r) := value
          | "history_length" => (#history_length r) := get_int value
          | "max_num_errors" => (#max_num_errors r) := get_int value
          | "window_debugger" => (#window_debugger r) := get_bool value
          | "use_debugger" => (#use_debugger r) := get_bool value
          | "use_error_browser" => (#use_error_browser r) := get_bool value
          | "completion_menu" => (#completion_menu r) := get_bool value
          | "remove_duplicates_from_context" =>
	       (#remove_duplicates_from_context r) := get_bool value
          | "full_menus" => (#full_menus r)  := get_bool value
          | _ => ()
        end
    in
      app do_one items 
    end
                  
  fun save_to_stream (USER_PREFERENCES (r,_),outstream) =
    let
      fun out (component,value) = TextIO.output (outstream,component ^ " " ^ value ^ "\n")
      fun write_bool true = "true"
        | write_bool false = "false"
      val write_int = Int.toString
    in
      out ("editor", !(#editor r));
      out ("externalEditorCommand", !(#externalEditorCommand r));
      out ("oneWayEditorName", !(#oneWayEditorName r));
      out ("twoWayEditorName", !(#twoWayEditorName r));
      out ("history_length", write_int (!(#history_length r)));
      out ("max_num_errors", write_int (!(#max_num_errors r)));
      out ("window_debugger", write_bool (!(#window_debugger r)));
      out ("use_debugger", write_bool (!(#use_debugger r)));
      out ("use_error_browser", write_bool (!(#use_error_browser r)));
      out ("completion_menu", write_bool (!(#completion_menu r)));
      out ("remove_duplicates_from_context",
	   write_bool (!(#remove_duplicates_from_context r)));
      out ("full_menus", write_bool (!(#full_menus r)))
    end
end
@


1.15.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a7 4
 * Revision 1.15  1998/03/20  15:58:07  jont
 * [Bug #30090]
 * Modify to use TextIO instead of MLWorks.IO
 *
@


1.14
log
@[Bug #30233]
Change editor interface.
@
text
@d8 4
d58 1
d217 1
a217 1
      fun out (component,value) = MLWorks.IO.output (outstream,component ^ " " ^ value ^ "\n")
@


1.13
log
@Adding use_relative_pathname preference
@
text
@d8 3
d64 2
a65 1
       customEditorName : string ref,
d71 3
a73 2
      {editor = ref "EmacsServer",
       customEditorName = ref "Emacs",
d112 2
a113 1
      customEditorName:                               string ref,
d128 1
a128 1
          {editor, externalEditorCommand, customEditorName},
d137 2
a138 1
        customEditorName         = customEditorName,
d154 2
a155 1
       customEditorName = #customEditorName r}
d193 2
a194 1
          | "customEditorName" => (#customEditorName r) := value
d219 2
a220 1
      out ("customEditorName", !(#customEditorName r));
@


1.13.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a7 3
 * Revision 1.13  1997/03/19  16:50:20  matthew
 * Adding use_relative_pathname preference
 *
@


1.13.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a7 3
 * Revision 1.13  1997/03/19  16:50:20  matthew
 * Adding use_relative_pathname preference
 *
@


1.13.1.1
log
@branched from 1.13
@
text
@a7 3
 * Revision 1.13  1997/03/19  16:50:20  matthew
 * Adding use_relative_pathname preference
 *
@


1.13.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a7 3
 * Revision 1.13.1.1  1997/05/12  10:36:27  hope
 * branched from 1.13
 *
@


1.13.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a7 3
 * Revision 1.13.1.1  1997/05/12  10:36:27  hope
 * branched from 1.13
 *
@


1.13.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a7 3
 * Revision 1.13.1.1  1997/05/12  10:36:27  hope
 * branched from 1.13
 *
@


1.13.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a7 3
 * Revision 1.13.1.1.1.1  1997/07/28  18:21:10  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.12
log
@[Bug #1728]
__integer becomes __int
@
text
@d8 4
d77 1
d88 1
d113 1
d125 2
a126 1
           use_debugger, use_error_browser, completion_menu, full_menus,
d137 1
d155 1
@


1.12.4.1
log
@branched from 1.12
@
text
@a7 4
 * Revision 1.12  1996/11/06  11:29:00  matthew
 * [Bug #1728]
 * __integer becomes __int
 *
@


1.12.3.1
log
@branched from 1.12
@
text
@a7 4
 * Revision 1.12  1996/11/06  11:29:00  matthew
 * [Bug #1728]
 * __integer becomes __int
 *
@


1.12.3.1.1.1
log
@branched from 1.12.3.1
@
text
@a7 3
 * Revision 1.12.3.1  1996/12/17  17:49:53  hope
 * branched from 1.12
 *
@


1.12.2.1
log
@branched from 1.12
@
text
@a7 4
 * Revision 1.12  1996/11/06  11:29:00  matthew
 * [Bug #1728]
 * __integer becomes __int
 *
@


1.12.1.1
log
@branched from 1.12
@
text
@a7 4
 * Revision 1.12  1996/11/06  11:29:00  matthew
 * [Bug #1728]
 * __integer becomes __int
 *
@


1.12.1.1.1.1
log
@branched from 1.12.1.1
@
text
@a7 3
 * Revision 1.12.1.1  1996/11/14  12:52:12  hope
 * branched from 1.12
 *
@


1.11
log
@moving String from toplevel
@
text
@d8 3
d46 1
a46 1
require "^.basis.__integer";
@


1.10
log
@Modifications to add custom editor interface ...
@
text
@d8 3
d43 1
a43 2
require "../basis/__integer";

d164 1
a164 1
                  scan (rest, String.ord c - String.ord "0" + (10 * acc))
d166 1
a166 1
              scan (String.explode s,0)
a183 2
      fun iterate f [] = ()
        | iterate f (a::b) = (f a ; iterate f b)
d185 1
a185 1
      iterate do_one items 
@


1.10.3.1
log
@branched from 1.10
@
text
@a7 3
 * Revision 1.10  1996/06/15  16:41:21  brianm
 * Modifications to add custom editor interface ...
 *
@


1.10.2.1
log
@branched from 1.10
@
text
@a7 3
 * Revision 1.10  1996/06/15  16:41:21  brianm
 * Modifications to add custom editor interface ...
 *
@


1.10.1.1
log
@branched from 1.10
@
text
@a7 3
 * Revision 1.10  1996/06/15  16:41:21  brianm
 * Modifications to add custom editor interface ...
 *
@


1.9
log
@Removed auto_output_window preference.
@
text
@d8 3
d52 2
a53 2
       xterm_editor_command : string ref,
       x_editor_command : string ref}
d58 3
a60 3
      {editor = ref "emacs_server",
       xterm_editor_command = ref "vi +%l",
       x_editor_command = ref "emacs +%l"}
d95 2
a96 2
      x_editor_command:                               string ref,
      xterm_editor_command:                           string ref,
d110 1
a110 1
          {editor, x_editor_command, xterm_editor_command},
d117 2
a118 2
        x_editor_command         = x_editor_command,
        xterm_editor_command     = xterm_editor_command,
d132 2
a133 2
       x_editor_command = #x_editor_command r,
       xterm_editor_command = #xterm_editor_command r}
d169 2
a170 2
          | "x_editor_command" => (#x_editor_command r) := value
          | "xterm_editor_command" => (#xterm_editor_command r) := value
d196 2
a197 2
      out ("x_editor_command", !(#x_editor_command r));
      out ("xterm_editor_command", !(#xterm_editor_command r));
@


1.8
log
@String functions explode, implode, chr and ord now only available from String
io functions and types
instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
now only available from MLWorks.IO
@
text
@d8 6
a64 1
       auto_output_window:      bool ref,
a75 1
       auto_output_window = ref false,
a98 1
      auto_output_window:                             bool ref,
d109 1
a109 1
          {window_debugger, auto_output_window, history_length,
a120 1
        auto_output_window       = auto_output_window,
a135 1
       auto_output_window = #auto_output_window r,
a172 1
          | "auto_output_window" => (#auto_output_window r) := get_bool value
a199 1
      out ("auto_output_window", write_bool (!(#auto_output_window r)));
@


1.7
log
@Removing MLWorks.Integer
@
text
@d8 3
d158 1
a158 1
                  scan (rest, ord c - ord "0" + (10 * acc))
d160 1
a160 1
              scan (explode s,0)
d187 1
a187 1
      fun out (component,value) = output (outstream,component ^ " " ^ value ^ "\n")
@


1.6
log
@Added remove_duplicates_from_context.
@
text
@d8 3
d28 2
d187 1
a187 1
      val write_int = MLWorks.Integer.makestring
@


1.5
log
@Adding function to read preferences from a file
@
text
@d8 3
d53 2
d65 1
d89 1
d99 2
a100 1
           use_debugger, use_error_browser, completion_menu, full_menus}}) =
d112 1
d130 1
d166 2
d194 2
@


1.4
log
@Added use_debugger and use_error_browser preferences.
@
text
@d8 3
d129 55
@


1.3
log
@Moved user_preferences here from user_options.
@
text
@d8 3
d41 6
a46 4
      {history_length: int ref,
       window_debugger : bool ref,
       auto_output_window:       bool ref,
       completion_menu:          bool ref,
d52 2
d76 2
d89 1
a89 1
           completion_menu, full_menus}}) =
d97 2
d115 2
@


1.2
log
@Added +%l arguments to default editor commands.
@
text
@d8 6
a13 3
# Revision 1.1  1994/08/01  15:17:37  daveb
# new file
#
d17 1
d19 3
a21 1
functor Preferences () : PREFERENCES =
d61 51
@


1.1
log
@new file
@
text
@d7 4
a10 1
 *  $Log$
d27 2
a28 2
       xterm_editor_command = ref "vi",
       x_editor_command = ref "emacs"}
@
