head	1.10;
access;
symbols
	MLW_daveb_inline_1_4_99:1.10.11
	MLWorks_21c0_1999_03_25:1.10
	MLWorks_20c1_1998_08_20:1.10
	MLWorks_20c0_1998_08_04:1.10
	MLWorks_20b2c2_1998_06_19:1.10
	MLWorks_20b2_Windows_1998_06_12:1.10
	MLWorks_20b1c1_1998_05_07:1.10
	MLWorks_20b0_1998_04_07:1.10
	MLWorks_20b0_1998_03_20:1.10
	MLWorks_20m2_1998_02_16:1.10
	MLWorks_20m1_1997_10_23:1.10
	MLWorks_11r1:1.10.8.1.1.1.1
	MLWorks_workspace_97:1.10.10
	MLWorks_dt_wizard:1.10.9
	MLWorks_11c0_1997_09_09:1.10.8.1.1.1
	MLWorks_10r3:1.10.8.1.3
	MLWorks_10r2_551:1.10.8.1.2
	MLWorks_11:1.10.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.10.8.1
	MLWorks_20m0_1997_06_20:1.10
	MLWorks_1_0_r2c2_1997_06_14:1.10.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.10.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.10.8
	MLWorks_BugFix_1997_04_24:1.10
	MLWorks_1_0_r2_Win32_1997_04_11:1.10
	MLWorks_1_0_r2_Unix_1997_04_04:1.10
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.10.6.1.1
	MLWorks_gui_1996_12_18:1.10.7
	MLWorks_1_0_Win32_1996_12_17:1.10.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.10.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.10.4.1
	MLWorks_1_0_Irix_1996_11_28:1.10.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.10.5
	MLWorks_1_0_Unix_1996_11_14:1.10.4
	MLWorks_Open_Beta2_1996_10_11:1.10.3
	MLWorks_License_dev:1.10.2
	MLWorks_1_open_beta_1996_09_13:1.10.1
	MLWorks_Open_Beta_1996_08_22:1.10
	MLWorks_Beta_1996_07_02:1.10
	MLWorks_Beta_1996_06_07:1.10
	MLWorks_Beta_1996_06_06:1.10
	MLWorks_Beta_1996_06_05:1.10
	MLWorks_Beta_1996_06_03:1.10
	MLWorks_Beta_1996_05_31:1.10
	MLWorks_Beta_1996_05_30:1.10
	ML_beta_release_12/08/94:1.8
	ML_beta_release_03/08/94:1.8
	ML_revised_beta_release_25/05/94:1.8
	ML_final_beta_release_02/03/94:1.8
	mlworks-28-01-1994:1.8
	Release:1.8
	mlworks-beta-01-09-1993:1.8
	MLWorks-1-0-4-29/01/1993:1.3
	MLWorks-1-0-3-21/12/1992:1.3
	MLWorks-1-0-2-15/12/1992:1.3
	MLWorks-1-0-1-04/12/1992:1.3;
locks; strict;
comment	@ * @;


1.10
date	95.03.08.16.27.36;	author matthew;	state Exp;
branches
	1.10.1.1
	1.10.2.1
	1.10.3.1
	1.10.4.1
	1.10.5.1
	1.10.6.1
	1.10.7.1
	1.10.8.1
	1.10.9.1
	1.10.10.1
	1.10.11.1;
next	1.9;

1.9
date	94.09.15.10.02.08;	author matthew;	state Exp;
branches;
next	1.8;

1.8
date	93.06.10.10.40.21;	author matthew;	state Exp;
branches
	1.8.1.1;
next	1.7;

1.7
date	93.05.17.11.58.16;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	93.05.14.17.03.33;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	93.03.09.11.19.11;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	93.02.03.17.59.23;	author matthew;	state Exp;
branches;
next	1.3;

1.3
date	92.11.05.16.52.29;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	92.09.04.08.58.02;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	92.08.25.16.58.06;	author matthew;	state Exp;
branches;
next	;

1.8.1.1
date	93.06.10.10.40.21;	author jont;	state Exp;
branches;
next	;

1.10.1.1
date	96.09.13.11.20.37;	author hope;	state Exp;
branches;
next	;

1.10.2.1
date	96.10.07.16.10.34;	author hope;	state Exp;
branches;
next	;

1.10.3.1
date	96.10.17.11.29.06;	author hope;	state Exp;
branches;
next	;

1.10.4.1
date	96.11.14.12.54.51;	author hope;	state Exp;
branches
	1.10.4.1.1.1;
next	;

1.10.4.1.1.1
date	96.11.28.15.05.35;	author hope;	state Exp;
branches;
next	;

1.10.5.1
date	96.11.22.18.13.24;	author hope;	state Exp;
branches;
next	;

1.10.6.1
date	96.12.17.17.51.53;	author hope;	state Exp;
branches
	1.10.6.1.1.1;
next	;

1.10.6.1.1.1
date	97.02.24.11.42.34;	author hope;	state Exp;
branches;
next	;

1.10.7.1
date	96.12.18.09.46.12;	author hope;	state Exp;
branches;
next	;

1.10.8.1
date	97.05.12.10.38.41;	author hope;	state Exp;
branches
	1.10.8.1.1.1
	1.10.8.1.2.1
	1.10.8.1.3.1;
next	;

1.10.8.1.1.1
date	97.07.28.18.23.42;	author daveb;	state Exp;
branches
	1.10.8.1.1.1.1.1;
next	;

1.10.8.1.1.1.1.1
date	97.10.07.11.49.25;	author jkbrook;	state Exp;
branches;
next	;

1.10.8.1.2.1
date	97.09.08.17.17.04;	author daveb;	state Exp;
branches;
next	;

1.10.8.1.3.1
date	97.09.09.14.13.12;	author daveb;	state Exp;
branches;
next	;

1.10.9.1
date	97.09.10.19.29.14;	author brucem;	state Exp;
branches;
next	;

1.10.10.1
date	97.09.11.20.59.09;	author daveb;	state Exp;
branches;
next	;

1.10.11.1
date	99.04.01.17.59.33;	author daveb;	state Exp;
branches;
next	;


desc
@Semantic functions for parser
@


1.10
log
@Adding error_id
@
text
@(* actionfunctions.sml the signature *)
(*
$Log: actionfunctions.sml,v $
Revision 1.9  1994/09/15  10:02:08  matthew
Added make_id_value and print_token

Revision 1.8  1993/06/10  10:40:21  matthew
ActionOpts contains Options.options

Revision 1.7  1993/05/17  11:58:16  jont
Added options parameter to get_resolution

Revision 1.6  1993/05/14  17:03:33  jont
Added New Jersey interpretation of weak type variables under option control

Revision 1.5  1993/03/09  11:19:11  matthew
Options & Info changes

Revision 1.4  1993/02/03  17:59:23  matthew
Rationalised substructures.

Revision 1.3  1992/11/05  16:52:29  matthew
Changed Error structure to Info

Revision 1.2  1992/09/04  08:58:02  richard
Installed central error reporting mechanism.

Revision 1.1  1992/08/25  16:58:06  matthew
Initial revision

Copyright (c) 1992 Harlequin Ltd.
*)
require "../basics/token";
require "../basics/absyn";
require "../parser/parserenv";
require "../main/info";
require "../main/options";

require "LRbasics";

signature ACTIONFUNCTIONS =
  sig
    structure Token: TOKEN
    structure Absyn : ABSYN
    structure LRbasics : LRBASICS
    structure PE : PARSERENV
    structure Info : INFO
    structure Options : OPTIONS

    sharing Info.Location = Absyn.Ident.Location
    sharing PE.Ident = Absyn.Ident
    sharing PE.Ident.Symbol = Token.Symbol

    type Parsed_Object
    type ParserBasis

    datatype ActionOpts = OPTS of (Absyn.Ident.Location.T * Info.options * Options.options)

    sharing type ParserBasis = PE.pB

    val do_debug : bool ref

    val dummy_location : Absyn.Ident.Location.T
    val setParserBasis : ParserBasis -> unit
    val getParserBasis : unit -> ParserBasis

    exception ActionError of int
    exception ResolveError of string

    val dummy : Parsed_Object
    val make_id_value : string -> Parsed_Object
    val error_id_value : Parsed_Object

    val print_token : LRbasics.GSymbol * Parsed_Object -> string

    val get_function : int -> (Parsed_Object list * ActionOpts -> Parsed_Object)
    val get_resolution : int * Options.options ->
      (LRbasics.Action * LRbasics.Action * Parsed_Object list * Parsed_Object -> LRbasics.Action)

    type FinalValue
    sharing type FinalValue = Absyn.TopDec

    exception FoundTopDec of (FinalValue * ParserBasis)
    val get_final_value : Parsed_Object -> FinalValue * ParserBasis

    val token_to_parsed_object : bool * Token.Token -> (LRbasics.GSymbol * Parsed_Object)
  end
@


1.10.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.10  1995/03/08  16:27:36  matthew
 * Adding error_id
 *
@


1.10.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.10  1995/03/08  16:27:36  matthew
 * Adding error_id
 *
@


1.10.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.10  1995/03/08  16:27:36  matthew
 * Adding error_id
 *
@


1.10.8.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/08  16:27:36  matthew
 * Adding error_id
 *
@


1.10.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.10.8.1  1997/05/12  10:38:41  hope
 * branched from 1.10
 *
@


1.10.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.10.8.1  1997/05/12  10:38:41  hope
 * branched from 1.10
 *
@


1.10.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.10.8.1  1997/05/12  10:38:41  hope
 * branched from 1.10
 *
@


1.10.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.10.8.1.1.1  1997/07/28  18:23:42  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.10.7.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/08  16:27:36  matthew
 * Adding error_id
 *
@


1.10.6.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/08  16:27:36  matthew
 * Adding error_id
 *
@


1.10.6.1.1.1
log
@branched from 1.10.6.1
@
text
@a3 3
 * Revision 1.10.6.1  1996/12/17  17:51:53  hope
 * branched from 1.10
 *
@


1.10.5.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/08  16:27:36  matthew
 * Adding error_id
 *
@


1.10.4.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/08  16:27:36  matthew
 * Adding error_id
 *
@


1.10.4.1.1.1
log
@branched from 1.10.4.1
@
text
@a3 3
 * Revision 1.10.4.1  1996/11/14  12:54:51  hope
 * branched from 1.10
 *
@


1.10.3.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/08  16:27:36  matthew
 * Adding error_id
 *
@


1.10.2.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/08  16:27:36  matthew
 * Adding error_id
 *
@


1.10.1.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/08  16:27:36  matthew
 * Adding error_id
 *
@


1.9
log
@Added make_id_value and print_token
@
text
@d4 3
d68 1
d72 1
@


1.8
log
@ActionOpts contains Options.options
@
text
@d4 3
d67 4
@


1.8.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.8  1993/06/10  10:40:21  matthew
ActionOpts contains Options.options

@


1.7
log
@Added options parameter to get_resolution
@
text
@d4 3
d51 1
a51 1
    datatype ActionOpts = OPTS of (Absyn.Ident.Location.T * Info.options * Options.print_options)
@


1.6
log
@Added New Jersey interpretation of weak type variables under option control
@
text
@d4 3
d62 2
a63 1
    val get_resolution : int -> (LRbasics.Action * LRbasics.Action * Parsed_Object list * Parsed_Object -> LRbasics.Action)
@


1.5
log
@Options & Info changes
@
text
@d4 3
d67 1
a67 1
    val token_to_parsed_object : Token.Token -> (LRbasics.GSymbol * Parsed_Object)
@


1.4
log
@Rationalised substructures.
@
text
@d4 3
d22 1
d33 1
d35 2
a36 2
    sharing Info.Location = Absyn.Location = PE.Ident.Location
    sharing PE.Ident = Absyn.Datatypes.Ident
d42 1
a42 1
    datatype ActionOpts = OPTS of (Absyn.Location.T * Info.options)
d48 1
a48 1
    val dummy_location : Absyn.Location.T
@


1.3
log
@Changed Error structure to Info
@
text
@d4 3
d30 3
a32 1
    sharing Info.Location = Absyn.Location
d54 2
@


1.2
log
@Installed central error reporting mechanism.
@
text
@d4 3
a13 2
require "../basics/location";
require "../lexer/lexer";
d15 2
a23 1
    structure Lexer : LEXER
d25 1
a25 2
    structure Location : LOCATION
    sharing Location = Absyn.Location
d27 2
d32 2
d38 1
a38 3
    val current_location_ref : Location.T ref
    val tokenstream_ref : Lexer.TokenStream ref
    val dummy_location : Location.T
d45 1
a45 1
    val get_function : int -> (Parsed_Object list -> Parsed_Object)
@


1.1
log
@Initial revision
@
text
@d4 3
d11 1
d23 2
a27 1
    type Marks
a29 1
    sharing type Marks = Absyn.Source_marks
d33 1
a33 1
    val current_marks_ref : Marks ref
d35 1
a35 1
    val dummy_marks : Marks
@
