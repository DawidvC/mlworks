head	1.40;
access;
symbols
	MLW_daveb_inline_1_4_99:1.40.1
	MLWorks_21c0_1999_03_25:1.40
	MLWorks_20c1_1998_08_20:1.40
	MLWorks_20c0_1998_08_04:1.40
	MLWorks_20b2c2_1998_06_19:1.40
	MLWorks_20b2_Windows_1998_06_12:1.40
	MLWorks_20b1c1_1998_05_07:1.40
	MLWorks_20b0_1998_04_07:1.40
	MLWorks_20b0_1998_03_20:1.40
	MLWorks_20m2_1998_02_16:1.37
	MLWorks_20m1_1997_10_23:1.36
	MLWorks_11r1:1.35.1.1.1.1.1
	MLWorks_workspace_97:1.35.3
	MLWorks_dt_wizard:1.35.2
	MLWorks_11c0_1997_09_09:1.35.1.1.1.1
	MLWorks_10r3:1.35.1.1.3
	MLWorks_10r2_551:1.35.1.1.2
	MLWorks_11:1.35.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.35.1.1
	MLWorks_20m0_1997_06_20:1.35
	MLWorks_1_0_r2c2_1997_06_14:1.35.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.35.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.35.1
	MLWorks_BugFix_1997_04_24:1.35
	MLWorks_1_0_r2_Win32_1997_04_11:1.35
	MLWorks_1_0_r2_Unix_1997_04_04:1.35
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.34.3.1.1
	MLWorks_gui_1996_12_18:1.34.4
	MLWorks_1_0_Win32_1996_12_17:1.34.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.34.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.34.1.1
	MLWorks_1_0_Irix_1996_11_28:1.34.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.34.2
	MLWorks_1_0_Unix_1996_11_14:1.34.1
	MLWorks_Open_Beta2_1996_10_11:1.32.2
	MLWorks_License_dev:1.32.1
	MLWorks_1_open_beta_1996_09_13:1.31.1
	MLWorks_Open_Beta_1996_08_22:1.31
	MLWorks_Beta_1996_07_02:1.31
	MLWorks_Beta_1996_06_07:1.31
	MLWorks_Beta_1996_06_06:1.31
	MLWorks_Beta_1996_06_05:1.31
	MLWorks_Beta_1996_06_03:1.31
	MLWorks_Beta_1996_05_31:1.31
	MLWorks_Beta_1996_05_30:1.31
	ML_beta_release_12/08/94:1.15
	ML_beta_release_03/08/94:1.15
	ML_revised_beta_release_25/05/94:1.14
	ML_final_beta_release_02/03/94:1.14
	mlworks-28-01-1994:1.14
	Release:1.13
	mlworks-beta-01-09-1993:1.13
	MLWorks-1-0-4-29/01/1993:1.4
	MLWorks-1-0-3-21/12/1992:1.4
	MLWorks-1-0-2-15/12/1992:1.3
	MLWorks-1-0-1-04/12/1992:1.3;
locks; strict;
comment	@ * @;


1.40
date	98.02.19.16.29.29;	author mitchell;	state Exp;
branches
	1.40.1.1;
next	1.39;

1.39
date	98.02.19.14.43.04;	author jont;	state Exp;
branches;
next	1.38;

1.38
date	98.02.18.10.01.26;	author mitchell;	state Exp;
branches;
next	1.37;

1.37
date	98.02.05.15.56.39;	author jont;	state Exp;
branches;
next	1.36;

1.36
date	97.09.18.16.01.40;	author brucem;	state Exp;
branches;
next	1.35;

1.35
date	96.11.28.14.12.02;	author andreww;	state Exp;
branches
	1.35.1.1
	1.35.2.1
	1.35.3.1;
next	1.34;

1.34
date	96.10.30.19.08.26;	author io;	state Exp;
branches
	1.34.1.1
	1.34.2.1
	1.34.3.1
	1.34.4.1;
next	1.33;

1.33
date	96.10.29.12.58.12;	author andreww;	state Exp;
branches;
next	1.32;

1.32
date	96.09.20.14.49.30;	author andreww;	state Exp;
branches
	1.32.1.1
	1.32.2.1;
next	1.31;

1.31
date	96.05.16.12.09.49;	author stephenb;	state Exp;
branches
	1.31.1.1;
next	1.30;

1.30
date	96.05.07.10.32.33;	author jont;	state Exp;
branches;
next	1.29;

1.29
date	96.04.30.15.03.32;	author jont;	state Exp;
branches;
next	1.28;

1.28
date	96.04.01.09.51.32;	author matthew;	state Exp;
branches;
next	1.27;

1.27
date	96.03.26.10.49.19;	author matthew;	state Exp;
branches;
next	1.26;

1.26
date	96.03.15.12.19.10;	author matthew;	state Exp;
branches;
next	1.25;

1.25
date	96.02.02.14.20.38;	author matthew;	state Exp;
branches;
next	1.24;

1.24
date	95.09.08.10.56.24;	author matthew;	state Exp;
branches;
next	1.23;

1.23
date	95.07.28.15.32.46;	author matthew;	state Exp;
branches;
next	1.22;

1.22
date	95.07.28.14.26.57;	author matthew;	state Exp;
branches;
next	1.21;

1.21
date	95.07.24.16.08.24;	author jont;	state Exp;
branches;
next	1.20;

1.20
date	95.07.19.11.55.40;	author jont;	state Exp;
branches;
next	1.19;

1.19
date	95.04.28.13.20.48;	author matthew;	state Exp;
branches;
next	1.18;

1.18
date	95.03.14.12.01.57;	author matthew;	state Exp;
branches;
next	1.17;

1.17
date	95.02.02.12.47.09;	author matthew;	state Exp;
branches;
next	1.16;

1.16
date	94.08.25.11.06.22;	author matthew;	state Exp;
branches;
next	1.15;

1.15
date	94.06.23.15.15.34;	author matthew;	state Exp;
branches;
next	1.14;

1.14
date	93.11.09.11.44.54;	author daveb;	state Exp;
branches;
next	1.13;

1.13
date	93.08.27.14.23.24;	author matthew;	state Exp;
branches
	1.13.1.1;
next	1.12;

1.12
date	93.08.04.10.26.21;	author daveb;	state Exp;
branches;
next	1.11;

1.11
date	93.06.15.12.10.04;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	93.06.09.16.39.01;	author matthew;	state Exp;
branches;
next	1.9;

1.9
date	93.05.27.16.56.44;	author matthew;	state Exp;
branches;
next	1.8;

1.8
date	93.05.20.13.28.22;	author matthew;	state Exp;
branches;
next	1.7;

1.7
date	93.05.18.18.03.35;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	93.04.05.13.25.19;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	93.02.18.10.59.28;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	92.12.21.13.39.19;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	92.11.25.16.32.57;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	92.09.09.13.42.47;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	92.08.25.16.30.08;	author matthew;	state Exp;
branches;
next	;

1.13.1.1
date	93.08.27.14.23.24;	author jont;	state Exp;
branches;
next	1.13.1.2;

1.13.1.2
date	93.10.22.11.31.17;	author daveb;	state Exp;
branches;
next	;

1.31.1.1
date	96.09.13.11.20.29;	author hope;	state Exp;
branches;
next	;

1.32.1.1
date	96.10.07.16.10.25;	author hope;	state Exp;
branches;
next	;

1.32.2.1
date	96.10.17.11.28.57;	author hope;	state Exp;
branches;
next	;

1.34.1.1
date	96.11.14.12.54.38;	author hope;	state Exp;
branches
	1.34.1.1.1.1;
next	;

1.34.1.1.1.1
date	96.11.28.15.05.26;	author hope;	state Exp;
branches;
next	;

1.34.2.1
date	96.11.22.18.13.16;	author hope;	state Exp;
branches;
next	;

1.34.3.1
date	96.12.17.17.51.44;	author hope;	state Exp;
branches
	1.34.3.1.1.1;
next	;

1.34.3.1.1.1
date	97.02.24.11.42.24;	author hope;	state Exp;
branches;
next	;

1.34.4.1
date	96.12.18.09.46.03;	author hope;	state Exp;
branches;
next	;

1.35.1.1
date	97.05.12.10.38.33;	author hope;	state Exp;
branches
	1.35.1.1.1.1
	1.35.1.1.2.1
	1.35.1.1.3.1;
next	;

1.35.1.1.1.1
date	97.07.28.18.23.32;	author daveb;	state Exp;
branches
	1.35.1.1.1.1.1.1;
next	;

1.35.1.1.1.1.1.1
date	97.10.07.11.49.16;	author jkbrook;	state Exp;
branches;
next	;

1.35.1.1.2.1
date	97.09.08.17.16.56;	author daveb;	state Exp;
branches;
next	;

1.35.1.1.3.1
date	97.09.09.14.13.02;	author daveb;	state Exp;
branches;
next	;

1.35.2.1
date	97.09.10.19.29.05;	author brucem;	state Exp;
branches;
next	;

1.35.3.1
date	97.09.11.20.58.59;	author daveb;	state Exp;
branches;
next	;

1.40.1.1
date	99.04.01.17.59.28;	author daveb;	state Exp;
branches;
next	;


desc
@Parsing table functor.
@


1.40
log
@[Bug #30349]
Fix to avoid non-unit sequence warnings
@
text
@(* _LRbasics.sml the functor *)
(*
$Log: _LRbasics.sml,v $
 * Revision 1.39  1998/02/19  14:43:04  jont
 * [Bug #30341]
 * Fix where type ... and syntax
 *
 * Revision 1.38  1998/02/18  10:01:26  mitchell
 * [Bug #30341]
 * Correct derived form of where in grammar
 *
 * Revision 1.37  1998/02/05  15:56:39  jont
 * [Bug #30090]
 * Modify to use TextIO instead of MLWorks.IO
 *
 * Revision 1.36  1997/09/18  16:01:40  brucem
 * [Bug #30153]
 * Remove references to Old.
 *
 * Revision 1.35  1996/11/28  14:12:02  andreww
 * [Bug #1578]
 * constructors cannot be rebound.
 * (updating).
 *
 * Revision 1.34  1996/10/30  19:08:26  io
 * [Bug #1614]
 * removing toplevel String.
 *
 * Revision 1.33  1996/10/29  12:58:12  andreww
 * [Bug #1708]
 * altering syntax of datatype replication.
 *
 * Revision 1.32  1996/09/20  14:49:30  andreww
 * [Bug #1577]
 * Adding datatype replication to the grammar
 *
 * Revision 1.31  1996/05/16  12:09:49  stephenb
 * Update wrt MLWorks.OS.arguments -> MLWorks.arguments
 *
 * Revision 1.30  1996/05/07  10:32:33  jont
 * Array moving to MLWorks.Array
 *
 * Revision 1.29  1996/04/30  15:03:32  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
 * Revision 1.28  1996/04/01  09:51:32  matthew
 * Updating
 *
 * Revision 1.27  1996/03/26  10:49:19  matthew
 * Updating for new language
 *
 * Revision 1.26  1996/03/15  12:19:10  matthew
 * hyphenizing command line arguments
 *
 * Revision 1.25  1996/02/02  14:20:38  matthew
 * Fixing printing of majick brackets
 *
Revision 1.24  1995/09/08  10:56:24  matthew
Improving error message for fun nil x = x;

Revision 1.23  1995/07/28  15:32:46  matthew
Removing mention of MAGICCLOSE

Revision 1.22  1995/07/28  14:26:57  matthew
Disallowing = as a strid etc.

Revision 1.21  1995/07/24  16:08:24  jont
Adding literal words

Revision 1.20  1995/07/19  11:55:40  jont
Adding CHAR to grammar

Revision 1.19  1995/04/28  13:20:48  matthew
Changing use of cast

Revision 1.18  1995/03/14  12:01:57  matthew
Adding get_all_actions

Revision 1.17  1995/02/02  12:47:09  matthew
Fixing reading of parser tables

Revision 1.16  1994/08/25  11:06:22  matthew
Improvement to parsing table representation
Unsafe array operations for binary search

Revision 1.15  1994/06/23  15:15:34  matthew
Changed tables to use smaller assoc lists.

Revision 1.14  1993/11/09  11:44:54  daveb
Incorporated bug fix.

Revision 1.13  1993/08/27  14:23:24  matthew
Improved message for undefined constructors in patterns
,

Revision 1.12  1993/08/04  10:26:21  daveb
New version.

Revision 1.11  1993/06/15  12:10:04  matthew
Changed to allow no semicolons between topdecs

Revision 1.10  1993/06/09  16:39:01  matthew
Extended grammar for NJ compatibility

Revision 1.9  1993/05/27  16:56:44  matthew
 Added ABSTRACTION to token_string function

Revision 1.8  1993/05/20  13:28:22  matthew
Added code for abstractions.

Revision 1.7  1993/05/18  18:03:35  jont
Removed integer parameter

Revision 1.6  1993/04/05  13:25:19  daveb
Added print representations for MAGIC brackets.

Revision 1.5  1993/02/18  10:59:28  matthew
Changes for dynamic and coerce syntax

Revision 1.4  1992/12/21  13:39:19  daveb
Chnaged references to Array to ExtendedArray, where appropriate.

Revision 1.3  1992/11/25  16:32:57  matthew
Fixed parsing bugs
with rec and abstype

Revision 1.2  1992/09/09  13:42:47  matthew
More efficient representation of parsing tables.`

Revision 1.1  1992/08/25  16:30:08  matthew
Initial revision

Copyright (c) 1992 Harlequin Ltd.
*)

(* WARNING: this file uses unsafe array operations *)

require "LRbasics";
require "../utils/crash";
require "../utils/lists";
require "../basis/text_io";
require "../basis/string";

functor LRbasics (val table_dir : string
                  structure Crash : CRASH
                  structure Lists : LISTS
		  structure TextIO : TEXT_IO
		  structure String : STRING where type string = string where type char = char
                    ) : LRBASICS =
  struct

(*    structure Option = MLWorks.Option 
	redundant, since Option is now top-level *)



    fun find_OS_arg s =
      let
        fun assoc [] = NONE
          | assoc [_] = NONE
          | assoc (a::b::rest) = 
            if a = s then SOME b else assoc (b::rest)
      in
        assoc (MLWorks.arguments ())
      end

    val table_dir =
      case find_OS_arg "-parser-tables" of
        NONE => table_dir
      | SOME dir => dir

    val _ = print("Loading parsing tables from: " ^ table_dir ^ "\n")
    val actionfile = table_dir ^ "actions.data"
    val gotofile = table_dir ^ "gotos.data"

(* set up bindings for the resolution function indices *)
val ifinfixinput = 0
and ifvarstack = 1 
and ifstarstack = 2 
and ifstarinput = 3 
and ifleftassoc = 4

(* and their arities *)
val ifinfixinputarity = 0
and ifvarstackarity = 1
and ifstarstackarity = 1 
and ifstarinputarity = 0 
and ifleftassocarity = 2

datatype GSymbol =
   EOF
(* Do not delete this line *)
 | ABSCOLON
 | ABSDATBIND
 | ABSTRACTION
 | ABSTYPE
 | AND
 | ANDALSO
 | APPEXP
 | ARROW
 | AS
 | ATEXP
 | ATPAT
 | ATPAT1
 | ATPATLIST
 | BIN_ATPAT
 | BRA
 | CASE
 | CHAR
 | COLON
 | COMMA
 | CONBIND
 | CONBIND1
 | CONDEF
 | CONDESC
 | CONDESC1
 | DARROW
 | DATAHEADER
 | DATATYPE
 | DATBIND
 | DATBIND1
 | DATDESC
 | DATDESC1
 | DATREPL
 | DATREPLDESC
 | DEC
 | DEC0
 | DEC1
 | DECSEP
 | DO
 | ELLIPSIS
 | ELSE
 | END
 | EQTYPE
 | EQUAL
 | EXBIND
 | EXBIND1
 | EXCEPTION
 | EXCONDEF
 | EXDESC
 | EXDESC1
 | EXP
 | EXPLIST
 | EXPLIST2
 | EXPROW
 | EXPSEQ
 | EXPSEQ2
 | FN
 | FUN
 | FUNBIND
 | FUNBIND1
 | FUNCTOR
 | FUNDEC1
 | FUNDEC1PLUS
 | FUNID
 | FUNIDBIND
 | FVAL
 | FVALBIND
 | FVALLIST
 | HANDLE
 | HASH
 | IF
 | IN
 | INCLUDE
 | INFEXP
 | INFIX
 | INFIXR
 | INFVAR
 | INTEGER
 | KET
 | LAB
 | LBRACE
 | LET
 | LOCAL
 | LONGID
 | LONGIDLIST
 | LONGSTRID
 | LONGSTRIDEQLIST
 | LONGSTRIDLIST
 | LONGTYCON
 | LONGTYCONEQLIST
 | LONGTYPBIND
 | LONGTYPBIND1
 | LONGVAR
 | LPAR
 | MAGICOPEN
 | MATCH
 | MRULE
 | NONFIX
 | OF
 | OP
 | OPCONDEF
 | OPEN
 | OPEXCONDEF
 | OPLONGVAR
 | OPTOFTYPE
 | OPTTYPE
 | OPVARDEF
 | ORELSE
 | PAT
 | PATLIST2
 | PATROW
 | PATROW1
 | PATVAR
 | PROGRAM
 | RAISE
 | RBRACE
 | REAL
 | REC
 | REQUIRE
 | RPAR
 | SCON
 | SEMICOLON
 | SHAREQ
 | SHAREQ1
 | SHARING
 | SIG
 | SIGBIND
 | SIGBINDER
 | SIGDEC1
 | SIGDEC1PLUS
 | SIGEXP
 | SIGID
 | SIGIDLIST
 | SIGNATURE
 | SIG_START
 | SPEC
 | SPEC1
 | STAR
 | START
 | STARTFUNBIND1
 | STARTFUNBIND2
 | START_LET
 | START_LOCAL
 | STRBIND
 | STRBIND1
 | STRDEC
 | STRDEC0
 | STRDEC1
 | STRDEC1PLUS
 | STRDEC1PLUS0
 | STRDESC
 | STRDESC1
 | STREXP
 | STRID
 | STRING
 | STRUCT
 | STRUCTURE
 | STRUCT_START
 | SYM
 | SYMID
 | SYMLIST
 | THEN
 | TOPDEC
 | TOPDEC1
 | TY
 | TYCON
 | TYLIST
 | TYPBIND
 | TYPBIND1
 | TYPDESC
 | TYPDESC1
 | TYPE
 | TYROW
 | TYSEQ
 | TYTUPLE
 | TYVAR
 | TYVARLIST
 | TYVARSEQ
 | TYVARSEQ1
 | UNDERBAR
 | VAL
 | VALBIND
 | VALBIND1
 | VALDESC
 | VAR
 | VARDEF
 | VBAR
 | WHERE
 | WHILE
 | WITH
 | WITHTYPE
 | WORD
(* Do not delete this line *)

datatype Action =
      Accept
    | Shift
    | Reduce of int * GSymbol * int
    | Funcall of int * int * Action * Action
    | Resolve of Action list
    | NoAction

val action_array = MLWorks.Internal.Array.arrayoflist [
(* Do not delete this line *)
Reduce(0,DECSEP,307),
  Shift,
  Reduce(1,START_LET,16),
  Reduce(1,SCON,173),
  Reduce(1,STRDEC1PLUS,213),
  Reduce(1,OPLONGVAR,178),
  Reduce(1,LONGVAR,177),
  Reduce(1,SCON,170),
  Reduce(1,SCON,172),
  Reduce(1,INFEXP,29),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,INFEXP,29),Shift),
  Reduce(0,EXPLIST,19),
  Reduce(1,PROGRAM,306),
  Reduce(1,TOPDEC,299),
  Reduce(1,TOPDEC,297),
  Reduce(1,START_LOCAL,71),
  Reduce(1,STRDEC1,217),
  Reduce(1,ATEXP,1),
  Reduce(1,ATEXP,2),
  Reduce(1,TOPDEC,300),
  Reduce(0,TYVARSEQ,96),
  Reduce(1,APPEXP,27),
  Reduce(1,SIGDEC1PLUS,231),
  Accept,
  Reduce(1,SCON,171),
  Reduce(1,ATEXP,3),
  Reduce(1,TOPDEC,298),
  Reduce(1,EXP,33),
  Reduce(1,SCON,174),
  Reduce(1,FUNDEC1PLUS,285),
  Reduce(1,STRDEC1PLUS,214),
  Reduce(1,TOPDEC1,302),
  Reduce(1,LAB,175),
  Reduce(2,ATEXP,7),
  Reduce(1,LAB,176),
  Reduce(1,EXPLIST,20),
  Reduce(1,EXPLIST,21),
  Reduce(3,EXPLIST2,17),
  Reduce(1,DEC,47),
  Reduce(2,DECSEP,46),
  Reduce(1,SYM,182),
  Reduce(2,DEC1,68),
  Reduce(1,SYM,183),
  Reduce(1,SYMLIST,168),
  Reduce(3,DEC1,69),
  Reduce(2,SYMLIST,169),
  Reduce(1,TYVARSEQ1,98),
  Reduce(1,DATBIND,103),
  Reduce(1,ABSDATBIND,62),
  Reduce(1,TYVARSEQ,97),
  Reduce(1,TYPBIND,90),
  Reduce(1,TYVARLIST,100),
  Reduce(3,TYVARSEQ1,99),
  Reduce(3,TYVARLIST,101),
  Reduce(1,TYCON,199),
  Reduce(1,TY,146),
  Reduce(1,LONGTYCON,180),
  Reduce(1,TY,152),
  Reduce(1,TY,151),
  Reduce(4,TYPBIND1,92),
  Reduce(2,TY,149),
  Reduce(1,STAR,200),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,200),Reduce(1,LONGTYCON,180)),
  Reduce(2,TY,150),
  Reduce(3,TYTUPLE,159),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,159),Shift),
  Reduce(3,TY,153),
  Reduce(3,TYTUPLE,158),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,158),Shift),
  Reduce(1,TYLIST,156),
  Reduce(3,TY,154),
  Reduce(3,TYLIST,157),
  Reduce(5,TYSEQ,155),
  Reduce(2,TY,148),
  Reduce(3,TYROW,160),
  Reduce(3,TY,147),
  Reduce(5,TYROW,161),
  Reduce(3,TYPBIND,91),
  Reduce(7,DEC1,61),
  Reduce(5,DEC1,60),
  Reduce(3,DATBIND,104),
  Reduce(1,CONDEF,193),
  Reduce(0,OPTOFTYPE,114),
  Reduce(1,OPCONDEF,194),
  Reduce(1,CONBIND,107),
  Reduce(2,DATBIND1,105),
  Reduce(2,OPCONDEF,195),
  Reduce(3,CONBIND,108),
  Reduce(2,CONBIND1,109),
  Reduce(2,OPTOFTYPE,115),
  Reduce(3,DATAHEADER,106),
  Reduce(2,DEC1,57),
  Reduce(2,DEC1,58),
  Reduce(4,DEC1,59),
  Reduce(3,DATREPL,102),
  Reduce(1,VARDEF,189),
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,189),Reduce(1,LONGVAR,177)),
  Reduce(2,DEC1,53),
  Reduce(1,PAT,140),
  Reduce(1,VALBIND,72),
  Reduce(1,ATPAT,116),
  Reduce(1,OPVARDEF,190),
  Reduce(1,ATPAT,117),
  Reduce(0,OPTTYPE,88),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,118),Shift),
  Resolve[Reduce(1,ATPAT,118),Shift],
  Reduce(1,ATPAT,118),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,119),Shift),
  Reduce(1,ATPAT,119),
  Reduce(2,PAT,141),
  Reduce(2,ATPAT,126),
  Reduce(2,OPLONGVAR,179),
  Reduce(2,OPVARDEF,191),
  Reduce(3,ATPAT,129),
  Reduce(3,PATLIST2,134),
  Reduce(2,PAT,142),
  Reduce(2,OPTTYPE,89),
  Reduce(2,ATPAT,124),
  Reduce(3,ATPAT,125),
  Reduce(1,VAR,188),
  Reduce(3,ATPAT,128),
  Reduce(3,PAT,144),
  Reduce(3,PAT,143),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,143),Shift),
  Reduce(1,SYMID,184),
  Reduce(1,PATROW,135),
  Reduce(2,ATPAT,123),
  Reduce(3,ATPAT,122),
  Reduce(2,PATROW1,138),
  Reduce(4,PATROW1,139),
  Reduce(3,PATROW1,137),
  Reduce(3,ATPAT,120),
  Reduce(3,PATROW,136),
  Reduce(5,ATPAT,121),
  Reduce(3,PATLIST2,133),
  Reduce(4,PAT,145),
  Reduce(3,ATPAT,127),
  Reduce(2,VALBIND,75),
  Reduce(3,VALBIND1,76),
  Reduce(2,ATEXP,4),
  Reduce(2,EXP,38),
  Reduce(2,APPEXP,28),
  Reduce(2,ATEXP,10),
  Reduce(1,EXPSEQ,23),
  Reduce(3,ATEXP,11),
  Reduce(3,EXP,35),
  Reduce(3,EXP,34),
  Reduce(1,MATCH,44),
  Reduce(3,EXP,37),
  Reduce(3,MATCH,43),
  Reduce(3,MRULE,45),
  Reduce(3,EXP,36),
  Reduce(4,EXP,41),
  Reduce(1,INFVAR,31),
  Reduce(1,INFVAR,32),
  Reduce(3,INFEXP,30),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,INFEXP,30),Shift),
  Reduce(2,ATEXP,6),
  Reduce(3,EXPROW,25),
  Reduce(2,EXP,42),
  Reduce(3,ATEXP,5),
  Reduce(5,EXPROW,26),
  Reduce(4,EXP,40),
  Reduce(3,ATEXP,15),
  Reduce(3,EXPLIST2,18),
  Reduce(3,ATEXP,13),
  Reduce(3,EXPSEQ2,24),
  Reduce(3,EXPSEQ,22),
  Reduce(6,EXP,39),
  Reduce(3,VALBIND,73),
  Reduce(4,VALBIND,74),
  Reduce(3,DEC1,52),
  Reduce(1,ATPAT1,132),
  Reduce(1,FVALLIST,79),
  Reduce(2,DEC1,55),
  Reduce(1,FVALBIND,77),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,131),Shift),
  Reduce(1,ATPATLIST,162),
  Reduce(2,ATPATLIST,163),
  Reduce(5,FVAL,87),
  Reduce(4,FVAL,86),
  Reduce(5,FVAL,84),
  Reduce(5,FVAL,85),
  Reduce(7,FVAL,83),
  Reduce(6,FVAL,82),
  Reduce(5,FVAL,81),
  Reduce(3,FVALLIST,80),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,140)),
  Reduce(1,PATVAR,192),
  Reduce(5,BIN_ATPAT,130),
  Reduce(3,FVALBIND,78),
  Reduce(3,DEC1,54),
  Reduce(1,LONGIDLIST,165),
  Reduce(2,DEC1,65),
  Reduce(2,LONGIDLIST,164),
  Reduce(1,EXBIND,110),
  Reduce(1,EXCONDEF,196),
  Reduce(1,OPEXCONDEF,197),
  Reduce(2,DEC1,63),
  Reduce(3,EXBIND,111),
  Reduce(2,OPEXCONDEF,198),
  Reduce(2,EXBIND1,112),
  Reduce(3,EXBIND1,113),
  Reduce(2,DEC1,66),
  Reduce(3,DEC1,67),
  Reduce(3,DEC,49),
  Reduce(3,DEC0,51),
  Reduce(2,DEC1,70),
  Reduce(5,DEC1,64),
  Reduce(2,DEC1,56),
  Reduce(3,DEC,48),
  Reduce(3,DEC0,50),
  Reduce(5,ATEXP,14),
  Reduce(3,ATEXP,12),
  Reduce(3,ATEXP,8),
  Reduce(6,ATEXP,9),
  Reduce(2,STRDEC1PLUS0,216),
  Reduce(2,STRDEC1,219),
  Reduce(1,STRBIND,223),
  Reduce(1,STRID,187),
  Reduce(1,SIGBINDER,222),
  Reduce(1,SIGBINDER,221),
  Reduce(1,STREXP,202),
  Reduce(1,STRUCT_START,207),
  Reduce(1,FUNID,185),
  Reduce(3,STRBIND1,226),
  Reduce(1,STRDEC,208),
  Reduce(2,STRDEC1,218),
  Reduce(3,STRBIND,224),
  Reduce(3,STRDEC,210),
  Reduce(3,STRDEC0,212),
  Reduce(3,STRDEC,209),
  Reduce(3,STRDEC0,211),
  Reduce(5,STRDEC1,220),
  Reduce(5,STREXP,205),
  Reduce(1,SIG_START,230),
  Reduce(1,SIGID,186),
  Reduce(1,SIGEXP,228),
  Reduce(0,SPEC,237),
  Reduce(3,STREXP,206),
  Reduce(4,SIGEXP,229),
  Reduce(4,LONGTYPBIND1,95),
  Reduce(1,SPEC1,240),
  Reduce(2,SPEC,238),
  Reduce(3,SIGEXP,227),
  Reduce(2,SPEC1,254),
  Reduce(3,SPEC1,255),
  Reduce(2,SPEC1,250),
  Reduce(1,SIGIDLIST,256),
  Reduce(2,SPEC1,251),
  Reduce(2,SIGIDLIST,257),
  Reduce(1,STRDESC,274),
  Reduce(2,SPEC1,247),
  Reduce(3,STRDESC,275),
  Reduce(3,STRDESC1,276),
  Reduce(1,DATDESC,265),
  Reduce(2,SPEC1,244),
  Reduce(2,SPEC1,245),
  Reduce(3,DATDESC,266),
  Reduce(2,DATDESC1,267),
  Reduce(1,CONDESC,268),
  Reduce(2,CONDESC1,270),
  Reduce(3,CONDESC,269),
  Reduce(3,DATREPLDESC,264),
  Reduce(2,SPEC1,241),
  Reduce(3,VALDESC,258),
  Reduce(5,VALDESC,259),
  Reduce(2,SPEC1,243),
  Reduce(1,TYPDESC,260),
  Reduce(3,TYPDESC,261),
  Reduce(2,TYPDESC1,262),
  Reduce(4,TYPDESC1,263),
  Reduce(2,SPEC1,249),
  Reduce(1,LONGSTRID,181),
  Reduce(1,SHAREQ1,279),
  Reduce(3,SPEC,239),
  Reduce(1,SHAREQ,277),
  Reduce(3,LONGSTRIDEQLIST,281),
  Reduce(3,SHAREQ,278),
  Reduce(3,LONGSTRIDEQLIST,282),
  Reduce(2,SHAREQ1,280),
  Reduce(3,LONGTYCONEQLIST,283),
  Reduce(3,LONGTYCONEQLIST,284),
  Reduce(1,EXDESC,271),
  Reduce(2,SPEC1,246),
  Reduce(3,EXDESC,272),
  Reduce(2,EXDESC1,273),
  Reduce(2,SPEC1,252),
  Reduce(3,SPEC1,253),
  Reduce(5,SPEC1,248),
  Reduce(2,SPEC1,242),
  Reduce(4,STREXP,203),
  Reduce(3,STREXP,201),
  Reduce(4,STREXP,204),
  Reduce(5,STRBIND1,225),
  Reduce(2,SIGDEC1PLUS,232),
  Reduce(2,SIGDEC1,233),
  Reduce(5,SIGBIND,235),
  Reduce(4,SIGBIND,236),
  Reduce(3,SIGBIND,234),
  Reduce(2,TOPDEC,301),
  Reduce(2,FUNDEC1,287),
  Reduce(1,FUNBIND,288),
  Reduce(1,FUNIDBIND,296),
  Reduce(3,FUNBIND1,291),
  Reduce(5,FUNBIND1,290),
  Reduce(3,FUNBIND1,293),
  Reduce(5,FUNBIND1,292),
  Reduce(4,STARTFUNBIND2,295),
  Reduce(6,STARTFUNBIND1,294),
  Reduce(3,FUNBIND,289),
  Reduce(2,PROGRAM,305),
  Reduce(3,PROGRAM,303),
  Reduce(2,FUNDEC1PLUS,286),
  Reduce(2,PROGRAM,304),
  Reduce(2,STRDEC1PLUS0,215)
(* Do not delete this line *)
]

val symbol_array = MLWorks.Internal.Array.arrayoflist[
(* Do not delete this line *)
ABSCOLON, 
  ABSDATBIND, 
  ABSTRACTION, 
  ABSTYPE, 
  AND, 
  ANDALSO, 
  APPEXP, 
  ARROW, 
  AS, 
  ATEXP, 
  ATPAT, 
  ATPAT1, 
  ATPATLIST, 
  BIN_ATPAT, 
  BRA, 
  CASE, 
  CHAR, 
  COLON, 
  COMMA, 
  CONBIND, 
  CONBIND1, 
  CONDEF, 
  CONDESC, 
  CONDESC1, 
  DARROW, 
  DATAHEADER, 
  DATATYPE, 
  DATBIND, 
  DATBIND1, 
  DATDESC, 
  DATDESC1, 
  DATREPL, 
  DATREPLDESC, 
  DEC, 
  DEC0, 
  DEC1, 
  DECSEP, 
  DO, 
  ELLIPSIS, 
  ELSE, 
  END, 
  EQTYPE, 
  EQUAL, 
  EXBIND, 
  EXBIND1, 
  EXCEPTION, 
  EXCONDEF, 
  EXDESC, 
  EXDESC1, 
  EXP, 
  EXPLIST, 
  EXPLIST2, 
  EXPROW, 
  EXPSEQ, 
  EXPSEQ2, 
  FN, 
  FUN, 
  FUNBIND, 
  FUNBIND1, 
  FUNCTOR, 
  FUNDEC1, 
  FUNDEC1PLUS, 
  FUNID, 
  FUNIDBIND, 
  FVAL, 
  FVALBIND, 
  FVALLIST, 
  HANDLE, 
  HASH, 
  IF, 
  IN, 
  INCLUDE, 
  INFEXP, 
  INFIX, 
  INFIXR, 
  INFVAR, 
  INTEGER, 
  KET, 
  LAB, 
  LBRACE, 
  LET, 
  LOCAL, 
  LONGID, 
  LONGIDLIST, 
  LONGSTRID, 
  LONGSTRIDEQLIST, 
  LONGSTRIDLIST, 
  LONGTYCON, 
  LONGTYCONEQLIST, 
  LONGTYPBIND, 
  LONGTYPBIND1, 
  LONGVAR, 
  LPAR, 
  MAGICOPEN, 
  MATCH, 
  MRULE, 
  NONFIX, 
  OF, 
  OP, 
  OPCONDEF, 
  OPEN, 
  OPEXCONDEF, 
  OPLONGVAR, 
  OPTOFTYPE, 
  OPTTYPE, 
  OPVARDEF, 
  ORELSE, 
  PAT, 
  PATLIST2, 
  PATROW, 
  PATROW1, 
  PATVAR, 
  PROGRAM, 
  RAISE, 
  RBRACE, 
  REAL, 
  REC, 
  REQUIRE, 
  RPAR, 
  SCON, 
  SEMICOLON, 
  SHAREQ, 
  SHAREQ1, 
  SHARING, 
  SIG, 
  SIGBIND, 
  SIGBINDER, 
  SIGDEC1, 
  SIGDEC1PLUS, 
  SIGEXP, 
  SIGID, 
  SIGIDLIST, 
  SIGNATURE, 
  SIG_START, 
  SPEC, 
  SPEC1, 
  STAR, 
  START, 
  STARTFUNBIND1, 
  STARTFUNBIND2, 
  START_LET, 
  START_LOCAL, 
  STRBIND, 
  STRBIND1, 
  STRDEC, 
  STRDEC0, 
  STRDEC1, 
  STRDEC1PLUS, 
  STRDEC1PLUS0, 
  STRDESC, 
  STRDESC1, 
  STREXP, 
  STRID, 
  STRING, 
  STRUCT, 
  STRUCTURE, 
  STRUCT_START, 
  SYM, 
  SYMID, 
  SYMLIST, 
  THEN, 
  TOPDEC, 
  TOPDEC1, 
  TY, 
  TYCON, 
  TYLIST, 
  TYPBIND, 
  TYPBIND1, 
  TYPDESC, 
  TYPDESC1, 
  TYPE, 
  TYROW, 
  TYSEQ, 
  TYTUPLE, 
  TYVAR, 
  TYVARLIST, 
  TYVARSEQ, 
  TYVARSEQ1, 
  UNDERBAR, 
  VAL, 
  VALBIND, 
  VALBIND1, 
  VALDESC, 
  VAR, 
  VARDEF, 
  VBAR, 
  WHERE, 
  WHILE, 
  WITH, 
  WITHTYPE, 
  WORD
(* Do not delete this line *)
 ]

fun token_string t =
  case t of
    EOF => "EOF"
  | ABSCOLON => ":>"
  | ABSTYPE => "abstype"
  | AND => "and"
  | ANDALSO => "andalso"
  | ARROW => "->"
  | AS => "as"
  | BRA => "["
  | CASE => "case"
  | CHAR => "CHAR"
  | COLON => ":"
  | COMMA => ","
  | DARROW => "=>"
  | DATATYPE => "datatype"
  | DO => "do"
  | ELLIPSIS => "..."
  | ELSE => "else"
  | END => "end"
  | EQTYPE => "eqtype"
  | EQUAL => "="
  | EXCEPTION => "exception"
  | FN => "fn"
  | FUN => "fun"
  | FUNCTOR => "functor"
  | HANDLE => "handle"
  | HASH => "#"
  | IF => "if"
  | IN => "in"
  | INCLUDE => "include"
  | INFIX => "infix"
  | INFIXR => "infixr"
  | INTEGER => "INTEGER"
  | KET => "]"
  | LBRACE => "{"
  | LET => "let"
  | LOCAL => "local"
  | LONGID => "ID"
  | LPAR => "("
  | NONFIX => "nonfix"
  | OF => "of"
  | OP => "op"
  | OPEN => "open"
  | ORELSE => "orelse"
  | RAISE => "raise"
  | RBRACE => "}"
  | REAL => "REAL"
  | REC => "rec"
  | REQUIRE => "require"
  | RPAR => ")"
  | SEMICOLON => ";"
  | SHARING => "sharing"
  | SIG => "sig"
  | SIGNATURE => "signature"
  | STRING => "STRING"
  | STRUCT => "struct"
  | STRUCTURE => "structure"
  | THEN => "then"
  | TYPE => "type"
  | TYVAR => "TYVAR"
  | UNDERBAR => "_"
  | VAL => "val"
  | VBAR => "|"
  | WHERE => "where"
  | WHILE => "while"
  | WITH => "with"
  | WORD => "WORD"
  | WITHTYPE => "withtype"
  | MAGICOPEN => "#("
  | ABSTRACTION => "abstraction"
  | _ => "*Non-terminal*"

local

fun digit_char (char:int):bool =
  ord #"0" <= char  andalso char <= ord #"9"

fun digit_val char = char - ord #"0"

fun parse_integers chars =
  let
    val string = String.implode chars
    val len = size string
    fun reverse l =
      let
        fun rev_aux([],l) = l
          | rev_aux(a::b,l) = rev_aux(b,a::l)
      in
        rev_aux(l,[])
      end
    fun parse_integers1 (index,acc) =
      if index >= len
        then
          reverse acc
      else
        let val char = MLWorks.String.ordof (string, index)
        in
          if char = ord #"-"
            then
              parse_integers2 (index+1,acc,~1,0)
          else
            if digit_char char
              then
                parse_integers2 (index+1,acc,1,(digit_val char))
            else
              parse_integers1 (index+1,acc)
        end
    and parse_integers2 (index,acc,neg,cum) =
      if index >= (size string)
        then
          reverse (neg * cum :: acc)
      else
        let val char = MLWorks.String.ordof (string, index)
        in
          if digit_char char
            then
              parse_integers2 (index+1,acc,neg,(10 * cum) + (digit_val char))
            else
              parse_integers1 (index+1,neg * cum :: acc)
        end
  in
    parse_integers1 (0,[])
  end

fun parse_table_row row =
  let
    val integers = parse_integers row
    exception Do_one
    fun do_one [] = []
      | do_one (n :: m :: l) = (n,m)::do_one l
      | do_one _ = raise Do_one
  in
    do_one integers
  end

fun with_open_in_file (file,f) =
  let
    val stream = TextIO.openIn file
    val result = (f stream handle e => (TextIO.closeIn stream; raise e))
  in
    (TextIO.closeIn stream;
     result)
  end

exception Eof

fun read_line stream : char list =
  let
    fun extend_line line =
      if TextIO.endOfStream stream then
        case line of
          [] => raise Eof
        | _ => rev line
      else
        let
          val char = valOf(TextIO.input1 stream)
        in
          if char = #"\n" then rev(#"\n" :: line)
          else
            extend_line(char :: line)
        end
  in
    extend_line []
  end


fun parse_table_file file =
  let
    exception Result of (int * int) list list
    fun do_it (result,stream) =
      let val line = read_line stream handle Eof => raise Result(result)
      in
        do_it (parse_table_row line::result,stream)
      end
  in
    with_open_in_file (file,
                       fn stream =>
                       do_it ([],stream)
                         handle Result(l) => rev l)
  end

(* End of table parsing stuff *)

 val int_to_gsym : int -> GSymbol = MLWorks.Internal.Value.cast
 val gsym_to_int : GSymbol -> int = MLWorks.Internal.Value.cast

 (* And now some "vector" functions *)

 (* Actually, we use arrays so as to use unsafe operations *)
(*
 val make_vector = Vector.vector
 val vector_sub = Vector.sub
 val vector_length = Vector.length
*)

 val make_vector = MLWorks.Internal.Array.arrayoflist
 val vector_sub = MLWorks.Internal.Value.unsafe_array_sub
 val vector_length = MLWorks.Internal.Array.length

 (* Convert an array of alists to an array of arrays *)
 fun convert_array (array,default) =
   let
     (* convert an alist to an array *)
     fun arrayify_alist (alist,default) =
       let 
         val len = (MLWorks.Internal.Array.length symbol_array) + 1
         val a = MLWorks.Internal.Array.array (len,default)
         val _ =
           map 
           (fn (key,value) => MLWorks.Internal.Array.update(a,key,value))
           alist
       in
         a
       end
   in
     MLWorks.Internal.ExtendedArray.map
     (fn alist => arrayify_alist (alist,default))
     array
   end

(* both these functions assume the arrays have the same length *)
(* merging of rows of the goto table; see comments below *)

fun can_merge (array1,array2) =
  let fun check 0 = true
        | check n =
          let
            val n' = n-1
            val v1 = MLWorks.Internal.Array.sub(array1,n')
            val v2 = MLWorks.Internal.Array.sub(array2,n')
          in
            ((v1 = ~1) orelse (v2 = ~1) orelse (v1 = v2))
            andalso
            check n'
          end
  in
    check(MLWorks.Internal.Array.length array1)
  end

(* include the values from array2 in array1 *)

fun merge (array1,array2) = 
  let fun merge_it 0 = array1
        | merge_it n =
          let
            val n' = n-1
          in
            if (MLWorks.Internal.Array.sub(array1,n') = ~1) andalso
              not (MLWorks.Internal.Array.sub(array2,n') = ~1)
              then
                MLWorks.Internal.Array.update(array1,n',MLWorks.Internal.Array.sub(array2,n'))
            else ();
              merge_it n'
          end
  in
    merge_it (MLWorks.Internal.Array.length array1)
  end

 fun row_to_assoc row =
   let
     val len = MLWorks.Internal.Array.length row
     fun row_to_assoc_aux (n,acc) =
       if n = len 
         then rev acc
       else
         let
           val entry = MLWorks.Internal.Array.sub (row,n)
         in
           if entry = ~1
             then row_to_assoc_aux (n+1,acc)
           else row_to_assoc_aux (n+1,(n,entry)::acc)
         end
   in
     row_to_assoc_aux (0,[])
   end

 fun convert_action a =
   if a = ~1 
     then NoAction
   else MLWorks.Internal.Array.sub (action_array,a)

 fun convert_symbol s =
   if (s = ~1)
     then EOF
   else MLWorks.Internal.Array.sub (symbol_array,s)

 fun make_vector_mapping alist =
   let
     val sorted = Lists.msort (fn ((a:int,_),(a':int,_)) => a < a') alist
   in
     (make_vector (map #1 sorted),
      make_vector (map #2 sorted))
   end
 
 (* Binary search lookup in the parsing tables *)
 fun lookup (i:int,(indices,values),default) =
   let
     fun lookup_aux (n,m,i,indices,values) =
       if n = m 
         then default
       else
         let
           val t = (n + m) div 2
           val x = vector_sub (indices,t)
         in
           if x < i then lookup_aux (t+1,m,i,indices,values)
           else if x = i then vector_sub (values,t)
           else lookup_aux (n,t,i,indices,values)
         end
   in
     lookup_aux (0,vector_length indices,i,indices,values)
   end

(* This merges parts of the table together, it's hardly worth doing *)
(* It saves about 10K in an images *)
(* It's quite slow as well *)

fun compress_goto_table gotos =
  let
    fun find_one (array,[]) = NONE
      | find_one (array,a::l) =
        if can_merge(array,a)
          then SOME (a,Lists.length l)
        else find_one (array,l)

    fun compress_aux (n,arrays,acc) =
      if n = MLWorks.Internal.Array.length gotos 
        then (rev arrays,rev acc)
      else
        let
          val this_one = MLWorks.Internal.Array.sub(gotos,n)
        in
          case find_one(this_one,arrays) of
            NONE => compress_aux (n+1,this_one::arrays,Lists.length arrays::acc)
          | SOME (old_one,i) =>
              (ignore(merge (old_one,this_one));
               compress_aux(n+1,arrays,i::acc))
        end

    val (arrays,indices) = compress_aux (0,[],[])

    val mergedmaps =
      MLWorks.Internal.Array.arrayoflist 
      (map 
       (fn a => make_vector_mapping (row_to_assoc a))
       arrays)
    val result =
      make_vector
      (map
       (fn n => MLWorks.Internal.Array.sub (mergedmaps,n))
       indices)
  in
    result
  end
        

(* This makes the tables *)

 val action_table = 
   let
     val actionlist = parse_table_file actionfile
     val resolved_actionlist = 
       map (map (fn (i,a) => (gsym_to_int (convert_symbol i),convert_action a))) actionlist
   in
     make_vector (map make_vector_mapping resolved_actionlist)
   end

 val goto_table = 
   let
     val gotolist = parse_table_file gotofile
     val resolved_gotolist =
       map (map (fn (i,a) => (gsym_to_int (convert_symbol i),a))) gotolist
   in
     compress_goto_table (convert_array (MLWorks.Internal.Array.arrayoflist resolved_gotolist,~1))
   end
in
  exception NoNextState

  fun get_next_state (gsym,state) =
    let 
      val gotos = vector_sub (goto_table,state) 
      val next = lookup (gsym_to_int gsym,gotos,~1)
    in
      if next = ~1
        then raise NoNextState
      else next
    end

  fun vector_to_list vector =
    let
      fun aux (0,acc) = acc
        | aux (n,acc) =
          aux (n-1,vector_sub (vector,n-1)::acc)
      val len = vector_length vector
    in
      aux (len,[])
    end

  exception GetPossibleSymbols
  fun get_possible_symbols state =
    let
      val (indices,_) = vector_sub(action_table,state)
    in
      map int_to_gsym (vector_to_list indices)
    end

  fun get_action (gsym,state) = 
    let
      val actions = vector_sub (action_table,state)
    in
      lookup (gsym_to_int gsym,actions,NoAction)
    end

  fun get_all_actions state =
    let
      val (_,actions) = vector_sub (action_table,state)
    in
      vector_to_list actions
    end
        
end

end
@


1.40.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.40  1998/02/19  16:29:29  mitchell
 * [Bug #30349]
 * Fix to avoid non-unit sequence warnings
 *
@


1.39
log
@[Bug #30341]
Fix where type ... and syntax
@
text
@d4 4
d1250 1
a1250 1
              (merge (old_one,this_one);
@


1.38
log
@[Bug #30341]
Correct derived form of where in grammar
@
text
@d4 4
d147 1
a147 1
		  structure String : STRING where type string = string and char = char
@


1.37
log
@[Bug #30090]
Modify to use TextIO instead of MLWorks.IO
@
text
@d4 4
d391 1
a391 1
Reduce(0,DECSEP,306),
d393 1
d395 3
a397 3
  Reduce(1,STRDEC1,217),
  Reduce(1,TOPDEC,297),
  Reduce(1,SCON,174),
d400 6
a405 4
  Reduce(1,START_LET,16),
  Reduce(1,TOPDEC,298),
  Reduce(1,STRDEC1PLUS,213),
  Reduce(1,SIGDEC1PLUS,231),
d407 4
a410 1
  Reduce(1,PROGRAM,305),
d412 2
a413 6
  Reduce(1,ATEXP,2),
  Reduce(0,EXPLIST,19),
  Reduce(1,FUNDEC1PLUS,284),
  Reduce(1,TOPDEC,296),
  Reduce(1,TOPDEC,299),
  Reduce(1,STRDEC1PLUS,214),
a414 6
  Reduce(1,LONGVAR,177),
  Reduce(1,APPEXP,27),
  Reduce(1,INFEXP,29),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,INFEXP,29),Shift),
  Reduce(1,TOPDEC1,301),
  Reduce(1,ATEXP,1),
d417 1
d419 11
a429 3
  Reduce(1,OPLONGVAR,178),
  Reduce(2,PROGRAM,304),
  Reduce(3,PROGRAM,302),
a430 1
  Reduce(2,DEC1,66),
d432 1
d435 1
a435 1
  Reduce(3,DEC1,67),
d437 54
d492 2
a493 1
  Reduce(1,PAT,140),
a497 2
  Reduce(2,EXP,42),
  Reduce(1,MATCH,44),
d500 1
a500 4
  Reduce(1,VARDEF,189),
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,189),Reduce(1,LONGVAR,177)),
  Reduce(1,ATPAT,117),
  Reduce(1,OPVARDEF,190),
a501 2
  Reduce(2,ATPAT,124),
  Reduce(2,PAT,141),
d504 3
a506 7
  Reduce(2,ATPAT,123),
  Reduce(1,PATROW,135),
  Reduce(1,SYMID,184),
  Reduce(1,LAB,175),
  Reduce(1,LAB,176),
  Reduce(2,PATROW1,138),
  Reduce(1,TY,151),
d508 2
a509 21
  Reduce(1,TY,152),
  Reduce(1,LONGTYCON,180),
  Reduce(1,TY,146),
  Reduce(1,TYLIST,156),
  Reduce(1,STAR,200),
  Reduce(3,TYTUPLE,158),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,158),Shift),
  Reduce(2,TY,150),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,200),Reduce(1,LONGTYCON,180)),
  Reduce(3,TY,153),
  Reduce(3,TYTUPLE,159),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,159),Shift),
  Reduce(2,TY,149),
  Reduce(2,TY,148),
  Reduce(3,TY,147),
  Reduce(5,TYROW,161),
  Reduce(3,TYROW,160),
  Reduce(3,TY,154),
  Reduce(3,TYLIST,157),
  Reduce(5,TYSEQ,155),
  Reduce(4,PATROW1,139),
d511 2
d515 7
a521 3
  Reduce(3,PAT,144),
  Reduce(2,PAT,142),
  Reduce(4,PAT,145),
a524 3
  Reduce(3,PATROW1,137),
  Reduce(3,ATPAT,122),
  Reduce(3,ATPAT,128),
d526 1
a526 2
  Reduce(3,ATPAT,125),
  Reduce(3,PATLIST2,134),
d528 4
a531 2
  Reduce(3,ATPAT,129),
  Reduce(3,MRULE,45),
d533 6
a538 5
  Reduce(1,EXPLIST,20),
  Reduce(1,EXPLIST,21),
  Reduce(3,EXPLIST2,17),
  Reduce(2,ATEXP,7),
  Reduce(2,EXP,38),
d541 1
a541 2
  Reduce(3,EXP,34),
  Reduce(3,EXP,35),
a542 42
  Reduce(1,EXPSEQ,23),
  Reduce(2,ATEXP,10),
  Reduce(3,ATEXP,13),
  Reduce(3,ATEXP,11),
  Reduce(3,ATEXP,15),
  Reduce(3,EXPLIST2,18),
  Reduce(4,EXP,40),
  Reduce(1,DEC,47),
  Reduce(1,DATBIND,103),
  Reduce(1,TYVARSEQ,97),
  Reduce(1,ABSDATBIND,62),
  Reduce(1,TYVARSEQ1,98),
  Reduce(1,TYPBIND,90),
  Reduce(1,TYVARLIST,100),
  Reduce(3,TYVARSEQ1,99),
  Reduce(3,TYVARLIST,101),
  Reduce(1,TYCON,199),
  Reduce(4,TYPBIND1,92),
  Reduce(3,TYPBIND,91),
  Reduce(7,DEC1,61),
  Reduce(5,DEC1,60),
  Reduce(3,DATBIND,104),
  Reduce(3,DATAHEADER,106),
  Reduce(1,OPCONDEF,194),
  Reduce(1,CONDEF,193),
  Reduce(1,CONBIND,107),
  Reduce(2,DATBIND1,105),
  Reduce(0,OPTOFTYPE,114),
  Reduce(2,CONBIND1,109),
  Reduce(2,OPTOFTYPE,115),
  Reduce(3,CONBIND,108),
  Reduce(2,OPCONDEF,195),
  Reduce(2,DEC1,68),
  Reduce(3,DEC1,69),
  Reduce(3,DEC,49),
  Reduce(3,DEC0,51),
  Reduce(1,VALBIND,72),
  Reduce(2,DEC1,53),
  Reduce(2,VALBIND,75),
  Reduce(3,VALBIND,73),
  Reduce(4,VALBIND,74),
  Reduce(3,VALBIND1,76),
a543 1
  Reduce(3,ATEXP,8),
a547 1
  Reduce(2,ATEXP,4),
d549 2
d553 9
a561 2
  Reduce(3,EXPROW,25),
  Reduce(6,ATEXP,9),
d563 20
d586 2
a588 1
  Reduce(1,EXCONDEF,196),
a589 1
  Reduce(1,EXBIND,110),
d591 1
d594 4
a597 1
  Reduce(2,OPEXCONDEF,198),
a598 24
  Reduce(2,DEC1,57),
  Reduce(2,DEC1,58),
  Reduce(4,DEC1,59),
  Reduce(3,DATREPL,102),
  Reduce(2,DEC1,55),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,131),Shift),
  Reduce(1,ATPAT1,132),
  Reduce(1,FVALBIND,77),
  Reduce(1,FVALLIST,79),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,140)),
  Reduce(1,PATVAR,192),
  Reduce(5,BIN_ATPAT,130),
  Reduce(1,ATPATLIST,162),
  Reduce(5,FVAL,85),
  Reduce(6,FVAL,82),
  Reduce(2,ATPATLIST,163),
  Reduce(7,FVAL,83),
  Reduce(5,FVAL,84),
  Reduce(3,FVALLIST,80),
  Reduce(5,FVAL,81),
  Reduce(4,FVAL,86),
  Reduce(5,FVAL,87),
  Reduce(3,DEC1,54),
  Reduce(3,FVALBIND,78),
a603 3
  Reduce(3,EXPSEQ,22),
  Reduce(3,EXPSEQ2,24),
  Reduce(6,EXP,39),
d605 22
a626 2
  Reduce(2,TOPDEC,300),
  Reduce(2,SIGDEC1,233),
a627 3
  Reduce(0,SPEC,236),
  Reduce(1,SIG_START,230),
  Reduce(3,SIGBIND,234),
d629 2
a631 2
  Reduce(1,LONGTYPBIND,93),
  Reduce(3,LONGTYPBIND,94),
d633 2
d636 2
a637 2
  Reduce(1,SPEC1,239),
  Reduce(2,SPEC,237),
d639 1
a639 18
  Reduce(1,SIGIDLIST,255),
  Reduce(2,SPEC1,249),
  Reduce(2,SIGIDLIST,256),
  Reduce(1,STRDESC,273),
  Reduce(2,SPEC1,246),
  Reduce(1,STRID,187),
  Reduce(3,STRDESC,274),
  Reduce(3,STRDESC1,275),
  Reduce(1,TYPDESC,259),
  Reduce(2,SPEC1,242),
  Reduce(2,TYPDESC1,261),
  Reduce(4,TYPDESC1,262),
  Reduce(3,TYPDESC,260),
  Reduce(2,SPEC1,253),
  Reduce(3,SPEC1,254),
  Reduce(2,SPEC1,240),
  Reduce(3,VALDESC,257),
  Reduce(5,VALDESC,258),
d641 7
a647 2
  Reduce(3,SPEC1,252),
  Reduce(2,SPEC1,248),
d649 15
a663 5
  Reduce(1,EXDESC,270),
  Reduce(3,EXDESC,271),
  Reduce(2,EXDESC1,272),
  Reduce(3,SPEC,238),
  Reduce(1,SHAREQ1,278),
d665 3
a667 1
  Reduce(1,SHAREQ,276),
d669 3
a671 3
  Reduce(3,LONGSTRIDEQLIST,280),
  Reduce(3,SHAREQ,277),
  Reduce(2,SHAREQ1,279),
d673 10
a682 24
  Reduce(3,LONGTYCONEQLIST,282),
  Reduce(2,SPEC1,243),
  Reduce(1,DATDESC,264),
  Reduce(2,SPEC1,244),
  Reduce(3,DATDESC,265),
  Reduce(1,CONDESC,267),
  Reduce(2,DATDESC1,266),
  Reduce(3,CONDESC,268),
  Reduce(2,CONDESC1,269),
  Reduce(3,DATREPLDESC,263),
  Reduce(5,SPEC1,247),
  Reduce(2,SPEC1,241),
  Reduce(5,SIGBIND,235),
  Reduce(1,STRDEC,208),
  Reduce(5,STRDEC1,220),
  Reduce(2,STRDEC1,218),
  Reduce(1,STRBIND,223),
  Reduce(3,STRBIND,224),
  Reduce(1,SIGBINDER,221),
  Reduce(1,SIGBINDER,222),
  Reduce(1,STRUCT_START,207),
  Reduce(3,STRBIND1,226),
  Reduce(1,STREXP,202),
  Reduce(1,FUNID,185),
a683 2
  Reduce(5,STREXP,205),
  Reduce(3,STREXP,206),
a684 1
  Reduce(4,STREXP,203),
d686 21
a706 20
  Reduce(3,STRDEC,209),
  Reduce(3,STRDEC0,211),
  Reduce(2,STRDEC1,219),
  Reduce(3,STRDEC,210),
  Reduce(3,STRDEC0,212),
  Reduce(2,STRDEC1PLUS0,216),
  Reduce(1,FUNBIND,287),
  Reduce(1,FUNIDBIND,295),
  Reduce(2,FUNDEC1,286),
  Reduce(6,STARTFUNBIND1,293),
  Reduce(4,STARTFUNBIND2,294),
  Reduce(3,FUNBIND,288),
  Reduce(3,FUNBIND1,290),
  Reduce(5,FUNBIND1,289),
  Reduce(3,FUNBIND1,292),
  Reduce(5,FUNBIND1,291),
  Reduce(2,PROGRAM,303),
  Reduce(2,STRDEC1PLUS0,215),
  Reduce(2,FUNDEC1PLUS,285),
  Reduce(2,SIGDEC1PLUS,232)
@


1.36
log
@[Bug #30153]
Remove references to Old.
@
text
@d4 4
d132 2
d138 2
d983 1
a983 1
fun parse_integers (string) =
d985 1
d1028 1
a1028 1
fun parse_table_row (row) =
d1041 2
a1042 2
    val stream = MLWorks.IO.open_in file
    val result = (f stream handle e => (MLWorks.IO.close_in stream; raise e))
d1044 1
a1044 1
    (MLWorks.IO.close_in stream;
d1050 1
a1050 1
fun read_line stream =
d1053 1
a1053 1
      if MLWorks.IO.end_of_stream stream then
d1056 1
a1056 1
        | _ => concat (rev line)
d1059 1
a1059 1
          val char = MLWorks.IO.input(stream, 1)
d1061 1
a1061 1
          if char = "\n" then concat (rev("\n" :: line))
@


1.35
log
@[Bug #1578]
constructors cannot be rebound.
(updating).
@
text
@d4 5
a127 1
require "^.basis.__old";
@


1.35.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 5
 * Revision 1.35  1996/11/28  14:12:02  andreww
 * [Bug #1578]
 * constructors cannot be rebound.
 * (updating).
 *
@


1.35.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 5
 * Revision 1.35  1996/11/28  14:12:02  andreww
 * [Bug #1578]
 * constructors cannot be rebound.
 * (updating).
 *
@


1.35.1.1
log
@branched from 1.35
@
text
@a3 5
 * Revision 1.35  1996/11/28  14:12:02  andreww
 * [Bug #1578]
 * constructors cannot be rebound.
 * (updating).
 *
@


1.35.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.35.1.1  1997/05/12  10:38:33  hope
 * branched from 1.35
 *
@


1.35.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.35.1.1  1997/05/12  10:38:33  hope
 * branched from 1.35
 *
@


1.35.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.35.1.1  1997/05/12  10:38:33  hope
 * branched from 1.35
 *
@


1.35.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.35.1.1.1.1  1997/07/28  18:23:32  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.34
log
@[Bug #1614]
removing toplevel String.
@
text
@d4 4
d377 4
a380 1
  Reduce(1,ATEXP,3),
a381 2
  Reduce(1,ATEXP,2),
  Reduce(1,SIGDEC1PLUS,231),
a382 1
  Accept,
d384 5
a388 1
  Reduce(1,TOPDEC,297),
d390 4
a394 1
  Reduce(1,EXP,33),
d396 1
a396 2
  Reduce(1,FUNDEC1PLUS,284),
  Reduce(1,TOPDEC1,301),
d398 1
a398 1
  Reduce(1,SCON,173),
d401 2
a402 5
  Reduce(0,EXPLIST,19),
  Reduce(1,TOPDEC,298),
  Reduce(1,TOPDEC,296),
  Reduce(1,SCON,174),
  Reduce(1,STRDEC1PLUS,213),
d404 2
d407 2
a408 18
  Reduce(1,ATEXP,1),
  Reduce(1,PROGRAM,305),
  Reduce(1,START_LOCAL,71),
  Reduce(1,STRDEC1,217),
  Reduce(1,APPEXP,27),
  Reduce(1,SYMID,184),
  Reduce(2,STRDEC1,219),
  Reduce(1,STRBIND,223),
  Reduce(1,STRID,187),
  Reduce(3,STRBIND,224),
  Reduce(1,SIGBINDER,222),
  Reduce(1,SIGBINDER,221),
  Reduce(3,STRBIND1,226),
  Reduce(1,STREXP,202),
  Reduce(1,STRUCT_START,207),
  Reduce(1,FUNID,185),
  Reduce(1,STRDEC,208),
  Reduce(3,STREXP,201),
d410 15
a424 2
  Reduce(3,STRDEC,210),
  Reduce(3,STRDEC0,212),
a425 3
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,131),Shift),
  Reduce(0,OPTTYPE,88),
  Reduce(1,TYVARSEQ1,98),
d428 1
a428 3
  Reduce(1,ATPAT1,132),
  Reduce(1,FVALLIST,79),
  Reduce(1,ATPAT,116),
d430 12
a441 7
  Reduce(2,DEC1,55),
  Reduce(1,FVALBIND,77),
  Reduce(1,ATPAT,117),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,118),Shift),
  Reduce(1,ATPATLIST,162),
  Reduce(1,ATPAT,118),
  Reduce(2,ATPATLIST,163),
d443 2
d446 1
a446 3
  Reduce(1,LONGTYCON,180),
  Reduce(1,TY,152),
  Reduce(1,TY,151),
d450 1
a450 6
  Reduce(1,TYLIST,156),
  Reduce(1,LAB,175),
  Reduce(2,TY,148),
  Reduce(1,LAB,176),
  Reduce(3,TYROW,160),
  Reduce(2,TY,149),
d452 1
a452 1
  Reduce(2,TY,150),
d455 2
a456 1
  Reduce(3,TY,153),
d459 1
d463 1
a463 8
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,119),Shift),
  Reduce(1,PAT,140),
  Reduce(2,ATPAT,124),
  Resolve[Reduce(1,ATPAT,118),Shift],
  Reduce(3,ATPAT,125),
  Reduce(3,PATLIST2,134),
  Reduce(2,PAT,142),
  Reduce(4,PAT,145),
a464 1
  Reduce(3,PAT,144),
d467 3
a469 13
  Reduce(1,PATROW,135),
  Reduce(2,ATPAT,123),
  Reduce(3,ATPAT,122),
  Reduce(3,PATROW1,137),
  Reduce(2,ATPAT,126),
  Reduce(3,ATPAT,129),
  Reduce(3,ATPAT,127),
  Reduce(3,PATLIST2,133),
  Reduce(2,OPLONGVAR,179),
  Reduce(2,OPVARDEF,191),
  Reduce(2,PAT,141),
  Reduce(2,PATROW1,138),
  Reduce(4,PATROW1,139),
d473 2
d476 6
a481 2
  Reduce(5,FVAL,81),
  Reduce(2,EXP,38),
a482 12
  Reduce(1,EXPSEQ,23),
  Reduce(2,ATEXP,10),
  Reduce(1,INFVAR,31),
  Reduce(1,INFVAR,32),
  Reduce(3,INFEXP,30),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,INFEXP,30),Shift),
  Reduce(1,MATCH,44),
  Reduce(2,EXP,42),
  Reduce(3,MATCH,43),
  Reduce(3,MRULE,45),
  Reduce(2,ATEXP,6),
  Reduce(3,EXPROW,25),
a484 1
  Reduce(3,ATEXP,12),
a485 4
  Reduce(2,ATEXP,4),
  Reduce(1,DEC,47),
  Reduce(5,ATEXP,14),
  Reduce(3,EXPSEQ,22),
d487 4
a491 2
  Reduce(3,EXP,34),
  Reduce(3,EXP,37),
d493 13
a505 31
  Reduce(6,EXP,39),
  Reduce(1,SYM,182),
  Reduce(1,SYMLIST,168),
  Reduce(2,DEC1,66),
  Reduce(1,SYM,183),
  Reduce(3,DEC1,67),
  Reduce(2,SYMLIST,169),
  Reduce(3,DEC,49),
  Reduce(3,DEC0,51),
  Reduce(1,LONGIDLIST,165),
  Reduce(2,DEC1,65),
  Reduce(2,LONGIDLIST,164),
  Reduce(5,DEC1,64),
  Reduce(2,DEC1,63),
  Reduce(1,EXBIND,110),
  Reduce(1,EXCONDEF,196),
  Reduce(1,OPEXCONDEF,197),
  Reduce(0,OPTOFTYPE,114),
  Reduce(2,EXBIND1,112),
  Reduce(3,EXBIND1,113),
  Reduce(2,OPTOFTYPE,115),
  Reduce(2,OPEXCONDEF,198),
  Reduce(3,EXBIND,111),
  Reduce(2,DEC1,70),
  Reduce(2,DEC1,53),
  Reduce(1,VALBIND,72),
  Reduce(3,DEC1,52),
  Reduce(2,VALBIND,75),
  Reduce(3,VALBIND1,76),
  Reduce(3,VALBIND,73),
  Reduce(4,VALBIND,74),
a508 3
  Reduce(2,DEC1,56),
  Reduce(1,TYVARSEQ,97),
  Reduce(1,TYPBIND,90),
d512 1
a512 2
  Reduce(1,DATBIND,103),
  Reduce(1,ABSDATBIND,62),
a513 1
  Reduce(7,DEC1,61),
d515 2
a517 1
  Reduce(1,OPCONDEF,194),
d520 3
a523 1
  Reduce(2,CONBIND1,109),
a524 1
  Reduce(3,DATAHEADER,106),
d527 33
d564 5
a568 14
  Reduce(3,DEC,48),
  Reduce(3,DEC0,50),
  Reduce(3,EXPLIST2,18),
  Reduce(3,ATEXP,5),
  Reduce(5,EXPROW,26),
  Reduce(6,ATEXP,9),
  Reduce(3,ATEXP,8),
  Reduce(4,EXP,40),
  Reduce(3,ATEXP,13),
  Reduce(3,EXPSEQ2,24),
  Reduce(3,ATEXP,11),
  Reduce(3,ATEXP,15),
  Reduce(4,EXP,41),
  Reduce(3,FVALLIST,80),
d572 1
a572 3
  Reduce(5,FVAL,87),
  Reduce(4,FVAL,86),
  Reduce(5,FVAL,84),
d574 2
d577 6
a582 1
  Reduce(6,FVAL,82),
d584 12
a595 9
  Reduce(3,DEC1,54),
  Reduce(5,STRDEC1,220),
  Reduce(3,STRDEC,209),
  Reduce(3,STRDEC0,211),
  Reduce(2,STRDEC1,218),
  Reduce(4,STREXP,204),
  Reduce(5,STREXP,205),
  Reduce(1,SIGEXP,228),
  Reduce(3,STREXP,206),
d598 7
a604 1
  Reduce(1,SIGID,186),
d607 1
a607 1
  Reduce(3,SIGEXP,227),
a608 1
  Reduce(2,SPEC1,250),
d611 6
a616 4
  Reduce(4,SIGEXP,229),
  Reduce(1,LONGTYPBIND,93),
  Reduce(4,LONGTYPBIND1,95),
  Reduce(3,LONGTYPBIND,94),
a617 2
  Reduce(1,TYPDESC,259),
  Reduce(3,TYPDESC,260),
d620 14
a635 1
  Reduce(3,SPEC,238),
d637 2
a639 1
  Reduce(3,LONGSTRIDEQLIST,281),
d641 1
d643 1
a643 20
  Reduce(3,LONGTYCONEQLIST,283),
  Reduce(3,LONGSTRIDEQLIST,280),
  Reduce(2,SPEC1,251),
  Reduce(3,SPEC1,252),
  Reduce(2,SPEC1,248),
  Reduce(1,EXDESC,270),
  Reduce(2,SPEC1,245),
  Reduce(3,EXDESC,271),
  Reduce(2,EXDESC1,272),
  Reduce(2,SPEC1,240),
  Reduce(3,VALDESC,257),
  Reduce(5,VALDESC,258),
  Reduce(5,SPEC1,247),
  Reduce(2,SPEC1,241),
  Reduce(2,SPEC1,253),
  Reduce(3,SPEC1,254),
  Reduce(2,SPEC1,246),
  Reduce(1,STRDESC,273),
  Reduce(3,STRDESC1,275),
  Reduce(3,STRDESC,274),
a644 1
  Reduce(2,SPEC1,243),
d647 1
d649 1
a649 1
  Reduce(1,CONDESC,267),
a650 1
  Reduce(3,CONDESC,268),
d652 18
d672 6
a677 4
  Reduce(2,PROGRAM,303),
  Reduce(2,STRDEC1PLUS0,215),
  Reduce(2,FUNDEC1PLUS,285),
  Reduce(2,FUNDEC1,286),
d680 2
a682 1
  Reduce(6,STARTFUNBIND1,293),
d684 2
d688 4
a691 10
  Reduce(3,FUNBIND1,290),
  Reduce(5,FUNBIND1,289),
  Reduce(2,STRDEC1PLUS0,216),
  Reduce(2,SIGDEC1,233),
  Reduce(5,SIGBIND,235),
  Reduce(3,SIGBIND,234),
  Reduce(2,SIGDEC1PLUS,232),
  Reduce(2,TOPDEC,300),
  Reduce(2,PROGRAM,304),
  Reduce(3,PROGRAM,302)
@


1.34.4.1
log
@branched from 1.34
@
text
@a3 4
 * Revision 1.34  1996/10/30  19:08:26  io
 * [Bug #1614]
 * removing toplevel String.
 *
@


1.34.3.1
log
@branched from 1.34
@
text
@a3 4
 * Revision 1.34  1996/10/30  19:08:26  io
 * [Bug #1614]
 * removing toplevel String.
 *
@


1.34.3.1.1.1
log
@branched from 1.34.3.1
@
text
@a3 3
 * Revision 1.34.3.1  1996/12/17  17:51:44  hope
 * branched from 1.34
 *
@


1.34.2.1
log
@branched from 1.34
@
text
@a3 4
 * Revision 1.34  1996/10/30  19:08:26  io
 * [Bug #1614]
 * removing toplevel String.
 *
@


1.34.1.1
log
@branched from 1.34
@
text
@a3 4
 * Revision 1.34  1996/10/30  19:08:26  io
 * [Bug #1614]
 * removing toplevel String.
 *
@


1.34.1.1.1.1
log
@branched from 1.34.1.1
@
text
@a3 3
 * Revision 1.34.1.1  1996/11/14  12:54:38  hope
 * branched from 1.34
 *
@


1.33
log
@[Bug #1708]
altering syntax of datatype replication.
@
text
@d4 4
d119 1
d962 2
a963 5
fun digit_char char =
  let val n = String.ord char
  in
    (String.ord "0") <= n andalso n <= (String.ord "9")
  end
d965 1
a965 2
fun digit_val char =
  (String.ord char) - (String.ord "0")
d982 1
a982 1
        let val char = (String.substring (string,index,1))
d984 1
a984 1
          if char = "-"
d988 1
a988 1
            if digit_char (char)
d999 1
a999 1
        let val char = (String.substring (string,index,1))
d1001 1
a1001 1
          if digit_char (char)
d1039 1
a1039 1
        | _ => String.implode(rev line)
d1044 1
a1044 1
          if char = "\n" then String.implode(rev("\n" :: line))
@


1.32
log
@[Bug #1577]
Adding datatype replication to the grammar
@
text
@d4 4
d570 1
a570 1
  Reduce(4,DATREPL,102),
d659 1
a659 1
  Reduce(4,DATREPLDESC,263),
@


1.32.2.1
log
@branched from 1.32
@
text
@a3 4
 * Revision 1.32  1996/09/20  14:49:30  andreww
 * [Bug #1577]
 * Adding datatype replication to the grammar
 *
@


1.32.1.1
log
@branched from 1.32
@
text
@a3 4
 * Revision 1.32  1996/09/20  14:49:30  andreww
 * [Bug #1577]
 * Adding datatype replication to the grammar
 *
@


1.31
log
@Update wrt MLWorks.OS.arguments -> MLWorks.arguments
@
text
@d4 3
d118 4
a121 1
    structure Option = MLWorks.Option
d125 2
a126 2
        fun assoc [] = Option.NONE
          | assoc [_] = Option.NONE
d128 1
a128 1
            if a = s then Option.SOME b else assoc (b::rest)
d135 2
a136 2
        Option.NONE => table_dir
      | Option.SOME dir => dir
d138 1
a138 1
    val _ = MLWorks.IO.output (MLWorks.IO.std_out, "Loading parsing tables from: " ^ table_dir ^ "\n")
d184 1
d190 2
d362 1
a362 1
Reduce(0,DECSEP,301),
d364 10
a373 4
  Reduce(1,SCON,171),
  Reduce(0,TYVARSEQ,95),
  Reduce(1,LONGVAR,174),
  Reduce(1,TOPDEC,294),
d375 7
d383 6
a388 1
  Reduce(1,START_LET,16),
d390 3
a392 7
  Reduce(1,TOPDEC,292),
  Reduce(1,FUNDEC1PLUS,279),
  Reduce(1,INFEXP,29),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,INFEXP,29),Shift),
  Reduce(1,STRDEC1PLUS,210),
  Reduce(1,SCON,170),
  Reduce(1,SIGDEC1PLUS,228),
d394 24
a417 27
  Reduce(1,START_LOCAL,70),
  Reduce(1,SCON,167),
  Reduce(1,TOPDEC,293),
  Reduce(1,ATEXP,2),
  Reduce(1,TOPDEC1,296),
  Accept,
  Reduce(1,TOPDEC,291),
  Reduce(1,ATEXP,3),
  Reduce(1,SCON,169),
  Reduce(1,STRDEC1PLUS,211),
  Reduce(1,PROGRAM,300),
  Reduce(1,OPLONGVAR,175),
  Reduce(1,SCON,168),
  Reduce(1,STRDEC1,214),
  Reduce(1,SYM,179),
  Reduce(1,SYMLIST,165),
  Reduce(2,DEC1,67),
  Reduce(1,SYM,180),
  Reduce(2,SYMLIST,166),
  Reduce(3,DEC1,68),
  Reduce(1,LAB,172),
  Reduce(1,LAB,173),
  Reduce(2,ATEXP,7),
  Reduce(1,VARDEF,186),
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,186),Reduce(1,LONGVAR,174)),
  Reduce(1,OPVARDEF,187),
  Reduce(2,EXP,42),
d419 66
a484 11
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,116),Shift),
  Reduce(0,OPTTYPE,87),
  Reduce(1,ATPAT,115),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,115),Shift),
  Resolve[Reduce(1,ATPAT,115),Shift],
  Reduce(1,ATPAT,114),
  Reduce(1,MATCH,44),
  Reduce(1,PAT,137),
  Reduce(1,ATPAT,113),
  Reduce(1,VAR,185),
  Reduce(3,MRULE,45),
d489 9
a497 3
  Reduce(1,EXPSEQ,23),
  Reduce(2,ATEXP,10),
  Reduce(3,ATEXP,11),
d499 1
a499 59
  Reduce(2,ATEXP,6),
  Reduce(3,ATEXP,5),
  Reduce(5,EXPROW,26),
  Reduce(2,EXP,38),
  Reduce(3,EXP,37),
  Reduce(2,ATPAT,121),
  Reduce(3,ATPAT,125),
  Reduce(1,TY,148),
  Reduce(1,LONGTYCON,177),
  Reduce(1,TY,149),
  Reduce(1,TY,143),
  Reduce(3,PAT,141),
  Reduce(2,TY,147),
  Reduce(1,STAR,197),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,197),Reduce(1,LONGTYCON,177)),
  Reduce(3,TYTUPLE,156),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,156),Shift),
  Reduce(3,TY,150),
  Reduce(1,TYLIST,153),
  Reduce(3,TY,151),
  Reduce(3,TYLIST,154),
  Reduce(5,TYSEQ,152),
  Reduce(2,TY,145),
  Reduce(3,TY,144),
  Reduce(5,TYROW,158),
  Reduce(3,TYTUPLE,155),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,155),Shift),
  Reduce(2,TY,146),
  Reduce(3,TYROW,157),
  Reduce(3,PAT,140),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,140),Shift),
  Reduce(1,SYMID,181),
  Reduce(1,PATROW,132),
  Reduce(2,ATPAT,120),
  Reduce(3,ATPAT,117),
  Reduce(3,PATROW,133),
  Reduce(3,PATROW1,134),
  Reduce(2,OPLONGVAR,176),
  Reduce(2,OPVARDEF,188),
  Reduce(2,PAT,138),
  Reduce(2,ATPAT,123),
  Reduce(3,ATPAT,124),
  Reduce(3,PATLIST2,130),
  Reduce(2,PAT,139),
  Reduce(4,PAT,142),
  Reduce(2,OPTTYPE,88),
  Reduce(3,ATPAT,126),
  Reduce(3,PATLIST2,131),
  Reduce(5,ATPAT,118),
  Reduce(2,PATROW1,135),
  Reduce(4,PATROW1,136),
  Reduce(3,ATPAT,119),
  Reduce(3,ATPAT,122),
  Reduce(3,MATCH,43),
  Reduce(3,EXP,34),
  Reduce(3,EXP,36),
  Reduce(3,EXP,35),
  Reduce(3,ATEXP,8),
  Reduce(2,APPEXP,28),
d503 12
a514 61
  Reduce(2,ATEXP,4),
  Reduce(1,EXPLIST,20),
  Reduce(1,EXPLIST,21),
  Reduce(3,ATEXP,12),
  Reduce(3,EXPLIST2,18),
  Reduce(2,DECSEP,46),
  Reduce(1,EXCONDEF,193),
  Reduce(0,OPTOFTYPE,111),
  Reduce(1,EXBIND,107),
  Reduce(1,OPEXCONDEF,194),
  Reduce(2,DEC1,62),
  Reduce(3,EXBIND,108),
  Reduce(2,OPEXCONDEF,195),
  Reduce(2,EXBIND1,109),
  Reduce(3,EXBIND1,110),
  Reduce(2,OPTOFTYPE,112),
  Reduce(1,ABSDATBIND,61),
  Reduce(1,TYVARSEQ1,97),
  Reduce(1,DATBIND,101),
  Reduce(1,TYVARSEQ,96),
  Reduce(1,TYCON,196),
  Reduce(1,CONDEF,190),
  Reduce(1,CONBIND,104),
  Reduce(4,DATBIND1,103),
  Reduce(1,OPCONDEF,191),
  Reduce(2,CONBIND1,106),
  Reduce(3,CONBIND,105),
  Reduce(2,OPCONDEF,192),
  Reduce(1,TYVARLIST,99),
  Reduce(3,TYVARSEQ1,98),
  Reduce(3,TYVARLIST,100),
  Reduce(5,DEC1,59),
  Reduce(1,TYPBIND,89),
  Reduce(7,DEC1,60),
  Reduce(3,TYPBIND,90),
  Reduce(4,TYPBIND1,91),
  Reduce(3,DATBIND,102),
  Reduce(2,DEC1,55),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,128),Shift),
  Reduce(1,FVALLIST,78),
  Reduce(1,ATPAT1,129),
  Reduce(1,FVALBIND,76),
  Reduce(3,FVALLIST,79),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,137)),
  Reduce(1,PATVAR,189),
  Reduce(5,BIN_ATPAT,127),
  Reduce(1,ATPATLIST,159),
  Reduce(4,FVAL,85),
  Reduce(2,ATPATLIST,160),
  Reduce(5,FVAL,86),
  Reduce(6,FVAL,81),
  Reduce(7,FVAL,82),
  Reduce(5,FVAL,84),
  Reduce(5,FVAL,83),
  Reduce(5,FVAL,80),
  Reduce(3,DEC1,54),
  Reduce(3,FVALBIND,77),
  Reduce(2,DEC1,69),
  Reduce(1,LONGIDLIST,162),
  Reduce(2,DEC1,64),
  Reduce(2,LONGIDLIST,161),
d517 15
a531 1
  Reduce(1,VALBIND,71),
d533 1
d535 7
a541 5
  Reduce(3,VALBIND1,75),
  Reduce(3,VALBIND,72),
  Reduce(4,VALBIND,73),
  Reduce(2,VALBIND,74),
  Reduce(5,DEC1,63),
d543 20
a562 2
  Reduce(2,DEC1,65),
  Reduce(3,DEC1,66),
d564 3
a566 1
  Reduce(4,DEC1,58),
d569 3
d573 1
a573 3
  Reduce(3,EXPROW,25),
  Reduce(6,EXP,39),
  Reduce(4,EXP,41),
d575 1
d577 1
a577 1
  Reduce(3,ATEXP,13),
d579 35
a613 41
  Reduce(1,STRID,184),
  Reduce(1,STRBIND,220),
  Reduce(2,STRDEC1,216),
  Reduce(3,STRBIND,221),
  Reduce(1,SIGBINDER,219),
  Reduce(1,SIGBINDER,218),
  Reduce(1,SIGID,183),
  Reduce(0,SPEC,233),
  Reduce(1,SIGEXP,225),
  Reduce(1,SIG_START,227),
  Reduce(1,LONGTYPBIND,92),
  Reduce(4,SIGEXP,226),
  Reduce(3,LONGTYPBIND,93),
  Reduce(4,LONGTYPBIND1,94),
  Reduce(1,FUNID,182),
  Reduce(1,STREXP,199),
  Reduce(1,STRUCT_START,204),
  Reduce(5,STRBIND1,222),
  Reduce(1,STRDEC,205),
  Reduce(3,STREXP,198),
  Reduce(3,STRDEC,206),
  Reduce(3,STRDEC0,208),
  Reduce(2,STRDEC1,215),
  Reduce(3,STRDEC,207),
  Reduce(3,STRDEC0,209),
  Reduce(5,STRDEC1,217),
  Reduce(3,STREXP,203),
  Reduce(2,SPEC,234),
  Reduce(1,SPEC1,236),
  Reduce(3,SIGEXP,224),
  Reduce(2,SPEC1,239),
  Reduce(1,TYPDESC,255),
  Reduce(2,TYPDESC1,257),
  Reduce(4,TYPDESC1,258),
  Reduce(3,TYPDESC,256),
  Reduce(2,SPEC1,241),
  Reduce(1,EXDESC,265),
  Reduce(2,EXDESC1,267),
  Reduce(3,EXDESC,266),
  Reduce(2,SPEC1,244),
  Reduce(1,STRDESC,268),
d615 18
a632 7
  Reduce(3,STRDESC,269),
  Reduce(3,STRDESC1,270),
  Reduce(2,SPEC1,249),
  Reduce(3,SPEC1,250),
  Reduce(2,SPEC1,237),
  Reduce(5,VALDESC,254),
  Reduce(3,VALDESC,253),
d634 9
a642 1
  Reduce(1,SIGIDLIST,251),
d644 35
a678 47
  Reduce(2,SIGIDLIST,252),
  Reduce(5,SPEC1,243),
  Reduce(1,SHAREQ,271),
  Reduce(1,LONGSTRID,178),
  Reduce(1,SHAREQ1,273),
  Reduce(3,SPEC,235),
  Reduce(3,SHAREQ,272),
  Reduce(3,LONGSTRIDEQLIST,275),
  Reduce(3,LONGSTRIDEQLIST,276),
  Reduce(2,SHAREQ1,274),
  Reduce(3,LONGTYCONEQLIST,278),
  Reduce(3,LONGTYCONEQLIST,277),
  Reduce(2,SPEC1,238),
  Reduce(2,SPEC1,247),
  Reduce(3,SPEC1,248),
  Reduce(1,DATDESC,259),
  Reduce(2,SPEC1,240),
  Reduce(4,DATDESC1,261),
  Reduce(1,CONDESC,262),
  Reduce(2,CONDESC1,264),
  Reduce(3,CONDESC,263),
  Reduce(3,DATDESC,260),
  Reduce(4,STREXP,200),
  Reduce(5,STREXP,202),
  Reduce(4,STREXP,201),
  Reduce(3,STRBIND1,223),
  Reduce(2,PROGRAM,298),
  Reduce(2,STRDEC1PLUS0,213),
  Reduce(2,FUNDEC1PLUS,280),
  Reduce(1,FUNBIND,282),
  Reduce(2,FUNDEC1,281),
  Reduce(1,FUNIDBIND,290),
  Reduce(4,STARTFUNBIND2,289),
  Reduce(6,STARTFUNBIND1,288),
  Reduce(5,FUNBIND1,284),
  Reduce(3,FUNBIND1,285),
  Reduce(3,FUNBIND,283),
  Reduce(5,FUNBIND1,286),
  Reduce(3,FUNBIND1,287),
  Reduce(2,STRDEC1PLUS0,212),
  Reduce(2,TOPDEC,295),
  Reduce(2,SIGDEC1PLUS,229),
  Reduce(2,SIGDEC1,230),
  Reduce(5,SIGBIND,232),
  Reduce(3,SIGBIND,231),
  Reduce(2,PROGRAM,299),
  Reduce(3,PROGRAM,297)
d709 1
d715 2
a1138 2

datatype 'a opt = SOME of 'a | NONE
@


1.31.1.1
log
@branched from 1.31
@
text
@a3 3
 * Revision 1.31  1996/05/16  12:09:49  stephenb
 * Update wrt MLWorks.OS.arguments -> MLWorks.arguments
 *
@


1.30
log
@Array moving to MLWorks.Array
@
text
@d4 3
d124 1
a124 1
        assoc (MLWorks.OS.arguments ())
@


1.29
log
@String functions explode, implode, chr and ord now only available from String
io functions and types
instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
now only available from MLWorks.IO
@
text
@d4 6
d348 1
a348 1
val action_array = Array.arrayoflist [
d665 1
a665 1
val symbol_array = Array.arrayoflist[
d1057 1
a1057 1
 val make_vector = Array.arrayoflist
d1059 1
a1059 1
 val vector_length = Array.length
d1067 2
a1068 2
         val len = (Array.length symbol_array) + 1
         val a = Array.array (len,default)
d1071 1
a1071 1
           (fn (key,value) => Array.update(a,key,value))
d1077 1
a1077 1
     MLWorks.ExtendedArray.map
d1090 2
a1091 2
            val v1 = Array.sub(array1,n')
            val v2 = Array.sub(array2,n')
d1098 1
a1098 1
    check(Array.length array1)
d1109 2
a1110 2
            if (Array.sub(array1,n') = ~1) andalso
              not (Array.sub(array2,n') = ~1)
d1112 1
a1112 1
                Array.update(array1,n',Array.sub(array2,n'))
d1117 1
a1117 1
    merge_it (Array.length array1)
d1124 1
a1124 1
     val len = Array.length row
d1130 1
a1130 1
           val entry = Array.sub (row,n)
d1143 1
a1143 1
   else Array.sub (action_array,a)
d1148 1
a1148 1
   else Array.sub (symbol_array,s)
d1190 1
a1190 1
      if n = Array.length gotos 
d1194 1
a1194 1
          val this_one = Array.sub(gotos,n)
d1206 1
a1206 1
      Array.arrayoflist 
d1213 1
a1213 1
       (fn n => Array.sub (mergedmaps,n))
d1237 1
a1237 1
     compress_goto_table (convert_array (Array.arrayoflist resolved_gotolist,~1))
@


1.28
log
@Updating
@
text
@d4 3
d123 1
a123 1
    val _ = output (std_out, "Loading parsing tables from: " ^ table_dir ^ "\n")
d928 1
a928 1
  let val n = ord char
d930 1
a930 1
    (ord "0") <= n andalso n <= (ord "9")
d934 1
a934 1
  (ord char) - (ord "0")
d993 2
a994 2
    val stream = open_in file
    val result = (f stream handle e => (close_in stream; raise e))
d996 1
a996 1
    (close_in stream;
d1005 1
a1005 1
      if end_of_stream stream then
d1008 1
a1008 1
        | _ => implode(rev line)
d1011 1
a1011 1
          val char = input(stream, 1)
d1013 1
a1013 1
          if char = "\n" then implode(rev("\n" :: line))
@


1.27
log
@Updating for new language
@
text
@d4 3
a272 1
 | SPEC0
d341 1
a341 1
Reduce(0,DECSEP,303),
d343 1
a344 3
  Reduce(1,ATEXP,2),
  Reduce(1,TOPDEC1,298),
  Reduce(1,TOPDEC,296),
d346 2
a347 1
  Reduce(1,SIGDEC1PLUS,228),
d349 7
a355 1
  Reduce(1,STRDEC1PLUS,211),
d357 2
a358 1
  Reduce(1,TOPDEC,294),
d362 2
a363 5
  Reduce(1,STRDEC1PLUS,210),
  Reduce(1,TOPDEC,295),
  Reduce(1,STRDEC1,214),
  Reduce(1,SCON,171),
  Reduce(1,FUNDEC1PLUS,281),
d365 1
a365 4
  Reduce(1,INFEXP,29),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,INFEXP,29),Shift),
  Reduce(1,OPLONGVAR,175),
  Reduce(1,PROGRAM,302),
a366 1
  Reduce(1,APPEXP,27),
d368 3
a370 3
  Reduce(1,START_LET,16),
  Reduce(1,EXP,33),
  Reduce(1,ATEXP,1),
d372 2
d375 1
a376 2
  Reduce(2,DEC1,65),
  Reduce(1,SYM,179),
d378 2
a379 18
  Reduce(3,DEC1,66),
  Reduce(1,TYVARSEQ1,97),
  Reduce(2,DEC1,57),
  Reduce(1,DATBIND,101),
  Reduce(1,TYVARSEQ,96),
  Reduce(1,TYVARLIST,99),
  Reduce(3,TYVARSEQ1,98),
  Reduce(3,TYVARLIST,100),
  Reduce(1,TYPBIND,89),
  Reduce(4,DEC1,58),
  Reduce(3,TYPBIND,90),
  Reduce(1,TYCON,196),
  Reduce(1,TY,149),
  Reduce(1,TY,143),
  Reduce(4,TYPBIND1,91),
  Reduce(1,TY,148),
  Reduce(1,LONGTYCON,177),
  Reduce(1,TYLIST,153),
d381 1
a381 30
  Reduce(1,LAB,172),
  Reduce(2,TY,145),
  Reduce(3,TY,144),
  Reduce(5,TYROW,158),
  Reduce(2,TY,147),
  Reduce(1,STAR,197),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,197),Reduce(1,LONGTYCON,177)),
  Reduce(3,TY,150),
  Reduce(3,TYTUPLE,156),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,156),Shift),
  Reduce(2,TY,146),
  Reduce(3,TYTUPLE,155),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,155),Shift),
  Reduce(3,TYROW,157),
  Reduce(3,TY,151),
  Reduce(3,TYLIST,154),
  Reduce(5,TYSEQ,152),
  Reduce(3,DATBIND,102),
  Reduce(1,CONBIND,104),
  Reduce(1,OPCONDEF,191),
  Reduce(4,DATBIND1,103),
  Reduce(1,CONDEF,190),
  Reduce(0,OPTOFTYPE,111),
  Reduce(2,CONBIND1,106),
  Reduce(2,OPTOFTYPE,112),
  Reduce(2,OPCONDEF,192),
  Reduce(3,CONBIND,105),
  Reduce(1,PAT,137),
  Reduce(2,EXP,42),
  Reduce(1,ATPAT,114),
a383 2
  Reduce(1,ATPAT,113),
  Reduce(1,MATCH,44),
d385 1
d392 19
a410 4
  Reduce(2,ATPAT,123),
  Reduce(2,PAT,139),
  Reduce(2,OPLONGVAR,176),
  Reduce(2,OPVARDEF,188),
d412 26
a437 1
  Reduce(2,PAT,138),
a438 1
  Reduce(1,SYMID,181),
d442 13
a455 1
  Reduce(2,OPTTYPE,88),
a456 6
  Reduce(1,VAR,185),
  Reduce(3,PAT,141),
  Reduce(3,PAT,140),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,140),Shift),
  Reduce(5,ATPAT,118),
  Reduce(3,PATROW1,134),
a457 2
  Reduce(3,ATPAT,125),
  Reduce(3,PATLIST2,130),
d459 10
a468 5
  Reduce(3,PATLIST2,131),
  Reduce(4,PAT,142),
  Reduce(3,ATPAT,124),
  Reduce(3,ATPAT,126),
  Reduce(3,MRULE,45),
d471 2
a472 11
  Reduce(3,EXPLIST2,17),
  Reduce(2,APPEXP,28),
  Reduce(2,ATEXP,4),
  Reduce(1,EXPSEQ,23),
  Reduce(2,ATEXP,10),
  Reduce(3,ATEXP,11),
  Reduce(2,EXP,38),
  Reduce(2,ATEXP,7),
  Reduce(2,ATEXP,6),
  Reduce(3,EXPROW,25),
  Reduce(1,DEC,47),
d474 3
a476 1
  Reduce(2,DEC1,69),
a477 2
  Reduce(1,EXBIND,107),
  Reduce(1,EXCONDEF,193),
d483 23
a505 3
  Reduce(2,DEC1,64),
  Reduce(1,LONGIDLIST,162),
  Reduce(2,LONGIDLIST,161),
d507 1
a508 1
  Reduce(2,DEC1,55),
d510 1
a510 17
  Reduce(1,FVALLIST,78),
  Reduce(3,DEC1,54),
  Reduce(1,ATPATLIST,159),
  Reduce(2,ATPATLIST,160),
  Reduce(5,FVAL,80),
  Reduce(3,EXP,36),
  Reduce(3,EXP,34),
  Reduce(3,EXP,37),
  Reduce(3,MATCH,43),
  Reduce(3,EXP,35),
  Reduce(3,ATEXP,8),
  Reduce(6,ATEXP,9),
  Reduce(4,EXP,40),
  Reduce(1,INFVAR,31),
  Reduce(1,INFVAR,32),
  Reduce(3,INFEXP,30),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,INFEXP,30),Shift),
d514 4
a517 2
  Reduce(3,FVALLIST,79),
  Reduce(5,FVAL,84),
d520 1
d522 2
a523 2
  Reduce(4,FVAL,85),
  Reduce(5,FVAL,86),
d525 7
a532 1
  Reduce(1,VALBIND,71),
a533 1
  Reduce(2,VALBIND,74),
d537 7
d546 2
a547 11
  Reduce(2,DEC1,67),
  Reduce(3,DEC1,68),
  Reduce(5,DEC1,63),
  Reduce(2,DEC1,56),
  Reduce(1,ABSDATBIND,61),
  Reduce(5,DEC1,59),
  Reduce(7,DEC1,60),
  Reduce(3,DEC,49),
  Reduce(3,DEC0,51),
  Reduce(5,ATEXP,14),
  Reduce(3,EXPSEQ,22),
a548 2
  Reduce(3,ATEXP,5),
  Reduce(5,EXPROW,26),
d550 1
d552 1
d554 4
a557 7
  Reduce(3,EXPLIST2,18),
  Reduce(3,ATEXP,13),
  Reduce(3,ATEXP,12),
  Reduce(2,FUNDEC1,283),
  Reduce(1,FUNBIND,284),
  Reduce(1,FUNIDBIND,292),
  Reduce(1,FUNID,182),
a559 1
  Reduce(1,SIG_START,227),
d561 1
d563 2
d566 1
a566 1
  Reduce(1,LONGTYPBIND,92),
d568 1
a568 1
  Reduce(3,LONGTYPBIND,93),
a569 1
  Reduce(5,FUNBIND1,288),
d571 9
d581 8
a588 2
  Reduce(1,SPEC,233),
  Reduce(1,DATDESC,261),
d590 8
a597 5
  Reduce(3,DATDESC,262),
  Reduce(4,DATDESC1,263),
  Reduce(1,CONDESC,264),
  Reduce(2,CONDESC1,266),
  Reduce(3,CONDESC,265),
d600 11
d612 6
a617 16
  Reduce(3,SPEC0,237),
  Reduce(2,SPEC1,242),
  Reduce(1,EXDESC,267),
  Reduce(2,EXDESC1,269),
  Reduce(3,EXDESC,268),
  Reduce(2,SPEC1,246),
  Reduce(2,SPEC1,243),
  Reduce(1,STRDESC,270),
  Reduce(1,STRID,184),
  Reduce(3,STRDESC,271),
  Reduce(3,STRDESC1,272),
  Reduce(2,SPEC1,240),
  Reduce(1,TYPDESC,257),
  Reduce(2,TYPDESC1,259),
  Reduce(4,TYPDESC1,260),
  Reduce(3,TYPDESC,258),
a618 3
  Reduce(3,VALDESC,255),
  Reduce(5,VALDESC,256),
  Reduce(2,SPEC1,248),
d620 8
a627 20
  Reduce(1,SIGIDLIST,253),
  Reduce(2,SIGIDLIST,254),
  Reduce(1,SHAREQ,273),
  Reduce(2,SPEC1,244),
  Reduce(1,LONGSTRID,178),
  Reduce(1,SHAREQ1,275),
  Reduce(3,LONGSTRIDEQLIST,278),
  Reduce(3,SHAREQ,274),
  Reduce(2,SHAREQ1,276),
  Reduce(3,LONGTYCONEQLIST,279),
  Reduce(3,LONGTYCONEQLIST,280),
  Reduce(3,LONGSTRIDEQLIST,277),
  Reduce(2,SPEC1,251),
  Reduce(3,SPEC1,252),
  Reduce(5,SPEC1,245),
  Reduce(2,SPEC1,239),
  Reduce(3,SPEC,234),
  Reduce(3,SPEC0,236),
  Reduce(3,SIGEXP,224),
  Reduce(1,STRDEC,205),
a628 5
  Reduce(2,STRDEC1,216),
  Reduce(1,STRBIND,220),
  Reduce(3,STRBIND,221),
  Reduce(5,STRBIND1,222),
  Reduce(3,STREXP,198),
d630 1
d632 11
a642 11
  Reduce(2,STRDEC1,215),
  Reduce(3,STRDEC,207),
  Reduce(3,STRDEC0,209),
  Reduce(3,STRDEC,206),
  Reduce(3,STRDEC0,208),
  Reduce(5,STRDEC1,217),
  Reduce(4,STREXP,201),
  Reduce(3,FUNBIND1,289),
  Reduce(4,STARTFUNBIND2,291),
  Reduce(6,STARTFUNBIND1,290),
  Reduce(3,FUNBIND,285),
a644 2
  Reduce(2,PROGRAM,300),
  Reduce(2,FUNDEC1PLUS,282),
d646 1
d649 1
d651 2
a652 5
  Reduce(5,SIGBIND,232),
  Reduce(2,STRDEC1PLUS0,213),
  Reduce(2,PROGRAM,301),
  Reduce(3,PROGRAM,299),
  Reduce(2,TOPDEC,297)
a789 1
  SPEC0, 
@


1.26
log
@hyphenizing command line arguments
@
text
@d4 3
d138 1
d224 2
d261 1
d313 1
d322 1
d339 1
a339 1
Reduce(0,DECSEP,291),
d341 19
a359 4
  Reduce(1,STRDEC1PLUS,203),
  Reduce(0,TYVARSEQ,90),
  Reduce(1,SCON,163),
  Reduce(1,START_LET,16),
d362 3
a364 13
  Reduce(0,EXPLIST,19),
  Reduce(1,LONGVAR,168),
  Reduce(1,SCON,164),
  Reduce(1,SCON,161),
  Reduce(1,STRDEC1PLUS,204),
  Reduce(1,PROGRAM,290),
  Reduce(1,STRDEC1,207),
  Reduce(1,ATEXP,1),
  Reduce(1,TOPDEC,281),
  Reduce(1,ATEXP,2),
  Reduce(1,TOPDEC,284),
  Reduce(1,FUNDEC1PLUS,269),
  Reduce(1,TOPDEC1,286),
d366 2
a367 8
  Reduce(1,TOPDEC,282),
  Reduce(1,SIGDEC1PLUS,218),
  Reduce(1,TOPDEC,283),
  Reduce(1,START_LOCAL,68),
  Reduce(1,ATEXP,3),
  Accept,
  Reduce(1,OPLONGVAR,169),
  Reduce(1,SCON,162),
d369 20
a388 14
  Reduce(1,SCON,165),
  Reduce(1,SYMID,175),
  Reduce(2,SIGDEC1,220),
  Reduce(1,SIGID,177),
  Reduce(1,SIGEXP,216),
  Reduce(5,SIGBIND,222),
  Reduce(1,SIG_START,217),
  Reduce(1,SPEC,223),
  Reduce(3,SIGEXP,215),
  Reduce(2,DECSEP,46),
  Reduce(1,VARDEF,180),
  Reduce(2,SPEC1,228),
  Reduce(1,TY,137),
  Reduce(1,TY,142),
d390 7
a396 5
  Reduce(3,VALDESC,244),
  Reduce(1,LONGTYCON,171),
  Reduce(2,TY,141),
  Reduce(1,STAR,191),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,191),Reduce(1,LONGTYCON,171)),
d398 30
a427 86
  Reduce(3,TYTUPLE,150),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,150),Shift),
  Reduce(3,TYTUPLE,149),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,149),Shift),
  Reduce(2,TY,140),
  Reduce(1,LAB,166),
  Reduce(1,LAB,167),
  Reduce(2,TY,139),
  Reduce(3,TY,138),
  Reduce(5,TYROW,152),
  Reduce(1,TYLIST,147),
  Reduce(3,TY,145),
  Reduce(3,TYLIST,148),
  Reduce(5,TYSEQ,146),
  Reduce(3,TYROW,151),
  Reduce(5,VALDESC,245),
  Reduce(3,SPEC,225),
  Reduce(3,SPEC0,227),
  Reduce(2,SPEC1,238),
  Reduce(1,SYM,173),
  Reduce(1,SYMLIST,159),
  Reduce(1,SYM,174),
  Reduce(3,SPEC1,239),
  Reduce(2,SYMLIST,160),
  Reduce(1,TYVARSEQ,91),
  Reduce(2,SPEC1,229),
  Reduce(1,TYPDESC,246),
  Reduce(2,TYPDESC1,248),
  Reduce(1,TYCON,190),
  Reduce(3,TYPDESC,247),
  Reduce(1,TYVARLIST,93),
  Reduce(3,TYVARSEQ,92),
  Reduce(3,TYVARLIST,94),
  Reduce(2,SPEC1,233),
  Reduce(1,STRDESC,258),
  Reduce(1,STRID,178),
  Reduce(3,STRDESC,259),
  Reduce(3,STRDESC1,260),
  Reduce(2,SPEC1,230),
  Reduce(2,SPEC1,237),
  Reduce(1,SIGIDLIST,242),
  Reduce(2,SIGIDLIST,243),
  Reduce(2,SPEC1,236),
  Reduce(1,LONGIDLIST,156),
  Reduce(2,LONGIDLIST,155),
  Reduce(0,OPTOFTYPE,105),
  Reduce(1,EXDESC,255),
  Reduce(1,EXCONDEF,187),
  Reduce(2,SPEC1,232),
  Reduce(3,EXDESC,256),
  Reduce(2,EXDESC1,257),
  Reduce(2,OPTOFTYPE,106),
  Reduce(2,SPEC1,231),
  Reduce(1,DATDESC,249),
  Reduce(1,CONDESC,252),
  Reduce(1,CONDEF,184),
  Reduce(4,DATDESC1,251),
  Reduce(3,CONDESC,253),
  Reduce(2,CONDESC1,254),
  Reduce(3,DATDESC,250),
  Reduce(1,SHAREQ,261),
  Reduce(1,SHAREQ1,263),
  Reduce(1,LONGSTRID,172),
  Reduce(2,SPEC1,234),
  Reduce(3,LONGSTRIDEQLIST,265),
  Reduce(2,SHAREQ1,264),
  Reduce(3,LONGTYCONEQLIST,268),
  Reduce(3,LONGTYCONEQLIST,267),
  Reduce(3,SHAREQ,262),
  Reduce(3,LONGSTRIDEQLIST,266),
  Reduce(2,SPEC1,240),
  Reduce(3,SPEC1,241),
  Reduce(5,SPEC1,235),
  Reduce(3,SPEC,224),
  Reduce(3,SPEC0,226),
  Reduce(3,SIGBIND,221),
  Reduce(1,VAR,179),
  Reduce(1,INFVAR,31),
  Reduce(1,INFVAR,32),
  Reduce(3,INFEXP,30),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,INFEXP,30),Shift),
  Reduce(1,EXPLIST,21),
  Reduce(1,EXPLIST,20),
  Reduce(2,EXP,38),
  Reduce(1,ATPAT,110),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,110),Shift),
d429 27
a455 26
  Reduce(1,PAT,131),
  Reduce(1,ATPAT,108),
  Reduce(0,OPTTYPE,85),
  Reduce(1,ATPAT,109),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,109),Shift),
  Resolve[Reduce(1,ATPAT,109),Shift],
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,180),Reduce(1,LONGVAR,168)),
  Reduce(1,ATPAT,107),
  Reduce(2,EXP,42),
  Reduce(1,OPVARDEF,181),
  Reduce(3,MATCH,43),
  Reduce(2,ATPAT,117),
  Reduce(3,ATPAT,118),
  Reduce(3,PAT,135),
  Reduce(3,PAT,134),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,134),Shift),
  Reduce(2,PAT,133),
  Reduce(2,OPTTYPE,86),
  Reduce(4,PAT,136),
  Reduce(1,PATROW,126),
  Reduce(2,ATPAT,114),
  Reduce(2,PATROW1,129),
  Reduce(4,PATROW1,130),
  Reduce(2,OPLONGVAR,170),
  Reduce(2,OPVARDEF,182),
  Reduce(2,ATPAT,115),
d457 7
a463 10
  Reduce(3,PATLIST2,124),
  Reduce(2,PAT,132),
  Reduce(3,ATPAT,116),
  Reduce(3,PATLIST2,125),
  Reduce(3,ATPAT,111),
  Reduce(3,PATROW,127),
  Reduce(3,PATROW1,128),
  Reduce(5,ATPAT,112),
  Reduce(3,ATPAT,113),
  Reduce(3,ATPAT,120),
d465 3
a467 6
  Reduce(1,DEC,47),
  Reduce(1,EXPSEQ,23),
  Reduce(3,EXP,35),
  Reduce(3,EXP,34),
  Reduce(3,EXP,37),
  Reduce(3,EXP,36),
a468 5
  Reduce(6,ATEXP,9),
  Reduce(4,EXP,40),
  Reduce(2,ATEXP,6),
  Reduce(3,ATEXP,5),
  Reduce(5,EXPROW,26),
d470 1
d472 2
a473 3
  Reduce(3,ATEXP,13),
  Reduce(3,ATEXP,15),
  Reduce(3,EXPLIST2,18),
d475 1
a475 4
  Reduce(3,EXPSEQ2,24),
  Reduce(3,EXPSEQ,22),
  Reduce(3,ATEXP,11),
  Reduce(3,EXPLIST2,17),
d477 6
a482 27
  Reduce(3,ATEXP,8),
  Reduce(6,EXP,39),
  Reduce(5,ATEXP,14),
  Reduce(1,VALBIND,69),
  Reduce(2,DEC1,52),
  Reduce(3,VALBIND,70),
  Reduce(3,VALBIND1,73),
  Reduce(4,VALBIND,71),
  Reduce(2,VALBIND,72),
  Reduce(2,DEC1,63),
  Reduce(3,DEC1,64),
  Reduce(2,DEC1,54),
  Reduce(1,TYPBIND,87),
  Reduce(4,TYPBIND1,89),
  Reduce(3,TYPBIND,88),
  Reduce(1,DATBIND,95),
  Reduce(1,ABSDATBIND,59),
  Reduce(3,DATBIND,96),
  Reduce(4,DATBIND1,97),
  Reduce(1,OPCONDEF,185),
  Reduce(1,CONBIND,98),
  Reduce(2,CONBIND1,100),
  Reduce(2,OPCONDEF,186),
  Reduce(3,CONBIND,99),
  Reduce(7,DEC1,58),
  Reduce(5,DEC1,57),
  Reduce(2,DEC1,67),
d484 9
a492 9
  Reduce(3,DEC,49),
  Reduce(3,DEC0,51),
  Reduce(1,OPEXCONDEF,188),
  Reduce(1,EXBIND,101),
  Reduce(2,DEC1,60),
  Reduce(3,EXBIND,102),
  Reduce(2,EXBIND1,103),
  Reduce(3,EXBIND1,104),
  Reduce(2,OPEXCONDEF,189),
d494 29
a522 4
  Reduce(4,DEC1,56),
  Reduce(2,DEC1,65),
  Reduce(3,DEC1,66),
  Reduce(5,DEC1,61),
d524 6
a529 18
  Reduce(1,ATPAT1,123),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,122),Shift),
  Reduce(1,FVALBIND,74),
  Reduce(1,FVALLIST,76),
  Reduce(1,ATPATLIST,153),
  Reduce(5,FVAL,82),
  Reduce(6,FVAL,79),
  Reduce(2,ATPATLIST,154),
  Reduce(7,FVAL,80),
  Reduce(5,FVAL,81),
  Reduce(3,FVALLIST,77),
  Reduce(5,FVAL,78),
  Reduce(4,FVAL,83),
  Reduce(5,FVAL,84),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,131)),
  Reduce(1,PATVAR,183),
  Reduce(5,BIN_ATPAT,121),
  Reduce(3,FVALBIND,75),
d532 14
d547 4
d552 101
a652 37
  Reduce(2,FUNDEC1PLUS,270),
  Reduce(1,FUNIDBIND,280),
  Reduce(2,FUNDEC1,271),
  Reduce(1,FUNBIND,272),
  Reduce(1,FUNID,176),
  Reduce(4,STARTFUNBIND2,279),
  Reduce(6,STARTFUNBIND1,278),
  Reduce(3,FUNBIND,273),
  Reduce(1,STRUCT_START,197),
  Reduce(3,FUNBIND1,277),
  Reduce(1,STREXP,193),
  Reduce(1,STRDEC,198),
  Reduce(4,STREXP,195),
  Reduce(3,STREXP,192),
  Reduce(2,STRDEC1,209),
  Reduce(1,STRBIND,211),
  Reduce(3,STRBIND,212),
  Reduce(3,STRBIND1,214),
  Reduce(5,STRBIND1,213),
  Reduce(2,STRDEC1,208),
  Reduce(3,STRDEC,200),
  Reduce(3,STRDEC0,202),
  Reduce(5,STRDEC1,210),
  Reduce(3,STRDEC,199),
  Reduce(3,STRDEC0,201),
  Reduce(5,STREXP,196),
  Reduce(4,STREXP,194),
  Reduce(5,FUNBIND1,276),
  Reduce(3,FUNBIND1,275),
  Reduce(5,FUNBIND1,274),
  Reduce(2,SIGDEC1PLUS,219),
  Reduce(2,TOPDEC,285),
  Reduce(2,PROGRAM,288),
  Reduce(2,STRDEC1PLUS0,206),
  Reduce(2,PROGRAM,289),
  Reduce(3,PROGRAM,287),
  Reduce(2,STRDEC1PLUS0,205)
d658 2
a659 1
ABSDATBIND, 
d744 2
d781 1
d833 1
d842 1
d853 1
d914 1
@


1.25
log
@Fixing printing of majick brackets
@
text
@d4 3
d110 1
a110 1
      case find_OS_arg "-parser_tables" of
@


1.24
log
@Improving error message for fun nil x = x;
@
text
@d4 3
d887 1
a887 1
  | MAGICOPEN => "<<"
@


1.23
log
@Removing mention of MAGICCLOSE
@
text
@d4 3
d324 1
a324 1
Reduce(0,DECSEP,288),
d326 3
a328 3
  Reduce(1,STRDEC1PLUS,200),
  Reduce(0,TYVARSEQ,87),
  Reduce(1,SCON,160),
d333 2
a334 1
  Reduce(1,LONGVAR,165),
d336 3
a338 4
  Reduce(1,SCON,158),
  Reduce(1,STRDEC1PLUS,201),
  Reduce(1,PROGRAM,287),
  Reduce(1,STRDEC1,204),
d340 1
a340 1
  Reduce(1,TOPDEC,278),
d342 3
a344 3
  Reduce(1,TOPDEC,281),
  Reduce(1,FUNDEC1PLUS,266),
  Reduce(1,TOPDEC1,283),
d346 3
a348 3
  Reduce(1,TOPDEC,279),
  Reduce(1,SIGDEC1PLUS,215),
  Reduce(1,TOPDEC,280),
d352 2
a353 2
  Reduce(1,OPLONGVAR,166),
  Reduce(1,SCON,159),
d355 9
a363 9
  Reduce(1,SCON,162),
  Reduce(1,SYMID,172),
  Reduce(2,SIGDEC1,217),
  Reduce(1,SIGID,174),
  Reduce(1,SIGEXP,213),
  Reduce(5,SIGBIND,219),
  Reduce(1,SIG_START,214),
  Reduce(1,SPEC,220),
  Reduce(3,SIGEXP,212),
d365 49
a413 44
  Reduce(1,VARDEF,177),
  Reduce(2,SPEC1,225),
  Reduce(1,TY,134),
  Reduce(1,TY,139),
  Reduce(1,TY,140),
  Reduce(3,VALDESC,241),
  Reduce(1,LONGTYCON,168),
  Reduce(2,TY,138),
  Reduce(1,STAR,188),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,188),Reduce(1,LONGTYCON,168)),
  Reduce(3,TY,141),
  Reduce(3,TYTUPLE,147),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,147),Shift),
  Reduce(3,TYTUPLE,146),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,146),Shift),
  Reduce(2,TY,137),
  Reduce(1,LAB,163),
  Reduce(1,LAB,164),
  Reduce(2,TY,136),
  Reduce(3,TY,135),
  Reduce(5,TYROW,149),
  Reduce(1,TYLIST,144),
  Reduce(3,TY,142),
  Reduce(3,TYLIST,145),
  Reduce(5,TYSEQ,143),
  Reduce(3,TYROW,148),
  Reduce(5,VALDESC,242),
  Reduce(3,SPEC,222),
  Reduce(3,SPEC0,224),
  Reduce(2,SPEC1,235),
  Reduce(1,SYM,170),
  Reduce(1,SYMLIST,156),
  Reduce(1,SYM,171),
  Reduce(3,SPEC1,236),
  Reduce(2,SYMLIST,157),
  Reduce(1,TYVARSEQ,88),
  Reduce(2,SPEC1,226),
  Reduce(1,TYPDESC,243),
  Reduce(2,TYPDESC1,245),
  Reduce(1,TYCON,187),
  Reduce(3,TYPDESC,244),
  Reduce(1,TYVARLIST,90),
  Reduce(3,TYVARSEQ,89),
  Reduce(3,TYVARLIST,91),
d415 24
a438 5
  Reduce(1,STRDESC,255),
  Reduce(1,STRID,175),
  Reduce(3,STRDESC,256),
  Reduce(3,STRDESC1,257),
  Reduce(2,SPEC1,227),
d440 13
a452 37
  Reduce(1,SIGIDLIST,239),
  Reduce(2,SIGIDLIST,240),
  Reduce(2,SPEC1,233),
  Reduce(1,LONGIDLIST,153),
  Reduce(2,LONGIDLIST,152),
  Reduce(0,OPTOFTYPE,102),
  Reduce(1,EXDESC,252),
  Reduce(1,EXCONDEF,184),
  Reduce(2,SPEC1,229),
  Reduce(3,EXDESC,253),
  Reduce(2,EXDESC1,254),
  Reduce(2,OPTOFTYPE,103),
  Reduce(2,SPEC1,228),
  Reduce(1,DATDESC,246),
  Reduce(1,CONDESC,249),
  Reduce(1,CONDEF,181),
  Reduce(4,DATDESC1,248),
  Reduce(3,CONDESC,250),
  Reduce(2,CONDESC1,251),
  Reduce(3,DATDESC,247),
  Reduce(1,SHAREQ,258),
  Reduce(1,SHAREQ1,260),
  Reduce(1,LONGSTRID,169),
  Reduce(2,SPEC1,231),
  Reduce(3,LONGSTRIDEQLIST,262),
  Reduce(2,SHAREQ1,261),
  Reduce(3,LONGTYCONEQLIST,265),
  Reduce(3,LONGTYCONEQLIST,264),
  Reduce(3,SHAREQ,259),
  Reduce(3,LONGSTRIDEQLIST,263),
  Reduce(2,SPEC1,237),
  Reduce(3,SPEC1,238),
  Reduce(5,SPEC1,232),
  Reduce(3,SPEC,221),
  Reduce(3,SPEC0,223),
  Reduce(3,SIGBIND,218),
  Reduce(1,VAR,176),
d460 10
a470 10
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,107),Shift),
  Reduce(1,MATCH,44),
  Reduce(1,PAT,128),
  Reduce(1,ATPAT,105),
  Reduce(0,OPTTYPE,82),
  Reduce(1,ATPAT,106),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,106),Shift),
  Resolve[Reduce(1,ATPAT,106),Shift],
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,177),Reduce(1,LONGVAR,165)),
  Reduce(1,ATPAT,104),
d472 1
a472 1
  Reduce(1,OPVARDEF,178),
d474 9
d484 8
a491 14
  Reduce(3,ATPAT,115),
  Reduce(3,PAT,132),
  Reduce(3,PAT,131),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,131),Shift),
  Reduce(2,PAT,130),
  Reduce(2,OPTTYPE,83),
  Reduce(4,PAT,133),
  Reduce(1,PATROW,123),
  Reduce(2,ATPAT,111),
  Reduce(2,PATROW1,126),
  Reduce(4,PATROW1,127),
  Reduce(2,OPLONGVAR,167),
  Reduce(2,OPVARDEF,179),
  Reduce(2,ATPAT,112),
d493 5
a497 2
  Reduce(3,PATLIST2,121),
  Reduce(2,PAT,129),
d499 1
a499 7
  Reduce(3,PATLIST2,122),
  Reduce(3,ATPAT,108),
  Reduce(3,PATROW,124),
  Reduce(3,PATROW1,125),
  Reduce(5,ATPAT,109),
  Reduce(3,ATPAT,110),
  Reduce(3,ATPAT,117),
d536 4
a539 4
  Reduce(1,TYPBIND,84),
  Reduce(4,TYPBIND1,86),
  Reduce(3,TYPBIND,85),
  Reduce(1,DATBIND,92),
d541 7
a547 7
  Reduce(3,DATBIND,93),
  Reduce(4,DATBIND1,94),
  Reduce(1,OPCONDEF,182),
  Reduce(1,CONBIND,95),
  Reduce(2,CONBIND1,97),
  Reduce(2,OPCONDEF,183),
  Reduce(3,CONBIND,96),
d554 2
a555 2
  Reduce(1,OPEXCONDEF,185),
  Reduce(1,EXBIND,98),
d557 4
a560 4
  Reduce(3,EXBIND,99),
  Reduce(2,EXBIND1,100),
  Reduce(3,EXBIND1,101),
  Reduce(2,OPEXCONDEF,186),
d567 2
a568 2
  Reduce(1,ATPAT1,120),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,119),Shift),
d571 2
d574 3
a577 2
  Reduce(1,ATPATLIST,150),
  Reduce(2,ATPATLIST,151),
d579 5
a583 5
  Reduce(4,FVAL,80),
  Reduce(5,FVAL,81),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,128)),
  Reduce(1,PATVAR,180),
  Reduce(5,BIN_ATPAT,118),
d589 37
a625 37
  Reduce(2,FUNDEC1PLUS,267),
  Reduce(1,FUNIDBIND,277),
  Reduce(2,FUNDEC1,268),
  Reduce(1,FUNBIND,269),
  Reduce(1,FUNID,173),
  Reduce(4,STARTFUNBIND2,276),
  Reduce(6,STARTFUNBIND1,275),
  Reduce(3,FUNBIND,270),
  Reduce(1,STRUCT_START,194),
  Reduce(3,FUNBIND1,274),
  Reduce(1,STREXP,190),
  Reduce(1,STRDEC,195),
  Reduce(4,STREXP,192),
  Reduce(3,STREXP,189),
  Reduce(2,STRDEC1,206),
  Reduce(1,STRBIND,208),
  Reduce(3,STRBIND,209),
  Reduce(3,STRBIND1,211),
  Reduce(5,STRBIND1,210),
  Reduce(2,STRDEC1,205),
  Reduce(3,STRDEC,197),
  Reduce(3,STRDEC0,199),
  Reduce(5,STRDEC1,207),
  Reduce(3,STRDEC,196),
  Reduce(3,STRDEC0,198),
  Reduce(5,STREXP,193),
  Reduce(4,STREXP,191),
  Reduce(5,FUNBIND1,273),
  Reduce(3,FUNBIND1,272),
  Reduce(5,FUNBIND1,271),
  Reduce(2,SIGDEC1PLUS,216),
  Reduce(2,TOPDEC,282),
  Reduce(2,PROGRAM,285),
  Reduce(2,STRDEC1PLUS0,203),
  Reduce(2,PROGRAM,286),
  Reduce(3,PROGRAM,284),
  Reduce(2,STRDEC1PLUS0,202)
@


1.22
log
@Disallowing = as a strid etc.
@
text
@d4 3
a879 1
  | MAGICCLOSE => ">>"
@


1.21
log
@Adding literal words
@
text
@d4 3
a209 1
 | MAGICCLOSE
d275 1
d318 1
a318 1
Reduce(0,DECSEP,287),
a319 3
  Reduce(1,INFEXP,29),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,INFEXP,29),Shift),
  Reduce(1,TOPDEC1,282),
d321 1
a322 1
  Reduce(1,TOPDEC,278),
d324 4
a327 1
  Reduce(1,EXP,33),
d330 3
a332 4
  Reduce(1,SCON,162),
  Reduce(0,TYVARSEQ,87),
  Reduce(1,LONGVAR,165),
  Reduce(1,OPLONGVAR,166),
d334 6
d341 1
a341 1
  Reduce(1,ATEXP,2),
a342 6
  Reduce(1,STRDEC1PLUS,199),
  Reduce(1,STRDEC1,203),
  Reduce(0,EXPLIST,19),
  Reduce(1,FUNDEC1PLUS,265),
  Reduce(1,APPEXP,27),
  Reduce(1,PROGRAM,286),
d346 1
d348 10
a357 28
  Reduce(1,TOPDEC,277),
  Reduce(1,SIGDEC1PLUS,214),
  Reduce(2,ATEXP,7),
  Reduce(1,LAB,164),
  Reduce(1,LAB,163),
  Reduce(2,DEC1,63),
  Reduce(1,SYMLIST,156),
  Reduce(1,SYM,171),
  Reduce(1,SYM,170),
  Reduce(2,SYMLIST,157),
  Reduce(3,DEC1,64),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,107),Shift),
  Reduce(1,ATPAT,107),
  Reduce(1,PAT,128),
  Reduce(1,ATPAT,105),
  Reduce(1,ATPAT,104),
  Reduce(1,OPVARDEF,177),
  Reduce(1,MATCH,44),
  Reduce(2,EXP,42),
  Reduce(0,OPTTYPE,82),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,106),Shift),
  Resolve[Reduce(1,ATPAT,106),Shift],
  Reduce(1,ATPAT,106),
  Reduce(1,VARDEF,176),
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,176),Reduce(1,LONGVAR,165)),
  Reduce(1,VAR,175),
  Reduce(3,MRULE,45),
  Reduce(1,DEC,47),
d359 2
a360 10
  Reduce(1,DATBIND,92),
  Reduce(1,ABSDATBIND,59),
  Reduce(1,TYVARSEQ,88),
  Reduce(1,TYVARLIST,90),
  Reduce(3,TYVARSEQ,89),
  Reduce(3,TYVARLIST,91),
  Reduce(1,TYPBIND,84),
  Reduce(1,TYCON,186),
  Reduce(1,TY,140),
  Reduce(4,TYPBIND1,86),
d363 2
a365 4
  Reduce(2,TY,137),
  Reduce(1,TYLIST,144),
  Reduce(3,TYLIST,145),
  Reduce(5,TYSEQ,143),
d367 3
a369 2
  Reduce(1,STAR,187),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,187),Reduce(1,LONGTYCON,168)),
a371 1
  Reduce(3,TY,141),
d374 3
d380 4
d385 30
a414 6
  Reduce(3,TY,142),
  Reduce(3,TYPBIND,85),
  Reduce(7,DEC1,58),
  Reduce(5,DEC1,57),
  Reduce(3,DATBIND,93),
  Reduce(4,DATBIND1,94),
d416 5
a420 4
  Reduce(1,OPCONDEF,181),
  Reduce(1,CONBIND,95),
  Reduce(1,CONDEF,180),
  Reduce(2,CONBIND1,97),
d422 25
a446 8
  Reduce(3,CONBIND,96),
  Reduce(2,OPCONDEF,182),
  Reduce(1,VALBIND,69),
  Reduce(2,DEC1,52),
  Reduce(3,VALBIND,70),
  Reduce(3,VALBIND1,73),
  Reduce(2,ATEXP,10),
  Reduce(1,EXPSEQ,23),
d451 1
a451 1
  Reduce(2,APPEXP,28),
d453 18
a470 9
  Reduce(1,EXPLIST,21),
  Reduce(3,ATEXP,12),
  Reduce(3,EXPLIST2,17),
  Reduce(3,EXP,35),
  Reduce(3,EXP,36),
  Reduce(3,EXP,34),
  Reduce(3,EXP,37),
  Reduce(2,ATPAT,112),
  Reduce(3,ATPAT,116),
a472 1
  Reduce(3,PAT,132),
d474 2
a475 3
  Reduce(2,ATPAT,114),
  Reduce(3,ATPAT,115),
  Reduce(3,PATLIST2,121),
a478 1
  Reduce(2,OPTTYPE,83),
a479 1
  Reduce(2,OPVARDEF,178),
d481 4
d486 2
a487 2
  Reduce(3,PATROW1,125),
  Reduce(3,ATPAT,110),
d490 1
d492 1
d494 8
a501 5
  Reduce(3,PATLIST2,122),
  Reduce(4,PAT,133),
  Reduce(3,ATPAT,113),
  Reduce(3,MATCH,43),
  Reduce(2,EXP,38),
d503 1
a506 1
  Reduce(6,EXP,39),
d508 3
a510 2
  Reduce(3,EXPROW,25),
  Reduce(3,ATEXP,8),
d512 1
a512 1
  Reduce(4,EXP,41),
a514 1
  Reduce(3,ATEXP,13),
d516 9
a524 1
  Reduce(3,ATEXP,15),
d527 2
d530 15
a544 2
  Reduce(3,DEC,48),
  Reduce(3,DEC0,50),
d546 3
a548 3
  Reduce(1,LONGIDLIST,153),
  Reduce(2,LONGIDLIST,152),
  Reduce(2,DEC1,67),
d551 1
a551 2
  Reduce(1,OPEXCONDEF,184),
  Reduce(1,EXCONDEF,183),
d554 1
a554 2
  Reduce(2,OPEXCONDEF,185),
  Reduce(3,EXBIND,99),
a556 1
  Reduce(5,DEC1,61),
d559 3
d563 1
a563 1
  Reduce(1,ATPAT1,120),
a564 5
  Reduce(2,DEC1,53),
  Reduce(1,FVALBIND,74),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,128)),
  Reduce(1,PATVAR,179),
  Reduce(5,BIN_ATPAT,118),
d566 1
d570 1
a570 1
  Reduce(3,FVALLIST,77),
d572 3
a574 1
  Reduce(4,FVAL,80),
d576 23
a598 6
  Reduce(3,DEC,49),
  Reduce(3,DEC0,51),
  Reduce(5,ATEXP,14),
  Reduce(4,EXP,40),
  Reduce(1,STRDEC,194),
  Reduce(5,STRDEC1,206),
d600 3
a602 63
  Reduce(1,STRBIND,207),
  Reduce(1,STRID,174),
  Reduce(3,STRBIND,208),
  Reduce(1,STRUCT_START,193),
  Reduce(3,STRBIND1,210),
  Reduce(1,FUNID,172),
  Reduce(1,STREXP,189),
  Reduce(4,STREXP,191),
  Reduce(5,STREXP,192),
  Reduce(3,STREXP,188),
  Reduce(4,STREXP,190),
  Reduce(1,SIGEXP,212),
  Reduce(1,SIG_START,213),
  Reduce(1,SIGID,173),
  Reduce(1,SPEC,219),
  Reduce(3,SIGEXP,211),
  Reduce(2,SPEC1,224),
  Reduce(5,VALDESC,241),
  Reduce(3,VALDESC,240),
  Reduce(1,TYPDESC,242),
  Reduce(2,SPEC1,225),
  Reduce(3,TYPDESC,243),
  Reduce(2,TYPDESC1,244),
  Reduce(1,STRDESC,254),
  Reduce(2,SPEC1,229),
  Reduce(3,STRDESC,255),
  Reduce(3,STRDESC1,256),
  Reduce(1,SIGIDLIST,238),
  Reduce(2,SPEC1,233),
  Reduce(2,SIGIDLIST,239),
  Reduce(2,SPEC1,232),
  Reduce(2,SPEC1,234),
  Reduce(3,SPEC1,235),
  Reduce(1,EXDESC,251),
  Reduce(2,SPEC1,228),
  Reduce(3,EXDESC,252),
  Reduce(2,EXDESC1,253),
  Reduce(3,SPEC,221),
  Reduce(3,SPEC0,223),
  Reduce(1,DATDESC,245),
  Reduce(2,SPEC1,227),
  Reduce(3,DATDESC,246),
  Reduce(1,CONDESC,248),
  Reduce(4,DATDESC1,247),
  Reduce(3,CONDESC,249),
  Reduce(2,CONDESC1,250),
  Reduce(5,SPEC1,231),
  Reduce(1,SHAREQ1,259),
  Reduce(2,SPEC1,230),
  Reduce(1,SHAREQ,257),
  Reduce(1,LONGSTRID,169),
  Reduce(2,SHAREQ1,260),
  Reduce(3,LONGTYCONEQLIST,264),
  Reduce(3,LONGTYCONEQLIST,263),
  Reduce(3,SHAREQ,258),
  Reduce(3,LONGSTRIDEQLIST,262),
  Reduce(3,LONGSTRIDEQLIST,261),
  Reduce(2,SPEC1,226),
  Reduce(2,SPEC1,236),
  Reduce(3,SPEC1,237),
  Reduce(3,SPEC,220),
  Reduce(3,SPEC0,222),
  Reduce(5,STRBIND1,209),
d605 7
a611 19
  Reduce(2,STRDEC1,204),
  Reduce(3,STRDEC,195),
  Reduce(3,STRDEC0,197),
  Reduce(2,PROGRAM,284),
  Reduce(2,FUNDEC1,267),
  Reduce(1,FUNBIND,268),
  Reduce(1,FUNIDBIND,276),
  Reduce(3,FUNBIND1,271),
  Reduce(5,FUNBIND1,270),
  Reduce(4,STARTFUNBIND2,275),
  Reduce(6,STARTFUNBIND1,274),
  Reduce(3,FUNBIND,269),
  Reduce(3,FUNBIND1,273),
  Reduce(5,FUNBIND1,272),
  Reduce(2,SIGDEC1,216),
  Reduce(5,SIGBIND,218),
  Reduce(3,SIGBIND,217),
  Reduce(2,STRDEC1PLUS0,201),
  Reduce(2,FUNDEC1PLUS,266),
d613 3
a615 3
  Reduce(3,PROGRAM,283),
  Reduce(2,TOPDEC,281),
  Reduce(2,SIGDEC1PLUS,215),
a708 1
  MAGICCLOSE, 
d774 1
@


1.20
log
@Adding CHAR to grammar
@
text
@d4 3
d302 1
d315 1
a315 1
Reduce(0,DECSEP,286),
a316 1
  Reduce(1,OPLONGVAR,165),
d319 2
d322 3
a324 2
  Reduce(0,EXPLIST,19),
  Reduce(1,PROGRAM,285),
a325 1
  Reduce(1,START_LET,16),
d327 1
a327 1
  Reduce(1,STRDEC1,202),
d329 6
a334 1
  Reduce(1,TOPDEC,277),
d336 5
a340 5
  Reduce(1,TOPDEC,279),
  Reduce(1,SIGDEC1PLUS,213),
  Accept,
  Reduce(1,TOPDEC,276),
  Reduce(1,FUNDEC1PLUS,264),
d343 1
a343 4
  Reduce(1,APPEXP,27),
  Reduce(1,TOPDEC1,281),
  Reduce(1,STRDEC1PLUS,198),
  Reduce(1,ATEXP,1),
d345 29
a373 4
  Reduce(1,TOPDEC,278),
  Reduce(1,EXP,33),
  Reduce(1,LONGVAR,164),
  Reduce(1,ATEXP,2),
d377 3
d381 1
a381 1
  Reduce(1,TYCON,185),
a382 1
  Reduce(1,LONGTYCON,167),
d386 5
a390 7
  Reduce(2,TY,136),
  Reduce(1,LAB,162),
  Reduce(1,LAB,163),
  Reduce(3,TY,135),
  Reduce(5,TYROW,149),
  Reduce(1,STAR,186),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,186),Reduce(1,LONGTYCON,167)),
d392 2
a396 4
  Reduce(2,TY,137),
  Reduce(1,TYLIST,144),
  Reduce(3,TYLIST,145),
  Reduce(5,TYSEQ,143),
d399 4
a403 4
  Reduce(3,TYROW,148),
  Reduce(1,TYVARLIST,90),
  Reduce(3,TYVARSEQ,89),
  Reduce(3,TYVARLIST,91),
d405 12
a416 4
  Reduce(1,DEC,47),
  Reduce(2,DECSEP,46),
  Reduce(1,VARDEF,175),
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,175),Reduce(1,LONGVAR,164)),
a417 7
  Reduce(0,OPTTYPE,82),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,106),Shift),
  Resolve[Reduce(1,ATPAT,106),Shift],
  Reduce(1,ATPAT,106),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,107),Shift),
  Reduce(1,ATPAT,107),
  Reduce(1,ATPAT,104),
a418 33
  Reduce(1,OPVARDEF,176),
  Reduce(1,ATPAT,105),
  Reduce(1,PAT,128),
  Reduce(2,ATPAT,111),
  Reduce(1,SYM,169),
  Reduce(1,PATROW,123),
  Reduce(1,SYM,170),
  Reduce(3,ATPAT,108),
  Reduce(3,PATROW,124),
  Reduce(5,ATPAT,109),
  Reduce(2,PATROW1,126),
  Reduce(2,OPTTYPE,83),
  Reduce(4,PATROW1,127),
  Reduce(2,OPLONGVAR,166),
  Reduce(2,OPVARDEF,177),
  Reduce(1,VAR,174),
  Reduce(3,PAT,132),
  Reduce(3,PAT,131),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,131),Shift),
  Reduce(2,ATPAT,114),
  Reduce(3,ATPAT,115),
  Reduce(3,PATLIST2,121),
  Reduce(2,PAT,129),
  Reduce(2,ATPAT,112),
  Reduce(3,ATPAT,116),
  Reduce(2,PAT,130),
  Reduce(4,PAT,133),
  Reduce(3,ATPAT,113),
  Reduce(3,PATLIST2,122),
  Reduce(3,ATPAT,117),
  Reduce(3,PATROW1,125),
  Reduce(3,ATPAT,110),
  Reduce(2,VALBIND,72),
a419 1
  Reduce(4,VALBIND,71),
d421 2
a422 6
  Reduce(2,ATEXP,6),
  Reduce(3,ATEXP,5),
  Reduce(5,EXPROW,26),
  Reduce(2,EXP,38),
  Reduce(2,ATEXP,4),
  Reduce(2,ATEXP,7),
d427 1
d430 1
a431 4
  Reduce(2,EXP,42),
  Reduce(1,MATCH,44),
  Reduce(3,MATCH,43),
  Reduce(3,MRULE,45),
d433 1
d436 32
a467 2
  Reduce(3,EXP,36),
  Reduce(1,EXPSEQ,23),
d469 3
a471 4
  Reduce(6,ATEXP,9),
  Reduce(2,ATEXP,10),
  Reduce(3,ATEXP,11),
  Reduce(3,ATEXP,15),
d473 1
a473 3
  Reduce(2,APPEXP,28),
  Reduce(4,EXP,40),
  Reduce(3,ATEXP,13),
d476 22
a497 5
  Reduce(3,ATEXP,8),
  Reduce(5,ATEXP,14),
  Reduce(4,EXP,41),
  Reduce(3,ATEXP,12),
  Reduce(3,EXPROW,25),
a498 1
  Reduce(2,DEC1,54),
a499 1
  Reduce(1,SYMLIST,156),
a500 1
  Reduce(2,SYMLIST,157),
d502 1
a502 1
  Reduce(1,FVALBIND,74),
d505 1
a505 4
  Reduce(1,ATPAT1,120),
  Reduce(3,FVALBIND,75),
  Reduce(6,FVAL,79),
  Reduce(3,FVALLIST,77),
d507 1
a507 1
  Reduce(1,PATVAR,178),
d509 1
d513 1
d516 1
a516 6
  Reduce(1,LONGIDLIST,153),
  Reduce(2,DEC1,62),
  Reduce(2,LONGIDLIST,152),
  Reduce(2,DEC1,63),
  Reduce(3,DEC1,64),
  Reduce(2,DEC1,67),
d519 15
a533 42
  Reduce(1,EXCONDEF,182),
  Reduce(1,EXBIND,98),
  Reduce(0,OPTOFTYPE,102),
  Reduce(2,DEC1,60),
  Reduce(1,OPEXCONDEF,183),
  Reduce(2,OPEXCONDEF,184),
  Reduce(3,EXBIND,99),
  Reduce(2,EXBIND1,100),
  Reduce(3,EXBIND1,101),
  Reduce(2,OPTOFTYPE,103),
  Reduce(2,DEC1,55),
  Reduce(3,DATBIND,93),
  Reduce(1,CONDEF,179),
  Reduce(1,CONBIND,95),
  Reduce(4,DATBIND1,94),
  Reduce(1,OPCONDEF,180),
  Reduce(3,CONBIND,96),
  Reduce(2,OPCONDEF,181),
  Reduce(2,CONBIND1,97),
  Reduce(4,DEC1,56),
  Reduce(3,DEC,48),
  Reduce(3,DEC0,50),
  Reduce(7,DEC1,58),
  Reduce(5,DEC1,57),
  Reduce(2,FUNDEC1PLUS,265),
  Reduce(1,FUNIDBIND,275),
  Reduce(2,FUNDEC1,266),
  Reduce(1,FUNID,171),
  Reduce(1,FUNBIND,267),
  Reduce(1,STREXP,188),
  Reduce(1,STRUCT_START,192),
  Reduce(3,FUNBIND1,270),
  Reduce(1,STRDEC,193),
  Reduce(3,STRDEC,194),
  Reduce(3,STRDEC0,196),
  Reduce(1,STRBIND,206),
  Reduce(1,STRID,173),
  Reduce(2,STRDEC1,203),
  Reduce(3,STRBIND,207),
  Reduce(3,STRBIND1,209),
  Reduce(3,STREXP,187),
  Reduce(4,STREXP,189),
d535 9
a543 5
  Reduce(1,SIGID,172),
  Reduce(1,SIGEXP,211),
  Reduce(1,SIG_START,212),
  Reduce(1,SPEC,218),
  Reduce(3,SIGEXP,210),
d545 13
a557 11
  Reduce(1,TYPDESC,241),
  Reduce(2,TYPDESC1,243),
  Reduce(3,TYPDESC,242),
  Reduce(2,SPEC1,223),
  Reduce(5,VALDESC,240),
  Reduce(3,VALDESC,239),
  Reduce(5,SPEC1,230),
  Reduce(2,SPEC1,224),
  Reduce(2,SPEC1,235),
  Reduce(3,SPEC1,236),
  Reduce(1,STRDESC,253),
d559 18
a576 16
  Reduce(3,STRDESC,254),
  Reduce(3,STRDESC1,255),
  Reduce(1,SIGIDLIST,237),
  Reduce(2,SPEC1,232),
  Reduce(2,SIGIDLIST,238),
  Reduce(2,SPEC1,231),
  Reduce(2,SPEC1,233),
  Reduce(3,SPEC1,234),
  Reduce(3,SPEC,219),
  Reduce(3,SPEC0,221),
  Reduce(1,SHAREQ1,258),
  Reduce(2,SPEC1,229),
  Reduce(1,LONGSTRID,168),
  Reduce(1,SHAREQ,256),
  Reduce(2,SHAREQ1,259),
  Reduce(3,LONGTYCONEQLIST,262),
d578 2
a579 2
  Reduce(3,LONGSTRIDEQLIST,260),
  Reduce(3,SHAREQ,257),
a580 4
  Reduce(2,SPEC1,227),
  Reduce(1,EXDESC,250),
  Reduce(2,EXDESC1,252),
  Reduce(3,EXDESC,251),
d582 2
a583 6
  Reduce(1,DATDESC,244),
  Reduce(3,DATDESC,245),
  Reduce(4,DATDESC1,246),
  Reduce(1,CONDESC,247),
  Reduce(2,CONDESC1,249),
  Reduce(3,CONDESC,248),
d586 3
a588 1
  Reduce(5,STRBIND1,208),
d592 14
a605 10
  Reduce(5,STRDEC1,205),
  Reduce(5,STREXP,191),
  Reduce(5,FUNBIND1,269),
  Reduce(4,STARTFUNBIND2,274),
  Reduce(6,STARTFUNBIND1,273),
  Reduce(3,FUNBIND,268),
  Reduce(3,FUNBIND1,272),
  Reduce(5,FUNBIND1,271),
  Reduce(2,STRDEC1PLUS0,200),
  Reduce(2,TOPDEC,280),
d607 6
a612 7
  Reduce(2,SIGDEC1PLUS,214),
  Reduce(2,SIGDEC1,215),
  Reduce(5,SIGBIND,217),
  Reduce(3,SIGBIND,216),
  Reduce(2,PROGRAM,284),
  Reduce(3,PROGRAM,282),
  Reduce(2,PROGRAM,283)
d799 2
a800 1
  WITHTYPE
d869 1
@


1.19
log
@Changing use of cast
@
text
@d4 3
d132 1
d311 1
a311 1
Reduce(0,DECSEP,285),
d313 11
a323 6
  Reduce(1,ATEXP,2),
  Reduce(1,TOPDEC,278),
  Reduce(1,PROGRAM,284),
  Reduce(1,STRDEC1PLUS,198),
  Reduce(1,STRDEC1PLUS,197),
  Reduce(1,STRDEC1,201),
d325 3
a327 2
  Reduce(1,LONGVAR,163),
  Reduce(1,SCON,160),
d329 4
a332 2
  Reduce(1,TOPDEC,275),
  Reduce(0,TYVARSEQ,87),
d334 2
d338 1
d340 10
a349 37
  Reduce(1,START_LOCAL,68),
  Reduce(1,ATEXP,3),
  Reduce(1,SCON,158),
  Reduce(1,TOPDEC,276),
  Reduce(1,INFEXP,29),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,INFEXP,29),Shift),
  Reduce(1,OPLONGVAR,164),
  Reduce(1,START_LET,16),
  Reduce(1,TOPDEC1,280),
  Reduce(1,SIGDEC1PLUS,212),
  Reduce(0,EXPLIST,19),
  Reduce(1,FUNDEC1PLUS,263),
  Reduce(1,OPVARDEF,175),
  Reduce(1,MATCH,44),
  Reduce(1,ATPAT,105),
  Reduce(1,PAT,128),
  Reduce(1,VARDEF,174),
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,174),Reduce(1,LONGVAR,163)),
  Reduce(0,OPTTYPE,82),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,106),Shift),
  Resolve[Reduce(1,ATPAT,106),Shift],
  Reduce(1,ATPAT,106),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,107),Shift),
  Reduce(1,ATPAT,107),
  Reduce(1,ATPAT,104),
  Reduce(2,EXP,42),
  Reduce(3,MATCH,43),
  Reduce(1,VAR,173),
  Reduce(3,MRULE,45),
  Reduce(3,EXP,37),
  Reduce(2,OPVARDEF,176),
  Reduce(2,OPLONGVAR,165),
  Reduce(2,PAT,129),
  Reduce(2,ATPAT,114),
  Reduce(3,ATPAT,115),
  Reduce(3,PAT,131),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,131),Shift),
d352 7
a358 3
  Reduce(1,TY,140),
  Reduce(1,LONGTYCON,166),
  Reduce(3,PAT,132),
a359 3
  Reduce(1,STAR,185),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,185),Reduce(1,LONGTYCON,166)),
  Reduce(3,TY,141),
d362 1
d369 1
a369 5
  Reduce(2,TY,136),
  Reduce(1,LAB,161),
  Reduce(1,LAB,162),
  Reduce(3,TY,135),
  Reduce(5,TYROW,149),
d371 20
a390 6
  Reduce(3,TY,142),
  Reduce(2,ATPAT,112),
  Reduce(3,ATPAT,116),
  Reduce(3,PATLIST2,121),
  Reduce(2,PAT,130),
  Reduce(4,PAT,133),
a391 1
  Reduce(1,SYM,168),
d394 1
a394 4
  Reduce(3,PATROW1,125),
  Reduce(2,PATROW1,126),
  Reduce(4,PATROW1,127),
  Reduce(2,OPTTYPE,83),
d398 17
a414 1
  Reduce(3,ATPAT,110),
d418 3
a420 16
  Reduce(3,EXP,36),
  Reduce(3,EXP,35),
  Reduce(3,EXP,34),
  Reduce(4,EXP,41),
  Reduce(2,ATEXP,4),
  Reduce(1,EXPLIST,21),
  Reduce(1,EXPLIST,20),
  Reduce(3,EXPLIST2,18),
  Reduce(1,DEC,47),
  Reduce(2,DECSEP,46),
  Reduce(1,SYMLIST,156),
  Reduce(2,DEC1,63),
  Reduce(3,DEC1,64),
  Reduce(2,SYMLIST,157),
  Reduce(1,VALBIND,69),
  Reduce(2,DEC1,52),
d422 1
a423 7
  Reduce(3,ATEXP,8),
  Reduce(6,EXP,39),
  Reduce(2,ATEXP,10),
  Reduce(1,EXPSEQ,23),
  Reduce(3,ATEXP,15),
  Reduce(3,ATEXP,13),
  Reduce(2,APPEXP,28),
a426 1
  Reduce(4,EXP,40),
d428 1
d430 1
a431 1
  Reduce(1,INFVAR,31),
d434 21
a454 1
  Reduce(3,EXPROW,25),
d457 32
a488 5
  Reduce(3,ATEXP,11),
  Reduce(3,EXPLIST2,17),
  Reduce(6,ATEXP,9),
  Reduce(4,VALBIND,71),
  Reduce(2,VALBIND,72),
d492 1
a492 4
  Reduce(2,DEC1,62),
  Reduce(1,LONGIDLIST,153),
  Reduce(2,LONGIDLIST,152),
  Reduce(1,EXCONDEF,181),
d496 2
a497 1
  Reduce(1,OPEXCONDEF,182),
d500 1
a501 4
  Reduce(3,EXBIND1,101),
  Reduce(2,OPEXCONDEF,183),
  Reduce(1,TYVARSEQ,88),
  Reduce(1,DATBIND,92),
a502 8
  Reduce(4,DEC1,56),
  Reduce(1,TYPBIND,84),
  Reduce(1,TYCON,184),
  Reduce(4,TYPBIND1,86),
  Reduce(1,TYVARLIST,90),
  Reduce(3,TYVARSEQ,89),
  Reduce(3,TYVARLIST,91),
  Reduce(3,TYPBIND,85),
d504 1
d507 3
a509 3
  Reduce(1,OPCONDEF,179),
  Reduce(1,CONDEF,178),
  Reduce(2,OPCONDEF,180),
d511 3
a513 22
  Reduce(3,CONBIND,96),
  Reduce(5,DEC1,61),
  Reduce(2,DEC1,65),
  Reduce(3,DEC1,66),
  Reduce(2,DEC1,54),
  Reduce(1,FVALLIST,76),
  Reduce(2,DEC1,53),
  Reduce(1,ATPAT1,120),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,119),Shift),
  Reduce(1,FVALBIND,74),
  Reduce(6,FVAL,79),
  Reduce(3,FVALLIST,77),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,128)),
  Reduce(1,PATVAR,177),
  Reduce(5,BIN_ATPAT,118),
  Reduce(1,ATPATLIST,150),
  Reduce(2,ATPATLIST,151),
  Reduce(5,FVAL,78),
  Reduce(4,FVAL,80),
  Reduce(5,FVAL,81),
  Reduce(3,FVALBIND,75),
  Reduce(1,ABSDATBIND,59),
d516 24
a539 38
  Reduce(3,DEC,48),
  Reduce(3,DEC0,50),
  Reduce(5,ATEXP,14),
  Reduce(3,ATEXP,12),
  Reduce(2,SIGDEC1PLUS,213),
  Reduce(2,SIGDEC1,214),
  Reduce(1,SIGID,171),
  Reduce(1,SIG_START,211),
  Reduce(1,SIGEXP,210),
  Reduce(3,SIGBIND,215),
  Reduce(1,SPEC,217),
  Reduce(3,SIGEXP,209),
  Reduce(2,SPEC1,231),
  Reduce(1,SIGIDLIST,236),
  Reduce(2,SIGIDLIST,237),
  Reduce(2,SPEC1,232),
  Reduce(3,SPEC1,233),
  Reduce(3,SPEC,218),
  Reduce(3,SPEC0,220),
  Reduce(2,SPEC1,222),
  Reduce(5,VALDESC,239),
  Reduce(3,VALDESC,238),
  Reduce(1,SHAREQ,255),
  Reduce(1,SHAREQ1,257),
  Reduce(2,SPEC1,228),
  Reduce(1,LONGSTRID,167),
  Reduce(3,SHAREQ,256),
  Reduce(3,LONGSTRIDEQLIST,260),
  Reduce(3,LONGSTRIDEQLIST,259),
  Reduce(2,SHAREQ1,258),
  Reduce(3,LONGTYCONEQLIST,262),
  Reduce(3,LONGTYCONEQLIST,261),
  Reduce(2,SPEC1,230),
  Reduce(2,SPEC1,226),
  Reduce(1,EXDESC,249),
  Reduce(2,EXDESC1,251),
  Reduce(3,EXDESC,250),
  Reduce(1,DATDESC,243),
d541 7
a547 5
  Reduce(3,DATDESC,244),
  Reduce(1,CONDESC,246),
  Reduce(4,DATDESC1,245),
  Reduce(3,CONDESC,247),
  Reduce(2,CONDESC1,248),
d549 12
a560 12
  Reduce(1,TYPDESC,240),
  Reduce(2,TYPDESC1,242),
  Reduce(3,TYPDESC,241),
  Reduce(5,SPEC1,229),
  Reduce(2,SPEC1,234),
  Reduce(3,SPEC1,235),
  Reduce(2,SPEC1,223),
  Reduce(2,SPEC1,227),
  Reduce(1,STRID,172),
  Reduce(1,STRDESC,252),
  Reduce(3,STRDESC1,254),
  Reduce(3,STRDESC,253),
d563 35
a597 35
  Reduce(5,SIGBIND,216),
  Reduce(1,FUNID,170),
  Reduce(1,FUNIDBIND,274),
  Reduce(2,FUNDEC1,265),
  Reduce(1,FUNBIND,266),
  Reduce(6,STARTFUNBIND1,272),
  Reduce(4,STARTFUNBIND2,273),
  Reduce(3,FUNBIND,267),
  Reduce(1,STRUCT_START,191),
  Reduce(3,FUNBIND1,271),
  Reduce(1,STREXP,187),
  Reduce(1,STRDEC,192),
  Reduce(3,STREXP,186),
  Reduce(1,STRBIND,205),
  Reduce(2,STRDEC1,203),
  Reduce(3,STRBIND,206),
  Reduce(3,STRBIND1,208),
  Reduce(4,STREXP,189),
  Reduce(4,STREXP,188),
  Reduce(5,STRBIND1,207),
  Reduce(3,STRDEC,194),
  Reduce(3,STRDEC0,196),
  Reduce(5,STRDEC1,204),
  Reduce(3,STRDEC,193),
  Reduce(3,STRDEC0,195),
  Reduce(2,STRDEC1,202),
  Reduce(5,STREXP,190),
  Reduce(5,FUNBIND1,270),
  Reduce(3,FUNBIND1,269),
  Reduce(5,FUNBIND1,268),
  Reduce(2,TOPDEC,279),
  Reduce(2,PROGRAM,283),
  Reduce(3,PROGRAM,281),
  Reduce(2,FUNDEC1PLUS,264),
  Reduce(2,STRDEC1PLUS0,199),
d599 9
a607 1
  Reduce(2,PROGRAM,282)
d628 1
d808 1
@


1.18
log
@Adding get_all_actions
@
text
@d4 3
d976 2
a977 2
 val int_to_gsym : int -> GSymbol = MLWorks.Internal.Value.cast (fn x => x)
 val gsym_to_int : GSymbol -> int = MLWorks.Internal.Value.cast (fn x => x)
@


1.17
log
@Fixing reading of parser tables
@
text
@d4 3
d1089 1
a1089 1
     fun lookup_aux (n,m) =
d1097 1
a1097 1
           if x < i then lookup_aux (t+1,m)
d1099 1
a1099 1
           else lookup_aux (n,t)
d1102 1
a1102 1
     lookup_aux (0,vector_length indices)
d1205 7
@


1.16
log
@Improvement to parsing table representation
Unsafe array operations for binary search
@
text
@d4 4
d64 1
a64 2
functor LRbasics (val gotofile : string
                  val actionfile :string
d69 21
@


1.15
log
@Changed tables to use smaller assoc lists.
@
text
@d4 3
d54 2
d762 70
d944 4
a947 8
fun convert_map (dom_fn,ran_fn) mapping =
  let
    fun convert_row row = map (fn (x,y) => (dom_fn x, ran_fn y)) row
    val result = map convert_row mapping
  in
    output (std_out,"Uncompressed size " ^ MLWorks.Integer.makestring (Lists.length (Lists.reducer (op @@) (result,[]))) ^ " items\n");
    result
  end
d949 1
a949 4
 fun convert_symbol s =
   if (s = ~1)
     then EOF
   else Array.sub (symbol_array,s)
d951 6
a956 10
 fun convert_action a =
   if a = ~1 then NoAction
     else
       Array.sub (action_array,a)

 fun id x = x
 fun make_gotos goto_map= Array.arrayoflist (convert_map (convert_symbol,id) goto_map)
 fun make_actions action_map = Array.arrayoflist (convert_map (convert_symbol,id) action_map)
 val goto_array = make_gotos (parse_table_file gotofile)
 val action_array = make_actions (parse_table_file actionfile)
d958 3
a960 1
 val length = (Array.length symbol_array) + 1
d962 2
a963 9
 fun arrayify_alist (alist,default) =
   let val a = Array.array (length,default)
   in
     map (fn (key,value) => Array.update(a,MLWorks.Internal.Value.cast key,value))
     alist;
     a
   end
   
 fun arrayify_array (array,default) =
d965 12
a976 8
     val a = Array.array (Array.length array,Array.array(0,default))
     fun aux 0 = ()
       | aux n =
         let val n' = n-1
         in
           Array.update(a,n',arrayify_alist(Array.sub(array,n'),default));
           aux n'
         end
d978 3
a980 2
     aux (Array.length array);
     a
d984 1
d1021 1
a1021 91
(* This doesn't seem to acheive much when we use association lists *)
fun compress_goto_table gotos =
  let
    exception NoArray
    fun find_one (array,[]) = raise NoArray
      | find_one (array,a::l) =
        if can_merge(array,a)
          then a
        else find_one (array,l)

    fun aux (0,arrays) =
      (output (std_out,"Goto table size = " ^ MLWorks.Integer.makestring(Lists.length arrays) ^ "\n");
       ())
      | aux (n,arrays) =
      let
        val n' = n-1
        val this_one = Array.sub(gotos,n')
      in
        let val old_one = find_one(this_one,arrays)
        in
          Array.update(gotos,n',merge(old_one,this_one));
          aux(n',arrays)
        end
        handle NoArray =>
          aux(n',this_one::arrays)
      end
  in
    aux(Array.length gotos,[])
  end
        
exception NoUniqueEntry   
fun has_unique_entry [] = raise NoUniqueEntry
  | has_unique_entry ((_,a) :: l) =
    let fun is_unique [] = true
      | is_unique ((_,a')::l) =
          a = a' andalso is_unique l
    in
      if is_unique l then a else raise NoUniqueEntry
    end

datatype action_entry =
  UNIQUE of int
  | ASSOC of (GSymbol * int) list
  | ARRAY of int Array.array
    
val assoc_threshold = 100

fun is_reduction n =
  case (convert_action n) of
    Reduce _ => true
  | _ => false

(* Unique entry optimization interacts badly with error recovery *)

fun convert_row row =
  (* row is still an assoc list *)
(*  let val a = has_unique_entry row
  in
    if is_reduction a
      then UNIQUE a
    else raise NoUniqueEntry
  end
  handle NoUniqueEntry =>
*)
    if Lists.length row > assoc_threshold
      then ARRAY (arrayify_alist(row,~1))
    else ASSOC row

fun print_action_stats (actions) =
  let fun aux (0,arrays,uniques,assocs) =
    (output(std_out,MLWorks.Integer.makestring arrays ^ " arrays, " ^
            MLWorks.Integer.makestring uniques ^ " singletons, " ^
            MLWorks.Integer.makestring assocs ^ " assocs\n"))
        | aux (n,arrays,uniques,assocs) =
          let val n' = n-1
          in
            case Array.sub(actions,n') of
              UNIQUE _ => aux(n',arrays,uniques+1,assocs)
            | ASSOC _ => aux(n',arrays,uniques,assocs+1)
            | ARRAY _ => aux(n',arrays+1,uniques,assocs)
          end
  in
    aux (Array.length actions,0,0,0)
  end

 val action_table = MLWorks.ExtendedArray.map convert_row action_array
 val _ = print_action_stats action_table
 val goto_table = arrayify_array (goto_array, ~1)
 val _ = output(std_out,"Goto table has " ^ MLWorks.Integer.makestring(Array.length goto_table) ^ " rows\n")

 val _ = compress_goto_table goto_table
a1022 2
 val int_to_gsym : int -> GSymbol = MLWorks.Internal.Value.cast

d1026 1
a1026 1
     fun aux (n,acc) =
d1034 2
a1035 2
             then aux (n+1,acc)
           else aux (n+1,(int_to_gsym n,entry)::acc)
d1038 1
a1038 1
     aux (0,[])
d1041 9
a1049 2
(* We could probably just use the original association list, with duplicates shared *)
 val assoc_goto_table = MLWorks.ExtendedArray.map row_to_assoc goto_table
d1051 1
a1051 1
 fun compress_assoc_table table =
d1053 12
a1064 10
     val len = Array.length table
     exception NoRow
     fun find_row (row,[]) = raise NoRow
       | find_row (row,row'::rest) =
         if row = row' then row' else find_row (row,rest)
     fun aux (n,assocs) =
       if n = len 
         then 
           (output (std_out,"Assoc table has " ^ MLWorks.Integer.makestring (Lists.length assocs) ^ " rows\n");
            output (std_out,"Total size " ^ MLWorks.Integer.makestring (Lists.length (Lists.reducer (op @@) (assocs,[]))) ^ " items\n"))
d1067 2
a1068 1
           val this_row = Array.sub (table,n)
d1070 3
a1072 8
           let
             val old_row = find_row (this_row,assocs)
           in
             Array.update (table,n,old_row);
             aux (n+1,assocs)
           end
           handle NoRow =>
             aux (n+1,this_row::assocs)
d1075 1
a1075 1
     aux (0,[])
d1078 25
a1102 1
 val _ = compress_assoc_table assoc_goto_table
d1104 16
a1119 5
 fun print_goto_table table =
   MLWorks.ExtendedArray.map
   (fn a => (MLWorks.ExtendedArray.map (fn x => output(std_out,MLWorks.Integer.makestring x ^ " ")) a;
             output(std_out,"\n")))
   table
d1121 1
a1121 3
(*
 val _ = print_goto_table goto_table
*)
d1123 8
a1130 4
(*
  val _ = output(std_out, "Actions:\n")
  val _ = print_goto_table action_table
*)   
d1132 8
a1142 12
  fun gassoc (gsym:GSymbol,[]) = ~1
    | gassoc (gsym:GSymbol,(gsym',a)::l) =
      if gsym = gsym' then a
      else
        gassoc (gsym,l)

  fun lookup_goto (state,gsym) =
    gassoc (gsym,Array.sub(assoc_goto_table,state))
(*
    Array.sub (Array.sub(goto_table,state),MLWorks.Internal.Value.cast gsym)
*)

d1144 3
a1146 1
    let val state = lookup_goto (state,gsym)
d1148 1
a1148 1
      if state = ~1
d1150 1
a1150 1
      else state
d1153 9
d1165 5
a1169 16
    case (Array.sub(action_table,state)) of
      UNIQUE n => raise GetPossibleSymbols
    | ASSOC alist => map #1 alist
    | ARRAY array =>
        let
          fun accumulate (0,acc) = acc
            | accumulate (n,acc) =
              let val entry = Array.sub(array,n-1)
              in
                if entry = ~1
                  then accumulate(n-1,acc)
                else accumulate(n-1,((MLWorks.Internal.Value.cast (n-1)) : GSymbol)::acc)
              end
        in
          accumulate (Array.length array,[])
        end
d1173 1
a1173 13
      val action_number =
        case (Array.sub(action_table,state)) of
          UNIQUE n => n
        | ASSOC alist =>
            let fun gassoc (gsym:GSymbol,[]) = ~1
                  | gassoc (gsym:GSymbol,(gsym',a)::l) =
                    if gsym = gsym' then a
                    else
                      gassoc (gsym,l)
            in
              gassoc (gsym,alist)
            end
        | ARRAY array => Array.sub (array,MLWorks.Internal.Value.cast gsym)
d1175 1
a1175 1
      convert_action action_number
a1179 69
fun token_string t =
  case t of
    EOF => "EOF"
  | ABSTYPE => "abstype"
  | AND => "and"
  | ANDALSO => "andalso"
  | ARROW => "->"
  | AS => "as"
  | BRA => "["
  | CASE => "case"
  | COLON => ":"
  | COMMA => ","
  | DARROW => "=>"
  | DATATYPE => "datatype"
  | DO => "do"
  | ELLIPSIS => "..."
  | ELSE => "else"
  | END => "end"
  | EQTYPE => "eqtype"
  | EQUAL => "="
  | EXCEPTION => "exception"
  | FN => "fn"
  | FUN => "fun"
  | FUNCTOR => "functor"
  | HANDLE => "handle"
  | HASH => "#"
  | IF => "if"
  | IN => "in"
  | INCLUDE => "include"
  | INFIX => "infix"
  | INFIXR => "infixr"
  | INTEGER => "INTEGER"
  | KET => "]"
  | LBRACE => "{"
  | LET => "let"
  | LOCAL => "local"
  | LONGID => "ID"
  | LPAR => "("
  | NONFIX => "nonfix"
  | OF => "of"
  | OP => "op"
  | OPEN => "open"
  | ORELSE => "orelse"
  | RAISE => "raise"
  | RBRACE => "}"
  | REAL => "REAL"
  | REC => "rec"
  | REQUIRE => "require"
  | RPAR => ")"
  | SEMICOLON => ";"
  | SHARING => "sharing"
  | SIG => "sig"
  | SIGNATURE => "signature"
  | STRING => "STRING"
  | STRUCT => "struct"
  | STRUCTURE => "structure"
  | THEN => "then"
  | TYPE => "type"
  | TYVAR => "TYVAR"
  | UNDERBAR => "_"
  | VAL => "val"
  | VBAR => "|"
  | WHILE => "while"
  | WITH => "with"
  | WITHTYPE => "withtype"
  | MAGICOPEN => "<<"
  | ABSTRACTION => "abstraction"
  | MAGICCLOSE => ">>"
  | _ => "*Non-terminal*"
@


1.14
log
@Incorporated bug fix.
@
text
@d4 3
d872 1
d874 2
a875 1
    map convert_row mapping
d956 1
d1001 1
a1001 1
val assoc_threshold = 5
d1008 2
d1043 1
a1043 1
 val goto_table = (arrayify_array (goto_array, ~1))
d1045 1
d1048 54
d1108 8
a1116 4
(* val _ = print_goto_table goto_table *)
(*  val _ = output(std_out, "Actions:\n")
  val _ = print_goto_table action_table *)
   
d1120 12
d1133 1
a1133 1
    let val state = Array.sub (Array.sub(goto_table,state),MLWorks.Internal.Value.cast gsym)
@


1.13
log
@Improved message for undefined constructors in patterns
,
@
text
@d4 4
d269 1
a269 1
Reduce(0,DECSEP,286),
d271 3
a273 1
  Reduce(1,APPEXP,27),
d275 2
a276 1
  Reduce(1,ATEXP,3),
d278 1
a278 2
  Reduce(1,ATEXP,1),
  Reduce(0,TYVARSEQ,87),
d280 1
d282 5
d288 2
a289 1
  Reduce(1,SCON,159),
a290 8
  Reduce(1,START_LET,16),
  Reduce(1,SCON,158),
  Reduce(1,SIGDEC1PLUS,212),
  Reduce(1,EXP,33),
  Reduce(1,TOPDEC,278),
  Reduce(1,PROGRAM,285),
  Reduce(1,STRDEC1PLUS,197),
  Reduce(1,STRDEC1,201),
d294 3
a296 3
  Reduce(1,TOPDEC1,281),
  Reduce(1,LONGVAR,163),
  Accept,
a298 9
  Reduce(1,ATEXP,2),
  Reduce(1,ATPAT,104),
  Reduce(0,OPTTYPE,82),
  Reduce(1,ATPAT,106),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,106),Shift),
  Resolve[Reduce(1,ATPAT,106),Shift],
  Reduce(2,EXP,42),
  Reduce(1,ATPAT,107),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,107),Shift),
d300 1
d305 12
a316 17
  Reduce(1,MATCH,44),
  Reduce(2,ATPAT,111),
  Reduce(1,SYM,169),
  Reduce(1,PATROW,123),
  Reduce(1,SYM,168),
  Reduce(1,LAB,161),
  Reduce(1,LAB,162),
  Reduce(2,PATROW1,126),
  Reduce(4,PATROW1,127),
  Reduce(2,ATPAT,114),
  Reduce(3,ATPAT,117),
  Reduce(3,PATLIST2,122),
  Reduce(2,PAT,129),
  Reduce(2,ATPAT,112),
  Reduce(3,ATPAT,113),
  Reduce(2,PAT,130),
  Reduce(4,PAT,133),
d319 6
a324 1
  Reduce(1,VAR,173),
a325 1
  Reduce(3,PAT,132),
a326 1
  Reduce(1,TY,134),
d328 2
a329 2
  Reduce(2,TY,136),
  Reduce(3,TYROW,148),
a330 3
  Reduce(3,TYTUPLE,146),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,146),Shift),
  Reduce(2,TY,138),
d332 1
a334 1
  Reduce(3,TY,141),
a336 1
  Reduce(3,TY,142),
d339 5
d346 3
a348 3
  Reduce(3,PAT,131),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,131),Shift),
  Reduce(2,OPTTYPE,83),
d351 6
a356 1
  Reduce(3,ATPAT,115),
d358 3
a360 1
  Reduce(3,ATPAT,110),
d364 9
a372 9
  Reduce(3,MATCH,43),
  Reduce(3,MRULE,45),
  Reduce(2,ATEXP,6),
  Reduce(3,EXPROW,25),
  Reduce(2,ATEXP,7),
  Reduce(1,INFVAR,31),
  Reduce(1,INFVAR,32),
  Reduce(3,INFEXP,30),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,INFEXP,30),Shift),
a374 1
  Reduce(3,ATEXP,12),
a375 5
  Reduce(3,EXP,36),
  Reduce(3,EXP,35),
  Reduce(3,EXP,34),
  Reduce(3,EXP,37),
  Reduce(2,EXP,38),
a377 1
  Reduce(2,DEC1,65),
d379 2
a380 1
  Reduce(3,DEC1,66),
d382 4
a385 14
  Reduce(3,DEC,48),
  Reduce(3,DEC0,50),
  Reduce(1,FVALBIND,74),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,119),Shift),
  Reduce(1,FVALLIST,76),
  Reduce(2,DEC1,53),
  Reduce(1,ATPAT1,120),
  Reduce(3,FVALBIND,75),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,128)),
  Reduce(1,PATVAR,177),
  Reduce(5,BIN_ATPAT,118),
  Reduce(1,ATPATLIST,150),
  Reduce(2,ATPATLIST,151),
  Reduce(5,FVAL,78),
d388 1
a389 1
  Reduce(2,ATEXP,10),
d391 13
a405 4
  Reduce(2,ATEXP,4),
  Reduce(4,EXP,41),
  Reduce(2,APPEXP,28),
  Reduce(4,EXP,40),
a407 1
  Reduce(3,ATEXP,13),
d409 10
a418 8
  Reduce(4,FVAL,80),
  Reduce(5,FVAL,81),
  Reduce(6,FVAL,79),
  Reduce(3,FVALLIST,77),
  Reduce(2,DEC1,63),
  Reduce(3,DEC1,64),
  Reduce(5,DEC1,61),
  Reduce(1,OPEXCONDEF,182),
d421 1
a421 2
  Reduce(1,EXCONDEF,181),
  Reduce(1,EXBIND,98),
d427 1
a427 1
  Reduce(2,DEC1,67),
d429 9
a437 2
  Reduce(1,ABSDATBIND,59),
  Reduce(1,TYVARSEQ,88),
a438 1
  Reduce(1,TYCON,184),
a439 1
  Reduce(1,CONDEF,178),
d442 3
d446 22
a467 5
  Reduce(2,CONBIND1,97),
  Reduce(2,OPCONDEF,180),
  Reduce(1,TYVARLIST,90),
  Reduce(3,TYVARSEQ,89),
  Reduce(3,TYVARLIST,91),
d469 2
a470 18
  Reduce(1,TYPBIND,84),
  Reduce(7,DEC1,58),
  Reduce(3,TYPBIND,85),
  Reduce(4,TYPBIND1,86),
  Reduce(2,DEC1,62),
  Reduce(1,LONGIDLIST,153),
  Reduce(2,LONGIDLIST,152),
  Reduce(2,DEC1,54),
  Reduce(2,DEC1,55),
  Reduce(4,DEC1,56),
  Reduce(2,DEC1,52),
  Reduce(1,VALBIND,69),
  Reduce(2,VALBIND,72),
  Reduce(3,VALBIND,70),
  Reduce(4,VALBIND,71),
  Reduce(3,VALBIND1,73),
  Reduce(3,DEC,49),
  Reduce(3,DEC0,51),
d472 4
a475 10
  Reduce(3,ATEXP,5),
  Reduce(5,EXPROW,26),
  Reduce(2,STRDEC1PLUS0,199),
  Reduce(1,STRDEC,192),
  Reduce(3,STRDEC,194),
  Reduce(3,STRDEC0,196),
  Reduce(1,STRBIND,205),
  Reduce(2,STRDEC1,202),
  Reduce(1,STRID,172),
  Reduce(3,STRBIND,206),
d478 1
a478 12
  Reduce(1,SIGID,171),
  Reduce(1,STRUCT_START,191),
  Reduce(5,STRBIND1,207),
  Reduce(1,STREXP,187),
  Reduce(1,FUNID,170),
  Reduce(3,STRDEC,193),
  Reduce(3,STRDEC0,195),
  Reduce(2,STRDEC1,203),
  Reduce(3,STREXP,186),
  Reduce(5,STREXP,190),
  Reduce(4,STREXP,188),
  Reduce(4,STREXP,189),
a480 2
  Reduce(2,SPEC1,234),
  Reduce(3,SPEC1,235),
a485 1
  Reduce(5,SPEC1,229),
d488 3
a490 9
  Reduce(2,SPEC1,226),
  Reduce(1,EXDESC,249),
  Reduce(2,EXDESC1,251),
  Reduce(3,EXDESC,250),
  Reduce(1,STRDESC,252),
  Reduce(2,SPEC1,227),
  Reduce(3,STRDESC,253),
  Reduce(3,STRDESC1,254),
  Reduce(2,SPEC1,228),
d493 1
d495 2
a497 1
  Reduce(3,LONGSTRIDEQLIST,260),
a500 1
  Reduce(3,SHAREQ,256),
d502 5
a506 4
  Reduce(2,SPEC1,223),
  Reduce(1,TYPDESC,240),
  Reduce(2,TYPDESC1,242),
  Reduce(3,TYPDESC,241),
a507 1
  Reduce(1,DATDESC,243),
d514 12
a525 3
  Reduce(2,SPEC1,222),
  Reduce(5,VALDESC,239),
  Reduce(3,VALDESC,238),
d528 2
a529 2
  Reduce(3,STRBIND1,208),
  Reduce(5,STRDEC1,204),
d533 22
d556 1
a556 1
  Reduce(3,FUNBIND1,271),
a557 8
  Reduce(3,FUNBIND1,269),
  Reduce(4,STARTFUNBIND2,273),
  Reduce(6,STARTFUNBIND1,272),
  Reduce(3,FUNBIND,267),
  Reduce(2,SIGDEC1,214),
  Reduce(5,SIGBIND,216),
  Reduce(3,SIGBIND,215),
  Reduce(2,TOPDEC,280),
d560 1
a560 3
  Reduce(2,PROGRAM,284),
  Reduce(3,PROGRAM,282),
  Reduce(2,SIGDEC1PLUS,213),
d562 3
a564 1
  Reduce(2,STRDEC1PLUS0,200)
@


1.13.1.1
log
@Fork for bug fixing
@
text
@a3 4
Revision 1.13  1993/08/27  14:23:24  matthew
Improved message for undefined constructors in patterns
,

@


1.13.1.2
log
@Removed option of giving a long id to require.
@
text
@d269 1
a269 1
Reduce(0,DECSEP,285),
d271 1
a271 4
  Reduce(1,ATEXP,2),
  Reduce(1,TOPDEC,278),
  Reduce(1,LONGVAR,163),
  Accept,
d273 1
d275 2
a276 1
  Reduce(1,APPEXP,27),
a277 1
  Reduce(1,ATEXP,1),
d279 1
a279 2
  Reduce(0,TYVARSEQ,87),
  Reduce(1,START_LET,16),
d282 1
a282 3
  Reduce(1,EXP,33),
  Reduce(1,START_LOCAL,68),
  Reduce(1,ATEXP,3),
d285 5
a289 1
  Reduce(1,PROGRAM,284),
d293 3
a295 2
  Reduce(1,TOPDEC1,280),
  Reduce(1,STRDEC1PLUS,197),
d298 2
a299 1
  Reduce(1,STRDEC1,201),
d301 1
a303 2
  Reduce(1,ATPAT,106),
  Reduce(1,ATPAT,104),
d305 1
a306 1
  Reduce(1,ATPAT,107),
d314 1
a315 1
  Reduce(1,SYM,169),
d319 2
a320 3
  Reduce(3,PATROW1,125),
  Reduce(2,OPVARDEF,176),
  Reduce(2,OPLONGVAR,165),
d329 2
d334 1
a335 1
  Reduce(1,TY,140),
d360 1
a361 2
  Reduce(2,PATROW1,126),
  Reduce(4,PATROW1,127),
a366 5
  Reduce(3,EXP,36),
  Reduce(3,EXP,35),
  Reduce(3,EXP,34),
  Reduce(3,EXP,37),
  Reduce(4,EXP,41),
a373 1
  Reduce(2,ATEXP,4),
d376 1
d378 4
a384 2
  Reduce(3,DEC,48),
  Reduce(3,DEC0,50),
d389 14
a402 6
  Reduce(2,DEC1,52),
  Reduce(1,VALBIND,69),
  Reduce(2,VALBIND,72),
  Reduce(3,VALBIND,70),
  Reduce(4,VALBIND,71),
  Reduce(3,VALBIND1,73),
d405 1
a406 1
  Reduce(1,EXPSEQ,23),
d410 2
d418 2
a419 12
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,119),Shift),
  Reduce(1,FVALBIND,74),
  Reduce(1,FVALLIST,76),
  Reduce(2,DEC1,53),
  Reduce(1,ATPAT1,120),
  Reduce(3,FVALBIND,75),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,128)),
  Reduce(1,PATVAR,177),
  Reduce(5,BIN_ATPAT,118),
  Reduce(1,ATPATLIST,150),
  Reduce(2,ATPATLIST,151),
  Reduce(5,FVAL,78),
a421 6
  Reduce(4,FVAL,80),
  Reduce(5,FVAL,81),
  Reduce(1,LONGIDLIST,153),
  Reduce(2,DEC1,62),
  Reduce(2,LONGIDLIST,152),
  Reduce(5,DEC1,61),
d424 1
a429 1
  Reduce(2,OPEXCONDEF,183),
d434 1
d439 1
a439 3
  Reduce(5,DEC1,57),
  Reduce(1,TYPBIND,84),
  Reduce(3,TYPBIND,85),
a440 6
  Reduce(4,TYPBIND1,86),
  Reduce(1,TYVARLIST,90),
  Reduce(3,TYVARSEQ,89),
  Reduce(3,TYVARLIST,91),
  Reduce(7,DEC1,58),
  Reduce(3,DATBIND,93),
d442 1
a443 1
  Reduce(1,CONDEF,178),
d446 1
d448 11
a458 1
  Reduce(2,CONBIND1,97),
d462 6
a470 1
  Reduce(3,ATEXP,12),
d478 1
a478 1
  Reduce(2,STRDEC1,203),
d481 3
d485 2
a486 1
  Reduce(3,STRBIND1,208),
a487 1
  Reduce(1,STREXP,187),
d490 1
a490 1
  Reduce(2,STRDEC1,202),
a494 4
  Reduce(1,SIG_START,211),
  Reduce(1,SIGEXP,210),
  Reduce(1,SIGID,171),
  Reduce(5,STRBIND1,207),
d497 2
a498 4
  Reduce(2,SPEC1,224),
  Reduce(1,TYPDESC,240),
  Reduce(2,TYPDESC1,242),
  Reduce(3,TYPDESC,241),
a501 7
  Reduce(2,SPEC1,234),
  Reduce(3,SPEC1,235),
  Reduce(2,SPEC1,222),
  Reduce(5,VALDESC,239),
  Reduce(3,VALDESC,238),
  Reduce(2,SPEC1,230),
  Reduce(5,SPEC1,229),
d504 3
d511 4
a514 2
  Reduce(3,SPEC,218),
  Reduce(3,SPEC0,220),
d525 1
d527 3
d537 4
a540 4
  Reduce(1,STRDESC,252),
  Reduce(2,SPEC1,227),
  Reduce(3,STRDESC,253),
  Reduce(3,STRDESC1,254),
d543 1
a544 1
  Reduce(2,PROGRAM,282),
d548 1
d550 1
a550 1
  Reduce(5,FUNBIND1,270),
a551 1
  Reduce(5,FUNBIND1,268),
d558 1
d560 3
a563 2
  Reduce(2,PROGRAM,283),
  Reduce(3,PROGRAM,281),
@


1.12
log
@New version.
@
text
@d4 3
d265 1
a265 1
Reduce(0,DECSEP,285),
d267 3
d271 1
a271 2
  Reduce(1,OPLONGVAR,163),
  Reduce(1,APPEXP,27),
d273 1
a273 1
  Reduce(1,TOPDEC1,280),
d275 1
a275 1
  Accept,
a276 2
  Reduce(1,INFEXP,29),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,INFEXP,29),Shift),
a277 2
  Reduce(1,LONGVAR,162),
  Reduce(1,STRDEC1,200),
d279 2
d282 2
a283 9
  Reduce(1,FUNDEC1PLUS,262),
  Reduce(1,SCON,158),
  Reduce(1,STRDEC1PLUS,196),
  Reduce(1,PROGRAM,284),
  Reduce(1,TOPDEC,274),
  Reduce(1,START_LOCAL,68),
  Reduce(1,ATEXP,2),
  Reduce(1,ATEXP,3),
  Reduce(1,SCON,157),
d285 7
a291 1
  Reduce(1,ATEXP,1),
d293 2
a294 1
  Reduce(1,SIGDEC1PLUS,211),
d298 1
d300 2
a301 1
  Reduce(1,OPVARDEF,174),
d303 2
a304 4
  Reduce(1,ATPAT,107),
  Reduce(2,EXP,42),
  Reduce(1,VARDEF,173),
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,173),Reduce(1,LONGVAR,162)),
d306 2
a307 1
  Reduce(1,ATPAT,105),
a308 3
  Reduce(2,OPVARDEF,175),
  Reduce(2,OPLONGVAR,164),
  Reduce(2,ATPAT,114),
d310 1
a312 2
  Reduce(1,SYM,167),
  Reduce(1,LAB,160),
d314 14
a327 5
  Reduce(3,PATROW1,125),
  Reduce(1,VAR,172),
  Reduce(3,PAT,130),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,130),Shift),
  Reduce(1,TY,133),
d329 7
a335 6
  Reduce(1,TY,138),
  Reduce(1,LONGTYCON,165),
  Reduce(3,PAT,131),
  Reduce(2,TY,137),
  Reduce(1,STAR,184),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,184),Reduce(1,LONGTYCON,165)),
d338 4
a341 8
  Reduce(3,TY,140),
  Reduce(2,TY,135),
  Reduce(3,TY,134),
  Reduce(5,TYROW,148),
  Reduce(2,TY,136),
  Reduce(3,TYTUPLE,145),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,145),Shift),
  Reduce(1,TYLIST,143),
d343 10
a352 5
  Reduce(3,TYLIST,144),
  Reduce(5,TYSEQ,142),
  Reduce(3,TYROW,147),
  Reduce(2,PAT,129),
  Reduce(2,ATPAT,112),
d355 3
a357 6
  Reduce(2,OPTTYPE,83),
  Reduce(4,PAT,132),
  Reduce(3,ATPAT,113),
  Reduce(3,PATLIST2,122),
  Reduce(2,PATROW1,126),
  Reduce(4,PATROW1,127),
d361 1
a361 3
  Reduce(3,ATPAT,110),
  Reduce(3,ATPAT,115),
  Reduce(3,ATPAT,117),
d363 4
a366 7
  Reduce(3,EXP,34),
  Reduce(3,EXP,37),
  Reduce(3,MATCH,43),
  Reduce(3,EXP,35),
  Reduce(3,EXP,36),
  Reduce(2,ATEXP,4),
  Reduce(4,EXP,41),
a367 1
  Reduce(1,INFVAR,31),
a369 1
  Reduce(2,APPEXP,28),
d372 1
d374 25
a399 2
  Reduce(2,ATEXP,6),
  Reduce(3,EXPROW,25),
d401 1
a401 17
  Reduce(2,ATEXP,7),
  Reduce(4,EXP,40),
  Reduce(1,DEC,47),
  Reduce(2,DECSEP,46),
  Reduce(3,DEC,49),
  Reduce(3,DEC0,51),
  Reduce(5,DEC1,61),
  Reduce(2,DEC1,63),
  Reduce(1,SYMLIST,155),
  Reduce(3,DEC1,64),
  Reduce(2,SYMLIST,156),
  Reduce(2,DEC1,52),
  Reduce(1,VALBIND,69),
  Reduce(2,VALBIND,72),
  Reduce(3,VALBIND,70),
  Reduce(4,VALBIND,71),
  Reduce(3,VALBIND1,73),
a402 1
  Reduce(1,EXPSEQ,23),
d406 4
a409 2
  Reduce(2,EXP,38),
  Reduce(3,ATEXP,13),
d412 10
a421 3
  Reduce(2,DEC1,62),
  Reduce(1,LONGIDLIST,152),
  Reduce(2,LONGIDLIST,151),
d424 1
a424 1
  Reduce(1,EXCONDEF,180),
a425 2
  Reduce(1,OPEXCONDEF,181),
  Reduce(2,OPEXCONDEF,182),
d428 1
d430 1
a430 1
  Reduce(2,OPTOFTYPE,103),
a431 1
  Reduce(1,TYVARSEQ,88),
d434 1
d436 1
a436 1
  Reduce(1,TYCON,183),
d438 1
a438 1
  Reduce(1,CONDEF,177),
d440 2
a441 2
  Reduce(1,OPCONDEF,178),
  Reduce(2,OPCONDEF,179),
d443 1
a443 1
  Reduce(3,CONBIND,96),
d447 1
d449 1
d452 4
a455 2
  Reduce(7,DEC1,58),
  Reduce(5,DEC1,57),
d458 8
a465 22
  Reduce(2,DEC1,65),
  Reduce(3,DEC1,66),
  Reduce(2,DEC1,53),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,106),Shift),
  Reduce(1,FVALBIND,74),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,119),Shift),
  Reduce(1,ATPAT1,120),
  Reduce(1,FVALLIST,76),
  Reduce(6,FVAL,79),
  Reduce(1,ATPATLIST,149),
  Reduce(4,FVAL,80),
  Reduce(2,ATPATLIST,150),
  Reduce(5,FVAL,81),
  Reduce(3,FVALLIST,77),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,128)),
  Reduce(1,PATVAR,176),
  Reduce(5,BIN_ATPAT,118),
  Reduce(5,FVAL,78),
  Reduce(3,FVALBIND,75),
  Reduce(2,DEC1,54),
  Reduce(3,DEC,48),
  Reduce(3,DEC0,50),
d469 5
a473 2
  Reduce(6,ATEXP,9),
  Reduce(3,ATEXP,12),
d475 20
a494 11
  Reduce(1,STRBIND,204),
  Reduce(1,STRID,171),
  Reduce(3,STRBIND,205),
  Reduce(1,SIGEXP,209),
  Reduce(1,SIG_START,210),
  Reduce(1,SIGID,170),
  Reduce(1,SPEC,216),
  Reduce(1,SIGIDLIST,235),
  Reduce(2,SPEC1,230),
  Reduce(2,SIGIDLIST,236),
  Reduce(5,SPEC1,228),
d496 5
a500 18
  Reduce(3,SPEC1,232),
  Reduce(2,SPEC1,221),
  Reduce(5,VALDESC,238),
  Reduce(3,VALDESC,237),
  Reduce(2,SPEC1,229),
  Reduce(1,EXDESC,248),
  Reduce(2,SPEC1,225),
  Reduce(2,EXDESC1,250),
  Reduce(3,EXDESC,249),
  Reduce(1,DATDESC,242),
  Reduce(2,SPEC1,224),
  Reduce(4,DATDESC1,244),
  Reduce(1,CONDESC,245),
  Reduce(2,CONDESC1,247),
  Reduce(3,CONDESC,246),
  Reduce(3,DATDESC,243),
  Reduce(2,SPEC1,233),
  Reduce(3,SPEC1,234),
d503 5
a507 5
  Reduce(1,TYPDESC,239),
  Reduce(2,SPEC1,222),
  Reduce(3,TYPDESC,240),
  Reduce(2,TYPDESC1,241),
  Reduce(1,SHAREQ1,256),
d509 10
a518 5
  Reduce(1,SHAREQ,254),
  Reduce(1,LONGSTRID,166),
  Reduce(3,LONGSTRIDEQLIST,258),
  Reduce(3,SHAREQ,255),
  Reduce(2,SHAREQ1,257),
d520 2
a521 2
  Reduce(3,LONGTYCONEQLIST,260),
  Reduce(3,LONGSTRIDEQLIST,259),
d523 33
a555 40
  Reduce(2,SPEC1,226),
  Reduce(1,STRDESC,251),
  Reduce(3,STRDESC,252),
  Reduce(3,STRDESC1,253),
  Reduce(3,SPEC,217),
  Reduce(3,SPEC0,219),
  Reduce(3,SIGEXP,208),
  Reduce(1,STRUCT_START,190),
  Reduce(5,STRBIND1,206),
  Reduce(1,STREXP,186),
  Reduce(1,FUNID,169),
  Reduce(1,STRDEC,191),
  Reduce(3,STRDEC,192),
  Reduce(3,STRDEC0,194),
  Reduce(3,STRDEC,193),
  Reduce(3,STRDEC0,195),
  Reduce(2,STRDEC1,201),
  Reduce(5,STRDEC1,203),
  Reduce(4,STREXP,188),
  Reduce(4,STREXP,187),
  Reduce(5,STREXP,189),
  Reduce(3,STREXP,185),
  Reduce(3,STRBIND1,207),
  Reduce(2,STRDEC1PLUS0,199),
  Reduce(2,FUNDEC1,264),
  Reduce(1,FUNBIND,265),
  Reduce(1,FUNIDBIND,273),
  Reduce(5,FUNBIND1,269),
  Reduce(3,FUNBIND1,270),
  Reduce(4,STARTFUNBIND2,272),
  Reduce(6,STARTFUNBIND1,271),
  Reduce(5,FUNBIND1,267),
  Reduce(3,FUNBIND1,268),
  Reduce(3,FUNBIND,266),
  Reduce(2,PROGRAM,282),
  Reduce(2,STRDEC1PLUS0,198),
  Reduce(2,SIGDEC1,213),
  Reduce(5,SIGBIND,215),
  Reduce(3,SIGBIND,214),
  Reduce(2,FUNDEC1PLUS,263),
d557 5
a561 4
  Reduce(3,PROGRAM,281),
  Reduce(2,TOPDEC,278),
  Reduce(2,TOPDEC,279),
  Reduce(2,SIGDEC1PLUS,212)
@


1.11
log
@Changed to allow no semicolons between topdecs
@
text
@d4 3
d262 1
a262 1
Reduce(0,DECSEP,284),
d264 3
a266 3
  Reduce(1,TOPDEC,274),
  Reduce(1,SIGDEC1PLUS,211),
  Reduce(1,START_LOCAL,68),
d268 9
a276 1
  Reduce(1,PROGRAM,283),
a277 3
  Reduce(1,STRDEC1PLUS,196),
  Reduce(1,STRDEC1,200),
  Reduce(1,TOPDEC,277),
d279 1
a279 3
  Reduce(1,SCON,159),
  Reduce(1,LONGVAR,162),
  Accept,
d281 5
a286 5
  Reduce(1,INFEXP,29),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,INFEXP,29),Shift),
  Reduce(1,OPLONGVAR,163),
  Reduce(1,APPEXP,27),
  Reduce(1,TOPDEC1,279),
d288 2
d291 19
a309 8
  Reduce(1,FUNDEC1PLUS,262),
  Reduce(1,ATEXP,1),
  Reduce(1,ATEXP,2),
  Reduce(1,STRDEC1PLUS,197),
  Reduce(1,TOPDEC,276),
  Reduce(1,TOPDEC,275),
  Reduce(2,SIGDEC1PLUS,212),
  Reduce(2,SIGDEC1,213),
d312 6
a317 28
  Reduce(1,SIGID,170),
  Reduce(1,SIGEXP,209),
  Reduce(5,SIGBIND,215),
  Reduce(1,SIG_START,210),
  Reduce(1,SPEC,216),
  Reduce(3,SIGEXP,208),
  Reduce(2,DECSEP,46),
  Reduce(1,SHAREQ,254),
  Reduce(2,SPEC1,227),
  Reduce(1,SHAREQ1,256),
  Reduce(1,LONGSTRID,166),
  Reduce(3,LONGSTRIDEQLIST,259),
  Reduce(2,SHAREQ1,257),
  Reduce(1,LONGTYCON,165),
  Reduce(3,LONGTYCONEQLIST,260),
  Reduce(3,LONGTYCONEQLIST,261),
  Reduce(3,SHAREQ,255),
  Reduce(3,LONGSTRIDEQLIST,258),
  Reduce(1,SIGIDLIST,235),
  Reduce(2,SPEC1,230),
  Reduce(2,SIGIDLIST,236),
  Reduce(0,OPTOFTYPE,102),
  Reduce(2,SPEC1,225),
  Reduce(1,EXDESC,248),
  Reduce(1,EXCONDEF,180),
  Reduce(3,EXDESC,249),
  Reduce(2,EXDESC1,250),
  Reduce(2,OPTOFTYPE,103),
d319 1
d321 3
a323 1
  Reduce(1,TY,139),
a324 9
  Reduce(3,TYTUPLE,145),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,145),Shift),
  Reduce(2,TY,136),
  Reduce(1,TYLIST,143),
  Reduce(1,LAB,161),
  Reduce(2,TY,135),
  Reduce(1,LAB,160),
  Reduce(3,TYROW,147),
  Reduce(2,TY,137),
d329 1
d332 5
d339 1
a339 93
  Reduce(3,TY,141),
  Reduce(5,SPEC1,228),
  Reduce(1,TYVARSEQ,88),
  Reduce(2,SPEC1,222),
  Reduce(1,TYPDESC,239),
  Reduce(3,TYPDESC,240),
  Reduce(1,TYVARLIST,90),
  Reduce(3,TYVARSEQ,89),
  Reduce(3,TYVARLIST,91),
  Reduce(2,TYPDESC1,241),
  Reduce(1,TYCON,183),
  Reduce(3,SPEC,218),
  Reduce(3,SPEC0,220),
  Reduce(2,SPEC1,224),
  Reduce(1,DATDESC,242),
  Reduce(3,DATDESC,243),
  Reduce(4,DATDESC1,244),
  Reduce(1,CONDESC,245),
  Reduce(1,CONDEF,177),
  Reduce(2,CONDESC1,247),
  Reduce(3,CONDESC,246),
  Reduce(2,SPEC1,221),
  Reduce(1,VARDEF,173),
  Reduce(3,VALDESC,237),
  Reduce(5,VALDESC,238),
  Reduce(2,SPEC1,223),
  Reduce(2,SPEC1,233),
  Reduce(1,SYMLIST,155),
  Reduce(2,SYMLIST,156),
  Reduce(3,SPEC1,234),
  Reduce(2,SPEC1,229),
  Reduce(1,LONGIDLIST,152),
  Reduce(2,LONGIDLIST,151),
  Reduce(2,SPEC1,231),
  Reduce(3,SPEC1,232),
  Reduce(1,STRDESC,251),
  Reduce(2,SPEC1,226),
  Reduce(1,STRID,171),
  Reduce(3,STRDESC1,253),
  Reduce(3,STRDESC,252),
  Reduce(3,SPEC,217),
  Reduce(3,SPEC0,219),
  Reduce(3,SIGBIND,214),
  Reduce(2,ATEXP,7),
  Reduce(2,FUNDEC1PLUS,263),
  Reduce(1,FUNBIND,265),
  Reduce(1,FUNIDBIND,273),
  Reduce(2,FUNDEC1,264),
  Reduce(1,FUNID,169),
  Reduce(1,STRUCT_START,190),
  Reduce(3,FUNBIND1,270),
  Reduce(1,STREXP,186),
  Reduce(1,STRDEC,191),
  Reduce(2,DEC1,67),
  Reduce(3,STRDEC,193),
  Reduce(3,STRDEC0,195),
  Reduce(1,EXBIND,98),
  Reduce(2,DEC1,60),
  Reduce(1,OPEXCONDEF,181),
  Reduce(2,OPEXCONDEF,182),
  Reduce(3,EXBIND,99),
  Reduce(2,EXBIND1,100),
  Reduce(3,EXBIND1,101),
  Reduce(2,OPLONGVAR,164),
  Reduce(3,DEC,48),
  Reduce(3,DEC0,50),
  Reduce(1,DEC,47),
  Reduce(1,TYPBIND,84),
  Reduce(2,DEC1,54),
  Reduce(3,TYPBIND,85),
  Reduce(4,TYPBIND1,86),
  Reduce(2,DEC1,55),
  Reduce(1,DATBIND,92),
  Reduce(3,DATBIND,93),
  Reduce(4,DATBIND1,94),
  Reduce(1,OPCONDEF,178),
  Reduce(1,CONBIND,95),
  Reduce(2,CONBIND1,97),
  Reduce(2,OPCONDEF,179),
  Reduce(3,CONBIND,96),
  Reduce(4,DEC1,56),
  Reduce(1,ATPAT,104),
  Reduce(2,DEC1,52),
  Reduce(1,OPVARDEF,174),
  Reduce(1,ATPAT,105),
  Reduce(0,OPTTYPE,82),
  Reduce(1,ATPAT,106),
  Resolve[Reduce(1,ATPAT,106),Shift],
  Reduce(1,PAT,128),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,107),Shift),
  Reduce(1,ATPAT,107),
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,173),Reduce(1,LONGVAR,162)),
  Reduce(1,VALBIND,69),
a340 3
  Reduce(2,ATPAT,114),
  Reduce(3,ATPAT,117),
  Reduce(3,PATLIST2,122),
d342 4
d347 1
a347 3
  Reduce(4,PAT,132),
  Reduce(1,PATROW,123),
  Reduce(2,ATPAT,111),
a349 7
  Reduce(2,OPVARDEF,175),
  Reduce(1,VAR,172),
  Reduce(3,PAT,131),
  Reduce(3,PAT,130),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,130),Shift),
  Reduce(2,OPTTYPE,83),
  Reduce(3,PATROW1,125),
a353 2
  Reduce(3,ATPAT,116),
  Reduce(3,PATLIST2,121),
d355 34
d393 1
a393 2
  Reduce(1,EXPLIST,20),
  Reduce(1,EXPLIST,21),
d395 2
a396 1
  Reduce(5,ATEXP,14),
a397 5
  Reduce(2,ATEXP,10),
  Reduce(3,EXPSEQ2,24),
  Reduce(2,APPEXP,28),
  Reduce(2,ATEXP,6),
  Reduce(3,EXPROW,25),
d399 1
a399 16
  Reduce(2,ATEXP,4),
  Reduce(3,EXP,36),
  Reduce(3,EXP,35),
  Reduce(3,EXP,34),
  Reduce(3,EXP,37),
  Reduce(1,MATCH,44),
  Reduce(3,MATCH,43),
  Reduce(3,MRULE,45),
  Reduce(2,EXP,42),
  Reduce(1,INFVAR,31),
  Reduce(1,INFVAR,32),
  Reduce(3,INFEXP,30),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,INFEXP,30),Shift),
  Reduce(4,EXP,40),
  Reduce(3,ATEXP,5),
  Reduce(5,EXPROW,26),
d402 16
a417 8
  Reduce(3,ATEXP,15),
  Reduce(3,EXPLIST2,18),
  Reduce(3,ATEXP,13),
  Reduce(6,EXP,39),
  Reduce(4,EXP,41),
  Reduce(6,ATEXP,9),
  Reduce(3,ATEXP,8),
  Reduce(3,ATEXP,12),
d419 16
d436 2
a437 1
  Reduce(7,DEC1,58),
d440 2
a441 1
  Reduce(2,DEC1,62),
a442 1
  Reduce(1,FVALLIST,76),
a443 2
  Reduce(2,DEC1,53),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,106),Shift),
d445 7
a454 2
  Reduce(1,ATPATLIST,149),
  Reduce(2,ATPATLIST,150),
d457 8
a464 11
  Reduce(4,FVAL,80),
  Reduce(5,FVAL,81),
  Reduce(6,FVAL,79),
  Reduce(3,FVALLIST,77),
  Reduce(3,DEC,49),
  Reduce(3,DEC0,51),
  Reduce(2,DEC1,63),
  Reduce(3,DEC1,64),
  Reduce(5,DEC1,61),
  Reduce(3,STRDEC,192),
  Reduce(3,STRDEC0,194),
d467 54
a520 4
  Reduce(3,STRBIND1,207),
  Reduce(5,STREXP,189),
  Reduce(4,STREXP,187),
  Reduce(4,STREXP,188),
d522 7
a528 1
  Reduce(3,STRBIND,205),
d531 3
d535 5
d541 2
d544 2
a545 1
  Reduce(4,STARTFUNBIND2,272),
d547 8
a554 3
  Reduce(3,FUNBIND1,268),
  Reduce(5,FUNBIND1,267),
  Reduce(2,STRDEC1PLUS0,199),
d556 2
a557 4
  Reduce(2,STRDEC1PLUS0,198),
  Reduce(2,PROGRAM,281),
  Reduce(2,PROGRAM,282),
  Reduce(3,PROGRAM,280)
@


1.10
log
@Extended grammar for NJ compatibility
@
text
@d4 3
d259 1
a259 1
Reduce(0,TOPDEC,275),
d261 8
a268 11
  Reduce(1,APPEXP,27),
  Reduce(1,STRDEC1PLUS,198),
  Reduce(1,START_LOCAL,69),
  Reduce(1,TOPDEC,278),
  Reduce(1,ATEXP,1),
  Reduce(0,TYVARSEQ,88),
  Reduce(1,TOPDEC,276),
  Reduce(1,TOPDEC,279),
  Reduce(1,SCON,160),
  Reduce(0,DECSEP,46),
  Reduce(1,PROGRAM,284),
d270 1
d272 3
a274 1
  Reduce(1,START_LET,16),
a275 4
  Reduce(1,SIGDEC1PLUS,212),
  Reduce(1,EXP,33),
  Reduce(1,SCON,158),
  Reduce(1,STRDEC1PLUS,197),
d278 4
a281 4
  Reduce(1,STRDEC1,201),
  Reduce(1,OPLONGVAR,164),
  Reduce(1,TOPDEC1,281),
  Reduce(1,LONGVAR,163),
d283 2
a284 2
  Reduce(1,FUNDEC1PLUS,263),
  Accept,
d286 5
a290 19
  Reduce(1,EXPLIST,20),
  Reduce(1,EXPLIST,21),
  Reduce(3,ATEXP,12),
  Reduce(2,ATEXP,6),
  Reduce(1,LAB,162),
  Reduce(1,LAB,161),
  Reduce(3,EXPROW,25),
  Reduce(2,ATEXP,7),
  Reduce(1,INFVAR,31),
  Reduce(1,INFVAR,32),
  Reduce(1,VAR,173),
  Reduce(3,INFEXP,30),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,INFEXP,30),Shift),
  Reduce(1,DEC,48),
  Reduce(2,DECSEP,47),
  Reduce(3,DEC,49),
  Reduce(3,DEC0,51),
  Reduce(2,DEC1,66),
  Reduce(1,SYM,169),
d292 31
a322 33
  Reduce(1,SYMLIST,156),
  Reduce(3,DEC1,67),
  Reduce(2,SYMLIST,157),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,120),Shift),
  Reduce(0,OPTTYPE,83),
  Reduce(1,FVALBIND,75),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,107),Shift),
  Reduce(1,ATPAT,105),
  Reduce(1,ATPAT,108),
  Reduce(1,FVALLIST,77),
  Reduce(1,OPVARDEF,175),
  Reduce(2,DEC1,54),
  Reduce(1,ATPAT,106),
  Reduce(1,ATPAT1,121),
  Reduce(1,VARDEF,174),
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,174),Reduce(1,LONGVAR,163)),
  Reduce(2,ATPAT,112),
  Reduce(1,PATROW,124),
  Reduce(2,PATROW1,127),
  Reduce(4,PATROW1,128),
  Reduce(1,ATPAT,107),
  Resolve[Reduce(1,ATPAT,107),Shift],
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,108),Shift),
  Reduce(1,PAT,129),
  Reduce(2,ATPAT,115),
  Reduce(3,ATPAT,118),
  Reduce(3,PATLIST2,123),
  Reduce(2,PAT,130),
  Reduce(2,ATPAT,113),
  Reduce(3,ATPAT,114),
  Reduce(4,PAT,133),
  Reduce(2,OPVARDEF,176),
  Reduce(2,OPLONGVAR,165),
d324 3
a326 4
  Reduce(3,PAT,132),
  Reduce(1,TY,134),
  Reduce(1,TY,140),
  Reduce(1,LONGTYCON,166),
d328 7
a334 2
  Reduce(3,TYROW,148),
  Reduce(1,STAR,185),
d337 5
a341 4
  Reduce(2,TY,138),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,185),Reduce(1,LONGTYCON,166)),
  Reduce(3,TYTUPLE,147),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,147),Shift),
d343 94
a436 10
  Reduce(2,TY,137),
  Reduce(1,TYLIST,144),
  Reduce(3,TY,142),
  Reduce(3,TYLIST,145),
  Reduce(5,TYSEQ,143),
  Reduce(3,TY,135),
  Reduce(5,TYROW,149),
  Reduce(3,PAT,131),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,131),Shift),
  Reduce(2,OPTTYPE,84),
d439 18
d458 16
a473 12
  Reduce(3,PATROW1,126),
  Reduce(3,ATPAT,111),
  Reduce(3,ATPAT,109),
  Reduce(3,PATROW,125),
  Reduce(5,ATPAT,110),
  Reduce(3,FVALBIND,76),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,129)),
  Reduce(1,PATVAR,177),
  Reduce(5,BIN_ATPAT,119),
  Reduce(1,ATPATLIST,150),
  Reduce(2,ATPATLIST,151),
  Reduce(5,FVAL,79),
d475 1
d484 4
a487 8
  Reduce(6,ATEXP,9),
  Reduce(6,EXP,39),
  Reduce(1,EXPSEQ,23),
  Reduce(2,ATEXP,10),
  Reduce(3,EXPSEQ2,24),
  Reduce(3,EXPSEQ,22),
  Reduce(2,ATEXP,4),
  Reduce(2,APPEXP,28),
d489 2
d496 3
d500 10
a509 27
  Reduce(4,EXP,41),
  Reduce(6,FVAL,80),
  Reduce(3,FVALLIST,78),
  Reduce(4,FVAL,81),
  Reduce(5,FVAL,82),
  Reduce(1,EXBIND,99),
  Reduce(1,OPEXCONDEF,182),
  Reduce(0,OPTOFTYPE,103),
  Reduce(2,DEC1,61),
  Reduce(1,EXCONDEF,181),
  Reduce(3,EXBIND,100),
  Reduce(2,EXBIND1,101),
  Reduce(3,EXBIND1,102),
  Reduce(2,OPTOFTYPE,104),
  Reduce(2,OPEXCONDEF,183),
  Reduce(1,TYVARSEQ,89),
  Reduce(2,DEC1,55),
  Reduce(1,TYPBIND,85),
  Reduce(3,TYPBIND,86),
  Reduce(1,TYCON,184),
  Reduce(4,TYPBIND1,87),
  Reduce(1,TYVARLIST,91),
  Reduce(3,TYVARSEQ,90),
  Reduce(3,TYVARLIST,92),
  Reduce(5,DEC1,62),
  Reduce(2,DEC1,64),
  Reduce(3,DEC1,65),
d511 15
a525 18
  Reduce(1,VALBIND,70),
  Reduce(2,VALBIND,73),
  Reduce(3,VALBIND,71),
  Reduce(4,VALBIND,72),
  Reduce(3,VALBIND1,74),
  Reduce(2,DEC1,68),
  Reduce(1,DATBIND,93),
  Reduce(1,ABSDATBIND,60),
  Reduce(5,DEC1,58),
  Reduce(7,DEC1,59),
  Reduce(3,DATBIND,94),
  Reduce(1,CONBIND,96),
  Reduce(4,DATBIND1,95),
  Reduce(1,CONDEF,178),
  Reduce(1,OPCONDEF,179),
  Reduce(3,CONBIND,97),
  Reduce(2,CONBIND1,98),
  Reduce(2,OPCONDEF,180),
d527 4
a530 23
  Reduce(1,LONGIDLIST,153),
  Reduce(2,LONGIDLIST,152),
  Reduce(2,DEC1,56),
  Reduce(4,DEC1,57),
  Reduce(3,DEC,50),
  Reduce(3,DEC0,52),
  Reduce(5,ATEXP,14),
  Reduce(3,ATEXP,5),
  Reduce(5,EXPROW,26),
  Reduce(2,STRDEC1PLUS0,199),
  Reduce(1,STRDEC,192),
  Reduce(3,STRDEC,194),
  Reduce(3,STRDEC0,196),
  Reduce(1,STRBIND,205),
  Reduce(2,STRDEC1,203),
  Reduce(1,STRID,172),
  Reduce(3,STRBIND,206),
  Reduce(1,STRUCT_START,191),
  Reduce(3,STRBIND1,208),
  Reduce(1,STREXP,187),
  Reduce(1,FUNID,170),
  Reduce(3,STRDEC,193),
  Reduce(3,STRDEC0,195),
d532 4
a535 2
  Reduce(3,STREXP,186),
  Reduce(5,STREXP,190),
d537 17
a553 73
  Reduce(4,STREXP,189),
  Reduce(1,SIG_START,211),
  Reduce(1,SIGEXP,210),
  Reduce(1,SIGID,171),
  Reduce(5,STRBIND1,207),
  Reduce(1,SPEC,217),
  Reduce(3,SIGEXP,209),
  Reduce(2,SPEC1,231),
  Reduce(1,SIGIDLIST,236),
  Reduce(2,SIGIDLIST,237),
  Reduce(2,SPEC1,234),
  Reduce(3,SPEC1,235),
  Reduce(2,SPEC1,226),
  Reduce(1,EXDESC,249),
  Reduce(2,EXDESC1,251),
  Reduce(3,EXDESC,250),
  Reduce(2,SPEC1,223),
  Reduce(1,TYPDESC,240),
  Reduce(2,TYPDESC1,242),
  Reduce(3,TYPDESC,241),
  Reduce(5,SPEC1,229),
  Reduce(2,SPEC1,232),
  Reduce(3,SPEC1,233),
  Reduce(3,SPEC,218),
  Reduce(3,SPEC0,220),
  Reduce(2,SPEC1,222),
  Reduce(5,VALDESC,239),
  Reduce(3,VALDESC,238),
  Reduce(2,SPEC1,228),
  Reduce(1,SHAREQ,255),
  Reduce(1,SHAREQ1,257),
  Reduce(1,LONGSTRID,167),
  Reduce(3,LONGSTRIDEQLIST,259),
  Reduce(3,LONGSTRIDEQLIST,260),
  Reduce(2,SHAREQ1,258),
  Reduce(3,LONGTYCONEQLIST,261),
  Reduce(3,LONGTYCONEQLIST,262),
  Reduce(3,SHAREQ,256),
  Reduce(2,SPEC1,230),
  Reduce(2,SPEC1,225),
  Reduce(1,DATDESC,243),
  Reduce(3,DATDESC,244),
  Reduce(1,CONDESC,246),
  Reduce(4,DATDESC1,245),
  Reduce(3,CONDESC,247),
  Reduce(2,CONDESC1,248),
  Reduce(1,STRDESC,252),
  Reduce(2,SPEC1,227),
  Reduce(3,STRDESC,253),
  Reduce(3,STRDESC1,254),
  Reduce(2,SPEC1,224),
  Reduce(3,SPEC,219),
  Reduce(3,SPEC0,221),
  Reduce(5,STRDEC1,204),
  Reduce(1,FUNIDBIND,274),
  Reduce(2,FUNDEC1,265),
  Reduce(1,FUNBIND,266),
  Reduce(3,FUNBIND1,271),
  Reduce(5,FUNBIND1,270),
  Reduce(3,FUNBIND1,269),
  Reduce(5,FUNBIND1,268),
  Reduce(4,STARTFUNBIND2,273),
  Reduce(6,STARTFUNBIND1,272),
  Reduce(3,FUNBIND,267),
  Reduce(2,SIGDEC1,214),
  Reduce(5,SIGBIND,216),
  Reduce(3,SIGBIND,215),
  Reduce(2,TOPDEC,280),
  Reduce(2,SIGDEC1PLUS,213),
  Reduce(2,PROGRAM,283),
  Reduce(3,PROGRAM,282),
  Reduce(2,FUNDEC1PLUS,264),
  Reduce(2,STRDEC1PLUS0,200)
@


1.9
log
@ Added ABSTRACTION to token_string function
@
text
@d4 3
d256 1
a256 1
Reduce(0,TOPDEC,271),
d258 4
a261 1
  Reduce(1,TOPDEC,272),
a262 3
  Reduce(1,START_LOCAL,69),
  Reduce(0,DECSEP,46),
  Reduce(1,PROGRAM,280),
d264 2
a265 3
  Reduce(1,TOPDEC,273),
  Reduce(1,TOPDEC,275),
  Reduce(1,EXP,33),
d267 3
a269 1
  Reduce(1,SIGDEC1PLUS,212),
d271 1
d273 4
d279 1
d281 2
a282 2
  Reduce(1,TOPDEC1,277),
  Reduce(1,SCON,158),
d284 2
a285 3
  Reduce(1,FUNDEC1PLUS,259),
  Reduce(1,STRDEC1PLUS,197),
  Reduce(1,STRDEC1,201),
d287 19
a305 8
  Reduce(1,LONGVAR,163),
  Accept,
  Reduce(1,STRDEC1PLUS,198),
  Reduce(1,TOPDEC,274),
  Reduce(1,START_LET,16),
  Reduce(1,APPEXP,27),
  Reduce(2,STRDEC1,203),
  Reduce(1,STRBIND,205),
a306 9
  Reduce(1,SYM,169),
  Reduce(1,STRID,172),
  Reduce(1,STRUCT_START,191),
  Reduce(3,STRBIND1,208),
  Reduce(1,STREXP,187),
  Reduce(1,FUNID,170),
  Reduce(1,STRDEC,192),
  Reduce(3,STREXP,186),
  Reduce(2,DECSEP,47),
d308 1
a308 1
  Reduce(2,DEC1,68),
d310 29
a338 9
  Reduce(0,OPTOFTYPE,103),
  Reduce(2,DEC1,61),
  Reduce(1,OPEXCONDEF,182),
  Reduce(1,EXCONDEF,181),
  Reduce(1,EXBIND,99),
  Reduce(2,OPEXCONDEF,183),
  Reduce(3,EXBIND,100),
  Reduce(2,EXBIND1,101),
  Reduce(3,EXBIND1,102),
d340 2
a341 1
  Reduce(2,OPTOFTYPE,104),
a342 1
  Reduce(1,TY,139),
d345 2
a346 2
  Reduce(2,TY,137),
  Reduce(1,TYLIST,144),
a349 4
  Reduce(1,LAB,162),
  Reduce(1,LAB,161),
  Reduce(2,TY,136),
  Reduce(3,TYROW,148),
a351 1
  Reduce(3,TY,141),
d354 3
a356 2
  Reduce(3,TY,135),
  Reduce(5,TYROW,149),
d360 2
a361 59
  Reduce(1,TYVARSEQ,89),
  Reduce(2,DEC1,55),
  Reduce(1,TYPBIND,85),
  Reduce(1,TYVARLIST,91),
  Reduce(3,TYVARSEQ,90),
  Reduce(3,TYVARLIST,92),
  Reduce(3,TYPBIND,86),
  Reduce(1,TYCON,184),
  Reduce(4,TYPBIND1,87),
  Reduce(3,STRDEC,194),
  Reduce(3,STRDEC0,196),
  Reduce(2,DEC1,56),
  Reduce(1,DATBIND,93),
  Reduce(3,DATBIND,94),
  Reduce(1,CONBIND,96),
  Reduce(4,DATBIND1,95),
  Reduce(1,OPCONDEF,179),
  Reduce(1,CONDEF,178),
  Reduce(2,OPCONDEF,180),
  Reduce(2,CONBIND1,98),
  Reduce(3,CONBIND,97),
  Reduce(4,DEC1,57),
  Reduce(1,ATPAT,105),
  Reduce(2,DEC1,53),
  Reduce(1,OPVARDEF,175),
  Reduce(1,ATPAT,106),
  Reduce(1,PAT,129),
  Reduce(1,VARDEF,174),
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,174),Reduce(1,LONGVAR,163)),
  Reduce(1,VALBIND,70),
  Reduce(0,OPTTYPE,83),
  Reduce(1,ATPAT,107),
  Resolve[Reduce(1,ATPAT,107),Shift],
  Reduce(1,ATPAT,108),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,108),Shift),
  Reduce(1,VAR,173),
  Reduce(3,VALBIND1,74),
  Reduce(1,EXPLIST,20),
  Reduce(1,EXPLIST,21),
  Reduce(2,ATEXP,4),
  Reduce(1,DEC,48),
  Reduce(3,DEC,50),
  Reduce(3,DEC0,52),
  Reduce(5,DEC1,62),
  Reduce(2,DEC1,66),
  Reduce(3,DEC1,67),
  Reduce(2,DEC1,63),
  Reduce(1,LONGIDLIST,153),
  Reduce(2,LONGIDLIST,152),
  Reduce(1,FVALLIST,77),
  Reduce(2,DEC1,54),
  Reduce(1,ATPAT1,121),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,120),Shift),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,107),Shift),
  Reduce(1,FVALBIND,75),
  Reduce(2,ATPAT,115),
  Reduce(3,ATPAT,116),
  Reduce(3,PATLIST2,122),
  Reduce(3,PAT,132),
d364 1
a364 3
  Reduce(2,PAT,130),
  Reduce(2,OPVARDEF,176),
  Reduce(2,ATPAT,113),
d366 2
a367 6
  Reduce(4,PAT,133),
  Reduce(1,PATROW,124),
  Reduce(2,ATPAT,112),
  Reduce(2,PATROW1,127),
  Reduce(4,PATROW1,128),
  Reduce(2,OPTTYPE,84),
d373 11
a383 10
  Reduce(3,ATPAT,114),
  Reduce(3,PATLIST2,123),
  Reduce(3,ATPAT,118),
  Reduce(6,FVAL,80),
  Reduce(1,EXPSEQ,23),
  Reduce(2,ATEXP,10),
  Reduce(3,ATEXP,13),
  Reduce(2,APPEXP,28),
  Reduce(2,ATEXP,6),
  Reduce(3,EXPROW,25),
d386 1
a387 3
  Reduce(3,EXP,36),
  Reduce(3,EXP,35),
  Reduce(3,EXP,34),
d389 4
a392 10
  Reduce(3,MATCH,43),
  Reduce(2,EXP,38),
  Reduce(2,ATEXP,7),
  Reduce(1,INFVAR,31),
  Reduce(1,INFVAR,32),
  Reduce(3,INFEXP,30),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,INFEXP,30),Shift),
  Reduce(4,EXP,40),
  Reduce(3,ATEXP,5),
  Reduce(5,EXPROW,26),
d395 3
d402 2
a403 1
  Reduce(6,EXP,39),
d405 1
a405 2
  Reduce(6,ATEXP,9),
  Reduce(3,ATEXP,8),
a406 6
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,129)),
  Reduce(1,PATVAR,177),
  Reduce(5,BIN_ATPAT,119),
  Reduce(1,ATPATLIST,150),
  Reduce(2,ATPATLIST,151),
  Reduce(5,FVAL,79),
d409 20
a428 4
  Reduce(3,FVALBIND,76),
  Reduce(1,ABSDATBIND,60),
  Reduce(5,DEC1,58),
  Reduce(7,DEC1,59),
d431 2
a432 4
  Reduce(3,DEC,49),
  Reduce(3,DEC0,51),
  Reduce(5,ATEXP,14),
  Reduce(3,ATEXP,12),
d436 36
a471 1
  Reduce(5,STRDEC1,204),
d475 3
a477 1
  Reduce(3,STRBIND,206),
d479 1
a479 2
  Reduce(4,STREXP,188),
  Reduce(5,STREXP,190),
a480 1
  Reduce(1,SIG_START,211),
a484 11
  Reduce(1,SHAREQ,251),
  Reduce(1,SHAREQ1,253),
  Reduce(2,SPEC1,228),
  Reduce(1,LONGSTRID,167),
  Reduce(2,SHAREQ1,254),
  Reduce(3,LONGTYCONEQLIST,258),
  Reduce(3,LONGTYCONEQLIST,257),
  Reduce(3,SHAREQ,252),
  Reduce(3,LONGSTRIDEQLIST,256),
  Reduce(3,LONGSTRIDEQLIST,255),
  Reduce(1,SIGIDLIST,232),
d486 4
a489 1
  Reduce(2,SIGIDLIST,233),
d491 3
a493 3
  Reduce(1,EXDESC,245),
  Reduce(3,EXDESC,246),
  Reduce(2,EXDESC1,247),
d495 8
a502 12
  Reduce(1,TYPDESC,236),
  Reduce(3,TYPDESC,237),
  Reduce(2,TYPDESC1,238),
  Reduce(3,SPEC,219),
  Reduce(3,SPEC0,221),
  Reduce(2,SPEC1,225),
  Reduce(1,DATDESC,239),
  Reduce(3,DATDESC,240),
  Reduce(1,CONDESC,242),
  Reduce(4,DATDESC1,241),
  Reduce(3,CONDESC,243),
  Reduce(2,CONDESC1,244),
d504 12
a515 4
  Reduce(5,VALDESC,235),
  Reduce(3,VALDESC,234),
  Reduce(2,SPEC1,224),
  Reduce(5,SPEC1,229),
d517 8
d526 16
a541 18
  Reduce(1,STRDESC,248),
  Reduce(3,STRDESC1,250),
  Reduce(3,STRDESC,249),
  Reduce(3,SPEC,218),
  Reduce(3,SPEC0,220),
  Reduce(2,FUNDEC1PLUS,260),
  Reduce(1,FUNBIND,262),
  Reduce(1,FUNIDBIND,270),
  Reduce(2,FUNDEC1,261),
  Reduce(6,STARTFUNBIND1,268),
  Reduce(4,STARTFUNBIND2,269),
  Reduce(3,FUNBIND,263),
  Reduce(3,FUNBIND1,267),
  Reduce(5,FUNBIND1,266),
  Reduce(3,FUNBIND1,265),
  Reduce(5,FUNBIND1,264),
  Reduce(2,STRDEC1PLUS0,200),
  Reduce(2,STRDEC1PLUS0,199),
d545 1
a545 1
  Reduce(2,TOPDEC,276),
d547 4
a550 2
  Reduce(2,PROGRAM,279),
  Reduce(3,PROGRAM,278)
@


1.8
log
@Added code for abstractions.
@
text
@d4 3
d1147 1
@


1.7
log
@Removed integer parameter
@
text
@d4 3
d58 1
d250 1
a250 1
Reduce(0,TOPDEC,270),
d252 11
d264 1
a264 4
  Reduce(1,EXP,33),
  Reduce(1,FUNDEC1PLUS,258),
  Reduce(0,TYVARSEQ,88),
  Reduce(1,SCON,158),
d268 4
a271 2
  Reduce(0,DECSEP,46),
  Reduce(1,SIGDEC1PLUS,211),
a273 2
  Reduce(1,START_LOCAL,69),
  Reduce(0,EXPLIST,19),
a275 1
  Reduce(1,ATEXP,3),
a276 1
  Reduce(1,TOPDEC,272),
a277 2
  Reduce(1,APPEXP,27),
  Reduce(1,TOPDEC1,276),
a278 4
  Reduce(1,ATEXP,1),
  Reduce(1,TOPDEC,271),
  Reduce(1,PROGRAM,279),
  Reduce(1,SCON,160),
d280 3
a282 4
  Reduce(1,TOPDEC,273),
  Reduce(2,FUNDEC1PLUS,259),
  Reduce(1,FUNBIND,261),
  Reduce(2,FUNDEC1,260),
a283 2
  Reduce(1,FUNIDBIND,269),
  Reduce(1,FUNID,170),
d285 1
d287 1
a287 1
  Reduce(3,FUNBIND1,264),
d289 1
a290 1
  Reduce(4,STREXP,189),
d293 3
a295 12
  Reduce(2,STRDEC1,202),
  Reduce(1,STRID,172),
  Reduce(1,STRBIND,204),
  Reduce(3,STRBIND1,207),
  Reduce(1,SIGEXP,209),
  Reduce(1,SIG_START,210),
  Reduce(1,SIGID,171),
  Reduce(1,SPEC,216),
  Reduce(2,SPEC1,226),
  Reduce(1,STRDESC,247),
  Reduce(3,STRDESC1,249),
  Reduce(3,STRDESC,248),
d297 2
a298 1
  Reduce(1,EXDESC,244),
d300 6
a305 3
  Reduce(2,SPEC1,225),
  Reduce(3,EXDESC,245),
  Reduce(2,EXDESC1,246),
d307 1
a308 1
  Reduce(1,TY,134),
d331 2
a332 2
  Reduce(2,SPEC1,224),
  Reduce(1,DATDESC,238),
d336 1
a336 1
  Reduce(3,DATDESC,239),
d338 1
a338 46
  Reduce(1,CONDESC,241),
  Reduce(4,DATDESC1,240),
  Reduce(1,CONDEF,178),
  Reduce(2,CONDESC1,243),
  Reduce(3,CONDESC,242),
  Reduce(2,SPEC1,230),
  Reduce(1,SIGIDLIST,231),
  Reduce(2,SIGIDLIST,232),
  Reduce(2,SPEC1,229),
  Reduce(1,LONGIDLIST,153),
  Reduce(2,LONGIDLIST,152),
  Reduce(2,SPEC1,222),
  Reduce(1,TYPDESC,235),
  Reduce(2,TYPDESC1,237),
  Reduce(3,TYPDESC,236),
  Reduce(3,SPEC,218),
  Reduce(3,SPEC0,220),
  Reduce(5,SPEC1,228),
  Reduce(1,SHAREQ,250),
  Reduce(2,SPEC1,227),
  Reduce(1,LONGSTRID,167),
  Reduce(1,SHAREQ1,252),
  Reduce(3,LONGSTRIDEQLIST,255),
  Reduce(3,SHAREQ,251),
  Reduce(2,SHAREQ1,253),
  Reduce(3,LONGTYCONEQLIST,256),
  Reduce(3,LONGTYCONEQLIST,257),
  Reduce(3,LONGSTRIDEQLIST,254),
  Reduce(2,SPEC1,223),
  Reduce(1,VARDEF,174),
  Reduce(2,SPEC1,221),
  Reduce(5,VALDESC,234),
  Reduce(3,VALDESC,233),
  Reduce(3,SPEC,217),
  Reduce(3,SPEC0,219),
  Reduce(3,SIGEXP,208),
  Reduce(5,STRBIND1,206),
  Reduce(3,STRBIND,205),
  Reduce(1,OPEXCONDEF,182),
  Reduce(2,DEC1,61),
  Reduce(1,EXBIND,99),
  Reduce(2,OPEXCONDEF,183),
  Reduce(3,EXBIND,100),
  Reduce(2,EXBIND1,101),
  Reduce(3,EXBIND1,102),
  Reduce(2,OPLONGVAR,165),
a342 4
  Reduce(4,DEC1,57),
  Reduce(1,TYPBIND,85),
  Reduce(3,TYPBIND,86),
  Reduce(4,TYPBIND1,87),
d347 2
a349 1
  Reduce(2,OPCONDEF,180),
d351 23
a373 3
  Reduce(2,DEC1,63),
  Reduce(2,DEC1,55),
  Reduce(1,SYMLIST,156),
a374 1
  Reduce(2,SYMLIST,157),
d376 3
a378 7
  Reduce(5,STRDEC1,203),
  Reduce(3,DEC,50),
  Reduce(3,DEC0,52),
  Reduce(1,DEC,48),
  Reduce(3,DEC,49),
  Reduce(3,DEC0,51),
  Reduce(1,ATPAT,105),
a379 1
  Reduce(1,OPVARDEF,175),
a380 1
  Reduce(1,ATPAT,106),
a381 1
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,174),Reduce(1,LONGVAR,163)),
a382 1
  Reduce(0,OPTTYPE,83),
a383 1
  Reduce(1,ATPAT,108),
a384 2
  Reduce(3,FVALLIST,78),
  Reduce(1,PAT,129),
d386 1
a386 7
  Reduce(1,ATPAT,107),
  Resolve[Reduce(1,ATPAT,107),Shift],
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,108),Shift),
  Reduce(2,PAT,130),
  Reduce(2,ATPAT,113),
  Reduce(3,ATPAT,117),
  Reduce(1,VAR,173),
d391 4
a395 1
  Reduce(2,OPVARDEF,176),
a407 1
  Reduce(3,ATPAT,116),
d409 7
a415 8
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,129)),
  Reduce(1,PATVAR,177),
  Reduce(5,BIN_ATPAT,119),
  Reduce(1,ATPATLIST,150),
  Reduce(2,ATPATLIST,151),
  Reduce(5,FVAL,79),
  Reduce(1,EXPLIST,21),
  Reduce(1,EXPLIST,20),
d422 3
a424 11
  Reduce(1,EXPSEQ,23),
  Reduce(6,EXP,39),
  Reduce(3,ATEXP,8),
  Reduce(2,ATEXP,10),
  Reduce(3,ATEXP,15),
  Reduce(3,EXPLIST2,18),
  Reduce(2,ATEXP,4),
  Reduce(2,APPEXP,28),
  Reduce(2,ATEXP,6),
  Reduce(3,EXPROW,25),
  Reduce(4,EXP,40),
d430 1
a430 4
  Reduce(4,EXP,41),
  Reduce(3,MATCH,43),
  Reduce(2,EXP,38),
  Reduce(2,EXP,42),
d437 4
a440 1
  Reduce(3,ATEXP,13),
d442 8
a449 2
  Reduce(5,ATEXP,14),
  Reduce(3,ATEXP,12),
a451 1
  Reduce(6,FVAL,80),
d453 3
d458 4
a461 6
  Reduce(1,ABSDATBIND,60),
  Reduce(7,DEC1,59),
  Reduce(5,DEC1,58),
  Reduce(2,DEC1,53),
  Reduce(1,VALBIND,70),
  Reduce(3,VALBIND1,74),
d465 1
a465 2
  Reduce(2,DEC1,68),
  Reduce(5,DEC1,62),
d468 3
d473 59
a531 9
  Reduce(5,FUNBIND1,263),
  Reduce(6,STARTFUNBIND1,267),
  Reduce(4,STARTFUNBIND2,268),
  Reduce(3,FUNBIND1,266),
  Reduce(5,FUNBIND1,265),
  Reduce(3,FUNBIND,262),
  Reduce(2,PROGRAM,278),
  Reduce(3,PROGRAM,277),
  Reduce(2,TOPDEC,275),
d533 8
a540 5
  Reduce(2,SIGDEC1PLUS,212),
  Reduce(2,SIGDEC1,213),
  Reduce(3,SIGBIND,214),
  Reduce(5,SIGBIND,215),
  Reduce(2,STRDEC1PLUS0,199)
d547 1
@


1.6
log
@Added print representations for MAGIC brackets.
@
text
@d4 3
a28 1
require "../utils/integer";
a33 1
                  structure Integer : INTEGER
d931 1
a931 1
      (output (std_out,"Goto table size = " ^ Integer.makestring(Lists.length arrays) ^ "\n");
d988 3
a990 3
    (output(std_out,Integer.makestring arrays ^ " arrays, " ^
            Integer.makestring uniques ^ " singletons, " ^
            Integer.makestring assocs ^ " assocs\n"))
d1006 1
a1006 1
 val _ = output(std_out,"Goto table has " ^ Integer.makestring(Array.length goto_table) ^ " rows\n")
d1011 1
a1011 1
   (fn a => (MLWorks.ExtendedArray.map (fn x => output(std_out,Integer.makestring x ^ " ")) a;
@


1.5
log
@Changes for dynamic and coerce syntax
@
text
@d4 3
d1136 2
@


1.4
log
@Chnaged references to Array to ExtendedArray, where appropriate.
@
text
@d4 3
d49 1
d135 2
d230 1
d240 3
a242 1
val action_array = Array.arrayoflist [Reduce(0,TOPDEC,268),
d244 17
a260 2
  Reduce(1,SCON,157),
  Reduce(1,STRDEC1PLUS,195),
d262 5
a266 8
  Reduce(1,OPLONGVAR,162),
  Reduce(1,STRDEC1,199),
  Reduce(0,DECSEP,44),
  Reduce(1,START_LET,14),
  Reduce(1,SIGDEC1PLUS,209),
  Reduce(1,LONGVAR,161),
  Reduce(1,APPEXP,25),
  Reduce(1,SCON,156),
a267 12
  Reduce(1,TOPDEC,270),
  Reduce(1,TOPDEC1,274),
  Reduce(1,STRDEC1PLUS,196),
  Reduce(1,INFEXP,27),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,INFEXP,27),Shift),
  Reduce(1,START_LOCAL,67),
  Reduce(1,ATEXP,3),
  Reduce(1,EXP,31),
  Reduce(1,TOPDEC,269),
  Reduce(1,PROGRAM,277),
  Reduce(1,TOPDEC,272),
  Reduce(1,ATEXP,2),
d269 144
a412 5
  Reduce(1,FUNDEC1PLUS,256),
  Reduce(0,EXPLIST,17),
  Reduce(0,TYVARSEQ,86),
  Reduce(1,SCON,158),
  Reduce(1,DATBIND,91),
a413 74
  Reduce(1,TYVARSEQ,87),
  Reduce(4,DEC1,55),
  Reduce(1,TYPBIND,83),
  Reduce(1,TYCON,182),
  Reduce(1,LONGTYCON,164),
  Reduce(4,TYPBIND1,85),
  Reduce(1,TY,137),
  Reduce(1,TY,132),
  Reduce(1,TY,138),
  Reduce(1,STAR,183),
  Reduce(3,TYTUPLE,144),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,144),Shift),
  Reduce(1,LAB,159),
  Reduce(2,TY,134),
  Reduce(1,LAB,160),
  Reduce(3,TYROW,146),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,183),Reduce(1,LONGTYCON,164)),
  Reduce(2,TY,136),
  Reduce(3,TYTUPLE,145),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,145),Shift),
  Reduce(3,TY,139),
  Reduce(2,TY,135),
  Reduce(1,TYLIST,142),
  Reduce(3,TYLIST,143),
  Reduce(5,TYSEQ,141),
  Reduce(3,TY,140),
  Reduce(3,TY,133),
  Reduce(5,TYROW,147),
  Reduce(1,TYVARLIST,89),
  Reduce(3,TYVARSEQ,88),
  Reduce(3,TYVARLIST,90),
  Reduce(3,TYPBIND,84),
  Reduce(3,DATBIND,92),
  Reduce(1,CONDEF,176),
  Reduce(0,OPTOFTYPE,101),
  Reduce(1,CONBIND,94),
  Reduce(4,DATBIND1,93),
  Reduce(1,OPCONDEF,177),
  Reduce(2,OPCONDEF,178),
  Reduce(3,CONBIND,95),
  Reduce(2,CONBIND1,96),
  Reduce(2,OPTOFTYPE,102),
  Reduce(1,STRDEC,190),
  Reduce(2,DECSEP,45),
  Reduce(1,SYM,166),
  Reduce(1,STRBIND,202),
  Reduce(1,STRID,170),
  Reduce(2,STRDEC1,200),
  Reduce(1,SYM,167),
  Reduce(3,STRBIND,203),
  Reduce(1,STREXP,185),
  Reduce(1,FUNID,168),
  Reduce(1,STRUCT_START,189),
  Reduce(3,STRBIND1,205),
  Reduce(2,DEC1,64),
  Reduce(1,SYMLIST,154),
  Reduce(2,SYMLIST,155),
  Reduce(3,DEC1,65),
  Reduce(3,STRDEC,191),
  Reduce(3,STRDEC0,193),
  Reduce(1,EXCONDEF,179),
  Reduce(1,EXBIND,97),
  Reduce(1,OPEXCONDEF,180),
  Reduce(2,DEC1,59),
  Reduce(2,OPEXCONDEF,181),
  Reduce(3,EXBIND,98),
  Reduce(2,EXBIND1,99),
  Reduce(3,EXBIND1,100),
  Reduce(2,OPLONGVAR,163),
  Reduce(1,VARDEF,172),
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,172),Reduce(1,LONGVAR,161)),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,118),Shift),
  Reduce(0,OPTTYPE,81),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,105),Shift),
d415 14
a428 15
  Reduce(1,FVALBIND,73),
  Reduce(1,ATPAT,103),
  Reduce(1,FVALLIST,75),
  Reduce(1,ATPAT,104),
  Reduce(1,OPVARDEF,173),
  Reduce(2,DEC1,52),
  Reduce(1,ATPAT1,119),
  Reduce(2,OPVARDEF,174),
  Reduce(2,ATPAT,110),
  Reduce(1,PATROW,122),
  Reduce(3,PATROW1,124),
  Reduce(1,ATPAT,105),
  Resolve[Reduce(1,ATPAT,105),Shift],
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,106),Shift),
  Reduce(1,PAT,127),
d430 20
d451 21
a471 21
  Reduce(3,PATLIST2,121),
  Reduce(2,PAT,128),
  Reduce(2,ATPAT,111),
  Reduce(3,ATPAT,112),
  Reduce(2,OPTTYPE,82),
  Reduce(4,PAT,131),
  Reduce(1,VAR,171),
  Reduce(3,PAT,129),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,129),Shift),
  Reduce(3,PAT,130),
  Reduce(3,ATPAT,115),
  Reduce(3,PATLIST2,120),
  Reduce(3,ATPAT,114),
  Reduce(3,ATPAT,109),
  Reduce(3,ATPAT,107),
  Reduce(3,PATROW,123),
  Reduce(5,ATPAT,108),
  Reduce(2,PATROW1,125),
  Reduce(4,PATROW1,126),
  Reduce(3,FVALBIND,74),
  Reduce(6,FVAL,78),
d473 1
a473 11
  Reduce(3,EXP,34),
  Reduce(3,EXP,33),
  Reduce(3,EXP,32),
  Reduce(3,EXP,35),
  Reduce(1,MATCH,42),
  Reduce(3,MATCH,41),
  Reduce(3,MRULE,43),
  Reduce(1,INFVAR,29),
  Reduce(1,INFVAR,30),
  Reduce(3,INFEXP,28),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,INFEXP,28),Shift),
d475 2
a476 1
  Reduce(3,EXPROW,23),
d478 12
a489 30
  Reduce(2,EXP,36),
  Reduce(2,APPEXP,26),
  Reduce(1,EXPLIST,18),
  Reduce(1,EXPLIST,19),
  Reduce(3,EXPLIST2,15),
  Reduce(4,EXP,39),
  Reduce(6,EXP,37),
  Reduce(1,DEC,46),
  Reduce(5,DEC1,60),
  Reduce(2,DEC1,62),
  Reduce(3,DEC1,63),
  Reduce(1,LONGIDLIST,151),
  Reduce(2,DEC1,61),
  Reduce(2,LONGIDLIST,150),
  Reduce(1,ABSDATBIND,58),
  Reduce(7,DEC1,57),
  Reduce(5,DEC1,56),
  Reduce(2,DEC1,53),
  Reduce(2,DEC1,66),
  Reduce(3,DEC,48),
  Reduce(3,DEC0,50),
  Reduce(1,VALBIND,68),
  Reduce(2,DEC1,51),
  Reduce(2,VALBIND,71),
  Reduce(3,VALBIND,69),
  Reduce(4,VALBIND,70),
  Reduce(3,VALBIND1,72),
  Reduce(4,EXP,38),
  Reduce(2,ATEXP,8),
  Reduce(1,EXPSEQ,21),
d491 1
a491 1
  Reduce(3,ATEXP,9),
d493 24
a516 78
  Reduce(3,EXPLIST2,16),
  Reduce(2,EXP,40),
  Reduce(3,EXPSEQ2,22),
  Reduce(3,EXPSEQ,20),
  Reduce(3,DEC,47),
  Reduce(3,DEC0,49),
  Reduce(5,ATEXP,12),
  Reduce(3,ATEXP,10),
  Reduce(3,ATEXP,5),
  Reduce(5,EXPROW,24),
  Reduce(3,FVALLIST,76),
  Reduce(1,ATPATLIST,148),
  Reduce(2,ATPATLIST,149),
  Reduce(5,FVAL,77),
  Reduce(5,FVAL,80),
  Reduce(4,FVAL,79),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,127)),
  Reduce(1,PATVAR,175),
  Reduce(5,BIN_ATPAT,117),
  Reduce(3,STRDEC,192),
  Reduce(3,STRDEC0,194),
  Reduce(5,STREXP,188),
  Reduce(4,STREXP,186),
  Reduce(4,STREXP,187),
  Reduce(3,STREXP,184),
  Reduce(1,SIGID,169),
  Reduce(1,SIGEXP,207),
  Reduce(1,SIG_START,208),
  Reduce(1,SPEC,214),
  Reduce(1,STRDESC,245),
  Reduce(2,SPEC1,224),
  Reduce(3,STRDESC,246),
  Reduce(3,STRDESC1,247),
  Reduce(3,SPEC,216),
  Reduce(3,SPEC0,218),
  Reduce(5,SPEC1,226),
  Reduce(2,SPEC1,223),
  Reduce(1,EXDESC,242),
  Reduce(2,EXDESC1,244),
  Reduce(3,EXDESC,243),
  Reduce(1,LONGSTRID,165),
  Reduce(1,SHAREQ1,250),
  Reduce(1,SHAREQ,248),
  Reduce(2,SPEC1,225),
  Reduce(3,SHAREQ,249),
  Reduce(3,LONGSTRIDEQLIST,252),
  Reduce(2,SHAREQ1,251),
  Reduce(3,LONGTYCONEQLIST,255),
  Reduce(3,LONGTYCONEQLIST,254),
  Reduce(3,LONGSTRIDEQLIST,253),
  Reduce(2,SPEC1,228),
  Reduce(1,SIGIDLIST,229),
  Reduce(2,SIGIDLIST,230),
  Reduce(1,TYPDESC,233),
  Reduce(2,SPEC1,221),
  Reduce(2,TYPDESC1,235),
  Reduce(3,TYPDESC,234),
  Reduce(2,SPEC1,227),
  Reduce(2,SPEC1,220),
  Reduce(2,SPEC1,219),
  Reduce(3,VALDESC,231),
  Reduce(5,VALDESC,232),
  Reduce(1,DATDESC,236),
  Reduce(2,SPEC1,222),
  Reduce(3,DATDESC,237),
  Reduce(1,CONDESC,239),
  Reduce(4,DATDESC1,238),
  Reduce(2,CONDESC1,241),
  Reduce(3,CONDESC,240),
  Reduce(3,SPEC,215),
  Reduce(3,SPEC0,217),
  Reduce(3,SIGEXP,206),
  Reduce(5,STRBIND1,204),
  Reduce(5,STRDEC1,201),
  Reduce(1,FUNIDBIND,267),
  Reduce(1,FUNBIND,259),
  Reduce(2,FUNDEC1,258),
  Reduce(3,FUNBIND1,264),
d518 16
a533 15
  Reduce(3,FUNBIND,260),
  Reduce(3,FUNBIND1,262),
  Reduce(5,FUNBIND1,261),
  Reduce(4,STARTFUNBIND2,266),
  Reduce(6,STARTFUNBIND1,265),
  Reduce(2,SIGDEC1,211),
  Reduce(3,SIGBIND,212),
  Reduce(5,SIGBIND,213),
  Reduce(2,FUNDEC1PLUS,257),
  Reduce(2,PROGRAM,276),
  Reduce(3,PROGRAM,275),
  Reduce(2,TOPDEC,273),
  Reduce(2,STRDEC1PLUS0,198),
  Reduce(2,SIGDEC1PLUS,210),
  Reduce(2,STRDEC1PLUS0,197)]
d536 2
a537 1
  ABSDATBIND, 
d622 2
d717 1
a1133 1

@


1.3
log
@Fixed parsing bugs
with rec and abstype
@
text
@d4 4
d982 1
a982 1
 val action_table = MLWorks.Array.map convert_row action_array
d989 2
a990 2
   MLWorks.Array.map
   (fn a => (MLWorks.Array.map (fn x => output(std_out,Integer.makestring x ^ " ")) a;
@


1.2
log
@More efficient representation of parsing tables.`
@
text
@d4 3
d42 1
d194 1
d229 1
a229 2

val action_array = Array.arrayoflist [Reduce(0,TOPDEC,266),
d231 10
a240 1
  Reduce(1,EXP,31),
d242 4
a245 1
  Reduce(1,STRDEC1,197),
d248 3
a250 1
  Reduce(1,TOPDEC,270),
d252 5
d258 47
a304 32
  Reduce(0,TYVARSEQ,84),
  Reduce(1,ATEXP,3),
  Reduce(1,START_LET,14),
  Reduce(1,OPLONGVAR,160),
  Reduce(1,FUNDEC1PLUS,254),
  Reduce(1,SIGDEC1PLUS,207),
  Reduce(1,START_LOCAL,66),
  Reduce(1,ATEXP,1),
  Reduce(1,SCON,155),
  Reduce(1,ATEXP,2),
  Reduce(0,DECSEP,44),
  Reduce(1,TOPDEC,268),
  Reduce(1,STRDEC1PLUS,194),
  Reduce(1,SCON,154),
  Reduce(1,STRDEC1PLUS,193),
  Reduce(1,APPEXP,25),
  Reduce(1,LONGVAR,159),
  Reduce(1,TOPDEC,267),
  Accept,
  Reduce(1,PROGRAM,273),
  Reduce(2,PROGRAM,272),
  Reduce(1,SYM,165),
  Reduce(1,SYM,164),
  Reduce(1,STRID,168),
  Reduce(2,STRDEC1,198),
  Reduce(1,STRBIND,200),
  Reduce(3,STRBIND,201),
  Reduce(1,SIG_START,206),
  Reduce(1,SIGID,167),
  Reduce(1,SIGEXP,205),
  Reduce(1,SPEC,212),
  Reduce(3,SIGEXP,204),
d306 32
a337 85
  Reduce(1,LONGIDLIST,149),
  Reduce(2,SPEC1,225),
  Reduce(2,LONGIDLIST,148),
  Reduce(1,VARDEF,170),
  Reduce(2,SPEC1,217),
  Reduce(1,TY,135),
  Reduce(5,VALDESC,230),
  Reduce(1,TY,136),
  Reduce(1,LONGTYCON,162),
  Reduce(1,TY,130),
  Reduce(1,TYLIST,140),
  Reduce(3,TYLIST,141),
  Reduce(2,TY,132),
  Reduce(1,LAB,157),
  Reduce(1,LAB,158),
  Reduce(3,TY,131),
  Reduce(5,TYROW,145),
  Reduce(1,STAR,181),
  Reduce(3,TYTUPLE,142),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,142),Shift),
  Reduce(2,TY,134),
  Funcall(ifstarstack,ifstarstackarity,Reduce(1,STAR,181),Reduce(1,LONGTYCON,162)),
  Reduce(3,TY,137),
  Reduce(3,TYTUPLE,143),
  Funcall(ifstarinput,ifstarinputarity,Reduce(3,TYTUPLE,143),Shift),
  Reduce(2,TY,133),
  Reduce(3,TYROW,144),
  Reduce(5,TYSEQ,139),
  Reduce(3,TY,138),
  Reduce(3,VALDESC,229),
  Reduce(2,SPEC1,220),
  Reduce(1,TYVARSEQ,85),
  Reduce(1,DATDESC,234),
  Reduce(1,TYVARLIST,87),
  Reduce(3,TYVARSEQ,86),
  Reduce(3,TYVARLIST,88),
  Reduce(1,TYCON,180),
  Reduce(1,CONDEF,174),
  Reduce(4,DATDESC1,236),
  Reduce(0,OPTOFTYPE,99),
  Reduce(1,CONDESC,237),
  Reduce(2,CONDESC1,239),
  Reduce(2,OPTOFTYPE,100),
  Reduce(3,CONDESC,238),
  Reduce(3,DATDESC,235),
  Reduce(1,TYPDESC,231),
  Reduce(2,SPEC1,218),
  Reduce(3,TYPDESC,232),
  Reduce(2,TYPDESC1,233),
  Reduce(1,EXDESC,240),
  Reduce(1,EXCONDEF,177),
  Reduce(2,SPEC1,221),
  Reduce(3,EXDESC,241),
  Reduce(2,EXDESC1,242),
  Reduce(3,SPEC,214),
  Reduce(3,SPEC0,216),
  Reduce(5,SPEC1,224),
  Reduce(1,STRDESC,243),
  Reduce(2,SPEC1,222),
  Reduce(3,STRDESC,244),
  Reduce(3,STRDESC1,245),
  Reduce(1,SHAREQ1,248),
  Reduce(2,SPEC1,223),
  Reduce(1,SHAREQ,246),
  Reduce(1,LONGSTRID,163),
  Reduce(2,SHAREQ1,249),
  Reduce(3,LONGTYCONEQLIST,253),
  Reduce(3,LONGTYCONEQLIST,252),
  Reduce(3,LONGSTRIDEQLIST,250),
  Reduce(3,SHAREQ,247),
  Reduce(3,LONGSTRIDEQLIST,251),
  Reduce(2,SPEC1,219),
  Reduce(2,SPEC1,226),
  Reduce(1,SIGIDLIST,227),
  Reduce(2,SIGIDLIST,228),
  Reduce(3,SPEC,213),
  Reduce(3,SPEC0,215),
  Reduce(1,STRUCT_START,187),
  Reduce(5,STRBIND1,202),
  Reduce(1,STREXP,183),
  Reduce(1,FUNID,166),
  Reduce(1,STRDEC,188),
  Reduce(3,STREXP,182),
  Reduce(2,DEC1,60),
  Reduce(0,OPTTYPE,79),
d339 1
a339 4
  Resolve[Reduce(1,ATPAT,103),Shift],
  Reduce(1,OPVARDEF,171),
  Reduce(1,ATPAT,102),
  Reduce(1,PAT,125),
d341 15
a355 6
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,104),Shift),
  Funcall(ifvarstack,ifvarstackarity,Reduce(1,VARDEF,170),Reduce(1,LONGVAR,159)),
  Reduce(1,VALBIND,67),
  Reduce(2,DEC1,51),
  Reduce(1,ATPAT,101),
  Reduce(3,VALBIND,68),
a356 1
  Reduce(1,VAR,169),
d358 10
a367 10
  Reduce(3,PATLIST2,118),
  Reduce(3,PAT,128),
  Reduce(3,PAT,127),
  Funcall(ifleftassoc,ifleftassocarity,Reduce(3,PAT,127),Shift),
  Reduce(2,OPVARDEF,172),
  Reduce(2,OPLONGVAR,161),
  Reduce(2,ATPAT,109),
  Reduce(3,ATPAT,113),
  Reduce(2,ATPAT,108),
  Reduce(1,PATROW,120),
d369 6
a374 15
  Reduce(2,PATROW1,123),
  Reduce(4,PATROW1,124),
  Reduce(2,PAT,126),
  Reduce(4,PAT,129),
  Reduce(2,OPTTYPE,80),
  Reduce(3,ATPAT,105),
  Reduce(3,PATROW,121),
  Reduce(5,ATPAT,106),
  Reduce(3,PATROW1,122),
  Reduce(3,ATPAT,110),
  Reduce(3,PATLIST2,119),
  Reduce(3,ATPAT,114),
  Reduce(3,VALBIND1,70),
  Reduce(1,EXPLIST,18),
  Reduce(1,EXPLIST,19),
d376 1
a376 12
  Reduce(1,DEC,46),
  Reduce(1,EXPSEQ,21),
  Reduce(1,MATCH,42),
  Reduce(2,EXP,40),
  Reduce(3,MRULE,43),
  Reduce(2,ATEXP,8),
  Reduce(2,APPEXP,26),
  Reduce(2,ATEXP,6),
  Reduce(3,ATEXP,5),
  Reduce(5,EXPROW,24),
  Reduce(2,ATEXP,7),
  Reduce(2,EXP,36),
a377 1
  Reduce(3,EXP,34),
d380 1
d382 2
a384 1
  Reduce(1,INFVAR,29),
d387 1
a387 1
  Reduce(4,EXP,38),
d389 7
d397 24
a420 2
  Reduce(3,EXPSEQ2,22),
  Reduce(3,EXPSEQ,20),
a421 1
  Reduce(3,EXPLIST2,15),
d424 3
a426 29
  Reduce(3,ATEXP,11),
  Reduce(5,ATEXP,12),
  Reduce(1,DATBIND,89),
  Reduce(1,CONBIND,92),
  Reduce(4,DATBIND1,91),
  Reduce(1,OPCONDEF,175),
  Reduce(2,OPCONDEF,176),
  Reduce(3,CONBIND,93),
  Reduce(2,CONBIND1,94),
  Reduce(5,DEC1,56),
  Reduce(1,TYPBIND,81),
  Reduce(7,DEC1,57),
  Reduce(3,TYPBIND,82),
  Reduce(4,TYPBIND1,83),
  Reduce(3,DATBIND,90),
  Reduce(2,DEC1,54),
  Reduce(4,DEC1,55),
  Reduce(2,DEC1,53),
  Reduce(2,DEC1,63),
  Reduce(1,SYMLIST,152),
  Reduce(3,DEC1,64),
  Reduce(2,SYMLIST,153),
  Reduce(1,OPEXCONDEF,178),
  Reduce(2,DEC1,58),
  Reduce(1,EXBIND,95),
  Reduce(2,OPEXCONDEF,179),
  Reduce(3,EXBIND,96),
  Reduce(2,EXBIND1,97),
  Reduce(3,EXBIND1,98),
d429 1
a429 23
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT1,116),Shift),
  Reduce(1,FVALLIST,73),
  Funcall(ifinfixinput,ifinfixinputarity,Reduce(1,ATPAT,103),Shift),
  Reduce(2,DEC1,52),
  Reduce(1,ATPAT1,117),
  Reduce(1,FVALBIND,71),
  Reduce(6,FVAL,76),
  Reduce(3,FVALLIST,74),
  Funcall(ifinfixinput,ifinfixinputarity,Shift,Reduce(1,PAT,125)),
  Reduce(1,PATVAR,173),
  Reduce(5,BIN_ATPAT,115),
  Reduce(1,ATPATLIST,146),
  Reduce(2,ATPATLIST,147),
  Reduce(5,FVAL,75),
  Reduce(4,FVAL,77),
  Reduce(5,FVAL,78),
  Reduce(3,FVALBIND,72),
  Reduce(2,DEC1,61),
  Reduce(3,DEC1,62),
  Reduce(2,DEC1,65),
  Reduce(5,DEC1,59),
  Reduce(3,DEC,48),
  Reduce(3,DEC0,50),
d431 73
a503 20
  Reduce(4,EXP,39),
  Reduce(2,VALBIND,69),
  Reduce(3,STRDEC,190),
  Reduce(3,STRDEC0,192),
  Reduce(5,STRDEC1,199),
  Reduce(3,STRDEC,189),
  Reduce(3,STRDEC0,191),
  Reduce(5,STREXP,186),
  Reduce(4,STREXP,185),
  Reduce(4,STREXP,184),
  Reduce(3,STRBIND1,203),
  Reduce(2,STRDEC1PLUS0,195),
  Reduce(2,STRDEC1PLUS0,196),
  Reduce(2,SIGDEC1PLUS,208),
  Reduce(2,SIGDEC1,209),
  Reduce(5,SIGBIND,211),
  Reduce(3,SIGBIND,210),
  Reduce(2,FUNDEC1,256),
  Reduce(1,FUNBIND,257),
  Reduce(1,FUNIDBIND,265),
d505 12
a516 8
  Reduce(3,FUNBIND1,262),
  Reduce(4,STARTFUNBIND2,264),
  Reduce(6,STARTFUNBIND1,263),
  Reduce(3,FUNBIND,258),
  Reduce(5,FUNBIND1,259),
  Reduce(3,FUNBIND1,260),
  Reduce(2,FUNDEC1PLUS,255),
  Reduce(2,TOPDEC,271)]
d519 1
d671 1
d940 1
a940 1
val assoc_threshold = 2
d949 1
a949 1
  let val a = has_unique_entry row
d956 1
d1007 1
d1009 16
a1024 1
    [](* map #1 (Array.sub (actions,state)) *)
@


1.1
log
@Initial revision
@
text
@d4 3
d11 3
d16 5
a20 1
                  val actionfile :string) : LRBASICS =
d814 3
a816 1
   Array.sub (action_array,a)
d820 163
a982 3
 fun make_actions action_map = Array.arrayoflist (convert_map (convert_symbol,convert_action) action_map)
 val gotos = make_gotos (parse_table_file gotofile)
 val actions = make_actions (parse_table_file actionfile)
a983 3
 exception Assoc
 fun assoc (a,[]) = raise Assoc
   | assoc (a,(b,c)::d) = if a = b then c else assoc (a,d)
d986 8
a993 2
  fun get_next_state (gsym,state) = 
    assoc(gsym,Array.sub (gotos,state)) handle Assoc => raise NoNextState
d995 1
d997 1
a997 1
    map #1 (Array.sub (actions,state))
d1000 18
a1017 1
    assoc(gsym,Array.sub (actions,state)) handle Assoc => NoAction
d1086 1
@
