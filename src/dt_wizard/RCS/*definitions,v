head	1.12;
access;
symbols
	MLW_daveb_inline_1_4_99:1.12.1
	MLWorks_21c0_1999_03_25:1.11
	MLWorks_20c1_1998_08_20:1.10
	MLWorks_20c0_1998_08_04:1.9
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.7
	MLWorks_20b1c1_1998_05_07:1.6
	MLWorks_20b0_1998_04_07:1.5
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_workspace_97:1.2.1
	MLWorks_dt_wizard:1.1.1;
locks; strict;
comment	@# @;


1.12
date	99.03.25.17.15.22;	author johnh;	state Exp;
branches
	1.12.1.1;
next	1.11;

1.11
date	98.08.20.08.18.51;	author mitchell;	state Exp;
branches;
next	1.10;

1.10
date	98.08.04.11.13.01;	author jkbrook;	state Exp;
branches;
next	1.9;

1.9
date	98.06.19.18.26.54;	author jkbrook;	state Exp;
branches;
next	1.8;

1.8
date	98.06.12.13.36.13;	author jkbrook;	state Exp;
branches;
next	1.7;

1.7
date	98.05.07.17.24.08;	author jkbrook;	state Exp;
branches;
next	1.6;

1.6
date	98.04.07.14.46.41;	author jkbrook;	state Exp;
branches;
next	1.5;

1.5
date	98.03.20.21.29.00;	author jkbrook;	state Exp;
branches;
next	1.4;

1.4
date	98.02.16.18.36.01;	author jkbrook;	state Exp;
branches;
next	1.3;

1.3
date	97.10.23.14.37.43;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	97.09.11.16.04.24;	author brucem;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	97.09.11.15.51.16;	author brucem;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.09.11.15.56.26;	author brucem;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.09.11.16.08.29;	author brucem;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	97.09.11.16.10.08;	author brucem;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	97.09.11.16.11.37;	author brucem;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	97.09.11.16.13.58;	author brucem;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	97.09.11.16.15.37;	author brucem;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	97.09.11.16.16.57;	author brucem;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	97.09.11.16.18.15;	author brucem;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	97.09.11.16.19.36;	author brucem;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	97.09.11.16.21.05;	author brucem;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	97.09.11.16.22.12;	author brucem;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	97.09.11.16.23.22;	author brucem;	state Exp;
branches;
next	1.1.1.13;

1.1.1.13
date	97.09.11.16.24.31;	author brucem;	state Exp;
branches;
next	1.1.1.14;

1.1.1.14
date	97.09.11.16.25.40;	author brucem;	state Exp;
branches;
next	1.1.1.15;

1.1.1.15
date	97.09.11.16.27.30;	author brucem;	state Exp;
branches;
next	1.1.1.16;

1.1.1.16
date	97.09.11.16.28.48;	author brucem;	state Exp;
branches;
next	1.1.1.17;

1.1.1.17
date	97.09.11.16.30.05;	author brucem;	state Exp;
branches;
next	1.1.1.18;

1.1.1.18
date	97.09.11.16.31.19;	author brucem;	state Exp;
branches;
next	1.1.1.19;

1.1.1.19
date	97.09.11.16.32.52;	author brucem;	state Exp;
branches;
next	1.1.1.20;

1.1.1.20
date	97.09.11.16.34.11;	author brucem;	state Exp;
branches;
next	1.1.1.21;

1.1.1.21
date	97.09.12.08.36.16;	author brucem;	state Exp;
branches;
next	1.1.1.22;

1.1.1.22
date	97.09.12.08.37.25;	author brucem;	state Exp;
branches;
next	1.1.1.23;

1.1.1.23
date	97.09.12.08.38.48;	author brucem;	state Exp;
branches;
next	1.1.1.24;

1.1.1.24
date	97.09.12.08.39.53;	author brucem;	state Exp;
branches;
next	1.1.1.25;

1.1.1.25
date	97.09.12.08.41.07;	author brucem;	state Exp;
branches;
next	1.1.1.26;

1.1.1.26
date	97.09.12.08.42.21;	author brucem;	state Exp;
branches;
next	1.1.1.27;

1.1.1.27
date	97.09.12.08.43.43;	author brucem;	state Exp;
branches;
next	1.1.1.28;

1.1.1.28
date	97.09.12.08.45.04;	author brucem;	state Exp;
branches;
next	1.1.1.29;

1.1.1.29
date	97.09.12.08.46.43;	author brucem;	state Exp;
branches;
next	1.1.1.30;

1.1.1.30
date	97.09.12.08.47.57;	author brucem;	state Exp;
branches;
next	1.1.1.31;

1.1.1.31
date	97.09.12.08.49.53;	author brucem;	state Exp;
branches;
next	1.1.1.32;

1.1.1.32
date	97.09.12.08.51.06;	author brucem;	state Exp;
branches;
next	1.1.1.33;

1.1.1.33
date	97.09.12.08.52.10;	author brucem;	state Exp;
branches;
next	1.1.1.34;

1.1.1.34
date	97.09.12.08.53.19;	author brucem;	state Exp;
branches;
next	1.1.1.35;

1.1.1.35
date	97.09.12.08.54.28;	author brucem;	state Exp;
branches;
next	1.1.1.36;

1.1.1.36
date	97.09.12.08.56.00;	author brucem;	state Exp;
branches;
next	1.1.1.37;

1.1.1.37
date	97.09.12.08.57.42;	author brucem;	state Exp;
branches;
next	1.1.1.38;

1.1.1.38
date	97.09.12.08.58.54;	author brucem;	state Exp;
branches;
next	1.1.1.39;

1.1.1.39
date	97.09.12.09.00.19;	author brucem;	state Exp;
branches;
next	1.1.1.40;

1.1.1.40
date	97.09.12.09.02.03;	author brucem;	state Exp;
branches;
next	1.1.1.41;

1.1.1.41
date	97.09.12.09.10.12;	author brucem;	state Exp;
branches;
next	1.1.1.42;

1.1.1.42
date	97.09.12.09.11.40;	author brucem;	state Exp;
branches;
next	1.1.1.43;

1.1.1.43
date	97.09.12.09.13.08;	author brucem;	state Exp;
branches;
next	1.1.1.44;

1.1.1.44
date	97.09.12.09.14.35;	author brucem;	state Exp;
branches;
next	1.1.1.45;

1.1.1.45
date	97.09.12.09.16.04;	author brucem;	state Exp;
branches;
next	1.1.1.46;

1.1.1.46
date	97.09.12.09.17.29;	author brucem;	state Exp;
branches;
next	1.1.1.47;

1.1.1.47
date	97.09.12.09.18.53;	author brucem;	state Exp;
branches;
next	1.1.1.48;

1.1.1.48
date	97.09.12.09.20.03;	author brucem;	state Exp;
branches;
next	1.1.1.49;

1.1.1.49
date	97.09.12.09.21.20;	author brucem;	state Exp;
branches;
next	1.1.1.50;

1.1.1.50
date	97.09.12.09.22.34;	author brucem;	state Exp;
branches;
next	1.1.1.51;

1.1.1.51
date	97.09.12.09.24.00;	author brucem;	state Exp;
branches;
next	1.1.1.52;

1.1.1.52
date	97.09.12.09.26.11;	author brucem;	state Exp;
branches;
next	1.1.1.53;

1.1.1.53
date	97.09.12.09.28.21;	author brucem;	state Exp;
branches;
next	1.1.1.54;

1.1.1.54
date	97.09.12.09.30.23;	author brucem;	state Exp;
branches;
next	1.1.1.55;

1.1.1.55
date	97.09.12.09.31.57;	author brucem;	state Exp;
branches;
next	1.1.1.56;

1.1.1.56
date	97.09.12.09.33.33;	author brucem;	state Exp;
branches;
next	1.1.1.57;

1.1.1.57
date	97.09.12.09.35.03;	author brucem;	state Exp;
branches;
next	1.1.1.58;

1.1.1.58
date	97.09.12.09.36.55;	author brucem;	state Exp;
branches;
next	1.1.1.59;

1.1.1.59
date	97.09.12.09.38.23;	author brucem;	state Exp;
branches;
next	1.1.1.60;

1.1.1.60
date	97.09.12.09.42.34;	author brucem;	state Exp;
branches;
next	1.1.1.61;

1.1.1.61
date	97.09.26.16.11.38;	author brucem;	state Exp;
branches;
next	1.1.1.62;

1.1.1.62
date	97.09.26.16.12.52;	author brucem;	state Exp;
branches;
next	1.1.1.63;

1.1.1.63
date	97.09.26.16.14.27;	author brucem;	state Exp;
branches;
next	1.1.1.64;

1.1.1.64
date	97.09.26.16.15.27;	author brucem;	state Exp;
branches;
next	1.1.1.65;

1.1.1.65
date	97.09.26.16.16.33;	author brucem;	state Exp;
branches;
next	;

1.2.1.1
date	97.09.11.20.49.46;	author daveb;	state Exp;
branches;
next	;

1.12.1.1
date	99.04.01.17.53.29;	author daveb;	state Exp;
branches;
next	;


desc
@-not-supplied-
@


1.12
log
@checkpointed with label MLWorks_21c0_1999_03_25 from trunk at current time.
@
text
@unit::=dt.grm::=.
@


1.12.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@d1 1
a1 1
unit::=dt.grm::=MLW_daveb_inline_1_4_99
@


1.11
log
@checkpointed with label MLWorks_20c1_1998_08_20 from trunk at current time.
@
text
@@


1.10
log
@checkpointed with label MLWorks_20c0_1998_08_04 from trunk at current time.
@
text
@@


1.9
log
@checkpointed with label MLWorks_20b2c2_1998_06_19 from trunk at current time.
@
text
@@


1.8
log
@checkpointed with label MLWorks_20b2_Windows_1998_06_12 from trunk at current time.
@
text
@@


1.7
log
@checkpointed with label MLWorks_20b1c1_1998_05_07 from trunk at current time.
@
text
@@


1.6
log
@checkpointed with label MLWorks_20b0_1998_04_07 from trunk at current time.
@
text
@@


1.5
log
@checkpointed with label MLWorks_20b0_1998_03_20 from trunk at current time.
@
text
@@


1.4
log
@checkpointed with label MLWorks_20m2_1998_02_16 from trunk at current time.
@
text
@@


1.3
log
@checkpointed with label MLWorks_20m1_1997_10_23 from trunk at current time.
@
text
@@


1.2
log
@added unit dt.grm to trunk
Grammar for extracting datatypes from files.
@
text
@@


1.2.1.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@d1 1
a1 1
unit::=dt.grm::=MLWorks_workspace_97
@


1.1
log
@Definitions file for MLWdt_wizard
@
text
@d1 1
@


1.1.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@@


1.1.1.2
log
@added unit __abs_syn_strings.sml to branch MLWorks_dt_wizard
Structure containing abstract syntax to string functions.
@
text
@a0 1
unit::=__abs_syn_strings.sml::=MLWorks_dt_wizard
@


1.1.1.3
log
@added unit __abs_syn_utils.sml to branch MLWorks_dt_wizard
Abstract syntax manipulation.
@
text
@a1 1
unit::=__abs_syn_utils.sml::=MLWorks_dt_wizard
@


1.1.1.4
log
@added unit __abs_syntax.sml to branch MLWorks_dt_wizard
Abstract Syntax for datatype declarations.
@
text
@a2 1
unit::=__abs_syntax.sml::=MLWorks_dt_wizard
@


1.1.1.5
log
@added unit __config.sml to branch MLWorks_dt_wizard
Type for describing how to configure the wizard.
@
text
@a3 1
unit::=__config.sml::=MLWorks_dt_wizard
@


1.1.1.6
log
@added unit __elab.sml to branch MLWorks_dt_wizard
Elaboration for datatype declarations.
@
text
@a4 1
unit::=__elab.sml::=MLWorks_dt_wizard
@


1.1.1.7
log
@added unit __lex_parse_interface.sml to branch MLWorks_dt_wizard
Values and types shared by the lexer and parser.
@
text
@a5 1
unit::=__lex_parse_interface.sml::=MLWorks_dt_wizard
@


1.1.1.8
log
@added unit __make_all.sml to branch MLWorks_dt_wizard
Write `all' functions for datatypes.
@
text
@a6 1
unit::=__make_all.sml::=MLWorks_dt_wizard
@


1.1.1.9
log
@added unit __make_app.sml to branch MLWorks_dt_wizard
Write `app' functions for datatypes.
@
text
@a7 1
unit::=__make_app.sml::=MLWorks_dt_wizard
@


1.1.1.10
log
@added unit __make_cmp.sml to branch MLWorks_dt_wizard
Write `cmp' functions for datatypes.
@
text
@a8 1
unit::=__make_cmp.sml::=MLWorks_dt_wizard
@


1.1.1.11
log
@added unit __make_depth.sml to branch MLWorks_dt_wizard
write `depth' functions for datatypes.
@
text
@a9 1
unit::=__make_depth.sml::=MLWorks_dt_wizard
@


1.1.1.12
log
@added unit __make_eq.sml to branch MLWorks_dt_wizard
write `eq' functions for datatypes.
@
text
@a10 1
unit::=__make_eq.sml::=MLWorks_dt_wizard
@


1.1.1.13
log
@added unit __make_exists.sml to branch MLWorks_dt_wizard
Write `exists' functions for datatypes.
@
text
@a11 1
unit::=__make_exists.sml::=MLWorks_dt_wizard
@


1.1.1.14
log
@added unit __make_find.sml to branch MLWorks_dt_wizard
WRite `find' functions for datatypes.
@
text
@a12 1
unit::=__make_find.sml::=MLWorks_dt_wizard
@


1.1.1.15
log
@added unit __make_fold.sml to branch MLWorks_dt_wizard
Write `fold' functions for datatypes.
@
text
@a13 1
unit::=__make_fold.sml::=MLWorks_dt_wizard
@


1.1.1.16
log
@added unit __make_fun.sml to branch MLWorks_dt_wizard
Write general polymorphic functions on datatypes.
@
text
@a14 1
unit::=__make_fun.sml::=MLWorks_dt_wizard
@


1.1.1.17
log
@added unit __make_is_empty.sml to branch MLWorks_dt_wizard
WRite `isEmpty' functions for datatypes.
@
text
@a15 1
unit::=__make_is_empty.sml::=MLWorks_dt_wizard
@


1.1.1.18
log
@added unit __make_map.sml to branch MLWorks_dt_wizard
Write `map' functions for datatypes.
@
text
@a16 1
unit::=__make_map.sml::=MLWorks_dt_wizard
@


1.1.1.19
log
@added unit __make_sig_and_struct.sml to branch MLWorks_dt_wizard
Write a signature and structure.
@
text
@a17 1
unit::=__make_sig_and_struct.sml::=MLWorks_dt_wizard
@


1.1.1.20
log
@added unit __make_size.sml to branch MLWorks_dt_wizard
Write `size' functions for datatypes.
@
text
@a18 1
unit::=__make_size.sml::=MLWorks_dt_wizard
@


1.1.1.21
log
@added unit __name_utils.sml to branch MLWorks_dt_wizard
Convert names from ONE_STYLE to Another.
@
text
@a19 1
unit::=__name_utils.sml::=MLWorks_dt_wizard
@


1.1.1.22
log
@added unit __parser.sml to branch MLWorks_dt_wizard
Parse a file.
@
text
@a20 1
unit::=__parser.sml::=MLWorks_dt_wizard
@


1.1.1.23
log
@added unit __result.sml to branch MLWorks_dt_wizard
`result' datatype.
@
text
@a21 1
unit::=__result.sml::=MLWorks_dt_wizard
@


1.1.1.24
log
@added unit __string_utils.sml to branch MLWorks_dt_wizard
Manipulate strings.
@
text
@a22 1
unit::=__string_utils.sml::=MLWorks_dt_wizard
@


1.1.1.25
log
@added unit __wizard.sml to branch MLWorks_dt_wizard
Final function of the wizard (excluding the GUI).
@
text
@a23 1
unit::=__wizard.sml::=MLWorks_dt_wizard
@


1.1.1.26
log
@added unit _abs_syn_strings.sml to branch MLWorks_dt_wizard
Extract strings from abstract syntax.
@
text
@a24 1
unit::=_abs_syn_strings.sml::=MLWorks_dt_wizard
@


1.1.1.27
log
@added unit _abs_syn_utils.sml to branch MLWorks_dt_wizard
Manipulate abstract syntax.
@
text
@a25 1
unit::=_abs_syn_utils.sml::=MLWorks_dt_wizard
@


1.1.1.28
log
@added unit _config.sml to branch MLWorks_dt_wizard
Allow users to configure the wizard.
@
text
@a26 1
unit::=_config.sml::=MLWorks_dt_wizard
@


1.1.1.29
log
@added unit _elab.sml to branch MLWorks_dt_wizard
 Check whether datatype declarations are valid.
@
text
@a27 1
unit::=_elab.sml::=MLWorks_dt_wizard
@


1.1.1.30
log
@added unit _make_app.sml to branch MLWorks_dt_wizard
Write `app' functions.
@
text
@a28 1
unit::=_make_app.sml::=MLWorks_dt_wizard
@


1.1.1.31
log
@added unit _make_cmp.sml to branch MLWorks_dt_wizard
Write `cmp' functions.
@
text
@a29 1
unit::=_make_cmp.sml::=MLWorks_dt_wizard
@


1.1.1.32
log
@added unit _make_depth.sml to branch MLWorks_dt_wizard
Write `depth' functions.
@
text
@a30 1
unit::=_make_depth.sml::=MLWorks_dt_wizard
@


1.1.1.33
log
@added unit _make_eq.sml to branch MLWorks_dt_wizard
Write `eq' functions.
@
text
@a31 1
unit::=_make_eq.sml::=MLWorks_dt_wizard
@


1.1.1.34
log
@added unit _make_find.sml to branch MLWorks_dt_wizard
Write `find' functions.
@
text
@a32 1
unit::=_make_find.sml::=MLWorks_dt_wizard
@


1.1.1.35
log
@added unit _make_fold.sml to branch MLWorks_dt_wizard
Write `fold' functions.
@
text
@a33 1
unit::=_make_fold.sml::=MLWorks_dt_wizard
@


1.1.1.36
log
@added unit _make_fun.sml to branch MLWorks_dt_wizard
Write polymorphic functions acting on datatypes.
@
text
@a34 1
unit::=_make_fun.sml::=MLWorks_dt_wizard
@


1.1.1.37
log
@added unit _make_is_empty.sml to branch MLWorks_dt_wizard
Write `isEmpty' functions.
@
text
@a35 1
unit::=_make_is_empty.sml::=MLWorks_dt_wizard
@


1.1.1.38
log
@added unit _make_map.sml to branch MLWorks_dt_wizard
Write `map' functions.
@
text
@a36 1
unit::=_make_map.sml::=MLWorks_dt_wizard
@


1.1.1.39
log
@added unit _make_quantifier.sml to branch MLWorks_dt_wizard
Write quantifier functions (e.g. exists).
@
text
@a37 1
unit::=_make_quantifier.sml::=MLWorks_dt_wizard
@


1.1.1.40
log
@added unit _make_sig_and_struct.sml to branch MLWorks_dt_wizard
Functor application takes lots of function writing WIZ_UTILs and makes
a sig & struct writing WIZ_UTIL.
@
text
@a38 1
unit::=_make_sig_and_struct.sml::=MLWorks_dt_wizard
@


1.1.1.41
log
@added unit _make_size.sml to branch MLWorks_dt_wizard
Write `size' functions.
@
text
@a39 1
unit::=_make_size.sml::=MLWorks_dt_wizard
@


1.1.1.42
log
@added unit _make_to_string.sml to branch MLWorks_dt_wizard
Write `toString' functions.
@
text
@a40 1
unit::=_make_to_string.sml::=MLWorks_dt_wizard
@


1.1.1.43
log
@added unit _name_utils.sml to branch MLWorks_dt_wizard
Convert names from ONE_STYLE to anotherOne.
@
text
@a41 1
unit::=_name_utils.sml::=MLWorks_dt_wizard
@


1.1.1.44
log
@added unit _parser.sml to branch MLWorks_dt_wizard
Nice front end to lex and yacc output.
@
text
@a42 1
unit::=_parser.sml::=MLWorks_dt_wizard
@


1.1.1.45
log
@added unit _wizard.sml to branch MLWorks_dt_wizard
Pull together utility, elaborator and parser.
@
text
@a43 1
unit::=_wizard.sml::=MLWorks_dt_wizard
@


1.1.1.46
log
@added unit abs_syn_strings.sml to branch MLWorks_dt_wizard
Defines ways of extracting strings from abstract syntax.
@
text
@a44 1
unit::=abs_syn_strings.sml::=MLWorks_dt_wizard
@


1.1.1.47
log
@added unit abs_syn_utils.sml to branch MLWorks_dt_wizard
Defines functions for manipulating abstract syntax.
@
text
@a45 1
unit::=abs_syn_utils.sml::=MLWorks_dt_wizard
@


1.1.1.48
log
@added unit abs_syntax.sml to branch MLWorks_dt_wizard
Specifies abstract synax.
@
text
@a46 1
unit::=abs_syntax.sml::=MLWorks_dt_wizard
@


1.1.1.49
log
@added unit config.sml to branch MLWorks_dt_wizard
Specifies a way to configure the wizard.
@
text
@a47 1
unit::=config.sml::=MLWorks_dt_wizard
@


1.1.1.50
log
@added unit elab.sml to branch MLWorks_dt_wizard
Specifies elaboration structure.
@
text
@a48 1
unit::=elab.sml::=MLWorks_dt_wizard
@


1.1.1.51
log
@added unit lex_parse_interface.sml to branch MLWorks_dt_wizard
Specifies data and types shared by lexer and parser.
@
text
@a49 1
unit::=lex_parse_interface.sml::=MLWorks_dt_wizard
@


1.1.1.52
log
@added unit make_fun.sml to branch MLWorks_dt_wizard
Specifies structure for writing polymorphic functions.
@
text
@a50 1
unit::=make_fun.sml::=MLWorks_dt_wizard
@


1.1.1.53
log
@added unit name_utils.sml to branch MLWorks_dt_wizard
Specifies functions for converting names.
@
text
@a51 1
unit::=name_utils.sml::=MLWorks_dt_wizard
@


1.1.1.54
log
@added unit parser.sml to branch MLWorks_dt_wizard
Specifies structure for using the parser.
@
text
@a52 1
unit::=parser.sml::=MLWorks_dt_wizard
@


1.1.1.55
log
@added unit result.sml to branch MLWorks_dt_wizard
Specifies `result' datatype.
@
text
@a53 1
unit::=result.sml::=MLWorks_dt_wizard
@


1.1.1.56
log
@added unit string_utils.sml to branch MLWorks_dt_wizard
Specifies functions for string manipulation
@
text
@a54 1
unit::=string_utils.sml::=MLWorks_dt_wizard
@


1.1.1.57
log
@added unit wiz_util.sml to branch MLWorks_dt_wizard
Specifies Wizard utilities.
@
text
@a55 1
unit::=wiz_util.sml::=MLWorks_dt_wizard
@


1.1.1.58
log
@added unit wizard.sml to branch MLWorks_dt_wizard
Specifies the Wizard structure.
@
text
@a56 1
unit::=wizard.sml::=MLWorks_dt_wizard
@


1.1.1.59
log
@added unit dt.lex to branch MLWorks_dt_wizard
Defines the lexer.
@
text
@a48 1
unit::=dt.lex::=MLWorks_dt_wizard
@


1.1.1.60
log
@added unit dt.grm to branch MLWorks_dt_wizard
Grammar definition for extracting datatypes from files.
@
text
@a48 1
unit::=dt.grm::=MLWorks_dt_wizard
@


1.1.1.61
log
@added unit __out_syntax.sml to branch MLWorks_dt_wizard
Help formatting output of DT-Wizard.
@
text
@a20 1
unit::=__out_syntax.sml::=MLWorks_dt_wizard
@


1.1.1.62
log
@added unit out_syntax.sml to branch MLWorks_dt_wizard
Help formatting output of Datatype Wizard.
@
text
@a55 1
unit::=out_syntax.sml::=MLWorks_dt_wizard
@


1.1.1.63
log
@added unit README.out_syntax to branch MLWorks_dt_wizard
About out_syntax and __out_syntax.
@
text
@a0 1
unit::=README.out_syntax::=MLWorks_dt_wizard
@


1.1.1.64
log
@added unit UserGuide to branch MLWorks_dt_wizard
How to use the Datatype Wizard.
@
text
@a1 1
unit::=UserGuide::=MLWorks_dt_wizard
@


1.1.1.65
log
@added unit test_out_syntax.sml to branch MLWorks_dt_wizard
Examples for out_syntax.
@
text
@a61 1
unit::=test_out_syntax.sml::=MLWorks_dt_wizard
@
