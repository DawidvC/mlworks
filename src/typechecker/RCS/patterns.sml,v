head	1.11;
access;
symbols
	MLW_daveb_inline_1_4_99:1.11.11
	MLWorks_21c0_1999_03_25:1.11
	MLWorks_20c1_1998_08_20:1.11
	MLWorks_20c0_1998_08_04:1.11
	MLWorks_20b2c2_1998_06_19:1.11
	MLWorks_20b2_Windows_1998_06_12:1.11
	MLWorks_20b1c1_1998_05_07:1.11
	MLWorks_20b0_1998_04_07:1.11
	MLWorks_20b0_1998_03_20:1.11
	MLWorks_20m2_1998_02_16:1.11
	MLWorks_20m1_1997_10_23:1.11
	MLWorks_11r1:1.11.8.1.1.1.1
	MLWorks_workspace_97:1.11.10
	MLWorks_dt_wizard:1.11.9
	MLWorks_11c0_1997_09_09:1.11.8.1.1.1
	MLWorks_10r3:1.11.8.1.3
	MLWorks_10r2_551:1.11.8.1.2
	MLWorks_11:1.11.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.11.8.1
	MLWorks_20m0_1997_06_20:1.11
	MLWorks_1_0_r2c2_1997_06_14:1.11.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.11.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.11.8
	MLWorks_BugFix_1997_04_24:1.11
	MLWorks_1_0_r2_Win32_1997_04_11:1.11
	MLWorks_1_0_r2_Unix_1997_04_04:1.11
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.11.6.1.1
	MLWorks_gui_1996_12_18:1.11.7
	MLWorks_1_0_Win32_1996_12_17:1.11.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.11.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.11.4.1
	MLWorks_1_0_Irix_1996_11_28:1.11.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.11.5
	MLWorks_1_0_Unix_1996_11_14:1.11.4
	MLWorks_Open_Beta2_1996_10_11:1.11.3
	MLWorks_License_dev:1.11.2
	MLWorks_1_open_beta_1996_09_13:1.11.1
	MLWorks_Open_Beta_1996_08_22:1.11
	MLWorks_Beta_1996_07_02:1.11
	MLWorks_Beta_1996_06_07:1.11
	MLWorks_Beta_1996_06_06:1.11
	MLWorks_Beta_1996_06_05:1.11
	MLWorks_Beta_1996_06_03:1.11
	MLWorks_Beta_1996_05_31:1.11
	MLWorks_Beta_1996_05_30:1.11
	ML_beta_release_12/08/94:1.10
	ML_beta_release_03/08/94:1.10
	ML_revised_beta_release_25/05/94:1.10
	ML_final_beta_release_02/03/94:1.10
	mlworks-28-01-1994:1.9
	Release:1.9
	mlworks-beta-01-09-1993:1.9
	MLWorks-1-0-4-29/01/1993:1.5
	MLWorks-1-0-3-21/12/1992:1.5
	MLWorks-1-0-2-15/12/1992:1.5
	MLWorks-1-0-1-04/12/1992:1.5
	checkpoint_17_08_92:1.4
	Ten15_release_19-11-91:1.1.1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.11
date	94.09.14.12.15.52;	author matthew;	state Exp;
branches
	1.11.1.1
	1.11.2.1
	1.11.3.1
	1.11.4.1
	1.11.5.1
	1.11.6.1
	1.11.7.1
	1.11.8.1
	1.11.9.1
	1.11.10.1
	1.11.11.1;
next	1.10;

1.10
date	94.02.17.16.25.31;	author nosa;	state Exp;
branches;
next	1.9;

1.9
date	93.03.10.15.22.53;	author matthew;	state Exp;
branches
	1.9.1.1;
next	1.8;

1.8
date	93.03.09.13.03.10;	author matthew;	state Exp;
branches;
next	1.7;

1.7
date	93.02.08.15.05.54;	author matthew;	state Exp;
branches;
next	1.6;

1.6
date	93.02.01.16.17.30;	author matthew;	state Exp;
branches;
next	1.5;

1.5
date	92.11.04.17.26.37;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	92.08.12.10.29.20;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	91.11.21.16.52.55;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.11.19.12.19.04;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.11.44.33;	author colin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	91.11.19.11.12.59;	author jont;	state Exp;
branches;
next	;

1.9.1.1
date	93.03.10.15.22.53;	author jont;	state Exp;
branches;
next	;

1.11.1.1
date	96.09.13.11.41.05;	author hope;	state Exp;
branches;
next	;

1.11.2.1
date	96.10.07.16.34.07;	author hope;	state Exp;
branches;
next	;

1.11.3.1
date	96.10.17.11.53.15;	author hope;	state Exp;
branches;
next	;

1.11.4.1
date	96.11.14.13.20.50;	author hope;	state Exp;
branches
	1.11.4.1.1.1;
next	;

1.11.4.1.1.1
date	96.11.28.15.31.49;	author hope;	state Exp;
branches;
next	;

1.11.5.1
date	96.11.22.18.38.36;	author hope;	state Exp;
branches;
next	;

1.11.6.1
date	96.12.17.18.17.37;	author hope;	state Exp;
branches
	1.11.6.1.1.1;
next	;

1.11.6.1.1.1
date	97.02.24.12.11.52;	author hope;	state Exp;
branches;
next	;

1.11.7.1
date	96.12.18.10.12.52;	author hope;	state Exp;
branches;
next	;

1.11.8.1
date	97.05.12.10.51.11;	author hope;	state Exp;
branches
	1.11.8.1.1.1
	1.11.8.1.2.1
	1.11.8.1.3.1;
next	;

1.11.8.1.1.1
date	97.07.28.18.34.30;	author daveb;	state Exp;
branches
	1.11.8.1.1.1.1.1;
next	;

1.11.8.1.1.1.1.1
date	97.10.07.12.00.23;	author jkbrook;	state Exp;
branches;
next	;

1.11.8.1.2.1
date	97.09.08.17.27.27;	author daveb;	state Exp;
branches;
next	;

1.11.8.1.3.1
date	97.09.09.14.24.24;	author daveb;	state Exp;
branches;
next	;

1.11.9.1
date	97.09.10.19.43.20;	author brucem;	state Exp;
branches;
next	;

1.11.10.1
date	97.09.11.21.10.47;	author daveb;	state Exp;
branches;
next	;

1.11.11.1
date	99.04.01.18.09.06;	author daveb;	state Exp;
branches;
next	;


desc
@Type checking of patterns
@


1.11
log
@Abstraction of debug information
@
text
@(* patterns.sml the signature *)
(*
$Log: patterns.sml,v $
Revision 1.10  1994/02/17  16:25:31  nosa
return variable pattern types for Modules Debugger.

Revision 1.9  1993/03/10  15:22:53  matthew
Options changes

Revision 1.8  1993/03/09  13:03:10  matthew
Options & Info changes
Absyn changes

Revision 1.7  1993/02/08  15:05:54  matthew
Changes for BASISTYPES signature

Revision 1.6  1993/02/01  16:17:30  matthew
Added sharing

Revision 1.5  1992/11/04  17:26:37  matthew
Changed Error structure to Info

Revision 1.4  1992/08/12  10:29:20  jont
Removed some redundant structure arguments and sharing
Converted where relevant to use NewMap.{forall,exists,iterate}

Revision 1.3  1991/11/21  16:52:55  jont
Added copyright message

Revision 1.2  91/11/19  12:19:04  jont
Merging in comments from Ten15 branch to main trunk

Revision 1.1.1.1  91/11/19  11:12:59  jont
Added comments for DRA on functions

Revision 1.1  91/06/07  11:44:33  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

(* This module provides a function check_pat which typechecks patterns
in the abstract syntax, as per rules 33-46 in the Definition. The
implementation is clearly laid out according to the rules. *)

require "../typechecker/basistypes";
require "../basics/absyn";
require "../main/info";
require "../main/options";

signature PATTERNS =
  sig
    structure BasisTypes : BASISTYPES
    structure Absyn : ABSYN
    structure Info : INFO
    structure Options : OPTIONS

    sharing Absyn.Ident.Location = Info.Location
    sharing Absyn.Ident = BasisTypes.Datatypes.Ident
    sharing type Absyn.Type = BasisTypes.Datatypes.Type
    sharing type Absyn.Structure = BasisTypes.Datatypes.Structure

    val pat_context :
      Absyn.Pat -> BasisTypes.Datatypes.Valenv

    val check_pat :
      (Info.options * Options.options) ->
      Absyn.Pat * BasisTypes.Context ->
      (BasisTypes.Datatypes.Valenv * BasisTypes.Datatypes.Type * (BasisTypes.Datatypes.Type ref * Absyn.RuntimeInfo ref) list)
  end
  
@


1.11.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.11  1994/09/14  12:15:52  matthew
 * Abstraction of debug information
 *
@


1.11.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.11  1994/09/14  12:15:52  matthew
 * Abstraction of debug information
 *
@


1.11.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.11  1994/09/14  12:15:52  matthew
 * Abstraction of debug information
 *
@


1.11.8.1
log
@branched from 1.11
@
text
@a3 3
 * Revision 1.11  1994/09/14  12:15:52  matthew
 * Abstraction of debug information
 *
@


1.11.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.11.8.1  1997/05/12  10:51:11  hope
 * branched from 1.11
 *
@


1.11.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.11.8.1  1997/05/12  10:51:11  hope
 * branched from 1.11
 *
@


1.11.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.11.8.1  1997/05/12  10:51:11  hope
 * branched from 1.11
 *
@


1.11.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.11.8.1.1.1  1997/07/28  18:34:30  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.11.7.1
log
@branched from 1.11
@
text
@a3 3
 * Revision 1.11  1994/09/14  12:15:52  matthew
 * Abstraction of debug information
 *
@


1.11.6.1
log
@branched from 1.11
@
text
@a3 3
 * Revision 1.11  1994/09/14  12:15:52  matthew
 * Abstraction of debug information
 *
@


1.11.6.1.1.1
log
@branched from 1.11.6.1
@
text
@a3 3
 * Revision 1.11.6.1  1996/12/17  18:17:37  hope
 * branched from 1.11
 *
@


1.11.5.1
log
@branched from 1.11
@
text
@a3 3
 * Revision 1.11  1994/09/14  12:15:52  matthew
 * Abstraction of debug information
 *
@


1.11.4.1
log
@branched from 1.11
@
text
@a3 3
 * Revision 1.11  1994/09/14  12:15:52  matthew
 * Abstraction of debug information
 *
@


1.11.4.1.1.1
log
@branched from 1.11.4.1
@
text
@a3 3
 * Revision 1.11.4.1  1996/11/14  13:20:50  hope
 * branched from 1.11
 *
@


1.11.3.1
log
@branched from 1.11
@
text
@a3 3
 * Revision 1.11  1994/09/14  12:15:52  matthew
 * Abstraction of debug information
 *
@


1.11.2.1
log
@branched from 1.11
@
text
@a3 3
 * Revision 1.11  1994/09/14  12:15:52  matthew
 * Abstraction of debug information
 *
@


1.11.1.1
log
@branched from 1.11
@
text
@a3 3
 * Revision 1.11  1994/09/14  12:15:52  matthew
 * Abstraction of debug information
 *
@


1.10
log
@return variable pattern types for Modules Debugger.
@
text
@d4 3
d69 1
a69 3
      (BasisTypes.Datatypes.Valenv * BasisTypes.Datatypes.Type
       * (BasisTypes.Datatypes.Type * BasisTypes.Datatypes.Instance ref BasisTypes.Datatypes.Option.opt 
                                  * (Absyn.Tyfun ref * (int,int) BasisTypes.Datatypes.Option.option ref) list) ref list)
@


1.9
log
@Options changes
@
text
@d4 3
d66 3
a68 1
      (BasisTypes.Datatypes.Valenv * BasisTypes.Datatypes.Type)
@


1.9.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.9  1993/03/10  15:22:53  matthew
Options changes

@


1.8
log
@Options & Info changes
Absyn changes
@
text
@d4 4
d61 1
a61 1
      (Info.options * Options.print_options) ->
@


1.7
log
@Changes for BASISTYPES signature
@
text
@d4 3
d38 2
d45 2
d48 4
a51 2
    sharing Absyn.Location = BasisTypes.Info.Location
    sharing Absyn.Datatypes = BasisTypes.Datatypes
d54 1
a54 1
      Absyn.Pat -> Absyn.Datatypes.Valenv
d57 1
a57 1
      BasisTypes.Info.options ->
d59 1
a59 1
      (Absyn.Datatypes.Valenv * Absyn.Datatypes.Type)
@


1.6
log
@Added sharing
@
text
@d4 3
d33 1
a33 2
require "../typechecker/basis";
require "../main/info";
d38 1
a38 1
    structure Basis : BASIS
a39 1
    structure Info : INFO
d41 2
a42 2
    sharing Absyn.Location = Info.Location
    sharing Absyn.Datatypes = Basis.Tyvarenv.Datatypes
d48 2
a49 2
      Info.options ->
      Absyn.Pat * Basis.Context ->
@


1.5
log
@Changed Error structure to Info
@
text
@d4 3
d39 3
@


1.4
log
@Removed some redundant structure arguments and sharing
Converted where relevant to use NewMap.{forall,exists,iterate}
@
text
@d4 4
d28 1
d35 1
d41 1
@


1.3
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	patterns.sml,v $
a22 2

require "../typechecker/datatypes";
a27 1
    structure Datatypes : DATATYPES
d32 1
a32 1
      Absyn.Pat -> Datatypes.Valenv
d35 2
a36 1
      Absyn.Pat * Basis.Context -> (Datatypes.Valenv * Datatypes.Type)
@


1.2
log
@Merging in comments from Ten15 branch to main trunk
@
text
@d1 1
d4 3
d13 1
@


1.1
log
@Initial revision
@
text
@d2 7
a8 1
$Log$
d10 5
@


1.1.1.1
log
@Added comments for DRA on functions
@
text
@d2 1
a2 4
$Log:	patterns.sml,v $
Revision 1.1  91/06/07  11:44:33  colin
Initial revision

a3 5

(* This module provides a function check_pat which typechecks patterns
in the abstract syntax, as per rules 33-46 in the Definition. The
implementation is clearly laid out according to the rules. *)

@
