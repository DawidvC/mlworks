head	1.3;
access;
symbols
	MLW_daveb_inline_1_4_99:1.3.11
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_11r1:1.3.8.1.1.1.1
	MLWorks_workspace_97:1.3.10
	MLWorks_dt_wizard:1.3.9
	MLWorks_11c0_1997_09_09:1.3.8.1.1.1
	MLWorks_10r3:1.3.8.1.3
	MLWorks_10r2_551:1.3.8.1.2
	MLWorks_11:1.3.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.8.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.8
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.6.1.1
	MLWorks_gui_1996_12_18:1.3.7
	MLWorks_1_0_Win32_1996_12_17:1.3.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3
	ML_beta_release_12/08/94:1.2
	ML_beta_release_03/08/94:1.2
	ML_revised_beta_release_25/05/94:1.2
	ML_final_beta_release_02/03/94:1.2
	mlworks-28-01-1994:1.2
	Release:1.2
	mlworks-beta-01-09-1993:1.2;
locks; strict;
comment	@ * @;


1.3
date	96.03.19.16.04.51;	author matthew;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1
	1.3.9.1
	1.3.10.1
	1.3.11.1;
next	1.2;

1.2
date	93.04.07.16.23.16;	author matthew;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	93.02.19.16.47.22;	author matthew;	state Exp;
branches;
next	;

1.2.1.1
date	93.04.07.16.23.16;	author jont;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.41.50;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.34.55;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.54.02;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.13.21.49;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.15.32.42;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.39.23;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.18.18.24;	author hope;	state Exp;
branches
	1.3.6.1.1.1;
next	;

1.3.6.1.1.1
date	97.02.24.12.12.40;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.18.10.13.42;	author hope;	state Exp;
branches;
next	;

1.3.8.1
date	97.05.12.10.51.57;	author hope;	state Exp;
branches
	1.3.8.1.1.1
	1.3.8.1.2.1
	1.3.8.1.3.1;
next	;

1.3.8.1.1.1
date	97.07.28.18.33.45;	author daveb;	state Exp;
branches
	1.3.8.1.1.1.1.1;
next	;

1.3.8.1.1.1.1.1
date	97.10.07.11.59.45;	author jkbrook;	state Exp;
branches;
next	;

1.3.8.1.2.1
date	97.09.08.17.26.51;	author daveb;	state Exp;
branches;
next	;

1.3.8.1.3.1
date	97.09.09.14.23.43;	author daveb;	state Exp;
branches;
next	;

1.3.9.1
date	97.09.10.19.42.40;	author brucem;	state Exp;
branches;
next	;

1.3.10.1
date	97.09.11.21.10.10;	author daveb;	state Exp;
branches;
next	;

1.3.11.1
date	99.04.01.18.08.44;	author daveb;	state Exp;
branches;
next	;


desc
@New stuff for type dynamic
@


1.3
log
@Changed type of Scheme functions
@
text
@(* typerep_utils.sml the signature *)
(*
$Log: typerep_utils.sml,v $
 * Revision 1.2  1993/04/07  16:23:16  matthew
 * Removed print_typerep and make_typerep_expression
 * Added convert_dynamic_type
 *
Revision 1.1  1993/02/19  16:47:22  matthew
Initial revision


Copyright (c) 1993 Harlequin Ltd.
*)

require "../typechecker/datatypes";
require "../basics/absyn";

signature TYPEREP_UTILS =
  sig
    structure Datatypes : DATATYPES
    structure Absyn : ABSYN

    val make_coerce_expression : Absyn.Exp * Datatypes.Type -> Absyn.Exp

    exception ConvertDynamicType
    val convert_dynamic_type : (bool * Datatypes.Type * int * Absyn.Ident.TyVar Absyn.Set.Set) -> Datatypes.Type
  end

@


1.3.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.3  1996/03/19  16:04:51  matthew
 * Changed type of Scheme functions
 *
@


1.3.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.3  1996/03/19  16:04:51  matthew
 * Changed type of Scheme functions
 *
@


1.3.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.3  1996/03/19  16:04:51  matthew
 * Changed type of Scheme functions
 *
@


1.3.8.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/03/19  16:04:51  matthew
 * Changed type of Scheme functions
 *
@


1.3.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.3.8.1  1997/05/12  10:51:57  hope
 * branched from 1.3
 *
@


1.3.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.3.8.1  1997/05/12  10:51:57  hope
 * branched from 1.3
 *
@


1.3.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.3.8.1  1997/05/12  10:51:57  hope
 * branched from 1.3
 *
@


1.3.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.3.8.1.1.1  1997/07/28  18:33:45  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3.7.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/03/19  16:04:51  matthew
 * Changed type of Scheme functions
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/03/19  16:04:51  matthew
 * Changed type of Scheme functions
 *
@


1.3.6.1.1.1
log
@branched from 1.3.6.1
@
text
@a3 3
 * Revision 1.3.6.1  1996/12/17  18:18:24  hope
 * branched from 1.3
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/03/19  16:04:51  matthew
 * Changed type of Scheme functions
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/03/19  16:04:51  matthew
 * Changed type of Scheme functions
 *
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a3 3
 * Revision 1.3.4.1  1996/11/14  13:21:49  hope
 * branched from 1.3
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/03/19  16:04:51  matthew
 * Changed type of Scheme functions
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/03/19  16:04:51  matthew
 * Changed type of Scheme functions
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/03/19  16:04:51  matthew
 * Changed type of Scheme functions
 *
@


1.2
log
@Removed print_typerep and make_typerep_expression
Added convert_dynamic_type
@
text
@d4 4
d26 1
a26 1
    val convert_dynamic_type : (Datatypes.Type * int * Absyn.Ident.TyVar Absyn.Set.Set) -> Datatypes.Type
@


1.2.1.1
log
@Fork for bug fixing
@
text
@a3 4
Revision 1.2  1993/04/07  16:23:16  matthew
Removed print_typerep and make_typerep_expression
Added convert_dynamic_type

@


1.1
log
@Initial revision
@
text
@d4 2
d7 1
d18 1
a18 2
    val print_typerep : MLWorks.Internal.TypeRep.TypeRep -> string
    val make_typerep_expression : Absyn.Exp * Datatypes.Type -> Absyn.Exp
d20 3
@
