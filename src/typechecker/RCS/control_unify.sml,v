head	1.10;
access;
symbols
	MLW_daveb_inline_1_4_99:1.10.11
	MLWorks_21c0_1999_03_25:1.10
	MLWorks_20c1_1998_08_20:1.10
	MLWorks_20c0_1998_08_04:1.10
	MLWorks_20b2c2_1998_06_19:1.10
	MLWorks_20b2_Windows_1998_06_12:1.10
	MLWorks_20b1c1_1998_05_07:1.10
	MLWorks_20b0_1998_04_07:1.10
	MLWorks_20b0_1998_03_20:1.10
	MLWorks_20m2_1998_02_16:1.10
	MLWorks_20m1_1997_10_23:1.10
	MLWorks_11r1:1.10.8.1.1.1.1
	MLWorks_workspace_97:1.10.10
	MLWorks_dt_wizard:1.10.9
	MLWorks_11c0_1997_09_09:1.10.8.1.1.1
	MLWorks_10r3:1.10.8.1.3
	MLWorks_10r2_551:1.10.8.1.2
	MLWorks_11:1.10.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.10.8.1
	MLWorks_20m0_1997_06_20:1.10
	MLWorks_1_0_r2c2_1997_06_14:1.10.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.10.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.10.8
	MLWorks_BugFix_1997_04_24:1.10
	MLWorks_1_0_r2_Win32_1997_04_11:1.10
	MLWorks_1_0_r2_Unix_1997_04_04:1.10
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.10.6.1.1
	MLWorks_gui_1996_12_18:1.10.7
	MLWorks_1_0_Win32_1996_12_17:1.10.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.10.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.10.4.1
	MLWorks_1_0_Irix_1996_11_28:1.10.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.10.5
	MLWorks_1_0_Unix_1996_11_14:1.10.4
	MLWorks_Open_Beta2_1996_10_11:1.10.3
	MLWorks_License_dev:1.10.2
	MLWorks_1_open_beta_1996_09_13:1.10.1
	MLWorks_Open_Beta_1996_08_22:1.10
	MLWorks_Beta_1996_07_02:1.10
	MLWorks_Beta_1996_06_07:1.10
	MLWorks_Beta_1996_06_06:1.10
	MLWorks_Beta_1996_06_05:1.10
	MLWorks_Beta_1996_06_03:1.10
	MLWorks_Beta_1996_05_31:1.10
	MLWorks_Beta_1996_05_30:1.10
	ML_beta_release_12/08/94:1.10
	ML_beta_release_03/08/94:1.10
	ML_revised_beta_release_25/05/94:1.10
	ML_final_beta_release_02/03/94:1.10
	mlworks-28-01-1994:1.10
	Release:1.9
	mlworks-beta-01-09-1993:1.9
	MLWorks-1-0-4-29/01/1993:1.6
	MLWorks-1-0-3-21/12/1992:1.6
	MLWorks-1-0-2-15/12/1992:1.6
	MLWorks-1-0-1-04/12/1992:1.6
	checkpoint_17_08_92:1.4
	Ten15_release_19-11-91:1.1.1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.10
date	93.11.24.15.53.41;	author nickh;	state Exp;
branches
	1.10.1.1
	1.10.2.1
	1.10.3.1
	1.10.4.1
	1.10.5.1
	1.10.6.1
	1.10.7.1
	1.10.8.1
	1.10.9.1
	1.10.10.1
	1.10.11.1;
next	1.9;

1.9
date	93.03.10.15.20.41;	author matthew;	state Exp;
branches
	1.9.1.1;
next	1.8;

1.8
date	93.03.04.11.05.34;	author matthew;	state Exp;
branches;
next	1.7;

1.7
date	93.02.08.14.59.29;	author matthew;	state Exp;
branches;
next	1.6;

1.6
date	92.11.04.17.22.00;	author matthew;	state Exp;
branches;
next	1.5;

1.5
date	92.09.04.09.54.41;	author richard;	state Exp;
branches;
next	1.4;

1.4
date	92.08.11.18.55.34;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	91.11.21.16.50.48;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.11.19.12.18.45;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.11.42.46;	author colin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	91.11.19.11.12.53;	author jont;	state Exp;
branches;
next	;

1.9.1.1
date	93.03.10.15.20.41;	author jont;	state Exp;
branches;
next	;

1.10.1.1
date	96.09.13.11.41.22;	author hope;	state Exp;
branches;
next	;

1.10.2.1
date	96.10.07.16.34.25;	author hope;	state Exp;
branches;
next	;

1.10.3.1
date	96.10.17.11.53.33;	author hope;	state Exp;
branches;
next	;

1.10.4.1
date	96.11.14.13.21.08;	author hope;	state Exp;
branches
	1.10.4.1.1.1;
next	;

1.10.4.1.1.1
date	96.11.28.15.32.11;	author hope;	state Exp;
branches;
next	;

1.10.5.1
date	96.11.22.18.38.55;	author hope;	state Exp;
branches;
next	;

1.10.6.1
date	96.12.17.18.17.56;	author hope;	state Exp;
branches
	1.10.6.1.1.1;
next	;

1.10.6.1.1.1
date	97.02.24.12.12.11;	author hope;	state Exp;
branches;
next	;

1.10.7.1
date	96.12.18.10.13.12;	author hope;	state Exp;
branches;
next	;

1.10.8.1
date	97.05.12.10.51.29;	author hope;	state Exp;
branches
	1.10.8.1.1.1
	1.10.8.1.2.1
	1.10.8.1.3.1;
next	;

1.10.8.1.1.1
date	97.07.28.18.33.21;	author daveb;	state Exp;
branches
	1.10.8.1.1.1.1.1;
next	;

1.10.8.1.1.1.1.1
date	97.10.07.11.59.19;	author jkbrook;	state Exp;
branches;
next	;

1.10.8.1.2.1
date	97.09.08.17.26.26;	author daveb;	state Exp;
branches;
next	;

1.10.8.1.3.1
date	97.09.09.14.23.16;	author daveb;	state Exp;
branches;
next	;

1.10.9.1
date	97.09.10.19.42.14;	author brucem;	state Exp;
branches;
next	;

1.10.10.1
date	97.09.11.21.09.44;	author daveb;	state Exp;
branches;
next	;

1.10.11.1
date	99.04.01.18.08.30;	author daveb;	state Exp;
branches;
next	;


desc
@Top Level interface to the unification algorithm
@


1.10
log
@Added code to encode type errors as a list of strings and types.
@
text
@(* control_unify.sml the signature *)
(*
$Log: control_unify.sml,v $
Revision 1.9  1993/03/10  15:20:41  matthew
Options changes

Revision 1.8  1993/03/04  11:05:34  matthew
Options & Info changes

Revision 1.7  1993/02/08  14:59:29  matthew
Removed open Datatypes
Changes for BASISTYPES signature

Revision 1.6  1992/11/04  17:22:00  matthew
Changed Error structure to Info

Revision 1.5  1992/09/04  09:54:41  richard
Installed central error reporting mechanism.

Revision 1.4  1992/08/11  18:55:34  jont
Removed some redundant structure arguments and sharing
Converted where relevant to use NewMap.{forall,exists,iterate}

Revision 1.3  1991/11/21  16:50:48  jont
Added copyright message

Revision 1.2  91/11/19  12:18:45  jont
Merging in comments from Ten15 branch to main trunk

Revision 1.1.1.1  91/11/19  11:12:53  jont
Added comments for DRA on functions

Revision 1.1  91/06/07  11:42:46  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

(* This module provides a front-end for the type-unifier (unify.sml).
It allows one to specify the a result which should be returned if the
unification succeeds, and outputs sophisticated error messages if it
fails. *)

require "basistypes";
require "../main/info";
require "../main/options";

(****
 In this version of control_unify all calls to the type_debugger 
 has been replaced with calls the the error handling structure.
****)

signature CONTROL_UNIFY = 
  sig
    structure BasisTypes : BASISTYPES
    structure Info : INFO
    structure Options : OPTIONS

    val unify :
      (Info.options * Options.options) ->
      {
       first		: BasisTypes.Datatypes.Type,
       second		: BasisTypes.Datatypes.Type,
       result		: BasisTypes.Datatypes.Type,
       context		: BasisTypes.Context,
       error		: unit ->
                           Info.Location.T *
                           BasisTypes.Datatypes.type_error_atom list *
                           BasisTypes.Datatypes.Type
      }
      -> BasisTypes.Datatypes.Type
  end
@


1.10.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.10  1993/11/24  15:53:41  nickh
 * Added code to encode type errors as a list of strings and types.
 *
@


1.10.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.10  1993/11/24  15:53:41  nickh
 * Added code to encode type errors as a list of strings and types.
 *
@


1.10.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.10  1993/11/24  15:53:41  nickh
 * Added code to encode type errors as a list of strings and types.
 *
@


1.10.8.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1993/11/24  15:53:41  nickh
 * Added code to encode type errors as a list of strings and types.
 *
@


1.10.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.10.8.1  1997/05/12  10:51:29  hope
 * branched from 1.10
 *
@


1.10.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.10.8.1  1997/05/12  10:51:29  hope
 * branched from 1.10
 *
@


1.10.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.10.8.1  1997/05/12  10:51:29  hope
 * branched from 1.10
 *
@


1.10.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.10.8.1.1.1  1997/07/28  18:33:21  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.10.7.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1993/11/24  15:53:41  nickh
 * Added code to encode type errors as a list of strings and types.
 *
@


1.10.6.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1993/11/24  15:53:41  nickh
 * Added code to encode type errors as a list of strings and types.
 *
@


1.10.6.1.1.1
log
@branched from 1.10.6.1
@
text
@a3 3
 * Revision 1.10.6.1  1996/12/17  18:17:56  hope
 * branched from 1.10
 *
@


1.10.5.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1993/11/24  15:53:41  nickh
 * Added code to encode type errors as a list of strings and types.
 *
@


1.10.4.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1993/11/24  15:53:41  nickh
 * Added code to encode type errors as a list of strings and types.
 *
@


1.10.4.1.1.1
log
@branched from 1.10.4.1
@
text
@a3 3
 * Revision 1.10.4.1  1996/11/14  13:21:08  hope
 * branched from 1.10
 *
@


1.10.3.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1993/11/24  15:53:41  nickh
 * Added code to encode type errors as a list of strings and types.
 *
@


1.10.2.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1993/11/24  15:53:41  nickh
 * Added code to encode type errors as a list of strings and types.
 *
@


1.10.1.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1993/11/24  15:53:41  nickh
 * Added code to encode type errors as a list of strings and types.
 *
@


1.9
log
@Options changes
@
text
@d4 3
d68 1
a68 1
                           string *
@


1.9.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.9  1993/03/10  15:20:41  matthew
Options changes

@


1.8
log
@Options & Info changes
@
text
@d4 3
d57 1
a57 1
      (Info.options * Options.print_options) ->
@


1.7
log
@Removed open Datatypes
Changes for BASISTYPES signature
@
text
@d4 4
d39 2
d50 2
d54 1
a54 1
      BasisTypes.Info.options ->
d61 1
a61 1
                           BasisTypes.Info.Location.T *
@


1.6
log
@Changed Error structure to Info
@
text
@d4 3
d34 1
a34 2
require "basis";
require "../main/info";
d43 1
a43 2
    structure Info	: INFO
    structure Basis	: BASIS
d46 1
a46 1
      Info.options ->
d48 8
a55 5
       first		: Basis.Tyvarenv.Datatypes.Type,
       second		: Basis.Tyvarenv.Datatypes.Type,
       result		: Basis.Tyvarenv.Datatypes.Type,
       context		: Basis.Context,
       error		: unit -> Info.Location.T * string * Basis.Tyvarenv.Datatypes.Type
d57 1
a57 1
      -> Basis.Tyvarenv.Datatypes.Type
@


1.5
log
@Installed central error reporting mechanism.
@
text
@d4 3
d32 1
a32 1
require "../main/error";
d41 1
a41 1
    structure Error	: ERROR
d44 2
a45 1
    val unify : 
d51 1
a51 1
       error		: unit -> Error.Location.T * string * Basis.Tyvarenv.Datatypes.Type
@


1.4
log
@Removed some redundant structure arguments and sharing
Converted where relevant to use NewMap.{forall,exists,iterate}
@
text
@d4 4
d28 2
a29 1
require "errors";
d38 2
a39 1
    structure Errors    : ERRORS
d43 5
a47 6
       first  : Errors.Basis.Tyvarenv.Datatypes.Type,
       second : Errors.Basis.Tyvarenv.Datatypes.Type,
       result : Errors.Basis.Tyvarenv.Datatypes.Type,
       context : Errors.Basis.Context,
       get_action : (unit -> Errors.Basis.Tyvarenv.Datatypes.Type Errors.action),
       get_error_messages  : (unit -> string list)
d49 1
a49 1
      -> Errors.Basis.Tyvarenv.Datatypes.Type
@


1.3
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	control_unify.sml,v $
a23 3

require "../typechecker/datatypes";
require "../typechecker/basis";
a32 2
    structure Datatypes : DATATYPES
    structure Basis     : BASIS
a33 2
    sharing Datatypes = Basis.Datatypes = Errors.Datatypes
    and Basis = Errors.Basis
d37 5
a41 5
       first  : Datatypes.Type,
       second : Datatypes.Type,
       result : Datatypes.Type,
       context : Basis.Context,
       get_action : (unit -> Datatypes.Type Errors.action),
d44 1
a44 1
      -> Datatypes.Type
@


1.2
log
@Merging in comments from Ten15 branch to main trunk
@
text
@d1 1
d4 3
d13 1
@


1.1
log
@Initial revision
@
text
@d2 7
a8 1
$Log$
d10 7
@


1.1.1.1
log
@Added comments for DRA on functions
@
text
@d2 1
a2 4
$Log:	control_unify.sml,v $
Revision 1.1  91/06/07  11:42:46  colin
Initial revision

a3 7

(* This module provides a front-end for the type-unifier (unify.sml).
It allows one to specify the a result which should be returned if the
unification succeeds, and outputs sophisticated error messages if it
fails. *)


@
