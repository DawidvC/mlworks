head	1.10;
access;
symbols
	MLW_daveb_inline_1_4_99:1.10.11
	MLWorks_21c0_1999_03_25:1.10
	MLWorks_20c1_1998_08_20:1.10
	MLWorks_20c0_1998_08_04:1.10
	MLWorks_20b2c2_1998_06_19:1.10
	MLWorks_20b2_Windows_1998_06_12:1.10
	MLWorks_20b1c1_1998_05_07:1.10
	MLWorks_20b0_1998_04_07:1.10
	MLWorks_20b0_1998_03_20:1.10
	MLWorks_20m2_1998_02_16:1.10
	MLWorks_20m1_1997_10_23:1.10
	MLWorks_11r1:1.10.8.1.1.1.1
	MLWorks_workspace_97:1.10.10
	MLWorks_dt_wizard:1.10.9
	MLWorks_11c0_1997_09_09:1.10.8.1.1.1
	MLWorks_10r3:1.10.8.1.3
	MLWorks_10r2_551:1.10.8.1.2
	MLWorks_11:1.10.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.10.8.1
	MLWorks_20m0_1997_06_20:1.10
	MLWorks_1_0_r2c2_1997_06_14:1.10.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.10.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.10.8
	MLWorks_BugFix_1997_04_24:1.10
	MLWorks_1_0_r2_Win32_1997_04_11:1.10
	MLWorks_1_0_r2_Unix_1997_04_04:1.10
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.10.6.1.1
	MLWorks_gui_1996_12_18:1.10.7
	MLWorks_1_0_Win32_1996_12_17:1.10.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.10.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.10.4.1
	MLWorks_1_0_Irix_1996_11_28:1.10.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.10.5
	MLWorks_1_0_Unix_1996_11_14:1.10.4
	MLWorks_Open_Beta2_1996_10_11:1.10.3
	MLWorks_License_dev:1.10.2
	MLWorks_1_open_beta_1996_09_13:1.10.1
	MLWorks_Open_Beta_1996_08_22:1.10
	MLWorks_Beta_1996_07_02:1.10
	MLWorks_Beta_1996_06_07:1.10
	MLWorks_Beta_1996_06_06:1.10
	MLWorks_Beta_1996_06_05:1.10
	MLWorks_Beta_1996_06_03:1.10
	MLWorks_Beta_1996_05_31:1.10
	MLWorks_Beta_1996_05_30:1.10
	ML_beta_release_12/08/94:1.7
	ML_beta_release_03/08/94:1.7
	ML_revised_beta_release_25/05/94:1.7
	ML_final_beta_release_02/03/94:1.6
	mlworks-28-01-1994:1.6
	Release:1.4
	mlworks-beta-01-09-1993:1.4
	MLWorks-1-0-4-29/01/1993:1.3
	MLWorks-1-0-3-21/12/1992:1.3
	MLWorks-1-0-2-15/12/1992:1.3
	MLWorks-1-0-1-04/12/1992:1.3
	checkpoint_17_08_92:1.3
	Ten15_release_19-11-91:1.1.1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.10
date	95.05.11.14.44.07;	author matthew;	state Exp;
branches
	1.10.1.1
	1.10.2.1
	1.10.3.1
	1.10.4.1
	1.10.5.1
	1.10.6.1
	1.10.7.1
	1.10.8.1
	1.10.9.1
	1.10.10.1
	1.10.11.1;
next	1.9;

1.9
date	95.02.02.14.59.04;	author matthew;	state Exp;
branches;
next	1.8;

1.8
date	95.01.03.17.12.00;	author matthew;	state Exp;
branches;
next	1.7;

1.7
date	94.04.27.12.44.54;	author daveb;	state Exp;
branches;
next	1.6;

1.6
date	93.12.03.15.56.17;	author nickh;	state Exp;
branches;
next	1.5;

1.5
date	93.11.24.16.35.17;	author nosa;	state Exp;
branches;
next	1.4;

1.4
date	93.04.01.16.33.16;	author jont;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	91.11.21.16.56.22;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.11.19.12.19.36;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.11.46.54;	author colin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	91.11.19.11.13.15;	author jont;	state Exp;
branches;
next	;

1.4.1.1
date	93.04.01.16.33.16;	author jont;	state Exp;
branches;
next	;

1.10.1.1
date	96.09.13.11.41.23;	author hope;	state Exp;
branches;
next	;

1.10.2.1
date	96.10.07.16.34.26;	author hope;	state Exp;
branches;
next	;

1.10.3.1
date	96.10.17.11.53.34;	author hope;	state Exp;
branches;
next	;

1.10.4.1
date	96.11.14.13.21.09;	author hope;	state Exp;
branches
	1.10.4.1.1.1;
next	;

1.10.4.1.1.1
date	96.11.28.15.32.12;	author hope;	state Exp;
branches;
next	;

1.10.5.1
date	96.11.22.18.38.55;	author hope;	state Exp;
branches;
next	;

1.10.6.1
date	96.12.17.18.17.56;	author hope;	state Exp;
branches
	1.10.6.1.1.1;
next	;

1.10.6.1.1.1
date	97.02.24.12.12.12;	author hope;	state Exp;
branches;
next	;

1.10.7.1
date	96.12.18.10.13.13;	author hope;	state Exp;
branches;
next	;

1.10.8.1
date	97.05.12.10.51.30;	author hope;	state Exp;
branches
	1.10.8.1.1.1
	1.10.8.1.2.1
	1.10.8.1.3.1;
next	;

1.10.8.1.1.1
date	97.07.28.18.33.21;	author daveb;	state Exp;
branches
	1.10.8.1.1.1.1.1;
next	;

1.10.8.1.1.1.1.1
date	97.10.07.11.59.20;	author jkbrook;	state Exp;
branches;
next	;

1.10.8.1.2.1
date	97.09.08.17.26.27;	author daveb;	state Exp;
branches;
next	;

1.10.8.1.3.1
date	97.09.09.14.23.17;	author daveb;	state Exp;
branches;
next	;

1.10.9.1
date	97.09.10.19.42.14;	author brucem;	state Exp;
branches;
next	;

1.10.10.1
date	97.09.11.21.09.45;	author daveb;	state Exp;
branches;
next	;

1.10.11.1
date	99.04.01.18.08.30;	author daveb;	state Exp;
branches;
next	;


desc
@Unification Algorithm
(see also control_unify.sml)
@


1.10
log
@Improving record domain error messages
@
text
@(* unify.sml the signature *)
(*
$Log: unify.sml,v $
Revision 1.9  1995/02/02  14:59:04  matthew
Rationalizations

Revision 1.8  1995/01/03  17:12:00  matthew
Change to substitution datatype

Revision 1.7  1994/04/27  12:44:54  daveb
Added type variable to OVERLOADED case of unify_result.

Revision 1.6  1993/12/03  15:56:17  nickh
Remove TYNAME.

Revision 1.5  1993/11/24  16:35:17  nosa
Modified unified to be optionally side-effect free, returning substitutions;
Can apply resulting substitutions to types.

Revision 1.4  1993/04/01  16:33:16  jont
Allowed overloadin on strings to be controlled by an option

Revision 1.3  1991/11/21  16:56:22  jont
Added copyright message

Revision 1.2  91/11/19  12:19:36  jont
Merging in comments from Ten15 branch to main trunk

Revision 1.1.1.1  91/11/19  11:13:15  jont
Added comments for DRA on functions

Revision 1.1  91/06/07  11:46:54  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

require "../typechecker/datatypes";

(* This module forms the core of the type unifier (it is mostly called
via the module Control_Unify, which provides a more powerful
front-end. It attempts to unify two types by setting type variables
(and unresolved types, i.e. meta-types) within the types to new
values. The algorithm is very simple and is well-commented (in
_unify.sml). *)


signature UNIFY = 
  sig
    structure Datatypes : DATATYPES

    type options

    type 'a refargs

    datatype substitution = 
      SUBST of ((int * Datatypes.Type * Datatypes.Instance) refargs list *
                (int * bool * Datatypes.Type * bool * bool) refargs list *
                Datatypes.Type refargs list)

    datatype record =
      RIGID of (Datatypes.Ident.Lab * Datatypes.Type) list
    | FLEX  of (Datatypes.Ident.Lab * Datatypes.Type) list

    datatype unify_result =
      OK
    | FAILED of Datatypes.Type * Datatypes.Type
    | RECORD_DOMAIN of record * record
    | EXPLICIT_TYVAR of Datatypes.Type * Datatypes.Type
    | EQ_AND_IMP of bool * bool * Datatypes.Type
    | CIRCULARITY of Datatypes.Type * Datatypes.Type
    | OVERLOADED of Datatypes.Ident.TyVar * Datatypes.Type
    | SUBSTITUTION of substitution

    val apply : unify_result * Datatypes.Type -> Datatypes.Type
    val unified : options * Datatypes.Type * Datatypes.Type * bool -> unify_result
  end;
@


1.10.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.10  1995/05/11  14:44:07  matthew
 * Improving record domain error messages
 *
@


1.10.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.10  1995/05/11  14:44:07  matthew
 * Improving record domain error messages
 *
@


1.10.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.10  1995/05/11  14:44:07  matthew
 * Improving record domain error messages
 *
@


1.10.8.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/05/11  14:44:07  matthew
 * Improving record domain error messages
 *
@


1.10.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.10.8.1  1997/05/12  10:51:30  hope
 * branched from 1.10
 *
@


1.10.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.10.8.1  1997/05/12  10:51:30  hope
 * branched from 1.10
 *
@


1.10.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.10.8.1  1997/05/12  10:51:30  hope
 * branched from 1.10
 *
@


1.10.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.10.8.1.1.1  1997/07/28  18:33:21  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.10.7.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/05/11  14:44:07  matthew
 * Improving record domain error messages
 *
@


1.10.6.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/05/11  14:44:07  matthew
 * Improving record domain error messages
 *
@


1.10.6.1.1.1
log
@branched from 1.10.6.1
@
text
@a3 3
 * Revision 1.10.6.1  1996/12/17  18:17:56  hope
 * branched from 1.10
 *
@


1.10.5.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/05/11  14:44:07  matthew
 * Improving record domain error messages
 *
@


1.10.4.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/05/11  14:44:07  matthew
 * Improving record domain error messages
 *
@


1.10.4.1.1.1
log
@branched from 1.10.4.1
@
text
@a3 3
 * Revision 1.10.4.1  1996/11/14  13:21:09  hope
 * branched from 1.10
 *
@


1.10.3.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/05/11  14:44:07  matthew
 * Improving record domain error messages
 *
@


1.10.2.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/05/11  14:44:07  matthew
 * Improving record domain error messages
 *
@


1.10.1.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/05/11  14:44:07  matthew
 * Improving record domain error messages
 *
@


1.9
log
@Rationalizations
@
text
@d4 3
d61 3
a63 3
    datatype domain =
      RIGID of Datatypes.Ident.Lab list
    | FLEX  of Datatypes.Ident.Lab list
d68 1
a68 1
    | RECORD_DOMAIN of domain * domain
@


1.8
log
@Change to substitution datatype
@
text
@d4 3
@


1.7
log
@Added type variable to OVERLOADED case of unify_result.
@
text
@d4 3
d47 8
a54 1
    type substitution
@


1.6
log
@Remove TYNAME.
@
text
@d4 3
d56 1
a56 1
    | OVERLOADED of Datatypes.Type
@


1.5
log
@Modified unified to be optionally side-effect free, returning substitutions;
Can apply resulting substitutions to types.
@
text
@d4 4
a48 1
    | TYNAME of Datatypes.Tyname * Datatypes.Tyname
@


1.4
log
@Allowed overloadin on strings to be controlled by an option
@
text
@d4 3
d37 1
d51 1
d53 2
a54 1
    val unified : options * Datatypes.Type * Datatypes.Type -> unify_result
@


1.4.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.4  1993/04/01  16:33:16  jont
Allowed overloadin on strings to be controlled by an option

@


1.3
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	unify.sml,v $
d18 1
d33 1
d48 1
a48 1
    val unified : Datatypes.Type * Datatypes.Type -> unify_result
@


1.2
log
@Merging in comments from Ten15 branch to main trunk
@
text
@d1 1
d4 3
d13 1
@


1.1
log
@Initial revision
@
text
@d2 7
a8 1
$Log$
d11 8
@


1.1.1.1
log
@Added comments for DRA on functions
@
text
@d2 1
a2 4
$Log:	unify.sml,v $
Revision 1.1  91/06/07  11:46:54  colin
Initial revision

a4 8

(* This module forms the core of the type unifier (it is mostly called
via the module Control_Unify, which provides a more powerful
front-end. It attempts to unify two types by setting type variables
(and unresolved types, i.e. meta-types) within the types to new
values. The algorithm is very simple and is well-commented (in
_unify.sml). *)

@
