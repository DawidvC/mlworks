head	1.10;
access;
symbols
	MLW_daveb_inline_1_4_99:1.10.11
	MLWorks_21c0_1999_03_25:1.10
	MLWorks_20c1_1998_08_20:1.10
	MLWorks_20c0_1998_08_04:1.10
	MLWorks_20b2c2_1998_06_19:1.10
	MLWorks_20b2_Windows_1998_06_12:1.10
	MLWorks_20b1c1_1998_05_07:1.10
	MLWorks_20b0_1998_04_07:1.10
	MLWorks_20b0_1998_03_20:1.10
	MLWorks_20m2_1998_02_16:1.10
	MLWorks_20m1_1997_10_23:1.10
	MLWorks_11r1:1.10.8.1.1.1.1
	MLWorks_workspace_97:1.10.10
	MLWorks_dt_wizard:1.10.9
	MLWorks_11c0_1997_09_09:1.10.8.1.1.1
	MLWorks_10r3:1.10.8.1.3
	MLWorks_10r2_551:1.10.8.1.2
	MLWorks_11:1.10.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.10.8.1
	MLWorks_20m0_1997_06_20:1.10
	MLWorks_1_0_r2c2_1997_06_14:1.10.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.10.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.10.8
	MLWorks_BugFix_1997_04_24:1.10
	MLWorks_1_0_r2_Win32_1997_04_11:1.10
	MLWorks_1_0_r2_Unix_1997_04_04:1.10
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.10.6.1.1
	MLWorks_gui_1996_12_18:1.10.7
	MLWorks_1_0_Win32_1996_12_17:1.10.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.10.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.10.4.1
	MLWorks_1_0_Irix_1996_11_28:1.10.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.10.5
	MLWorks_1_0_Unix_1996_11_14:1.10.4
	MLWorks_Open_Beta2_1996_10_11:1.10.3
	MLWorks_License_dev:1.10.2
	MLWorks_1_open_beta_1996_09_13:1.10.1
	MLWorks_Open_Beta_1996_08_22:1.10
	MLWorks_Beta_1996_07_02:1.10
	MLWorks_Beta_1996_06_07:1.10
	MLWorks_Beta_1996_06_06:1.10
	MLWorks_Beta_1996_06_05:1.10
	MLWorks_Beta_1996_06_03:1.10
	MLWorks_Beta_1996_05_31:1.10
	MLWorks_Beta_1996_05_30:1.10
	ML_beta_release_12/08/94:1.9
	ML_beta_release_03/08/94:1.9
	ML_revised_beta_release_25/05/94:1.9
	ML_final_beta_release_02/03/94:1.9
	mlworks-28-01-1994:1.9
	Release:1.9
	mlworks-beta-01-09-1993:1.9
	MLWorks-1-0-4-29/01/1993:1.8
	MLWorks-1-0-3-21/12/1992:1.8
	MLWorks-1-0-2-15/12/1992:1.8
	MLWorks-1-0-1-04/12/1992:1.8
	checkpoint_17_08_92:1.5
	Ten15_release_19-11-91:1.1.1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.10
date	95.03.28.16.20.38;	author matthew;	state Exp;
branches
	1.10.1.1
	1.10.2.1
	1.10.3.1
	1.10.4.1
	1.10.5.1
	1.10.6.1
	1.10.7.1
	1.10.8.1
	1.10.9.1
	1.10.10.1
	1.10.11.1;
next	1.9;

1.9
date	93.02.08.13.18.09;	author matthew;	state Exp;
branches
	1.9.1.1;
next	1.8;

1.8
date	92.10.30.15.16.42;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	92.08.27.20.15.30;	author davidt;	state Exp;
branches;
next	1.6;

1.6
date	92.08.27.18.37.53;	author davidt;	state Exp;
branches;
next	1.5;

1.5
date	92.07.17.15.53.39;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	92.07.04.17.16.06;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	91.11.21.16.55.11;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.11.19.12.19.22;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.11.46.06;	author colin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	91.11.19.11.13.07;	author jont;	state Exp;
branches;
next	;

1.9.1.1
date	93.02.08.13.18.09;	author jont;	state Exp;
branches;
next	;

1.10.1.1
date	96.09.13.11.41.39;	author hope;	state Exp;
branches;
next	;

1.10.2.1
date	96.10.07.16.34.44;	author hope;	state Exp;
branches;
next	;

1.10.3.1
date	96.10.17.11.53.49;	author hope;	state Exp;
branches;
next	;

1.10.4.1
date	96.11.14.13.21.29;	author hope;	state Exp;
branches
	1.10.4.1.1.1;
next	;

1.10.4.1.1.1
date	96.11.28.15.32.29;	author hope;	state Exp;
branches;
next	;

1.10.5.1
date	96.11.22.18.39.10;	author hope;	state Exp;
branches;
next	;

1.10.6.1
date	96.12.17.18.18.11;	author hope;	state Exp;
branches
	1.10.6.1.1.1;
next	;

1.10.6.1.1.1
date	97.02.24.12.12.27;	author hope;	state Exp;
branches;
next	;

1.10.7.1
date	96.12.18.10.13.30;	author hope;	state Exp;
branches;
next	;

1.10.8.1
date	97.05.12.10.51.45;	author hope;	state Exp;
branches
	1.10.8.1.1.1
	1.10.8.1.2.1
	1.10.8.1.3.1;
next	;

1.10.8.1.1.1
date	97.07.28.18.33.34;	author daveb;	state Exp;
branches
	1.10.8.1.1.1.1.1;
next	;

1.10.8.1.1.1.1.1
date	97.10.07.11.59.33;	author jkbrook;	state Exp;
branches;
next	;

1.10.8.1.2.1
date	97.09.08.17.26.40;	author daveb;	state Exp;
branches;
next	;

1.10.8.1.3.1
date	97.09.09.14.23.31;	author daveb;	state Exp;
branches;
next	;

1.10.9.1
date	97.09.10.19.42.28;	author brucem;	state Exp;
branches;
next	;

1.10.10.1
date	97.09.11.21.09.59;	author daveb;	state Exp;
branches;
next	;

1.10.11.1
date	99.04.01.18.08.38;	author daveb;	state Exp;
branches;
next	;


desc
@Structure Names
See The Definition (section 4.1)
@


1.10
log
@Use Stamp instead of Tyname_id etc.
@
text
@(* strnames.sml the signature *)
(*
$Log: strnames.sml,v $
Revision 1.9  1993/02/08  13:18:09  matthew
Removed open Datatypes

Revision 1.8  1992/10/30  15:16:42  jont
Added special maps for tyfun_id, tyname_id, strname_id

Revision 1.7  1992/08/27  20:15:30  davidt
Yet more changes to get structure copying working better.

Revision 1.6  1992/08/27  18:37:53  davidt
Made various changes so that structure copying can be
done more efficiently.

Revision 1.5  1992/07/17  15:53:39  jont
Changed to use btrees for renaming of tynames and strnames

Revision 1.4  1992/07/04  17:16:06  jont
Anel's changes for improved structure copying

Revision 1.3  1991/11/21  16:55:11  jont
Added copyright message

Revision 1.2  91/11/19  12:19:22  jont
*** empty log message ***

Revision 1.1.1.1  91/11/19  11:13:07  jont
Added comments for DRA on functions

Revision 1.1  91/06/07  11:46:06  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

(* the type Strname (defined in datatypes.sml) corresponds to the
simple object class StrName, as defined in the Definition (p16). They
are resolved (changed from metastrnames to real strnames) in the
process on unification. This module provides simple functions for
dealing with strnames. *)

require "../typechecker/datatypes";

signature STRNAMES =
  sig
    structure Datatypes : DATATYPES

    val uninstantiated : Datatypes.Strname -> bool
    val strname_eq : Datatypes.Strname * Datatypes.Strname -> bool
    val metastrname_eq : Datatypes.Strname * Datatypes.Strname -> bool
    val strname_ord : Datatypes.Strname * Datatypes.Strname -> bool
    val strip : Datatypes.Strname -> Datatypes.Strname
    val string_strname : Datatypes.Strname -> string

    (* The bool indicates if a flexible strname should be copied as a rigid name *)
    val create_strname_copy :
      bool ->
      Datatypes.Strname Datatypes.StampMap * Datatypes.Strname -> 
      Datatypes.Strname Datatypes.StampMap

    val strname_copy :
      Datatypes.Strname * Datatypes.Strname Datatypes.StampMap-> Datatypes.Strname
  end
@


1.10.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.10  1995/03/28  16:20:38  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.10.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.10  1995/03/28  16:20:38  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.10.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.10  1995/03/28  16:20:38  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.10.8.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/28  16:20:38  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.10.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.10.8.1  1997/05/12  10:51:45  hope
 * branched from 1.10
 *
@


1.10.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.10.8.1  1997/05/12  10:51:45  hope
 * branched from 1.10
 *
@


1.10.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.10.8.1  1997/05/12  10:51:45  hope
 * branched from 1.10
 *
@


1.10.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.10.8.1.1.1  1997/07/28  18:33:34  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.10.7.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/28  16:20:38  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.10.6.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/28  16:20:38  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.10.6.1.1.1
log
@branched from 1.10.6.1
@
text
@a3 3
 * Revision 1.10.6.1  1996/12/17  18:18:11  hope
 * branched from 1.10
 *
@


1.10.5.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/28  16:20:38  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.10.4.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/28  16:20:38  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.10.4.1.1.1
log
@branched from 1.10.4.1
@
text
@a3 3
 * Revision 1.10.4.1  1996/11/14  13:21:29  hope
 * branched from 1.10
 *
@


1.10.3.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/28  16:20:38  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.10.2.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/28  16:20:38  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.10.1.1
log
@branched from 1.10
@
text
@a3 3
 * Revision 1.10  1995/03/28  16:20:38  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.9
log
@Removed open Datatypes
@
text
@d4 3
a55 2
    val copy_metastrname : Datatypes.Strname -> Datatypes.Strname
    val new_metastrname : Datatypes.Strname -> Datatypes.Strname
d57 1
d59 3
a61 2
      Datatypes.Strname * (Datatypes.Strname) Datatypes.Strname_id.Map.T *
      (Datatypes.Strname -> Datatypes.Strname) -> (Datatypes.Strname) Datatypes.Strname_id.Map.T
d64 1
a64 1
      Datatypes.Strname * (Datatypes.Strname) Datatypes.Strname_id.Map.T -> Datatypes.Strname
@


1.9.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.9  1993/02/08  13:18:09  matthew
Removed open Datatypes

@


1.8
log
@Added special maps for tyfun_id, tyname_id, strname_id
@
text
@d4 3
d47 8
a54 10
    open Datatypes

    val uninstantiated : Strname -> bool
    val strname_eq : Strname * Strname -> bool
    val metastrname_eq : Strname * Strname -> bool
    val strname_ord : Strname * Strname -> bool
    val strip : Strname -> Strname
    val string_strname : Strname -> string
    val copy_metastrname : Strname -> Strname
    val new_metastrname : Strname -> Strname
d57 2
a58 2
      Strname * (Strname) Strname_id.Map.T *
      (Strname -> Strname) -> (Strname) Strname_id.Map.T
d61 1
a61 1
      Strname * (Strname) Strname_id.Map.T -> Strname
@


1.7
log
@Yet more changes to get structure copying working better.
@
text
@d4 3
a37 1
require "../utils/newmap";
a41 1
    structure NewMap : NEWMAP
d56 2
a57 2
      Strname * (Strname_id.Strname_id, Strname) NewMap.T *
      (Strname -> Strname) -> (Strname_id.Strname_id, Strname) NewMap.T
d60 1
a60 1
      Strname * (Strname_id.Strname_id, Strname) NewMap.T -> Strname
@


1.6
log
@Made various changes so that structure copying can be
done more efficiently.
@
text
@d4 4
d59 1
a59 2
      Strname * (Strname_id.Strname_id, Strname) NewMap.T *
      (Strname -> Strname) -> Strname
@


1.5
log
@Changed to use btrees for renaming of tynames and strnames
@
text
@d4 3
a48 4
(*    val strname_copy : Strname * (Strname * Strname) list *
      (Strname -> Strname) -> Strname * (Strname * Strname) list*)
    val strname_copy : Strname * (Strname_id.Strname_id, Strname) NewMap.T *
      (Strname -> Strname) -> Strname * (Strname_id.Strname_id, Strname) NewMap.T
d50 7
@


1.4
log
@Anel's changes for improved structure copying
@
text
@d4 3
d28 1
d33 1
d48 3
a50 2
    val strname_copy : Strname * (Strname_id.Strname_id * Strname) list *
      (Strname -> Strname) -> Strname * (Strname_id.Strname_id * Strname) list
a51 8








@


1.3
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	strnames.sml,v $
d41 4
a44 2
    val strname_copy : Strname * (Strname * Strname) list *
      (Strname -> Strname) -> Strname * (Strname * Strname) list
@


1.2
log
@*** empty log message ***
@
text
@d1 1
d4 3
d13 1
@


1.1
log
@Initial revision
@
text
@d2 7
a8 1
$Log$
d10 7
@


1.1.1.1
log
@Added comments for DRA on functions
@
text
@d2 1
a2 4
$Log:	strnames.sml,v $
Revision 1.1  91/06/07  11:46:06  colin
Initial revision

a3 7

(* the type Strname (defined in datatypes.sml) corresponds to the
simple object class StrName, as defined in the Definition (p16). They
are resolved (changed from metastrnames to real strnames) in the
process on unification. This module provides simple functions for
dealing with strnames. *)

@
