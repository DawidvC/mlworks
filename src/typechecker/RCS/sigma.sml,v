head	1.14;
access;
symbols
	MLW_daveb_inline_1_4_99:1.14.9
	MLWorks_21c0_1999_03_25:1.14
	MLWorks_20c1_1998_08_20:1.14
	MLWorks_20c0_1998_08_04:1.14
	MLWorks_20b2c2_1998_06_19:1.14
	MLWorks_20b2_Windows_1998_06_12:1.14
	MLWorks_20b1c1_1998_05_07:1.14
	MLWorks_20b0_1998_04_07:1.14
	MLWorks_20b0_1998_03_20:1.14
	MLWorks_20m2_1998_02_16:1.14
	MLWorks_20m1_1997_10_23:1.14
	MLWorks_11r1:1.14.6.1.1.1.1
	MLWorks_workspace_97:1.14.8
	MLWorks_dt_wizard:1.14.7
	MLWorks_11c0_1997_09_09:1.14.6.1.1.1
	MLWorks_10r3:1.14.6.1.3
	MLWorks_10r2_551:1.14.6.1.2
	MLWorks_11:1.14.6.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.14.6.1
	MLWorks_20m0_1997_06_20:1.14
	MLWorks_1_0_r2c2_1997_06_14:1.14.6.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.14.6.1
	MLWorks_1_0_r2c1_1997_05_12:1.14.6
	MLWorks_BugFix_1997_04_24:1.14
	MLWorks_1_0_r2_Win32_1997_04_11:1.14
	MLWorks_1_0_r2_Unix_1997_04_04:1.14
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.14.4.1.1
	MLWorks_gui_1996_12_18:1.14.5
	MLWorks_1_0_Win32_1996_12_17:1.14.4
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.14.2.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.14.2.1
	MLWorks_1_0_Irix_1996_11_28:1.14.2.1.1
	MLWorks_1_0_Win32_1996_11_22:1.14.3
	MLWorks_1_0_Unix_1996_11_14:1.14.2
	MLWorks_Open_Beta2_1996_10_11:1.14.1
	MLWorks_License_dev:1.13.2
	MLWorks_1_open_beta_1996_09_13:1.13.1
	MLWorks_Open_Beta_1996_08_22:1.13
	MLWorks_Beta_1996_07_02:1.13
	MLWorks_Beta_1996_06_07:1.13
	MLWorks_Beta_1996_06_06:1.13
	MLWorks_Beta_1996_06_05:1.13
	MLWorks_Beta_1996_06_03:1.13
	MLWorks_Beta_1996_05_31:1.13
	MLWorks_Beta_1996_05_30:1.13
	ML_beta_release_12/08/94:1.11
	ML_beta_release_03/08/94:1.11
	ML_revised_beta_release_25/05/94:1.11
	ML_final_beta_release_02/03/94:1.11
	mlworks-28-01-1994:1.11
	Release:1.11
	mlworks-beta-01-09-1993:1.11
	MLWorks-1-0-4-29/01/1993:1.8
	MLWorks-1-0-3-21/12/1992:1.8
	MLWorks-1-0-2-15/12/1992:1.8
	MLWorks-1-0-1-04/12/1992:1.8
	checkpoint_17_08_92:1.6
	Ten15_release_19-11-91:1.1.1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.14
date	96.10.04.16.07.10;	author andreww;	state Exp;
branches
	1.14.1.1
	1.14.2.1
	1.14.3.1
	1.14.4.1
	1.14.5.1
	1.14.6.1
	1.14.7.1
	1.14.8.1
	1.14.9.1;
next	1.13;

1.13
date	95.04.05.09.47.01;	author matthew;	state Exp;
branches
	1.13.1.1
	1.13.2.1;
next	1.12;

1.12
date	95.02.07.14.40.29;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	93.04.08.10.40.35;	author matthew;	state Exp;
branches
	1.11.1.1;
next	1.10;

1.10
date	93.03.09.13.03.54;	author matthew;	state Exp;
branches;
next	1.9;

1.9
date	93.02.08.16.48.33;	author matthew;	state Exp;
branches;
next	1.8;

1.8
date	92.11.26.17.16.45;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	92.10.30.16.09.39;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	92.08.11.18.05.11;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	92.07.17.10.29.37;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	92.07.04.17.16.06;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	91.11.21.16.54.34;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.11.19.12.19.18;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.11.45.49;	author colin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	91.11.19.11.13.06;	author jont;	state Exp;
branches;
next	;

1.11.1.1
date	93.04.08.10.40.35;	author jont;	state Exp;
branches;
next	;

1.13.1.1
date	96.09.13.11.41.05;	author hope;	state Exp;
branches;
next	;

1.13.2.1
date	96.10.07.16.34.08;	author hope;	state Exp;
branches;
next	;

1.14.1.1
date	96.10.17.11.53.15;	author hope;	state Exp;
branches;
next	;

1.14.2.1
date	96.11.14.13.20.51;	author hope;	state Exp;
branches
	1.14.2.1.1.1;
next	;

1.14.2.1.1.1
date	96.11.28.15.31.50;	author hope;	state Exp;
branches;
next	;

1.14.3.1
date	96.11.22.18.38.37;	author hope;	state Exp;
branches;
next	;

1.14.4.1
date	96.12.17.18.17.38;	author hope;	state Exp;
branches
	1.14.4.1.1.1;
next	;

1.14.4.1.1.1
date	97.02.24.12.11.53;	author hope;	state Exp;
branches;
next	;

1.14.5.1
date	96.12.18.10.12.53;	author hope;	state Exp;
branches;
next	;

1.14.6.1
date	97.05.12.10.51.12;	author hope;	state Exp;
branches
	1.14.6.1.1.1
	1.14.6.1.2.1
	1.14.6.1.3.1;
next	;

1.14.6.1.1.1
date	97.07.28.18.34.31;	author daveb;	state Exp;
branches
	1.14.6.1.1.1.1.1;
next	;

1.14.6.1.1.1.1.1
date	97.10.07.12.00.24;	author jkbrook;	state Exp;
branches;
next	;

1.14.6.1.2.1
date	97.09.08.17.27.28;	author daveb;	state Exp;
branches;
next	;

1.14.6.1.3.1
date	97.09.09.14.24.25;	author daveb;	state Exp;
branches;
next	;

1.14.7.1
date	97.09.10.19.43.21;	author brucem;	state Exp;
branches;
next	;

1.14.8.1
date	97.09.11.21.10.48;	author daveb;	state Exp;
branches;
next	;

1.14.9.1
date	99.04.01.18.09.07;	author daveb;	state Exp;
branches;
next	;


desc
@Sigma (N)S - semantic object for signatures
See The Definition (section 5.1)
@


1.14
log
@[Bug #1592]
propagating type name level information.
@
text
@(* sigma.sml the signature *)
(*
$Log: sigma.sml,v $
 * Revision 1.13  1995/04/05  09:47:01  matthew
 * Use Stamp instead of Tyname_id etc.
 * \nImprovements to copying structures
 * for functors and signatures
 *
Revision 1.12  1995/02/07  14:40:29  matthew
Adding phi functions

Revision 1.11  1993/04/08  10:40:35  matthew
Simplified interface.  Added abstract_sigma function

Revision 1.10  1993/03/09  13:03:54  matthew
Options & Info changes
Str to Structure

Revision 1.9  1993/02/08  16:48:33  matthew
Removed open Datatypes, Changes for BASISTYPES signature

Revision 1.8  1992/11/26  17:16:45  daveb
Changes to make show_id_class and show_eq_info part of Info structure
instead of references.

Revision 1.7  1992/10/30  16:09:39  jont
Added special maps for tyfun_id, tyname_id, strname_id

Revision 1.6  1992/08/11  18:05:11  jont
Removed some redundant structure arguments and sharing
Converted where relevant to use NewMap.{forall,exists,iterate}

Revision 1.5  1992/07/17  10:29:37  jont
Changed to use btrees for renaming of tynames and strnames

Revision 1.4  1992/07/04  17:16:06  jont
Anel's changes for improved structure copying

Revision 1.3  1991/11/21  16:54:34  jont
Added copyright message

Revision 1.2  91/11/19  12:19:18  jont
Merging in comments from Ten15 branch to main trunk

Revision 1.1.1.1  91/11/19  11:13:06  jont
Added comments for DRA on functions

Revision 1.1  91/06/07  11:45:49  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

(* A Sigma is a value in the class Sig defined in the Definition
(p31), a pair of a NameSet and a Str. This module defines the type
Sigma and functions over that type, all of which are simple. *)

require "basistypes";
require "../main/options";

signature SIGMA =
  sig
    structure BasisTypes : BASISTYPES
    structure Options : OPTIONS
    val string_sigma : Options.print_options -> BasisTypes.Sigma -> string
    val string_phi : Options.print_options -> BasisTypes.Phi -> string

      (* NB, the extra int arg to the next three functions
         carry the level for new type names. *)

    val sig_copy : BasisTypes.Sigma * bool -> int -> BasisTypes.Sigma
    val phi_copy : BasisTypes.Phi * bool -> int -> BasisTypes.Phi
    val abstract_sigma : BasisTypes.Sigma -> int -> BasisTypes.Sigma

    val new_names_of : BasisTypes.Datatypes.Structure -> BasisTypes.Nameset
    val names_of : BasisTypes.Datatypes.Structure -> BasisTypes.Nameset
    val names_of_env : BasisTypes.Datatypes.Env -> BasisTypes.Nameset

  end
@


1.14.9.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.14  1996/10/04  16:07:10  andreww
 * [Bug #1592]
 * propagating type name level information.
 *
@


1.14.8.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.14  1996/10/04  16:07:10  andreww
 * [Bug #1592]
 * propagating type name level information.
 *
@


1.14.7.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.14  1996/10/04  16:07:10  andreww
 * [Bug #1592]
 * propagating type name level information.
 *
@


1.14.6.1
log
@branched from 1.14
@
text
@a3 4
 * Revision 1.14  1996/10/04  16:07:10  andreww
 * [Bug #1592]
 * propagating type name level information.
 *
@


1.14.6.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.14.6.1  1997/05/12  10:51:12  hope
 * branched from 1.14
 *
@


1.14.6.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.14.6.1  1997/05/12  10:51:12  hope
 * branched from 1.14
 *
@


1.14.6.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.14.6.1  1997/05/12  10:51:12  hope
 * branched from 1.14
 *
@


1.14.6.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.14.6.1.1.1  1997/07/28  18:34:31  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.14.5.1
log
@branched from 1.14
@
text
@a3 4
 * Revision 1.14  1996/10/04  16:07:10  andreww
 * [Bug #1592]
 * propagating type name level information.
 *
@


1.14.4.1
log
@branched from 1.14
@
text
@a3 4
 * Revision 1.14  1996/10/04  16:07:10  andreww
 * [Bug #1592]
 * propagating type name level information.
 *
@


1.14.4.1.1.1
log
@branched from 1.14.4.1
@
text
@a3 3
 * Revision 1.14.4.1  1996/12/17  18:17:38  hope
 * branched from 1.14
 *
@


1.14.3.1
log
@branched from 1.14
@
text
@a3 4
 * Revision 1.14  1996/10/04  16:07:10  andreww
 * [Bug #1592]
 * propagating type name level information.
 *
@


1.14.2.1
log
@branched from 1.14
@
text
@a3 4
 * Revision 1.14  1996/10/04  16:07:10  andreww
 * [Bug #1592]
 * propagating type name level information.
 *
@


1.14.2.1.1.1
log
@branched from 1.14.2.1
@
text
@a3 3
 * Revision 1.14.2.1  1996/11/14  13:20:51  hope
 * branched from 1.14
 *
@


1.14.1.1
log
@branched from 1.14
@
text
@a3 4
 * Revision 1.14  1996/10/04  16:07:10  andreww
 * [Bug #1592]
 * propagating type name level information.
 *
@


1.13
log
@Use Stamp instead of Tyname_id etc.
\nImprovements to copying structures
for functors and signatures
@
text
@d4 5
d68 2
a69 2
    val sig_copy : BasisTypes.Sigma * bool -> BasisTypes.Sigma
    val phi_copy : BasisTypes.Phi * bool -> BasisTypes.Phi
d71 3
a73 1
    val abstract_sigma : BasisTypes.Sigma -> BasisTypes.Sigma
@


1.13.2.1
log
@branched from 1.13
@
text
@a3 5
 * Revision 1.13  1995/04/05  09:47:01  matthew
 * Use Stamp instead of Tyname_id etc.
 * \nImprovements to copying structures
 * for functors and signatures
 *
@


1.13.1.1
log
@branched from 1.13
@
text
@a3 5
 * Revision 1.13  1995/04/05  09:47:01  matthew
 * Use Stamp instead of Tyname_id etc.
 * \nImprovements to copying structures
 * for functors and signatures
 *
@


1.12
log
@Adding phi functions
@
text
@d4 3
d63 2
a64 8
    val sig_copy_return : 
      BasisTypes.Sigma * (BasisTypes.Datatypes.Strname) BasisTypes.Datatypes.Strname_id.Map.T * 
      (BasisTypes.Datatypes.Tyname) BasisTypes.Datatypes.Tyfun_id.Map.T -> 
      BasisTypes.Sigma * (BasisTypes.Datatypes.Strname) BasisTypes.Datatypes.Strname_id.Map.T *
      (BasisTypes.Datatypes.Tyname) BasisTypes.Datatypes.Tyfun_id.Map.T

    val sig_copy : BasisTypes.Sigma -> BasisTypes.Sigma
    val phi_copy : BasisTypes.Phi -> BasisTypes.Phi
@


1.11
log
@Simplified interface.  Added abstract_sigma function
@
text
@d4 3
d58 1
d67 1
@


1.11.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.11  1993/04/08  10:40:35  matthew
Simplified interface.  Added abstract_sigma function

@


1.10
log
@Options & Info changes
Str to Structure
@
text
@d4 4
d64 5
a68 3
    val new_names_of : BasisTypes.Datatypes.Structure * BasisTypes.Nameset -> BasisTypes.Nameset
    val names_of : BasisTypes.Datatypes.Structure * BasisTypes.Nameset -> BasisTypes.Nameset
    val names_of_env : BasisTypes.Datatypes.Env * BasisTypes.Nameset -> BasisTypes.Nameset
@


1.9
log
@Removed open Datatypes, Changes for BASISTYPES signature
@
text
@d4 3
d44 1
d49 2
a50 2

    val string_sigma : BasisTypes.Info.options -> BasisTypes.Sigma -> string
d60 2
a61 2
    val new_names_of : BasisTypes.Datatypes.Str * BasisTypes.Nameset -> BasisTypes.Nameset
    val names_of : BasisTypes.Datatypes.Str * BasisTypes.Nameset -> BasisTypes.Nameset
@


1.8
log
@Changes to make show_id_class and show_eq_info part of Info structure
instead of references.
@
text
@d4 4
d40 1
a40 1
require "nameset";
d44 1
a44 3
    structure Nameset : NAMESET

    open Nameset.Datatypes
d46 1
a46 1
    datatype Sigma = SIGMA of (Nameset.Nameset * Str)
a47 4
    val new_names_of : Str * Nameset.Nameset -> Nameset.Nameset
    val names_of : Str * Nameset.Nameset -> Nameset.Nameset
    val names_of_env : Env * Nameset.Nameset -> Nameset.Nameset
    val string_sigma : Nameset.Info.options -> Sigma -> string
d49 10
a58 4
      Sigma * (Strname) Nameset.Datatypes.Strname_id.Map.T * 
      (Tyname) Nameset.Datatypes.Tyfun_id.Map.T -> 
      Sigma * (Strname) Nameset.Datatypes.Strname_id.Map.T *
      (Tyname) Nameset.Datatypes.Tyfun_id.Map.T
a59 1
    val sig_copy : Sigma -> Sigma
@


1.7
log
@Added special maps for tyfun_id, tyname_id, strname_id
@
text
@d4 3
d49 1
a49 1
    val string_sigma : Sigma -> string
@


1.6
log
@Removed some redundant structure arguments and sharing
Converted where relevant to use NewMap.{forall,exists,iterate}
@
text
@d4 4
d48 4
a51 4
      Sigma * (Strname_id.Strname_id, Strname) Nameset.Datatypes.NewMap.T * 
      (Tyfun_id.Tyfun_id, Tyname) Nameset.Datatypes.NewMap.T -> 
      Sigma * (Strname_id.Strname_id, Strname) Nameset.Datatypes.NewMap.T *
      (Tyfun_id.Tyfun_id, Tyname) Nameset.Datatypes.NewMap.T
@


1.5
log
@Changed to use btrees for renaming of tynames and strnames
@
text
@d4 3
a28 2

require "datatypes";
a32 1
    structure Datatypes : DATATYPES
d35 1
a35 1
    sharing Datatypes = Nameset.Datatypes
a36 2
    open Datatypes

a42 3
(*    val sig_copy_return : 
      Sigma * (Strname * Strname) list * (Tyname * Tyname) list -> 
      Sigma * (Strname * Strname) list * (Tyname * Tyname) list*)
d44 4
a47 4
      Sigma * (Strname_id.Strname_id, Strname) Nameset.NewMap.T * 
      (Tyfun_id.Tyfun_id, Tyname) Nameset.NewMap.T -> 
      Sigma * (Strname_id.Strname_id, Strname) Nameset.NewMap.T *
      (Tyfun_id.Tyfun_id, Tyname) Nameset.NewMap.T
@


1.4
log
@Anel's changes for improved structure copying
@
text
@d4 3
d49 4
a52 4
      Sigma * (Strname_id.Strname_id * Strname) list * 
      (Tyfun_id.Tyfun_id * Tyname) list -> 
      Sigma * (Strname_id.Strname_id * Strname) list * 
      (Tyfun_id.Tyfun_id * Tyname) list
@


1.3
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	sigma.sml,v $
d42 3
d46 5
a50 2
      Sigma * (Strname * Strname) list * (Tyname * Tyname) list -> 
      Sigma * (Strname * Strname) list * (Tyname * Tyname) list
@


1.2
log
@Merging in comments from Ten15 branch to main trunk
@
text
@d1 1
d4 3
d13 1
@


1.1
log
@Initial revision
@
text
@d2 7
a8 1
$Log$
d10 6
@


1.1.1.1
log
@Added comments for DRA on functions
@
text
@d2 1
a2 4
$Log:	sigma.sml,v $
Revision 1.1  91/06/07  11:45:49  colin
Initial revision

a3 6

(* A Sigma is a value in the class Sig defined in the Definition
(p31), a pair of a NameSet and a Str. This module defines the type
Sigma and functions over that type, all of which are simple. *)


@
