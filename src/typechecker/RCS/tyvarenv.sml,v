head	1.5;
access;
symbols
	ML_beta_release_12/08/94:1.5
	ML_beta_release_03/08/94:1.5
	ML_revised_beta_release_25/05/94:1.5
	ML_final_beta_release_02/03/94:1.5
	mlworks-28-01-1994:1.5
	Release:1.5
	mlworks-beta-01-09-1993:1.5
	MLWorks-1-0-4-29/01/1993:1.4
	MLWorks-1-0-3-21/12/1992:1.4
	MLWorks-1-0-2-15/12/1992:1.4
	MLWorks-1-0-1-04/12/1992:1.4
	checkpoint_17_08_92:1.4
	Ten15_release_19-11-91:1.1.1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;


1.5
date	93.02.08.15.11.25;	author matthew;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	92.08.04.22.55.12;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	91.11.21.16.56.13;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.11.19.12.19.33;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.11.46.42;	author colin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	91.11.19.11.13.13;	author jont;	state Exp;
branches;
next	;

1.5.1.1
date	93.02.08.15.11.25;	author jont;	state Exp;
branches;
next	;


desc
@Datatype and functions for TyVarEnv mapping from syntactic type variables
to semantic types
Corresponds closely to TyVarSet (U) in The Definition (section 4.2)
@


1.5
log
@Removed open Datatypes, Changes for BASISTYPES signature
@
text
@(* tyvarenv.sml the signature *)
(*
$Log: tyvarenv.sml,v $
Revision 1.4  1992/08/04  22:55:12  jont
Anel's changes to use NewMap instead of Map

Revision 1.3  1991/11/21  16:56:13  jont
Added copyright message

Revision 1.2  91/11/19  12:19:33  jont
Merging in comments from Ten15 branch to main trunk

Revision 1.1.1.1  91/11/19  11:13:13  jont
Added comments for DRA on functions

Revision 1.1  91/06/07  11:46:42  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

(* A TyVarEnv is a mapping from TyVar's to Types in the typechecker.
It is used when checking instantiated polymorphic types. *)

require "../typechecker/basistypes";

signature TYVARENV =
  sig
    structure BasisTypes : BASISTYPES
      
    exception Lookup_in_Tyvarenv
    val empty_tyvarenv : BasisTypes.Tyvarenv
    val lookup : BasisTypes.Datatypes.Ident.TyVar * BasisTypes.Tyvarenv -> BasisTypes.Datatypes.Type
    val add_to_tyvarenv : int * BasisTypes.Datatypes.Ident.TyVar * BasisTypes.Tyvarenv -> BasisTypes.Tyvarenv
    val string_tyvarenv : BasisTypes.Tyvarenv -> string

end;
  
@


1.5.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.5  1993/02/08  15:11:25  matthew
Removed open Datatypes, Changes for BASISTYPES signature

@


1.4
log
@Anel's changes to use NewMap instead of Map
@
text
@d4 3
d25 1
a25 1
require "../typechecker/datatypes";
d29 1
a29 2
    structure Datatypes : DATATYPES
    open Datatypes
a30 2
    datatype Tyvarenv = TYVARENV of (Ident.TyVar,Type) NewMap.T

d32 4
a35 4
    val empty_tyvarenv : Tyvarenv
    val lookup : Ident.TyVar * Tyvarenv -> Type
    val add_to_tyvarenv : int * Ident.TyVar * Tyvarenv -> Tyvarenv
    val string_tyvarenv : Tyvarenv -> string
@


1.3
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	tyvarenv.sml,v $
d29 1
a29 1
    datatype Tyvarenv = TYVARENV of (Ident.TyVar,Type) Mapping.Map
d31 1
@


1.2
log
@Merging in comments from Ten15 branch to main trunk
@
text
@d1 1
d4 3
d13 1
@


1.1
log
@Initial revision
@
text
@d2 7
a8 1
$Log$
d10 4
@


1.1.1.1
log
@Added comments for DRA on functions
@
text
@d2 1
a2 4
$Log:	tyvarenv.sml,v $
Revision 1.1  91/06/07  11:46:42  colin
Initial revision

a3 4

(* A TyVarEnv is a mapping from TyVar's to Types in the typechecker.
It is used when checking instantiated polymorphic types. *)

@
