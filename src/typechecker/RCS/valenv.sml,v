head	1.17;
access;
symbols
	MLW_daveb_inline_1_4_99:1.17.11
	MLWorks_21c0_1999_03_25:1.17
	MLWorks_20c1_1998_08_20:1.17
	MLWorks_20c0_1998_08_04:1.17
	MLWorks_20b2c2_1998_06_19:1.17
	MLWorks_20b2_Windows_1998_06_12:1.17
	MLWorks_20b1c1_1998_05_07:1.17
	MLWorks_20b0_1998_04_07:1.17
	MLWorks_20b0_1998_03_20:1.17
	MLWorks_20m2_1998_02_16:1.17
	MLWorks_20m1_1997_10_23:1.17
	MLWorks_11r1:1.17.8.1.1.1.1
	MLWorks_workspace_97:1.17.10
	MLWorks_dt_wizard:1.17.9
	MLWorks_11c0_1997_09_09:1.17.8.1.1.1
	MLWorks_10r3:1.17.8.1.3
	MLWorks_10r2_551:1.17.8.1.2
	MLWorks_11:1.17.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.17.8.1
	MLWorks_20m0_1997_06_20:1.17
	MLWorks_1_0_r2c2_1997_06_14:1.17.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.17.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.17.8
	MLWorks_BugFix_1997_04_24:1.17
	MLWorks_1_0_r2_Win32_1997_04_11:1.17
	MLWorks_1_0_r2_Unix_1997_04_04:1.17
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.17.6.1.1
	MLWorks_gui_1996_12_18:1.17.7
	MLWorks_1_0_Win32_1996_12_17:1.17.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.17.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.17.4.1
	MLWorks_1_0_Irix_1996_11_28:1.17.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.17.5
	MLWorks_1_0_Unix_1996_11_14:1.17.4
	MLWorks_Open_Beta2_1996_10_11:1.17.3
	MLWorks_License_dev:1.17.2
	MLWorks_1_open_beta_1996_09_13:1.17.1
	MLWorks_Open_Beta_1996_08_22:1.17
	MLWorks_Beta_1996_07_02:1.17
	MLWorks_Beta_1996_06_07:1.17
	MLWorks_Beta_1996_06_06:1.17
	MLWorks_Beta_1996_06_05:1.17
	MLWorks_Beta_1996_06_03:1.17
	MLWorks_Beta_1996_05_31:1.17
	MLWorks_Beta_1996_05_30:1.17
	ML_beta_release_12/08/94:1.15
	ML_beta_release_03/08/94:1.15
	ML_revised_beta_release_25/05/94:1.15
	ML_final_beta_release_02/03/94:1.14
	mlworks-28-01-1994:1.14
	Release:1.14
	mlworks-beta-01-09-1993:1.14
	MLWorks-1-0-4-29/01/1993:1.12
	MLWorks-1-0-3-21/12/1992:1.12
	MLWorks-1-0-2-15/12/1992:1.11
	MLWorks-1-0-1-04/12/1992:1.11
	checkpoint_17_08_92:1.8
	Ten15_release_19-11-91:1.1.1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.17
date	95.03.24.15.00.45;	author matthew;	state Exp;
branches
	1.17.1.1
	1.17.2.1
	1.17.3.1
	1.17.4.1
	1.17.5.1
	1.17.6.1
	1.17.7.1
	1.17.8.1
	1.17.9.1
	1.17.10.1
	1.17.11.1;
next	1.16;

1.16
date	95.02.06.11.01.10;	author matthew;	state Exp;
branches;
next	1.15;

1.15
date	94.05.09.16.14.02;	author daveb;	state Exp;
branches;
next	1.14;

1.14
date	93.02.19.10.38.18;	author matthew;	state Exp;
branches
	1.14.1.1;
next	1.13;

1.13
date	93.02.01.14.20.23;	author matthew;	state Exp;
branches;
next	1.12;

1.12
date	92.12.18.15.46.12;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	92.10.30.15.29.53;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	92.08.27.20.00.12;	author davidt;	state Exp;
branches;
next	1.9;

1.9
date	92.08.27.11.36.52;	author davidt;	state Exp;
branches;
next	1.8;

1.8
date	92.08.11.16.30.12;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	92.08.03.09.36.38;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	92.07.16.18.49.49;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	92.07.04.17.16.08;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	92.02.11.09.59.21;	author clive;	state Exp;
branches;
next	1.3;

1.3
date	91.11.21.16.56.32;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.11.19.12.19.38;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.11.47.02;	author colin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	91.11.19.11.13.16;	author jont;	state Exp;
branches;
next	;

1.14.1.1
date	93.02.19.10.38.18;	author jont;	state Exp;
branches;
next	;

1.17.1.1
date	96.09.13.11.42.26;	author hope;	state Exp;
branches;
next	;

1.17.2.1
date	96.10.07.16.35.32;	author hope;	state Exp;
branches;
next	;

1.17.3.1
date	96.10.17.11.54.38;	author hope;	state Exp;
branches;
next	;

1.17.4.1
date	96.11.14.13.22.55;	author hope;	state Exp;
branches
	1.17.4.1.1.1;
next	;

1.17.4.1.1.1
date	96.11.28.15.33.24;	author hope;	state Exp;
branches;
next	;

1.17.5.1
date	96.11.22.18.39.59;	author hope;	state Exp;
branches;
next	;

1.17.6.1
date	96.12.17.18.19.01;	author hope;	state Exp;
branches
	1.17.6.1.1.1;
next	;

1.17.6.1.1.1
date	97.02.24.12.13.18;	author hope;	state Exp;
branches;
next	;

1.17.7.1
date	96.12.18.10.14.21;	author hope;	state Exp;
branches;
next	;

1.17.8.1
date	97.05.12.10.52.33;	author hope;	state Exp;
branches
	1.17.8.1.1.1
	1.17.8.1.2.1
	1.17.8.1.3.1;
next	;

1.17.8.1.1.1
date	97.07.28.18.34.24;	author daveb;	state Exp;
branches
	1.17.8.1.1.1.1.1;
next	;

1.17.8.1.1.1.1.1
date	97.10.07.12.00.20;	author jkbrook;	state Exp;
branches;
next	;

1.17.8.1.2.1
date	97.09.08.17.27.24;	author daveb;	state Exp;
branches;
next	;

1.17.8.1.3.1
date	97.09.09.14.24.21;	author daveb;	state Exp;
branches;
next	;

1.17.9.1
date	97.09.10.19.43.16;	author brucem;	state Exp;
branches;
next	;

1.17.10.1
date	97.09.11.21.10.44;	author daveb;	state Exp;
branches;
next	;

1.17.11.1
date	99.04.01.18.09.03;	author daveb;	state Exp;
branches;
next	;


desc
@Functions ranging over variable environments
(see datatypes.sml for datatype)
@


1.17
log
@Use Stamp instead of Tyname_id etc.
@
text
@(* valenv.sml the signature *)
(*
$Log: valenv.sml,v $
Revision 1.16  1995/02/06  11:01:10  matthew
Changing lookup exceptions

Revision 1.15  1994/05/09  16:14:02  daveb
Added resolve_overloads function.

Revision 1.14  1993/02/19  10:38:18  matthew
Moved enrichment code to _realise

Revision 1.13  1993/02/01  14:20:23  matthew
Added sharing

Revision 1.12  1992/12/18  15:46:12  matthew
Propagating options to signature matching error messages.
,

Revision 1.11  1992/10/30  15:29:53  jont
Added special maps for tyfun_id, tyname_id, strname_id

Revision 1.10  1992/08/27  20:00:12  davidt
Yet more changes to get structure copying working better.

Revision 1.9  1992/08/27  11:36:52  davidt
Added Anel's changes, and changed some stuff to do better
equality checking of valenvs etc.

Revision 1.8  1992/08/11  16:30:12  jont
Removed some redundant structure arguments and sharing
Converted where relevant to use NewMap.{forall,exists,iterate}

Revision 1.7  1992/08/03  09:36:38  jont
Anel's changes to use NewMap instead of Map

Revision 1.6  1992/07/16  18:49:49  jont
Changed to use btrees for renaming of tynames and strnames.

Revision 1.5  1992/07/04  17:16:08  jont
Anel's changes for improved structure copying

Revision 1.4  1992/02/11  09:59:21  clive
New pervasive library code - cut some things out of the initial type basis

Revision 1.3  1991/11/21  16:56:32  jont
Added copyright message

Revision 1.2  91/11/19  12:19:38  jont
Merging in comments from Ten15 branch to main trunk

Revision 1.1.1.1  91/11/19  11:13:16  jont
Added comments for DRA on functions

Revision 1.1  91/06/07  11:47:02  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

(*

A ValEnv is a mapping from ValId's to typeschemes. It is used for
VarEnv's and ExConEnv's (as defined on p17 of the Definition). This
module defines the basic operations on ValEnv's used in the
Definition, plus one or two others to do things like convert a ValEnv
into a string (for debugging)

*)

require "../typechecker/datatypes";

signature VALENV =
  sig
    structure Datatypes : DATATYPES
    type Options
    type ErrorInfo

    exception LookupValId of Datatypes.Ident.ValId

    val initial_ve : Datatypes.Valenv
    val initial_ve_for_builtin_library : Datatypes.Valenv
    val initial_ee : Datatypes.Valenv      
    val lookup : Datatypes.Ident.ValId * Datatypes.Valenv -> Datatypes.Typescheme
    val add_to_ve : Datatypes.Ident.ValId * Datatypes.Typescheme * Datatypes.Valenv -> Datatypes.Valenv
    val ve_plus_ve : Datatypes.Valenv * Datatypes.Valenv -> Datatypes.Valenv 
    val ve_domain : Datatypes.Valenv -> Datatypes.Ident.ValId list
    val string_valenv : int * Datatypes.Valenv -> string 
    (* Warning! Valenv_eq ignores the constructor status of the identifiers *)
    val valenv_eq : Datatypes.Valenv * Datatypes.Valenv -> bool 
    val dom_valenv_eq : Datatypes.Valenv * Datatypes.Valenv -> bool 
    val empty_valenvp : Datatypes.Valenv -> bool
    val tyvars : Datatypes.Valenv -> Datatypes.Ident.TyVar list

    val resolve_overloads : ErrorInfo -> Datatypes.Env * Options -> unit
    
    val ve_copy :
      Datatypes.Valenv * Datatypes.Tyname Datatypes.StampMap ->
      Datatypes.Valenv
  end;
@


1.17.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.17  1995/03/24  15:00:45  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.17.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.17  1995/03/24  15:00:45  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.17.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.17  1995/03/24  15:00:45  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.17.8.1
log
@branched from 1.17
@
text
@a3 3
 * Revision 1.17  1995/03/24  15:00:45  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.17.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.17.8.1  1997/05/12  10:52:33  hope
 * branched from 1.17
 *
@


1.17.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.17.8.1  1997/05/12  10:52:33  hope
 * branched from 1.17
 *
@


1.17.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.17.8.1  1997/05/12  10:52:33  hope
 * branched from 1.17
 *
@


1.17.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.17.8.1.1.1  1997/07/28  18:34:24  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.17.7.1
log
@branched from 1.17
@
text
@a3 3
 * Revision 1.17  1995/03/24  15:00:45  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.17.6.1
log
@branched from 1.17
@
text
@a3 3
 * Revision 1.17  1995/03/24  15:00:45  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.17.6.1.1.1
log
@branched from 1.17.6.1
@
text
@a3 3
 * Revision 1.17.6.1  1996/12/17  18:19:01  hope
 * branched from 1.17
 *
@


1.17.5.1
log
@branched from 1.17
@
text
@a3 3
 * Revision 1.17  1995/03/24  15:00:45  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.17.4.1
log
@branched from 1.17
@
text
@a3 3
 * Revision 1.17  1995/03/24  15:00:45  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.17.4.1.1.1
log
@branched from 1.17.4.1
@
text
@a3 3
 * Revision 1.17.4.1  1996/11/14  13:22:55  hope
 * branched from 1.17
 *
@


1.17.3.1
log
@branched from 1.17
@
text
@a3 3
 * Revision 1.17  1995/03/24  15:00:45  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.17.2.1
log
@branched from 1.17
@
text
@a3 3
 * Revision 1.17  1995/03/24  15:00:45  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.17.1.1
log
@branched from 1.17
@
text
@a3 3
 * Revision 1.17  1995/03/24  15:00:45  matthew
 * Use Stamp instead of Tyname_id etc.
 *
@


1.16
log
@Changing lookup exceptions
@
text
@d4 3
d98 1
a98 1
      Datatypes.Valenv * (Datatypes.Tyname) Datatypes.Tyfun_id.Map.T ->
@


1.15
log
@Added resolve_overloads function.
@
text
@d4 3
d76 1
a76 1
    exception Lookup_in_VE
@


1.14
log
@Moved enrichment code to _realise
@
text
@d4 3
d70 2
d89 2
@


1.14.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.14  1993/02/19  10:38:18  matthew
Moved enrichment code to _realise

@


1.13
log
@Added sharing
@
text
@d4 3
a61 1
require "../main/info";
a66 3
    structure Info : INFO

    sharing Datatypes.Ident.Location = Info.Location
a68 1
    exception EnrichError of string
a80 5
    val ve_ran_enriches :
      Info.options ->
      (int * Datatypes.Valenv * Datatypes.Valenv) ->
      bool
    val ee_ran_eq : Datatypes.Valenv * Datatypes.Valenv -> bool
@


1.12
log
@Propagating options to signature matching error messages.
,
@
text
@d4 4
d66 3
@


1.11
log
@Added special maps for tyfun_id, tyname_id, strname_id
@
text
@d4 3
d55 1
d61 1
a61 1

d76 4
a79 1
    val ve_ran_enriches : int * Datatypes.Valenv * Datatypes.Valenv -> bool
@


1.10
log
@Yet more changes to get structure copying working better.
@
text
@d4 3
d78 1
a78 1
      Datatypes.Valenv * (Datatypes.Tyfun_id.Tyfun_id, Datatypes.Tyname) Datatypes.NewMap.T ->
@


1.9
log
@Added Anel's changes, and changed some stuff to do better
equality checking of valenvs etc.
@
text
@d4 4
d75 3
a77 7
      Datatypes.Valenv * (Datatypes.Tyfun_id.Tyfun_id, Datatypes.Tyname) Datatypes.NewMap.T *
      (Datatypes.Tyname -> Datatypes.Tyname) ->
      Datatypes.Valenv * (Datatypes.Tyfun_id.Tyfun_id, Datatypes.Tyname) Datatypes.NewMap.T 
  end



@


1.8
log
@Removed some redundant structure arguments and sharing
Converted where relevant to use NewMap.{forall,exists,iterate}
@
text
@d4 4
a50 2
    open Datatypes

d54 20
a73 18
    val initial_ve : Valenv
    val initial_ve_for_builtin_library : Valenv
    val initial_ee : Valenv      
    val lookup : (Ident.ValId * Valenv) -> Typescheme
    val add_to_ve : (Ident.ValId * Typescheme * Valenv) -> Valenv
    val ve_plus_ve : Valenv * Valenv -> Valenv 
    val ve_domain : Valenv -> Ident.ValId list
    val string_valenv : int * Valenv -> string 
    val valenv_eq : Valenv * Valenv -> bool 
    val dom_valenv_eq : Valenv * Valenv -> bool 
    val ve_ran_enriches : int * Valenv * Valenv -> bool
    val ee_ran_eq : Valenv * Valenv -> bool
    val empty_valenvp : Valenv -> bool
(*    val ve_copy : Valenv * (Tyname * Tyname) list * (Tyname -> Tyname) ->
      Valenv * (Tyname * Tyname) list *)
    val ve_copy : Valenv * (Tyfun_id.Tyfun_id, Tyname) NewMap.T *
      (Tyname -> Tyname) -> Valenv * (Tyfun_id.Tyfun_id, Tyname) NewMap.T 
    val tyvars : Valenv -> Ident.TyVar list
@


1.7
log
@Anel's changes to use NewMap instead of Map
@
text
@d4 3
a40 1
require "../utils/newmap";
a44 1
    structure NewMap : NEWMAP
@


1.6
log
@Changed to use btrees for renaming of tynames and strnames.
@
text
@d4 3
a50 1
    val empty_valenv : Valenv
@


1.5
log
@Anel's changes for improved structure copying
@
text
@d4 3
d35 1
d40 1
d64 2
a65 2
    val ve_copy : Valenv * (Tyfun_id.Tyfun_id * Tyname) list *
      (Tyname -> Tyname) -> Valenv * (Tyfun_id.Tyfun_id * Tyname) list 
@


1.4
log
@New pervasive library code - cut some things out of the initial type basis
@
text
@d4 3
d57 4
a60 2
    val ve_copy : Valenv * (Tyname * Tyname) list * (Tyname -> Tyname) ->
      Valenv * (Tyname * Tyname) list 
@


1.3
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	valenv.sml,v $
d42 1
@


1.2
log
@Merging in comments from Ten15 branch to main trunk
@
text
@d1 1
d4 3
d13 1
@


1.1
log
@Initial revision
@
text
@d2 7
a8 1
$Log$
d10 11
@


1.1.1.1
log
@Added comments for DRA on functions
@
text
@d2 1
a2 4
$Log:	valenv.sml,v $
Revision 1.1  91/06/07  11:47:02  colin
Initial revision

a3 11

(*

A ValEnv is a mapping from ValId's to typeschemes. It is used for
VarEnv's and ExConEnv's (as defined on p17 of the Definition). This
module defines the basic operations on ValEnv's used in the
Definition, plus one or two others to do things like convert a ValEnv
into a string (for debugging)

*)

@
