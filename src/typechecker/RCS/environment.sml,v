head	1.24;
access;
symbols
	MLW_daveb_inline_1_4_99:1.24.3
	MLWorks_21c0_1999_03_25:1.24
	MLWorks_20c1_1998_08_20:1.24
	MLWorks_20c0_1998_08_04:1.24
	MLWorks_20b2c2_1998_06_19:1.24
	MLWorks_20b2_Windows_1998_06_12:1.24
	MLWorks_20b1c1_1998_05_07:1.24
	MLWorks_20b0_1998_04_07:1.24
	MLWorks_20b0_1998_03_20:1.24
	MLWorks_20m2_1998_02_16:1.24
	MLWorks_20m1_1997_10_23:1.24
	MLWorks_11r1:1.23.8.1.1.1.1
	MLWorks_workspace_97:1.24.2
	MLWorks_dt_wizard:1.24.1
	MLWorks_11c0_1997_09_09:1.23.8.1.1.1
	MLWorks_10r3:1.23.8.1.3
	MLWorks_10r2_551:1.23.8.1.2
	MLWorks_11:1.23.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.23.8.1
	MLWorks_20m0_1997_06_20:1.24
	MLWorks_1_0_r2c2_1997_06_14:1.23.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.23.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.23.8
	MLWorks_BugFix_1997_04_24:1.23
	MLWorks_1_0_r2_Win32_1997_04_11:1.23
	MLWorks_1_0_r2_Unix_1997_04_04:1.23
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.23.6.1.1
	MLWorks_gui_1996_12_18:1.23.7
	MLWorks_1_0_Win32_1996_12_17:1.23.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.23.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.23.4.1
	MLWorks_1_0_Irix_1996_11_28:1.23.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.23.5
	MLWorks_1_0_Unix_1996_11_14:1.23.4
	MLWorks_Open_Beta2_1996_10_11:1.23.3
	MLWorks_License_dev:1.23.2
	MLWorks_1_open_beta_1996_09_13:1.23.1
	MLWorks_Open_Beta_1996_08_22:1.23
	MLWorks_Beta_1996_07_02:1.22
	MLWorks_Beta_1996_06_07:1.22
	MLWorks_Beta_1996_06_06:1.22
	MLWorks_Beta_1996_06_05:1.22
	MLWorks_Beta_1996_06_03:1.22
	MLWorks_Beta_1996_05_31:1.22
	MLWorks_Beta_1996_05_30:1.22
	ML_beta_release_12/08/94:1.18
	ML_beta_release_03/08/94:1.18
	ML_revised_beta_release_25/05/94:1.18
	ML_final_beta_release_02/03/94:1.18
	mlworks-28-01-1994:1.18
	Release:1.18
	mlworks-beta-01-09-1993:1.18
	MLWorks-1-0-4-29/01/1993:1.12
	MLWorks-1-0-3-21/12/1992:1.12
	MLWorks-1-0-2-15/12/1992:1.11
	MLWorks-1-0-1-04/12/1992:1.11
	checkpoint_17_08_92:1.9
	Ten15_release_19-11-91:1.1.1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.24
date	97.05.01.12.55.32;	author jont;	state Exp;
branches
	1.24.1.1
	1.24.2.1
	1.24.3.1;
next	1.23;

1.23
date	96.07.03.15.22.02;	author jont;	state Exp;
branches
	1.23.1.1
	1.23.2.1
	1.23.3.1
	1.23.4.1
	1.23.5.1
	1.23.6.1
	1.23.7.1
	1.23.8.1;
next	1.22;

1.22
date	95.12.04.10.55.22;	author jont;	state Exp;
branches;
next	1.21;

1.21
date	95.03.31.16.16.58;	author matthew;	state Exp;
branches;
next	1.20;

1.20
date	95.02.07.10.46.47;	author matthew;	state Exp;
branches;
next	1.19;

1.19
date	94.09.22.15.41.56;	author matthew;	state Exp;
branches;
next	1.18;

1.18
date	93.06.14.18.36.27;	author daveb;	state Exp;
branches
	1.18.1.1;
next	1.17;

1.17
date	93.03.09.13.02.09;	author matthew;	state Exp;
branches;
next	1.16;

1.16
date	93.02.19.12.45.21;	author matthew;	state Exp;
branches;
next	1.15;

1.15
date	93.02.17.15.36.01;	author jont;	state Exp;
branches;
next	1.14;

1.14
date	93.02.08.16.04.31;	author matthew;	state Exp;
branches;
next	1.13;

1.13
date	93.02.01.14.20.26;	author matthew;	state Exp;
branches;
next	1.12;

1.12
date	92.12.18.15.42.14;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	92.10.30.15.51.09;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	92.08.27.18.45.09;	author davidt;	state Exp;
branches;
next	1.9;

1.9
date	92.08.11.12.06.07;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	92.08.03.10.00.36;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	92.07.17.13.22.05;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	92.07.04.17.16.03;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	92.02.11.10.05.20;	author clive;	state Exp;
branches;
next	1.4;

1.4
date	91.11.21.16.51.21;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	91.11.20.10.30.16;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	91.11.19.12.18.51;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.11.43.33;	author colin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	91.11.19.11.12.55;	author jont;	state Exp;
branches;
next	;

1.18.1.1
date	93.06.14.18.36.27;	author jont;	state Exp;
branches;
next	;

1.23.1.1
date	96.09.13.11.41.13;	author hope;	state Exp;
branches;
next	;

1.23.2.1
date	96.10.07.16.34.15;	author hope;	state Exp;
branches;
next	;

1.23.3.1
date	96.10.17.11.53.23;	author hope;	state Exp;
branches;
next	;

1.23.4.1
date	96.11.14.13.20.58;	author hope;	state Exp;
branches
	1.23.4.1.1.1;
next	;

1.23.4.1.1.1
date	96.11.28.15.31.58;	author hope;	state Exp;
branches;
next	;

1.23.5.1
date	96.11.22.18.38.44;	author hope;	state Exp;
branches;
next	;

1.23.6.1
date	96.12.17.18.17.45;	author hope;	state Exp;
branches
	1.23.6.1.1.1;
next	;

1.23.6.1.1.1
date	97.02.24.12.12.01;	author hope;	state Exp;
branches;
next	;

1.23.7.1
date	96.12.18.10.13.01;	author hope;	state Exp;
branches;
next	;

1.23.8.1
date	97.05.12.10.51.20;	author hope;	state Exp;
branches
	1.23.8.1.1.1
	1.23.8.1.2.1
	1.23.8.1.3.1;
next	;

1.23.8.1.1.1
date	97.07.28.18.34.42;	author daveb;	state Exp;
branches
	1.23.8.1.1.1.1.1;
next	;

1.23.8.1.1.1.1.1
date	97.10.07.12.00.31;	author jkbrook;	state Exp;
branches;
next	;

1.23.8.1.2.1
date	97.09.08.17.27.34;	author daveb;	state Exp;
branches;
next	;

1.23.8.1.3.1
date	97.09.09.14.24.33;	author daveb;	state Exp;
branches;
next	;

1.24.1.1
date	97.09.10.19.43.29;	author brucem;	state Exp;
branches;
next	;

1.24.2.1
date	97.09.11.21.10.55;	author daveb;	state Exp;
branches;
next	;

1.24.3.1
date	99.04.01.18.09.10;	author daveb;	state Exp;
branches;
next	;


desc
@(see also simpletypes and basis)
> (see also simpletypes and basis)
>> 

Functions on environments (datatypes defined in datatypes.sml)
@


1.24
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@(* environment.sml the signature *)
(*
$Log: environment.sml,v $
 * Revision 1.23  1996/07/03  15:22:02  jont
 * Change check for free imperative type variables to return
 * the full type as well as the type variable
 *
 * Revision 1.22  1995/12/04  10:55:22  jont
 * Modify no_imptyvars to return the offending tyvar if it exists
 *
Revision 1.21  1995/03/31  16:16:58  matthew
Use Stamp instead of Tyname_id etc.

Revision 1.20  1995/02/07  10:46:47  matthew
Improvement to unbound long id errors

Revision 1.19  1994/09/22  15:41:56  matthew
Added environment lookup functions for vals  and tycons
/

Revision 1.18  1993/06/14  18:36:27  daveb
Removed exception environments.

Revision 1.17  1993/03/09  13:02:09  matthew
Str to Structure

Revision 1.16  1993/02/19  12:45:21  matthew
Removed z from function names
Removed str_enriches

Revision 1.15  1993/02/17  15:36:01  jont
Put compose_maps in the signature

Revision 1.14  1993/02/08  16:04:31  matthew
Removed open Datatypes, Changes for BASISTYPES signature

Revision 1.13  1993/02/01  14:20:26  matthew
Added compression functions.
These aren't currently used as they don't seem to work.

Revision 1.12  1992/12/18  15:42:14  matthew
Propagating options to signature matching error messages.
,

Revision 1.11  1992/10/30  15:51:09  jont
Added special maps for tyfun_id, tyname_id, strname_id

Revision 1.10  1992/08/27  18:45:09  davidt
Made various changes so that structure copying can be
done more efficiently.

Revision 1.9  1992/08/11  12:06:07  jont
Removed some redundant structure arguments and sharing
Converted where relevant to use NewMap.{forall,exists,iterate}

Revision 1.8  1992/08/03  10:00:36  jont
Anel's changes to use NewMap instead of Map

Revision 1.7  1992/07/17  13:22:05  jont
Changed to use btrees for renaming of tynames and strnames

Revision 1.6  1992/07/04  17:16:03  jont
Anel's changes for improved structure copying

Revision 1.5  1992/02/11  10:05:20  clive
New pervasive library code - cut some things out of the initial type basis

Revision 1.4  1991/11/21  16:51:21  jont
Added copyright message

Revision 1.3  91/11/20  10:30:16  richard
Removed the empty structure environment to the Strenv module.

Revision 1.2  91/11/19  12:18:51  jont
Merging in comments from Ten15 branch to main trunk

Revision 1.1.1.1  91/11/19  11:12:55  jont
Added comments for DRA on functions

Revision 1.1  91/06/07  11:43:33  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

(*

The type Env corresponds to the class Env of semantic objects, as
defined in the Definition, p17. An Env is a tuple of other
environments. The type is defined in datatypes.sml. The functions
acting on Env mostly deal with extracting and adding information to
the sub-environments, and are all simple. 

*)

require "../typechecker/datatypes";

signature ENVIRONMENT =
  sig
    structure Datatypes : DATATYPES

    exception LookupStrId of Datatypes.Ident.StrId

    val empty_env : Datatypes.Env 
    val empty_envp : Datatypes.Env -> bool
    val env_plus_env : Datatypes.Env * Datatypes.Env -> Datatypes.Env
    val SE_in_env : Datatypes.Strenv -> Datatypes.Env
    val TE_in_env : Datatypes.Tyenv -> Datatypes.Env
    val VE_in_env : Datatypes.Valenv -> Datatypes.Env
    val VE_TE_in_env : Datatypes.Valenv * Datatypes.Tyenv -> Datatypes.Env
    val abs : Datatypes.Tyenv * Datatypes.Env -> Datatypes.Env
    val string_environment : Datatypes.Env -> string
    val string_str : Datatypes.Structure -> string
    val no_imptyvars : Datatypes.Env -> (Datatypes.Type * Datatypes.Type) option
    val lookup_strid : Datatypes.Ident.StrId * Datatypes.Env -> Datatypes.Structure option
    val lookup_longtycon : Datatypes.Ident.LongTyCon * Datatypes.Env -> Datatypes.Tystr
    val lookup_longvalid : Datatypes.Ident.LongValId * Datatypes.Env -> Datatypes.Typescheme
    val lookup_longstrid : Datatypes.Ident.LongStrId * Datatypes.Env -> Datatypes.Structure
    val compose_maps :
      ((Datatypes.Strname Datatypes.StampMap * Datatypes.Tyname Datatypes.StampMap) *
       (Datatypes.Strname Datatypes.StampMap * Datatypes.Tyname Datatypes.StampMap)) ->
      (Datatypes.Strname Datatypes.StampMap * Datatypes.Tyname Datatypes.StampMap)
    val str_copy : 
      Datatypes.Structure * (Datatypes.Strname) Datatypes.StampMap *
      Datatypes.Tyname Datatypes.StampMap -> Datatypes.Structure
    val resolve_top_level : Datatypes.Structure -> Datatypes.Structure
    val expand_str : Datatypes.Structure -> Datatypes.Structure
    val expand_env : Datatypes.Env -> Datatypes.Env
    val initial_env : Datatypes.Env
    val initial_env_for_builtin_library : Datatypes.Env
    val struct_eq : Datatypes.Structure * Datatypes.Structure -> bool
    val compress_str : Datatypes.Structure -> Datatypes.Structure
  end


@


1.24.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.24  1997/05/01  12:55:32  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.24.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.24  1997/05/01  12:55:32  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.24.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.24  1997/05/01  12:55:32  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.23
log
@Change check for free imperative type variables to return
the full type as well as the type variable
@
text
@d4 4
d114 2
a115 2
    val no_imptyvars : Datatypes.Env -> (Datatypes.Type * Datatypes.Type) MLWorks.Option.option
    val lookup_strid : Datatypes.Ident.StrId * Datatypes.Env -> Datatypes.Structure MLWorks.Option.option
@


1.23.8.1
log
@branched from 1.23
@
text
@a3 4
 * Revision 1.23  1996/07/03  15:22:02  jont
 * Change check for free imperative type variables to return
 * the full type as well as the type variable
 *
@


1.23.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.23.8.1  1997/05/12  10:51:20  hope
 * branched from 1.23
 *
@


1.23.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.23.8.1  1997/05/12  10:51:20  hope
 * branched from 1.23
 *
@


1.23.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.23.8.1  1997/05/12  10:51:20  hope
 * branched from 1.23
 *
@


1.23.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.23.8.1.1.1  1997/07/28  18:34:42  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.23.7.1
log
@branched from 1.23
@
text
@a3 4
 * Revision 1.23  1996/07/03  15:22:02  jont
 * Change check for free imperative type variables to return
 * the full type as well as the type variable
 *
@


1.23.6.1
log
@branched from 1.23
@
text
@a3 4
 * Revision 1.23  1996/07/03  15:22:02  jont
 * Change check for free imperative type variables to return
 * the full type as well as the type variable
 *
@


1.23.6.1.1.1
log
@branched from 1.23.6.1
@
text
@a3 3
 * Revision 1.23.6.1  1996/12/17  18:17:45  hope
 * branched from 1.23
 *
@


1.23.5.1
log
@branched from 1.23
@
text
@a3 4
 * Revision 1.23  1996/07/03  15:22:02  jont
 * Change check for free imperative type variables to return
 * the full type as well as the type variable
 *
@


1.23.4.1
log
@branched from 1.23
@
text
@a3 4
 * Revision 1.23  1996/07/03  15:22:02  jont
 * Change check for free imperative type variables to return
 * the full type as well as the type variable
 *
@


1.23.4.1.1.1
log
@branched from 1.23.4.1
@
text
@a3 3
 * Revision 1.23.4.1  1996/11/14  13:20:58  hope
 * branched from 1.23
 *
@


1.23.3.1
log
@branched from 1.23
@
text
@a3 4
 * Revision 1.23  1996/07/03  15:22:02  jont
 * Change check for free imperative type variables to return
 * the full type as well as the type variable
 *
@


1.23.2.1
log
@branched from 1.23
@
text
@a3 4
 * Revision 1.23  1996/07/03  15:22:02  jont
 * Change check for free imperative type variables to return
 * the full type as well as the type variable
 *
@


1.23.1.1
log
@branched from 1.23
@
text
@a3 4
 * Revision 1.23  1996/07/03  15:22:02  jont
 * Change check for free imperative type variables to return
 * the full type as well as the type variable
 *
@


1.22
log
@Modify no_imptyvars to return the offending tyvar if it exists
@
text
@d4 3
d110 1
a110 1
    val no_imptyvars : Datatypes.Env -> Datatypes.Type MLWorks.Option.option
@


1.21
log
@Use Stamp instead of Tyname_id etc.
@
text
@d4 3
d107 1
a107 1
    val no_imptyvars : Datatypes.Env -> bool
@


1.20
log
@Improvement to unbound long id errors
@
text
@d4 3
d110 3
a112 3
      (((Datatypes.Strname) Datatypes.Strname_id.Map.T * (Datatypes.Tyname) Datatypes.Tyfun_id.Map.T) *
       ((Datatypes.Strname) Datatypes.Strname_id.Map.T * (Datatypes.Tyname) Datatypes.Tyfun_id.Map.T)) ->
      ((Datatypes.Strname) Datatypes.Strname_id.Map.T * (Datatypes.Tyname) Datatypes.Tyfun_id.Map.T)
d114 2
a115 2
      Datatypes.Structure * (Datatypes.Strname) Datatypes.Strname_id.Map.T *
      (Datatypes.Tyname) Datatypes.Tyfun_id.Map.T -> Datatypes.Structure
d118 1
@


1.19
log
@Added environment lookup functions for vals  and tycons
/
@
text
@d4 4
d89 1
a89 2
    exception Lookup_StrId
    exception Lookup_LongStrId
a97 1
    val te_of_env : Datatypes.Env -> Datatypes.Tyenv
d102 1
a102 1
    val lookup_strid : Datatypes.Ident.StrId * Datatypes.Env -> Datatypes.Structure
a105 1
    val get_env_from_str : Datatypes.Structure -> Datatypes.Env
a116 1
    val struct_fast_eq : Datatypes.Structure * Datatypes.Structure -> bool
a118 5
    val memoize_strfun :
      ((Datatypes.Structure * Datatypes.Structure -> bool) *
       ((Datatypes.Structure -> '_a) -> (Datatypes.Structure -> '_a)) *
       Datatypes.Structure) -> '_a

@


1.18
log
@Removed exception environments.
@
text
@d4 3
a99 1
    val find_env : Datatypes.Ident.StrId * Datatypes.Env -> Datatypes.Env
d101 2
@


1.18.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.18  1993/06/14  18:36:27  daveb
Removed exception environments.

@


1.17
log
@Str to Structure
@
text
@d4 3
a90 1
    val EE_in_env : Datatypes.Valenv -> Datatypes.Env
a91 1
    val VE_EE_in_env : Datatypes.Valenv * Datatypes.Valenv -> Datatypes.Env
@


1.16
log
@Removed z from function names
Removed str_enriches
@
text
@d4 4
a73 1
require "../main/info";
a77 3
    structure Info : INFO

    sharing Info.Location = Datatypes.Ident.Location
d94 1
a94 1
    val string_str : Datatypes.Str -> string
d97 3
a99 3
    val lookup_strid : Datatypes.Ident.StrId * Datatypes.Env -> Datatypes.Str
    val lookup_longstrid : Datatypes.Ident.LongStrId * Datatypes.Env -> Datatypes.Str
    val get_env_from_str : Datatypes.Str -> Datatypes.Env
d105 4
a108 4
      Datatypes.Str * (Datatypes.Strname) Datatypes.Strname_id.Map.T *
      (Datatypes.Tyname) Datatypes.Tyfun_id.Map.T -> Datatypes.Str
    val resolve_top_level : Datatypes.Str -> Datatypes.Str
    val expand_str : Datatypes.Str -> Datatypes.Str
d111 3
a113 3
    val struct_fast_eq : Datatypes.Str * Datatypes.Str -> bool
    val struct_eq : Datatypes.Str * Datatypes.Str -> bool
    val compress_str : Datatypes.Str -> Datatypes.Str
d115 3
a117 3
      ((Datatypes.Str * Datatypes.Str -> bool) *
       ((Datatypes.Str -> '_a) -> (Datatypes.Str -> '_a)) *
       Datatypes.Str) -> '_a
@


1.15
log
@Put compose_maps in the signature
@
text
@d4 3
a80 1
    exception EnrichError of string
a98 1
    val str_enriches : Info.options -> int * Datatypes.Str * Datatypes.Str -> bool
d111 4
a114 4
    val zstruct_fast_eq : Datatypes.Str * Datatypes.Str -> bool
    val zstruct_eq : Datatypes.Str * Datatypes.Str -> bool
    val zcompress_str : Datatypes.Str -> Datatypes.Str
    val zmemoize_strfun :
@


1.14
log
@Removed open Datatypes, Changes for BASISTYPES signature
@
text
@d4 3
d99 4
@


1.13
log
@Added compression functions.
These aren't currently used as they don't seem to work.
@
text
@d4 4
a72 2
    open Datatypes

d77 19
a95 19
    val empty_env : Env 
    val empty_envp : Env -> bool
    val env_plus_env : Env * Env -> Env
    val SE_in_env : Strenv -> Env
    val TE_in_env : Tyenv -> Env
    val VE_in_env : Valenv -> Env
    val EE_in_env : Valenv -> Env
    val VE_TE_in_env : Valenv * Tyenv -> Env
    val VE_EE_in_env : Valenv * Valenv -> Env
    val te_of_env : Env -> Tyenv
    val abs : Tyenv * Env -> Env
    val string_environment : Env -> string
    val string_str : Str -> string
    val no_imptyvars : Env -> bool
    val find_env : Ident.StrId * Env -> Env
    val lookup_strid : Ident.StrId * Env -> Str
    val lookup_longstrid : Ident.LongStrId * Env -> Str
    val str_enriches : Info.options -> int * Str * Str -> bool
    val get_env_from_str : Str -> Env
d97 9
a105 9
      Str * (Strname) Strname_id.Map.T *
      (Tyname) Tyfun_id.Map.T -> Str
    val resolve_top_level : Str -> Str
    val expand_str : Str -> Str
    val initial_env : Env
    val initial_env_for_builtin_library : Env
    val zstruct_fast_eq : Str * Str -> bool
    val zstruct_eq : Str * Str -> bool
    val zcompress_str : Str -> Str
d107 4
a110 1
      ((Str * Str -> bool) * ((Str -> '_a) -> (Str -> '_a)) * Str) -> '_a
@


1.12
log
@Propagating options to signature matching error messages.
,
@
text
@d4 4
d67 2
d97 2
d101 5
@


1.11
log
@Added special maps for tyfun_id, tyname_id, strname_id
@
text
@d4 3
d56 1
d61 1
d86 1
a86 1
    val str_enriches : int * Str * Str -> bool
@


1.10
log
@Made various changes so that structure copying can be
done more efficiently.
@
text
@d4 4
d84 2
a85 2
      Str * (Strname_id.Strname_id, Strname) NewMap.T *
      (Tyfun_id.Tyfun_id, Tyname) NewMap.T -> Str
@


1.9
log
@Removed some redundant structure arguments and sharing
Converted where relevant to use NewMap.{forall,exists,iterate}
@
text
@d4 4
d81 1
a81 4
      (Tyfun_id.Tyfun_id, Tyname) NewMap.T * (Strname -> Strname) *
      (Tyname -> Tyname) ->
      Str * (Strname_id.Strname_id, Strname) NewMap.T *
      (Tyfun_id.Tyfun_id, Tyname) NewMap.T
a83 1
  
@


1.8
log
@Anel's changes to use NewMap instead of Map
@
text
@d4 3
a43 2

require "../utils/newmap";
a47 1
    structure NewMap : NEWMAP
a80 7
(*
    val str_copy_for_sigma :
      Str * (Strname_id.Strname_id, Strname) NewMap.T *
      (Tyfun_id.Tyfun_id, Tyname) NewMap.T ->
      Str * (Strname_id.Strname_id, Strname) NewMap.T *
      (Tyfun_id.Tyfun_id, Tyname) NewMap.T
*)
@


1.7
log
@Changed to use btrees for renaming of tynames and strnames
@
text
@d4 3
a53 1
    exception Lookup_StrId_in_SE
d68 1
a72 5
    val lookup_strid_in_SE : Ident.StrId * Strenv -> Str
    val strenv_plus_strenv : Strenv * Strenv -> Strenv    
    val add_to_se : Ident.StrId * Str * Strenv -> Strenv
    val member_of_se_domain : Ident.StrId * Strenv -> bool
    val string_str : Str -> string
a74 4
(*    val str_copy : 
      Str * (Strname * Strname) list * (Tyname * Tyname) list * 
      (Strname -> Strname) * (Tyname -> Tyname) -> 
      Str * (Strname * Strname) list * (Tyname * Tyname) list*)
@


1.6
log
@Anel's changes for improved structure copying
@
text
@d4 3
d39 1
d44 1
d82 12
a93 5
      Str * (Strname_id.Strname_id * Strname) list * 
      (Tyfun_id.Tyfun_id * Tyname) list * (Strname -> Strname) *
      (Tyname -> Tyname) -> 
      Str * (Strname_id.Strname_id * Strname) list *
      (Tyfun_id.Tyfun_id * Tyname) list
@


1.5
log
@New pervasive library code - cut some things out of the initial type basis
@
text
@d4 3
d72 1
a72 1
    val str_copy : 
d75 7
a81 1
      Str * (Strname * Strname) list * (Tyname * Tyname) list
@


1.4
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	environment.sml,v $
d74 2
a75 1
      
@


1.3
log
@Removed the empty structure environment to the Strenv module.
@
text
@d1 1
d4 3
d16 1
@


1.2
log
@Merging in comments from Ten15 branch to main trunk
@
text
@d3 3
a54 1
    val empty_strenv : Strenv
@


1.1
log
@Initial revision
@
text
@d2 7
a8 1
$Log$
d10 12
@


1.1.1.1
log
@Added comments for DRA on functions
@
text
@d2 1
a2 4
$Log:	environment.sml,v $
Revision 1.1  91/06/07  11:43:33  colin
Initial revision

a3 12

(*

The type Env corresponds to the class Env of semantic objects, as
defined in the Definition, p17. An Env is a tuple of other
environments. The type is defined in datatypes.sml. The functions
acting on Env mostly deal with extracting and adding information to
the sub-environments, and are all simple. 

*)


@
