head	1.2;
access;
symbols
	ML_beta_release_12/08/94:1.2
	ML_beta_release_03/08/94:1.2
	ML_revised_beta_release_25/05/94:1.2
	ML_final_beta_release_02/03/94:1.2
	mlworks-28-01-1994:1.2
	Release:1.2
	mlworks-beta-01-09-1993:1.2
	MLWorks-1-0-4-29/01/1993:1.2
	MLWorks-1-0-3-21/12/1992:1.2
	MLWorks-1-0-2-15/12/1992:1.2
	MLWorks-1-0-1-04/12/1992:1.2
	checkpoint_17_08_92:1.2;
locks; strict;
comment	@ * @;


1.2
date	91.10.22.14.18.34;	author davidt;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	91.09.09.09.43.08;	author davida;	state Exp;
branches;
next	;

1.2.1.1
date	91.10.22.14.18.34;	author jont;	state Exp;
branches;
next	;


desc
@Lifting sub-expressions.
@


1.2
log
@Replaced impossible exception with Crash.impossible calls.
@
text
@
(*
 * Lambda-Calculus Optimisation: optimise_lift
 * Lifting expressions to higher scopes
 *
 * Copyright (c) 1991 Harlequin Ltd.
 *)

require "lambdatypes";

signature OPTIMISE_LIFT =
  sig
    structure LT : LAMBDATYPES

    val lift_expressions :  LT.LambdaInfo -> LT.LambdaExp -> LT.LambdaExp

    val show_debug_info : bool ref
  end;
@


1.2.1.1
log
@Fork for bug fixing
@
text
@@


1.1
log
@Initial revision
@
text
@d2 6
a7 1
   (*  Lambda-Calculus Optimisation:  optimise_lift  *)
a8 6
       (*  Lifting expressions to higher scopes  *)


(*  Copyright (c) 1991 Harlequin Ltd. *)


a10 1

d12 2
a13 2
   sig
      structure LT : LAMBDATYPES
d15 1
a15 1
      val lift_expressions :  LT.LambdaInfo -> LT.LambdaExp -> LT.LambdaExp
d17 2
a18 3
      exception impossible of string
      val show_debug_info : bool ref
   end
@
