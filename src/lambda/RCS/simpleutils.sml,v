head	1.7;
access;
symbols
	MLW_daveb_inline_1_4_99:1.7.3
	MLWorks_21c0_1999_03_25:1.7
	MLWorks_20c1_1998_08_20:1.7
	MLWorks_20c0_1998_08_04:1.7
	MLWorks_20b2c2_1998_06_19:1.7
	MLWorks_20b2_Windows_1998_06_12:1.7
	MLWorks_20b1c1_1998_05_07:1.7
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.7
	MLWorks_20m1_1997_10_23:1.7
	MLWorks_11r1:1.6.1.1.1.1.1
	MLWorks_workspace_97:1.7.2
	MLWorks_dt_wizard:1.7.1
	MLWorks_11c0_1997_09_09:1.6.1.1.1.1
	MLWorks_10r3:1.6.1.1.3
	MLWorks_10r2_551:1.6.1.1.2
	MLWorks_11:1.6.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.1.1
	MLWorks_20m0_1997_06_20:1.7
	MLWorks_1_0_r2c2_1997_06_14:1.6.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.1
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.6.1.1
	MLWorks_gui_1996_12_18:1.4.7
	MLWorks_1_0_Win32_1996_12_17:1.4.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.4.1
	MLWorks_1_0_Irix_1996_11_28:1.4.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.5
	MLWorks_1_0_Unix_1996_11_14:1.4.4
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.4
	MLWorks_Beta_1996_06_07:1.4
	MLWorks_Beta_1996_06_06:1.4
	MLWorks_Beta_1996_06_05:1.4
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4;
locks; strict;
comment	@ * @;


1.7
date	97.05.09.11.15.54;	author matthew;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1;
next	1.6;

1.6
date	97.01.06.16.37.41;	author jont;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	96.12.02.12.11.03;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	95.08.11.12.14.46;	author daveb;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1;
next	1.3;

1.3
date	94.10.12.09.32.03;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	94.10.06.15.10.01;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	94.09.23.14.53.58;	author matthew;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.17.08;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.06.55;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.25.11;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.14.12.50.09;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	96.11.28.15.01.19;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.22.18.09.37;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.17.17.48.16;	author hope;	state Exp;
branches
	1.4.6.1.1.1;
next	;

1.4.6.1.1.1
date	97.02.24.11.38.08;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.18.09.42.17;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	97.05.12.10.34.47;	author hope;	state Exp;
branches
	1.6.1.1.1.1
	1.6.1.1.2.1
	1.6.1.1.3.1;
next	;

1.6.1.1.1.1
date	97.07.28.18.20.07;	author daveb;	state Exp;
branches
	1.6.1.1.1.1.1.1;
next	;

1.6.1.1.1.1.1.1
date	97.10.07.11.45.15;	author jkbrook;	state Exp;
branches;
next	;

1.6.1.1.2.1
date	97.09.08.17.13.40;	author daveb;	state Exp;
branches;
next	;

1.6.1.1.3.1
date	97.09.09.14.09.21;	author daveb;	state Exp;
branches;
next	;

1.7.1.1
date	97.09.10.19.24.58;	author brucem;	state Exp;
branches;
next	;

1.7.2.1
date	97.09.11.20.55.29;	author daveb;	state Exp;
branches;
next	;

1.7.3.1
date	99.04.01.17.57.11;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.7
log
@Adding substitution functions
@
text
@(*
 * $Log: simpleutils.sml,v $
 * Revision 1.6  1997/01/06  16:37:41  jont
 * [Bug #1633]
 * Add copyright message
 *
 * Revision 1.5  1996/12/02  12:11:03  matthew
 * Simplifications and rationalizations
 *
 * Revision 1.4  1995/08/11  12:14:46  daveb
 * Replaced LambdaTypes.Option with MLWorks.Option.
 *
 * Revision 1.3  1994/10/12  09:32:03  matthew
 * Changed simpletypes unit name
 *
 * Copyright (c) 1997 Harlequin Ltd.
 *)

require "lambdatypes";

signature SIMPLEUTILS =
  sig
    structure LambdaTypes : LAMBDATYPES
    val occurs : LambdaTypes.LVar * LambdaTypes.LambdaExp -> bool
    val freevars : LambdaTypes.LambdaExp * LambdaTypes.LVar list -> LambdaTypes.LVar list
    val vars_of : LambdaTypes.LambdaExp -> LambdaTypes.LVar list
    val linearize : LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp
    val is_atomic : LambdaTypes.LambdaExp -> bool
    val is_simple : LambdaTypes.LambdaExp -> bool
    val switchable_exp : LambdaTypes.LambdaExp -> bool
    val safe : LambdaTypes.LambdaExp -> bool
    val safe_elim : LambdaTypes.LambdaExp -> bool
    val safe_cse : LambdaTypes.LambdaExp -> bool
    val get_arity : LambdaTypes.Primitive -> int
    val insert_as_needed : 
      (LambdaTypes.LVar * 
       LambdaTypes.VarInfo ref option * 
       LambdaTypes.LambdaExp) list 
      * LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp
    val schedule : LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp
    val size_less : LambdaTypes.LambdaExp * int * bool -> bool
    val exp_eq : LambdaTypes.LambdaExp * LambdaTypes.LambdaExp -> bool
    val wrap_lets : 
      LambdaTypes.LambdaExp * 
      (LambdaTypes.LVar * LambdaTypes.VarInfo ref option * LambdaTypes.LambdaExp) list -> 
      LambdaTypes.LambdaExp
    val unwrap_lets : 
      LambdaTypes.LambdaExp -> 
      (LambdaTypes.LVar * LambdaTypes.VarInfo ref option * LambdaTypes.LambdaExp) list * 
      LambdaTypes.LambdaExp

    val subst : 
      (LambdaTypes.LVar -> LambdaTypes.LambdaExp) * LambdaTypes.LambdaExp ->
      LambdaTypes.LambdaExp

    val function_lvars : LambdaTypes.LambdaExp -> LambdaTypes.LVar list
    val is_fp_builtin : LambdaTypes.Primitive -> bool
  end
@


1.7.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a2 3
 * Revision 1.7  1997/05/09  11:15:54  matthew
 * Adding substitution functions
 *
@


1.7.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a2 3
 * Revision 1.7  1997/05/09  11:15:54  matthew
 * Adding substitution functions
 *
@


1.7.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a2 3
 * Revision 1.7  1997/05/09  11:15:54  matthew
 * Adding substitution functions
 *
@


1.6
log
@[Bug #1633]
Add copyright message
@
text
@d3 4
d50 4
@


1.6.1.1
log
@branched from 1.6
@
text
@a2 4
 * Revision 1.6  1997/01/06  16:37:41  jont
 * [Bug #1633]
 * Add copyright message
 *
@


1.6.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a2 3
 * Revision 1.6.1.1  1997/05/12  10:34:47  hope
 * branched from 1.6
 *
@


1.6.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a2 3
 * Revision 1.6.1.1  1997/05/12  10:34:47  hope
 * branched from 1.6
 *
@


1.6.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a2 3
 * Revision 1.6.1.1  1997/05/12  10:34:47  hope
 * branched from 1.6
 *
@


1.6.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a2 3
 * Revision 1.6.1.1.1.1  1997/07/28  18:20:07  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.5
log
@Simplifications and rationalizations
@
text
@d2 4
a5 1
$Log: simpleutils.sml,v $
d9 5
a13 4
# Revision 1.3  1994/10/12  09:32:03  matthew
# Changed simpletypes unit name
#
*)
@


1.4
log
@Replaced LambdaTypes.Option with MLWorks.Option.
@
text
@d3 3
d11 1
a11 1
require "simplelambdatypes";
d15 12
a26 12
    structure SimpleTypes : SIMPLETYPES
    val occurs : SimpleTypes.var * SimpleTypes.exp -> bool
    val freevars : SimpleTypes.exp * SimpleTypes.var list -> SimpleTypes.var list
    val vars_of : SimpleTypes.exp -> SimpleTypes.var list
    val linearize : SimpleTypes.exp -> SimpleTypes.exp
    val is_atomic : SimpleTypes.exp -> bool
    val is_simple : SimpleTypes.exp -> bool
    val switchable_expr : SimpleTypes.exp -> bool
    val safe : SimpleTypes.exp -> bool
    val safe_elim : SimpleTypes.exp -> bool
    val safe_cse : SimpleTypes.exp -> bool
    val get_arity : SimpleTypes.LambdaTypes.Primitive -> int
d28 18
a45 5
      (SimpleTypes.var * 
       SimpleTypes.LambdaTypes.VarInfo ref MLWorks.Option.option * 
       SimpleTypes.exp) list 
      * SimpleTypes.exp -> SimpleTypes.exp
    val schedule : SimpleTypes.exp -> SimpleTypes.exp
@


1.4.7.1
log
@branched from 1.4
@
text
@a2 3
 * Revision 1.4  1995/08/11  12:14:46  daveb
 * Replaced LambdaTypes.Option with MLWorks.Option.
 *
@


1.4.6.1
log
@branched from 1.4
@
text
@a2 3
 * Revision 1.4  1995/08/11  12:14:46  daveb
 * Replaced LambdaTypes.Option with MLWorks.Option.
 *
@


1.4.6.1.1.1
log
@branched from 1.4.6.1
@
text
@a2 3
 * Revision 1.4.6.1  1996/12/17  17:48:16  hope
 * branched from 1.4
 *
@


1.4.5.1
log
@branched from 1.4
@
text
@a2 3
 * Revision 1.4  1995/08/11  12:14:46  daveb
 * Replaced LambdaTypes.Option with MLWorks.Option.
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a2 3
 * Revision 1.4  1995/08/11  12:14:46  daveb
 * Replaced LambdaTypes.Option with MLWorks.Option.
 *
@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@a2 3
 * Revision 1.4.4.1  1996/11/14  12:50:09  hope
 * branched from 1.4
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a2 3
 * Revision 1.4  1995/08/11  12:14:46  daveb
 * Replaced LambdaTypes.Option with MLWorks.Option.
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a2 3
 * Revision 1.4  1995/08/11  12:14:46  daveb
 * Replaced LambdaTypes.Option with MLWorks.Option.
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a2 3
 * Revision 1.4  1995/08/11  12:14:46  daveb
 * Replaced LambdaTypes.Option with MLWorks.Option.
 *
@


1.3
log
@Changed simpletypes unit name
@
text
@d3 3
d26 1
a26 1
       SimpleTypes.LambdaTypes.VarInfo ref SimpleTypes.LambdaTypes.Option.opt * 
@


1.2
log
@Lambdatypes changes
@
text
@d1 5
a5 1
require "simpletypes";
@


1.1
log
@new file
@
text
@d12 1
d16 6
a21 2
    val get_arity : SimpleTypes.Pervasives.pervasive -> int
    val insert_as_needed : (SimpleTypes.var * SimpleTypes.exp) list * SimpleTypes.exp -> SimpleTypes.exp
@
