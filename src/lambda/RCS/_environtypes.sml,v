head	1.17;
access;
symbols
	MLW_daveb_inline_1_4_99:1.17.4
	MLWorks_21c0_1999_03_25:1.17
	MLWorks_20c1_1998_08_20:1.17
	MLWorks_20c0_1998_08_04:1.17
	MLWorks_20b2c2_1998_06_19:1.17
	MLWorks_20b2_Windows_1998_06_12:1.17
	MLWorks_20b1c1_1998_05_07:1.17
	MLWorks_20b0_1998_04_07:1.17
	MLWorks_20b0_1998_03_20:1.17
	MLWorks_20m2_1998_02_16:1.17
	MLWorks_20m1_1997_10_23:1.17
	MLWorks_11r1:1.17.1.1.1.1.1
	MLWorks_workspace_97:1.17.3
	MLWorks_dt_wizard:1.17.2
	MLWorks_11c0_1997_09_09:1.17.1.1.1.1
	MLWorks_10r3:1.17.1.1.3
	MLWorks_10r2_551:1.17.1.1.2
	MLWorks_11:1.17.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.17.1.1
	MLWorks_20m0_1997_06_20:1.17
	MLWorks_1_0_r2c2_1997_06_14:1.17.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.17.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.17.1
	MLWorks_BugFix_1997_04_24:1.17
	MLWorks_1_0_r2_Win32_1997_04_11:1.17
	MLWorks_1_0_r2_Unix_1997_04_04:1.17
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.16.6.1.1
	MLWorks_gui_1996_12_18:1.16.7
	MLWorks_1_0_Win32_1996_12_17:1.16.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.16.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.16.4.1
	MLWorks_1_0_Irix_1996_11_28:1.16.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.16.5
	MLWorks_1_0_Unix_1996_11_14:1.16.4
	MLWorks_Open_Beta2_1996_10_11:1.16.3
	MLWorks_License_dev:1.16.2
	MLWorks_1_open_beta_1996_09_13:1.16.1
	MLWorks_Open_Beta_1996_08_22:1.16
	MLWorks_Beta_1996_07_02:1.16
	MLWorks_Beta_1996_06_07:1.16
	MLWorks_Beta_1996_06_06:1.16
	MLWorks_Beta_1996_06_05:1.16
	MLWorks_Beta_1996_06_03:1.16
	MLWorks_Beta_1996_05_31:1.16
	MLWorks_Beta_1996_05_30:1.16
	ML_beta_release_12/08/94:1.13
	ML_beta_release_03/08/94:1.13
	ML_revised_beta_release_25/05/94:1.13
	ML_final_beta_release_02/03/94:1.13
	mlworks-28-01-1994:1.12
	Release:1.11
	mlworks-beta-01-09-1993:1.11
	MLWorks-1-0-4-29/01/1993:1.8
	MLWorks-1-0-3-21/12/1992:1.8
	MLWorks-1-0-2-15/12/1992:1.8
	MLWorks-1-0-1-04/12/1992:1.8
	checkpoint_17_08_92:1.7
	Ten15_release_21-08-91:1.4
	Ten15_release_19-08-91:1.4
	ten15_release:1.4;
locks; strict;
comment	@ * @;


1.17
date	96.11.22.12.03.33;	author matthew;	state Exp;
branches
	1.17.1.1
	1.17.2.1
	1.17.3.1
	1.17.4.1;
next	1.16;

1.16
date	96.02.23.16.58.41;	author jont;	state Exp;
branches
	1.16.1.1
	1.16.2.1
	1.16.3.1
	1.16.4.1
	1.16.5.1
	1.16.6.1
	1.16.7.1;
next	1.15;

1.15
date	95.12.22.17.02.56;	author jont;	state Exp;
branches;
next	1.14;

1.14
date	95.01.19.12.34.34;	author matthew;	state Exp;
branches;
next	1.13;

1.13
date	94.02.21.18.44.01;	author nosa;	state Exp;
branches;
next	1.12;

1.12
date	94.01.20.10.21.04;	author nosa;	state Exp;
branches;
next	1.11;

1.11
date	93.07.05.12.41.41;	author daveb;	state Exp;
branches
	1.11.1.1;
next	1.10;

1.10
date	93.03.24.12.22.54;	author nosa;	state Exp;
branches;
next	1.9;

1.9
date	93.01.26.09.44.31;	author matthew;	state Exp;
branches;
next	1.8;

1.8
date	92.08.26.11.56.25;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	92.06.15.16.44.45;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	92.06.10.13.19.46;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	91.10.08.18.01.41;	author davidt;	state Exp;
branches;
next	1.4;

1.4
date	91.07.12.16.12.13;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	91.07.11.09.08.23;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.07.08.17.52.21;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.11.11.01.00;	author jont;	state Exp;
branches;
next	;

1.11.1.1
date	93.07.05.12.41.41;	author jont;	state Exp;
branches;
next	;

1.16.1.1
date	96.09.13.11.17.05;	author hope;	state Exp;
branches;
next	;

1.16.2.1
date	96.10.07.16.06.53;	author hope;	state Exp;
branches;
next	;

1.16.3.1
date	96.10.17.11.25.09;	author hope;	state Exp;
branches;
next	;

1.16.4.1
date	96.11.14.12.50.06;	author hope;	state Exp;
branches
	1.16.4.1.1.1;
next	;

1.16.4.1.1.1
date	96.11.28.15.01.15;	author hope;	state Exp;
branches;
next	;

1.16.5.1
date	96.11.22.18.09.35;	author hope;	state Exp;
branches;
next	;

1.16.6.1
date	96.12.17.17.48.13;	author hope;	state Exp;
branches
	1.16.6.1.1.1;
next	;

1.16.6.1.1.1
date	97.02.24.11.38.05;	author hope;	state Exp;
branches;
next	;

1.16.7.1
date	96.12.18.09.42.15;	author hope;	state Exp;
branches;
next	;

1.17.1.1
date	97.05.12.10.34.42;	author hope;	state Exp;
branches
	1.17.1.1.1.1
	1.17.1.1.2.1
	1.17.1.1.3.1;
next	;

1.17.1.1.1.1
date	97.07.28.18.20.01;	author daveb;	state Exp;
branches
	1.17.1.1.1.1.1.1;
next	;

1.17.1.1.1.1.1.1
date	97.10.07.11.45.09;	author jkbrook;	state Exp;
branches;
next	;

1.17.1.1.2.1
date	97.09.08.17.13.35;	author daveb;	state Exp;
branches;
next	;

1.17.1.1.3.1
date	97.09.09.14.09.15;	author daveb;	state Exp;
branches;
next	;

1.17.2.1
date	97.09.10.19.24.50;	author brucem;	state Exp;
branches;
next	;

1.17.3.1
date	97.09.11.20.55.24;	author daveb;	state Exp;
branches;
next	;

1.17.4.1
date	99.04.01.17.57.07;	author daveb;	state Exp;
branches;
next	;


desc
@Split out the types from the rest
@


1.17
log
@Removing reference to MLWorks.Option
@
text
@(* _environtypes.sml the functor *)
(*
$Log: _environtypes.sml,v $
 * Revision 1.16  1996/02/23  16:58:41  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
 * Revision 1.15  1995/12/22  17:02:56  jont
 * Remove references to option structure
 * in favour of MLWorks.Option
 *
Revision 1.14  1995/01/19  12:34:34  matthew
Tidying up

Revision 1.13  1994/02/21  18:44:01  nosa
Debugger environments for Modules Debugger.

Revision 1.12  1994/01/20  10:21:04  nosa
Paths in LAMBs for dynamic pattern-redundancy reporting

Revision 1.11  1993/07/05  12:41:41  daveb
Removed exception environments and interfaces.

Revision 1.10  1993/03/24  12:22:54  nosa
Matthew's Signature revisions

Revision 1.9  1993/01/26  09:44:31  matthew
Rationalised substructures.

Revision 1.8  1992/08/26  11:56:25  jont
Removed some redundant structures and sharing

Revision 1.7  1992/06/15  16:44:45  jont
Added EXTERNAL constructor to COMP

Revision 1.6  1992/06/10  13:19:46  jont
Changed to use newmap

Revision 1.5  1991/10/08  18:01:41  davidt
Changed the type comp so that record selection now retains the total
size of the record as well as just the index

Revision 1.4  91/07/12  16:12:13  jont
Added exception environemtn to env

Revision 1.3  91/07/11  09:08:23  jont
Changed Fun_Env to use comp

Revision 1.2  91/07/08  17:52:21  jont
Added functor environment

Revision 1.1  91/06/11  11:01:00  jont
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

require "../utils/map";
require "lambdatypes";
require "environtypes";

functor EnvironTypes
  (structure LambdaTypes: LAMBDATYPES
   structure NewMap: MAP
  ) : ENVIRONTYPES =
struct
  structure Ident = LambdaTypes.Ident
  structure LambdaTypes = LambdaTypes
  structure NewMap = NewMap

  datatype ValSpec =
    STRIDSPEC of LambdaTypes.Ident.LongStrId |
    VARSPEC of LambdaTypes.LVar |
    NOSPEC

  datatype comp =
    EXTERNAL | (* Place holder to say translate otherwise *)
    LAMB of LambdaTypes.LVar * ValSpec |
    FIELD of {index : int, size : int} | (* Field selectors in structures *)
    PRIM of LambdaTypes.Primitive (* Primitive functions, numbers on the wall *)

  datatype Env =
    ENV of (Ident.ValId, comp) NewMap.map *
           (Ident.StrId, Env * comp * bool) NewMap.map
    
  datatype Fun_Env =
    FUN_ENV of (Ident.FunId, comp * Env * bool) NewMap.map

  datatype Top_Env = TOP_ENV of Env * Fun_Env
  
  datatype Foo = LVARFOO of LambdaTypes.LVar | INTFOO of int

  datatype DebuggerExp =
    NULLEXP |
    LAMBDAEXP of {index : int, size : int} list * (LambdaTypes.LVar * LambdaTypes.LVar)
    * LambdaTypes.Tyfun ref option |
    LAMBDAEXP' of {index : int, size : int} list * Foo ref * LambdaTypes.Tyfun ref option |
    INT of int

  datatype DebuggerEnv = 
    DENV of (LambdaTypes.Ident.ValId, DebuggerExp) NewMap.map *
    (LambdaTypes.Ident.StrId, DebuggerStrExp) NewMap.map

  and DebuggerStrExp =
    LAMBDASTREXP of {index : int, size : int} list 
                     * (LambdaTypes.LVar * LambdaTypes.LVar) * LambdaTypes.Structure |
    LAMBDASTREXP' of {index : int, size : int} list * Foo ref * LambdaTypes.Structure |
    DENVEXP of DebuggerEnv


end
@


1.17.4.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.17  1996/11/22  12:03:33  matthew
 * Removing reference to MLWorks.Option
 *
@


1.17.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.17  1996/11/22  12:03:33  matthew
 * Removing reference to MLWorks.Option
 *
@


1.17.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.17  1996/11/22  12:03:33  matthew
 * Removing reference to MLWorks.Option
 *
@


1.17.1.1
log
@branched from 1.17
@
text
@a3 3
 * Revision 1.17  1996/11/22  12:03:33  matthew
 * Removing reference to MLWorks.Option
 *
@


1.17.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.17.1.1  1997/05/12  10:34:42  hope
 * branched from 1.17
 *
@


1.17.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.17.1.1  1997/05/12  10:34:42  hope
 * branched from 1.17
 *
@


1.17.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.17.1.1  1997/05/12  10:34:42  hope
 * branched from 1.17
 *
@


1.17.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.17.1.1.1.1  1997/07/28  18:20:01  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.16
log
@newmap becomes map, NEWMAP becomes MAP
@
text
@d4 3
d95 2
a96 2
    * LambdaTypes.Tyfun ref MLWorks.Option.option |
    LAMBDAEXP' of {index : int, size : int} list * Foo ref * LambdaTypes.Tyfun ref MLWorks.Option.option |
@


1.16.7.1
log
@branched from 1.16
@
text
@a3 3
 * Revision 1.16  1996/02/23  16:58:41  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.16.6.1
log
@branched from 1.16
@
text
@a3 3
 * Revision 1.16  1996/02/23  16:58:41  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.16.6.1.1.1
log
@branched from 1.16.6.1
@
text
@a3 3
 * Revision 1.16.6.1  1996/12/17  17:48:13  hope
 * branched from 1.16
 *
@


1.16.5.1
log
@branched from 1.16
@
text
@a3 3
 * Revision 1.16  1996/02/23  16:58:41  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.16.4.1
log
@branched from 1.16
@
text
@a3 3
 * Revision 1.16  1996/02/23  16:58:41  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.16.4.1.1.1
log
@branched from 1.16.4.1
@
text
@a3 3
 * Revision 1.16.4.1  1996/11/14  12:50:06  hope
 * branched from 1.16
 *
@


1.16.3.1
log
@branched from 1.16
@
text
@a3 3
 * Revision 1.16  1996/02/23  16:58:41  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.16.2.1
log
@branched from 1.16
@
text
@a3 3
 * Revision 1.16  1996/02/23  16:58:41  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.16.1.1
log
@branched from 1.16
@
text
@a3 3
 * Revision 1.16  1996/02/23  16:58:41  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.15
log
@Remove references to option structure
in favour of MLWorks.Option
@
text
@d4 4
d54 1
a54 1
require "../utils/newmap";
d60 1
a60 1
   structure NewMap: NEWMAP
d79 2
a80 2
    ENV of (Ident.ValId, comp) NewMap.T *
           (Ident.StrId, Env * comp * bool) NewMap.T
d83 1
a83 1
    FUN_ENV of (Ident.FunId, comp * Env * bool) NewMap.T
d97 2
a98 2
    DENV of (LambdaTypes.Ident.ValId, DebuggerExp) NewMap.T *
    (LambdaTypes.Ident.StrId, DebuggerStrExp) NewMap.T
@


1.14
log
@Tidying up
@
text
@d4 3
d88 2
a89 2
    * LambdaTypes.Tyfun ref LambdaTypes.Option.opt |
    LAMBDAEXP' of {index : int, size : int} list * Foo ref * LambdaTypes.Tyfun ref LambdaTypes.Option.opt |
@


1.13
log
@Debugger environments for Modules Debugger.
@
text
@d4 3
d60 5
d67 1
a67 1
    LAMB of LambdaTypes.LVar * (Ident.LongStrId,LambdaTypes.LVar) LambdaTypes.Option.option LambdaTypes.Option.opt |    (* Lambda variables names *)
d80 2
d86 1
a86 2
    LAMBDAEXP' of {index : int, size : int} list * (LambdaTypes.LVar,int) LambdaTypes.Option.option ref
    * LambdaTypes.Tyfun ref LambdaTypes.Option.opt |
d96 2
a97 2
    LAMBDASTREXP' of {index : int, size : int} list * (LambdaTypes.LVar,int) LambdaTypes.Option.option ref * LambdaTypes.Structure |
    DENV' of DebuggerEnv
@


1.12
log
@Paths in LAMBs for dynamic pattern-redundancy reporting
@
text
@d4 3
d65 1
a65 1
           (Ident.StrId, Env * comp) NewMap.T
d68 1
a68 1
    FUN_ENV of (Ident.FunId, comp * Env) NewMap.T
d71 19
@


1.11
log
@Removed exception environments and interfaces.
@
text
@d4 3
d56 1
a56 1
    LAMB of LambdaTypes.LVar |    (* Lambda variables names *)
@


1.11.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.11  1993/07/05  12:41:41  daveb
Removed exception environments and interfaces.

@


1.10
log
@Matthew's Signature revisions
@
text
@d4 3
d38 1
a38 1
require "../typechecker/interface";
d42 4
a45 3
functor EnvironTypes(structure Interface : INTERFACE
                     structure LambdaTypes: LAMBDATYPES
) : ENVIRONTYPES =
d49 1
a49 3
  structure NewMap = Interface.NewMap

  type Interface = Interface.Int
d58 2
a59 3
    ENV of (Ident.ValId, comp) NewMap.T * (* Value environment *)
    (Ident.ValId, comp) NewMap.T * (* Exception environment *)
    (Ident.StrId, Env * comp) NewMap.T (* Structure environment *)
d62 1
a62 1
    FUN_ENV of (Ident.FunId, comp * Interface.Int * Env) NewMap.T
@


1.9
log
@Rationalised substructures.
@
text
@d4 3
d35 1
d39 2
a40 2
functor EnvironTypes(
  structure LambdaTypes: LAMBDATYPES
d43 1
a43 1
  structure Ident = LambdaTypes.Datatypes.Ident
d45 4
a48 2
  structure Interface = LambdaTypes.Datatypes.Interface
  structure NewMap = LambdaTypes.Datatypes.NewMap
@


1.8
log
@Removed some redundant structures and sharing
@
text
@d4 3
a31 1
require "../typechecker/interface";
a36 1
  structure Interface: INTERFACE
d41 1
a41 1
  structure Interface = Interface
@


1.7
log
@Added EXTERNAL constructor to COMP
@
text
@d4 3
a28 2
require "../basics/ident";
require "../utils/newmap";
d33 1
a33 1
functor EnvironTypes(structure Ident: IDENTCLASS
a35 2
  structure NewMap : NEWMAP
  sharing LambdaTypes.Ident = Ident
d38 1
a38 1
  structure Ident = Ident
d41 1
a41 1
  structure NewMap = NewMap
@


1.6
log
@Changed to use newmap
@
text
@d4 3
d44 4
a47 3
      LAMB of LambdaTypes.LVar |    (* Lambda variables names *)
      FIELD of {index : int, size : int} | (* Field selectors in structures *)
      PRIM of LambdaTypes.Primitive (* Primitive functions, numbers on the wall *)
@


1.5
log
@Changed the type comp so that record selection now retains the total
size of the record as well as just the index
@
text
@d3 5
a7 1
$Log:	_environtypes.sml,v $
d24 1
a24 1
require "../utils/map";
d32 1
a32 1
  structure Map: MAP
d39 1
a39 1
  structure Map = Map
d46 3
a48 3
    ENV of (Ident.ValId, comp) Map.Map * (* Value environment *)
    (Ident.ValId, comp) Map.Map * (* Exception environment *)
    (Ident.StrId, Env * comp) Map.Map (* Structure environment *)
d51 1
a51 1
    FUN_ENV of (Ident.FunId, comp * Interface.Int * Env) Map.Map
@


1.4
log
@Added exception environemtn to env
@
text
@d4 3
d38 1
a38 1
      FIELD of LambdaTypes.Field |  (* Field selectors in structures *)
@


1.3
log
@Changed Fun_Env to use comp
@
text
@d4 3
d39 3
a41 1
      ENV of (Ident.ValId, comp) Map.Map * (Ident.StrId, Env * comp) Map.Map
@


1.2
log
@Added functor environment
@
text
@d4 3
d38 2
a39 2
  datatype Fun_Env = FUN_ENV of (Ident.FunId,
    LambdaTypes.LVar * Interface.Int * Env) Map.Map
@


1.1
log
@Initial revision
@
text
@d3 4
a6 1
$Log$
d12 1
d18 1
d25 1
d35 5
@
