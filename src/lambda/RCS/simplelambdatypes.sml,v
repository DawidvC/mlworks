head	1.5;
access;
symbols
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.5.6.1.1
	MLWorks_gui_1996_12_18:1.5.7
	MLWorks_1_0_Win32_1996_12_17:1.5.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.5.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.5.4.1
	MLWorks_1_0_Irix_1996_11_28:1.5.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.5.5
	MLWorks_1_0_Unix_1996_11_14:1.5.4
	MLWorks_Open_Beta2_1996_10_11:1.5.3
	MLWorks_License_dev:1.5.2
	MLWorks_1_open_beta_1996_09_13:1.5.1
	MLWorks_Open_Beta_1996_08_22:1.5
	MLWorks_Beta_1996_07_02:1.5
	MLWorks_Beta_1996_06_07:1.5
	MLWorks_Beta_1996_06_06:1.5
	MLWorks_Beta_1996_06_05:1.5
	MLWorks_Beta_1996_06_03:1.5
	MLWorks_Beta_1996_05_31:1.5
	MLWorks_Beta_1996_05_30:1.5;
locks; strict;
comment	@ * @;


1.5
date	96.03.19.11.30.57;	author matthew;	state Exp;
branches
	1.5.1.1
	1.5.2.1
	1.5.3.1
	1.5.4.1
	1.5.5.1
	1.5.6.1
	1.5.7.1;
next	1.4;

1.4
date	95.08.11.12.10.55;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	95.02.28.11.27.12;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	95.01.10.10.56.12;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	94.10.12.10.09.20;	author matthew;	state Exp;
branches;
next	;

1.5.1.1
date	96.09.13.11.17.40;	author hope;	state Exp;
branches;
next	;

1.5.2.1
date	96.10.07.16.07.27;	author hope;	state Exp;
branches;
next	;

1.5.3.1
date	96.10.17.11.25.43;	author hope;	state Exp;
branches;
next	;

1.5.4.1
date	96.11.14.12.50.48;	author hope;	state Exp;
branches
	1.5.4.1.1.1;
next	;

1.5.4.1.1.1
date	96.11.28.15.01.55;	author hope;	state Exp;
branches;
next	;

1.5.5.1
date	96.11.22.18.10.10;	author hope;	state Exp;
branches;
next	;

1.5.6.1
date	96.12.17.17.48.46;	author hope;	state Exp;
branches
	1.5.6.1.1.1;
next	;

1.5.6.1.1.1
date	97.02.24.11.38.50;	author hope;	state Exp;
branches;
next	;

1.5.7.1
date	96.12.18.09.42.48;	author hope;	state Exp;
branches;
next	;


desc
@new file
@


1.5
log
@Removing open Option
@
text
@(*
$Log: simplelambdatypes.sml,v $
 * Revision 1.4  1995/08/11  12:10:55  daveb
 * Added new types for different sizes of ints, words, and reals.
 *
# Revision 1.3  1995/02/28  11:27:12  matthew
# Changes to FunInfo
#
# Revision 1.2  1995/01/10  10:56:12  matthew
# Adding strings to VCC_TAG and IMM_TAG
# Adding MLVALUE
#
# Revision 1.1  1994/10/12  10:09:20  matthew
# new file
#
*)
require "../lambda/lambdatypes";

signature SIMPLETYPES =

  sig
    structure LambdaTypes : LAMBDATYPES

    (* The language *)
      
    type var;

    val new_valid : unit -> var

    datatype Status = ENTRY | BODY | FUNC

    datatype StructType = STRUCTURE | TUPLE | CONSTRUCTOR
      
    datatype tag = 
      VCC_TAG of string * int |
      IMM_TAG of string * int |
      SCON_TAG of LambdaTypes.Ident.SCon * int MLWorks.Option.option |
      EXP_TAG of exp
      
    and exp = 
      VAR of var |
      FN of var list * exp * Status * string * LambdaTypes.Type * LambdaTypes.FunInfo |
      LET of (var * LambdaTypes.VarInfo ref MLWorks.Option.option * exp) * exp |
      LETREC of (var * LambdaTypes.VarInfo ref MLWorks.Option.option) list * exp list * exp |
      APP of exp * exp list * LambdaTypes.Type ref MLWorks.Option.option |
      SCON of LambdaTypes.Ident.SCon * int MLWorks.Option.option |
      INT of int |
      SWITCH of exp * {num_vccs:int,num_imms:int} MLWorks.Option.option * (tag * exp) list * exp MLWorks.Option.option |
      STRUCT of exp list * StructType |
      SELECT of {index: int,size: int,selecttype: StructType} * exp |
      RAISE of exp |
      HANDLE of exp * exp * string |
      BUILTIN of LambdaTypes.Primitive |
      MLVALUE of MLWorks.Internal.Value.ml_value (* immediate constants *) |
      
      (* These are new ones *)
      BUILTINAPP of LambdaTypes.Primitive * exp list * LambdaTypes.Type ref MLWorks.Option.option

    val exp_eq : exp * exp -> bool

    datatype Dec = 
      VAL of exp |
      FUNCTOR of var * string * ((var * LambdaTypes.VarInfo ref MLWorks.Option.option * Dec) list * exp)
      
    datatype program =
      PROGRAM of (var * LambdaTypes.VarInfo ref MLWorks.Option.option * Dec) list * exp
      
    val telfun : (exp -> exp) -> (tag * exp) -> (tag * exp)

    val print_var : var -> string
    val print_exp : exp -> string
    val pds : program -> string
    val pde : exp -> string
end
@


1.5.7.1
log
@branched from 1.5
@
text
@a2 3
 * Revision 1.5  1996/03/19  11:30:57  matthew
 * Removing open Option
 *
@


1.5.6.1
log
@branched from 1.5
@
text
@a2 3
 * Revision 1.5  1996/03/19  11:30:57  matthew
 * Removing open Option
 *
@


1.5.6.1.1.1
log
@branched from 1.5.6.1
@
text
@a2 3
 * Revision 1.5.6.1  1996/12/17  17:48:46  hope
 * branched from 1.5
 *
@


1.5.5.1
log
@branched from 1.5
@
text
@a2 3
 * Revision 1.5  1996/03/19  11:30:57  matthew
 * Removing open Option
 *
@


1.5.4.1
log
@branched from 1.5
@
text
@a2 3
 * Revision 1.5  1996/03/19  11:30:57  matthew
 * Removing open Option
 *
@


1.5.4.1.1.1
log
@branched from 1.5.4.1
@
text
@a2 3
 * Revision 1.5.4.1  1996/11/14  12:50:48  hope
 * branched from 1.5
 *
@


1.5.3.1
log
@branched from 1.5
@
text
@a2 3
 * Revision 1.5  1996/03/19  11:30:57  matthew
 * Removing open Option
 *
@


1.5.2.1
log
@branched from 1.5
@
text
@a2 3
 * Revision 1.5  1996/03/19  11:30:57  matthew
 * Removing open Option
 *
@


1.5.1.1
log
@branched from 1.5
@
text
@a2 3
 * Revision 1.5  1996/03/19  11:30:57  matthew
 * Removing open Option
 *
@


1.4
log
@Added new types for different sizes of ints, words, and reals.
@
text
@d3 3
a23 2
    open MLWorks.Option

d37 1
a37 1
      SCON_TAG of LambdaTypes.Ident.SCon * int option |
d43 4
a46 4
      LET of (var * LambdaTypes.VarInfo ref option * exp) * exp |
      LETREC of (var * LambdaTypes.VarInfo ref option) list * exp list * exp |
      APP of exp * exp list * LambdaTypes.Type ref option |
      SCON of LambdaTypes.Ident.SCon * int option |
d48 1
a48 1
      SWITCH of exp * {num_vccs:int,num_imms:int} option * (tag * exp) list * exp option |
d57 1
a57 1
      BUILTINAPP of LambdaTypes.Primitive * exp list * LambdaTypes.Type ref option
d63 1
a63 1
      FUNCTOR of var * string * ((var * LambdaTypes.VarInfo ref option * Dec) list * exp)
d66 1
a66 1
      PROGRAM of (var * LambdaTypes.VarInfo ref option * Dec) list * exp
@


1.3
log
@Changes to FunInfo
@
text
@d3 3
d36 1
a36 1
      SCON_TAG of LambdaTypes.Ident.SCon |
d42 2
a43 2
      LET of (var * LambdaTypes.VarInfo ref LambdaTypes.Option.opt * exp) * exp |
      LETREC of (var * LambdaTypes.VarInfo ref LambdaTypes.Option.opt) list * exp list * exp |
d45 1
a45 1
      SCON of LambdaTypes.Ident.SCon |
d62 1
a62 1
      FUNCTOR of var * string * ((var * LambdaTypes.VarInfo ref LambdaTypes.Option.opt * Dec) list * exp)
d65 1
a65 1
      PROGRAM of (var * LambdaTypes.VarInfo ref LambdaTypes.Option.opt * Dec) list * exp
@


1.2
log
@Adding strings to VCC_TAG and IMM_TAG
Adding MLVALUE
@
text
@d3 4
d38 1
a38 1
      FN of var list * exp * Status * string * LambdaTypes.Type * LambdaTypes.FunInfo LambdaTypes.Option.opt |
@


1.1
log
@new file
@
text
@d3 3
d27 2
a28 2
      VCC_TAG of int |
      IMM_TAG of int |
d46 1
@
