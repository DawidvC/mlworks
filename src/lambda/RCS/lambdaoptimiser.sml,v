head	1.22;
access;
symbols
	MLW_daveb_inline_1_4_99:1.22.11
	MLWorks_21c0_1999_03_25:1.22
	MLWorks_20c1_1998_08_20:1.22
	MLWorks_20c0_1998_08_04:1.22
	MLWorks_20b2c2_1998_06_19:1.22
	MLWorks_20b2_Windows_1998_06_12:1.22
	MLWorks_20b1c1_1998_05_07:1.22
	MLWorks_20b0_1998_04_07:1.22
	MLWorks_20b0_1998_03_20:1.22
	MLWorks_20m2_1998_02_16:1.22
	MLWorks_20m1_1997_10_23:1.22
	MLWorks_11r1:1.22.8.1.1.1.1
	MLWorks_workspace_97:1.22.10
	MLWorks_dt_wizard:1.22.9
	MLWorks_11c0_1997_09_09:1.22.8.1.1.1
	MLWorks_10r3:1.22.8.1.3
	MLWorks_10r2_551:1.22.8.1.2
	MLWorks_11:1.22.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.22.8.1
	MLWorks_20m0_1997_06_20:1.22
	MLWorks_1_0_r2c2_1997_06_14:1.22.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.22.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.22.8
	MLWorks_BugFix_1997_04_24:1.22
	MLWorks_1_0_r2_Win32_1997_04_11:1.22
	MLWorks_1_0_r2_Unix_1997_04_04:1.22
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.22.6.1.1
	MLWorks_gui_1996_12_18:1.22.7
	MLWorks_1_0_Win32_1996_12_17:1.22.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.22.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.22.4.1
	MLWorks_1_0_Irix_1996_11_28:1.22.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.22.5
	MLWorks_1_0_Unix_1996_11_14:1.22.4
	MLWorks_Open_Beta2_1996_10_11:1.22.3
	MLWorks_License_dev:1.22.2
	MLWorks_1_open_beta_1996_09_13:1.22.1
	MLWorks_Open_Beta_1996_08_22:1.22
	MLWorks_Beta_1996_07_02:1.22
	MLWorks_Beta_1996_06_07:1.22
	MLWorks_Beta_1996_06_06:1.22
	MLWorks_Beta_1996_06_05:1.22
	MLWorks_Beta_1996_06_03:1.22
	MLWorks_Beta_1996_05_31:1.22
	MLWorks_Beta_1996_05_30:1.22
	ML_beta_release_12/08/94:1.21
	ML_beta_release_03/08/94:1.21
	ML_revised_beta_release_25/05/94:1.21
	ML_final_beta_release_02/03/94:1.21
	mlworks-28-01-1994:1.21
	Release:1.21
	mlworks-beta-01-09-1993:1.21
	MLWorks-1-0-4-29/01/1993:1.17
	MLWorks-1-0-3-21/12/1992:1.17
	MLWorks-1-0-2-15/12/1992:1.17
	MLWorks-1-0-1-04/12/1992:1.17
	checkpoint_17_08_92:1.16
	Ten15_release_21-08-91:1.6
	Ten15_release_19-08-91:1.6
	ten15_release:1.4;
locks; strict;
comment	@ * @;


1.22
date	95.05.12.15.11.29;	author matthew;	state Exp;
branches
	1.22.1.1
	1.22.2.1
	1.22.3.1
	1.22.4.1
	1.22.5.1
	1.22.6.1
	1.22.7.1
	1.22.8.1
	1.22.9.1
	1.22.10.1
	1.22.11.1;
next	1.21;

1.21
date	93.05.18.10.55.11;	author jont;	state Exp;
branches
	1.21.1.1;
next	1.20;

1.20
date	93.05.11.12.38.07;	author jont;	state Exp;
branches;
next	1.19;

1.19
date	93.03.04.12.56.33;	author matthew;	state Exp;
branches;
next	1.18;

1.18
date	93.02.01.17.59.27;	author matthew;	state Exp;
branches;
next	1.17;

1.17
date	92.11.26.19.41.45;	author daveb;	state Exp;
branches;
next	1.16;

1.16
date	92.07.24.13.35.46;	author clive;	state Exp;
branches;
next	1.15;

1.15
date	92.07.03.07.48.38;	author davida;	state Exp;
branches;
next	1.14;

1.14
date	91.10.22.14.20.09;	author davidt;	state Exp;
branches;
next	1.13;

1.13
date	91.09.16.11.20.01;	author davida;	state Exp;
branches;
next	1.12;

1.12
date	91.09.13.12.25.10;	author davida;	state Exp;
branches;
next	1.11;

1.11
date	91.09.11.12.10.31;	author davida;	state Exp;
branches;
next	1.10;

1.10
date	91.09.10.14.52.14;	author davida;	state Exp;
branches;
next	1.9;

1.9
date	91.09.09.15.21.29;	author davida;	state Exp;
branches;
next	1.8;

1.8
date	91.09.04.11.14.21;	author davida;	state Exp;
branches;
next	1.7;

1.7
date	91.08.22.12.44.34;	author davida;	state Exp;
branches;
next	1.6;

1.6
date	91.08.06.15.09.32;	author davida;	state Exp;
branches;
next	1.5;

1.5
date	91.08.02.10.02.49;	author davida;	state Exp;
branches;
next	1.4;

1.4
date	91.07.30.12.54.33;	author davida;	state Exp;
branches;
next	1.3;

1.3
date	91.07.15.16.13.10;	author davida;	state Exp;
branches;
next	1.2;

1.2
date	91.07.10.13.49.45;	author davida;	state Exp;
branches;
next	1.1;

1.1
date	91.07.08.16.02.23;	author davida;	state Exp;
branches;
next	;

1.21.1.1
date	93.05.18.10.55.11;	author jont;	state Exp;
branches;
next	;

1.22.1.1
date	96.09.13.11.17.32;	author hope;	state Exp;
branches;
next	;

1.22.2.1
date	96.10.07.16.07.17;	author hope;	state Exp;
branches;
next	;

1.22.3.1
date	96.10.17.11.25.35;	author hope;	state Exp;
branches;
next	;

1.22.4.1
date	96.11.14.12.50.37;	author hope;	state Exp;
branches
	1.22.4.1.1.1;
next	;

1.22.4.1.1.1
date	96.11.28.15.01.44;	author hope;	state Exp;
branches;
next	;

1.22.5.1
date	96.11.22.18.10.02;	author hope;	state Exp;
branches;
next	;

1.22.6.1
date	96.12.17.17.48.39;	author hope;	state Exp;
branches
	1.22.6.1.1.1;
next	;

1.22.6.1.1.1
date	97.02.24.11.38.39;	author hope;	state Exp;
branches;
next	;

1.22.7.1
date	96.12.18.09.42.41;	author hope;	state Exp;
branches;
next	;

1.22.8.1
date	97.05.12.10.35.08;	author hope;	state Exp;
branches
	1.22.8.1.1.1
	1.22.8.1.2.1
	1.22.8.1.3.1;
next	;

1.22.8.1.1.1
date	97.07.28.18.20.32;	author daveb;	state Exp;
branches
	1.22.8.1.1.1.1.1;
next	;

1.22.8.1.1.1.1.1
date	97.10.07.11.45.47;	author jkbrook;	state Exp;
branches;
next	;

1.22.8.1.2.1
date	97.09.08.17.14.00;	author daveb;	state Exp;
branches;
next	;

1.22.8.1.3.1
date	97.09.09.14.09.44;	author daveb;	state Exp;
branches;
next	;

1.22.9.1
date	97.09.10.19.25.42;	author brucem;	state Exp;
branches;
next	;

1.22.10.1
date	97.09.11.20.55.51;	author daveb;	state Exp;
branches;
next	;

1.22.11.1
date	99.04.01.17.57.21;	author daveb;	state Exp;
branches;
next	;


desc
@Lambda-expression optimiser.
@


1.22
log
@Removing redundant controls
@
text
@
(*
 * Lambda-Calculus Optimisation: lambdaoptimiser
 * Main Control Module
 *
 * Copyright (c) 1991 Harlequin Ltd.
 *)

require "lambdatypes";
require "../main/options";

signature LAMBDAOPTIMISER = 
  sig
    structure LambdaTypes : LAMBDATYPES
    structure Options : OPTIONS
    val optimise : Options.options -> LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp
    val simple_beta_reduce : LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp
  end;

(*
$Log: lambdaoptimiser.sml,v $
Revision 1.21  1993/05/18  10:55:11  jont
Added a ref to control maximum size of expression for which we
optimise until done

Revision 1.20  1993/05/11  12:38:07  jont
Made optimise take the full Options.options

Revision 1.19  1993/03/04  12:56:33  matthew
Options & Info changes

Revision 1.18  1993/02/01  17:59:27  matthew
Added sharing constraints

Revision 1.17  1992/11/26  19:41:45  daveb
Changes to make show_id_class and show_eq_info part of Info structure
instead of references.

Revision 1.16  1992/07/24  13:35:46  clive
Modified to use the new hashtables

Revision 1.15  1992/07/03  07:48:38  davida
Added check validity switch.

Revision 1.14  1991/10/22  14:20:09  davidt
Replaced impossible exception with Crash.impossible calls.

Revision 1.13  91/09/16  11:20:01  davida
Added turn_on_all, turn_off_all.

Revision 1.12  91/09/13  12:25:10  davida
Removed report switch, added timing.

Revision 1.11  91/09/11  12:10:31  davida
Added new display flags

Revision 1.10  91/09/10  14:52:14  davida
Removed redundant heuristic parameter

Revision 1.9  91/09/09  15:21:29  davida
New restructured sources.

Revision 1.8  91/09/04  11:14:21  davida
Added simple beta reduce function for export.

Revision 1.7  91/08/22  12:44:34  davida
Removed test-output flags from signature.  These
are no-longer refs, so that the debug code can be
left in, but we can compile a release version of
the compiler and a debug version: release version
will have dead code removed, hopefully.

Revision 1.6  91/08/06  15:09:32  davida
Removed sub-structure Set.

Revision 1.5  91/08/02  10:02:49  davida
Removed superfluous argument from top-level optimise
function, at last!

Revision 1.4  91/07/30  12:54:33  davida
Added diagnostic-output switches.

Revision 1.3  91/07/15  16:13:10  davida
Updated for new module LambdaSub

Revision 1.2  91/07/10  13:49:45  davida
Now has correct set of requires(!)

Revision 1.1  91/07/08  16:02:23  davida
Initial revision

*)

@


1.22.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a21 3
 * Revision 1.22  1995/05/12  15:11:29  matthew
 * Removing redundant controls
 *
@


1.22.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a21 3
 * Revision 1.22  1995/05/12  15:11:29  matthew
 * Removing redundant controls
 *
@


1.22.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a21 3
 * Revision 1.22  1995/05/12  15:11:29  matthew
 * Removing redundant controls
 *
@


1.22.8.1
log
@branched from 1.22
@
text
@a21 3
 * Revision 1.22  1995/05/12  15:11:29  matthew
 * Removing redundant controls
 *
@


1.22.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a21 3
 * Revision 1.22.8.1  1997/05/12  10:35:08  hope
 * branched from 1.22
 *
@


1.22.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a21 3
 * Revision 1.22.8.1  1997/05/12  10:35:08  hope
 * branched from 1.22
 *
@


1.22.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a21 3
 * Revision 1.22.8.1  1997/05/12  10:35:08  hope
 * branched from 1.22
 *
@


1.22.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a21 3
 * Revision 1.22.8.1.1.1  1997/07/28  18:20:32  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.22.7.1
log
@branched from 1.22
@
text
@a21 3
 * Revision 1.22  1995/05/12  15:11:29  matthew
 * Removing redundant controls
 *
@


1.22.6.1
log
@branched from 1.22
@
text
@a21 3
 * Revision 1.22  1995/05/12  15:11:29  matthew
 * Removing redundant controls
 *
@


1.22.6.1.1.1
log
@branched from 1.22.6.1
@
text
@a21 3
 * Revision 1.22.6.1  1996/12/17  17:48:39  hope
 * branched from 1.22
 *
@


1.22.5.1
log
@branched from 1.22
@
text
@a21 3
 * Revision 1.22  1995/05/12  15:11:29  matthew
 * Removing redundant controls
 *
@


1.22.4.1
log
@branched from 1.22
@
text
@a21 3
 * Revision 1.22  1995/05/12  15:11:29  matthew
 * Removing redundant controls
 *
@


1.22.4.1.1.1
log
@branched from 1.22.4.1
@
text
@a21 3
 * Revision 1.22.4.1  1996/11/14  12:50:37  hope
 * branched from 1.22
 *
@


1.22.3.1
log
@branched from 1.22
@
text
@a21 3
 * Revision 1.22  1995/05/12  15:11:29  matthew
 * Removing redundant controls
 *
@


1.22.2.1
log
@branched from 1.22
@
text
@a21 3
 * Revision 1.22  1995/05/12  15:11:29  matthew
 * Removing redundant controls
 *
@


1.22.1.1
log
@branched from 1.22
@
text
@a21 3
 * Revision 1.22  1995/05/12  15:11:29  matthew
 * Removing redundant controls
 *
@


1.21
log
@Added a ref to control maximum size of expression for which we
optimise until done
@
text
@a15 12

    val print_hash_table_stats : bool ref

    val max_struct_dup   : int ref     (*  space from duplicating structs   *)
    val max_scon_space   : int ref     (*  space from duplicating SCON's    *)
    val max_func_dup     : int ref     (*  space from duplicating fn's      *)
    val code_node_factor : int ref     (*  for wintertime, wear balaclavas  *)
    val max_map_fold     : int ref     (*  constant folding map list length *)
    val max_small_size   : int ref     (*  optimise until done for small expressions *)

    val optimise_switches : (string * bool ref) list     (* names & enables *)

a16 1
      
a17 12

    val show_debug_info            : bool ref
    val show_optimisations_applied : bool ref
    val show_lambda_code           : bool ref
    val show_timings               : bool ref
    val check_validity             : bool ref

    val show_none : unit -> unit
    val show_all  : unit -> unit

    val turn_on_all  : unit -> unit
    val turn_off_all : unit -> unit
d22 4
@


1.21.1.1
log
@Fork for bug fixing
@
text
@a46 4
Revision 1.21  1993/05/18  10:55:11  jont
Added a ref to control maximum size of expression for which we
optimise until done

@


1.20
log
@Made optimise take the full Options.options
@
text
@d24 1
d47 3
@


1.19
log
@Options & Info changes
@
text
@d27 1
a27 1
    val optimise : Options.print_options -> LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp
d46 3
@


1.18
log
@Added sharing constraints
@
text
@d10 1
a10 1
require "../main/info";
d15 1
a15 1
    structure Info : INFO
a16 2
    sharing Info.Location = LambdaTypes.Datatypes.Ident.Location

d27 1
a27 1
    val optimise : Info.options -> LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp
d46 3
@


1.17
log
@Changes to make show_id_class and show_eq_info part of Info structure
instead of references.
@
text
@d17 2
d48 4
@


1.16
log
@Modified to use the new hashtables
@
text
@d10 1
d15 1
d27 1
a27 1
    val optimise : LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp
d46 3
@


1.15
log
@Added check validity switch.
@
text
@d15 2
d44 3
@


1.14
log
@Replaced impossible exception with Crash.impossible calls.
@
text
@d31 1
d41 4
a44 1
$Log:	lambdaoptimiser.sml,v $
@


1.13
log
@Added turn_on_all, turn_off_all.
@
text
@d2 6
a7 1
(*  Lambda-Calculus Optimisation:  lambdaoptimiser  *)
a8 5
           (*  Main Control Module  *)

    (*  Copyright (c) 1991 Harlequin Ltd. *)


d12 2
a13 2
 sig
  structure LambdaTypes : LAMBDATYPES
d15 5
a19 5
  val max_struct_dup   : int ref     (*  space from duplicating structs   *)
  val max_scon_space   : int ref     (*  space from duplicating SCON's    *)
  val max_func_dup     : int ref     (*  space from duplicating fn's      *)
  val code_node_factor : int ref     (*  for wintertime, wear balaclavas  *)
  val max_map_fold     : int ref     (*  constant folding map list length *)
d21 1
a21 1
  val optimise_switches : (string * bool ref) list     (* names & enables *)
d23 3
a25 1
  val optimise : LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp
d27 4
a30 1
  val simple_beta_reduce : LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp
d32 2
a33 5
  exception impossible of string
  val show_debug_info            : bool ref
  val show_optimisations_applied : bool ref
  val show_lambda_code           : bool ref
  val show_timings               : bool ref
d35 3
a37 2
  val show_none : unit -> unit
  val show_all  : unit -> unit
a38 5
  val turn_on_all  : unit -> unit
  val turn_off_all : unit -> unit
end


d41 3
@


1.12
log
@Removed report switch, added timing.
@
text
@d35 3
d43 3
@


1.11
log
@Added new display flags
@
text
@d31 1
a31 1
  val show_optimisation_report   : bool ref
d40 3
@


1.10
log
@Removed redundant heuristic parameter
@
text
@d31 4
d40 3
@


1.9
log
@New restructured sources.
@
text
@a17 1
  val max_curry_body   : int ref     (*  size of dup'd curry fun bodies   *)
d36 3
@


1.8
log
@Added simple beta reduce function for export.
@
text
@a0 1
(* lambdaoptimiser.sml the signature *)
d2 33
d37 3
a65 2

Copyright (c) 1991 Harlequin Ltd.
a66 28

require "lambdatypes";

signature LAMBDAOPTIMISER = 
sig
  structure LambdaTypes : LAMBDATYPES

  (* Heuristic measures controlling evaluation of compromise between code *)
  (* size and code-speed in various cases.				  *)

  val max_struct_dup  : int ref
  val max_scon_space  : int ref
  val max_func_dup    : int ref


  (* Currently contains hidden state to control whether individual *)
  (* optimisations are applied or not.  This could be removed to   *)
  (* a higher level, simply exporting the independent optimisation *)
  (* functions themselves.  					   *)
 
  val optimise_switches : (string * bool ref) list

  val optimise : LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp

  val simple_beta_reduce : LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp

end

@


1.7
log
@Removed test-output flags from signature.  These
are no-longer refs, so that the debug code can be
left in, but we can compile a release version of
the compiler and a debug version: release version
will have dead code removed, hopefully.
@
text
@d5 7
d57 2
@


1.6
log
@Removed sub-structure Set.
@
text
@d5 3
a32 4

  val show_diagnostics : bool ref
  val show_stages      : bool ref

@


1.5
log
@Removed superfluous argument from top-level optimise
function, at last!
@
text
@d5 4
a24 1
require "../utils/set";
a29 1
  structure Set : SET
d33 9
@


1.4
log
@Added diagnostic-output switches.
@
text
@d5 3
d39 1
a39 2
  val optimise : LambdaTypes.Primitive Set.Set -> 
			   LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp
@


1.3
log
@Updated for new module LambdaSub
@
text
@d5 3
d26 2
@


1.2
log
@Now has correct set of requires(!)
@
text
@d5 3
d20 1
a20 1
  structure LambdaTypes : LAMBDATYPES  
d23 11
a33 4
  val optimise : LambdaTypes.Primitive Set.Set ->
			LambdaTypes.LambdaExp -> LambdaTypes.LambdaExp
  
  exception TEMPERROR of string;
@


1.1
log
@Initial revision
@
text
@d4 3
a6 1
$Log$
d8 1
d12 1
d20 1
a20 1
  val optimise : LambdaTypes.Primitive Set ->
@
