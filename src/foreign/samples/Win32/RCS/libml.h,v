head	1.1;
access;
symbols
	MLW_daveb_inline_1_4_99:1.1.11
	MLWorks_21c0_1999_03_25:1.1
	MLWorks_20c1_1998_08_20:1.1
	MLWorks_20c0_1998_08_04:1.1
	MLWorks_20b2c2_1998_06_19:1.1
	MLWorks_20b2_Windows_1998_06_12:1.1
	MLWorks_20b1c1_1998_05_07:1.1
	MLWorks_20b0_1998_04_07:1.1
	MLWorks_20b0_1998_03_20:1.1
	MLWorks_20m2_1998_02_16:1.1
	MLWorks_20m1_1997_10_23:1.1
	MLWorks_11r1:1.1.8.1.1.1.1
	MLWorks_workspace_97:1.1.10
	MLWorks_dt_wizard:1.1.9
	MLWorks_11c0_1997_09_09:1.1.8.1.1.1
	MLWorks_10r3:1.1.8.1.3
	MLWorks_10r2_551:1.1.8.1.2
	MLWorks_11:1.1.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.8.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c2_1997_06_14:1.1.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.8
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.6.1.1
	MLWorks_gui_1996_12_18:1.1.7
	MLWorks_1_0_Win32_1996_12_17:1.1.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.4.1
	MLWorks_1_0_Irix_1996_11_28:1.1.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.5
	MLWorks_1_0_Unix_1996_11_14:1.1.4
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1
	MLWorks_Beta_1996_07_02:1.1;
locks; strict;
comment	@ * @;


1.1
date	96.05.24.16.25.36;	author brianm;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1
	1.1.6.1
	1.1.7.1
	1.1.8.1
	1.1.9.1
	1.1.10.1
	1.1.11.1;
next	;

1.1.1.1
date	96.09.13.11.12.32;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.16.03.15;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.21.31;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	96.11.14.12.45.17;	author hope;	state Exp;
branches
	1.1.4.1.1.1;
next	;

1.1.4.1.1.1
date	96.11.28.14.57.11;	author hope;	state Exp;
branches;
next	;

1.1.5.1
date	96.11.22.18.05.49;	author hope;	state Exp;
branches;
next	;

1.1.6.1
date	96.12.17.17.44.34;	author hope;	state Exp;
branches
	1.1.6.1.1.1;
next	;

1.1.6.1.1.1
date	97.02.24.11.33.59;	author hope;	state Exp;
branches;
next	;

1.1.7.1
date	96.12.18.09.38.33;	author hope;	state Exp;
branches;
next	;

1.1.8.1
date	97.05.12.10.30.52;	author hope;	state Exp;
branches
	1.1.8.1.1.1
	1.1.8.1.2.1
	1.1.8.1.3.1;
next	;

1.1.8.1.1.1
date	97.07.28.18.16.26;	author daveb;	state Exp;
branches
	1.1.8.1.1.1.1.1;
next	;

1.1.8.1.1.1.1.1
date	97.10.07.11.41.19;	author jkbrook;	state Exp;
branches;
next	;

1.1.8.1.2.1
date	97.09.08.17.10.00;	author daveb;	state Exp;
branches;
next	;

1.1.8.1.3.1
date	97.09.09.14.05.28;	author daveb;	state Exp;
branches;
next	;

1.1.9.1
date	97.09.10.19.19.52;	author brucem;	state Exp;
branches;
next	;

1.1.10.1
date	97.09.11.20.51.04;	author daveb;	state Exp;
branches;
next	;

1.1.11.1
date	99.04.01.17.54.46;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
New file.
@


1.1
log
@new unit
New file.
@
text
@/* libml.h
 *
 * Copyright (C) 1996 Harlequin Ltd.
 *
 * This header file describes the MLWorks interface for accessing ML from
 * C via the MLWorks Foreign Interface.
 *
 * Version (beta)
 *
 */


typedef unsigned int MLvalue;


/* === ML EXTERNAL VALUE INTERFACE === */

extern MLvalue lookup_ml_value (char *name);
  /* Looks up ML values already registered from ML as external */

extern MLvalue call_ml_function (MLvalue fn_handle, int arity, ...);
  /* Calls ML function with given arguments */


/* === DATA CONVERSION FUNCTIONS : ML values --> C objects === */

extern int       ml2c_int(MLvalue val);
extern unsigned  ml2c_word(MLvalue val);
extern double    ml2c_real(MLvalue val);

   /* The following block of functions expect the user to have supplied
    * storage into which the result is written.
    */
extern void      ml2c_string(MLvalue val, char *result);
extern void      ml2c_tuple(MLvalue val, MLvalue *result);
extern void      ml2c_array(MLvalue val, MLvalue *result);

extern int       ml2c_string_length(MLvalue val);
extern int       ml2c_tuple_length(MLvalue val);
extern int       ml2c_array_length(MLvalue val);


/* === DATA CONVERSION FUNCTIONS : C objects --> ML values === */

#define   ml_true    5
#define   ml_false   0

#define   ml_unit    0

extern MLvalue  c2ml_int(int obj);
extern MLvalue  c2ml_word(unsigned obj);
extern MLvalue  c2ml_real(double obj);
extern MLvalue  c2ml_string(char *obj);

extern MLvalue  c2ml_ref(MLvalue val);

extern MLvalue  c2ml_tuple(int count, ...);
extern MLvalue  c2ml_tuple1(int count, MLvalue table[]);

extern MLvalue  c2ml_array(int count, ...);
extern MLvalue  c2ml_array1(int count, MLvalue table[]);


/* === ML REF and ARRAY OPERATIONS === */

extern MLvalue  c2ml_content(MLvalue ref);
extern MLvalue  c2ml_assign(MLvalue ref, MLvalue val);

extern MLvalue  c2ml_sub(MLvalue arr, int index);
extern MLvalue  c2ml_update(MLvalue arr, int index, MLvalue val);


/* === PRIMITIVE DATA CLASSIFICATION === */

enum MLkind { Invalid_MLK, Int_MLK,       String_MLK,  Tuple_MLK,
              Array_MLK,   ByteArray_MLK, Closure_MLK, Other_MLK };

extern enum MLkind ml_kind(MLvalue val);


/* === INTEGRITY MAINTENANCE FUNCTIONS === */

extern void free_ml_value(MLvalue val);
extern void free_ml_vector(int count, MLvalue vec[]);
extern void free_all_ml_values(void);
@


1.1.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@@


1.1.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@@


1.1.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@@


1.1.8.1
log
@branched from 1.1
@
text
@@


1.1.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.1.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.1.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.1.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.1.7.1
log
@branched from 1.1
@
text
@@


1.1.6.1
log
@branched from 1.1
@
text
@@


1.1.6.1.1.1
log
@branched from 1.1.6.1
@
text
@@


1.1.5.1
log
@branched from 1.1
@
text
@@


1.1.4.1
log
@branched from 1.1
@
text
@@


1.1.4.1.1.1
log
@branched from 1.1.4.1
@
text
@@


1.1.3.1
log
@branched from 1.1
@
text
@@


1.1.2.1
log
@branched from 1.1
@
text
@@


1.1.1.1
log
@branched from 1.1
@
text
@@
