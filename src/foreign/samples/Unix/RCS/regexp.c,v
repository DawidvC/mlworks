head	1.2;
access;
symbols
	MLW_daveb_inline_1_4_99:1.2.8
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_11r1:1.2.5.1.1.1.1
	MLWorks_workspace_97:1.2.7
	MLWorks_dt_wizard:1.2.6
	MLWorks_11c0_1997_09_09:1.2.5.1.1.1
	MLWorks_10r3:1.2.5.1.3
	MLWorks_10r2_551:1.2.5.1.2
	MLWorks_11:1.2.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.2.5.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.2.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.2.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.2.5
	MLWorks_BugFix_1997_04_24:1.2
	MLWorks_1_0_r2_Win32_1997_04_11:1.2
	MLWorks_1_0_r2_Unix_1997_04_04:1.2
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.2.3.1.1
	MLWorks_gui_1996_12_18:1.2.4
	MLWorks_1_0_Win32_1996_12_17:1.2.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.2.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.2.1.1
	MLWorks_1_0_Irix_1996_11_28:1.2.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.2.2
	MLWorks_1_0_Unix_1996_11_14:1.2.1
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	96.10.24.15.06.10;	author io;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1
	1.2.5.1
	1.2.6.1
	1.2.7.1
	1.2.8.1;
next	1.1;

1.1
date	96.08.30.11.06.24;	author davids;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	96.09.13.11.12.18;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.16.03.01;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.21.16;	author hope;	state Exp;
branches;
next	;

1.2.1.1
date	96.11.14.12.45.02;	author hope;	state Exp;
branches
	1.2.1.1.1.1;
next	;

1.2.1.1.1.1
date	96.11.28.14.56.56;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.11.22.18.05.31;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.12.17.17.44.21;	author hope;	state Exp;
branches
	1.2.3.1.1.1;
next	;

1.2.3.1.1.1
date	97.02.24.11.33.43;	author hope;	state Exp;
branches;
next	;

1.2.4.1
date	96.12.18.09.38.18;	author hope;	state Exp;
branches;
next	;

1.2.5.1
date	97.05.12.10.30.37;	author hope;	state Exp;
branches
	1.2.5.1.1.1
	1.2.5.1.2.1
	1.2.5.1.3.1;
next	;

1.2.5.1.1.1
date	97.07.28.18.16.17;	author daveb;	state Exp;
branches
	1.2.5.1.1.1.1.1;
next	;

1.2.5.1.1.1.1.1
date	97.10.07.11.41.11;	author jkbrook;	state Exp;
branches;
next	;

1.2.5.1.2.1
date	97.09.08.17.09.51;	author daveb;	state Exp;
branches;
next	;

1.2.5.1.3.1
date	97.09.09.14.05.17;	author daveb;	state Exp;
branches;
next	;

1.2.6.1
date	97.09.10.19.19.35;	author brucem;	state Exp;
branches;
next	;

1.2.7.1
date	97.09.11.20.50.48;	author daveb;	state Exp;
branches;
next	;

1.2.8.1
date	99.04.01.17.54.29;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.2
log
@[Bug #1547]
fiddle with this
@
text
@/*  ==== FI EXAMPLES : Regular expression parser ====
 *
 *  Copyright (C) 1996 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This module in C provides foreign functions to parse regular expressions.
 *
 *  Revision Log
 *  ------------
 *  $Log: samples:Unix:regexp.c,v $
 * Revision 1.1  1996/08/30  11:06:24  davids
 * new unit
 *
 *
 */

/* The following defines are used in the regexp.h included file below
 * Do not alter position
 */
#define INIT        register char *sp = instring;
#define GETC()      (*sp++)
#define PEEKC()     (*sp)
#define UNGETC(c)   (--sp)
#define RETURN(p)   return p
#define ERROR(c)    regerrno = c
#define ESIZE 1000

int regerrno;

#include <stdio.h>
#include <errno.h>
#include <regexp.h>
#include <malloc.h>

int regexp_search (char *string, char *regexp_string)
{
  char *expbuf;
  int result;
  extern int get_error(void);

  if ((expbuf=(char *)malloc (ESIZE)) == 0)
    perror ("malloc died due to ");

    
  if ((compile (regexp_string, expbuf, &expbuf[ESIZE], '\0')) == 0)
    get_error ();
  
  result = step (string, expbuf);
  free (expbuf);

  return result;
}

int get_error (void)
{
  return regerrno;
}

char *get_rest ()
{
  return loc1;
}

char *get_match (void)
{
  char *match_string;
  int size, i;

  size = loc2 - loc1;
  if ((match_string = (char *) malloc (size + 1)) == 0)
    perror ("malloc died due to ");


  for (i=0; i<size; i++)
    match_string [i] = loc1 [i];
    
  match_string [size] = '\0';

  return match_string;
}
@


1.2.8.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a11 4
 * Revision 1.2  1996/10/24  15:06:10  io
 * [Bug #1547]
 * fiddle with this
 *
@


1.2.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a11 4
 * Revision 1.2  1996/10/24  15:06:10  io
 * [Bug #1547]
 * fiddle with this
 *
@


1.2.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a11 4
 * Revision 1.2  1996/10/24  15:06:10  io
 * [Bug #1547]
 * fiddle with this
 *
@


1.2.5.1
log
@branched from 1.2
@
text
@a11 4
 * Revision 1.2  1996/10/24  15:06:10  io
 * [Bug #1547]
 * fiddle with this
 *
@


1.2.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a11 3
 * Revision 1.2.5.1  1997/05/12  10:30:37  hope
 * branched from 1.2
 *
@


1.2.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a11 3
 * Revision 1.2.5.1  1997/05/12  10:30:37  hope
 * branched from 1.2
 *
@


1.2.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a11 3
 * Revision 1.2.5.1  1997/05/12  10:30:37  hope
 * branched from 1.2
 *
@


1.2.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a11 3
 * Revision 1.2.5.1.1.1  1997/07/28  18:16:17  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.2.4.1
log
@branched from 1.2
@
text
@a11 4
 * Revision 1.2  1996/10/24  15:06:10  io
 * [Bug #1547]
 * fiddle with this
 *
@


1.2.3.1
log
@branched from 1.2
@
text
@a11 4
 * Revision 1.2  1996/10/24  15:06:10  io
 * [Bug #1547]
 * fiddle with this
 *
@


1.2.3.1.1.1
log
@branched from 1.2.3.1
@
text
@a11 3
 * Revision 1.2.3.1  1996/12/17  17:44:21  hope
 * branched from 1.2
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a11 4
 * Revision 1.2  1996/10/24  15:06:10  io
 * [Bug #1547]
 * fiddle with this
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a11 4
 * Revision 1.2  1996/10/24  15:06:10  io
 * [Bug #1547]
 * fiddle with this
 *
@


1.2.1.1.1.1
log
@branched from 1.2.1.1
@
text
@a11 3
 * Revision 1.2.1.1  1996/11/14  12:45:02  hope
 * branched from 1.2
 *
@


1.1
log
@new unit
@
text
@d11 4
a14 1
 *  $Log$
d18 3
a20 1

d26 1
a26 2
#define ERROR(c)    error_num = c

d29 1
a29 1
int error_num;
d31 2
d40 4
d45 4
a48 2
  expbuf = (char *) malloc (ESIZE);
  compile (regexp_string, expbuf, &expbuf[ESIZE], '\0');
d57 1
a57 1
  return error_num;
d71 3
a73 1
  match_string = (char *) malloc (size + 1);
@


1.1.3.1
log
@branched from 1.1
@
text
@d11 1
a11 4
 *  $Log: samples:Unix:regexp.c,v $
 * Revision 1.1  1996/08/30  11:06:24  davids
 * new unit
 *
@


1.1.2.1
log
@branched from 1.1
@
text
@d11 1
a11 4
 *  $Log: samples:Unix:regexp.c,v $
 * Revision 1.1  1996/08/30  11:06:24  davids
 * new unit
 *
@


1.1.1.1
log
@branched from 1.1
@
text
@d11 1
a11 4
 *  $Log: samples:Unix:regexp.c,v $
 * Revision 1.1  1996/08/30  11:06:24  davids
 * new unit
 *
@
