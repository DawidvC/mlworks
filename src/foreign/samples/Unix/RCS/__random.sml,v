head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.1
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_11r1:1.3.5.1.1.1.1
	MLWorks_workspace_97:1.3.7
	MLWorks_dt_wizard:1.3.6
	MLWorks_11c0_1997_09_09:1.3.5.1.1.1
	MLWorks_10r3:1.3.5.1.3
	MLWorks_10r2_551:1.3.5.1.2
	MLWorks_11:1.3.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.5.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.5
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.3.1.1
	MLWorks_gui_1996_12_18:1.3.4
	MLWorks_1_0_Win32_1996_12_17:1.3.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.1.1
	MLWorks_1_0_Irix_1996_11_28:1.3.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.2
	MLWorks_1_0_Unix_1996_11_14:1.3.1
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1;
locks; strict;
comment	@ *  @;


1.4
date	98.04.07.19.59.33;	author jkbrook;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	96.11.06.13.24.51;	author brianm;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1;
next	1.2;

1.2
date	96.10.22.17.43.48;	author io;	state Exp;
branches;
next	1.1;

1.1
date	96.08.30.10.56.39;	author davids;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	96.09.13.11.12.00;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.16.02.44;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.20.58;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	96.11.14.12.44.41;	author hope;	state Exp;
branches
	1.3.1.1.1.1;
next	;

1.3.1.1.1.1
date	96.11.28.14.56.38;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.11.22.18.05.06;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.12.17.17.44.02;	author hope;	state Exp;
branches
	1.3.3.1.1.1;
next	;

1.3.3.1.1.1
date	97.02.24.11.33.20;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.12.18.09.38.00;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	97.05.12.10.30.18;	author hope;	state Exp;
branches
	1.3.5.1.1.1
	1.3.5.1.2.1
	1.3.5.1.3.1;
next	;

1.3.5.1.1.1
date	97.07.28.18.16.01;	author daveb;	state Exp;
branches
	1.3.5.1.1.1.1.1;
next	;

1.3.5.1.1.1.1.1
date	97.10.07.11.40.59;	author jkbrook;	state Exp;
branches;
next	;

1.3.5.1.2.1
date	97.09.08.17.09.34;	author daveb;	state Exp;
branches;
next	;

1.3.5.1.3.1
date	97.09.09.14.04.58;	author daveb;	state Exp;
branches;
next	;

1.3.6.1
date	97.09.10.19.19.14;	author brucem;	state Exp;
branches;
next	;

1.3.7.1
date	97.09.11.20.50.26;	author daveb;	state Exp;
branches;
next	;

1.4.1.1
date	99.04.01.17.54.06;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.4
log
@[Bug #30387]
Date.fromTime should be replaced by Date.fromTimeLocal
@
text
@(*  ==== FI EXAMPLES : Random structure ====
 *
 *  Copyright (C) 1996 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This module provides ML functions to generate random numbers, using
 *  the foreign functions defined in random.c.
 *
 *  Revision Log
 *  ------------
 *  $Log: samples:Unix:__random.sml,v $
 *  Revision 1.3  1996/11/06  13:24:51  brianm
 *  Fixing samples.
 *
 *  Revision 1.2  1996/10/22  17:43:48  io
 *  updating naming conventions
 *
 *  Revision 1.1  1996/08/30  10:56:39  davids
 *  new unit
 *
 *
 *)


require "random";
require "$.system.__time";
require "$.basis.__date";
require "$.foreign.__interface";

structure Random : RANDOM =
  struct

    structure Store = Interface.Store
    structure CStructure = Interface.C.Structure
    structure CSignature = Interface.C.Signature
    structure CFunction = Interface.C.Function
    structure CType = Interface.C.Type
    structure CValue = Interface.C.Value

    (* Loading a Structure *)

    val random_struct = 
      CStructure.loadObjectFile ("foreign/samples/random.so", CStructure.IMMEDIATE_LOAD);
    (* the filename is relative to the current directory that MLWorks is using *)



    (* Building a store *)

    val random_store =
      Store.store {alloc    = Store.ALIGNED_4,
		   overflow = Store.BREAK,
		   size     = 60,
		   status   = Store.RDWR_STATUS};


    (* Creating objects *)

    val void_object =
      CValue.object {ctype = CType.VOID_TYPE,
		     store = random_store};

    val long_object1 =
      CValue.object {ctype = CType.LONG_TYPE,
		     store = random_store};
  
    val long_object2 =
      CValue.object {ctype = CType.LONG_TYPE,
		     store = random_store};
  
    val long_object3 =
      CValue.object {ctype = CType.LONG_TYPE,
		     store = random_store};


    (* Defining a c_signature object *)

    val random_sig = CSignature.newSignature ();


    (* Adding a new Signature entry *)

    val _ = CSignature.defEntry (random_sig,
				  CSignature.FUN_DECL 
				    {name = "random_num",
				     source = [CType.LONG_TYPE,
					       CType.LONG_TYPE],
				     target = CType.LONG_TYPE });

    val _ = CSignature.defEntry (random_sig,
				  CSignature.FUN_DECL
				    {name = "set_seed",
				     source = [CType.LONG_TYPE],
				     target = CType.VOID_TYPE });


    (* Make a `callable object' lookup function for our foreign code *)

    val def_random = 
      CFunction.defineForeignFun (random_struct, random_sig);


    (* Extract a foreign function object as an ML value *) 

    val randomFF = def_random "random_num";

    val set_seedFF = def_random "set_seed";
      

    (* Set the seed for the random number generator. *)

    fun setSeed seed =
      (CValue.setLong (long_object1, seed);
       CFunction.call set_seedFF ([long_object1], void_object))


    (* Find a random number between 'a' and 'b'. *)

    fun random (a, b) =
      (CValue.setLong (long_object1, a);
       CValue.setLong (long_object2, b);
       CFunction.call randomFF ([long_object1, long_object2], long_object3);
       CValue.getLong (long_object3))


    (* Use the current time to seed the random generator, by finding the
     current number of microseconds in the current second. *)

    fun randomize () =
      let
	val theTime = Time.now ()
	val roundedTime = Date.toTime (Date.fromTimeLocal theTime)
	val fracTime = Time.- (theTime, roundedTime)
 	val seed = Time.toMicroseconds fracTime
      in
	setSeed seed
      end

  end
@


1.4.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a12 4
 *  Revision 1.4  1998/04/07  19:59:33  jkbrook
 *  [Bug #30387]
 *  Date.fromTime should be replaced by Date.fromTimeLocal
 *
@


1.3
log
@Fixing samples.
@
text
@d13 3
d133 1
a133 1
	val roundedTime = Date.toTime (Date.fromTime theTime)
@


1.3.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a12 3
 *  Revision 1.3  1996/11/06  13:24:51  brianm
 *  Fixing samples.
 *
@


1.3.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a12 3
 *  Revision 1.3  1996/11/06  13:24:51  brianm
 *  Fixing samples.
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a12 3
 *  Revision 1.3  1996/11/06  13:24:51  brianm
 *  Fixing samples.
 *
@


1.3.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a12 3
 *  Revision 1.3.5.1  1997/05/12  10:30:18  hope
 *  branched from 1.3
 *
@


1.3.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a12 3
 *  Revision 1.3.5.1  1997/05/12  10:30:18  hope
 *  branched from 1.3
 *
@


1.3.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a12 3
 *  Revision 1.3.5.1  1997/05/12  10:30:18  hope
 *  branched from 1.3
 *
@


1.3.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a12 3
 *  Revision 1.3.5.1.1.1  1997/07/28  18:16:01  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a12 3
 *  Revision 1.3  1996/11/06  13:24:51  brianm
 *  Fixing samples.
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a12 3
 *  Revision 1.3  1996/11/06  13:24:51  brianm
 *  Fixing samples.
 *
@


1.3.3.1.1.1
log
@branched from 1.3.3.1
@
text
@a12 3
 *  Revision 1.3.3.1  1996/12/17  17:44:02  hope
 *  branched from 1.3
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a12 3
 *  Revision 1.3  1996/11/06  13:24:51  brianm
 *  Fixing samples.
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a12 3
 *  Revision 1.3  1996/11/06  13:24:51  brianm
 *  Fixing samples.
 *
@


1.3.1.1.1.1
log
@branched from 1.3.1.1
@
text
@a12 3
 *  Revision 1.3.1.1  1996/11/14  12:44:41  hope
 *  branched from 1.3
 *
@


1.2
log
@updating naming conventions
@
text
@d13 3
d41 2
a42 1
      CStructure.loadObjectFile ("./random.so", CStructure.IMMEDIATE_LOAD);
a43 3
      (* I prefer to do it from relative to MLWORKS_SRC_PATH
       * I use "foreign/samples/Unix/random.so"
       *)
@


1.1
log
@new unit
@
text
@d12 4
a15 1
 *  $Log$
d21 3
a23 3
require "system.__time";
require "basis.__date";
require "foreign.__foreign";
d28 6
a33 6
    structure Store = ForeignInterface.Store
    structure CStructure = ForeignInterface.C.Structure
    structure CSignature = ForeignInterface.C.Signature
    structure CFunction = ForeignInterface.C.Function
    structure CType = ForeignInterface.C.Type
    structure CValue = ForeignInterface.C.Value
d38 5
a42 1
      CStructure.load_object_file ("./random.so", CStructure.IMMEDIATE_LOAD);
d75 1
a75 1
    val random_sig = CSignature.new_signature ();
d80 1
a80 1
    val _ = CSignature.def_entry (random_sig,
d87 1
a87 1
    val _ = CSignature.def_entry (random_sig,
d97 1
a97 1
      CFunction.define_foreign_fun (random_struct, random_sig);
d110 1
a110 1
      (CValue.set_long (long_object1, seed);
d117 2
a118 2
      (CValue.set_long (long_object1, a);
       CValue.set_long (long_object2, b);
d120 1
a120 1
       CValue.get_long (long_object3))
@


1.1.3.1
log
@branched from 1.1
@
text
@d12 1
a12 4
 *  $Log: samples:Unix:__random.sml,v $
 *  Revision 1.1  1996/08/30  10:56:39  davids
 *  new unit
 *
@


1.1.2.1
log
@branched from 1.1
@
text
@d12 1
a12 4
 *  $Log: samples:Unix:__random.sml,v $
 *  Revision 1.1  1996/08/30  10:56:39  davids
 *  new unit
 *
@


1.1.1.1
log
@branched from 1.1
@
text
@d12 1
a12 4
 *  $Log: samples:Unix:__random.sml,v $
 *  Revision 1.1  1996/08/30  10:56:39  davids
 *  new unit
 *
@
