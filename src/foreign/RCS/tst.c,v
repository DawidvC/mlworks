head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.11
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.8.1.1.1.1
	MLWorks_workspace_97:1.4.10
	MLWorks_dt_wizard:1.4.9
	MLWorks_11c0_1997_09_09:1.4.8.1.1.1
	MLWorks_10r3:1.4.8.1.3
	MLWorks_10r2_551:1.4.8.1.2
	MLWorks_11:1.4.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.8.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.8
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.6.1.1
	MLWorks_gui_1996_12_18:1.4.7
	MLWorks_1_0_Win32_1996_12_17:1.4.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.4.1
	MLWorks_1_0_Irix_1996_11_28:1.4.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.5
	MLWorks_1_0_Unix_1996_11_14:1.4.4
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.4
	MLWorks_Beta_1996_06_07:1.4
	MLWorks_Beta_1996_06_06:1.4
	MLWorks_Beta_1996_06_05:1.4
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4;
locks; strict;
comment	@ * @;


1.4
date	95.06.25.14.55.16;	author brianm;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1
	1.4.8.1
	1.4.9.1
	1.4.10.1
	1.4.11.1;
next	1.3;

1.3
date	95.05.04.14.27.50;	author brianm;	state Exp;
branches;
next	1.2;

1.2
date	95.04.24.16.01.29;	author brianm;	state Exp;
branches;
next	1.1;

1.1
date	95.03.13.13.39.18;	author brianm;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.12.21;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.03.03;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.21.20;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.14.12.45.05;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	96.11.28.14.57.00;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.22.18.05.33;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.17.17.44.22;	author hope;	state Exp;
branches
	1.4.6.1.1.1;
next	;

1.4.6.1.1.1
date	97.02.24.11.33.45;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.18.09.38.21;	author hope;	state Exp;
branches;
next	;

1.4.8.1
date	97.05.12.10.30.39;	author hope;	state Exp;
branches
	1.4.8.1.1.1
	1.4.8.1.2.1
	1.4.8.1.3.1;
next	;

1.4.8.1.1.1
date	97.07.28.18.16.18;	author daveb;	state Exp;
branches
	1.4.8.1.1.1.1.1;
next	;

1.4.8.1.1.1.1.1
date	97.10.07.11.41.12;	author jkbrook;	state Exp;
branches;
next	;

1.4.8.1.2.1
date	97.09.08.17.09.52;	author daveb;	state Exp;
branches;
next	;

1.4.8.1.3.1
date	97.09.09.14.05.19;	author daveb;	state Exp;
branches;
next	;

1.4.9.1
date	97.09.10.19.19.38;	author brucem;	state Exp;
branches;
next	;

1.4.10.1
date	97.09.11.20.50.50;	author daveb;	state Exp;
branches;
next	;

1.4.11.1
date	99.04.01.17.54.32;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
No reason given
@


1.4
log
@Adding more test info ...
@
text
@#include <stdio.h>
#include "prototype.h"

int my_value = 42;

void hw(void)
{
   printf("\n\n  Hello World!  -- from a Foreign Function\n\n");
   return;
}

int hw1(void)
{
   printf("\n\n  This is a Value Returning Foreign Function \n\n");
   return(42);
}


int hw2(int arg)
{
   printf("\n\n  This is a single argument, value-returning Foreign Function\n");
   printf("  Here is the input value : %i (= %x)\n\n", (int)arg, (unsigned)arg);
   return(23 + arg);
}

char *hw3(int arg)
{
   static char msgbuf[64];

   printf("\n\n  This is another single argument, value-returning Foreign Function\n");
   printf("  The return value is a string pointer : %i (= %x)\n", (int)msgbuf, (unsigned)msgbuf);

   sprintf(msgbuf,"Surprise! Bet you didn't think this would be here! (%i)", arg);
/*                 01234567890123456789012345678901234567890123456789012345678901234 */
/*                 0         1         2         3         4         5         6     */

   return(msgbuf);
}


int hw4(char *arg)
{
   printf("\n\n  This is another single argument, value-returning Foreign Function\n");
   printf("  The message is : %s\n", arg);

   return(strlen(arg));
}

struct my_type {
  int num;
  char ch;
  int *iptr;
};



void byte_print(char *buf, int count)
{
   int i;

   if (count <= 0) return;

   printf("%02x",((unsigned)buf[0] & 0xff));
   for(i=1; i < count; i++)
      printf(" %02x", ((unsigned)buf[i] & 0xff));
}


 
int hw5 (struct my_type *arg)
{
   struct my_type data = {0}, *pdata;
   int v, v1;
   char c;
   int *p;

   v = 4242;
   v1 = 4353;
   c='Z';
   p = &v1;

   data.num = v;
   data.ch  = c;
   data.iptr = p;
   
   pdata = &data;

   printf("hw5 : pdata = [");
   byte_print((char *)pdata,sizeof(struct my_type));
   printf("]\n");

   printf("hw5 : Addr. pdata         = 0x%08x\n\n", (unsigned)pdata);

   printf("hw5 : pdata -> num        = 0x%08x = %i\n", (pdata -> num), (pdata -> num));
   printf("hw5 : Addr. pdata -> num  = 0x%08x\n\n", (unsigned)&(pdata -> num));

   printf("hw5 : pdata -> ch         = '%c' (ASCII value = 0x%x)\n"
         ,(pdata -> ch),(pdata -> ch));
   printf("hw5 : Addr. pdata -> ch   = 0x%x\n\n", (unsigned)&(pdata -> ch));

   printf("hw5 : pdata -> iptr       = 0x%x\n", (unsigned)(pdata -> iptr));
   printf("hw5 : Addr. pdata -> iptr = 0x%x\n\n\n", (unsigned)&(pdata -> iptr));

   printf("hw5 : arg = [");
   byte_print((char *)arg,sizeof(struct my_type));
   printf("]\n");

   printf("hw5 : arg               = 0x%x\n", (unsigned)arg);
   printf("hw5 : Addr. arg -> num  = 0x%x\n", (unsigned)&(arg -> num));
   printf("hw5 : Addr. arg -> ch   = 0x%x\n", (unsigned)&(arg -> ch));
   printf("hw5 : Addr. arg -> iptr = 0x%x\n", (unsigned)&(arg -> iptr));

   v = arg -> num;
   c = arg -> ch;
   p  = arg -> iptr;

   printf("hw5 : *arg.num  = %i\n", v);
   printf("hw5 : *arg.ch   = %c (ASCII value = 0x%x)\n", c, (unsigned)c);
   printf("hw5 : *arg.iptr = 0x%x (value = %i)\n", (unsigned)p, *p);

   printf("\nhw5 : Returning and setting structure ...\n");

   (arg -> num) = 42;
   v  = arg -> num;
   printf("hw5 : *arg.num  = %i\n", v);

   (arg -> ch)  = 'c';
   c = arg -> ch;
   printf("hw5 : *arg.ch   = '%c' (ASCII value = 0x%x)\n", c, (unsigned)c);

   *(arg -> iptr) = 23;
   p  = arg -> iptr;
   printf("hw5 : *arg.iptr = 0x%x (value = %i)\n", (unsigned)p, *p);

   return(v);
}

unsigned hw6(void)
{
   printf("hw6: The value of `my_value' = %i = 0x%08x \n", my_value, my_value);
   printf("hw6: Returning the address of `my_value' = 0x%08x \n", (unsigned)&my_value);

   return((unsigned)&my_value);
}
@


1.4.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@@


1.4.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@@


1.4.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@@


1.4.8.1
log
@branched from 1.4
@
text
@@


1.4.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.4.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.4.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.4.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.4.7.1
log
@branched from 1.4
@
text
@@


1.4.6.1
log
@branched from 1.4
@
text
@@


1.4.6.1.1.1
log
@branched from 1.4.6.1
@
text
@@


1.4.5.1
log
@branched from 1.4
@
text
@@


1.4.4.1
log
@branched from 1.4
@
text
@@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@@


1.4.3.1
log
@branched from 1.4
@
text
@@


1.4.2.1
log
@branched from 1.4
@
text
@@


1.4.1.1
log
@branched from 1.4
@
text
@@


1.3
log
@Added prototype header - to allow for different OS's ..
@
text
@d48 97
@


1.2
log
@General updating to reach prototype level for ML FI.
@
text
@d1 2
a2 1
#include <stdio.h>   /* SOLARIS */
@


1.1
log
@new unit
No reason given
@
text
@d3 1
d11 36
a46 1
int my_value = 42;
@
