head	1.6;
access;
symbols
	MLWorks_Beta_1996_06_07:1.6
	MLWorks_Beta_1996_06_06:1.6
	MLWorks_Beta_1996_06_05:1.6
	MLWorks_Beta_1996_06_03:1.6
	MLWorks_Beta_1996_05_31:1.6
	MLWorks_Beta_1996_05_30:1.6;
locks; strict;
comment	@ * @;


1.6
date	96.05.29.08.35.35;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	96.05.28.10.22.56;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	96.04.18.16.57.29;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	95.09.07.22.43.41;	author brianm;	state Exp;
branches;
next	1.2;

1.2
date	95.07.18.12.38.46;	author brianm;	state Exp;
branches;
next	1.1;

1.1
date	95.04.25.11.39.24;	author brianm;	state Exp;
branches;
next	;


desc
@new unit
New file.
@


1.6
log
@Removing use of MLWorks.RawIO.
@
text
@(*  ==== FOREIGN INTERFACE : COMMON TYPES ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Implementation
 *  --------------
 *
 *
 *  Revision Log
 *  ------------
 *  $Log: _fi_types.sml,v $
 * Revision 1.5  1996/05/28  10:22:56  daveb
 * Changed type of MLWorks.Internal.Value.print.
 *
 * Revision 1.4  1996/04/18  16:57:29  jont
 * initbasis becomes basis
 *
 * Revision 1.3  1995/09/07  22:43:41  brianm
 * Modifications for reorganisation & documentation.
 *
 *  Revision 1.2  1995/07/18  12:38:46  brianm
 *  Changing names of deferred data-type operators (stream-edit)
 *
 *  Revision 1.1  1995/04/25  11:39:24  brianm
 *  new unit
 *  New file.
 *
 *
 *)

require "../basis/__general";
require "../basis/__word32";
require "../basis/__word8";

require "fi_types";

functor ForeignTypes() : FOREIGN_TYPES =
   struct

      open General

      type word8 = Word8.word
      type word32 = Word32.word

      type address = word32
      type bytearray = MLWorks.ByteArray.bytearray

      type name = string
      type filename = string


      datatype 'a box = BOX of ('a option ref)

      val valOf = General.valOf

      fun getBOX(BOX(df))       = valOf(!df)
      fun setBOX(BOX(rval))(a)  = (rval := SOME(a))

      fun extractBOX(BOX(rval))     = !rval
      fun updateBOX(BOX(rval))(optv) = (rval := optv) 

      fun resetBOX(BOX(rval))   = (rval := NONE)  

      fun newBOX(BOX(rval))     = BOX(ref(!rval))
      fun makeBOX(v)           = BOX(ref(SOME(v)))
      fun voidBOX()            = BOX(ref(NONE))

      fun someBOX(BOX(rval))    = isSome(!rval)

      local
         open MLWorks.Internal.Value
         open MLWorks.IO 
      in
         fun debugP s v =
	   (
(*
             output(std_out, s);
	     print(DEFAULT, v);
	     output(std_out, "\n");
*)
	     v
           )

      end
   end;

@


1.5
log
@Changed type of MLWorks.Internal.Value.print.
@
text
@d12 3
d72 1
a72 1
         open MLWorks.RawIO 
@


1.4
log
@initbasis becomes basis
@
text
@d12 3
d75 1
a75 1
	     print(DEFAULT,std_out,v);
@


1.3
log
@Modifications for reorganisation & documentation.
@
text
@d12 3
d25 3
a27 3
require "../initbasis/__general";
require "../initbasis/__word32";
require "../initbasis/__word8";
@


1.2
log
@Changing names of deferred data-type operators (stream-edit)
@
text
@d12 3
d43 1
a43 1
      datatype 'a deferred = DF of ('a option ref)
d47 2
a48 2
      fun getDF(DF(df))       = valOf(!df)
      fun setDF(DF(rval))(a)  = (rval := SOME(a))
d50 2
a51 2
      fun extractDF(DF(rval))     = !rval
      fun updateDF(DF(rval))(optv) = (rval := optv) 
d53 1
a53 1
      fun resetDF(DF(rval))   = (rval := NONE)  
d55 3
a57 3
      fun newDF(DF(rval))     = DF(ref(!rval))
      fun makeDF(v)           = DF(ref(SOME(v)))
      fun voidDF()            = DF(ref(NONE))
d59 1
a59 1
      fun someDF(DF(rval))    = isSome(!rval)
@


1.1
log
@new unit
New file.
@
text
@d11 4
a14 1
 *  $Log$
d16 1
d42 1
a42 1
      val extract = General.valOf
d44 2
a45 1
      fun getDF(DF(rval))     = !rval
d47 2
a48 3
      fun extractDF(DF(df))   = extract(!df)

      fun setDF(DF(rval))(a)  = (rval := SOME(a))
a55 2
      fun updateDF(DF(rval))(optv) = (rval := optv) 

a56 1

@
