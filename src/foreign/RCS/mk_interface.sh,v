head	1.16;
access;
symbols
	MLW_daveb_inline_1_4_99:1.16.4
	MLWorks_21c0_1999_03_25:1.16
	MLWorks_20c1_1998_08_20:1.16
	MLWorks_20c0_1998_08_04:1.16
	MLWorks_20b2c2_1998_06_19:1.16
	MLWorks_20b2_Windows_1998_06_12:1.16
	MLWorks_20b1c1_1998_05_07:1.16
	MLWorks_20b0_1998_04_07:1.16
	MLWorks_20b0_1998_03_20:1.16
	MLWorks_20m2_1998_02_16:1.16
	MLWorks_20m1_1997_10_23:1.16
	MLWorks_11r1:1.16.1.1.1.1.1
	MLWorks_workspace_97:1.16.3
	MLWorks_dt_wizard:1.16.2
	MLWorks_11c0_1997_09_09:1.16.1.1.1.1
	MLWorks_10r3:1.16.1.1.3
	MLWorks_10r2_551:1.16.1.1.2
	MLWorks_11:1.16.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.16.1.1
	MLWorks_20m0_1997_06_20:1.16
	MLWorks_1_0_r2c2_1997_06_14:1.16.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.16.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.16.1
	MLWorks_BugFix_1997_04_24:1.16
	MLWorks_1_0_r2_Win32_1997_04_11:1.16
	MLWorks_1_0_r2_Unix_1997_04_04:1.16
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.14.2.1.1
	MLWorks_gui_1996_12_18:1.14.3
	MLWorks_1_0_Win32_1996_12_17:1.14.2
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.13.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.13.1.1
	MLWorks_1_0_Irix_1996_11_28:1.13.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.14.1
	MLWorks_1_0_Unix_1996_11_14:1.13.1
	MLWorks_Open_Beta2_1996_10_11:1.8.3
	MLWorks_License_dev:1.8.2
	MLWorks_1_open_beta_1996_09_13:1.8.1
	MLWorks_Open_Beta_1996_08_22:1.8
	MLWorks_Beta_1996_07_02:1.7;
locks; strict;
comment	@# @;


1.16
date	97.01.06.13.24.48;	author jont;	state Exp;
branches
	1.16.1.1
	1.16.2.1
	1.16.3.1
	1.16.4.1;
next	1.15;

1.15
date	96.12.20.17.53.44;	author jont;	state Exp;
branches;
next	1.14;

1.14
date	96.11.14.14.18.04;	author jont;	state Exp;
branches
	1.14.1.1
	1.14.2.1
	1.14.3.1;
next	1.13;

1.13
date	96.11.06.17.44.03;	author brianm;	state Exp;
branches
	1.13.1.1;
next	1.12;

1.12
date	96.10.27.12.51.38;	author daveb;	state Exp;
branches;
next	1.11;

1.11
date	96.10.22.13.51.46;	author io;	state Exp;
branches;
next	1.10;

1.10
date	96.10.22.13.19.21;	author brianm;	state Exp;
branches;
next	1.9;

1.9
date	96.10.21.19.14.03;	author brianm;	state Exp;
branches;
next	1.8;

1.8
date	96.07.04.13.02.48;	author jont;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1;
next	1.7;

1.7
date	96.06.28.10.00.00;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	96.06.26.21.32.39;	author brianm;	state Exp;
branches;
next	1.5;

1.5
date	96.06.25.18.30.45;	author brianm;	state Exp;
branches;
next	1.4;

1.4
date	96.06.24.19.44.37;	author brianm;	state Exp;
branches;
next	1.3;

1.3
date	96.06.24.14.45.25;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	96.06.19.14.52.50;	author brianm;	state Exp;
branches;
next	1.1;

1.1
date	96.06.15.14.12.07;	author brianm;	state Exp;
branches;
next	;

1.8.1.1
date	96.09.13.11.12.25;	author hope;	state Exp;
branches;
next	;

1.8.2.1
date	96.10.07.16.03.07;	author hope;	state Exp;
branches;
next	;

1.8.3.1
date	96.10.17.11.21.24;	author hope;	state Exp;
branches;
next	;

1.13.1.1
date	96.11.14.12.45.10;	author hope;	state Exp;
branches
	1.13.1.1.1.1;
next	;

1.13.1.1.1.1
date	96.11.28.14.57.04;	author hope;	state Exp;
branches;
next	;

1.14.1.1
date	96.11.22.18.05.40;	author hope;	state Exp;
branches;
next	;

1.14.2.1
date	96.12.17.17.44.28;	author hope;	state Exp;
branches
	1.14.2.1.1.1;
next	;

1.14.2.1.1.1
date	97.02.24.11.33.51;	author hope;	state Exp;
branches;
next	;

1.14.3.1
date	96.12.18.09.38.26;	author hope;	state Exp;
branches;
next	;

1.16.1.1
date	97.05.12.10.30.44;	author hope;	state Exp;
branches
	1.16.1.1.1.1
	1.16.1.1.2.1
	1.16.1.1.3.1;
next	;

1.16.1.1.1.1
date	97.07.28.18.15.50;	author daveb;	state Exp;
branches
	1.16.1.1.1.1.1.1;
next	;

1.16.1.1.1.1.1.1
date	97.10.07.11.40.52;	author jkbrook;	state Exp;
branches;
next	;

1.16.1.1.2.1
date	97.09.08.17.09.22;	author daveb;	state Exp;
branches;
next	;

1.16.1.1.3.1
date	97.09.09.14.04.42;	author daveb;	state Exp;
branches;
next	;

1.16.2.1
date	97.09.10.19.19.00;	author brucem;	state Exp;
branches;
next	;

1.16.3.1
date	97.09.11.20.50.10;	author daveb;	state Exp;
branches;
next	;

1.16.4.1
date	99.04.01.17.53.49;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
New file.
@


1.16
log
@[Bug #0]
Ensure interface.sml and __interface.sml are always built when requested
Remove some unnecessary stuff after simplifying flatten.sh
@
text
@#!/bin/sh
#
#  (Copyright) Harlequin Ltd 1996 (All rights reserved)
#
# $Log: mk_interface.sh,v $
# Revision 1.15  1996/12/20  17:53:44  jont
# [Bug #1816]
# Leave compilation stuff to makefiles
# Considerable simplifications
#
#
#  This script delivers the FFI as an encapsulated object:
#
#  1. constructs a couple of ML source files from the current source
#     files:
#
#        foreign/interface.sml     --- signature
#        foreign/__interface.sml   --- structure
#
#  This script is invoked from images/GNUmake as a part of building foreign.img
#  
#  There are no options to this script:
#  
# Comments:
# ---------

cd `dirname $0`
flatten=../../tools/flatten.sh
remove_src_hdr=../../tools/remove_src_hdr.sh
echo "Making interface.sml"
rm -f interface.sml
set `date`
year=$6

cat - <<\%%%% > interface.sml
(* ==== Foreign Interface signature file : interface.sml ====
 * Copyright (C) The Harlequin Group, $year (All rights reserved)
 *)
%%%%

ptmp1=%ptmp1%.$$
cat foreign.sml | $remove_src_hdr > $ptmp1
sed -e 's;FOREIGN_INTERFACE;INTERFACE;g' $ptmp1 >> interface.sml 

rm -f $ptmp1 buildlist __interface.sml
cat - <<%%%% > buildlist
__libml.sml
__static_bytearray.sml
__types.sml
__utils.sml
__store.sml
__core.sml
__aliens.sml
__object.sml
__structure.sml
__c_object.sml
__signature.sml
__c_signature.sml
__c_structure.sml
__c_function.sml
__foreign.sml
%%%%

$flatten "interface" "INTERFACE" "Interface" buildlist

rm -f buildlist

if test -f interface.sml
then :
else echo "mk_interface : can't find foreign/interface.sml"
     exit 1
fi
if test -f __interface.sml
then :
else echo "mk_interface : can't find foreign/__interface.sml"
     exit 1
fi
@


1.16.4.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a5 5
# Revision 1.16  1997/01/06  13:24:48  jont
# [Bug #0]
# Ensure interface.sml and __interface.sml are always built when requested
# Remove some unnecessary stuff after simplifying flatten.sh
#
@


1.16.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a5 5
# Revision 1.16  1997/01/06  13:24:48  jont
# [Bug #0]
# Ensure interface.sml and __interface.sml are always built when requested
# Remove some unnecessary stuff after simplifying flatten.sh
#
@


1.16.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a5 5
# Revision 1.16  1997/01/06  13:24:48  jont
# [Bug #0]
# Ensure interface.sml and __interface.sml are always built when requested
# Remove some unnecessary stuff after simplifying flatten.sh
#
@


1.16.1.1
log
@branched from 1.16
@
text
@a5 5
# Revision 1.16  1997/01/06  13:24:48  jont
# [Bug #0]
# Ensure interface.sml and __interface.sml are always built when requested
# Remove some unnecessary stuff after simplifying flatten.sh
#
@


1.16.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
# Revision 1.16.1.1  1997/05/12  10:30:44  hope
# branched from 1.16
#
@


1.16.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
# Revision 1.16.1.1  1997/05/12  10:30:44  hope
# branched from 1.16
#
@


1.16.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
# Revision 1.16.1.1  1997/05/12  10:30:44  hope
# branched from 1.16
#
@


1.16.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
# Revision 1.16.1.1.1.1  1997/07/28  18:15:50  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.15
log
@[Bug #1816]
Leave compilation stuff to makefiles
Considerable simplifications
@
text
@d5 6
a10 1
# $Log$
d26 1
a26 9
# Exporting both Path and PATH are necessary ... due to
# compatibility problems with WinNT/MKS KornShell and standard sh/bash
# under Unix.

export PATH Path

curdir=`pwd`
OS=`basename $curdir`
export OS
d30 4
a33 8
PATH=$PATH:../../tools
export PATH
if test -f interface.sml
then :
else echo "Making interface.sml"

     set `date`
     year=$6
d41 3
a43 6
     ptmp1=%ptmp1%.$$
     cat foreign.sml | $remove_src_hdr > $ptmp1
     sed -e 's;FOREIGN_INTERFACE;INTERFACE;g' $ptmp1 >> interface.sml 

     rm -f __interface.sml $ptmp1
fi
d45 2
a46 5
if test -f __interface.sml
then :
else
     rm -f buildlist
     cat - <<%%%% > buildlist
d64 3
a66 1
    $flatten "interface" "INTERFACE" "Interface" buildlist
d68 4
a71 1
    rm -f buildlist
a72 1

@


1.14
log
@[Bug #1770]
Pass source-path, pervasive-dir and object-path explicitly
to compilation of __interface
@
text
@d5 2
a14 2
#  2. Compiles both files using the appropriate batch compiler ...
#
d17 1
a17 9
#  There are several options to this script:
#  
#      -source : build source only    - requires ARCH/OS combination (even
#                                       though the source doesn't need this) 
#  
#      -all    : do build and compile - needs ARCH/OS combination
#  
#      -full   : this option is used in GNUmake to deconstruct the
#                ARCH/OS combination from the images directory path name.
d27 8
a34 91
sourceOnly="no"

case $1
in
   -source*)  sourceOnly="yes"
              ;;
   -all*)     sourceOnly="no"
              ;;
   -full*)    ffidir=`dirname $0`
              curdir=`pwd`
              case "$ARCH"
              in
                 "") OS=`basename $curdir`
                     nextdir=`dirname $curdir`
                     ARCH=`basename $nextdir`
                     case "$ARCH"
                     in
                         SPARC|I386|MIPS)
                             echo "Locally setting ARCH=$ARCH and OS=$OS"
                             ;;
                         *)  OS=
                             ARCH=
			     ;;
                     esac
                     ;;

                *)   ;;
              esac
              cd $ffidir
              rm -f interface.sml __interface.sml
              ;;
   *)
      echo "Usage : mk_interface.sh (-source | -all | -full) ARCH OS"
      exit 0
      ;;
esac

shift

case "$ARCH"
in
   "")
      ARCH="$1"
      case "$ARCH"
      in
         SPARC|I386|MIPS)
             ;;
         *)
             echo "ARCH not known - aborting"
             exit 0
             ;;

      esac
      ;;
esac

case "$OS"
in
    "")
      OS="$2"
      case "$OS"
      in
         SunOS|Solaris|Irix|NT|Win95|Linux)
             ;;
         "")
             echo "OS not known - aborting"
             exit 0
             ;;
      esac
      ;;
esac

export ARCH OS

case "$OS"
in

    NT|Win95)
      flatten=../../tools/flatten.sh
      remove_src_hdr=../../tools/remove_src_hdr.sh
      ;;

    *)
      PATH=../../tools:$PATH
      export PATH

      flatten=flatten.sh
      remove_src_hdr=remove_src_hdr.sh
      ;;
esac  

a48 1

a86 24

case "$sourceOnly"
in
   yes) ;;
   no)
     case "$OS"
     in
       "")  OS=SunOS
            ARCH=SPARC
            echo "`basename $0` : Assuming OS=SunOS & ARCH=SPARC"
            ;;
     esac

     export OS ARCH

     echo "Compiling foreign/__interface.sml"

     cd ..
     rts/runtime-g -load images/$ARCH/$OS/batch.img \
	  -pass argz -pervasive-dir pervasive -source-path . \
		     foreign/__interface.sml \
		argz
     ;;
esac
@


1.14.3.1
log
@branched from 1.14
@
text
@@


1.14.2.1
log
@branched from 1.14
@
text
@@


1.14.2.1.1.1
log
@branched from 1.14.2.1
@
text
@@


1.14.1.1
log
@branched from 1.14
@
text
@@


1.13
log
@Fixing MLWorks Support Call 233
@
text
@a196 3
     MLWORKS_SRC_PATH=.
     MLWORKS_OBJ_PATH=.
     MLWORKS_PERVASIVE=./pervasive
d198 1
a198 1
	  -pass argz -pervasive-dir $MLWORKS_PERVASIVE \
@


1.13.1.1
log
@branched from 1.13
@
text
@@


1.13.1.1.1.1
log
@branched from 1.13.1.1
@
text
@@


1.12
log
@Removed -object-path argument as this was breaking the daily build.
@
text
@d2 27
a28 1

a58 1
                     export OS ARCH
d60 1
d67 38
d107 1
d111 1
a125 1

d133 1
a133 1
cat - <<%%%% > interface.sml
d169 1
a169 1
    $flatten interface buildlist
@


1.11
log
@[Bug #1547]
updating for current naming conventions
@
text
@d135 2
a136 2
     rts/bin/$ARCH/$OS/main-g  -load images/$ARCH/$OS/batch.img \
	  -pass argz -object-path %S/%C/$ARCH/$OS -pervasive-dir $MLWORKS_PERVASIVE \
@


1.10
log
@Reverting to previous version - for the time being ...
@
text
@d135 2
a136 2
     rts/runtime-g  -load images/$ARCH/$OS/batch.img \
	  -pass argz -pervasive-dir $MLWORKS_PERVASIVE \
@


1.9
log
@Fixing JonT's bug ...
@
text
@d104 1
a104 1
     $flatten "Interface" buildlist
d106 1
a106 1
     rm -f buildlist
@


1.8
log
@Replace expand by cat, since expand doesn't exist on Irix
@
text
@d104 1
a104 1
     $flatten interface buildlist
@


1.8.3.1
log
@branched from 1.8
@
text
@@


1.8.2.1
log
@branched from 1.8
@
text
@@


1.8.1.1
log
@branched from 1.8
@
text
@@


1.7
log
@Fixing further OS and ARCH problems
@
text
@d76 1
a76 1
     expand foreign.sml | $remove_src_hdr > $ptmp1
@


1.6
log
@Fixing problems with running on NT etc.
@
text
@a128 9
     RTSOS="$OS"
     RTSARCH="$ARCH"

     case "$RTSOS"
     in
       Solaris) RTSOS=SunOS;;
       Win95)   RTSOS=NT;;
     esac

d135 1
a135 1
     rts/bin/$RTSARCH/$RTSOS/main-g  -load images/$ARCH/$OS/batch.img \
@


1.5
log
@Made derivation of ARCH/OS completely general ...
@
text
@d3 6
d19 1
a19 1
              case "$OS"
d24 9
a32 1
                     echo "Locally setting ARCH=$ARCH and OS=$OS"
a46 2
      export Path

@


1.4
log
@Improving the way that ARCH and OS are determined ...
@
text
@a2 21
curdir=`pwd`

case "$OS"
in
  "") OS=`basename $curdir`
      case $OS
      in
         SunOS)   ARCH=SPARC;;
         Solaris) ARCH=SPARC;;
         Win95)   ARCH=I386;;
         Irix)    ARCH=MIPS;;
         NT)      ARCH=I386;;
         *)       OS=
                  ARCH=
                  ;;
      esac
      export OS ARCH
      ;;
  *)  ;;
esac

d12 11
@


1.3
log
@Add missing case where OS is not set by make
@
text
@d3 3
a5 1
case $2
d7 32
a38 3
    system*) # Win32 (Win95 or NT operating systems)
             # It turns out that the PATH variable should be spelt
             # Path not PATH **even** when used in Shell scripts!!
d40 3
a44 3
      SYSTEM=$2
      export SYSTEM

a57 34
case "$SYSTEM"
in
   systemWin95)
      ARCH="I386"
      OS="Win95"
      export ARCH OS
      ;;

   systemNT)
      ARCH="I386"
      OS="NT"
      export ARCH OS
      ;;

   systemWindows_NT)
      ARCH="I386"
      OS="NT"
      export ARCH OS
      ;;
esac


sourceOnly="no"

case $1
in
   -source*)  sourceOnly="yes"
              ;;
   -all*)     sourceOnly="no"
              ;;
   -full*)    cd `dirname $0`
              rm -f interface.sml __interface.sml
              ;;
esac
d117 1
a117 1
     case "$ARCH$OS"
d119 15
a133 14
	"") case "`uname``uname -r`"
	    in
		SunOS4*)  ARCH=SPARC
			  OS=SunOS
			  ;;
		SunOS5*)  ARCH=SPARC
			  OS=Solaris
			  ;;
		*) ARCH=Unknown
		   OS=Unknown
		   ;;
	    esac
	    echo "mk_interface: locally setting ARCH=$ARCH and OS=$OS ..."
	    ;;
d137 1
d142 1
a142 1
     rts/runtime-g  -load images/$ARCH/$OS/batch.img \
@


1.2
log
@Mods for building on Win32 ...
@
text
@d40 6
@


1.1
log
@new unit
New file.
@
text
@d3 40
a55 3
PATH=../../tools:$PATH
export PATH

d71 1
a71 1
     expand foreign.sml | remove_src_hdr.sh > $ptmp1
d99 1
a99 1
     flatten interface buildlist
@
