head	1.8;
access;
symbols
	MLW_daveb_inline_1_4_99:1.8.3
	MLWorks_21c0_1999_03_25:1.8
	MLWorks_20c1_1998_08_20:1.8
	MLWorks_20c0_1998_08_04:1.8
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.8
	MLWorks_20b1c1_1998_05_07:1.8
	MLWorks_20b0_1998_04_07:1.8
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_workspace_97:1.8.2
	MLWorks_dt_wizard:1.8.1
	MLWorks_10r3:1.7.5.1.3
	MLWorks_10r2_551:1.7.5.1.2
	MLWorks_11:1.7.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.7.5.1
	MLWorks_20m0_1997_06_20:1.8
	MLWorks_1_0_r2c2_1997_06_14:1.7.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.7.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.7.5
	MLWorks_BugFix_1997_04_24:1.7
	MLWorks_1_0_r2_Win32_1997_04_11:1.7
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.3.1.1
	MLWorks_gui_1996_12_18:1.7.4
	MLWorks_1_0_Win32_1996_12_17:1.7.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.7.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.7.1.1
	MLWorks_1_0_Irix_1996_11_28:1.7.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.7.2
	MLWorks_1_0_Unix_1996_11_14:1.7.1
	MLWorks_Open_Beta2_1996_10_11:1.4.2
	MLWorks_License_dev:1.4.1
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3;
locks; strict;
comment	@ *  @;


1.8
date	97.05.21.16.54.31;	author jont;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1;
next	1.7;

1.7
date	96.11.06.12.16.40;	author matthew;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1
	1.7.5.1;
next	1.6;

1.6
date	96.11.04.17.03.51;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	96.10.23.16.21.03;	author io;	state Exp;
branches;
next	1.4;

1.4
date	96.09.20.14.48.50;	author io;	state Exp;
branches
	1.4.1.1
	1.4.2.1;
next	1.3;

1.3
date	96.05.28.09.20.24;	author jont;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	96.05.22.13.38.18;	author brianm;	state Exp;
branches;
next	1.1;

1.1
date	96.05.19.11.46.36;	author brianm;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.12.03;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	96.10.07.16.02.46;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.17.11.21.01;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	96.11.14.12.44.43;	author hope;	state Exp;
branches
	1.7.1.1.1.1;
next	;

1.7.1.1.1.1
date	96.11.28.14.56.40;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.11.22.18.05.09;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.12.17.17.44.04;	author hope;	state Exp;
branches
	1.7.3.1.1.1;
next	;

1.7.3.1.1.1
date	97.02.24.11.33.22;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	96.12.18.09.38.02;	author hope;	state Exp;
branches;
next	;

1.7.5.1
date	97.05.12.10.30.19;	author hope;	state Exp;
branches
	1.7.5.1.1.1
	1.7.5.1.2.1
	1.7.5.1.3.1;
next	;

1.7.5.1.1.1
date	97.07.28.18.16.30;	author daveb;	state Exp;
branches;
next	;

1.7.5.1.2.1
date	97.09.08.17.10.04;	author daveb;	state Exp;
branches;
next	;

1.7.5.1.3.1
date	97.09.09.14.05.33;	author daveb;	state Exp;
branches;
next	;

1.8.1.1
date	97.09.10.19.19.57;	author brucem;	state Exp;
branches;
next	;

1.8.2.1
date	97.09.11.20.51.09;	author daveb;	state Exp;
branches;
next	;

1.8.3.1
date	99.04.01.17.54.51;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Renamed file.
@


1.8
log
@[Bug #30090]
Replace MLWorks.IO with TextIO where applicable
@
text
@(*  ==== FOREIGN INTERFACE : UTILITIES ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Implementation
 *  --------------
 *
 *  Revision Log
 *  ------------
 *  $Log: __utils.sml,v $
 *  Revision 1.7  1996/11/06  12:16:40  matthew
 *  [Bug #1728]
 *  __integer becomes __int
 *
 *  Revision 1.6  1996/11/04  17:03:51  jont
 *  [Bug #1725]
 *  Remove unsafe string operations introduced when String structure removed
 *
 *  Revision 1.5  1996/10/23  16:21:03  io
 *  current naming conventions
 *
 *  Revision 1.4  1996/09/20  14:48:50  io
 *  [Bug #1603]
 *  convert ByteArray to Internal.ByteArray
 *
 *  Revision 1.3  1996/05/28  09:20:24  jont
 *  Fix bad reference to MLWorks.Bits
 *
 *  Revision 1.2  1996/05/22  13:38:18  brianm
 *  Beta release modifications.
 *
 *  Revision 1.1  1996/05/19  11:46:38  brianm
 *  new unit
 *  Renamed file.
 *
 * Revision 1.9  1996/05/17  09:56:49  matthew
 * Moved Bits to MLWorks.Internal
 *
 * Revision 1.8  1996/05/01  11:39:24  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
 * Revision 1.7  1996/04/30  14:51:47  matthew
 * Removing MLWorks.Integer
 *
 * Revision 1.6  1996/04/18  17:06:56  jont
 * initbasis becomes basis
 *
 * Revision 1.5  1996/02/14  16:51:29  brianm
 * Additions to allow for different data repn's (e.g. endianness).
 *
 *  Revision 1.4  1995/09/12  10:39:29  daveb
 *  Changed name of run-time function.
 *
 *  Revision 1.3  1995/09/09  13:29:38  brianm
 *  Further modification for updates and general reorganisation.
 *
 *  Revision 1.2  1995/06/25  14:18:20  brianm
 *  Adding remote access, diagnostics and other facilities.
 *
 *  Revision 1.1  1995/04/25  11:40:13  brianm
 *  new unit
 *  New file.
 *
 *
 *)

require "../basis/__int";
require "../basis/__string";
require "types";
require "__types";
require "utils";


structure ForeignUtils_ : FOREIGN_UTILS =
   struct

      structure FITypes : FOREIGN_TYPES = ForeignTypes_

      structure Bits = MLWorks.Internal.Bits

      open FITypes

      structure ByteArray = MLWorks.Internal.ByteArray

   (* Mapping *)

      val MLWcast         =  MLWorks.Internal.Value.cast : 'a -> 'b
      val MLWenvironment  =  MLWorks.Internal.Runtime.environment;

      fun env s = MLWcast(MLWenvironment s);
      
      (* ByteArray operations *)

      val bytearray     =  ByteArray.array

      val sub_bytearray =  ByteArray.subarray
      val to_list       =  ByteArray.to_list
      val sub_ba        =  MLWorks.Internal.Value.unsafe_bytearray_sub
      val update_ba     =  MLWorks.Internal.Value.unsafe_bytearray_update
      val copy_ba'      =  ByteArray.copy
      val copy_ba  =
          fn (src,src_st,len,tgt,tgt_st) =>
             copy_ba'(src,src_st,src_st+len,tgt,tgt_st)

      (* Word32 Operators *)

      val word32_repn   : word32 -> bytearray  =  env "word32 word to bytearray";
      val word32_abstr  : bytearray -> word32  =  env "word32 bytearray to word";

      (* Bit operators *)

      val rshift  =  Bits.rshift
      val andb    =  Bits.andb
      val lshift  =  Bits.lshift

   (* Implementation auxiliaries *)

      fun mask_lower(i) = andb(i,255)

      fun get_upper_bits(i) = rshift(i,8)


   (* Exported Definitions *)


      (* Deferred elements *)

      type 'a box =  'a option ref

      fun getBox(df)       = valOf(!df)
      fun setBox(rval)(a)  = rval := SOME(a)

      fun extractBox(rval)     = !rval
      fun updateBox(rval)(optv) = rval := optv 

      fun resetBox(rval)   = rval := NONE

      fun newBox(rval)     = ref(!rval)
      fun makeBox(v)           = ref(SOME(v))
      fun voidBox()            = ref(NONE)

      fun someBox(rval)    = isSome(!rval)


      fun disp view_fn x =
	let
	  val str = view_fn(x)
	in
	  print str;
	  x
	end

      fun sep_items sep =
	  let fun doit(x::y,r) = doit(y,x::sep::r)
		| doit([],r) = rev r
	  in
              fn []       => []
               | (h :: t) => doit(t,[h])
	  end

      fun term_items sep =
	  let fun doit(x::y,r) = doit(y,x::sep::r)
		| doit([],r) = rev (sep :: r)
	  in
              fn []       => []
               | (h :: t) => doit(t,[h])
	  end


      local

	 (* integer mapping - standard byte order *)
	 fun int_to_bytearray{src,len,arr=ba,st} =
	     let fun doit(k,idx,n) =
		     if (k < 1) then () else
		     let val lwb = mask_lower(n)
			 val upb = get_upper_bits(n)
		     in
		       update_ba(ba,idx,lwb);
		       doit(k-1,idx-1,upb)
		     end
	     in
		 doit(len,st+len-1,src)
	     end

	fun bytearray_to_int{arr=ba,st,len} =
	    let fun doit(k,idx,v) =
		    if (k < 1) then v else
		    let val lwb = sub_ba(ba,idx)
			val new_v = lshift(v,8) + lwb
		    in
			doit(k-1,idx+1,new_v)
		    end
	    in
		doit(len,st,0)
	    end

	 (* integer mapping - reversed byte order *)
	 fun int_to_bytearray_rev{src,len,arr=ba,st} =
	     let fun doit(k,idx,n) =
		     if (k < 1) then () else
		     let val lwb = mask_lower(n)
			 val upb = get_upper_bits(n)
		     in
		       update_ba(ba,idx,lwb);
		       doit(k-1,idx+1,upb)
		     end
	     in
		 doit(len,st,src)
	     end

	fun bytearray_to_int_rev{arr=ba,st,len} =
	    let fun doit(k,idx,v) =
		    if (k < 1) then v else
		    let val lwb = sub_ba(ba,idx)
			val new_v = lshift(v,8) + lwb
		    in
			doit(k-1,idx-1,new_v)
		    end
	    in
		doit(len,st+len-1,0)
	    end

     in
        val is_big_endian : bool = (env "big endian flag" ())

        val int_to_bytearray =
            if is_big_endian then int_to_bytearray
                             else int_to_bytearray_rev
 
        val bytearray_to_int =
            if is_big_endian then bytearray_to_int
                             else bytearray_to_int_rev
     end

     fun string_to_bytearray{src=str,arr=ba,st} =
         let val size' = size(str) - 1
             fun doit(k,idx) =
                 if (k < 0) then () else
                 let val byte = ord(String.sub(str,k))
                 in
                   update_ba(ba,idx,byte);
                   doit(k-1,idx-1)
                 end
         in
             doit(size',st+size')
         end
         
     fun bytearray_to_string{arr=ba,st,len} =
       let
	 val len' = len - 1
	 fun doit(k, idx, acc) =
	   if (k < 0) then
	     String.implode acc
	   else
	     let
	       val byte = sub_ba(ba,idx)
	     in
	       doit(k-1, idx-1, chr byte :: acc)
	     end
       in
	 doit(len', st+len', [])
       end

     fun word32_to_bytearray{src=wd,arr=ba,st} =
         let val src_ba = word32_repn( wd )
         in
             copy_ba(src_ba,0,4,ba,st)
         end

     fun bytearray_to_word32{arr=ba,st} =
         let val wd_repn = bytearray(4,0)
         in
           copy_ba(ba,st,4,wd_repn,0);
           word32_abstr( wd_repn )
         end

     local
        val a = ord #"A"

        fun hex_digit(i) =
            if 0 <= i andalso i <= 9 then
	      Int.toString i
	    else
	      (str o chr) (a + (i-10))

        fun hex_byte(i,strl) =
            let val hi = andb(rshift(i,4),15)
                val lo = andb(i,15)
            in
                hex_digit(lo) :: hex_digit(hi) :: strl
            end

        fun hex_byte'(i,strl) =
            let val hi = andb(rshift(i,4),15)
                val lo = andb(i,15)
            in
                " " :: hex_digit(lo) :: hex_digit(hi) :: strl
            end

        fun loop(f) =
            let fun doit([],strl)   = strl
	          | doit(i::l,strl) = doit(l, f(i,strl))
            in
                doit
            end
     in
	fun word32_to_hex (wd) =
            let val loopf = loop hex_byte
                val ba    = word32_repn(wd)
                val data  = loopf(to_list(ba),["x", "0"])
            in
                concat (rev data)
            end

	fun bytearray_to_hex {arr,st,len} =
            let val loopf = loop hex_byte'
                val ba    = sub_bytearray(arr,st,st+len)
                val data  = loopf(to_list(ba),[])
            in
                if data = nil then
		  ""
		else
		  (concat o rev o tl) data
            end
     end

     local
       val peek_mem : (address * bytearray * int * int) -> unit = 
             env "bytearray peek memory"
     in
       fun peek_memory {loc, arr, start, len} =
             peek_mem(loc,arr,start,len)
             handle _ => raise Fail("peek_memory")
     end
   end;
@


1.8.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a10 4
 *  Revision 1.8  1997/05/21  16:54:31  jont
 *  [Bug #30090]
 *  Replace MLWorks.IO with TextIO where applicable
 *
@


1.8.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a10 4
 *  Revision 1.8  1997/05/21  16:54:31  jont
 *  [Bug #30090]
 *  Replace MLWorks.IO with TextIO where applicable
 *
@


1.8.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a10 4
 *  Revision 1.8  1997/05/21  16:54:31  jont
 *  [Bug #30090]
 *  Replace MLWorks.IO with TextIO where applicable
 *
@


1.7
log
@[Bug #1728]
__integer becomes __int
@
text
@d11 4
d149 6
a154 5
          let val str = view_fn(x)
          in
              MLWorks.IO.output(MLWorks.IO.std_out,str);
	      x
          end
@


1.7.5.1
log
@branched from 1.7
@
text
@a10 4
 *  Revision 1.7  1996/11/06  12:16:40  matthew
 *  [Bug #1728]
 *  __integer becomes __int
 *
@


1.7.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a10 3
 *  Revision 1.7.5.1  1997/05/12  10:30:19  hope
 *  branched from 1.7
 *
@


1.7.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a10 3
 *  Revision 1.7.5.1  1997/05/12  10:30:19  hope
 *  branched from 1.7
 *
@


1.7.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a10 3
 *  Revision 1.7.5.1  1997/05/12  10:30:19  hope
 *  branched from 1.7
 *
@


1.7.4.1
log
@branched from 1.7
@
text
@a10 4
 *  Revision 1.7  1996/11/06  12:16:40  matthew
 *  [Bug #1728]
 *  __integer becomes __int
 *
@


1.7.3.1
log
@branched from 1.7
@
text
@a10 4
 *  Revision 1.7  1996/11/06  12:16:40  matthew
 *  [Bug #1728]
 *  __integer becomes __int
 *
@


1.7.3.1.1.1
log
@branched from 1.7.3.1
@
text
@a10 3
 *  Revision 1.7.3.1  1996/12/17  17:44:04  hope
 *  branched from 1.7
 *
@


1.7.2.1
log
@branched from 1.7
@
text
@a10 4
 *  Revision 1.7  1996/11/06  12:16:40  matthew
 *  [Bug #1728]
 *  __integer becomes __int
 *
@


1.7.1.1
log
@branched from 1.7
@
text
@a10 4
 *  Revision 1.7  1996/11/06  12:16:40  matthew
 *  [Bug #1728]
 *  __integer becomes __int
 *
@


1.7.1.1.1.1
log
@branched from 1.7.1.1
@
text
@a10 3
 *  Revision 1.7.1.1  1996/11/14  12:44:43  hope
 *  branched from 1.7
 *
@


1.6
log
@[Bug #1725]
Remove unsafe string operations introduced when String structure removed
@
text
@d11 4
d66 2
a67 1
require "../basis/__integer";
@


1.5
log
@current naming conventions
@
text
@d11 3
a98 5
      val sub_s         =  MLWorks.Internal.Value.unsafe_string_sub
      val update_s      =  MLWorks.Internal.Value.unsafe_string_update
      val alloc_string  =  MLWorks.Internal.Value.alloc_string


d233 1
a233 1
                 let val byte = sub_s(str,k)
d243 14
a256 13
         let val str = alloc_string(len+1)
             val len' = len - 1
             fun doit(k,idx) =
                 if (k < 0) then str else
                 let val byte = sub_ba(ba,idx)
                 in
                   update_s(str,k,byte);
                   doit(k-1,idx-1)
                 end
         in
           doit(len',st+len');
           str
         end
@


1.4
log
@[Bug #1603]
convert ByteArray to Internal.ByteArray
@
text
@d11 4
a59 5
require "../basis/__general";
require "../utils/lists";

require "../utils/__lists";

a68 1
      structure Lists   : LISTS         = Lists_
a72 1
      open General
a99 2
      val int_string    =  Int.toString

a111 2
      val tl      =  Lists.tl

a125 2
      val valOf = General.valOf

d273 1
a273 1
        val a = String.ord("A")
d276 4
a279 3
            if 0 <= i andalso i <= 9
            then int_string(i)
            else String.chr(a + (i - 10))
d307 1
a307 1
                String.implode(rev(data))
d315 4
a318 2
                if data = nil then "" else
                String.implode(rev(tl(data)))
@


1.4.2.1
log
@branched from 1.4
@
text
@a10 4
 *  Revision 1.4  1996/09/20  14:48:50  io
 *  [Bug #1603]
 *  convert ByteArray to Internal.ByteArray
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a10 4
 *  Revision 1.4  1996/09/20  14:48:50  io
 *  [Bug #1603]
 *  convert ByteArray to Internal.ByteArray
 *
@


1.3
log
@Fix bad reference to MLWorks.Bits
@
text
@d11 3
d77 1
a77 1
      structure ByteArray = MLWorks.ByteArray
@


1.3.1.1
log
@branched from 1.3
@
text
@a10 3
 *  Revision 1.3  1996/05/28  09:20:24  jont
 *  Fix bad reference to MLWorks.Bits
 *
@


1.2
log
@Beta release modifications.
@
text
@d10 4
a13 1
 *  $Log: _utils.sml,v $
d69 1
a69 1
      structure Bits = MLWorks.Bits
@


1.1
log
@new unit
Renamed file.
@
text
@d10 28
a37 3
 *  $Log: __utils.sml,v $
 * Revision 1.2  1995/06/24  19:06:47  brianm
 * Adding FI diagnostics, more facilities including remote access.
d39 4
a42 1
 *  Revision 1.1  1995/04/25  11:27:23  brianm
d49 4
d54 2
a55 1
require "_utils";
d57 232
d290 6
d297 14
a310 1
structure ForeignUtils_ = ForeignUtils(
d312 9
a320 2
     structure FITypes = ForeignTypes_
     structure Lists   = Lists_
d322 9
a330 1
);
@
