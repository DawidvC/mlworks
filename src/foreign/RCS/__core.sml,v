head	1.3;
access;
symbols
	MLW_daveb_inline_1_4_99:1.3.8
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_workspace_97:1.3.7
	MLWorks_dt_wizard:1.3.6
	MLWorks_10r3:1.3.5.1.3
	MLWorks_10r2_551:1.3.5.1.2
	MLWorks_11:1.3.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.5.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.5
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.3.1.1
	MLWorks_gui_1996_12_18:1.3.4
	MLWorks_1_0_Win32_1996_12_17:1.3.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.1.1
	MLWorks_1_0_Irix_1996_11_28:1.3.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.2
	MLWorks_1_0_Unix_1996_11_14:1.3.1
	MLWorks_Open_Beta2_1996_10_11:1.2.3
	MLWorks_License_dev:1.2.2
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ *  @;


1.3
date	96.05.20.20.39.47;	author io;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1;
next	1.2;

1.2
date	96.05.20.20.39.47;	author brianm;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1;
next	1.1;

1.1
date	96.05.19.11.46.35;	author brianm;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.12.30;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.10.07.16.03.13;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.17.11.21.29;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	96.11.14.12.45.15;	author hope;	state Exp;
branches
	1.3.1.1.1.1;
next	;

1.3.1.1.1.1
date	96.11.28.14.57.09;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.11.22.18.05.47;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.12.17.17.44.33;	author hope;	state Exp;
branches
	1.3.3.1.1.1;
next	;

1.3.3.1.1.1
date	97.02.24.11.33.57;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.12.18.09.38.32;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	97.05.12.10.30.51;	author hope;	state Exp;
branches
	1.3.5.1.1.1
	1.3.5.1.2.1
	1.3.5.1.3.1;
next	;

1.3.5.1.1.1
date	97.07.28.18.15.39;	author daveb;	state Exp;
branches;
next	;

1.3.5.1.2.1
date	97.09.08.17.09.12;	author daveb;	state Exp;
branches;
next	;

1.3.5.1.3.1
date	97.09.09.14.04.20;	author daveb;	state Exp;
branches;
next	;

1.3.6.1
date	97.09.10.19.18.47;	author brucem;	state Exp;
branches;
next	;

1.3.7.1
date	97.09.11.20.49.55;	author daveb;	state Exp;
branches;
next	;

1.3.8.1
date	99.04.01.17.53.34;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Renamed file.
@


1.3
log
@[Bug #1547]
[Bug #1547]
current naming conventions
@
text
@(*  ==== FOREIGN INTERFACE : CORE INTERFACE ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Implementation
 *  --------------
 *  The implementation uses Word values of appropriate size to
 *  represent addresses and memory pointers.  The interface is
 *  provided via the libdl conformant C library provided by the
 *  underlying OS (see rts/foreign_loader.h and
 *  also rts/OS/*/arch/*/foreign_loader.c).
 *
 *  Revision Log
 *  ------------
 *  $Log: __core.sml,v $
 *  Revision 1.2  1996/05/20  20:39:47  brianm
 *  Beta release modifications.
 *
 *  Revision 1.1  1996/05/19  11:46:37  brianm
 *  new unit
 *  Renamed file.
 *
 * Revision 1.3  1996/03/20  15:06:16  matthew
 * Language revision
 *
 * Revision 1.2  1995/05/03  19:28:49  brianm
 * Updated due to changes of low-level libdl interface.
 * Changed construction of list_content - string list is now
 * built inside ML not C (for GC safety).
 * Also added a load_mode flag to load_object ...
 *
 * Revision 1.1  1995/03/27  15:31:12  brianm
 * new unit
 * Core Foreign interface (was _foreign_interface.sml).
#
 *  Revision 1.3  1995/03/24  15:31:14  brianm
 *  Updated to use Word32.word values (instead of int * int) to
 *  encode addresses.
 * 
 *  Revision 1.2  1995/03/08  14:22:13  brianm
 *  Minor corrections.
 * 
 *  Revision 1.1  1995/03/01  11:02:10  brianm
 *  new unit
 *  Foreign Interface functor body.
 * 
 *
 *)

require "types";
require "__types";

require "core";

structure ForeignCore_ : FOREIGN_CORE =
  struct

    structure FITypes : FOREIGN_TYPES = ForeignTypes_
    structure FITypes = FITypes
    open FITypes

  (* Mapping *)

    val MLWcast         = MLWorks.Internal.Value.cast
    val MLWenvironment  = MLWorks.Internal.Runtime.environment

    val env = MLWenvironment


  (* Implementation auxiliaries *)

    exception Unavailable   

    local

       val open_symtab_file  : string -> bool  =  env "open symtab file";
       val next_symtab_entry : unit -> string  =  env "next symtab entry";
       val close_symtab_file : unit -> unit    =  env "close symtab file";

    in

       fun get_item_list(sofar) =
           let val next = next_symtab_entry()
           in
             if next = "" then sofar
                          else get_item_list(next :: sofar)
           end

       fun get_symtab(file) =
           let val check = open_symtab_file(file)
           in
               if check
               then let val content = get_item_list([])
                    in
                      close_symtab_file();
                      content
                    end
               else raise Unavailable
           end
    end


  (* Exported definitions *)

    datatype load_mode = LOAD_LATER | LOAD_NOW

    abstype foreign_object = FOBJ of (string * (string list) * address)
    with
        val load_foreign_object : (string * load_mode) -> address
            =  env "load foreign object"

        fun load_object(s:string,lm:load_mode) =
            let val mem    = load_foreign_object(s,lm)
                val symtab = get_symtab(s)
            in
                FOBJ(s,symtab,mem)
            end

        fun list_content (FOBJ(_,obj_lst,_)) = obj_lst;  
    end

    abstype foreign_value  = FVAL of word32
    with

       val find_value  : (foreign_object * string) -> foreign_value
           =  env "lookup foreign value"
  
       val call_unit_fun : foreign_value -> unit
           =  env "call unit function"

       val call_foreign_fun : (foreign_value * address * int * address) -> unit 
           =  env "call foreign function"

    end

  end;
@


1.3.8.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a15 5
 *  Revision 1.3  1996/05/20  20:39:47  io
 *  [Bug #1547]
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.3.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a15 5
 *  Revision 1.3  1996/05/20  20:39:47  io
 *  [Bug #1547]
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.3.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a15 5
 *  Revision 1.3  1996/05/20  20:39:47  io
 *  [Bug #1547]
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a15 5
 *  Revision 1.3  1996/05/20  20:39:47  io
 *  [Bug #1547]
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.3.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a15 3
 *  Revision 1.3.5.1  1997/05/12  10:30:51  hope
 *  branched from 1.3
 *
@


1.3.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a15 3
 *  Revision 1.3.5.1  1997/05/12  10:30:51  hope
 *  branched from 1.3
 *
@


1.3.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a15 3
 *  Revision 1.3.5.1  1997/05/12  10:30:51  hope
 *  branched from 1.3
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a15 5
 *  Revision 1.3  1996/05/20  20:39:47  io
 *  [Bug #1547]
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a15 5
 *  Revision 1.3  1996/05/20  20:39:47  io
 *  [Bug #1547]
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.3.3.1.1.1
log
@branched from 1.3.3.1
@
text
@a15 3
 *  Revision 1.3.3.1  1996/12/17  17:44:33  hope
 *  branched from 1.3
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a15 5
 *  Revision 1.3  1996/05/20  20:39:47  io
 *  [Bug #1547]
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a15 5
 *  Revision 1.3  1996/05/20  20:39:47  io
 *  [Bug #1547]
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.3.1.1.1.1
log
@branched from 1.3.1.1
@
text
@a15 3
 *  Revision 1.3.1.1  1996/11/14  12:45:15  hope
 *  branched from 1.3
 *
@


1.2
log
@Beta release modifications.
@
text
@d15 4
a18 1
 *  $Log: _core.sml,v $
@


1.2.3.1
log
@branched from 1.2
@
text
@d15 1
a15 4
 *  $Log: __core.sml,v $
 *  Revision 1.2  1996/05/20  20:39:47  brianm
 *  Beta release modifications.
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@d15 1
a15 4
 *  $Log: __core.sml,v $
 *  Revision 1.2  1996/05/20  20:39:47  brianm
 *  Beta release modifications.
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@d15 1
a15 4
 *  $Log: __core.sml,v $
 *  Revision 1.2  1996/05/20  20:39:47  brianm
 *  Beta release modifications.
 *
@


1.1
log
@new unit
Renamed file.
@
text
@d3 9
a11 1
 *  Copyright (C) 1995 Harlequin Ltd
d15 17
a31 7
 *  $Log: __core.sml,v $
 * Revision 1.2  1995/05/03  19:28:38  brianm
 * Adding FITypes dependency ...
 *
# Revision 1.1  1995/03/27  15:33:36  brianm
# new unit
# Core Foreign interface (was __foreign_interface.sml)
d33 8
a40 1
 *  Revision 1.1  1995/03/01  11:03:00  brianm
d42 1
a42 1
 *  Foreign Interface Implementation.
d47 1
a47 1
require "_core";
d50 80
a129 1
structure ForeignCore_ = ForeignCore(
d131 1
a131 1
     structure FITypes = ForeignTypes_
d133 1
a133 1
);
@
