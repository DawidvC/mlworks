head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.8
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.5.1.1.1.1
	MLWorks_workspace_97:1.4.7
	MLWorks_dt_wizard:1.4.6
	MLWorks_11c0_1997_09_09:1.4.5.1.1.1
	MLWorks_10r3:1.4.5.1.3
	MLWorks_10r2_551:1.4.5.1.2
	MLWorks_11:1.4.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.5.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.5
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.3.1.1
	MLWorks_gui_1996_12_18:1.4.4
	MLWorks_1_0_Win32_1996_12_17:1.4.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.1.1
	MLWorks_1_0_Irix_1996_11_28:1.4.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.2
	MLWorks_1_0_Unix_1996_11_14:1.4.1
	MLWorks_Open_Beta2_1996_10_11:1.3.2
	MLWorks_License_dev:1.3.1
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ *  @;


1.4
date	96.10.25.12.33.22;	author io;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1
	1.4.8.1;
next	1.3;

1.3
date	96.09.20.14.48.55;	author io;	state Exp;
branches
	1.3.1.1
	1.3.2.1;
next	1.2;

1.2
date	96.05.22.12.37.04;	author brianm;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	96.05.19.13.59.10;	author brianm;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.12.24;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	96.10.07.16.03.06;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.17.11.21.23;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	96.11.14.12.45.09;	author hope;	state Exp;
branches
	1.4.1.1.1.1;
next	;

1.4.1.1.1.1
date	96.11.28.14.57.03;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.11.22.18.05.39;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.12.17.17.44.27;	author hope;	state Exp;
branches
	1.4.3.1.1.1;
next	;

1.4.3.1.1.1
date	97.02.24.11.33.50;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.12.18.09.38.25;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	97.05.12.10.30.43;	author hope;	state Exp;
branches
	1.4.5.1.1.1
	1.4.5.1.2.1
	1.4.5.1.3.1;
next	;

1.4.5.1.1.1
date	97.07.28.18.16.21;	author daveb;	state Exp;
branches
	1.4.5.1.1.1.1.1;
next	;

1.4.5.1.1.1.1.1
date	97.10.07.11.41.15;	author jkbrook;	state Exp;
branches;
next	;

1.4.5.1.2.1
date	97.09.08.17.09.54;	author daveb;	state Exp;
branches;
next	;

1.4.5.1.3.1
date	97.09.09.14.05.22;	author daveb;	state Exp;
branches;
next	;

1.4.6.1
date	97.09.10.19.19.42;	author brucem;	state Exp;
branches;
next	;

1.4.7.1
date	97.09.11.20.50.53;	author daveb;	state Exp;
branches;
next	;

1.4.8.1
date	99.04.01.17.54.36;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Renamed file.
@


1.4
log
@[Bug #1547]
current naming conventions
@
text
@(*  ==== FOREIGN INTERFACE : COMMON TYPES ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This contains various common type declarations used thoughout the
 *  common layers of the FI and other interfaces.  Use of this was
 *  forced since sharing constraints can only refer to typenames.  The
 *  names provided here enable the sharing constraints to be required
 *  early in signatures, so simplifying later constraints.
 *
 *  Revision Log
 *  ------------
 *  $Log: types.sml,v $
 *  Revision 1.3  1996/09/20  14:48:55  io
 *  [Bug #1603]
 *  convert ByteArray to Internal.ByteArray
 *
 *  Revision 1.2  1996/05/22  12:37:04  brianm
 *  Beta release modifications.
 *
 *  Revision 1.1  1996/05/19  13:59:10  brianm
 *  new unit
 *  Renamed file.
 *
 * Revision 1.5  1996/04/18  16:59:50  jont
 * initbasis becomes basis
 *
 * Revision 1.4  1996/03/28  12:55:09  matthew
 * New sharing syntax etc.
 *
 * Revision 1.3  1995/09/07  22:43:44  brianm
 * Modifications for reorganisation & documentation.
 *
 *  Revision 1.2  1995/07/18  12:41:05  brianm
 *  Changing names of deferred data-type operators (stream-edit)
 *
 *  Revision 1.1  1995/04/25  11:50:05  brianm
 *  new unit
 *  New file.
 *
 *
 *)

require "^.basis.__word32";
require "^.basis.__word8";

signature FOREIGN_TYPES =
   sig

      type 'a option = 'a option

      type word8 = Word8.word

      type word32 = Word32.word

      type address = word32

      type bytearray = MLWorks.Internal.ByteArray.bytearray

      type name = string

      type filename = string

   (* some debugging tools *)

      val debugP : string -> 'a -> 'a

   end (* signature FOREIGN_TYPES *)
@


1.4.8.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a15 4
 *  Revision 1.4  1996/10/25  12:33:22  io
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.4.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a15 4
 *  Revision 1.4  1996/10/25  12:33:22  io
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.4.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a15 4
 *  Revision 1.4  1996/10/25  12:33:22  io
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.4.5.1
log
@branched from 1.4
@
text
@a15 4
 *  Revision 1.4  1996/10/25  12:33:22  io
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.4.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a15 3
 *  Revision 1.4.5.1  1997/05/12  10:30:43  hope
 *  branched from 1.4
 *
@


1.4.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a15 3
 *  Revision 1.4.5.1  1997/05/12  10:30:43  hope
 *  branched from 1.4
 *
@


1.4.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a15 3
 *  Revision 1.4.5.1  1997/05/12  10:30:43  hope
 *  branched from 1.4
 *
@


1.4.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a15 3
 *  Revision 1.4.5.1.1.1  1997/07/28  18:16:21  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a15 4
 *  Revision 1.4  1996/10/25  12:33:22  io
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a15 4
 *  Revision 1.4  1996/10/25  12:33:22  io
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.4.3.1.1.1
log
@branched from 1.4.3.1
@
text
@a15 3
 *  Revision 1.4.3.1  1996/12/17  17:44:27  hope
 *  branched from 1.4
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a15 4
 *  Revision 1.4  1996/10/25  12:33:22  io
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a15 4
 *  Revision 1.4  1996/10/25  12:33:22  io
 *  [Bug #1547]
 *  current naming conventions
 *
@


1.4.1.1.1.1
log
@branched from 1.4.1.1
@
text
@a15 3
 *  Revision 1.4.1.1  1996/11/14  12:45:09  hope
 *  branched from 1.4
 *
@


1.3
log
@[Bug #1603]
convert ByteArray to Internal.ByteArray
@
text
@d16 4
d46 2
a47 3
require "../basis/__general";
require "../basis/__word32";  
require "../basis/__word8";
d52 1
a52 1
      type 'a option = 'a General.option
@


1.3.2.1
log
@branched from 1.3
@
text
@a15 4
 *  Revision 1.3  1996/09/20  14:48:55  io
 *  [Bug #1603]
 *  convert ByteArray to Internal.ByteArray
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a15 4
 *  Revision 1.3  1996/09/20  14:48:55  io
 *  [Bug #1603]
 *  convert ByteArray to Internal.ByteArray
 *
@


1.2
log
@Beta release modifications.
@
text
@d16 3
d57 1
a57 1
      type bytearray = MLWorks.ByteArray.bytearray
@


1.2.1.1
log
@branched from 1.2
@
text
@a15 3
 *  Revision 1.2  1996/05/22  12:37:04  brianm
 *  Beta release modifications.
 *
@


1.1
log
@new unit
Renamed file.
@
text
@d16 4
a58 20


      datatype 'a box =  of ('a option ref)

      (* Operations for box values *)

      val someBox    :  'a box -> bool

      val getBox     :  'a box -> 'a
      val setBox     :  'a box -> 'a -> unit

      val extractBox :  'a box -> 'a option
      val updateBox  :  'a box -> 'a option -> unit

      val resetBox   :  'a box -> unit

      val makeBox    :  'a -> 'a box
      val newBox     :  'a box -> 'a box

      val voidBox    :  unit -> 'a box
@
