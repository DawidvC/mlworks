head	1.3;
access;
symbols
	MLW_daveb_inline_1_4_99:1.3.8
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_11r1:1.3.5.1.1.1.1
	MLWorks_workspace_97:1.3.7
	MLWorks_dt_wizard:1.3.6
	MLWorks_11c0_1997_09_09:1.3.5.1.1.1
	MLWorks_10r3:1.3.5.1.3
	MLWorks_10r2_551:1.3.5.1.2
	MLWorks_11:1.3.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.5.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.5
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.3.1.1
	MLWorks_gui_1996_12_18:1.3.4
	MLWorks_1_0_Win32_1996_12_17:1.3.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.1.1
	MLWorks_1_0_Irix_1996_11_28:1.3.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.2
	MLWorks_1_0_Unix_1996_11_14:1.3.1
	MLWorks_Open_Beta2_1996_10_11:1.2.3
	MLWorks_License_dev:1.2.2
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ *  @;


1.3
date	96.10.25.12.35.28;	author io;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1;
next	1.2;

1.2
date	96.05.22.13.45.57;	author brianm;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1;
next	1.1;

1.1
date	96.05.19.13.59.09;	author brianm;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.12.07;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.10.07.16.02.50;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.17.11.21.05;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	96.11.14.12.44.47;	author hope;	state Exp;
branches
	1.3.1.1.1.1;
next	;

1.3.1.1.1.1
date	96.11.28.14.56.44;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.11.22.18.05.15;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.12.17.17.44.08;	author hope;	state Exp;
branches
	1.3.3.1.1.1;
next	;

1.3.3.1.1.1
date	97.02.24.11.33.27;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.12.18.09.38.06;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	97.05.12.10.30.24;	author hope;	state Exp;
branches
	1.3.5.1.1.1
	1.3.5.1.2.1
	1.3.5.1.3.1;
next	;

1.3.5.1.1.1
date	97.07.28.18.16.22;	author daveb;	state Exp;
branches
	1.3.5.1.1.1.1.1;
next	;

1.3.5.1.1.1.1.1
date	97.10.07.11.41.15;	author jkbrook;	state Exp;
branches;
next	;

1.3.5.1.2.1
date	97.09.08.17.09.55;	author daveb;	state Exp;
branches;
next	;

1.3.5.1.3.1
date	97.09.09.14.05.23;	author daveb;	state Exp;
branches;
next	;

1.3.6.1
date	97.09.10.19.19.43;	author brucem;	state Exp;
branches;
next	;

1.3.7.1
date	97.09.11.20.50.54;	author daveb;	state Exp;
branches;
next	;

1.3.8.1
date	99.04.01.17.54.37;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Renamed file.
@


1.3
log
@[Bug #1547]
updating for current naming conventions
@
text
@(*  ==== FOREIGN INTERFACE : FOREIGN_OBJECT ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *
 *  Revision Log
 *  ------------
 *  $Log: object.sml,v $
 *  Revision 1.2  1996/05/22  13:45:57  brianm
 *  Beta release modifications.
 *
 *  Revision 1.1  1996/05/19  13:59:09  brianm
 *  new unit
 *  Renamed file.
 *
 * Revision 1.7  1996/04/18  16:59:37  jont
 * initbasis becomes basis
 *
 * Revision 1.6  1996/03/28  13:53:18  matthew
 * Sharing constraints
 *
 * Revision 1.5  1995/09/10  15:23:13  brianm
 * Further modification for updates and general reorganisation.
 *
 * Revision 1.4  1995/06/25  18:20:58  brianm
 * Adding remote access, diagnostics and other facilities.
 *
 * Revision 1.3  1995/05/04  19:42:39  brianm
 * Removing restrictive eqtype constraints & introduce abstypes in
 * various implementing types.
 *
 * Revision 1.2  1995/04/20  14:42:33  brianm
 * General updating to reach prototype level for ML FI.
 *
 * Revision 1.1  1995/03/27  15:47:52  brianm
 * new unit
 *
 *)

require "types";
require "store";

signature FOREIGN_OBJECT =
   sig

     type 'a option = 'a option

     structure FITypes  : FOREIGN_TYPES

     type bytearray = FITypes.bytearray
     type address = FITypes.address

     structure FIStore : FOREIGN_STORE

     type store = FIStore.store

     exception ReadOnly
     exception WriteOnly

     type ('l_type) object

     datatype object_mode = LOCAL_OBJECT | REMOTE_OBJECT
     datatype object_status = PERMANENT_OBJECT | TEMPORARY_OBJECT

     exception OutOfBounds
     exception Currency

     val object : { lang_type : 'l_type,
                 size      : int,
                 status    : object_status,
                 mode      : object_mode,
                 currency  : bool,
                 store     : store } -> ('l_type) object

     val objectStatus       : ('l_type) object -> object_status

     val objectCurrency     : ('l_type) object -> bool
     val set_object_currency : ('l_type) object * bool -> unit

     val objectMode      : ('l_type) object -> object_mode
     val set_object_mode  : ('l_type) object * object_mode -> unit

     val object_type      : ('l_type) object -> 'l_type
     val set_object_type  : ('l_type) object * 'l_type -> unit

     val objectSize      : ('l_type) object -> int
     val set_object_size  : ('l_type) object * int -> unit  (* sets currency false *)
     val set_object_size' : ('l_type) object * int -> unit  (* leaves currency unchanged *)

     val object_value     : ('l_type) object * bytearray * int -> unit
     val object_value'    : ('l_type) object * bytearray * int -> unit
                         (* doesn't check currency *) 

     val set_object_value   : ('l_type) object * bytearray * int -> unit
     val copy_object_value  : { from : ('l_type) object,
                             to   : ('l_type) object } -> unit   
     val copy_object_value' : { from : ('l_type) object,
                             to   : ('l_type) object } -> unit   

     val new_object        : ('l_type) object -> ('l_type) object
     val dup_object        : ('l_type) object -> ('l_type) object
     val tmp_object        : ('l_type) object -> ('l_type) object

     val to_location    : ('l_type) object * address -> int
     val to_address     : ('l_type) object * int -> address

     val relative_location  : ('l_type) object * address -> int
     val relative_address   : ('l_type) object * int -> address
     
     val objectLocation   : ('l_type) object -> int

     val move_object       : ('l_type) object * int -> unit  (* sets currency false *)
     val offset_object     : ('l_type) object * int -> unit  (* sets currency false *)

     val move_object'      : ('l_type) object * int -> unit  (* leaves currency unchanged *)
     val offset_object'    : ('l_type) object * int -> unit  (* leaves currency unchanged *)

     val objectAddress      : ('l_type) object -> address

     val set_object_address  : ('l_type) object * address -> unit
     val set_object_address' : ('l_type) object * address -> unit
  
     val examine_object    : ('l_type) object * address -> unit


     (* Diagnostic tools *)

     val object_info : ('l_type -> 'l_info) -> ('l_type) object ->
		{ store    : store,
		  status    : string,
		  currency  : string,
		  mode      : string,
                  langtype  : 'l_info,
                  size      : int,
                  offset    : int,
                  base      : address option
                }

     val object_data         : ('l_type)object -> int list
     val object_data_hex     : ('l_type)object -> string
     val object_data_ascii   : ('l_type)object -> string


   (*
      The CURRENCY flag
      =================

      When currency flag is false, the object data is not to be trusted.
      When currency flag is true, the object data is probably valid (but may not be).

      Operations which change currency:
         set_object_currency

      Operations which set currency false:
         tmp_object, move_object, offset_object, set_object_address, set_object_size

      Operations which preserve currency:
         new_object, dup_object, move_object', offset_object', set_object_address', set_object_size',
         object_value', copy_object_value'(to)

      Operations which set currency true:
         examine_object, set_object_value, copy_object_value(to)

      Operations which _need_ currency set true:
         object_value, copy_object_value(from)
   *)

   end;  (* signature FOREIGN_OBJECT *) 
@


1.3.8.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a10 4
 *  Revision 1.3  1996/10/25  12:35:28  io
 *  [Bug #1547]
 *  updating for current naming conventions
 *
@


1.3.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a10 4
 *  Revision 1.3  1996/10/25  12:35:28  io
 *  [Bug #1547]
 *  updating for current naming conventions
 *
@


1.3.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a10 4
 *  Revision 1.3  1996/10/25  12:35:28  io
 *  [Bug #1547]
 *  updating for current naming conventions
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a10 4
 *  Revision 1.3  1996/10/25  12:35:28  io
 *  [Bug #1547]
 *  updating for current naming conventions
 *
@


1.3.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a10 3
 *  Revision 1.3.5.1  1997/05/12  10:30:24  hope
 *  branched from 1.3
 *
@


1.3.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a10 3
 *  Revision 1.3.5.1  1997/05/12  10:30:24  hope
 *  branched from 1.3
 *
@


1.3.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a10 3
 *  Revision 1.3.5.1  1997/05/12  10:30:24  hope
 *  branched from 1.3
 *
@


1.3.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a10 3
 *  Revision 1.3.5.1.1.1  1997/07/28  18:16:22  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a10 4
 *  Revision 1.3  1996/10/25  12:35:28  io
 *  [Bug #1547]
 *  updating for current naming conventions
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a10 4
 *  Revision 1.3  1996/10/25  12:35:28  io
 *  [Bug #1547]
 *  updating for current naming conventions
 *
@


1.3.3.1.1.1
log
@branched from 1.3.3.1
@
text
@a10 3
 *  Revision 1.3.3.1  1996/12/17  17:44:08  hope
 *  branched from 1.3
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a10 4
 *  Revision 1.3  1996/10/25  12:35:28  io
 *  [Bug #1547]
 *  updating for current naming conventions
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a10 4
 *  Revision 1.3  1996/10/25  12:35:28  io
 *  [Bug #1547]
 *  updating for current naming conventions
 *
@


1.3.1.1.1.1
log
@branched from 1.3.1.1
@
text
@a10 3
 *  Revision 1.3.1.1  1996/11/14  12:44:47  hope
 *  branched from 1.3
 *
@


1.2
log
@Beta release modifications.
@
text
@d11 3
a41 1
require "../basis/__general";
d48 1
a48 1
     type 'a option = 'a General.option
d77 1
a77 1
     val object_status       : ('l_type) object -> object_status
d79 1
a79 1
     val object_currency     : ('l_type) object -> bool
d82 1
a82 1
     val object_mode      : ('l_type) object -> object_mode
d88 1
a88 1
     val object_size      : ('l_type) object -> int
d112 1
a112 1
     val object_location   : ('l_type) object -> int
d120 1
a120 1
     val object_address      : ('l_type) object -> address
@


1.2.3.1
log
@branched from 1.2
@
text
@a10 3
 *  Revision 1.2  1996/05/22  13:45:57  brianm
 *  Beta release modifications.
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a10 3
 *  Revision 1.2  1996/05/22  13:45:57  brianm
 *  Beta release modifications.
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a10 3
 *  Revision 1.2  1996/05/22  13:45:57  brianm
 *  Beta release modifications.
 *
@


1.1
log
@new unit
Renamed file.
@
text
@d10 5
a14 1
 *  $Log: data.sml,v $
d73 1
a73 1
                 store    : store } -> ('l_type) object
@
