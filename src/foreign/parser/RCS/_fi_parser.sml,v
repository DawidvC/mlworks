head	1.2;
access;
symbols
	MLW_daveb_inline_1_4_99:1.2.3
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_workspace_97:1.2.2
	MLWorks_dt_wizard:1.2.1;
locks; strict;
comment	@ *  @;


1.2
date	97.08.22.10.22.49;	author brucem;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1;
next	1.1;

1.1
date	97.08.22.09.27.54;	author brucem;	state Exp;
branches;
next	;

1.2.1.1
date	97.09.10.19.19.11;	author brucem;	state Exp;
branches;
next	;

1.2.2.1
date	97.09.11.20.50.21;	author daveb;	state Exp;
branches;
next	;

1.2.3.1
date	99.04.01.17.54.00;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Functor for producing structure FIParser.
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' *  '
@
text
@(*
 * Foreign Interface Parser: Functor for final structure
 *
 * Copyright (C) 1997 The Harlequin Group Limited.  All rights reserved.
 *
 * $Log$
 *
 *)

require "fi_grm";
require "fi_abs_syntax";
require "fi_int_abs_syn";
require "lex_parse_interface";
require "fi_parser";
require "$.lib.base";
require "$.basis.__io";
require "$.basis.__text_io";
require "$.basis.__string";

functor FIParser (structure FIIntAbsSyn : FI_INT_ABS_SYN
                  structure LexParseInterface : LEX_PARSE_INTERFACE
                  structure Joined : PARSER
                    sharing type Joined.pos = LexParseInterface.pos
                    sharing type Joined.result =
                                 FIIntAbsSyn.FIAbsSyntax.declaration_list
                    sharing type Joined.arg = LexParseInterface.arg
                  structure Tokens : FI_TOKENS
                    sharing type Tokens.token = Joined.Token.token
                    sharing type Tokens.svalue = Joined.svalue ) : FI_PARSER =
struct

  structure FIAbsSyntax = FIIntAbsSyn.FIAbsSyntax

  (* This is an example for testing only, the final function(s) will
    depend on how we interface with the rest of the system. *)

  val parseFile =
    fn fName =>
    let
      val file = (TextIO.openIn fName)
                 handle _ => raise Fail "Can't open file"
      val lexer = Joined.makeLexer (fn i => TextIO.inputN (file, i))
      val (result, lexer') =
        Joined.parse(0 (* lookahead *), lexer, LexParseInterface.error,
                     LexParseInterface.arg)
      val _ = TextIO.closeIn file
    in
      result
    end
    handle Joined.ParseError =>
              (print "Parse error occurred.\n"; FIAbsSyntax.DECL_LIST [])
         | (Fail s) => (print s; FIAbsSyntax.DECL_LIST [])
         | e => (print ("Unknown Error: "^(General.exnMessage e)^"\n");
                 FIAbsSyntax.DECL_LIST [])
end@


1.2.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@d6 1
a6 5
 * $Log: parser:_fi_parser.sml,v $
 *  Revision 1.2  1997/08/22  10:22:49  brucem
 *  Automatic checkin:
 *  changed attribute _comment to ' *  '
 *
@


1.2.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@d6 1
a6 5
 * $Log: parser:_fi_parser.sml,v $
 *  Revision 1.2  1997/08/22  10:22:49  brucem
 *  Automatic checkin:
 *  changed attribute _comment to ' *  '
 *
@


1.2.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@d6 1
a6 5
 * $Log: parser:_fi_parser.sml,v $
 *  Revision 1.2  1997/08/22  10:22:49  brucem
 *  Automatic checkin:
 *  changed attribute _comment to ' *  '
 *
@


1.1
log
@new unit
Functor for producing structure FIParser.
@
text
@@
