head	1.15;
access;
symbols
	MLW_daveb_inline_1_4_99:1.15.1
	MLWorks_21c0_1999_03_25:1.15
	MLWorks_20c1_1998_08_20:1.14
	MLWorks_20c0_1998_08_04:1.14
	MLWorks_20b2c2_1998_06_19:1.14
	MLWorks_20b2_Windows_1998_06_12:1.14
	MLWorks_20b1c1_1998_05_07:1.14
	MLWorks_20b0_1998_04_07:1.14
	MLWorks_20b0_1998_03_20:1.13
	MLWorks_20m2_1998_02_16:1.13
	MLWorks_20m1_1997_10_23:1.13
	MLWorks_11r1:1.12.8.1.1.1.1
	MLWorks_workspace_97:1.13.2
	MLWorks_dt_wizard:1.13.1
	MLWorks_11c0_1997_09_09:1.12.8.1.1.1
	MLWorks_10r3:1.12.8.1.3
	MLWorks_10r2_551:1.12.8.1.2
	MLWorks_11:1.12.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.12.8.1
	MLWorks_20m0_1997_06_20:1.13
	MLWorks_1_0_r2c2_1997_06_14:1.12.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.12.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.12.8
	MLWorks_BugFix_1997_04_24:1.12
	MLWorks_1_0_r2_Win32_1997_04_11:1.12
	MLWorks_1_0_r2_Unix_1997_04_04:1.12
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.12.6.1.1
	MLWorks_gui_1996_12_18:1.12.7
	MLWorks_1_0_Win32_1996_12_17:1.12.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.12.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.12.4.1
	MLWorks_1_0_Irix_1996_11_28:1.12.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.12.5
	MLWorks_1_0_Unix_1996_11_14:1.12.4
	MLWorks_Open_Beta2_1996_10_11:1.12.3
	MLWorks_License_dev:1.12.2
	MLWorks_1_open_beta_1996_09_13:1.12.1
	MLWorks_Open_Beta_1996_08_22:1.12
	MLWorks_Beta_1996_07_02:1.12
	MLWorks_Beta_1996_06_07:1.12
	MLWorks_Beta_1996_06_06:1.12
	MLWorks_Beta_1996_06_05:1.12
	MLWorks_Beta_1996_06_03:1.12
	MLWorks_Beta_1996_05_31:1.12
	MLWorks_Beta_1996_05_30:1.12
	ML_beta_release_12/08/94:1.6
	ML_beta_release_03/08/94:1.6
	ML_revised_beta_release_25/05/94:1.6
	ML_final_beta_release_02/03/94:1.6
	mlworks-28-01-1994:1.5
	Release:1.3
	mlworks-beta-01-09-1993:1.3;
locks; strict;
comment	@ * @;


1.15
date	99.02.03.15.20.27;	author mitchell;	state Exp;
branches
	1.15.1.1;
next	1.14;

1.14
date	98.03.31.11.38.19;	author jont;	state Exp;
branches;
next	1.13;

1.13
date	97.05.01.12.20.47;	author jont;	state Exp;
branches
	1.13.1.1
	1.13.2.1;
next	1.12;

1.12
date	95.12.06.17.58.54;	author daveb;	state Exp;
branches
	1.12.1.1
	1.12.2.1
	1.12.3.1
	1.12.4.1
	1.12.5.1
	1.12.6.1
	1.12.7.1
	1.12.8.1;
next	1.11;

1.11
date	95.12.04.15.21.07;	author daveb;	state Exp;
branches;
next	1.10;

1.10
date	95.09.06.15.36.13;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	95.04.19.11.38.15;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	95.01.17.13.32.44;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	94.10.06.10.24.28;	author matthew;	state Exp;
branches;
next	1.6;

1.6
date	94.02.02.12.05.28;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	93.11.09.11.29.07;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	93.09.10.17.42.03;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	93.08.27.14.37.32;	author daveb;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	93.08.24.14.08.33;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	93.08.17.17.24.22;	author daveb;	state Exp;
branches;
next	;

1.3.1.1
date	93.08.27.14.37.32;	author jont;	state Exp;
branches;
next	1.3.1.2;

1.3.1.2
date	93.09.10.15.12.25;	author jont;	state Exp;
branches;
next	1.3.1.3;

1.3.1.3
date	93.10.22.15.44.05;	author daveb;	state Exp;
branches;
next	;

1.12.1.1
date	96.09.13.11.08.42;	author hope;	state Exp;
branches;
next	;

1.12.2.1
date	96.10.07.15.59.40;	author hope;	state Exp;
branches;
next	;

1.12.3.1
date	96.10.17.11.18.02;	author hope;	state Exp;
branches;
next	;

1.12.4.1
date	96.11.14.12.41.34;	author hope;	state Exp;
branches
	1.12.4.1.1.1;
next	;

1.12.4.1.1.1
date	96.11.28.14.53.28;	author hope;	state Exp;
branches;
next	;

1.12.5.1
date	96.11.22.18.02.01;	author hope;	state Exp;
branches;
next	;

1.12.6.1
date	96.12.17.17.40.57;	author hope;	state Exp;
branches
	1.12.6.1.1.1;
next	;

1.12.6.1.1.1
date	97.02.24.11.28.50;	author hope;	state Exp;
branches;
next	;

1.12.7.1
date	96.12.18.09.34.52;	author hope;	state Exp;
branches;
next	;

1.12.8.1
date	97.05.12.10.26.54;	author hope;	state Exp;
branches
	1.12.8.1.1.1
	1.12.8.1.2.1
	1.12.8.1.3.1;
next	;

1.12.8.1.1.1
date	97.07.28.18.12.55;	author daveb;	state Exp;
branches
	1.12.8.1.1.1.1.1;
next	;

1.12.8.1.1.1.1.1
date	97.10.07.11.37.56;	author jkbrook;	state Exp;
branches;
next	;

1.12.8.1.2.1
date	97.09.08.17.06.11;	author daveb;	state Exp;
branches;
next	;

1.12.8.1.3.1
date	97.09.09.14.01.38;	author daveb;	state Exp;
branches;
next	;

1.13.1.1
date	97.09.10.19.16.02;	author brucem;	state Exp;
branches;
next	;

1.13.2.1
date	97.09.11.20.45.51;	author daveb;	state Exp;
branches;
next	;

1.15.1.1
date	99.04.01.17.51.32;	author daveb;	state Exp;
branches;
next	;


desc
@Module identifiers - the signature
@


1.15
log
@[Bug #50108]
Change ModuleId from an equality type
@
text
@(* Module identifiers - for OS-independent recompilation.

$Log: module_id.sml,v $
 * Revision 1.14  1998/03/31  11:38:19  jont
 * [Bug #70077]
 * Remove to_host function as this is no longer used
 *
 * Revision 1.13  1997/05/01  12:20:47  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
 * Revision 1.12  1995/12/06  17:58:54  daveb
 * Added the is_pervasive predicate.
 *
Revision 1.11  1995/12/04  15:21:07  daveb
Added perv_from_string.

Revision 1.10  1995/09/06  15:36:13  jont
Provide non-faulting form of from_string

Revision 1.9  1995/04/19  11:38:15  jont
Add functionality to support object paths

Revision 1.8  1995/01/17  13:32:44  daveb
Removed the body of the ModuleId type.
Added the to_host and from_host functions.

Revision 1.7  1994/10/06  10:24:28  matthew
Added eq fun for module_ids

Revision 1.6  1994/02/02  12:05:28  daveb
changed from_unix_string (OS-specific) to from_require_string.

Revision 1.5  1993/11/09  11:29:07  daveb
Merged in bug fix.

Revision 1.4  1993/09/10  17:42:03  jont
Merging in bug fixes

Revision 1.3.1.3  1993/10/22  15:44:05  daveb
Removed create function, as require can no longer take module ids.
Changed from_string to recognise either / or . as separators.

Revision 1.3.1.2  1993/09/10  15:12:25  jont
Changed the order of the terms in a moduleid. This will be a compiler
efficiency issue

Revision 1.3.1.1  1993/08/27  14:37:32  jont
Fork for bug fixing

Revision 1.3  1993/08/27  14:37:32  daveb
Added a comparison function.

Revision 1.2  1993/08/24  14:08:33  daveb
Added location argument to from_string.
Added create function that checks that moduleids are alphanumeric.
Added comments.

Revision 1.1  1993/08/17  17:24:22  daveb
Initial revision


Copyright (c) 1993 Harlequin Ltd

*)

signature MODULE_ID =
sig
  eqtype Symbol
  type Location

  type Path
  (* The part of the module name before the final element.
     This type does not share with symbol list. *)

  type ModuleId
  (* A module identifier. *)

  val lt: ModuleId * ModuleId -> bool
  (* Ordering function. *)

  val eq: ModuleId * ModuleId -> bool
  (* Equality function. *)

  val is_pervasive: ModuleId -> bool
  (* Does the module_id refer to a pervasive module? *)

  val string: ModuleId -> string
  (* Converts a module id to a string, using dots as separators. *)

  val module_unit_to_string : ModuleId * string -> string
  (* Produce a file system string for the final part of the module name *)

  val from_string: string * Location -> ModuleId
  (* Converts a string to a module id, using dots as separators. *)

  val perv_from_string: string * Location -> ModuleId
  (* Converts a string to a module id, using dots as separators, and
     adds a leading space, to remove this id from the user's name space. *)

  val from_mo_string: string * Location -> ModuleId
  (* Converts a string to a module id, using dots as separators.
     Allows a leading space.*)

  val from_string': string -> ModuleId option
  (* Converts a string to a module id, using dots as separators. *)
  (* Returns NONE if failed *)

  val from_host: string * Location -> ModuleId
  (* Converts a string to a module id, using the separator for the host OS.
     Ignores any extension. *)

  exception NoParent
  (* raised when parent is applied to an empty path. *)

  val path: ModuleId -> Path
  (* Returns the path of the module id. *)

  val path_string: Path -> string
  (* Converts a path to a string, using dots as separators. *)

  val empty_path: Path
  (* The empty path. *)

  val add_path: Path * ModuleId -> ModuleId
  (* Adds the path of a module id to an existing path. *)

  val parent: Path -> Path
  (* Removes the final element from a path.  Used for domain-style
     abbreviation of module names. *)

  val from_require_string: string * Location -> ModuleId
  (* Hack for backwards compatibility. *)

  val perv_from_require_string: string * Location -> ModuleId
  (* Hack for backwards compatibility. *)
end;
@


1.15.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.15  1999/02/03  15:20:27  mitchell
 * [Bug #50108]
 * Change ModuleId from an equality type
 *
@


1.14
log
@[Bug #70077]
Remove to_host function as this is no longer used
@
text
@d4 4
d76 1
a76 1
  eqtype ModuleId
@


1.13
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@d4 4
a85 7

  val to_host: ModuleId * string -> string
  (* Converts a module id to a string, using the separator for the host OS,
     with the string argument as an extension. *)

  val module_component_to_string : ModuleId -> string
  (* Produce a file system string for the prefix part of the module name *)
@


1.13.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.13  1997/05/01  12:20:47  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.13.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.13  1997/05/01  12:20:47  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.12
log
@Added the is_pervasive predicate.
@
text
@d4 3
d104 1
a104 1
  val from_string': string -> ModuleId MLWorks.Option.option
@


1.12.8.1
log
@branched from 1.12
@
text
@a3 3
 * Revision 1.12  1995/12/06  17:58:54  daveb
 * Added the is_pervasive predicate.
 *
@


1.12.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.12.8.1  1997/05/12  10:26:54  hope
 * branched from 1.12
 *
@


1.12.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.12.8.1  1997/05/12  10:26:54  hope
 * branched from 1.12
 *
@


1.12.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.12.8.1  1997/05/12  10:26:54  hope
 * branched from 1.12
 *
@


1.12.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.12.8.1.1.1  1997/07/28  18:12:55  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.12.7.1
log
@branched from 1.12
@
text
@a3 3
 * Revision 1.12  1995/12/06  17:58:54  daveb
 * Added the is_pervasive predicate.
 *
@


1.12.6.1
log
@branched from 1.12
@
text
@a3 3
 * Revision 1.12  1995/12/06  17:58:54  daveb
 * Added the is_pervasive predicate.
 *
@


1.12.6.1.1.1
log
@branched from 1.12.6.1
@
text
@a3 3
 * Revision 1.12.6.1  1996/12/17  17:40:57  hope
 * branched from 1.12
 *
@


1.12.5.1
log
@branched from 1.12
@
text
@a3 3
 * Revision 1.12  1995/12/06  17:58:54  daveb
 * Added the is_pervasive predicate.
 *
@


1.12.4.1
log
@branched from 1.12
@
text
@a3 3
 * Revision 1.12  1995/12/06  17:58:54  daveb
 * Added the is_pervasive predicate.
 *
@


1.12.4.1.1.1
log
@branched from 1.12.4.1
@
text
@a3 3
 * Revision 1.12.4.1  1996/11/14  12:41:34  hope
 * branched from 1.12
 *
@


1.12.3.1
log
@branched from 1.12
@
text
@a3 3
 * Revision 1.12  1995/12/06  17:58:54  daveb
 * Added the is_pervasive predicate.
 *
@


1.12.2.1
log
@branched from 1.12
@
text
@a3 3
 * Revision 1.12  1995/12/06  17:58:54  daveb
 * Added the is_pervasive predicate.
 *
@


1.12.1.1
log
@branched from 1.12
@
text
@a3 3
 * Revision 1.12  1995/12/06  17:58:54  daveb
 * Added the is_pervasive predicate.
 *
@


1.11
log
@Added perv_from_string.
@
text
@d4 3
d73 3
@


1.10
log
@Provide non-faulting form of from_string
@
text
@d4 3
d87 8
d123 3
@


1.9
log
@Add functionality to support object paths
@
text
@d4 3
d83 4
@


1.8
log
@Removed the body of the ModuleId type.
Added the to_host and from_host functions.
@
text
@d4 4
d71 6
@


1.7
log
@Added eq fun for module_ids
@
text
@d4 3
d52 2
a53 2
  datatype ModuleId = MODID of Symbol * Symbol list
  (* A module identifier.  The symbol list is stored in reverse order. *)
d64 4
d70 4
@


1.6
log
@changed from_unix_string (OS-specific) to from_require_string.
@
text
@d4 3
d54 3
@


1.5
log
@Merged in bug fix.
@
text
@d4 3
d77 1
a77 1
  val from_unix_string: string * Location -> ModuleId
@


1.4
log
@Merging in bug fixes
@
text
@d4 7
a47 3

  val create: Symbol list * Symbol * Location -> ModuleId
  (* Checks that the symbols are alphanumeric, and reverses the list. *)
@


1.3
log
@Added a comparison function.
@
text
@d4 10
d36 1
a36 1
  datatype ModuleId = MODID of Symbol list * Symbol
@


1.3.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.3  1993/08/27  14:37:32  daveb
Added a comparison function.

@


1.3.1.2
log
@Changed the order of the terms in a moduleid. This will be a compiler
efficiency issue
@
text
@a3 3
Revision 1.3.1.1  1993/08/27  14:37:32  jont
Fork for bug fixing

d29 1
a29 1
  datatype ModuleId = MODID of Symbol * Symbol list
@


1.3.1.3
log
@Removed create function, as require can no longer take module ids.
Changed from_string to recognise either / or . as separators.
@
text
@a3 4
Revision 1.3.1.2  1993/09/10  15:12:25  jont
Changed the order of the terms in a moduleid. This will be a compiler
efficiency issue

d37 3
@


1.2
log
@Added location argument to from_string.
Added create function that checks that moduleids are alphanumeric.
Added comments.
@
text
@d4 5
d19 1
a19 1
  type Symbol
d28 3
@


1.1
log
@Initial revision
@
text
@d3 3
a5 1
$Log$
d7 1
d16 1
d18 2
d22 10
d34 2
a35 2
  val string: ModuleId -> string
  val from_string: string -> ModuleId
d37 2
d40 2
d43 2
d46 2
d49 2
a51 1
  (* hack for backwards compatibility *)
d53 1
@
