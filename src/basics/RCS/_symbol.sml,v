head	1.8;
access;
symbols
	MLW_daveb_inline_1_4_99:1.8.8
	MLWorks_21c0_1999_03_25:1.8
	MLWorks_20c1_1998_08_20:1.8
	MLWorks_20c0_1998_08_04:1.8
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.8
	MLWorks_20b1c1_1998_05_07:1.8
	MLWorks_20b0_1998_04_07:1.8
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.8.5.1.1.1.1
	MLWorks_workspace_97:1.8.7
	MLWorks_dt_wizard:1.8.6
	MLWorks_11c0_1997_09_09:1.8.5.1.1.1
	MLWorks_10r3:1.8.5.1.3
	MLWorks_10r2_551:1.8.5.1.2
	MLWorks_11:1.8.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.8.5.1
	MLWorks_20m0_1997_06_20:1.8
	MLWorks_1_0_r2c2_1997_06_14:1.8.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.8.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.8.5
	MLWorks_BugFix_1997_04_24:1.8
	MLWorks_1_0_r2_Win32_1997_04_11:1.8
	MLWorks_1_0_r2_Unix_1997_04_04:1.8
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.8.3.1.1
	MLWorks_gui_1996_12_18:1.8.4
	MLWorks_1_0_Win32_1996_12_17:1.8.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.8.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.8.1.1
	MLWorks_1_0_Irix_1996_11_28:1.8.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.8.2
	MLWorks_1_0_Unix_1996_11_14:1.8.1
	MLWorks_Open_Beta2_1996_10_11:1.7.4
	MLWorks_License_dev:1.7.3
	MLWorks_1_open_beta_1996_09_13:1.7.2
	MLWorks_Open_Beta_1996_08_22:1.7
	MLWorks_Beta_1996_07_02:1.7
	MLWorks_Beta_1996_06_07:1.7
	MLWorks_Beta_1996_06_06:1.7
	MLWorks_Beta_1996_06_05:1.7
	MLWorks_Beta_1996_06_03:1.7
	MLWorks_Beta_1996_05_31:1.7
	MLWorks_Beta_1996_05_30:1.7
	ML_beta_release_12/08/94:1.7
	ML_beta_release_03/08/94:1.7
	ML_revised_beta_release_25/05/94:1.7
	ML_final_beta_release_02/03/94:1.7
	mlworks-28-01-1994:1.7
	Release:1.7
	mlworks-beta-01-09-1993:1.7
	MLWorks-1-0-4-29/01/1993:1.7
	MLWorks-1-0-3-21/12/1992:1.7
	MLWorks-1-0-2-15/12/1992:1.7
	MLWorks-1-0-1-04/12/1992:1.7
	checkpoint_17_08_92:1.6
	Ten15_release_19-11-91:1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.8
date	96.10.09.12.36.34;	author io;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1
	1.8.4.1
	1.8.5.1
	1.8.6.1
	1.8.7.1
	1.8.8.1;
next	1.7;

1.7
date	92.09.15.17.07.18;	author jont;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1;
next	1.6;

1.6
date	92.08.10.12.44.23;	author davidt;	state Exp;
branches;
next	1.5;

1.5
date	92.02.27.12.26.35;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	92.02.20.13.12.09;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	92.02.18.14.00.24;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	91.11.21.15.57.05;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.10.55.42;	author colin;	state Exp;
branches;
next	;

1.7.1.1
date	92.09.15.17.07.18;	author jont;	state Exp;
branches;
next	;

1.7.2.1
date	96.09.13.11.08.56;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.10.07.15.59.55;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	96.10.17.11.18.16;	author hope;	state Exp;
branches;
next	;

1.8.1.1
date	96.11.14.12.41.48;	author hope;	state Exp;
branches
	1.8.1.1.1.1;
next	;

1.8.1.1.1.1
date	96.11.28.14.53.41;	author hope;	state Exp;
branches;
next	;

1.8.2.1
date	96.11.22.18.02.15;	author hope;	state Exp;
branches;
next	;

1.8.3.1
date	96.12.17.17.41.10;	author hope;	state Exp;
branches
	1.8.3.1.1.1;
next	;

1.8.3.1.1.1
date	97.02.24.11.29.23;	author hope;	state Exp;
branches;
next	;

1.8.4.1
date	96.12.18.09.35.07;	author hope;	state Exp;
branches;
next	;

1.8.5.1
date	97.05.12.10.27.08;	author hope;	state Exp;
branches
	1.8.5.1.1.1
	1.8.5.1.2.1
	1.8.5.1.3.1;
next	;

1.8.5.1.1.1
date	97.07.28.18.13.09;	author daveb;	state Exp;
branches
	1.8.5.1.1.1.1.1;
next	;

1.8.5.1.1.1.1.1
date	97.10.07.11.38.12;	author jkbrook;	state Exp;
branches;
next	;

1.8.5.1.2.1
date	97.09.08.17.06.28;	author daveb;	state Exp;
branches;
next	;

1.8.5.1.3.1
date	97.09.09.14.01.52;	author daveb;	state Exp;
branches;
next	;

1.8.6.1
date	97.09.10.19.16.17;	author brucem;	state Exp;
branches;
next	;

1.8.7.1
date	97.09.11.20.46.17;	author daveb;	state Exp;
branches;
next	;

1.8.8.1
date	99.04.01.17.51.35;	author daveb;	state Exp;
branches;
next	;


desc
@Datatype for Symbols (for forming identifiers)
@


1.8
log
@moving String from toplevel
@
text
@(* _symbol.sml the functor *)
(*
$Log: _symbol.sml,v $
 * Revision 1.7  1992/09/15  17:07:18  jont
 * Added strict less than functions for all the symbol types
 *
Revision 1.6  1992/08/10  12:44:23  davidt
Structure String is now pervasive.

Revision 1.5  1992/02/27  12:26:35  jont
Changed symbol_eq so it knows that it's working on strings. This
should improve efficiency

Revision 1.4  1992/02/20  13:12:09  jont
Fixed symbol order to use String.<= rather than String.<, as required
by maps in order to get shadowing correct. Otherwise, you end up with
old objects shadowing newer ones, instead of the reverse

Revision 1.3  1992/02/18  14:00:24  richard
Changed symbol_order to use String.< rather than exploding and
comparing.

Revision 1.2  1991/11/21  15:57:05  jont
Added copyright message

Revision 1.1  91/06/07  10:55:42  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

require "symbol";

functor Symbol () : SYMBOL =
  struct
    type Symbol = string

    fun symbol_name s = s

    fun find_symbol s = s

    val eq_symbol = (op=) : string * string -> bool

    val symbol_lt :string * string -> bool = (op<)

    val symbol_order : string * string -> bool = (op<=)
  end;
@


1.8.8.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.8  1996/10/09  12:36:34  io
 * moving String from toplevel
 *
@


1.8.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.8  1996/10/09  12:36:34  io
 * moving String from toplevel
 *
@


1.8.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.8  1996/10/09  12:36:34  io
 * moving String from toplevel
 *
@


1.8.5.1
log
@branched from 1.8
@
text
@a3 3
 * Revision 1.8  1996/10/09  12:36:34  io
 * moving String from toplevel
 *
@


1.8.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.8.5.1  1997/05/12  10:27:08  hope
 * branched from 1.8
 *
@


1.8.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.8.5.1  1997/05/12  10:27:08  hope
 * branched from 1.8
 *
@


1.8.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.8.5.1  1997/05/12  10:27:08  hope
 * branched from 1.8
 *
@


1.8.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.8.5.1.1.1  1997/07/28  18:13:09  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.8.4.1
log
@branched from 1.8
@
text
@a3 3
 * Revision 1.8  1996/10/09  12:36:34  io
 * moving String from toplevel
 *
@


1.8.3.1
log
@branched from 1.8
@
text
@a3 3
 * Revision 1.8  1996/10/09  12:36:34  io
 * moving String from toplevel
 *
@


1.8.3.1.1.1
log
@branched from 1.8.3.1
@
text
@a3 3
 * Revision 1.8.3.1  1996/12/17  17:41:10  hope
 * branched from 1.8
 *
@


1.8.2.1
log
@branched from 1.8
@
text
@a3 3
 * Revision 1.8  1996/10/09  12:36:34  io
 * moving String from toplevel
 *
@


1.8.1.1
log
@branched from 1.8
@
text
@a3 3
 * Revision 1.8  1996/10/09  12:36:34  io
 * moving String from toplevel
 *
@


1.8.1.1.1.1
log
@branched from 1.8.1.1
@
text
@a3 3
 * Revision 1.8.1.1  1996/11/14  12:41:48  hope
 * branched from 1.8
 *
@


1.7
log
@Added strict less than functions for all the symbol types
@
text
@d4 3
d44 1
a44 1
    val symbol_lt = String.<
d46 1
a46 1
    val symbol_order = String.<=
@


1.7.4.1
log
@branched from 1.7
@
text
@a3 3
 * Revision 1.7  1992/09/15  17:07:18  jont
 * Added strict less than functions for all the symbol types
 *
@


1.7.3.1
log
@branched from 1.7
@
text
@a3 3
 * Revision 1.7  1992/09/15  17:07:18  jont
 * Added strict less than functions for all the symbol types
 *
@


1.7.2.1
log
@branched from 1.7
@
text
@a3 3
 * Revision 1.7  1992/09/15  17:07:18  jont
 * Added strict less than functions for all the symbol types
 *
@


1.7.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.7  1992/09/15  17:07:18  jont
Added strict less than functions for all the symbol types

@


1.6
log
@Structure String is now pervasive.
@
text
@d4 3
d40 2
@


1.5
log
@Changed symbol_eq so it knows that it's working on strings. This
should improve efficiency
@
text
@d4 4
a25 1
require "../utils/string";
d28 1
a28 4
functor Symbol (
  structure String	: STRING
) : SYMBOL =

a29 1

d39 1
a39 13

  end











@


1.4
log
@Fixed symbol order to use String.<= rather than String.<, as required
by maps in order to get shadowing correct. Otherwise, you end up with
old objects shadowing newer ones, instead of the reverse
@
text
@d4 5
a25 1

a26 1

d37 1
a37 1
    val eq_symbol = (op=)
@


1.3
log
@Changed symbol_order to use String.< rather than exploding and
comparing.
@
text
@d4 4
d36 1
a36 1
    val symbol_order = String.<
@


1.2
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	_symbol.sml,v $
d12 2
d16 6
a21 1
functor Symbol () : SYMBOL =
d23 1
d25 1
d27 1
d29 5
a33 11
    fun eq_symbol (s1,s2) = (s1=s2)
    local fun order([],_) = true
            | order(h1::t1,[]) = false
	    | order(h1::t1,h2::t2) = if ord(h1) < ord(h2) 
				       then true
				     else if ord(h1) = ord(h2)
					    then order(t1,t2)
					  else false
    in   
      fun symbol_order (s1,s2) = order(explode(s1),explode(s2))
    end  
@


1.1
log
@Initial revision
@
text
@d1 1
d3 5
a7 1
$Log$
@
