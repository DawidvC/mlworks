head	1.17;
access;
symbols
	MLW_daveb_inline_1_4_99:1.17.1
	MLWorks_21c0_1999_03_25:1.17
	MLWorks_20c1_1998_08_20:1.17
	MLWorks_20c0_1998_08_04:1.17
	MLWorks_20b2c2_1998_06_19:1.17
	MLWorks_20b2_Windows_1998_06_12:1.17
	MLWorks_20b1c1_1998_05_07:1.17
	MLWorks_20b0_1998_04_07:1.17
	MLWorks_20b0_1998_03_20:1.17
	MLWorks_20m2_1998_02_16:1.17
	MLWorks_20m1_1997_10_23:1.16
	MLWorks_11r1:1.16.9.1.1.1.1
	MLWorks_workspace_97:1.16.11
	MLWorks_dt_wizard:1.16.10
	MLWorks_11c0_1997_09_09:1.16.9.1.1.1
	MLWorks_10r3:1.16.9.1.3
	MLWorks_10r2_551:1.16.9.1.2
	MLWorks_11:1.16.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.16.9.1
	MLWorks_20m0_1997_06_20:1.16
	MLWorks_1_0_r2c2_1997_06_14:1.16.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.16.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.16.9
	MLWorks_BugFix_1997_04_24:1.16
	MLWorks_1_0_r2_Win32_1997_04_11:1.16
	MLWorks_1_0_r2_Unix_1997_04_04:1.16
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.16.7.1.1
	MLWorks_gui_1996_12_18:1.16.8
	MLWorks_1_0_Win32_1996_12_17:1.16.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.16.5.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.16.5.1
	MLWorks_1_0_Irix_1996_11_28:1.16.5.1.1
	MLWorks_1_0_Win32_1996_11_22:1.16.6
	MLWorks_1_0_Unix_1996_11_14:1.16.5
	MLWorks_Open_Beta2_1996_10_11:1.16.4
	MLWorks_License_dev:1.16.3
	MLWorks_1_open_beta_1996_09_13:1.16.2
	MLWorks_Open_Beta_1996_08_22:1.16
	MLWlexer_basis_io_1996:1.16.1
	MLWorks_Beta_1996_07_02:1.16
	MLWorks_Beta_1996_06_07:1.16
	MLWorks_Beta_1996_06_06:1.16
	MLWorks_Beta_1996_06_05:1.16
	MLWorks_Beta_1996_06_03:1.16
	MLWorks_Beta_1996_05_31:1.16
	MLWorks_Beta_1996_05_30:1.16
	ML_beta_release_12/08/94:1.14
	ML_beta_release_03/08/94:1.14
	ML_revised_beta_release_25/05/94:1.14
	ML_final_beta_release_02/03/94:1.14
	mlworks-28-01-1994:1.14
	Release:1.14
	mlworks-beta-01-09-1993:1.14
	MLWorks-1-0-4-29/01/1993:1.11
	MLWorks-1-0-3-21/12/1992:1.11
	MLWorks-1-0-2-15/12/1992:1.11
	MLWorks-1-0-1-04/12/1992:1.11
	checkpoint_17_08_92:1.8
	Ten15_release_19-11-91:1.1
	Ten15_release_21-08-91:1.1;
locks; strict;
comment	@ * @;


1.17
date	98.01.30.09.40.42;	author johnh;	state Exp;
branches
	1.17.1.1;
next	1.16;

1.16
date	95.03.14.10.49.56;	author matthew;	state Exp;
branches
	1.16.1.1
	1.16.2.1
	1.16.3.1
	1.16.4.1
	1.16.5.1
	1.16.6.1
	1.16.7.1
	1.16.8.1
	1.16.9.1
	1.16.10.1
	1.16.11.1;
next	1.15;

1.15
date	94.08.04.13.46.00;	author matthew;	state Exp;
branches;
next	1.14;

1.14
date	93.05.18.16.15.42;	author jont;	state Exp;
branches
	1.14.1.1;
next	1.13;

1.13
date	93.03.30.14.45.47;	author daveb;	state Exp;
branches;
next	1.12;

1.12
date	93.03.29.12.14.10;	author daveb;	state Exp;
branches;
next	1.11;

1.11
date	92.11.05.15.35.09;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	92.08.31.15.43.04;	author richard;	state Exp;
branches;
next	1.9;

1.9
date	92.08.18.13.28.15;	author davidt;	state Exp;
branches;
next	1.8;

1.8
date	92.08.14.21.13.45;	author davidt;	state Exp;
branches;
next	1.7;

1.7
date	92.08.07.15.42.09;	author davidt;	state Exp;
branches;
next	1.6;

1.6
date	92.08.04.15.43.04;	author davidt;	state Exp;
branches;
next	1.5;

1.5
date	92.05.06.10.36.35;	author richard;	state Exp;
branches;
next	1.4;

1.4
date	92.01.29.11.03.41;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	91.10.11.13.35.30;	author davidt;	state Exp;
branches;
next	1.2;

1.2
date	91.09.06.16.47.25;	author nickh;	state Exp;
branches;
next	1.1;

1.1
date	91.06.20.20.10.56;	author jont;	state Exp;
branches;
next	;

1.14.1.1
date	93.05.18.16.15.42;	author jont;	state Exp;
branches;
next	;

1.16.1.1
date	96.08.19.11.49.30;	author hope;	state Exp;
branches;
next	;

1.16.2.1
date	96.09.13.11.17.53;	author hope;	state Exp;
branches;
next	;

1.16.3.1
date	96.10.07.16.07.43;	author hope;	state Exp;
branches;
next	;

1.16.4.1
date	96.10.17.11.25.58;	author hope;	state Exp;
branches;
next	;

1.16.5.1
date	96.11.14.12.51.08;	author hope;	state Exp;
branches
	1.16.5.1.1.1;
next	;

1.16.5.1.1.1
date	96.11.28.15.02.12;	author hope;	state Exp;
branches;
next	;

1.16.6.1
date	96.11.22.18.10.25;	author hope;	state Exp;
branches;
next	;

1.16.7.1
date	96.12.17.17.49.01;	author hope;	state Exp;
branches
	1.16.7.1.1.1;
next	;

1.16.7.1.1.1
date	97.02.24.11.39.05;	author hope;	state Exp;
branches;
next	;

1.16.8.1
date	96.12.18.09.43.03;	author hope;	state Exp;
branches;
next	;

1.16.9.1
date	97.05.12.10.35.31;	author hope;	state Exp;
branches
	1.16.9.1.1.1
	1.16.9.1.2.1
	1.16.9.1.3.1;
next	;

1.16.9.1.1.1
date	97.07.28.18.20.53;	author daveb;	state Exp;
branches
	1.16.9.1.1.1.1.1;
next	;

1.16.9.1.1.1.1.1
date	97.10.07.11.46.16;	author jkbrook;	state Exp;
branches;
next	;

1.16.9.1.2.1
date	97.09.08.17.14.20;	author daveb;	state Exp;
branches;
next	;

1.16.9.1.3.1
date	97.09.09.14.10.06;	author daveb;	state Exp;
branches;
next	;

1.16.10.1
date	97.09.10.19.26.02;	author brucem;	state Exp;
branches;
next	;

1.16.11.1
date	97.09.11.20.56.11;	author daveb;	state Exp;
branches;
next	1.16.11.2;

1.16.11.2
date	97.11.20.17.08.55;	author daveb;	state Exp;
branches;
next	;

1.17.1.1
date	99.04.01.17.57.32;	author daveb;	state Exp;
branches;
next	;


desc
@@


1.17
log
@[Bug #30326]
Merge in change from branch MLWorks_workspace_97
@
text
@(*
$Log: __lexer.sml,v $
 * Revision 1.16.11.2  1997/11/20  17:08:55  daveb
 * [Bug #30326]
 *
 * Revision 1.16.11.1  1997/09/11  20:56:11  daveb
 * branched from trunk for label MLWorks_workspace_97
 *
 * Revision 1.16  1995/03/14  10:49:56  matthew
 * Removing redundant structures
 *
Revision 1.15  1994/08/04  13:46:00  matthew
Adding Timer structure

Revision 1.14  1993/05/18  16:15:42  jont
Removed integer parameter

Revision 1.13  1993/03/30  14:45:47  daveb
Removed the Crash parameter again.  There is mthoed in this madness!
Crash was only needed for the pushback facility of tokenstreams, which
I've now removed.

Revision 1.12  1993/03/29  12:14:10  daveb
Added Crash parameter.

Revision 1.11  1992/11/05  15:35:09  matthew
Changed Error structure to Info

Revision 1.10  1992/08/31  15:43:04  richard
Added error handler structure.

Revision 1.9  1992/08/18  13:28:15  davidt
Now builds the Lexer structure directly, without using
the Lexer functor.

Revision 1.8  1992/08/14  21:13:45  davidt
Added the Crash structure.

Revision 1.7  1992/08/07  15:42:09  davidt
String structure is now pervasive.

Revision 1.6  1992/08/04  15:43:04  davidt
Took out redundant Array argument and require.

Revision 1.5  1992/05/06  10:36:35  richard
Changed BalancedTree to BTree

Revision 1.4  1992/01/29  11:03:41  jont
Added string parameter

Revision 1.3  1991/10/11  13:35:30  davidt
This used to build a functor, which isn't normally done here, so I
move the functor into the file _lexer.sml

Revision 1.2  91/09/06  16:47:25  nickh
Lexer structure. This uses the lexer generator, and is quite messy for
reasons of type sharing.

Copyright (c) 1991 Harlequin Ltd.
*)

require "../utils/__lists";
require "../utils/__btree";
require "../utils/__mlworks_timer";
require "../basics/__token";
require "__ndfa";
require "__lexrules";

require "_lexgen";

structure Lexer_ =
  LexGen(structure Lists = Lists_
	 structure Map = BTree_
         structure Timer = Timer_
	 structure Token = Token_
	 structure Ndfa = Ndfa_
	 structure LexRules = LexRules_
           );
@


1.17.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a2 4
 * Revision 1.17  1998/01/30  09:40:42  johnh
 * [Bug #30326]
 * Merge in change from branch MLWorks_workspace_97
 *
@


1.16
log
@Removing redundant structures
@
text
@d3 9
d64 1
a64 1
require "../utils/__timer";
@


1.16.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a2 3
 * Revision 1.16  1995/03/14  10:49:56  matthew
 * Removing redundant structures
 *
@


1.16.11.2
log
@[Bug #30326]
@
text
@a2 3
 * Revision 1.16.11.1  1997/09/11  20:56:11  daveb
 * branched from trunk for label MLWorks_workspace_97
 *
d58 1
a58 1
require "../utils/__mlworks_timer";
@


1.16.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a2 3
 * Revision 1.16  1995/03/14  10:49:56  matthew
 * Removing redundant structures
 *
@


1.16.9.1
log
@branched from 1.16
@
text
@a2 3
 * Revision 1.16  1995/03/14  10:49:56  matthew
 * Removing redundant structures
 *
@


1.16.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a2 3
 * Revision 1.16.9.1  1997/05/12  10:35:31  hope
 * branched from 1.16
 *
@


1.16.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a2 3
 * Revision 1.16.9.1  1997/05/12  10:35:31  hope
 * branched from 1.16
 *
@


1.16.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a2 3
 * Revision 1.16.9.1  1997/05/12  10:35:31  hope
 * branched from 1.16
 *
@


1.16.9.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a2 3
 * Revision 1.16.9.1.1.1  1997/07/28  18:20:53  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.16.8.1
log
@branched from 1.16
@
text
@a2 3
 * Revision 1.16  1995/03/14  10:49:56  matthew
 * Removing redundant structures
 *
@


1.16.7.1
log
@branched from 1.16
@
text
@a2 3
 * Revision 1.16  1995/03/14  10:49:56  matthew
 * Removing redundant structures
 *
@


1.16.7.1.1.1
log
@branched from 1.16.7.1
@
text
@a2 3
 * Revision 1.16.7.1  1996/12/17  17:49:01  hope
 * branched from 1.16
 *
@


1.16.6.1
log
@branched from 1.16
@
text
@a2 3
 * Revision 1.16  1995/03/14  10:49:56  matthew
 * Removing redundant structures
 *
@


1.16.5.1
log
@branched from 1.16
@
text
@a2 3
 * Revision 1.16  1995/03/14  10:49:56  matthew
 * Removing redundant structures
 *
@


1.16.5.1.1.1
log
@branched from 1.16.5.1
@
text
@a2 3
 * Revision 1.16.5.1  1996/11/14  12:51:08  hope
 * branched from 1.16
 *
@


1.16.4.1
log
@branched from 1.16
@
text
@a2 3
 * Revision 1.16  1995/03/14  10:49:56  matthew
 * Removing redundant structures
 *
@


1.16.3.1
log
@branched from 1.16
@
text
@a2 3
 * Revision 1.16  1995/03/14  10:49:56  matthew
 * Removing redundant structures
 *
@


1.16.2.1
log
@branched from 1.16
@
text
@a2 3
 * Revision 1.16  1995/03/14  10:49:56  matthew
 * Removing redundant structures
 *
@


1.16.1.1
log
@branched from 1.16
@
text
@a2 3
 * Revision 1.16  1995/03/14  10:49:56  matthew
 * Removing redundant structures
 *
@


1.15
log
@Adding Timer structure
@
text
@d3 3
a53 1
require "../utils/__print";
a54 1
require "../utils/__crash";
a56 1
require "../main/__info";
a57 1
require "__inbuffer";
d59 1
a63 1
	 structure Print = Print_
a67 1
	 structure InBuffer = InBuffer_
@


1.14
log
@Removed integer parameter
@
text
@d3 3
d54 1
d66 1
@


1.14.1.1
log
@Fork for bug fixing
@
text
@a2 3
Revision 1.14  1993/05/18  16:15:42  jont
Removed integer parameter

@


1.13
log
@Removed the Crash parameter again.  There is mthoed in this madness!
Crash was only needed for the pushback facility of tokenstreams, which
I've now removed.
@
text
@d3 5
a48 1
require "../utils/__integer";
a60 1
	 structure Integer = Integer_
@


1.12
log
@Added Crash parameter.
@
text
@d3 3
a57 1
	 structure Crash = Crash_
@


1.11
log
@Changed Error structure to Info
@
text
@d3 3
d43 1
d55 1
@


1.10
log
@Added error handler structure.
@
text
@d3 3
d41 1
a41 1
require "../main/__error";
d56 1
a56 1
         structure Error = Error_);
@


1.9
log
@Now builds the Lexer structure directly, without using
the Lexer functor.
@
text
@d3 4
d38 1
d52 2
a53 1
	 structure LexRules = LexRules_);
@


1.8
log
@Added the Crash structure.
@
text
@d3 3
d29 2
a30 1
require "../utils/__crash";
a31 2
require "../utils/__print";
require "../utils/__lists";
a32 1
require "../basics/__symbol";
a34 1
require "__regexp";
d36 2
a37 2
require "__lexbasics";
require "_lexer";
d40 8
a47 12
  Lexer(structure Crash = Crash_
	structure Integer = Integer_
	structure Print = Print_
	structure Lists = Lists_
	structure Map = BTree_
	structure Symbol = Symbol_
	structure Token = Token_
	structure Ndfa = Ndfa_
	structure RegExp = RegExp_
	structure InBuffer = InBuffer_
	structure LexBasics = LexBasics_);
  
@


1.7
log
@String structure is now pervasive.
@
text
@d3 3
d26 1
d39 12
a50 12
structure Lexer_ = Lexer(
  structure Integer = Integer_
  structure Print = Print_
  structure Lists = Lists_
  structure Map = BTree_
  structure Symbol = Symbol_
  structure Token = Token_
  structure Ndfa = Ndfa_
  structure RegExp = RegExp_
  structure InBuffer = InBuffer_
  structure LexBasics = LexBasics_
    );
@


1.6
log
@Took out redundant Array argument and require.
@
text
@d3 3
a26 1
require "../utils/__string";
a39 1
  structure String = String_
@


1.5
log
@Changed BalancedTree to BTree
@
text
@d3 3
a22 1
require "../utils/__array";
a36 1
  structure Array = Array_
@


1.4
log
@Added string parameter
@
text
@d3 3
d21 1
a21 1
require "../utils/__balancedtree";
d36 1
a36 1
  structure BalancedTree = BalancedTree_
@


1.3
log
@This used to build a functor, which isn't normally done here, so I
move the functor into the file _lexer.sml
@
text
@d2 5
a6 1
$Log:	__lexer.sml,v $
d13 1
a13 1
require "../basics/__token";
d19 1
d21 1
d28 15
a42 12
structure Lexer_ =
  Lexer(structure Token = Token_
	structure Integer = Integer_
	structure Print = Print_
	structure Lists = Lists_
	structure Array = Array_
	structure BalancedTree = BalancedTree_
	structure Symbol = Symbol_
	structure Ndfa = Ndfa_
	structure RegExp = RegExp_
	structure InBuffer = InBuffer_
	structure LexBasics = LexBasics_)
@


1.2
log
@Lexer structure. This uses the lexer generator, and is quite messy for
reasons of type sharing.
@
text
@d2 5
a6 1
$Log$
d11 4
d16 1
a17 1
require "__myarray";
d20 1
a20 3
require "_lexrules";
require "_lexgen";
require "lexer";
d22 12
a33 44
(* this is really far too complex. There is a problem with the type
`result' from LexRules/LexGen, and making it equal to Token.Token,
while keeping LexGen, LexBasics, and LEXRULES entirely free of all
references to the ML language (e.g. `structure Token' in LEXRULES).
There is probably a better way. If there is not, this reveals a
deficiency with the ML language. *)

functor Lexer (structure Token : TOKEN
	       structure Integer : INTEGER
	       structure RegExp : REGEXP
	       structure Array : ARRAY
	       structure InBuffer : INBUFFER
	       structure LexBasics : LEXBASICS
	       structure Symbol : SYMBOL
	       sharing Token.Symbol = Symbol
		 ) : LEXER =
struct
  structure LexRules = MLRules(structure Integer = Integer
				 structure String = String
				 structure Token = Token
				 structure Symbol = Symbol
				 structure RegExp = RegExp
				 structure LexBasics = LexBasics)
    
  structure LexGen = LexGen(structure RegExp = RegExp
			    structure Array = Array
			    structure InBuffer = InBuffer
			    structure LexRules = LexRules
			    structure LexBasics = LexBasics)
    
  open LexGen
  structure Token = LexGen.LexRules.Token
  structure Symbol = Token.Symbol
end

structure Lexer_ = Lexer(structure Token = Token_
			 structure Symbol = Symbol_
			 structure Array = Array_
			 structure Integer = Integer_
			 structure RegExp = RegExp_
			 structure InBuffer = InBuffer_
			 structure LexBasics = LexBasics_)


@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
require "_lexer";
d6 9
a14 2
require "../utils/__lists";
require "../utils/__print";
d16 43
a58 4
structure Lexer_ =
  Lexer (structure Token = Token_
	 structure List  = Lists_
	 structure Print = Print_);
@
