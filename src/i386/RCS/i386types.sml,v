head	1.9;
access;
symbols
	MLW_daveb_inline_1_4_99:1.9.3
	MLWorks_21c0_1999_03_25:1.9
	MLWorks_20c1_1998_08_20:1.9
	MLWorks_20c0_1998_08_04:1.9
	MLWorks_20b2c2_1998_06_19:1.9
	MLWorks_20b2_Windows_1998_06_12:1.9
	MLWorks_20b1c1_1998_05_07:1.9
	MLWorks_20b0_1998_04_07:1.9
	MLWorks_20b0_1998_03_20:1.9
	MLWorks_20m2_1998_02_16:1.9
	MLWorks_20m1_1997_10_23:1.9
	MLWorks_11r1:1.8.8.1.1.1.1
	MLWorks_workspace_97:1.9.2
	MLWorks_dt_wizard:1.9.1
	MLWorks_11c0_1997_09_09:1.8.8.1.1.1
	MLWorks_10r3:1.8.8.1.3
	MLWorks_10r2_551:1.8.8.1.2
	MLWorks_11:1.8.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.8.8.1
	MLWorks_20m0_1997_06_20:1.9
	MLWorks_1_0_r2c2_1997_06_14:1.8.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.8.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.8.8
	MLWorks_BugFix_1997_04_24:1.8
	MLWorks_1_0_r2_Win32_1997_04_11:1.8
	MLWorks_1_0_r2_Unix_1997_04_04:1.8
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.8.6.1.1
	MLWorks_gui_1996_12_18:1.8.7
	MLWorks_1_0_Win32_1996_12_17:1.8.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.8.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.8.4.1
	MLWorks_1_0_Irix_1996_11_28:1.8.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.8.5
	MLWorks_1_0_Unix_1996_11_14:1.8.4
	MLWorks_Open_Beta2_1996_10_11:1.8.3
	MLWorks_License_dev:1.8.2
	MLWorks_1_open_beta_1996_09_13:1.8.1
	MLWorks_Open_Beta_1996_08_22:1.8
	MLWorks_Beta_1996_07_02:1.8
	MLWorks_Beta_1996_06_07:1.8
	MLWorks_Beta_1996_06_06:1.8
	MLWorks_Beta_1996_06_05:1.8
	MLWorks_Beta_1996_06_03:1.8
	MLWorks_Beta_1996_05_31:1.8
	MLWorks_Beta_1996_05_30:1.8;
locks; strict;
comment	@ * @;


1.9
date	97.05.14.19.41.59;	author jont;	state Exp;
branches
	1.9.1.1
	1.9.2.1
	1.9.3.1;
next	1.8;

1.8
date	95.08.14.12.13.25;	author jont;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1
	1.8.4.1
	1.8.5.1
	1.8.6.1
	1.8.7.1
	1.8.8.1;
next	1.7;

1.7
date	95.07.25.15.58.15;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	94.11.23.18.15.01;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	94.09.21.13.02.28;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	94.09.20.11.09.01;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	94.09.16.14.06.50;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	94.09.15.10.40.01;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	94.09.08.12.19.15;	author jont;	state Exp;
branches;
next	;

1.8.1.1
date	96.09.13.11.15.00;	author hope;	state Exp;
branches;
next	;

1.8.2.1
date	96.10.07.16.05.20;	author hope;	state Exp;
branches;
next	;

1.8.3.1
date	96.10.17.11.23.36;	author hope;	state Exp;
branches;
next	;

1.8.4.1
date	96.11.14.12.47.59;	author hope;	state Exp;
branches
	1.8.4.1.1.1;
next	;

1.8.4.1.1.1
date	96.11.28.14.59.30;	author hope;	state Exp;
branches;
next	;

1.8.5.1
date	96.11.22.18.07.59;	author hope;	state Exp;
branches;
next	;

1.8.6.1
date	96.12.17.17.46.40;	author hope;	state Exp;
branches
	1.8.6.1.1.1;
next	;

1.8.6.1.1.1
date	97.02.24.11.36.19;	author hope;	state Exp;
branches;
next	;

1.8.7.1
date	96.12.18.09.40.40;	author hope;	state Exp;
branches;
next	;

1.8.8.1
date	97.05.12.10.33.02;	author hope;	state Exp;
branches
	1.8.8.1.1.1
	1.8.8.1.2.1
	1.8.8.1.3.1;
next	;

1.8.8.1.1.1
date	97.07.28.18.18.46;	author daveb;	state Exp;
branches
	1.8.8.1.1.1.1.1;
next	;

1.8.8.1.1.1.1.1
date	97.10.07.11.43.51;	author jkbrook;	state Exp;
branches;
next	;

1.8.8.1.2.1
date	97.09.08.17.12.20;	author daveb;	state Exp;
branches;
next	;

1.8.8.1.3.1
date	97.09.09.14.07.58;	author daveb;	state Exp;
branches;
next	;

1.9.1.1
date	97.09.10.19.22.57;	author brucem;	state Exp;
branches;
next	;

1.9.2.1
date	97.09.11.20.54.07;	author daveb;	state Exp;
branches;
next	;

1.9.3.1
date	99.04.01.17.56.26;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.9
log
@[Bug #30076]
Adding argument passing pseudo registers for multiple argument passing work.
@
text
@(* i386types.sml the signature *)
(*
$Log: i386types.sml,v $
 * Revision 1.8  1995/08/14  12:13:25  jont
 * Add bits_per_word
 * Remove smallest_int, largest_int, largest_word
 *
Revision 1.7  1995/07/25  15:58:15  jont
Add largest_word

Revision 1.6  1994/11/23  18:15:01  jont
Add full_reg_name function

Revision 1.5  1994/09/21  13:02:28  jont
Add word_reg_name function

Revision 1.4  1994/09/20  11:09:01  jont
Add register value function

Revision 1.3  1994/09/16  14:06:50  jont
Add conversion to byte registers function

Revision 1.2  1994/09/15  10:40:01  jont
Remove fp, we're not having an fp

Revision 1.1  1994/09/08  12:19:15  jont
new file

Copyright (c) 1994 Harlequin Ltd.
*)


signature I386TYPES = sig
  datatype I386_Reg =
    EAX |
    EBX |
    ECX |
    EDX |
    ESP |
    EBP |
    EDI |
    ESI |
    AX |
    BX |
    CX |
    DX |
    SP |
    BP |
    DI |
    SI |
    AH |
    AL |
    BH |
    BL |
    CH |
    CL |
    DH |
    DL |
    cond |
    heap |
    stack |
    nil_v |
    i_arg1 |
    i_arg2 |
    i_arg3 |
    i_arg4 |
    i_arg5 |
    i_arg6 |
    i_arg7 |
    o_arg1 |
    o_arg2 |
    o_arg3 |
    o_arg4 |
    o_arg5 |
    o_arg6 |
    o_arg7

  val byte_reg_name : I386_Reg -> I386_Reg
  val has_byte_name : I386_Reg -> bool

  val half_reg_name : I386_Reg -> I386_Reg

  val full_reg_name : I386_Reg -> I386_Reg

  val register_value : I386_Reg -> int

  datatype fp_type = single | double | extended

  val fp_used : fp_type

  val reg_to_string : I386_Reg -> string
  val fp_reg_to_string : I386_Reg -> string

  val digits_in_real : int
  val bits_per_word : int

  val caller_arg : I386_Reg
  val callee_arg : I386_Reg
  val caller_closure : I386_Reg
  val callee_closure : I386_Reg
  val sp : I386_Reg
  val global : I386_Reg
  val implicit : I386_Reg

  exception Ord
  exception Chr

  val ord: string -> int
  val chr: int -> string

end
@


1.9.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.9  1997/05/14  19:41:59  jont
 * [Bug #30076]
 * Adding argument passing pseudo registers for multiple argument passing work.
 *
@


1.9.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.9  1997/05/14  19:41:59  jont
 * [Bug #30076]
 * Adding argument passing pseudo registers for multiple argument passing work.
 *
@


1.9.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.9  1997/05/14  19:41:59  jont
 * [Bug #30076]
 * Adding argument passing pseudo registers for multiple argument passing work.
 *
@


1.8
log
@Add bits_per_word
Remove smallest_int, largest_int, largest_word
@
text
@d4 4
d62 15
a76 1
    nil_v
a85 35

(*
  val F0 : I386_Reg
  val F1 : I386_Reg
  val F2 : I386_Reg
  val F3 : I386_Reg
  val F4 : I386_Reg
  val F5 : I386_Reg
  val F6 : I386_Reg
  val F7 : I386_Reg
  val F8 : I386_Reg
  val F9 : I386_Reg
  val F10 : I386_Reg
  val F11 : I386_Reg
  val F12 : I386_Reg
  val F13 : I386_Reg
  val F14 : I386_Reg
  val F15 : I386_Reg
  val F16 : I386_Reg
  val F17 : I386_Reg
  val F18 : I386_Reg
  val F19 : I386_Reg
  val F20 : I386_Reg
  val F21 : I386_Reg
  val F22 : I386_Reg
  val F23 : I386_Reg
  val F24 : I386_Reg
  val F25 : I386_Reg
  val F26 : I386_Reg
  val F27 : I386_Reg
  val F28 : I386_Reg
  val F29 : I386_Reg
  val F30 : I386_Reg
  val F31 : I386_Reg
*)
@


1.8.8.1
log
@branched from 1.8
@
text
@a3 4
 * Revision 1.8  1995/08/14  12:13:25  jont
 * Add bits_per_word
 * Remove smallest_int, largest_int, largest_word
 *
@


1.8.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.8.8.1  1997/05/12  10:33:02  hope
 * branched from 1.8
 *
@


1.8.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.8.8.1  1997/05/12  10:33:02  hope
 * branched from 1.8
 *
@


1.8.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.8.8.1  1997/05/12  10:33:02  hope
 * branched from 1.8
 *
@


1.8.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.8.8.1.1.1  1997/07/28  18:18:46  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.8.7.1
log
@branched from 1.8
@
text
@a3 4
 * Revision 1.8  1995/08/14  12:13:25  jont
 * Add bits_per_word
 * Remove smallest_int, largest_int, largest_word
 *
@


1.8.6.1
log
@branched from 1.8
@
text
@a3 4
 * Revision 1.8  1995/08/14  12:13:25  jont
 * Add bits_per_word
 * Remove smallest_int, largest_int, largest_word
 *
@


1.8.6.1.1.1
log
@branched from 1.8.6.1
@
text
@a3 3
 * Revision 1.8.6.1  1996/12/17  17:46:40  hope
 * branched from 1.8
 *
@


1.8.5.1
log
@branched from 1.8
@
text
@a3 4
 * Revision 1.8  1995/08/14  12:13:25  jont
 * Add bits_per_word
 * Remove smallest_int, largest_int, largest_word
 *
@


1.8.4.1
log
@branched from 1.8
@
text
@a3 4
 * Revision 1.8  1995/08/14  12:13:25  jont
 * Add bits_per_word
 * Remove smallest_int, largest_int, largest_word
 *
@


1.8.4.1.1.1
log
@branched from 1.8.4.1
@
text
@a3 3
 * Revision 1.8.4.1  1996/11/14  12:47:59  hope
 * branched from 1.8
 *
@


1.8.3.1
log
@branched from 1.8
@
text
@a3 4
 * Revision 1.8  1995/08/14  12:13:25  jont
 * Add bits_per_word
 * Remove smallest_int, largest_int, largest_word
 *
@


1.8.2.1
log
@branched from 1.8
@
text
@a3 4
 * Revision 1.8  1995/08/14  12:13:25  jont
 * Add bits_per_word
 * Remove smallest_int, largest_int, largest_word
 *
@


1.8.1.1
log
@branched from 1.8
@
text
@a3 4
 * Revision 1.8  1995/08/14  12:13:25  jont
 * Add bits_per_word
 * Remove smallest_int, largest_int, largest_word
 *
@


1.7
log
@Add largest_word
@
text
@d4 3
a110 3
  val largest_int: string
  val smallest_int: string
  val largest_word: string
d112 1
@


1.6
log
@Add full_reg_name function
@
text
@d4 3
d110 1
@


1.5
log
@Add word_reg_name function
@
text
@d4 3
d58 2
@


1.4
log
@Add register value function
@
text
@d4 3
d52 3
@


1.3
log
@Add conversion to byte registers function
@
text
@d4 3
d49 2
@


1.2
log
@Remove fp, we're not having an fp
@
text
@d4 3
d44 2
@


1.1
log
@new file
@
text
@d3 4
a6 1
$Log$
a91 1
  val fp : I386_Reg
d94 1
@
