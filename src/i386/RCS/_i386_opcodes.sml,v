head	1.3;
access;
symbols
	MLW_daveb_inline_1_4_99:1.3.8
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_11r1:1.3.5.1.1.1.1
	MLWorks_workspace_97:1.3.7
	MLWorks_dt_wizard:1.3.6
	MLWorks_11c0_1997_09_09:1.3.5.1.1.1
	MLWorks_10r3:1.3.5.1.3
	MLWorks_10r2_551:1.3.5.1.2
	MLWorks_11:1.3.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.5.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.5
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.3.1.1
	MLWorks_gui_1996_12_18:1.3.4
	MLWorks_1_0_Win32_1996_12_17:1.3.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.1.1
	MLWorks_1_0_Irix_1996_11_28:1.3.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.2
	MLWorks_1_0_Unix_1996_11_14:1.3.1
	MLWorks_Open_Beta2_1996_10_11:1.2.3
	MLWorks_License_dev:1.2.2
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ * @;


1.3
date	96.10.31.14.59.07;	author io;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1;
next	1.2;

1.2
date	96.05.01.12.40.34;	author jont;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1;
next	1.1;

1.1
date	94.09.09.15.42.32;	author jont;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.15.18;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.10.07.16.05.36;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.17.11.23.52;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	96.11.14.12.48.18;	author hope;	state Exp;
branches
	1.3.1.1.1.1;
next	;

1.3.1.1.1.1
date	96.11.28.14.59.49;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.11.22.18.08.16;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.12.17.17.46.57;	author hope;	state Exp;
branches
	1.3.3.1.1.1;
next	;

1.3.3.1.1.1
date	97.02.24.11.36.37;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.12.18.09.40.56;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	97.05.12.10.33.20;	author hope;	state Exp;
branches
	1.3.5.1.1.1
	1.3.5.1.2.1
	1.3.5.1.3.1;
next	;

1.3.5.1.1.1
date	97.07.28.18.18.40;	author daveb;	state Exp;
branches
	1.3.5.1.1.1.1.1;
next	;

1.3.5.1.1.1.1.1
date	97.10.07.11.43.44;	author jkbrook;	state Exp;
branches;
next	;

1.3.5.1.2.1
date	97.09.08.17.12.14;	author daveb;	state Exp;
branches;
next	;

1.3.5.1.3.1
date	97.09.09.14.07.52;	author daveb;	state Exp;
branches;
next	;

1.3.6.1
date	97.09.10.19.22.48;	author brucem;	state Exp;
branches;
next	;

1.3.7.1
date	97.09.11.20.53.59;	author daveb;	state Exp;
branches;
next	;

1.3.8.1
date	99.04.01.17.56.22;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.3
log
@moving String from toplevel
@
text
@(* _i386_opcodes.sml the functor *)
(*
$Log: _i386_opcodes.sml,v $
 * Revision 1.2  1996/05/01  12:40:34  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
 * Revision 1.1  1994/09/09  15:42:32  jont
 * new file
 *
Copyright (c) 1994 Harlequin Ltd.
*)

require "../utils/crash";
require "i386types";
require "i386_opcodes";


functor I386_Opcodes(
  structure Crash : CRASH
  structure I386Types : I386TYPES
) : I386_OPCODES =
struct
  structure I386Types = I386Types

  datatype opcode = OPCODE of int list

  fun make_list(bytes, value, acc) =
    if bytes <= 0 then acc
    else
      make_list(bytes-1, value div 256, chr(value mod 256) :: acc)

  fun output_int(bytes, value) =
    make_list(bytes, value, [])

  fun output_opcode(OPCODE i) =
    implode (map chr i)

end
@


1.3.8.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.3  1996/10/31  14:59:07  io
 * moving String from toplevel
 *
@


1.3.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.3  1996/10/31  14:59:07  io
 * moving String from toplevel
 *
@


1.3.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.3  1996/10/31  14:59:07  io
 * moving String from toplevel
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/10/31  14:59:07  io
 * moving String from toplevel
 *
@


1.3.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.3.5.1  1997/05/12  10:33:20  hope
 * branched from 1.3
 *
@


1.3.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.3.5.1  1997/05/12  10:33:20  hope
 * branched from 1.3
 *
@


1.3.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.3.5.1  1997/05/12  10:33:20  hope
 * branched from 1.3
 *
@


1.3.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.3.5.1.1.1  1997/07/28  18:18:40  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/10/31  14:59:07  io
 * moving String from toplevel
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/10/31  14:59:07  io
 * moving String from toplevel
 *
@


1.3.3.1.1.1
log
@branched from 1.3.3.1
@
text
@a3 3
 * Revision 1.3.3.1  1996/12/17  17:46:57  hope
 * branched from 1.3
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/10/31  14:59:07  io
 * moving String from toplevel
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/10/31  14:59:07  io
 * moving String from toplevel
 *
@


1.3.1.1.1.1
log
@branched from 1.3.1.1
@
text
@a3 3
 * Revision 1.3.1.1  1996/11/14  12:48:18  hope
 * branched from 1.3
 *
@


1.2
log
@String functions explode, implode, chr and ord now only available from String
io functions and types
instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
now only available from MLWorks.IO
@
text
@d4 6
d20 1
d33 1
a33 1
      make_list(bytes-1, value div 256, String.chr(value mod 256) :: acc)
d39 1
a39 1
    String.implode(map String.chr i)
@


1.2.3.1
log
@branched from 1.2
@
text
@a3 6
 * Revision 1.2  1996/05/01  12:40:34  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a3 6
 * Revision 1.2  1996/05/01  12:40:34  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a3 6
 * Revision 1.2  1996/05/01  12:40:34  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.1
log
@new file
@
text
@d3 4
a6 1
$Log$
d26 1
a26 1
      make_list(bytes-1, value div 256, chr(value mod 256) :: acc)
d32 1
a32 1
    implode(map chr i)
@
