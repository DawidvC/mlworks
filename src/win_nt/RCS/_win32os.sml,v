head	1.9;
access;
symbols
	MLW_daveb_inline_1_4_99:1.9.1
	MLWorks_21c0_1999_03_25:1.9
	MLWorks_20c1_1998_08_20:1.9
	MLWorks_20c0_1998_08_04:1.9
	MLWorks_20b2c2_1998_06_19:1.9
	MLWorks_20b2_Windows_1998_06_12:1.9
	MLWorks_20b1c1_1998_05_07:1.8
	MLWorks_20b0_1998_04_07:1.8
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.8.1.1.1.1.1
	MLWorks_workspace_97:1.8.3
	MLWorks_dt_wizard:1.8.2
	MLWorks_11c0_1997_09_09:1.8.1.1.1.1
	MLWorks_10r3:1.8.1.1.3
	MLWorks_10r2_551:1.8.1.1.2
	MLWorks_11:1.8.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.8.1.1
	MLWorks_20m0_1997_06_20:1.8
	MLWorks_1_0_r2c2_1997_06_14:1.8.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.8.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.8.1
	MLWorks_BugFix_1997_04_24:1.8
	MLWorks_1_0_r2_Win32_1997_04_11:1.8
	MLWorks_1_0_r2_Unix_1997_04_04:1.8
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.6.6.1.1
	MLWorks_gui_1996_12_18:1.6.7
	MLWorks_1_0_Win32_1996_12_17:1.6.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.6.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.6.4.1
	MLWorks_1_0_Irix_1996_11_28:1.6.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.6.5
	MLWorks_1_0_Unix_1996_11_14:1.6.4
	MLWorks_Open_Beta2_1996_10_11:1.6.3
	MLWorks_License_dev:1.6.2
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.5
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ *  @;


1.9
date	98.06.05.14.24.54;	author mitchell;	state Exp;
branches
	1.9.1.1;
next	1.8;

1.8
date	97.03.27.16.39.47;	author andreww;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1;
next	1.7;

1.7
date	97.01.15.12.24.15;	author io;	state Exp;
branches;
next	1.6;

1.6
date	96.08.21.15.01.26;	author stephenb;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1
	1.6.4.1
	1.6.5.1
	1.6.6.1
	1.6.7.1;
next	1.5;

1.5
date	96.08.09.10.37.06;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	96.07.15.15.57.44;	author andreww;	state Exp;
branches;
next	1.3;

1.3
date	96.07.05.11.15.57;	author andreww;	state Exp;
branches;
next	1.2;

1.2
date	96.03.20.15.03.48;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	96.03.01.17.29.10;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.44.03;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.07.16.37.16;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.10.17.11.56.15;	author hope;	state Exp;
branches;
next	;

1.6.4.1
date	96.11.14.13.24.35;	author hope;	state Exp;
branches
	1.6.4.1.1.1;
next	;

1.6.4.1.1.1
date	96.11.28.15.35.32;	author hope;	state Exp;
branches;
next	;

1.6.5.1
date	96.11.22.18.41.42;	author hope;	state Exp;
branches;
next	;

1.6.6.1
date	96.12.17.18.20.40;	author hope;	state Exp;
branches
	1.6.6.1.1.1;
next	;

1.6.6.1.1.1
date	97.02.24.12.15.21;	author hope;	state Exp;
branches;
next	;

1.6.7.1
date	96.12.18.10.16.14;	author hope;	state Exp;
branches;
next	;

1.8.1.1
date	97.05.12.10.54.18;	author hope;	state Exp;
branches
	1.8.1.1.1.1
	1.8.1.1.2.1
	1.8.1.1.3.1;
next	;

1.8.1.1.1.1
date	97.07.28.18.36.53;	author daveb;	state Exp;
branches
	1.8.1.1.1.1.1.1;
next	;

1.8.1.1.1.1.1.1
date	97.10.07.12.01.59;	author jkbrook;	state Exp;
branches;
next	;

1.8.1.1.2.1
date	97.09.08.17.29.02;	author daveb;	state Exp;
branches;
next	;

1.8.1.1.3.1
date	97.09.09.14.26.57;	author daveb;	state Exp;
branches;
next	;

1.8.2.1
date	97.09.10.19.45.14;	author brucem;	state Exp;
branches;
next	;

1.8.3.1
date	97.09.11.21.12.23;	author daveb;	state Exp;
branches;
next	;

1.9.1.1
date	99.04.01.18.10.26;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Support for revised initial basis
@


1.9
log
@[Bug #30416]
Add support for CREATE_ALWAYS
@
text
@(* Copyright (C) 1996 Harlequin Ltd.
 *
 * An interface to a misc. collection of features made available
 * on any operating system that claims to be Win32.
 *
 * Revision Log
 * ------------
 *
 *  $Log: _win32os.sml,v $
 *  Revision 1.8  1997/03/27  16:39:47  andreww
 *  [Bug #2004]
 *  add seek_current to seek_direction.
 *
 *  Revision 1.7  1997/01/15  12:24:15  io
 *  [Bug #1892]
 *  rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
 *
 *  Revision 1.6  1996/08/21  15:01:26  stephenb
 *  [Bug #1554]
 *  Replaces various uses of int with file_desc type.
 *
 *  Revision 1.5  1996/08/09  10:37:06  daveb
 *  [Bug #1536]
 *  Made read and write use Word8Vector.vectors instead of strings.
 *
 *  Revision 1.4  1996/07/15  15:57:44  andreww
 *  propagating changes made to system calls arising from the code to
 *  dynamically redirect standard IO.
 *
 *  Revision 1.3  1996/07/05  11:15:57  andreww
 *  Altering win32 runtime environment interface.
 *
 *  Revision 1.2  1996/03/20  15:03:48  matthew
 *  Changes for language revision
 *
 *  Revision 1.1  1996/03/01  17:29:10  jont
 *  new unit
 *  Support for revised initial basis
 *
 *
 *)

require "win32os";
require "^.basis.__word8_vector";

functor Win32OS () : WIN32OS =
  struct

    type file_desc = MLWorks.Internal.IO.file_desc

      (* NB, seek_direction will eventually migrate to the pervasive library.
       * There, at the moment, we're relying on the coincidence that
       * FROM_BEGIN->0, FROM_CURRENT->1, FROM_END->2 in the compiler
       * which just happens to be how 0,1 and 2 are interpreted in
       * the runtime. <URI:hope://MLWrts/src/OS/Win32/win32.c#win32_seek>
       *)

    datatype seek_direction = FROM_BEGIN | FROM_CURRENT | FROM_END

    datatype open_method = READ | READ_WRITE | WRITE 

    datatype open_action = CREATE_ALWAYS | OPEN_ALWAYS | OPEN_EXISTING

    val env = MLWorks.Internal.Runtime.environment

    val open_ : string * open_method * open_action -> file_desc = env "system os win32 open"

    (* The casts in the following are ugly but harmless.
     * Could eliminate most of them by moving the
     * Word8Vector.vector definition to MLWorks.
     *)
    val close : file_desc -> unit = MLWorks.Internal.IO.close

    val write : file_desc * Word8Vector.vector * int * int -> int = 
      MLWorks.Internal.Value.cast MLWorks.Internal.IO.write

    val read : file_desc * int -> Word8Vector.vector =
      MLWorks.Internal.Value.cast MLWorks.Internal.IO.read

    val seek : file_desc * int * seek_direction -> int = 
      MLWorks.Internal.Value.cast MLWorks.Internal.IO.seek

    val size : file_desc -> int = env "system os win32 size"

  end
@


1.9.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a9 4
 *  Revision 1.9  1998/06/05  14:24:54  mitchell
 *  [Bug #30416]
 *  Add support for CREATE_ALWAYS
 *
@


1.8
log
@[Bug #2004]
add seek_current to seek_direction.
@
text
@d10 4
d62 1
a62 1
    datatype open_action = OPEN_ALWAYS | OPEN_EXISTING
@


1.8.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a9 4
 *  Revision 1.8  1997/03/27  16:39:47  andreww
 *  [Bug #2004]
 *  add seek_current to seek_direction.
 *
@


1.8.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a9 4
 *  Revision 1.8  1997/03/27  16:39:47  andreww
 *  [Bug #2004]
 *  add seek_current to seek_direction.
 *
@


1.8.1.1
log
@branched from 1.8
@
text
@a9 4
 *  Revision 1.8  1997/03/27  16:39:47  andreww
 *  [Bug #2004]
 *  add seek_current to seek_direction.
 *
@


1.8.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a9 3
 *  Revision 1.8.1.1  1997/05/12  10:54:18  hope
 *  branched from 1.8
 *
@


1.8.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a9 3
 *  Revision 1.8.1.1  1997/05/12  10:54:18  hope
 *  branched from 1.8
 *
@


1.8.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a9 3
 *  Revision 1.8.1.1  1997/05/12  10:54:18  hope
 *  branched from 1.8
 *
@


1.8.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a9 3
 *  Revision 1.8.1.1.1.1  1997/07/28  18:36:53  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.7
log
@[Bug #1892]
rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
@
text
@d10 4
d47 8
a54 1
    datatype seek_direction = FROM_BEGIN | FROM_END
@


1.6
log
@[Bug #1554]
Replaces various uses of int with file_desc type.
@
text
@d10 4
d36 1
a36 1
require "^.basis.__word8vector";
@


1.6.7.1
log
@branched from 1.6
@
text
@a9 4
 *  Revision 1.6  1996/08/21  15:01:26  stephenb
 *  [Bug #1554]
 *  Replaces various uses of int with file_desc type.
 *
@


1.6.6.1
log
@branched from 1.6
@
text
@a9 4
 *  Revision 1.6  1996/08/21  15:01:26  stephenb
 *  [Bug #1554]
 *  Replaces various uses of int with file_desc type.
 *
@


1.6.6.1.1.1
log
@branched from 1.6.6.1
@
text
@a9 3
 *  Revision 1.6.6.1  1996/12/17  18:20:40  hope
 *  branched from 1.6
 *
@


1.6.5.1
log
@branched from 1.6
@
text
@a9 4
 *  Revision 1.6  1996/08/21  15:01:26  stephenb
 *  [Bug #1554]
 *  Replaces various uses of int with file_desc type.
 *
@


1.6.4.1
log
@branched from 1.6
@
text
@a9 4
 *  Revision 1.6  1996/08/21  15:01:26  stephenb
 *  [Bug #1554]
 *  Replaces various uses of int with file_desc type.
 *
@


1.6.4.1.1.1
log
@branched from 1.6.4.1
@
text
@a9 3
 *  Revision 1.6.4.1  1996/11/14  13:24:35  hope
 *  branched from 1.6
 *
@


1.6.3.1
log
@branched from 1.6
@
text
@a9 4
 *  Revision 1.6  1996/08/21  15:01:26  stephenb
 *  [Bug #1554]
 *  Replaces various uses of int with file_desc type.
 *
@


1.6.2.1
log
@branched from 1.6
@
text
@a9 4
 *  Revision 1.6  1996/08/21  15:01:26  stephenb
 *  [Bug #1554]
 *  Replaces various uses of int with file_desc type.
 *
@


1.6.1.1
log
@branched from 1.6
@
text
@a9 4
 *  Revision 1.6  1996/08/21  15:01:26  stephenb
 *  [Bug #1554]
 *  Replaces various uses of int with file_desc type.
 *
@


1.5
log
@[Bug #1536]
Made read and write use Word8Vector.vectors instead of strings.
@
text
@d10 4
d36 8
a43 7
    val FILE_BEGIN = 0       (* these constants will be translated   *)
    val FILE_END   = 1       (* to their Win32 internal symbolic     *)
    val OPEN_ALWAYS= 0       (* constants in the runtime environment *)
    val OPEN_EXISTING=1      (* (see rts/OS/Win32/win32.c)           *)
    val GENERIC_READ=0       (* Yucky, I know.                       *)
    val GENERIC_WRITE=1
    val GENERIC_READ_WRITE=2
a45 2
    val open_ : string * int * int -> int = env "system os win32 open"
    val close : int -> unit = MLWorks.Internal.StandardIO.close
d47 16
a62 2
    val write : int * Word8Vector.vector * int * int -> int = 
      MLWorks.Internal.Value.cast MLWorks.Internal.StandardIO.write
d64 1
a64 2
    val read : int * int -> Word8Vector.vector =
      MLWorks.Internal.Value.cast MLWorks.Internal.StandardIO.read
a65 7
    val seek : int * int * int -> int = MLWorks.Internal.StandardIO.seek
    val size : int -> int = env "system os win32 size"

(*    val std_in: int = env "system os win32 standard in"
    val std_out: int = env "system os win32 standard out"
    val std_err: int = env "system os win32 standard err"
*)
@


1.4
log
@propagating changes made to system calls arising from the code to
dynamically redirect standard IO.
@
text
@d10 4
d28 1
d43 7
a49 3
    val write : int * string * int * int -> int = 
                                             MLWorks.Internal.StandardIO.write
    val read : int * int -> string = MLWorks.Internal.StandardIO.read
@


1.3
log
@Altering win32 runtime environment interface.
@
text
@d10 3
d37 5
a41 4
    val close : int -> unit = env "system os win32 close"
    val write : int * string * int * int -> int = env "system os win32 write"
    val read : int * int -> string = env "system os win32 read"
    val seek : int * int * int -> unit = env "system os win32 seek"
d44 1
a44 1
    val std_in: int = env "system os win32 standard in"
d47 1
a47 1

@


1.2
log
@Changes for language revision
@
text
@d10 3
d24 8
d33 1
a33 1
    val open_ : string * int -> int = env "system os win32 open"
d37 1
a37 1
    val seek : {fd : int, pos : int} -> unit = env "system os win32 seek"
d39 5
@


1.1
log
@new unit
Support for revised initial basis
@
text
@d9 5
a13 1
 *  $Log$
d21 7
a27 7
    fun env s = MLWorks.Internal.Value.cast (MLWorks.Internal.Runtime.environment s)
    val open_ = env "system os win32 open"
    val close = env "system os win32 close"
    val write = env "system os win32 write"
    val read = env "system os win32 read"
    val seek = env "system os win32 seek"
    val size = env "system os win32 size"
@
