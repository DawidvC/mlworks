head	1.16;
access;
symbols
	MLW_daveb_inline_1_4_99:1.16.1
	MLWorks_21c0_1999_03_25:1.16
	MLWorks_20c1_1998_08_20:1.16
	MLWorks_20c0_1998_08_04:1.16
	MLWorks_20b2c2_1998_06_19:1.15
	MLWorks_20b2_Windows_1998_06_12:1.15
	MLWorks_20b1c1_1998_05_07:1.15
	MLWorks_20b0_1998_04_07:1.14
	MLWorks_20b0_1998_03_20:1.14
	MLWorks_20m2_1998_02_16:1.14
	MLWorks_20m1_1997_10_23:1.13
	MLWorks_11r1:1.13.5.1.1.1.1
	MLWorks_workspace_97:1.13.7
	MLWorks_dt_wizard:1.13.6
	MLWorks_11c0_1997_09_09:1.13.5.1.1.1
	MLWorks_10r3:1.13.5.1.3
	MLWorks_10r2_551:1.13.5.1.2
	MLWorks_11:1.13.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.13.5.1
	MLWorks_20m0_1997_06_20:1.13
	MLWorks_1_0_r2c2_1997_06_14:1.13.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.13.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.13.5
	MLWorks_BugFix_1997_04_24:1.13
	MLWorks_1_0_r2_Win32_1997_04_11:1.13
	MLWorks_1_0_r2_Unix_1997_04_04:1.13
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.13.3.1.1
	MLWorks_gui_1996_12_18:1.13.4
	MLWorks_1_0_Win32_1996_12_17:1.13.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.13.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.13.1.1
	MLWorks_1_0_Irix_1996_11_28:1.13.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.13.2
	MLWorks_1_0_Unix_1996_11_14:1.13.1
	MLWorks_Open_Beta2_1996_10_11:1.8.3
	MLWorks_License_dev:1.8.2
	MLWorks_1_open_beta_1996_09_13:1.8.1
	MLWorks_Open_Beta_1996_08_22:1.7
	MLWorks_Beta_1996_07_02:1.7
	MLWorks_Beta_1996_06_07:1.5
	MLWorks_Beta_1996_06_06:1.5
	MLWorks_Beta_1996_06_05:1.5
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4;
locks; strict;
comment	@ * @;


1.16
date	98.07.03.12.32.17;	author mitchell;	state Exp;
branches
	1.16.1.1;
next	1.15;

1.15
date	98.04.20.17.09.49;	author jont;	state Exp;
branches;
next	1.14;

1.14
date	97.10.30.10.11.36;	author johnh;	state Exp;
branches;
next	1.13;

1.13
date	96.11.08.14.24.05;	author matthew;	state Exp;
branches
	1.13.1.1
	1.13.2.1
	1.13.3.1
	1.13.4.1
	1.13.5.1
	1.13.6.1
	1.13.7.1;
next	1.12;

1.12
date	96.10.29.12.41.49;	author jont;	state Exp;
branches;
next	1.11;

1.11
date	96.10.25.09.45.12;	author johnh;	state Exp;
branches;
next	1.10;

1.10
date	96.10.22.14.49.12;	author johnh;	state Exp;
branches;
next	1.9;

1.9
date	96.10.22.14.14.38;	author johnh;	state Exp;
branches;
next	1.8;

1.8
date	96.08.21.12.05.03;	author stephenb;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1;
next	1.7;

1.7
date	96.06.14.10.37.33;	author stephenb;	state Exp;
branches;
next	1.6;

1.6
date	96.06.05.14.36.17;	author stephenb;	state Exp;
branches;
next	1.5;

1.5
date	96.05.31.15.46.02;	author stephenb;	state Exp;
branches;
next	1.4;

1.4
date	96.04.22.12.00.44;	author brianm;	state Exp;
branches;
next	1.3;

1.3
date	96.03.28.14.05.20;	author stephenb;	state Exp;
branches;
next	1.2;

1.2
date	96.03.12.15.44.33;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	96.01.22.09.36.47;	author stephenb;	state Exp;
branches;
next	;

1.8.1.1
date	96.09.13.11.44.01;	author hope;	state Exp;
branches;
next	;

1.8.2.1
date	96.10.07.16.37.14;	author hope;	state Exp;
branches;
next	;

1.8.3.1
date	96.10.17.11.56.13;	author hope;	state Exp;
branches;
next	;

1.13.1.1
date	96.11.14.13.24.34;	author hope;	state Exp;
branches
	1.13.1.1.1.1;
next	;

1.13.1.1.1.1
date	96.11.28.15.35.31;	author hope;	state Exp;
branches;
next	;

1.13.2.1
date	96.11.22.18.41.40;	author hope;	state Exp;
branches;
next	;

1.13.3.1
date	96.12.17.18.20.38;	author hope;	state Exp;
branches
	1.13.3.1.1.1;
next	;

1.13.3.1.1.1
date	97.02.24.12.15.18;	author hope;	state Exp;
branches;
next	;

1.13.4.1
date	96.12.18.10.16.12;	author hope;	state Exp;
branches;
next	;

1.13.5.1
date	97.05.12.10.54.16;	author hope;	state Exp;
branches
	1.13.5.1.1.1
	1.13.5.1.2.1
	1.13.5.1.3.1;
next	;

1.13.5.1.1.1
date	97.07.28.18.36.52;	author daveb;	state Exp;
branches
	1.13.5.1.1.1.1.1;
next	;

1.13.5.1.1.1.1.1
date	97.10.07.12.01.58;	author jkbrook;	state Exp;
branches;
next	;

1.13.5.1.2.1
date	97.09.08.17.29.01;	author daveb;	state Exp;
branches;
next	;

1.13.5.1.3.1
date	97.09.09.14.26.56;	author daveb;	state Exp;
branches;
next	;

1.13.6.1
date	97.09.10.19.45.13;	author brucem;	state Exp;
branches;
next	;

1.13.7.1
date	97.09.11.21.12.23;	author daveb;	state Exp;
branches;
next	;

1.16.1.1
date	99.04.01.18.10.26;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
OS reorganisation: the pervasive library no longer contains
OS specific stuff, instead the NT structure has been factored
out as a separate structure and renamed Win32.
@


1.16
log
@[Bug #30434]
Use Windows structure for registry access rather than Win32
@
text
@(* Copyright (C) 1996 Harlequin Ltd.
 *
 * An interface to a misc. collection of features made available
 * under Windows 95 / Windows NT.
 *
 * Revision Log
 * ------------
 *
 * $Log: win32.sml,v $
 * Revision 1.15  1998/04/20  17:09:49  jont
 * [Bug #70107]
 * Add closeIOD function
 *
 * Revision 1.14  1997/10/30  10:11:36  johnh
 * [Bug #30233]
 * Fix return result of create process.
 *
 * Revision 1.13  1996/11/08  14:24:05  matthew
 * [Bug #1661]
 * Changing io_desc to iodesc
 *
 * Revision 1.12  1996/10/29  12:41:49  jont
 * Sorting out lost version problems
 *
 * Revision 1.11  1996/10/25  09:45:12  johnh
 * [Bug #1426]
 * [Bug #1426]
 * Replaced Win32 environment with Windows registry.
 *
 * Revision 1.10  1996/10/22  14:49:12  johnh
 * Undoing changes to registry to allow further work to be done.
 *
 * Revision 1.9  1996/10/22  14:14:38  johnh
 * [Bug #1426]
 * [Bug #1426]
 * Removing Win32 environment and using registry instead.
 *
 * Revision 1.8  1996/08/21  12:05:03  stephenb
 * [Bug #1554]
 * Move iodesc from os_io.sml to here and also add conversion
 * function fdToIOD to convert between file descriptors and io
 * descriptors.
 *
 * Revision 1.7  1996/06/14  10:37:33  stephenb
 * Move the definition of a iodesc from OS.IO to here and called it file_desc
 * so that it is possible to construct a file_desc for testing purposes by dealing
 * directly with the representation.
 *
 * Revision 1.6  1996/06/05  14:36:17  stephenb
 * Remove the find_{first_file,next_file,close} functions since
 * they were only here to support OS.FileSys.{open,read,close}Dir and
 * these now pull the relevant routines through directly from the runtime.
 *
 * Revision 1.4  1996/04/22  12:00:44  brianm
 * Adding Win32 call for creating a process with priorities ...
 *
 * Revision 1.3  1996/03/28  14:05:20  stephenb
 * Change the exception to be compatible with the OS.SysError exception
 * in the latest basis definition.
 *
 * Revision 1.2  1996/03/12  15:44:33  matthew
 * Adding set_current_directory
 *
 * Revision 1.1  1996/01/22  09:36:47  stephenb
 * new unit
 * OS reorganisation: the pervasive library no longer contains
 * OS specific stuff, instead the NT structure has been factored
 * out as a separate structure and renamed Win32.
 *
 *
 *)

signature WIN32 =
  sig
    type syserror
    exception SysErr of (string * syserror option)

    type file_desc

    datatype iodesc = IODESC of int      (* Unix style file descriptor *)

    (* Convert an file_desc to an iodesc.
     * Raises: SysErr if the conversion cannot be performed
     *)
    val fdToIOD : file_desc -> iodesc
    val closeIOD : iodesc -> unit

    datatype priority = REAL_TIME | HIGH | NORMAL | BACKGROUND

    val create_process : string * priority -> bool

  end
@


1.16.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a9 4
 * Revision 1.16  1998/07/03  12:32:17  mitchell
 * [Bug #30434]
 * Use Windows structure for registry access rather than Win32
 *
@


1.15
log
@[Bug #70107]
Add closeIOD function
@
text
@d10 4
a80 29

    eqtype word

    (* Windows Registry Functions *)

    datatype regsam = 
      KEY_ALL_ACCESS
    | KEY_CREATE_LINK
    | KEY_CREATE_SUB_KEY
    | KEY_ENUMERATE_SUB_KEYS
    | KEY_EXECUTE
    | KEY_NOTIFY
    | KEY_QUERY_VALUE
    | KEY_READ
    | KEY_SET_VALUE
    | KEY_WRITE
  
    val convertSamValues : regsam -> int 

    datatype hkey = HKEY of word

    val HKEY_CLASSES_ROOT : hkey 
    val HKEY_CURRENT_USER : hkey 
    val HKEY_LOCAL_MACHINE : hkey 
    val HKEY_USERS : hkey 

    val regCloseKey : hkey -> unit
    val regOpenKeyEx : hkey * string * regsam -> hkey option
    val regQueryValueEx : hkey * string -> string
@


1.14
log
@[Bug #30233]
Fix return result of create process.
@
text
@d10 4
d111 2
a112 1
    
@


1.13
log
@[Bug #1661]
Changing io_desc to iodesc
@
text
@d10 4
d110 1
a110 1
    val create_process : string * priority -> int
@


1.13.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a9 4
 * Revision 1.13  1996/11/08  14:24:05  matthew
 * [Bug #1661]
 * Changing io_desc to iodesc
 *
@


1.13.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a9 4
 * Revision 1.13  1996/11/08  14:24:05  matthew
 * [Bug #1661]
 * Changing io_desc to iodesc
 *
@


1.13.5.1
log
@branched from 1.13
@
text
@a9 4
 * Revision 1.13  1996/11/08  14:24:05  matthew
 * [Bug #1661]
 * Changing io_desc to iodesc
 *
@


1.13.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a9 3
 * Revision 1.13.5.1  1997/05/12  10:54:16  hope
 * branched from 1.13
 *
@


1.13.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a9 3
 * Revision 1.13.5.1  1997/05/12  10:54:16  hope
 * branched from 1.13
 *
@


1.13.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a9 3
 * Revision 1.13.5.1  1997/05/12  10:54:16  hope
 * branched from 1.13
 *
@


1.13.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a9 3
 * Revision 1.13.5.1.1.1  1997/07/28  18:36:52  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.13.4.1
log
@branched from 1.13
@
text
@a9 4
 * Revision 1.13  1996/11/08  14:24:05  matthew
 * [Bug #1661]
 * Changing io_desc to iodesc
 *
@


1.13.3.1
log
@branched from 1.13
@
text
@a9 4
 * Revision 1.13  1996/11/08  14:24:05  matthew
 * [Bug #1661]
 * Changing io_desc to iodesc
 *
@


1.13.3.1.1.1
log
@branched from 1.13.3.1
@
text
@a9 3
 * Revision 1.13.3.1  1996/12/17  18:20:38  hope
 * branched from 1.13
 *
@


1.13.2.1
log
@branched from 1.13
@
text
@a9 4
 * Revision 1.13  1996/11/08  14:24:05  matthew
 * [Bug #1661]
 * Changing io_desc to iodesc
 *
@


1.13.1.1
log
@branched from 1.13
@
text
@a9 4
 * Revision 1.13  1996/11/08  14:24:05  matthew
 * [Bug #1661]
 * Changing io_desc to iodesc
 *
@


1.13.1.1.1.1
log
@branched from 1.13.1.1
@
text
@a9 3
 * Revision 1.13.1.1  1996/11/14  13:24:34  hope
 * branched from 1.13
 *
@


1.12
log
@Sorting out lost version problems
@
text
@d10 3
d28 1
a28 1
 * Move io_desc from os_io.sml to here and also add conversion
d33 1
a33 1
 * Move the definition of a io_desc from OS.IO to here and called it file_desc
d68 1
a68 1
    datatype io_desc = IO_DESC of int      (* Unix style file descriptor *)
d99 1
a99 1
    (* Convert an file_desc to an io_desc.
d102 1
a102 1
    val fdToIOD : file_desc -> io_desc
@


1.11
log
@[Bug #1426]
[Bug #1426]
Replaced Win32 environment with Windows registry.
@
text
@d10 19
a57 2
require "^.basis.toplevel";

a59 5
    (* Used to define OS.syserr and OS.SysErr.
     * They aren't defined in OS because various OS substructures are
     * implemented separately (e.g. OS.FileSys) and also need to refer
     * to OS.SysErr.
     *)
d63 1
d65 1
a65 6
    (* 
     * Used to define OS.IO.io_desc.  The representation is hidden in that
     * interface, so it is defined here so that it is easy to construct
     * a value for testing purposes.
     *)
    datatype file_desc = FILE_DESC of int
d96 5
@


1.10
log
@Undoing changes to registry to allow further work to be done.
@
text
@a9 11
 * Revision 1.9  1996/10/22  14:14:38  johnh
 * [Bug #1426]
 * [Bug #1426]
 * Removing Win32 environment and using registry instead.
 *
 * Revision 1.8  1996/08/21  12:05:03  stephenb
 * [Bug #1554]
 * Move io_desc from os_io.sml to here and also add conversion
 * function fdToIOD to convert between file descriptors and io
 * descriptors.
 *
d39 1
d43 5
d52 6
a57 1
    type file_desc
d59 1
a59 1
    datatype io_desc = IO_DESC of int      (* Unix style file descriptor *)
d61 1
d63 24
a86 6
    (* Convert an file_desc to an io_desc.
     * Raises: SysErr if the conversion cannot be performed
     *)
    val fdToIOD : file_desc -> io_desc
    
    val environment : unit -> string list
@


1.9
log
@[Bug #1426]
[Bug #1426]
Removing Win32 environment and using registry instead.
@
text
@d10 5
d67 1
a67 26
    (* Windows Registry Functions *)

    datatype regsam = 
      KEY_ALL_ACCESS
    | KEY_CREATE_LINK
    | KEY_CREATE_SUB_KEY
    | KEY_ENUMERATE_SUB_KEYS
    | KEY_EXECUTE
    | KEY_NOTIFY
    | KEY_QUERY_VALUE
    | KEY_READ
    | KEY_SET_VALUE
    | KEY_WRITE
  
    val convertSamValues : regsam -> int 

    datatype hkey = HKEY of word

    val HKEY_CLASSES_ROOT : hkey 
    val HKEY_CURRENT_USER : hkey 
    val HKEY_LOCAL_MACHINE : hkey 
    val HKEY_USERS : hkey 

    val regCloseKey : hkey -> unit
    val regOpenKeyEx : hkey * string * regsam -> hkey
    val regQueryValueEx : hkey * string -> string
@


1.8
log
@[Bug #1554]
Move io_desc from os_io.sml to here and also add conversion
function fdToIOD to convert between file descriptors and io
descriptors.
@
text
@d10 6
d62 1
d64 24
a87 1
    val environment : unit -> string list
@


1.8.3.1
log
@branched from 1.8
@
text
@a9 6
 * Revision 1.8  1996/08/21  12:05:03  stephenb
 * [Bug #1554]
 * Move io_desc from os_io.sml to here and also add conversion
 * function fdToIOD to convert between file descriptors and io
 * descriptors.
 *
@


1.8.2.1
log
@branched from 1.8
@
text
@a9 6
 * Revision 1.8  1996/08/21  12:05:03  stephenb
 * [Bug #1554]
 * Move io_desc from os_io.sml to here and also add conversion
 * function fdToIOD to convert between file descriptors and io
 * descriptors.
 *
@


1.8.1.1
log
@branched from 1.8
@
text
@a9 6
 * Revision 1.8  1996/08/21  12:05:03  stephenb
 * [Bug #1554]
 * Move io_desc from os_io.sml to here and also add conversion
 * function fdToIOD to convert between file descriptors and io
 * descriptors.
 *
@


1.7
log
@Move the definition of a io_desc from OS.IO to here and called it file_desc
so that it is possible to construct a file_desc for testing purposes by dealing
directly with the representation.
@
text
@d10 5
a38 1
require "^.basis.toplevel";
a41 5
    (* Used to define OS.syserr and OS.SysErr.
     * They aren't defined in OS because various OS substructures are
     * implemented separately (e.g. OS.FileSys) and also need to refer
     * to OS.SysErr.
     *)
d46 7
a52 4
    (* 
     * Used to define OS.IO.io_desc.  The representation is hidden in that
     * interface, so it is defined here so that it is easy to construct
     * a value for testing purposes.
d54 2
a55 2
    datatype file_desc = FILE_DESC of int

@


1.6
log
@Remove the find_{first_file,next_file,close} functions since
they were only here to support OS.FileSys.{open,read,close}Dir and
these now pull the relevant routines through directly from the runtime.
@
text
@d10 5
d38 5
d46 10
a55 1
    val environment		: unit -> string list
@


1.5
log
@Remove various functions that are now pulled through directly
in _os_file_sys.sml.
@
text
@a37 5
    type DirHandle
    val find_first_file : string -> string * DirHandle
    val find_next_file  : DirHandle -> string
    val find_close      : DirHandle -> unit

@


1.4
log
@Adding Win32 call for creating a process with priorities ...
@
text
@d10 3
d29 2
d34 1
a34 1
    exception SysErr of (string * syserror MLWorks.Option.option)
a36 4
    val get_current_directory	: unit -> string
    val set_current_directory	: string -> unit

    val get_path_name		: string -> string
@


1.3
log
@Change the exception to be compatible with the OS.SysError exception
in the latest basis definition.
@
text
@d10 4
d41 5
@


1.2
log
@Adding set_current_directory
@
text
@d10 3
d24 2
a25 1
    exception Win32 of int
@


1.1
log
@new unit
OS reorganisation: the pervasive library no longer contains
OS specific stuff, instead the NT structure has been factored
out as a separate structure and renamed Win32.
@
text
@d9 7
a15 1
 * $Log$
d25 2
@
