head	1.9;
access;
symbols
	MLWorks_20m1_1997_10_23:1.9
	MLWorks_11r1:1.9.4.1.1.1.1
	MLWorks_workspace_97:1.9.6
	MLWorks_dt_wizard:1.9.5
	MLWorks_11c0_1997_09_09:1.9.4.1.1.1
	MLWorks_10r3:1.9.4.1.3
	MLWorks_10r2_551:1.9.4.1.2
	MLWorks_11:1.9.4.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.9.4.1
	MLWorks_20m0_1997_06_20:1.9
	MLWorks_1_0_r2c2_1997_06_14:1.9.4.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.9.4.1
	MLWorks_1_0_r2c1_1997_05_12:1.9.4
	MLWorks_BugFix_1997_04_24:1.9
	MLWorks_1_0_r2_Win32_1997_04_11:1.9
	MLWorks_1_0_r2_Unix_1997_04_04:1.9
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.9.2.1.1
	MLWorks_gui_1996_12_18:1.9.3
	MLWorks_1_0_Win32_1996_12_17:1.9.2
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.8.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.8.1.1
	MLWorks_1_0_Irix_1996_11_28:1.8.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.9.1
	MLWorks_1_0_Unix_1996_11_14:1.8.1
	MLWorks_Open_Beta2_1996_10_11:1.6.3
	MLWorks_License_dev:1.6.2
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.6
	MLWorks_Beta_1996_06_07:1.6
	MLWorks_Beta_1996_06_06:1.6
	MLWorks_Beta_1996_06_05:1.6
	MLWorks_Beta_1996_06_03:1.6
	MLWorks_Beta_1996_05_31:1.6
	MLWorks_Beta_1996_05_30:1.5;
locks; strict;
comment	@ * @;


1.9
date	96.11.14.15.11.35;	author jont;	state Exp;
branches
	1.9.1.1
	1.9.2.1
	1.9.3.1
	1.9.4.1
	1.9.5.1
	1.9.6.1;
next	1.8;

1.8
date	96.10.30.20.36.59;	author io;	state Exp;
branches
	1.8.1.1;
next	1.7;

1.7
date	96.10.25.09.55.18;	author johnh;	state Exp;
branches;
next	1.6;

1.6
date	96.05.30.15.07.13;	author daveb;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1;
next	1.5;

1.5
date	96.05.01.11.52.17;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	96.04.17.13.00.27;	author stephenb;	state Exp;
branches;
next	1.3;

1.3
date	96.03.29.10.59.02;	author stephenb;	state Exp;
branches;
next	1.2;

1.2
date	96.01.18.16.12.51;	author stephenb;	state Exp;
branches;
next	1.1;

1.1
date	94.12.12.16.17.52;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.43.59;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.07.16.37.12;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.10.17.11.56.11;	author hope;	state Exp;
branches;
next	;

1.8.1.1
date	96.11.14.13.24.32;	author hope;	state Exp;
branches
	1.8.1.1.1.1;
next	;

1.8.1.1.1.1
date	96.11.28.15.35.27;	author hope;	state Exp;
branches;
next	;

1.9.1.1
date	96.11.22.18.41.38;	author hope;	state Exp;
branches;
next	;

1.9.2.1
date	96.12.17.18.20.36;	author hope;	state Exp;
branches
	1.9.2.1.1.1;
next	;

1.9.2.1.1.1
date	97.02.24.12.15.14;	author hope;	state Exp;
branches;
next	;

1.9.3.1
date	96.12.18.10.16.09;	author hope;	state Exp;
branches;
next	;

1.9.4.1
date	97.05.12.10.54.14;	author hope;	state Exp;
branches
	1.9.4.1.1.1
	1.9.4.1.2.1
	1.9.4.1.3.1;
next	;

1.9.4.1.1.1
date	97.07.28.18.36.46;	author daveb;	state Exp;
branches
	1.9.4.1.1.1.1.1;
next	;

1.9.4.1.1.1.1.1
date	97.10.07.12.01.54;	author jkbrook;	state Exp;
branches;
next	;

1.9.4.1.2.1
date	97.09.08.17.28.57;	author daveb;	state Exp;
branches;
next	;

1.9.4.1.3.1
date	97.09.09.14.26.51;	author daveb;	state Exp;
branches;
next	;

1.9.5.1
date	97.09.10.19.45.08;	author brucem;	state Exp;
branches;
next	;

1.9.6.1
date	97.09.11.21.12.18;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.9
log
@[Bug #1763]
Remove get_user_name from GETENV
@
text
@(*
 * $Log: _win_nt.sml,v $
 * Revision 1.8  1996/10/30  20:36:59  io
 * [Bug #1614]
 * remove toplevel String.
 *
 * Revision 1.7  1996/10/25  09:55:18  johnh
 * [Bug #1426]
 * [Bug #1426]
 * Removed Win32 environment, replaced with Windows registry.
 *
 * Revision 1.6  1996/05/30  15:07:13  daveb
 * The Io constructor is no longer at top level.
 *
 * Revision 1.5  1996/05/01  11:52:17  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
 * Revision 1.4  1996/04/17  13:00:27  stephenb
 * Remove ctime since it is not used anywhere.
 *
 * Revision 1.3  1996/03/29  10:59:02  stephenb
 * Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
 * the deprecated OS interface.
 *
 * Revision 1.2  1996/01/18  16:12:51  stephenb
 * OS reorganisation: OS specific stuff is no longer in the
 * pervasive library, so the functor needs an extra parameter
 * to pass in the required UnixOS structure.
 *
 * Revision 1.1  1994/12/12  16:17:52  jont
 * new file
 *
 * Revision 1.1  1994/12/09  13:34:48  jont
 * new file
 *
 * Copyright (c) 1994 Harlequin Ltd.
 *)

require "../make/old_os";
require "../utils/getenv";

functor Win_nt(structure Getenv : GETENV) : OLD_OS= 
struct

  fun get_terminated_line file =
    let
      fun extend_line line =
	if MLWorks.IO.end_of_stream file then
	  concat (rev line)
	else
	  let
	    val char = MLWorks.IO.input(file, 1)
	  in
	    if char = "\n" then concat (rev("\n" :: line))
	    else
	      extend_line(char :: line)
	  end
    in
      extend_line []
    end
    
  val input_line = get_terminated_line

(* dummy function - not used on the Win32 side of things *)
  fun parse_environ string' = string' ^ " DUMMY FUNCTION "

  exception ParseEnviron

  fun username () = raise ParseEnviron (* Not useful on Win32 *)

  exception Home

  local

    fun nthoccur (string,char,n) =
      let
	fun count (position,n) =
	  if MLWorks.String.ordof (string,position) = ord char then
	  if n = 0 then 
	    position
	  else
	    count(position+1,n-1)
	  else
	    count(position+1,n)
      in
	count(0,n)
      end
  in

    fun home "" = valOf(Getenv.get_startup_dir())  (* parse_environ "HOME" *)
      | home x = raise Home
(*
	let
	  val fd = open_in "/etc/passwd"
	  val xsize = size x
	  fun parse_passwd () =
	    if end_of_stream fd then
	      raise Home
	    else
	      let
		val line = input_line fd
	      in
		if substring(line,0,xsize) = x then
		  let
		    val fourth = nthoccur(line,#":",4)
		    val rest = substring 
		      (line,fourth+1,(size line) - (fourth+1))
		    val fifth = nthoccur(rest,#":",0)
		  in
		    substring(rest,0,fifth)
		  end
		else
		  parse_passwd ()
	      end
	in
	  let
	    val home = parse_passwd ()
	  in
	    (close_in fd ; home)
	  end
	end     
*)
  end

  datatype mtime_res =
    EXISTS of MLWorks.Time.time |
    NOT_EXIST

  fun mtime filename =
    EXISTS (MLWorks.IO.file_modified filename)
    handle MLWorks.IO.Io _ => NOT_EXIST
    
  exception win_nt_ctime

  fun date () =
    raise win_nt_ctime
(*
    let
      val _ = MLWorks.OS.system "/bin/rm -rf /usr/tmp/mldate; /usr/bin/date > /usr/tmp/mldate"
      val i = open_in "/usr/tmp/mldate"
      val s = input_line i
      val _ = close_in i
    in
      substring (s,0,size s - 1)
    end
*)
end
@


1.9.6.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a2 4
 * Revision 1.9  1996/11/14  15:11:35  jont
 * [Bug #1763]
 * Remove get_user_name from GETENV
 *
@


1.9.5.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a2 4
 * Revision 1.9  1996/11/14  15:11:35  jont
 * [Bug #1763]
 * Remove get_user_name from GETENV
 *
@


1.9.4.1
log
@branched from 1.9
@
text
@a2 4
 * Revision 1.9  1996/11/14  15:11:35  jont
 * [Bug #1763]
 * Remove get_user_name from GETENV
 *
@


1.9.4.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a2 3
 * Revision 1.9.4.1  1997/05/12  10:54:14  hope
 * branched from 1.9
 *
@


1.9.4.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a2 3
 * Revision 1.9.4.1  1997/05/12  10:54:14  hope
 * branched from 1.9
 *
@


1.9.4.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a2 3
 * Revision 1.9.4.1  1997/05/12  10:54:14  hope
 * branched from 1.9
 *
@


1.9.4.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a2 3
 * Revision 1.9.4.1.1.1  1997/07/28  18:36:46  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.9.3.1
log
@branched from 1.9
@
text
@a2 4
 * Revision 1.9  1996/11/14  15:11:35  jont
 * [Bug #1763]
 * Remove get_user_name from GETENV
 *
@


1.9.2.1
log
@branched from 1.9
@
text
@a2 4
 * Revision 1.9  1996/11/14  15:11:35  jont
 * [Bug #1763]
 * Remove get_user_name from GETENV
 *
@


1.9.2.1.1.1
log
@branched from 1.9.2.1
@
text
@a2 3
 * Revision 1.9.2.1  1996/12/17  18:20:36  hope
 * branched from 1.9
 *
@


1.9.1.1
log
@branched from 1.9
@
text
@a2 4
 * Revision 1.9  1996/11/14  15:11:35  jont
 * [Bug #1763]
 * Remove get_user_name from GETENV
 *
@


1.8
log
@[Bug #1614]
remove toplevel String.
@
text
@d3 4
d72 1
a72 1
  fun username () = valOf (Getenv.get_user_name())  (* parse_environ "USER"  *)
@


1.8.1.1
log
@branched from 1.8
@
text
@a2 4
 * Revision 1.8  1996/10/30  20:36:59  io
 * [Bug #1614]
 * remove toplevel String.
 *
@


1.8.1.1.1.1
log
@branched from 1.8.1.1
@
text
@a2 3
 * Revision 1.8.1.1  1996/11/14  13:24:32  hope
 * branched from 1.8
 *
@


1.7
log
@[Bug #1426]
[Bug #1426]
Removed Win32 environment, replaced with Windows registry.
@
text
@d3 5
d48 1
a48 1
	  String.implode(rev line)
d53 1
a53 1
	    if char = "\n" then String.implode(rev("\n" :: line))
a75 1
	val charord = String.ord char
d77 1
a77 1
	  if String.ordof (string,position) = charord then
d102 1
a102 1
		if String.substring(line,0,xsize) = x then
d104 2
a105 2
		    val fourth = nthoccur(line,":",4)
		    val rest = String.substring 
d107 1
a107 1
		    val fifth = nthoccur(rest,":",0)
d109 1
a109 1
		    String.substring(rest,0,fifth)
d143 1
a143 1
      String.substring (s,0,size s - 1)
@


1.6
log
@The Io constructor is no longer at top level.
@
text
@d3 3
d34 1
a34 1
require "win32";
d36 1
a36 1
functor Win_nt(structure Win32: WIN32) : OLD_OS =
d38 1
d58 3
d63 1
a63 18
  fun parse_environ (key) =
    let 
      val key = key ^ "="
      val keysize = (size key)
      fun searchkey nil = raise ParseEnviron
	| searchkey (x::rest) =
	  let val xsize = size x
	  in
	    if xsize >= keysize andalso String.substring(x,0,keysize) = key then
	      String.substring (x,keysize,xsize-keysize)
	  else
	    searchkey rest
	  end
    in
      searchkey (Win32.environment ())
    end	    

  fun username () = parse_environ "USER"
d85 1
a85 1
    fun home "" = parse_environ "HOME"
@


1.6.3.1
log
@branched from 1.6
@
text
@a2 3
 * Revision 1.6  1996/05/30  15:07:13  daveb
 * The Io constructor is no longer at top level.
 *
@


1.6.2.1
log
@branched from 1.6
@
text
@a2 3
 * Revision 1.6  1996/05/30  15:07:13  daveb
 * The Io constructor is no longer at top level.
 *
@


1.6.1.1
log
@branched from 1.6
@
text
@a2 3
 * Revision 1.6  1996/05/30  15:07:13  daveb
 * The Io constructor is no longer at top level.
 *
@


1.5
log
@String functions explode, implode, chr and ord now only available from String
io functions and types
instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
now only available from MLWorks.IO
@
text
@d3 6
d136 1
a136 1
    handle Io _ => NOT_EXIST
@


1.4
log
@Remove ctime since it is not used anywhere.
@
text
@d3 3
d32 2
a33 2
	if end_of_stream file then
	  implode(rev line)
d36 1
a36 1
	    val char = input(file, 1)
d38 1
a38 1
	    if char = "\n" then implode(rev("\n" :: line))
d75 1
a75 1
	val charord = ord char
@


1.3
log
@Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
the deprecated OS interface.
@
text
@d3 4
a129 12

  fun ctime () =
    raise win_nt_ctime
(*
    let
      val _ = MLWorks.OS.system "/usr/bin/touch /usr/tmp/mlstamp"
    in
      case (mtime "/usr/tmp/mlstamp") of
	EXISTS sec => sec
      | NOT_EXISTS => raise unix_ctime
    end
*)
@


1.2
log
@OS reorganisation: OS specific stuff is no longer in the
pervasive library, so the functor needs an extra parameter
to pass in the required UnixOS structure.
@
text
@d3 5
d17 1
a17 1
require "../make/os";
d20 1
a20 1
functor Win_nt(structure Win32: WIN32) : OS =
@


1.1
log
@new file
@
text
@a0 1
(* _unix.sml the functor *)
d2 4
a5 1
 * $Log: _unix.sml,v $
d13 1
d15 1
a15 1
functor Win_nt() : OS =
d52 1
a52 1
      searchkey (MLWorks.OS.Unix.environment ())
@
