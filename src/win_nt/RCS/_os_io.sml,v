head	1.7;
access;
symbols
	MLW_daveb_inline_1_4_99:1.7.8
	MLWorks_21c0_1999_03_25:1.7
	MLWorks_20c1_1998_08_20:1.7
	MLWorks_20c0_1998_08_04:1.7
	MLWorks_20b2c2_1998_06_19:1.7
	MLWorks_20b2_Windows_1998_06_12:1.7
	MLWorks_20b1c1_1998_05_07:1.7
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.7
	MLWorks_20m1_1997_10_23:1.7
	MLWorks_11r1:1.7.5.1.1.1.1
	MLWorks_workspace_97:1.7.7
	MLWorks_dt_wizard:1.7.6
	MLWorks_11c0_1997_09_09:1.7.5.1.1.1
	MLWorks_10r3:1.7.5.1.3
	MLWorks_10r2_551:1.7.5.1.2
	MLWorks_11:1.7.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.7.5.1
	MLWorks_20m0_1997_06_20:1.7
	MLWorks_1_0_r2c2_1997_06_14:1.7.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.7.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.7.5
	MLWorks_BugFix_1997_04_24:1.7
	MLWorks_1_0_r2_Win32_1997_04_11:1.7
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.3.1.1
	MLWorks_gui_1996_12_18:1.7.4
	MLWorks_1_0_Win32_1996_12_17:1.7.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.7.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.7.1.1
	MLWorks_1_0_Irix_1996_11_28:1.7.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.7.2
	MLWorks_1_0_Unix_1996_11_14:1.7.1
	MLWorks_Open_Beta2_1996_10_11:1.5.3
	MLWorks_License_dev:1.5.2
	MLWorks_1_open_beta_1996_09_13:1.5.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.4
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3;
locks; strict;
comment	@ *  @;


1.7
date	96.11.08.14.25.12;	author matthew;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1
	1.7.5.1
	1.7.6.1
	1.7.7.1
	1.7.8.1;
next	1.6;

1.6
date	96.10.21.15.25.02;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	96.08.19.15.39.45;	author stephenb;	state Exp;
branches
	1.5.1.1
	1.5.2.1
	1.5.3.1;
next	1.4;

1.4
date	96.06.14.08.54.12;	author stephenb;	state Exp;
branches;
next	1.3;

1.3
date	96.05.24.09.10.48;	author stephenb;	state Exp;
branches;
next	1.2;

1.2
date	96.05.13.15.19.51;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	96.05.01.15.40.12;	author stephenb;	state Exp;
branches;
next	;

1.5.1.1
date	96.09.13.11.43.48;	author hope;	state Exp;
branches;
next	;

1.5.2.1
date	96.10.07.16.37.00;	author hope;	state Exp;
branches;
next	;

1.5.3.1
date	96.10.17.11.56.00;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	96.11.14.13.24.21;	author hope;	state Exp;
branches
	1.7.1.1.1.1;
next	;

1.7.1.1.1.1
date	96.11.28.15.35.12;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.11.22.18.41.27;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.12.17.18.20.24;	author hope;	state Exp;
branches
	1.7.3.1.1.1;
next	;

1.7.3.1.1.1
date	97.02.24.12.14.58;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	96.12.18.10.15.58;	author hope;	state Exp;
branches;
next	;

1.7.5.1
date	97.05.12.10.54.02;	author hope;	state Exp;
branches
	1.7.5.1.1.1
	1.7.5.1.2.1
	1.7.5.1.3.1;
next	;

1.7.5.1.1.1
date	97.07.28.18.36.57;	author daveb;	state Exp;
branches
	1.7.5.1.1.1.1.1;
next	;

1.7.5.1.1.1.1.1
date	97.10.07.12.02.03;	author jkbrook;	state Exp;
branches;
next	;

1.7.5.1.2.1
date	97.09.08.17.29.06;	author daveb;	state Exp;
branches;
next	;

1.7.5.1.3.1
date	97.09.09.14.27.02;	author daveb;	state Exp;
branches;
next	;

1.7.6.1
date	97.09.10.19.45.20;	author brucem;	state Exp;
branches;
next	;

1.7.7.1
date	97.09.11.21.12.27;	author daveb;	state Exp;
branches;
next	;

1.7.8.1
date	99.04.01.18.10.31;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.7
log
@[Bug #1661]
Changing io_desc to iodesc
@
text
@(* Copyright 1996 The Harlequin Group Limited.  All rights reserved.
 *
 * Revision Log
 * ------------
 *
 * $Log: _os_io.sml,v $
 *  Revision 1.6  1996/10/21  15:25:02  jont
 *  Remove references to toplevel
 *
 *  Revision 1.5  1996/08/19  15:39:45  stephenb
 *  [Bug #1554]
 *  Don't define iodesc in terms of Win32.file_desc since whilst
 *  they are both ints, some conversion is necessary to go from
 *  one to the other -- Win32.fdToIOD
 *
 *  Revision 1.4  1996/06/14  08:54:12  stephenb
 *  Define iodesc in terms of Win32.file_desc.  This allows Win32.file_desc's
 *  (which don't hide their representation) to be used for testing purposes.
 *
 *  Revision 1.3  1996/05/24  09:10:48  stephenb
 *  Update to post March 1996 basis spec., i.e. remove pollErr and
 *  add {poll,is}Pri.
 *
 *  Revision 1.2  1996/05/13  15:19:51  matthew
 *  basis changes
 *
 *  Revision 1.1  1996/05/01  15:40:12  stephenb
 *  new unit
 *
 *)

require "__time";
require "win32";
require "^.basis.__word";
require "^.basis.os_io";


(* If you modify any of the (data)type declarations in the following,
 * make sure that you also update rts/src/OS/Win32/win32.c.
 *)

functor OSIO (structure Win32: WIN32) : OS_IO =
  struct
    val env = MLWorks.Internal.Runtime.environment

    type iodesc = Win32.iodesc

    fun hash (Win32.IODESC fd) = Word.fromInt fd

    fun compare (Win32.IODESC a, Win32.IODESC b) = 
      if a < b then
        LESS
      else if a > b then
        GREATER
      else
        EQUAL

    datatype iodesc_kind = IODESC_KIND of int

    structure Kind = struct
      val file = IODESC_KIND 1
      val dir = IODESC_KIND 2
      val symlink = IODESC_KIND 3
      val tty = IODESC_KIND 4
      val pipe = IODESC_KIND 5
      val socket = IODESC_KIND 6
      val device = IODESC_KIND 7
    end

    val kind : iodesc -> iodesc_kind = env "OS.IO.kind"

    datatype event_set = EVENT_SET of int
    datatype poll_desc = POLL_DESC of iodesc * event_set
    datatype poll_info = POLL_INFO of poll_desc * event_set


    val pollDesc : iodesc -> poll_desc option = env "OS.IO.pollDesc"

    fun pollToIODesc (POLL_DESC (fd, _)) = fd

    exception Poll

    val pollIn : poll_desc -> poll_desc = env "OS.IO.pollIn"

    val pollOut : poll_desc -> poll_desc = env "OS.IO.pollOut"

    val pollPri : poll_desc -> poll_desc = env "OS.IO.pollPri"

    val poll : (poll_desc list * Time.time option) -> poll_info list = env "OS.IO.poll"

    val isIn : poll_info -> bool = env "OS.IO.isIn"

    val isOut : poll_info -> bool = env "OS.IO.isOut"

    val isPri : poll_info -> bool = env "OS.IO.isPri"

    fun infoToPollDesc (POLL_INFO (pollDesc, _)) = pollDesc
  end
@


1.7.8.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a6 4
 *  Revision 1.7  1996/11/08  14:25:12  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
@


1.7.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a6 4
 *  Revision 1.7  1996/11/08  14:25:12  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
@


1.7.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a6 4
 *  Revision 1.7  1996/11/08  14:25:12  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
@


1.7.5.1
log
@branched from 1.7
@
text
@a6 4
 *  Revision 1.7  1996/11/08  14:25:12  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
@


1.7.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a6 3
 *  Revision 1.7.5.1  1997/05/12  10:54:02  hope
 *  branched from 1.7
 *
@


1.7.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a6 3
 *  Revision 1.7.5.1  1997/05/12  10:54:02  hope
 *  branched from 1.7
 *
@


1.7.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a6 3
 *  Revision 1.7.5.1  1997/05/12  10:54:02  hope
 *  branched from 1.7
 *
@


1.7.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a6 3
 *  Revision 1.7.5.1.1.1  1997/07/28  18:36:57  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.7.4.1
log
@branched from 1.7
@
text
@a6 4
 *  Revision 1.7  1996/11/08  14:25:12  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
@


1.7.3.1
log
@branched from 1.7
@
text
@a6 4
 *  Revision 1.7  1996/11/08  14:25:12  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
@


1.7.3.1.1.1
log
@branched from 1.7.3.1
@
text
@a6 3
 *  Revision 1.7.3.1  1996/12/17  18:20:24  hope
 *  branched from 1.7
 *
@


1.7.2.1
log
@branched from 1.7
@
text
@a6 4
 *  Revision 1.7  1996/11/08  14:25:12  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
@


1.7.1.1
log
@branched from 1.7
@
text
@a6 4
 *  Revision 1.7  1996/11/08  14:25:12  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
@


1.7.1.1.1.1
log
@branched from 1.7.1.1
@
text
@a6 3
 *  Revision 1.7.1.1  1996/11/14  13:24:21  hope
 *  branched from 1.7
 *
@


1.6
log
@Remove references to toplevel
@
text
@d7 3
d12 1
a12 1
 *  Don't define io_desc in terms of Win32.file_desc since whilst
d17 1
a17 1
 *  Define io_desc in terms of Win32.file_desc.  This allows Win32.file_desc's
d46 1
a46 1
    type io_desc = Win32.io_desc
d48 1
a48 1
    fun hash (Win32.IO_DESC fd) = Word.fromInt fd
d50 1
a50 1
    fun compare (Win32.IO_DESC a, Win32.IO_DESC b) = 
d58 1
a58 1
    datatype io_desc_kind = IO_DESC_KIND of int
d61 7
a67 7
      val file = IO_DESC_KIND 1
      val dir = IO_DESC_KIND 2
      val symlink = IO_DESC_KIND 3
      val tty = IO_DESC_KIND 4
      val pipe = IO_DESC_KIND 5
      val socket = IO_DESC_KIND 6
      val device = IO_DESC_KIND 7
d70 1
a70 1
    val kind : io_desc -> io_desc_kind = env "OS.IO.kind"
d73 1
a73 1
    datatype poll_desc = POLL_DESC of io_desc * event_set
d77 1
a77 1
    val pollDesc : io_desc -> poll_desc option = env "OS.IO.pollDesc"
@


1.5
log
@[Bug #1554]
Don't define io_desc in terms of Win32.file_desc since whilst
they are both ints, some conversion is necessary to go from
one to the other -- Win32.fdToIOD
@
text
@d7 6
a31 1
require "^.basis.toplevel";
@


1.5.3.1
log
@branched from 1.5
@
text
@a6 6
 *  Revision 1.5  1996/08/19  15:39:45  stephenb
 *  [Bug #1554]
 *  Don't define io_desc in terms of Win32.file_desc since whilst
 *  they are both ints, some conversion is necessary to go from
 *  one to the other -- Win32.fdToIOD
 *
@


1.5.2.1
log
@branched from 1.5
@
text
@a6 6
 *  Revision 1.5  1996/08/19  15:39:45  stephenb
 *  [Bug #1554]
 *  Don't define io_desc in terms of Win32.file_desc since whilst
 *  they are both ints, some conversion is necessary to go from
 *  one to the other -- Win32.fdToIOD
 *
@


1.5.1.1
log
@branched from 1.5
@
text
@a6 6
 *  Revision 1.5  1996/08/19  15:39:45  stephenb
 *  [Bug #1554]
 *  Don't define io_desc in terms of Win32.file_desc since whilst
 *  they are both ints, some conversion is necessary to go from
 *  one to the other -- Win32.fdToIOD
 *
@


1.4
log
@Define io_desc in terms of Win32.file_desc.  This allows Win32.file_desc's
(which don't hide their representation) to be used for testing purposes.
@
text
@d7 4
d38 1
a38 1
    type io_desc = Win32.file_desc
d40 1
a40 1
    fun hash (Win32.FILE_DESC fd) = Word.fromInt fd
d42 1
a42 1
    fun compare (Win32.FILE_DESC a, Win32.FILE_DESC b) = 
@


1.3
log
@Update to post March 1996 basis spec., i.e. remove pollErr and
add {poll,is}Pri.
@
text
@d7 4
d19 5
a23 4
require "../system/__time";
require "../basis/os_io";
require "../basis/__word";
require "../basis/toplevel";
d30 1
a30 1
functor OSIO () : OS_IO =
d34 1
a34 1
    datatype io_desc = FILE_DESC of int
d36 1
a36 1
    fun hash (FILE_DESC fd) = Word.fromInt fd
d38 1
a38 1
    fun compare (FILE_DESC a, FILE_DESC b) = 
@


1.2
log
@basis changes
@
text
@d7 3
d41 1
a41 1
    datatype iodesc_kind = IO_DESC_KIND of int
d53 1
a53 1
    val kind : io_desc -> iodesc_kind = env "OS.IO.kind"
d60 1
a60 1
    val pollDesc : io_desc -> poll_desc MLWorks.Option.option = env "OS.IO.pollDesc"
d70 1
a70 1
    val pollErr : poll_desc -> poll_desc = env "OS.IO.pollErr"
d72 1
a72 2
    val poll : (poll_desc list * Time.time MLWorks.Option.option) -> poll_info list
      = env "OS.IO.poll"
d78 1
a78 1
    val isErr : poll_info -> bool = env "OS.IO.isErr"
@


1.1
log
@new unit
@
text
@d6 4
a9 1
 * $Log$
d28 1
a28 1
    fun hash (FILE_DESC fd) = Word.IntCvt.from fd
@
