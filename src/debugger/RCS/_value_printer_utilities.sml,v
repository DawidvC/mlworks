head	1.7;
access;
symbols
	MLW_daveb_inline_1_4_99:1.7.8
	MLWorks_21c0_1999_03_25:1.7
	MLWorks_20c1_1998_08_20:1.7
	MLWorks_20c0_1998_08_04:1.7
	MLWorks_20b2c2_1998_06_19:1.7
	MLWorks_20b2_Windows_1998_06_12:1.7
	MLWorks_20b1c1_1998_05_07:1.7
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.7
	MLWorks_20m1_1997_10_23:1.7
	MLWorks_11r1:1.7.5.1.1.1.1
	MLWorks_workspace_97:1.7.7
	MLWorks_dt_wizard:1.7.6
	MLWorks_11c0_1997_09_09:1.7.5.1.1.1
	MLWorks_10r3:1.7.5.1.3
	MLWorks_10r2_551:1.7.5.1.2
	MLWorks_11:1.7.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.7.5.1
	MLWorks_20m0_1997_06_20:1.7
	MLWorks_1_0_r2c2_1997_06_14:1.7.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.7.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.7.5
	MLWorks_BugFix_1997_04_24:1.7
	MLWorks_1_0_r2_Win32_1997_04_11:1.7
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.3.1.1
	MLWorks_gui_1996_12_18:1.7.4
	MLWorks_1_0_Win32_1996_12_17:1.7.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.7.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.7.1.1
	MLWorks_1_0_Irix_1996_11_28:1.7.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.7.2
	MLWorks_1_0_Unix_1996_11_14:1.7.1
	MLWorks_Open_Beta2_1996_10_11:1.6.3
	MLWorks_License_dev:1.6.2
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.6
	MLWorks_Beta_1996_06_07:1.6
	MLWorks_Beta_1996_06_06:1.6
	MLWorks_Beta_1996_06_05:1.6
	MLWorks_Beta_1996_06_03:1.6
	MLWorks_Beta_1996_05_31:1.6
	MLWorks_Beta_1996_05_30:1.6
	ML_beta_release_12/08/94:1.5
	ML_beta_release_03/08/94:1.5
	ML_revised_beta_release_25/05/94:1.5
	ML_final_beta_release_02/03/94:1.5
	mlworks-28-01-1994:1.5
	Release:1.4
	mlworks-beta-01-09-1993:1.4
	MLWorks-1-0-4-29/01/1993:1.3
	MLWorks-1-0-3-21/12/1992:1.3
	MLWorks-1-0-2-15/12/1992:1.3
	MLWorks-1-0-1-04/12/1992:1.3
	checkpoint_17_08_92:1.1;
locks; strict;
comment	@ * @;


1.7
date	96.10.31.14.34.11;	author io;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1
	1.7.5.1
	1.7.6.1
	1.7.7.1
	1.7.8.1;
next	1.6;

1.6
date	95.02.06.11.31.56;	author matthew;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1;
next	1.5;

1.5
date	93.12.09.19.27.32;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	93.02.09.10.15.04;	author matthew;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	92.08.17.14.50.15;	author clive;	state Exp;
branches;
next	1.2;

1.2
date	92.08.17.14.50.15;	author clive;	state Exp;
branches;
next	1.1;

1.1
date	92.08.13.16.40.58;	author clive;	state Exp;
branches;
next	;

1.4.1.1
date	93.02.09.10.15.04;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.11.17;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.07.16.02.04;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.10.17.11.20.18;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	96.11.14.12.43.54;	author hope;	state Exp;
branches
	1.7.1.1.1.1;
next	;

1.7.1.1.1.1
date	96.11.28.14.55.49;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.11.22.18.04.19;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.12.17.17.43.17;	author hope;	state Exp;
branches
	1.7.3.1.1.1;
next	;

1.7.3.1.1.1
date	97.02.24.11.32.05;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	96.12.18.09.37.15;	author hope;	state Exp;
branches;
next	;

1.7.5.1
date	97.05.12.10.29.25;	author hope;	state Exp;
branches
	1.7.5.1.1.1
	1.7.5.1.2.1
	1.7.5.1.3.1;
next	;

1.7.5.1.1.1
date	97.07.28.18.15.17;	author daveb;	state Exp;
branches
	1.7.5.1.1.1.1.1;
next	;

1.7.5.1.1.1.1.1
date	97.10.07.11.40.21;	author jkbrook;	state Exp;
branches;
next	;

1.7.5.1.2.1
date	97.09.08.17.08.47;	author daveb;	state Exp;
branches;
next	;

1.7.5.1.3.1
date	97.09.09.14.03.53;	author daveb;	state Exp;
branches;
next	;

1.7.6.1
date	97.09.10.19.18.24;	author brucem;	state Exp;
branches;
next	;

1.7.7.1
date	97.09.11.20.49.22;	author daveb;	state Exp;
branches;
next	;

1.7.8.1
date	99.04.01.17.53.12;	author daveb;	state Exp;
branches;
next	;


desc
@Initial version
@


1.7
log
@[Bug #1614]
basifying String
@
text
@(* _value_printer_utilities.sml the functor *)

(*
$Log: _value_printer_utilities.sml,v $
 * Revision 1.6  1995/02/06  11:31:56  matthew
 * Change to type lookup exceptions
 *
Revision 1.5  1993/12/09  19:27:32  jont
Added copyright message

Revision 1.4  1993/02/09  10:15:04  matthew
Typechecker structure changes

Revision 1.3  1992/08/17  14:50:15  clive
Tynames now have a slot recording their definition point

Revision 1.2  1992/08/17  14:50:15  clive
Various improvements

Revision 1.1  1992/08/13  16:40:58  clive
Initial revision

 * Copyright (c) 1993 Harlequin Ltd.
*)

require "../typechecker/basis";
require "../typechecker/types";
require "value_printer_utilities";

functor ValuePrinterUtilities(
  structure Basis : BASIS
  structure Types : TYPES
  sharing Types.Datatypes = Basis.BasisTypes.Datatypes
 ) : VALUEPRINTERUTILITIES =

struct
  structure BasisTypes = Basis.BasisTypes
  structure Datatypes = Types.Datatypes
  structure Ident = Datatypes.Ident
  structure Symbol = Ident.Symbol
               
  exception FailedToFind

  fun find_tyname (basis,argument) =
    let
      val max_subscript = size argument - 1
        
      fun upto_dot_or_end (from,to) =
        if to >= max_subscript 
          then (substring (* could raise Substring *)(argument,from,to-from+1),to)
          else if MLWorks.String.ordof (argument, to+1) = ord #"." then
	    (substring (* could raise Substring *)(argument,from,to-from+1),to+2)
        else upto_dot_or_end(from,to+1)
          
      fun part_list (from,acc) =
        if from >= max_subscript
          then acc
        else
          let
            val (part,next) = upto_dot_or_end(from,from)
            (* val _ = output(std_out,"next part is " ^ part ^ "\n") *)
          in
            part_list(next,part::acc)
          end

        fun make_path ([],acc) = acc
          | make_path (h::t,acc) = 
            make_path(t,Ident.PATH(Symbol.find_symbol h,acc))

    in
      case part_list (0,[]) of
        [] => raise FailedToFind

      | (final::rest) =>
          let
            val result = 
              Basis.lookup_longtycon(Ident.LONGTYCON(make_path(rest,Ident.NOPATH),Ident.TYCON (Symbol.find_symbol final)),
                                     Basis.basis_to_context basis)
            val Datatypes.TYSTR(function,_) = result
            val arity = Types.arity function
            fun generate_args 0 = []
              | generate_args n = Datatypes.NULLTYPE :: generate_args (n-1)
          in
            case Types.apply(function,generate_args arity) of
              Datatypes.CONSTYPE(_,tyname) => tyname
            | _ => raise FailedToFind
          end
        handle Basis.LookupTyCon _ => raise FailedToFind
             | Basis.LookupStrId _ => raise FailedToFind
    end

end

               
@


1.7.8.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a4 4
 * Revision 1.7  1996/10/31  14:34:11  io
 * [Bug #1614]
 * basifying String
 *
@


1.7.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a4 4
 * Revision 1.7  1996/10/31  14:34:11  io
 * [Bug #1614]
 * basifying String
 *
@


1.7.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a4 4
 * Revision 1.7  1996/10/31  14:34:11  io
 * [Bug #1614]
 * basifying String
 *
@


1.7.5.1
log
@branched from 1.7
@
text
@a4 4
 * Revision 1.7  1996/10/31  14:34:11  io
 * [Bug #1614]
 * basifying String
 *
@


1.7.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a4 3
 * Revision 1.7.5.1  1997/05/12  10:29:25  hope
 * branched from 1.7
 *
@


1.7.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a4 3
 * Revision 1.7.5.1  1997/05/12  10:29:25  hope
 * branched from 1.7
 *
@


1.7.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a4 3
 * Revision 1.7.5.1  1997/05/12  10:29:25  hope
 * branched from 1.7
 *
@


1.7.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a4 3
 * Revision 1.7.5.1.1.1  1997/07/28  18:15:17  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.7.4.1
log
@branched from 1.7
@
text
@a4 4
 * Revision 1.7  1996/10/31  14:34:11  io
 * [Bug #1614]
 * basifying String
 *
@


1.7.3.1
log
@branched from 1.7
@
text
@a4 4
 * Revision 1.7  1996/10/31  14:34:11  io
 * [Bug #1614]
 * basifying String
 *
@


1.7.3.1.1.1
log
@branched from 1.7.3.1
@
text
@a4 3
 * Revision 1.7.3.1  1996/12/17  17:43:17  hope
 * branched from 1.7
 *
@


1.7.2.1
log
@branched from 1.7
@
text
@a4 4
 * Revision 1.7  1996/10/31  14:34:11  io
 * [Bug #1614]
 * basifying String
 *
@


1.7.1.1
log
@branched from 1.7
@
text
@a4 4
 * Revision 1.7  1996/10/31  14:34:11  io
 * [Bug #1614]
 * basifying String
 *
@


1.7.1.1.1.1
log
@branched from 1.7.1.1
@
text
@a4 3
 * Revision 1.7.1.1  1996/11/14  12:43:54  hope
 * branched from 1.7
 *
@


1.6
log
@Change to type lookup exceptions
@
text
@d5 3
d50 3
a52 3
          then (String.substring(argument,from,to-from+1),to)
          else if String.substring(argument,to+1,1) = "."
            then (String.substring(argument,from,to-from+1),to+2)
@


1.6.3.1
log
@branched from 1.6
@
text
@a4 3
 * Revision 1.6  1995/02/06  11:31:56  matthew
 * Change to type lookup exceptions
 *
@


1.6.2.1
log
@branched from 1.6
@
text
@a4 3
 * Revision 1.6  1995/02/06  11:31:56  matthew
 * Change to type lookup exceptions
 *
@


1.6.1.1
log
@branched from 1.6
@
text
@a4 3
 * Revision 1.6  1995/02/06  11:31:56  matthew
 * Change to type lookup exceptions
 *
@


1.5
log
@Added copyright message
@
text
@d5 3
d85 2
a86 1
        handle Basis.LookupLongTyCon => raise FailedToFind
@


1.4
log
@Typechecker structure changes
@
text
@d5 3
d17 1
@


1.4.1.1
log
@Fork for bug fixing
@
text
@a4 3
Revision 1.4  1993/02/09  10:15:04  matthew
Typechecker structure changes

@


1.3
log
@Tynames now have a slot recording their definition point
@
text
@d5 3
d23 1
a23 1
  sharing Types.Datatypes = Basis.Tyvarenv.Datatypes
d27 1
a27 1
  structure Basis = Basis
@


1.2
log
@Various improvements
@
text
@d5 3
@


1.1
log
@Initial revision
@
text
@d4 4
a7 1
$Log: $
d45 1
a45 1
            val _ = output(std_out,"next part is " ^ part ^ "\n")
d56 1
a56 2
        [] => (output(std_out,"Null path");
               raise FailedToFind)
@
