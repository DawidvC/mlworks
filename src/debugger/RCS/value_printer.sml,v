head	1.28;
access;
symbols
	MLW_daveb_inline_1_4_99:1.28.11
	MLWorks_21c0_1999_03_25:1.28
	MLWorks_20c1_1998_08_20:1.28
	MLWorks_20c0_1998_08_04:1.28
	MLWorks_20b2c2_1998_06_19:1.28
	MLWorks_20b2_Windows_1998_06_12:1.28
	MLWorks_20b1c1_1998_05_07:1.28
	MLWorks_20b0_1998_04_07:1.28
	MLWorks_20b0_1998_03_20:1.28
	MLWorks_20m2_1998_02_16:1.28
	MLWorks_20m1_1997_10_23:1.28
	MLWorks_11r1:1.28.8.1.1.1.1
	MLWorks_workspace_97:1.28.10
	MLWorks_dt_wizard:1.28.9
	MLWorks_11c0_1997_09_09:1.28.8.1.1.1
	MLWorks_10r3:1.28.8.1.3
	MLWorks_10r2_551:1.28.8.1.2
	MLWorks_11:1.28.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.28.8.1
	MLWorks_20m0_1997_06_20:1.28
	MLWorks_1_0_r2c2_1997_06_14:1.28.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.28.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.28.8
	MLWorks_BugFix_1997_04_24:1.28
	MLWorks_1_0_r2_Win32_1997_04_11:1.28
	MLWorks_1_0_r2_Unix_1997_04_04:1.28
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.28.6.1.1
	MLWorks_gui_1996_12_18:1.28.7
	MLWorks_1_0_Win32_1996_12_17:1.28.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.28.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.28.4.1
	MLWorks_1_0_Irix_1996_11_28:1.28.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.28.5
	MLWorks_1_0_Unix_1996_11_14:1.28.4
	MLWorks_Open_Beta2_1996_10_11:1.28.3
	MLWorks_License_dev:1.28.2
	MLWorks_1_open_beta_1996_09_13:1.28.1
	MLWorks_Open_Beta_1996_08_22:1.28
	MLWorks_Beta_1996_07_02:1.28
	MLWorks_Beta_1996_06_07:1.28
	MLWorks_Beta_1996_06_06:1.28
	MLWorks_Beta_1996_06_05:1.28
	MLWorks_Beta_1996_06_03:1.28
	MLWorks_Beta_1996_05_31:1.28
	MLWorks_Beta_1996_05_30:1.28
	ML_beta_release_12/08/94:1.25
	ML_beta_release_03/08/94:1.25
	ML_revised_beta_release_25/05/94:1.25
	ML_final_beta_release_02/03/94:1.25
	mlworks-28-01-1994:1.23
	Release:1.22
	mlworks-beta-01-09-1993:1.22
	MLWorks-1-0-4-29/01/1993:1.16
	MLWorks-1-0-3-21/12/1992:1.16
	MLWorks-1-0-2-15/12/1992:1.16
	MLWorks-1-0-1-04/12/1992:1.16
	checkpoint_17_08_92:1.6;
locks; strict;
comment	@ * @;


1.28
date	95.10.19.15.47.39;	author matthew;	state Exp;
branches
	1.28.1.1
	1.28.2.1
	1.28.3.1
	1.28.4.1
	1.28.5.1
	1.28.6.1
	1.28.7.1
	1.28.8.1
	1.28.9.1
	1.28.10.1
	1.28.11.1;
next	1.27;

1.27
date	95.10.13.22.59.53;	author brianm;	state Exp;
branches;
next	1.26;

1.26
date	95.01.10.10.39.52;	author matthew;	state Exp;
branches;
next	1.25;

1.25
date	94.02.28.06.47.28;	author nosa;	state Exp;
branches;
next	1.24;

1.24
date	94.02.23.12.39.27;	author daveb;	state Exp;
branches;
next	1.23;

1.23
date	93.12.09.19.27.41;	author jont;	state Exp;
branches;
next	1.22;

1.22
date	93.05.06.12.07.47;	author matthew;	state Exp;
branches
	1.22.1.1;
next	1.21;

1.21
date	93.04.02.13.42.08;	author matthew;	state Exp;
branches;
next	1.20;

1.20
date	93.03.11.10.48.38;	author matthew;	state Exp;
branches;
next	1.19;

1.19
date	93.03.08.16.07.55;	author matthew;	state Exp;
branches;
next	1.18;

1.18
date	93.02.09.10.12.38;	author matthew;	state Exp;
branches;
next	1.17;

1.17
date	93.02.04.17.18.18;	author matthew;	state Exp;
branches;
next	1.16;

1.16
date	92.11.27.14.13.47;	author clive;	state Exp;
branches;
next	1.15;

1.15
date	92.11.20.12.32.00;	author clive;	state Exp;
branches;
next	1.14;

1.14
date	92.10.06.16.29.42;	author clive;	state Exp;
branches;
next	1.13;

1.13
date	92.09.09.13.08.29;	author clive;	state Exp;
branches;
next	1.12;

1.12
date	92.09.03.09.17.05;	author clive;	state Exp;
branches;
next	1.11;

1.11
date	92.08.28.09.33.47;	author clive;	state Exp;
branches;
next	1.10;

1.10
date	92.08.26.19.03.11;	author richard;	state Exp;
branches;
next	1.9;

1.9
date	92.08.26.09.37.50;	author clive;	state Exp;
branches;
next	1.8;

1.8
date	92.08.18.16.27.08;	author richard;	state Exp;
branches;
next	1.7;

1.7
date	92.08.17.13.19.53;	author clive;	state Exp;
branches;
next	1.6;

1.6
date	92.08.13.12.37.42;	author clive;	state Exp;
branches;
next	1.5;

1.5
date	92.07.14.08.55.41;	author clive;	state Exp;
branches;
next	1.4;

1.4
date	92.06.29.11.33.17;	author clive;	state Exp;
branches;
next	1.3;

1.3
date	92.06.25.15.48.50;	author clive;	state Exp;
branches;
next	1.2;

1.2
date	92.06.25.09.18.02;	author clive;	state Exp;
branches;
next	1.1;

1.1
date	92.06.22.15.19.54;	author clive;	state Exp;
branches;
next	;

1.22.1.1
date	93.05.06.12.07.47;	author jont;	state Exp;
branches;
next	;

1.28.1.1
date	96.09.13.11.11.05;	author hope;	state Exp;
branches;
next	;

1.28.2.1
date	96.10.07.16.01.51;	author hope;	state Exp;
branches;
next	;

1.28.3.1
date	96.10.17.11.20.05;	author hope;	state Exp;
branches;
next	;

1.28.4.1
date	96.11.14.12.43.40;	author hope;	state Exp;
branches
	1.28.4.1.1.1;
next	;

1.28.4.1.1.1
date	96.11.28.14.55.36;	author hope;	state Exp;
branches;
next	;

1.28.5.1
date	96.11.22.18.04.07;	author hope;	state Exp;
branches;
next	;

1.28.6.1
date	96.12.17.17.43.03;	author hope;	state Exp;
branches
	1.28.6.1.1.1;
next	;

1.28.6.1.1.1
date	97.02.24.11.31.41;	author hope;	state Exp;
branches;
next	;

1.28.7.1
date	96.12.18.09.37.02;	author hope;	state Exp;
branches;
next	;

1.28.8.1
date	97.05.12.10.29.11;	author hope;	state Exp;
branches
	1.28.8.1.1.1
	1.28.8.1.2.1
	1.28.8.1.3.1;
next	;

1.28.8.1.1.1
date	97.07.28.18.15.30;	author daveb;	state Exp;
branches
	1.28.8.1.1.1.1.1;
next	;

1.28.8.1.1.1.1.1
date	97.10.07.11.40.34;	author jkbrook;	state Exp;
branches;
next	;

1.28.8.1.2.1
date	97.09.08.17.09.01;	author daveb;	state Exp;
branches;
next	;

1.28.8.1.3.1
date	97.09.09.14.04.07;	author daveb;	state Exp;
branches;
next	;

1.28.9.1
date	97.09.10.19.18.37;	author brucem;	state Exp;
branches;
next	;

1.28.10.1
date	97.09.11.20.49.40;	author daveb;	state Exp;
branches;
next	;

1.28.11.1
date	99.04.01.17.53.18;	author daveb;	state Exp;
branches;
next	;


desc
@First version
@


1.28
log
@Correcting misspelling of abbreviate.
@
text
@(* value_printer.sml the signature *)
(*
$Log: value_printer.sml,v $
Revision 1.27  1995/10/13  22:59:53  brianm
Adding extra control for abbreviated strings - needed in printing labels
in the Graphical Inspector, which uses stringify_value eventually.

Revision 1.26  1995/01/10  10:39:52  matthew
Rationalizing debugger

Revision 1.25  1994/02/28  06:47:28  nosa
Changed null type function handling to accomodate Monomorphic debugger decapsulation.

Revision 1.24  1994/02/23  12:39:27  daveb
Adding function to find the name of a function.

Revision 1.23  1993/12/09  19:27:41  jont
Added copyright message

Revision 1.22  1993/05/06  12:07:47  matthew
stringify_value now takes just a print_options object

Revision 1.21  1993/04/02  13:42:08  matthew
Removed Debugger_Types

Revision 1.20  1993/03/11  10:48:38  matthew
Signature revisions

Revision 1.19  1993/03/08  16:07:55  matthew
Options & Info changes

Revision 1.18  1993/02/09  10:12:38  matthew
Typechecker structure changes

Revision 1.17  1993/02/04  17:18:18  matthew
Added sharing.

Revision 1.16  1992/11/27  14:13:47  clive
default_print_descriptor now deleted

Revision 1.15  1992/11/20  12:32:00  clive
Added print_exn_details

Revision 1.14  1992/10/06  16:29:42  clive
Changes for the use of new shell

Revision 1.13  1992/09/09  13:08:29  clive
Added switches t the value-printer to control depth of printing etc

Revision 1.12  1992/09/03  09:17:05  clive
Added functionality to the value_printer

Revision 1.11  1992/08/28  09:33:47  clive
Added the shape function

Revision 1.10  1992/08/26  19:03:11  richard
Rationalisation of the MLWorks structure.

Revision 1.9  1992/08/26  09:37:50  clive
More support for the definition of print functions

Revision 1.8  1992/08/18  16:27:08  richard
 Changed coercion and the ml_value type in the pervasive environment.

Revision 1.7  1992/08/17  13:19:53  clive
Various improvements

Revision 1.6  1992/08/13  12:37:42  clive
Neatening up, plus changes due to lower level sharing changes

Revision 1.5  1992/07/14  08:55:41  clive
toplevel_value_printer moved to this file

Revision 1.4  1992/06/29  11:33:17  clive
Some minor printing changes

Revision 1.3  1992/06/25  15:48:50  clive
Debugger.MlObject changed to jont's ml_value

Revision 1.2  1992/06/25  09:18:02  clive
Added a simplified function for toplevel printing

Revision 1.1  1992/06/22  15:19:54  clive
Initial revision

 * Copyright (c) 1993 Harlequin Ltd.
*)

require "../main/options";

signature VALUE_PRINTER =
  sig
    structure Options : OPTIONS

    type TypeBasis
    type Type
    type DebugInformation

    val stringify_value :  bool ->
     (Options.print_options * 
      MLWorks.Internal.Value.T * 
      Type  *
      DebugInformation)
      -> string

    val function_name : ('a -> 'b) -> string
    (* function_name f; returns the string encoding the name of the
       function in the closure.  This is usually the identifier followed
       by the location.  The result is suitable for referencing the
       debug_info table, for example.  *)

    val string_abbreviation : string ref (* needed by Graphical Inspector *)
  end
@


1.28.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.28  1995/10/19  15:47:39  matthew
 * Correcting misspelling of abbreviate.
 *
@


1.28.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.28  1995/10/19  15:47:39  matthew
 * Correcting misspelling of abbreviate.
 *
@


1.28.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.28  1995/10/19  15:47:39  matthew
 * Correcting misspelling of abbreviate.
 *
@


1.28.8.1
log
@branched from 1.28
@
text
@a3 3
 * Revision 1.28  1995/10/19  15:47:39  matthew
 * Correcting misspelling of abbreviate.
 *
@


1.28.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.28.8.1  1997/05/12  10:29:11  hope
 * branched from 1.28
 *
@


1.28.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.28.8.1  1997/05/12  10:29:11  hope
 * branched from 1.28
 *
@


1.28.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.28.8.1  1997/05/12  10:29:11  hope
 * branched from 1.28
 *
@


1.28.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.28.8.1.1.1  1997/07/28  18:15:30  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.28.7.1
log
@branched from 1.28
@
text
@a3 3
 * Revision 1.28  1995/10/19  15:47:39  matthew
 * Correcting misspelling of abbreviate.
 *
@


1.28.6.1
log
@branched from 1.28
@
text
@a3 3
 * Revision 1.28  1995/10/19  15:47:39  matthew
 * Correcting misspelling of abbreviate.
 *
@


1.28.6.1.1.1
log
@branched from 1.28.6.1
@
text
@a3 3
 * Revision 1.28.6.1  1996/12/17  17:43:03  hope
 * branched from 1.28
 *
@


1.28.5.1
log
@branched from 1.28
@
text
@a3 3
 * Revision 1.28  1995/10/19  15:47:39  matthew
 * Correcting misspelling of abbreviate.
 *
@


1.28.4.1
log
@branched from 1.28
@
text
@a3 3
 * Revision 1.28  1995/10/19  15:47:39  matthew
 * Correcting misspelling of abbreviate.
 *
@


1.28.4.1.1.1
log
@branched from 1.28.4.1
@
text
@a3 3
 * Revision 1.28.4.1  1996/11/14  12:43:40  hope
 * branched from 1.28
 *
@


1.28.3.1
log
@branched from 1.28
@
text
@a3 3
 * Revision 1.28  1995/10/19  15:47:39  matthew
 * Correcting misspelling of abbreviate.
 *
@


1.28.2.1
log
@branched from 1.28
@
text
@a3 3
 * Revision 1.28  1995/10/19  15:47:39  matthew
 * Correcting misspelling of abbreviate.
 *
@


1.28.1.1
log
@branched from 1.28
@
text
@a3 3
 * Revision 1.28  1995/10/19  15:47:39  matthew
 * Correcting misspelling of abbreviate.
 *
@


1.27
log
@Adding extra control for abbreaviated strings - needed in printing labels
in the Graphical Inspector, which uses stringify_value eventually.
@
text
@d4 4
d112 1
a112 1
    val string_abbreaviation : string ref (* needed by Graphical Inspector *)
@


1.26
log
@Rationalizing debugger
@
text
@d4 3
d107 2
@


1.25
log
@Changed null type function handling to accomodate Monomorphic debugger decapsulation.
@
text
@d4 3
a90 22

    type print_method_table

    val error_notify : bool ref

(*
    val default_print_method_table : print_method_table

    val print_method_defined : TypeBasis * string * printer_descriptor -> bool
    val define_a_print_method : 
      TypeBasis * 
      string * 
      (MLWorks.Internal.Value.T list 
       * (MLWorks.Internal.Value.T -> string) list  
       * (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T list)
       * (MLWorks.Internal.Value.T -> bool * int)
      -> string) *
      printer_descriptor -> 
      (bool * printer_descriptor)
      
    val toplevel_default_print_descriptor : printer_descriptor
*)
@


1.24
log
@Adding function to find the name of a function.
@
text
@d4 3
d111 2
a112 2
    val stringify_value : 
      Options.print_options * 
d115 1
a115 1
      DebugInformation
@


1.23
log
@Added copyright message
@
text
@d4 3
d115 5
@


1.22
log
@stringify_value now takes just a print_options object
@
text
@d4 3
d70 1
@


1.22.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.22  1993/05/06  12:07:47  matthew
stringify_value now takes just a print_options object

@


1.21
log
@Removed Debugger_Types
@
text
@d4 3
d83 1
a85 6
    datatype printer_descriptor =
      PRINTER_DESCRIPTOR of
      {print_options : Options.print_options,
       print_method_table : print_method_table
       }
      
d99 1
d102 1
a102 1
      printer_descriptor * 
@


1.20
log
@Signature revisions
@
text
@d4 3
d66 1
a66 1
require "debugger_types";
d70 1
a70 1
    structure Debugger_Types : DEBUGGER_TYPES
d73 4
a79 2
    type print_method_table

d84 1
a84 1
      {print_options : Debugger_Types.Options.print_options,
d105 2
a106 2
      Debugger_Types.Type  *
      Debugger_Types.information
@


1.19
log
@Options & Info changes
@
text
@d4 3
d100 1
a100 1
      Debugger_Types.Datatypes.Type  *
@


1.18
log
@Typechecker structure changes
@
text
@d4 3
a59 1
require "../typechecker/basistypes";
a63 1
    structure BasisTypes : BASISTYPES
d66 1
a66 2
    sharing Debugger_Types.Info = BasisTypes.Info
    sharing Debugger_Types.Datatypes = BasisTypes.Datatypes
d72 2
d76 1
a76 7
      {
       maximum_list_size : int,
       maximum_ref_depth : int,
       maximum_shape_depth : int,
       maximum_depth : int,
       print_fn_details : bool,
       print_exn_details : bool,
d80 1
a80 1
    val print_method_defined : BasisTypes.Basis * string * printer_descriptor -> bool
d82 1
a82 1
      BasisTypes.Basis * 
@


1.17
log
@Added sharing.
@
text
@d4 3
d57 1
a57 1
require "../typechecker/basis";
d62 1
a62 1
    structure Basis : BASIS
d65 2
a66 2
    sharing Debugger_Types.Info = Basis.Sigenv.Sigma.Nameset.Info
    sharing Debugger_Types.Datatypes = Basis.Tyvarenv.Datatypes
d84 1
a84 1
    val print_method_defined : Basis.Basis * string * printer_descriptor -> bool
d86 1
a86 1
      Basis.Basis * 
@


1.16
log
@default_print_descriptor now deleted
@
text
@d4 3
d61 3
@


1.15
log
@Added print_exn_details
@
text
@d4 3
a86 1
    val default_print_descriptor : printer_descriptor
@


1.14
log
@Changes for the use of new shell
@
text
@d4 3
d68 1
@


1.13
log
@Added switches t the value-printer to control depth of printing etc
@
text
@d4 3
d46 1
a46 1
require "../typechecker/datatypes";
d51 1
a51 1
    structure Datatypes : DATATYPES
d55 1
a55 1
    val print_method_defined : Basis.Basis * string -> bool
a56 7
    val define_a_print_method : 
      Basis.Basis * string * (MLWorks.Internal.Value.T list 
                              * (MLWorks.Internal.Value.T -> string) list  
                              * (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T list)
                              * (MLWorks.Internal.Value.T -> bool * int)
                              -> string) -> bool
      
d64 2
a65 1
       print_fn_details : bool
d68 12
d84 4
a87 2
      printer_descriptor * MLWorks.Internal.Value.T * Datatypes.Type * Datatypes.Tyenv *
      (string -> string * Datatypes.Type * Datatypes.Tyenv * bool) * bool
@


1.12
log
@Added functionality to the value_printer
@
text
@d4 3
a51 4
    val maximum_list_size : int ref
    val maximum_ref_depth : int ref
    val maximum_shape_depth : int ref

d61 12
d74 3
a76 2
    val stringify_value : MLWorks.Internal.Value.T * Datatypes.Type * Datatypes.Tyenv 
                          * (string -> string * Datatypes.Type * Datatypes.Tyenv * bool) * bool
@


1.11
log
@Added the shape function
@
text
@d4 3
d57 4
a60 1
                              * (MLWorks.Internal.Value.T -> string) list  -> string) -> bool
@


1.10
log
@Rationalisation of the MLWorks structure.
@
text
@d4 3
d45 4
@


1.9
log
@More support for the definition of print functions
@
text
@d4 3
d46 2
a47 2
      Basis.Basis * string * (MLWorks.System.Unsafe.Value.T list 
                              * (MLWorks.System.Unsafe.Value.T -> string) list  -> string) -> bool
d50 1
a50 1
    val stringify_value : MLWorks.System.Unsafe.Value.T * Datatypes.Type * Datatypes.Tyenv 
@


1.8
log
@ Changed coercion and the ml_value type in the pervasive environment.
@
text
@d4 3
d43 2
a44 2
      Basis.Basis * string * (MLWorks.System.Unsafe.Value.T * Datatypes.Type list 
                              * (MLWorks.System.Unsafe.Value.T * Datatypes.Type -> string)  -> string) -> bool
@


1.7
log
@Various improvements
@
text
@d4 3
d40 2
a41 2
      Basis.Basis * string * (MLWorks.Debugger.ml_value * Datatypes.Type list 
                              * (MLWorks.Debugger.ml_value * Datatypes.Type -> string)  -> string) -> bool
d44 1
a44 1
    val stringify_value : MLWorks.Debugger.ml_value * Datatypes.Type * Datatypes.Tyenv 
@


1.6
log
@Neatening up, plus changes due to lower level sharing changes
@
text
@d4 3
d42 1
a42 1
                          * (string -> string * Datatypes.Type * Datatypes.Tyenv) * bool
@


1.5
log
@toplevel_value_printer moved to this file
@
text
@d4 3
d21 1
d26 1
d28 1
d31 8
a38 1
    val stringify_value : Debugger.ml_value * Datatypes.Type * Datatypes.Tyenv 
@


1.4
log
@Some minor printing changes
@
text
@d4 3
a27 2

      val toplevel_value_printer : Debugger.ml_value * Datatypes.Type * Datatypes.Valenv -> string
@


1.3
log
@Debugger.MlObject changed to jont's ml_value
@
text
@d4 3
d26 1
a26 1
      val toplevel_value_printer : Debugger.ml_value * Datatypes.Type -> string
@


1.2
log
@Added a simplified function for toplevel printing
@
text
@d4 3
d19 1
a19 1
    val stringify_value : Debugger.MlObject * Datatypes.Type * Datatypes.Tyenv 
d23 1
a23 1
      val toplevel_value_printer : Debugger.MlObject * Datatypes.Type -> string
@


1.1
log
@Initial revision
@
text
@d3 4
a6 1
$Log$
d15 1
d19 3
@
