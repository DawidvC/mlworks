head	1.10;
access;
symbols
	ML_beta_release_12/08/94:1.6
	ML_beta_release_03/08/94:1.6
	ML_revised_beta_release_25/05/94:1.4
	ML_final_beta_release_02/03/94:1.4
	mlworks-28-01-1994:1.4
	Release:1.3
	mlworks-beta-01-09-1993:1.3;
locks; strict;
comment	@ * @;


1.10
date	95.05.29.13.57.29;	author daveb;	state Exp;
branches;
next	1.9;

1.9
date	95.04.28.17.01.03;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	95.03.17.11.24.21;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	95.03.15.15.57.31;	author daveb;	state Exp;
branches;
next	1.6;

1.6
date	94.07.14.14.30.24;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	94.07.12.15.49.31;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	93.10.22.17.02.22;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	93.05.05.12.26.14;	author daveb;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	93.04.30.13.07.11;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	93.04.16.17.18.18;	author matthew;	state Exp;
branches;
next	;

1.3.1.1
date	93.05.05.12.26.14;	author jont;	state Exp;
branches;
next	1.3.1.2;

1.3.1.2
date	93.10.21.13.59.17;	author daveb;	state Exp;
branches;
next	;


desc
@Type definitions for windowing tools
@


1.10
log
@Separated user_options into tool-specific and context-specific parts.
@
text
@(* Types for passing to motif tools.
 *
 * Copyright (C) 1993 Harlequin Ltd.
 *
 * $Log: tooldata.sml,v $
 *  Revision 1.9  1995/04/28  17:01:03  daveb
 *  Moved all the user_context stuff from ShellTypes into a separate file.
 *
 *  Revision 1.8  1995/03/17  11:24:21  daveb
 *  Added a Writable parameter to add_context_fn.
 *  
 *  Revision 1.7  1995/03/15  15:57:31  daveb
 *  Added current_context type, and associated functions.
 *  
 *  Revision 1.6  1994/07/14  14:30:24  daveb
 *  Changed second parameter of exit_mlworks to ApplicationData, and
 *  extended that type with a flag set to true if the GUI is launched from
 *  a TTY listener.
 *  
 *  Revision 1.5  1994/07/12  15:49:31  daveb
 *  Modified works menu to show Exit or Close, not both.  Added exit_mlworks.
 *  
 *  Revision 1.4  1993/10/22  17:02:22  daveb
 *  Merged in bug fix.
 *  
 *  Revision 1.3.1.2  1993/10/21  13:59:17  daveb
 *  Changed ToolData.works_menu to take a (unit -> bool) function that
 *  controls whether the Close menu option is enabled.
 *  
 *  Revision 1.3.1.1  1993/05/05  12:26:14  jont
 *  Fork for bug fixing
 *  
 *  Revision 1.3  1993/05/05  12:26:14  daveb
 *  Added tools argument to works_menu(),
 *  removed exitApplication from TOOLDATA (works_menu now accesses it directly).
 *  
 *  Revision 1.2  1993/04/30  13:07:11  daveb
 *  Added function to create Works menu.
 *  
 *  Revision 1.1  1993/04/16  17:18:18  matthew
 *  Initial revision
 *  
 *
 *)

require "../interpreter/shell_types";
require "../interpreter/user_context";

signature TOOL_DATA =
  sig
    structure ShellTypes : SHELL_TYPES
    structure UserContext : USER_CONTEXT

    sharing ShellTypes.Options = UserContext.Options
    sharing type ShellTypes.Context = UserContext.Context
    sharing type ShellTypes.user_context = UserContext.user_context
    sharing type ShellTypes.user_options = UserContext.user_tool_options

    type MotifContext
    type Widget
    type ButtonSpec
    type current_context
    datatype Writable = WRITABLE | ALL

    datatype ApplicationData =
      APPLICATIONDATA of {applicationShell : Widget, has_controlling_tty: bool}

    datatype ToolData =
      TOOLDATA of
	{args: ShellTypes.ListenerArgs,
         appdata : ApplicationData,
	 current_context : current_context,
	 motif_context : MotifContext,
         tools : (string * (ToolData -> unit) * Writable) list}

    val add_context_fn :
      current_context
      * ((MotifContext -> unit)
	 * (unit -> ShellTypes.user_options)
	 * Writable)
      -> int
    (* add_change_fn (c, (select_fn, mk_user_options, writable)).  The
       current settings of the user options are checked before calling the
       callback.  If writable = WRITABLE then constant contexts are ignored. *)
  
    val remove_context_fn : current_context * int -> unit
  
    val set_current :
      current_context * int * ShellTypes.user_options * MotifContext
      -> unit

    val get_current : current_context -> MotifContext
    val make_current : MotifContext -> current_context

    val exit_mlworks: Widget * ApplicationData -> unit
    val works_menu:
      (unit -> ToolData) * (unit -> unit)
      * (unit -> bool) * (unit -> ShellTypes.user_context)
      -> ButtonSpec
  end
@


1.9
log
@Moved all the user_context stuff from ShellTypes into a separate file.
@
text
@d6 3
d57 1
a57 1
    sharing type ShellTypes.user_options = UserContext.user_options
d59 1
d73 1
d78 1
a78 1
      * ((ShellTypes.user_context -> unit)
d89 1
a89 2
      current_context * int
      * ShellTypes.user_options * ShellTypes.user_context
d92 2
a93 2
    val get_current : current_context -> ShellTypes.user_context
    val make_current : ShellTypes.user_context -> current_context
@


1.8
log
@Added a Writable parameter to add_context_fn.
@
text
@d6 28
a33 25
Revision 1.7  1995/03/15  15:57:31  daveb
Added current_context type, and associated functions.

Revision 1.6  1994/07/14  14:30:24  daveb
Changed second parameter of exit_mlworks to ApplicationData, and
extended that type with a flag set to true if the GUI is launched from
a TTY listener.

Revision 1.5  1994/07/12  15:49:31  daveb
Modified works menu to show Exit or Close, not both.  Added exit_mlworks.

Revision 1.4  1993/10/22  17:02:22  daveb
Merged in bug fix.

Revision 1.3.1.2  1993/10/21  13:59:17  daveb
Changed ToolData.works_menu to take a (unit -> bool) function that
controls whether the Close menu option is enabled.

Revision 1.3.1.1  1993/05/05  12:26:14  jont
Fork for bug fixing

Revision 1.3  1993/05/05  12:26:14  daveb
Added tools argument to works_menu(),
removed exitApplication from TOOLDATA (works_menu now accesses it directly).

d44 1
d49 6
@


1.7
log
@Added current_context type, and associated functions.
@
text
@d6 3
d49 1
d54 6
a59 4
    datatype ToolData = TOOLDATA of {args: ShellTypes.ListenerArgs,
                                     appdata : ApplicationData,
				     current_context : current_context,
                                     tools : (string * (ToolData -> unit)) list}
d63 3
a65 1
      * ((ShellTypes.user_context -> unit) * (unit -> ShellTypes.user_options))
d67 3
a69 2
    (* add_change_fn (c, (select_fn, mk_user_options)).  The current settings
       of the user options are checked before calling the callback. *)
d82 4
a85 2
    val works_menu: (unit -> ToolData) * (unit -> unit) * (unit -> bool)
		      -> ButtonSpec
@


1.6
log
@Changed second parameter of exit_mlworks to ApplicationData, and
extended that type with a flag set to true if the GUI is launched from
a TTY listener.
@
text
@d6 5
d45 1
d52 1
d54 17
@


1.5
log
@Modified works menu to show Exit or Close, not both.  Added exit_mlworks.
@
text
@d6 3
d42 1
a42 1
      APPLICATIONDATA of {applicationShell : Widget}
d48 1
a48 1
    val exit_mlworks: Widget * Widget -> unit
@


1.4
log
@Merged in bug fix.
@
text
@d6 3
d45 3
a47 2
    val works_menu: Widget * (string * (ToolData -> unit)) list *
		    (unit -> ToolData) * (unit -> bool) -> ButtonSpec
@


1.3
log
@Added tools argument to works_menu(),
removed exitApplication from TOOLDATA (works_menu now accesses it directly).
@
text
@d6 11
d43 1
a43 1
		    (unit -> ToolData) -> ButtonSpec
@


1.3.1.1
log
@Fork for bug fixing
@
text
@a5 4
Revision 1.3  1993/05/05  12:26:14  daveb
Added tools argument to works_menu(),
removed exitApplication from TOOLDATA (works_menu now accesses it directly).

@


1.3.1.2
log
@Changed ToolData.works_menu to take a (unit -> bool) function that
controls whether the Close menu option is enabled.
@
text
@a5 3
Revision 1.3.1.1  1993/05/05  12:26:14  jont
Fork for bug fixing

d36 1
a36 1
		    (unit -> ToolData) * (unit -> bool) -> ButtonSpec
@


1.2
log
@Added function to create Works menu.
@
text
@d6 6
a11 3
Revision 1.1  1993/04/16  17:18:18  matthew
Initial revision

d25 1
a25 2
      APPLICATIONDATA of {exitApplication : unit -> unit,
                          applicationShell : Widget}
d31 2
a32 1
    val works_menu: Widget * (unit -> ToolData) -> ButtonSpec
@


1.1
log
@Initial revision
@
text
@d6 3
d17 1
d19 6
a24 2
    datatype ApplicationData = APPLICATIONDATA of {exitApplication : unit -> unit,
                                                   applicationShell : Widget}
d28 2
@
