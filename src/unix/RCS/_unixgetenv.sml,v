head	1.16;
access;
symbols
	MLW_daveb_inline_1_4_99:1.16.1
	MLWorks_21c0_1999_03_25:1.16
	MLWorks_20c1_1998_08_20:1.16
	MLWorks_20c0_1998_08_04:1.16
	MLWorks_20b2c2_1998_06_19:1.16
	MLWorks_20b2_Windows_1998_06_12:1.16
	MLWorks_20b1c1_1998_05_07:1.16
	MLWorks_20b0_1998_04_07:1.16
	MLWorks_20b0_1998_03_20:1.16
	MLWorks_20m2_1998_02_16:1.15
	MLWorks_20m1_1997_10_23:1.14
	MLWorks_11r1:1.14.1.1.1.1.1
	MLWorks_workspace_97:1.14.3
	MLWorks_dt_wizard:1.14.2
	MLWorks_11c0_1997_09_09:1.14.1.1.1.1
	MLWorks_10r3:1.14.1.1.3
	MLWorks_10r2_551:1.14.1.1.2
	MLWorks_11:1.14.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.14.1.1
	MLWorks_20m0_1997_06_20:1.14
	MLWorks_1_0_r2c2_1997_06_14:1.14.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.14.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.14.1
	MLWorks_BugFix_1997_04_24:1.14
	MLWorks_1_0_r2_Win32_1997_04_11:1.14
	MLWorks_1_0_r2_Unix_1997_04_04:1.14
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.12.3.1.1
	MLWorks_gui_1996_12_18:1.12.4
	MLWorks_1_0_Win32_1996_12_17:1.12.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.12.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.12.1.1
	MLWorks_1_0_Irix_1996_11_28:1.12.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.12.2
	MLWorks_1_0_Unix_1996_11_14:1.12.1
	MLWorks_Open_Beta2_1996_10_11:1.10.3
	MLWorks_License_dev:1.10.2
	MLWorks_1_open_beta_1996_09_13:1.10.1
	MLWorks_Open_Beta_1996_08_22:1.10
	MLWorks_Beta_1996_07_02:1.10
	MLWorks_Beta_1996_06_07:1.9
	MLWorks_Beta_1996_06_06:1.9
	MLWorks_Beta_1996_06_05:1.9
	MLWorks_Beta_1996_06_03:1.9
	MLWorks_Beta_1996_05_31:1.9
	MLWorks_Beta_1996_05_30:1.9;
locks; strict;
comment	@ * @;


1.16
date	98.02.10.15.42.38;	author jont;	state Exp;
branches
	1.16.1.1;
next	1.15;

1.15
date	97.11.05.10.51.45;	author johnh;	state Exp;
branches;
next	1.14;

1.14
date	97.03.27.13.41.02;	author daveb;	state Exp;
branches
	1.14.1.1
	1.14.2.1
	1.14.3.1;
next	1.13;

1.13
date	97.03.25.09.30.31;	author daveb;	state Exp;
branches;
next	1.12;

1.12
date	96.10.29.12.51.02;	author io;	state Exp;
branches
	1.12.1.1
	1.12.2.1
	1.12.3.1
	1.12.4.1;
next	1.11;

1.11
date	96.10.25.14.46.12;	author johnh;	state Exp;
branches;
next	1.10;

1.10
date	96.06.24.11.39.49;	author daveb;	state Exp;
branches
	1.10.1.1
	1.10.2.1
	1.10.3.1;
next	1.9;

1.9
date	96.05.15.10.48.51;	author stephenb;	state Exp;
branches;
next	1.8;

1.8
date	96.04.30.14.34.42;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	96.03.22.11.46.22;	author stephenb;	state Exp;
branches;
next	1.6;

1.6
date	96.01.18.09.44.52;	author stephenb;	state Exp;
branches;
next	1.5;

1.5
date	95.04.20.19.07.01;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	95.04.19.11.02.12;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	95.01.19.12.03.07;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	95.01.18.14.12.17;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	94.12.09.13.36.18;	author jont;	state Exp;
branches;
next	;

1.10.1.1
date	96.09.13.11.42.39;	author hope;	state Exp;
branches;
next	;

1.10.2.1
date	96.10.07.16.35.46;	author hope;	state Exp;
branches;
next	;

1.10.3.1
date	96.10.17.11.54.50;	author hope;	state Exp;
branches;
next	;

1.12.1.1
date	96.11.14.13.23.12;	author hope;	state Exp;
branches
	1.12.1.1.1.1;
next	;

1.12.1.1.1.1
date	96.11.28.15.33.43;	author hope;	state Exp;
branches;
next	;

1.12.2.1
date	96.11.22.18.40.13;	author hope;	state Exp;
branches;
next	;

1.12.3.1
date	96.12.17.18.19.14;	author hope;	state Exp;
branches
	1.12.3.1.1.1;
next	;

1.12.3.1.1.1
date	97.02.24.12.13.33;	author hope;	state Exp;
branches;
next	;

1.12.4.1
date	96.12.18.10.14.37;	author hope;	state Exp;
branches;
next	;

1.14.1.1
date	97.05.12.10.52.47;	author hope;	state Exp;
branches
	1.14.1.1.1.1
	1.14.1.1.2.1
	1.14.1.1.3.1;
next	;

1.14.1.1.1.1
date	97.07.28.18.35.00;	author daveb;	state Exp;
branches
	1.14.1.1.1.1.1.1;
next	;

1.14.1.1.1.1.1.1
date	97.10.07.12.00.43;	author jkbrook;	state Exp;
branches;
next	;

1.14.1.1.2.1
date	97.09.08.17.27.47;	author daveb;	state Exp;
branches;
next	;

1.14.1.1.3.1
date	97.09.09.14.24.53;	author daveb;	state Exp;
branches;
next	;

1.14.2.1
date	97.09.10.19.43.43;	author brucem;	state Exp;
branches;
next	;

1.14.3.1
date	97.09.11.21.11.08;	author daveb;	state Exp;
branches;
next	;

1.16.1.1
date	99.04.01.18.09.16;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.16
log
@[Bug #70065]
Remove uses of MLWorks.IO.messages and use the Messages structure
@
text
@(*  GETENV FUNCTION - UNIX VERSIOn
 *
 *  Copyright (C) 1994 Harlequin Ltd.
 *
 *  $Log: _unixgetenv.sml,v $
 * Revision 1.15  1997/11/05  10:51:45  johnh
 * [Bug #30125]
 * Add get_doc_dir.
 *
 * Revision 1.14  1997/03/27  13:41:02  daveb
 * [Bug #1990]
 * [Bug #1990]
 * Added get_version_setting.
 *
 * Revision 1.13  1997/03/25  09:30:31  daveb
 * [Bug #1979]
 * Changed expand_home_dir to read $HOME if $USER is not set.
 *
 * Revision 1.12  1996/10/29  12:51:02  io
 * [Bug #1614]
 * basifying String
 *
 * Revision 1.11  1996/10/25  14:46:12  johnh
 * Added get_startup_dir dummy (used by Windows).
 *
 * Revision 1.10  1996/06/24  11:39:49  daveb
 * Replaced Getenv.get_home_dir with Getenv.get_startup_filename and
 * Getenv.get_preferences_filename.
 *
 * Revision 1.9  1996/05/15  10:48:51  stephenb
 * Update wrt UnixOS.SysErr -> UnixOS.Error.SysError change.
 *
 * Revision 1.8  1996/04/30  14:34:42  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
 * Revision 1.7  1996/03/22  11:46:22  stephenb
 * Update wrt to Unix->SysErr exception name change.
 *
 * Revision 1.6  1996/01/18  09:44:52  stephenb
 * OS reorganisation: parameterise functor with UnixOS structure and
 * replace any reference to MLWorks.OS.Unix with UnixOS.
 *
 * Revision 1.5  1995/04/20  19:07:01  daveb
 * Added expand_home_dir.
 *
 * Revision 1.4  1995/04/19  11:02:12  jont
 * Add get_object_path
 *
 * Revision 1.3  1995/01/19  12:03:07  daveb
 * Moved functionality for parsing environment paths here from io.sml.
 * Replaced Option structure with references to MLWorks.Option.
 *
 * Revision 1.2  1995/01/18  14:12:17  jont
 * Add separator value to interface
 *
 * Revision 1.1  1994/12/09  13:36:18  jont
 * new file
 *
 *
 *)

require "../utils/getenv";
require "^.utils.__messages";
require "^.basis.__string";
require "unixos";

require "^.basis.__int";

functor UnixGetenv (structure UnixOS: UNIXOS): GETENV =
struct

  fun get_option_value option_name =
    let
      val option_length = size option_name

      fun get_value [] = NONE
      |   get_value(arg :: rest) =
        if size arg < option_length then
          get_value rest
        else if String.isPrefix option_name arg then
	  if size arg = option_length then
	    NONE
	  else
            SOME
	    (substring (arg, option_length, size arg - option_length))
	else
	  get_value rest
    in
      get_value
    end

  fun get_version_setting () =
    get_option_value "MLWORKS_VERSION=" (UnixOS.environment())

  fun get_source_path () =
    get_option_value "MLWORKS_SRC_PATH=" (UnixOS.environment())

  fun get_object_path () =
    get_option_value "MLWORKS_OBJ_PATH=" (UnixOS.environment())

  fun get_pervasive_dir () =
    get_option_value "MLWORKS_PERVASIVE=" (UnixOS.environment())

  fun get_doc_dir () = 
    get_option_value "MLWORKS_DOC=" (UnixOS.environment())

(* dummy function used by Win32 *)
  fun get_startup_dir () = NONE

  local
    fun get_home_dir () =
      get_option_value "HOME=" (UnixOS.environment())

    fun get_user_name () = 
      get_option_value "USER=" (UnixOS.environment())
  in
    fun get_startup_filename () =
      case get_home_dir () of
        NONE =>
          (Messages.output"Warning, no HOME variable set -- can't read .mlworks file\n";
	   NONE)
      | SOME dir =>
          SOME (dir ^ "/.mlworks")
  
    fun get_preferences_filename () =
      case get_home_dir () of
        NONE => NONE
      | SOME dir =>
          SOME (dir ^ "/.mlworks_preferences")

    exception BadHomeName of string

    fun expand_home_dir string =
      let
        val len = size string

        fun upto_slash n =
          if n = len then
            n
          else if String.sub (string, n) = #"/" then
            n
          else
            upto_slash (n+1)

        val expanded =
          if len = 0 orelse String.sub(string, 0) <> #"~" then
            string
          else
            let
              val start = upto_slash 0
  
              val name =
                if start = 1 then
                  get_user_name()
                else
                  SOME (substring (string, 1, start-1))
  
              val dir =
	        case name of
		  SOME str =>
                    ((case UnixOS.getpwnam str of
	                UnixOS.PASSWD {dir, ...} => dir)
                     handle UnixOS.Error.SysErr _ =>
                       raise BadHomeName ("~" ^ str))
	        | NONE =>
		    (* No USER variable; try HOME *)
                    case get_home_dir () of
                      NONE =>
		        (* Possibly need a better error message here *)
		        raise BadHomeName "~"
                    | SOME dir =>
                       dir 

              val rest = substring (string, start, len-start)
            in
              dir ^ rest
            end
      in
        expanded
      end
  end


  (* The main OS-specific element in this function is the character used to
      separate elements in the path. *)
  fun env_path_to_list s =
    let
      fun str_to_list (0, seperator_index, result) =
        substring (* could raise Substring *) (s, 0, seperator_index) :: result
      |   str_to_list (n, seperator_index, result) =
	if String.sub (s, n) = #":" then
          str_to_list
	    (n - 1, n,
             substring (* could raise Substring *) (s, n + 1, seperator_index - n - 1) :: result)
        else
          str_to_list (n - 1, seperator_index, result)
    in
      map
	expand_home_dir
        (str_to_list (size s - 1, size s, []))
    end

end
@


1.16.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a5 4
 * Revision 1.16  1998/02/10  15:42:38  jont
 * [Bug #70065]
 * Remove uses of MLWorks.IO.messages and use the Messages structure
 *
@


1.15
log
@[Bug #30125]
Add get_doc_dir.
@
text
@d6 4
d66 1
d123 1
a123 3
          (MLWorks.IO.output
             (MLWorks.IO.messages,
              "Warning, no HOME variable set -- can't read .mlworks file\n");
@


1.14
log
@[Bug #1990]
[Bug #1990]
Added get_version_setting.
@
text
@d6 5
d101 3
@


1.14.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a5 5
 * Revision 1.14  1997/03/27  13:41:02  daveb
 * [Bug #1990]
 * [Bug #1990]
 * Added get_version_setting.
 *
@


1.14.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a5 5
 * Revision 1.14  1997/03/27  13:41:02  daveb
 * [Bug #1990]
 * [Bug #1990]
 * Added get_version_setting.
 *
@


1.14.1.1
log
@branched from 1.14
@
text
@a5 5
 * Revision 1.14  1997/03/27  13:41:02  daveb
 * [Bug #1990]
 * [Bug #1990]
 * Added get_version_setting.
 *
@


1.14.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.14.1.1  1997/05/12  10:52:47  hope
 * branched from 1.14
 *
@


1.14.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.14.1.1  1997/05/12  10:52:47  hope
 * branched from 1.14
 *
@


1.14.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.14.1.1  1997/05/12  10:52:47  hope
 * branched from 1.14
 *
@


1.14.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 * Revision 1.14.1.1.1.1  1997/07/28  18:35:00  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.13
log
@[Bug #1979]
Changed expand_home_dir to read $HOME if $USER is not set.
@
text
@d6 4
d78 1
a78 1
	    (substring (* could raise Substring *)(arg, option_length, size arg - option_length))
d84 3
@


1.12
log
@[Bug #1614]
basifying String
@
text
@d6 4
d56 1
a80 3
  fun get_user_name () = 
    get_option_value "USER=" (UnixOS.environment())

d96 3
d109 1
a109 1

a114 1
  end
d116 1
a116 1
  exception BadHomeName of string
d118 49
a166 3
  fun expand_home_dir string =
    let
      val len = size string
a167 35
      fun upto_slash n =
        if n = len then
          n
        else if String.sub (string, n) = #"/" then
          n
        else
          upto_slash (n+1)

      val expanded =
        if len = 0 orelse String.sub(string, 0) <> #"~" then
          string
        else
          let
            val start = upto_slash 0

            val name =
              if start = 1 then
                case get_user_name() of
                  SOME s => s
                | _ => raise BadHomeName string
              else
                substring (* could raise Substring *)(string, 1, start-1)

            val rest = substring (* could raise Substring *)(string, start, len-start)

            val UnixOS.PASSWD {dir, ...} =
              UnixOS.getpwnam name
              handle UnixOS.Error.SysErr _ =>
                raise BadHomeName string
          in
            dir ^ rest
          end
    in
      expanded
    end
@


1.12.4.1
log
@branched from 1.12
@
text
@a5 4
 * Revision 1.12  1996/10/29  12:51:02  io
 * [Bug #1614]
 * basifying String
 *
@


1.12.3.1
log
@branched from 1.12
@
text
@a5 4
 * Revision 1.12  1996/10/29  12:51:02  io
 * [Bug #1614]
 * basifying String
 *
@


1.12.3.1.1.1
log
@branched from 1.12.3.1
@
text
@a5 3
 * Revision 1.12.3.1  1996/12/17  18:19:14  hope
 * branched from 1.12
 *
@


1.12.2.1
log
@branched from 1.12
@
text
@a5 4
 * Revision 1.12  1996/10/29  12:51:02  io
 * [Bug #1614]
 * basifying String
 *
@


1.12.1.1
log
@branched from 1.12
@
text
@a5 4
 * Revision 1.12  1996/10/29  12:51:02  io
 * [Bug #1614]
 * basifying String
 *
@


1.12.1.1.1.1
log
@branched from 1.12.1.1
@
text
@a5 3
 * Revision 1.12.1.1  1996/11/14  13:23:12  hope
 * branched from 1.12
 *
@


1.11
log
@Added get_startup_dir dummy (used by Windows).
@
text
@d6 3
d49 1
a54 1
  open MLWorks.Option
d60 1
a60 1
      fun get_value [] = MLWorks.Option.NONE
d64 4
a67 4
        else if String.substring(arg, 0, option_length) = option_name then
          if size arg - option_length = 0 then
            NONE
          else
d69 3
a71 3
	      (String.substring(arg, option_length, size arg - option_length))
        else
          get_value rest
d121 1
a121 1
        else if String.ordof (string, n) = String.ord "/" then
d127 1
a127 1
        if len = 0 orelse String.ordof(string, 0) <> String.ord"~" then
d136 1
a136 1
                  MLWorks.Option.SOME s => s
d139 1
a139 1
                String.substring(string, 1, start-1)
d141 1
a141 1
            val rest = String.substring(string, start, len-start)
d159 1
a159 1
        String.substring (s, 0, seperator_index) :: result
d161 1
a161 1
        if String.ordof (s, n) = String.ord ":" then
d164 1
a164 1
             String.substring (s, n + 1, seperator_index - n - 1) :: result)
@


1.10
log
@Replaced Getenv.get_home_dir with Getenv.get_startup_filename and
Getenv.get_preferences_filename.
@
text
@d6 4
d84 3
@


1.10.3.1
log
@branched from 1.10
@
text
@a5 4
 * Revision 1.10  1996/06/24  11:39:49  daveb
 * Replaced Getenv.get_home_dir with Getenv.get_startup_filename and
 * Getenv.get_preferences_filename.
 *
@


1.10.2.1
log
@branched from 1.10
@
text
@a5 4
 * Revision 1.10  1996/06/24  11:39:49  daveb
 * Replaced Getenv.get_home_dir with Getenv.get_startup_filename and
 * Getenv.get_preferences_filename.
 *
@


1.10.1.1
log
@branched from 1.10
@
text
@a5 4
 * Revision 1.10  1996/06/24  11:39:49  daveb
 * Replaced Getenv.get_home_dir with Getenv.get_startup_filename and
 * Getenv.get_preferences_filename.
 *
@


1.9
log
@Update wrt UnixOS.SysErr -> UnixOS.Error.SysError change.
@
text
@d6 3
d47 2
d59 1
a59 1
            MLWorks.Option.NONE
d61 1
a61 1
            MLWorks.Option.SOME
d81 20
a100 2
  fun get_home_dir () =
    get_option_value "HOME=" (UnixOS.environment())
@


1.8
log
@String functions explode, implode, chr and ord now only available from String
io functions and types
instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
now only available from MLWorks.IO
@
text
@d6 6
d112 1
a112 1
              handle UnixOS.SysErr _ =>
@


1.7
log
@Update wrt to Unix->SysErr exception name change.
@
text
@d6 3
d82 1
a82 1
        else if String.ordof (string, n) = ord "/" then
d88 1
a88 1
        if len = 0 orelse String.ordof(string, 0) <> ord"~" then
d122 1
a122 1
        if String.ordof (s, n) = ord ":" then
@


1.6
log
@OS reorganisation: parameterise functor with UnixOS structure and
replace any reference to MLWorks.OS.Unix with UnixOS.
@
text
@d6 4
d103 1
a103 1
              handle UnixOS.Unix _ =>
@


1.5
log
@Added expand_home_dir.
@
text
@d6 3
d26 2
d29 1
a29 1
functor UnixGetenv (): GETENV =
d52 1
a52 1
    get_option_value "USER=" (MLWorks.OS.Unix.environment())
d55 1
a55 1
    get_option_value "MLWORKS_SRC_PATH=" (MLWorks.OS.Unix.environment())
d58 1
a58 1
    get_option_value "MLWORKS_OBJ_PATH=" (MLWorks.OS.Unix.environment())
d61 1
a61 1
    get_option_value "MLWORKS_PERVASIVE=" (MLWorks.OS.Unix.environment())
d64 1
a64 1
    get_option_value "HOME=" (MLWorks.OS.Unix.environment())
d97 3
a99 3
            val MLWorks.OS.Unix.PASSWD {dir, ...} =
              MLWorks.OS.Unix.getpwnam name
              handle MLWorks.OS.Unix.Unix _ =>
@


1.4
log
@Add get_object_path
@
text
@d6 3
a25 17
  (* The main OS-specific element in this funciton is the character used to
      separate elements in the path. *)
  fun env_path_to_list s =
    let
      fun str_to_list (0, seperator_index, result) =
        String.substring (s, 0, seperator_index) :: result
      |   str_to_list (n, seperator_index, result) =
        if String.ordof (s, n) = ord ":" then
          str_to_list
	    (n - 1, n,
             String.substring (s, n + 1, seperator_index - n - 1) :: result)
        else
          str_to_list (n - 1, seperator_index, result)
    in
          str_to_list (size s - 1, size s, [])
    end

d60 62
@


1.3
log
@Moved functionality for parsing environment paths here from io.sml.
Replaced Option structure with references to MLWorks.Option.
@
text
@d6 4
d65 3
@


1.2
log
@Add separator value to interface
@
text
@d6 3
a14 1
require "../utils/option";
d17 1
a17 3
functor UnixGetenv
  (structure Option : OPTION
  ): GETENV =
d19 16
a34 3
  structure Option = Option

  val separator = ":"
d40 1
a40 1
      fun get_value [] = Option.ABSENT
d46 1
a46 1
            Option.ABSENT
d48 1
a48 1
            Option.PRESENT
@


1.1
log
@new file
@
text
@d5 3
a7 1
 *  $Log$
d9 1
d20 2
@
