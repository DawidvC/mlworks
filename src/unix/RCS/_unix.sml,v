head	1.9;
access;
symbols
	MLWorks_20m1_1997_10_23:1.9
	MLWorks_11r1:1.9.5.1.1.1.1
	MLWorks_workspace_97:1.9.7
	MLWorks_dt_wizard:1.9.6
	MLWorks_11c0_1997_09_09:1.9.5.1.1.1
	MLWorks_10r3:1.9.5.1.3
	MLWorks_10r2_551:1.9.5.1.2
	MLWorks_11:1.9.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.9.5.1
	MLWorks_20m0_1997_06_20:1.9
	MLWorks_1_0_r2c2_1997_06_14:1.9.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.9.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.9.5
	MLWorks_BugFix_1997_04_24:1.9
	MLWorks_1_0_r2_Win32_1997_04_11:1.9
	MLWorks_1_0_r2_Unix_1997_04_04:1.9
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.9.3.1.1
	MLWorks_gui_1996_12_18:1.9.4
	MLWorks_1_0_Win32_1996_12_17:1.9.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.9.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.9.1.1
	MLWorks_1_0_Irix_1996_11_28:1.9.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.9.2
	MLWorks_1_0_Unix_1996_11_14:1.9.1
	MLWorks_Open_Beta2_1996_10_11:1.8.3
	MLWorks_License_dev:1.8.2
	MLWorks_1_open_beta_1996_09_13:1.8.1
	MLWorks_Open_Beta_1996_08_22:1.8
	MLWorks_Beta_1996_07_02:1.8
	MLWorks_Beta_1996_06_07:1.8
	MLWorks_Beta_1996_06_06:1.8
	MLWorks_Beta_1996_06_05:1.8
	MLWorks_Beta_1996_06_03:1.8
	MLWorks_Beta_1996_05_31:1.8
	MLWorks_Beta_1996_05_30:1.7;
locks; strict;
comment	@ * @;


1.9
date	96.10.29.18.35.28;	author io;	state Exp;
branches
	1.9.1.1
	1.9.2.1
	1.9.3.1
	1.9.4.1
	1.9.5.1
	1.9.6.1
	1.9.7.1;
next	1.8;

1.8
date	96.05.30.11.51.49;	author daveb;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1;
next	1.7;

1.7
date	96.04.30.14.10.03;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	96.04.18.15.24.10;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	96.04.17.12.59.22;	author stephenb;	state Exp;
branches;
next	1.4;

1.4
date	96.03.27.13.36.03;	author stephenb;	state Exp;
branches;
next	1.3;

1.3
date	96.01.23.09.45.33;	author stephenb;	state Exp;
branches;
next	1.2;

1.2
date	96.01.17.16.46.03;	author stephenb;	state Exp;
branches;
next	1.1;

1.1
date	94.12.09.13.34.48;	author jont;	state Exp;
branches;
next	;

1.8.1.1
date	96.09.13.11.42.32;	author hope;	state Exp;
branches;
next	;

1.8.2.1
date	96.10.07.16.35.39;	author hope;	state Exp;
branches;
next	;

1.8.3.1
date	96.10.17.11.54.43;	author hope;	state Exp;
branches;
next	;

1.9.1.1
date	96.11.14.13.23.04;	author hope;	state Exp;
branches
	1.9.1.1.1.1;
next	;

1.9.1.1.1.1
date	96.11.28.15.33.32;	author hope;	state Exp;
branches;
next	;

1.9.2.1
date	96.11.22.18.40.06;	author hope;	state Exp;
branches;
next	;

1.9.3.1
date	96.12.17.18.19.07;	author hope;	state Exp;
branches
	1.9.3.1.1.1;
next	;

1.9.3.1.1.1
date	97.02.24.12.13.25;	author hope;	state Exp;
branches;
next	;

1.9.4.1
date	96.12.18.10.14.30;	author hope;	state Exp;
branches;
next	;

1.9.5.1
date	97.05.12.10.52.40;	author hope;	state Exp;
branches
	1.9.5.1.1.1
	1.9.5.1.2.1
	1.9.5.1.3.1;
next	;

1.9.5.1.1.1
date	97.07.28.18.35.14;	author daveb;	state Exp;
branches
	1.9.5.1.1.1.1.1;
next	;

1.9.5.1.1.1.1.1
date	97.10.07.12.00.52;	author jkbrook;	state Exp;
branches;
next	;

1.9.5.1.2.1
date	97.09.08.17.27.56;	author daveb;	state Exp;
branches;
next	;

1.9.5.1.3.1
date	97.09.09.14.25.07;	author daveb;	state Exp;
branches;
next	;

1.9.6.1
date	97.09.10.19.43.52;	author brucem;	state Exp;
branches;
next	;

1.9.7.1
date	97.09.11.21.11.18;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.9
log
@[Bug #1614]
basifying String use
@
text
@(* _unix.sml the functor *)
(*
$Log: _unix.sml,v $
 * Revision 1.8  1996/05/30  11:51:49  daveb
 * The Io exception is now in MLWorks.IO.
 *
 * Revision 1.7  1996/04/30  14:10:03  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
 * Revision 1.6  1996/04/18  15:24:10  jont
 * initbasis moves to basis
 *
 * Revision 1.5  1996/04/17  12:59:22  stephenb
 * Remove ctime since it is no longer used anywhere.
 * Update the date implementation to use OS.Process.system
 *
 * Revision 1.4  1996/03/27  13:36:03  stephenb
 * Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
 * the deprecated OS interface.
 *
 * Revision 1.3  1996/01/23  09:45:33  stephenb
 * Change the require to be compatible with NewJersey SML.
 *
 * Revision 1.2  1996/01/17  16:46:03  stephenb
 * OS reorganisation: MLWorks.OS.Unix has moved from the pervasive
 * library, so need extra argument to the functor to pass in the
 * new UnixOS structure.
 *
 * Revision 1.1  1994/12/09  13:34:48  jont
 * new file
 *

Copyright (c) 1994 Harlequin Ltd.
*)

require "../make/old_os";
require "../unix/unixos";
require "../basis/os";
require "^.basis.__string";


functor Unix (
  structure UnixOS: UNIXOS
  structure OS: OS
) : OLD_OS =
struct
  fun get_terminated_line file =
    let
      fun extend_line line = 
	if MLWorks.IO.end_of_stream file then
	  implode (rev line)
	else
	  let val c:char = MLWorks.Internal.Value.cast (MLWorks.String.ordof (MLWorks.IO.input(file,1), 1))
	  in
	    if c = #"\n" then
	      implode (rev (#"\n" :: line))
	    else
	      extend_line (c:: line)
	  end
    in
      extend_line []
    end
  
  val input_line = get_terminated_line

  exception ParseEnviron

  fun parse_environ (key) =
    let 
      val key = key ^ "="
      val keysize = (size key)

      fun searchkey nil = raise ParseEnviron
	| searchkey (x::rest) = 
	if String.isPrefix key x then
	  substring (x,keysize,size x - keysize)
	else
	  searchkey rest
    in
      searchkey (UnixOS.environment ())
    end	    

  fun username () = parse_environ "USER"

  exception Home

  local

    fun nthoccur (string,c:char,n) =
      let
	fun count (position,n) =
	  if String.sub (string,position) = c then
	  if n = 0 then 
	    position
	  else
	    count(position+1,n-1)
	  else
	    count(position+1,n)
      in
	count(0,n)
      end
  in

    fun home "" = parse_environ "HOME"
      | home x =
	let
	val fd = MLWorks.IO.open_in "/etc/passwd"
	val xsize = size x
	fun parse_passwd () =
	  if MLWorks.IO.end_of_stream fd then
	    raise Home
	  else
	    let val line = input_line fd
	    in
	      if String.isPrefix x line then
		let
		  val fourth = nthoccur(line,#":",4)
		  val rest = substring (* could raise Substring *) 
		    (line,fourth+1,(size line) - (fourth+1))
		  val fifth = nthoccur(rest,#":",0)
		in
		  substring (* could raise Substring *)(rest,0,fifth)
		end
	      else
		parse_passwd ()
	    end
	in
	  let val home = parse_passwd ()
	  in
	    (MLWorks.IO.close_in fd ; home)
	  end
	end      
  end

  datatype mtime_res =
    EXISTS of MLWorks.Time.time |
    NOT_EXIST

  fun mtime filename =
    EXISTS (MLWorks.IO.file_modified filename)
    handle MLWorks.IO.Io _ => NOT_EXIST
    
  fun date () = 
    let
      val _ = OS.Process.system "/bin/rm -rf /usr/tmp/mldate; /usr/bin/date > /usr/tmp/mldate"
      val i = MLWorks.IO.open_in "/usr/tmp/mldate"
      val s = input_line i
      val _ = MLWorks.IO.close_in i
    in
      substring (* could raise Substring *) (s,0,size s - 1)
    end
end
@


1.9.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.9  1996/10/29  18:35:28  io
 * [Bug #1614]
 * basifying String use
 *
@


1.9.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.9  1996/10/29  18:35:28  io
 * [Bug #1614]
 * basifying String use
 *
@


1.9.5.1
log
@branched from 1.9
@
text
@a3 4
 * Revision 1.9  1996/10/29  18:35:28  io
 * [Bug #1614]
 * basifying String use
 *
@


1.9.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.9.5.1  1997/05/12  10:52:40  hope
 * branched from 1.9
 *
@


1.9.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.9.5.1  1997/05/12  10:52:40  hope
 * branched from 1.9
 *
@


1.9.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.9.5.1  1997/05/12  10:52:40  hope
 * branched from 1.9
 *
@


1.9.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.9.5.1.1.1  1997/07/28  18:35:14  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.9.4.1
log
@branched from 1.9
@
text
@a3 4
 * Revision 1.9  1996/10/29  18:35:28  io
 * [Bug #1614]
 * basifying String use
 *
@


1.9.3.1
log
@branched from 1.9
@
text
@a3 4
 * Revision 1.9  1996/10/29  18:35:28  io
 * [Bug #1614]
 * basifying String use
 *
@


1.9.3.1.1.1
log
@branched from 1.9.3.1
@
text
@a3 3
 * Revision 1.9.3.1  1996/12/17  18:19:07  hope
 * branched from 1.9
 *
@


1.9.2.1
log
@branched from 1.9
@
text
@a3 4
 * Revision 1.9  1996/10/29  18:35:28  io
 * [Bug #1614]
 * basifying String use
 *
@


1.9.1.1
log
@branched from 1.9
@
text
@a3 4
 * Revision 1.9  1996/10/29  18:35:28  io
 * [Bug #1614]
 * basifying String use
 *
@


1.9.1.1.1.1
log
@branched from 1.9.1.1
@
text
@a3 3
 * Revision 1.9.1.1  1996/11/14  13:23:04  hope
 * branched from 1.9
 *
@


1.8
log
@The Io exception is now in MLWorks.IO.
@
text
@d4 3
d42 1
d52 1
a52 1
      fun extend_line line =
d54 1
a54 1
	  String.implode(rev line)
d56 1
a56 2
	  let
	    val char = MLWorks.IO.input(file, 1)
d58 2
a59 1
	    if char = "\n" then String.implode(rev("\n" :: line))
d61 1
a61 1
	      extend_line(char :: line)
d66 1
a66 1
    
d75 1
d77 5
a81 8
	| searchkey (x::rest) =
	  let val xsize = size x
	  in
	    if xsize >= keysize andalso String.substring(x,0,keysize) = key then
	      String.substring (x,keysize,xsize-keysize)
	  else
	    searchkey rest
	  end
d92 1
a92 1
    fun nthoccur (string,char,n) =
a93 1
	val charord = String.ord char
d95 1
a95 1
	  if String.ordof (string,position) = charord then
d118 1
a118 1
	      if String.substring(line,0,xsize) = x then
d120 2
a121 2
		  val fourth = nthoccur(line,":",4)
		  val rest = String.substring 
d123 1
a123 1
		  val fifth = nthoccur(rest,":",0)
d125 1
a125 1
		  String.substring(rest,0,fifth)
d153 1
a153 1
      String.substring (s,0,size s - 1)
@


1.8.3.1
log
@branched from 1.8
@
text
@a3 3
 * Revision 1.8  1996/05/30  11:51:49  daveb
 * The Io exception is now in MLWorks.IO.
 *
@


1.8.2.1
log
@branched from 1.8
@
text
@a3 3
 * Revision 1.8  1996/05/30  11:51:49  daveb
 * The Io exception is now in MLWorks.IO.
 *
@


1.8.1.1
log
@branched from 1.8
@
text
@a3 3
 * Revision 1.8  1996/05/30  11:51:49  daveb
 * The Io exception is now in MLWorks.IO.
 *
@


1.7
log
@String functions explode, implode, chr and ord now only available from String
io functions and types
instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
now only available from MLWorks.IO
@
text
@d4 6
d143 1
a143 1
    handle Io _ => NOT_EXIST
@


1.6
log
@initbasis moves to basis
@
text
@d4 3
d43 2
a44 2
	if end_of_stream file then
	  implode(rev line)
d47 1
a47 1
	    val char = input(file, 1)
d49 1
a49 1
	    if char = "\n" then implode(rev("\n" :: line))
d86 1
a86 1
	val charord = ord char
d103 1
a103 1
	val fd = open_in "/etc/passwd"
d106 1
a106 1
	  if end_of_stream fd then
d126 1
a126 1
	    (close_in fd ; home)
d142 1
a142 1
      val i = open_in "/usr/tmp/mldate"
d144 1
a144 1
      val _ = close_in i
@


1.5
log
@Remove ctime since it is no longer used anywhere.
Update the date implementation to use OS.Process.system
@
text
@d4 4
d29 1
a29 1
require "../initbasis/os";
@


1.4
log
@Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
the deprecated OS interface.
@
text
@d4 4
d25 1
d30 1
a131 11
  exception unix_ctime

  fun ctime () =
    let
      val _ = MLWorks.OS.system "/usr/bin/touch /usr/tmp/mlstamp"
    in
      case (mtime "/usr/tmp/mlstamp") of
	EXISTS sec => sec
      | NOT_EXISTS => raise unix_ctime
    end

d134 1
a134 1
      val _ = MLWorks.OS.system "/bin/rm -rf /usr/tmp/mldate; /usr/bin/date > /usr/tmp/mldate"
@


1.3
log
@Change the require to be compatible with NewJersey SML.
@
text
@d4 3
d19 1
a19 1
require "../make/os";
d25 1
a25 1
) : OS =
@


1.2
log
@OS reorganisation: MLWorks.OS.Unix has moved from the pervasive
library, so need extra argument to the functor to pass in the
new UnixOS structure.
@
text
@d4 5
d17 1
a17 1
require "unixos";
@


1.1
log
@new file
@
text
@d3 4
a6 1
$Log$
d12 1
d14 4
a17 1
functor Unix () : OS =
d54 1
a54 1
      searchkey (MLWorks.OS.Unix.environment ())
@
