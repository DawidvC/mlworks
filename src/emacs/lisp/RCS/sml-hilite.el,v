head	1.1;
access;
symbols
	MLW_daveb_inline_1_4_99:1.1.8
	MLWorks_21c0_1999_03_25:1.1
	MLWorks_20c1_1998_08_20:1.1
	MLWorks_20c0_1998_08_04:1.1
	MLWorks_20b2c2_1998_06_19:1.1
	MLWorks_20b2_Windows_1998_06_12:1.1
	MLWorks_20b1c1_1998_05_07:1.1
	MLWorks_20b0_1998_04_07:1.1
	MLWorks_20b0_1998_03_20:1.1
	MLWorks_20m2_1998_02_16:1.1
	MLWorks_20m1_1997_10_23:1.1
	MLWorks_11r1:1.1.5.1.1.1.1
	MLWorks_workspace_97:1.1.7
	MLWorks_dt_wizard:1.1.6
	MLWorks_11c0_1997_09_09:1.1.5.1.1.1
	MLWorks_10r3:1.1.5.1.3
	MLWorks_10r2_551:1.1.5.1.2
	MLWorks_11:1.1.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.5.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c2_1997_06_14:1.1.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.5
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.3.1.1
	MLWorks_gui_1996_12_18:1.1.4
	MLWorks_1_0_Win32_1996_12_17:1.1.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.1.1
	MLWorks_1_0_Irix_1996_11_28:1.1.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.2
	MLWorks_1_0_Unix_1996_11_14:1.1.1;
locks; strict;
comment	@; @;


1.1
date	96.11.04.16.15.41;	author matthew;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1
	1.1.6.1
	1.1.7.1
	1.1.8.1;
next	;

1.1.1.1
date	96.11.14.13.05.11;	author hope;	state Exp;
branches
	1.1.1.1.1.1;
next	;

1.1.1.1.1.1
date	96.11.28.15.14.42;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.11.22.18.22.39;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.12.17.18.00.40;	author hope;	state Exp;
branches
	1.1.3.1.1.1;
next	;

1.1.3.1.1.1
date	97.02.24.11.52.22;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	96.12.18.09.56.03;	author hope;	state Exp;
branches;
next	;

1.1.5.1
date	97.05.12.10.50.45;	author hope;	state Exp;
branches
	1.1.5.1.1.1
	1.1.5.1.2.1
	1.1.5.1.3.1;
next	;

1.1.5.1.1.1
date	97.07.28.18.32.58;	author daveb;	state Exp;
branches
	1.1.5.1.1.1.1.1;
next	;

1.1.5.1.1.1.1.1
date	97.10.07.11.58.59;	author jkbrook;	state Exp;
branches;
next	;

1.1.5.1.2.1
date	97.09.08.17.26.06;	author daveb;	state Exp;
branches;
next	;

1.1.5.1.3.1
date	97.09.09.14.22.52;	author daveb;	state Exp;
branches;
next	;

1.1.6.1
date	97.09.10.19.41.52;	author brucem;	state Exp;
branches;
next	;

1.1.7.1
date	97.09.11.21.09.25;	author daveb;	state Exp;
branches;
next	;

1.1.8.1
date	99.04.01.18.08.11;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
New unit
@


1.1
log
@new unit
New unit
@
text
@;;; sml-hilite.el. Highlighting for sml-mode using hilit19.

;; Copyright (C) 1995 Frederick Knabe
;;
;; Author:     Fritz Knabe <knabe@@ecrc.de>
;;             ECRC GmbH, Arabellastr. 17, 81925 Munich, Germany
;;
;; 08-Nov-94, Fritz Knabe <knabe@@ecrc.de>

;; This file is not part of GNU Emacs, but it is distributed under the
;; same conditions.

;; ====================================================================

;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation; either version 2, or (at
;; your option) any later version.

;; This program is distributed in the hope that it will be useful, but
;; WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
;; General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs; see the file COPYING. If not, write to the
;; Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

;; ====================================================================

;; Put this code *after* the (require 'hilit19) in your .emacs.
;; Alternatively, put it in an (eval-after-load "hilit19" ...).

;; Better, use sml-load-hook like this:

;; (setq sml-load-hook
;;       '(lambda() "Highlights." (require 'sml-hilite)))

;; hilit19 does not currently appear to belong to XEmacs -- they
;; favour `font-lock'. Font-lock patterns in sml-font.el

;;; CODE

(require 'hilit19)

(cond ((and (x-display-color-p) (eq hilit-background-mode 'light))
       ;; for SML
       (hilit-translate sml-comment	'firebrick-italic)
       (hilit-translate sml-string	'ForestGreen-italic)
       (hilit-translate sml-keyword	'blue-bold))
      ((and (x-display-color-p) (eq hilit-background-mode 'dark))
       ;; for SML
       (hilit-translate sml-comment	'moccasin-italic)
       (hilit-translate sml-string	'green-italic)
       (hilit-translate sml-keyword	'cyan-bold))
      (t
       ;; for SML
       (hilit-translate sml-comment	'default-italic)
       (hilit-translate sml-string	'default-bold-italic)
       (hilit-translate sml-keyword	'default-bold)))

(hilit-set-mode-patterns
 'sml-mode
 '((kn-hilit-sml-string-find "" sml-string)
   (kn-hilit-sml-comment-find "" sml-comment)
   ;; The old patterns
   ;;("\"" "[^\\]\"" sml-string)
   ;;("(\\*" "\\*)" sml-comment)
   ("\\(\\`\\|[^_']\\)\\<\\(\
a\\(bst\\(raction\\|ype\\)\\|nd\\(\\|also\\)\\|s\\)\\|case\\|\
d\\(atatype\\|o\\)\\|e\\(lse\\|nd\\|qtype\\|xception\\)\\|\
f\\(n\\|un\\(\\|\ctor\\)\\)\\|handle\\|i\\([fn]\\|nfixr?\\)\\|\
l\\(et\\|ocal\\)\\|nonfix\\|\
o\\([fp]\\|pen\\|relse\\|verload\\)\\|r\\(aise\\|ec\\)\\|s\\(haring\\|\
ig\\(\\|nature\\)\\|truct\\(\\|ure\\)\\)\\|t\\(hen\\|ype\\)\\|val\\|\
w\\(hile\\|ith\\(\\|type\\)\\)\\)\\>\
\\(\\'\\|[^_']\\)" 2 sml-keyword)))

(defun kn-hilit-sml-string-find (dummy)
  "Find an SML string and return (START . END); if none, returns nil. 
Skips over potentially nested comments when searching for the start of the
string. Skips over \f...f\ (where f is whitespace) sequences in strings."
  (let ((nest 0)
	(continue t)
	st en)
    (while (and continue
		(re-search-forward "\\(\"\\)\\|\\((\\*\\)\\|\\(\\*)\\)" nil t))
      (cond
       ((match-beginning 1) (setq continue (> nest 0)))
       ((match-beginning 2) (setq nest (+ nest 1)))
       ((match-beginning 3) (setq nest (- nest 1)))))
    (if (not continue)
	(progn
	  (setq st (match-beginning 1))
	  (while (and (re-search-forward
		       "\\(\"\\)\\|\\(\\\\\\s-*\\\\\\)\\|\\(\\\\\"\\)" nil t)
		      (cond
		       ((match-beginning 1) (setq en (point)) nil)
		       ((match-beginning 2) t)
		       ((match-beginning 3) t))))
	  (and en (cons st en))))))

(defun kn-hilit-sml-comment-find (dummy)
  "Find an SML comment and return (START . END); if none, returns nil.
Handles nested comments. Ensures that the comment starts outside of a string."
  (let ((continue t)
	(nest 1)
	st en)
    (while (and continue
		(re-search-forward "\\(\"\\)\\|\\((\\*\\)" nil t))
      (cond
       ((match-beginning 1)
	(while (and (re-search-forward
		     "\\(\"\\)\\|\\(\\\\\\s-*\\\\\\)\\|\\(\\\\\"\\)" nil t)
		    (cond
		     ((match-beginning 1) nil)
		     ((match-beginning 2) t)
		     ((match-beginning 3) t)))))
       ((match-beginning 2) (setq continue nil))))
    (if (not continue)
	(progn
	  (setq st (match-beginning 2))
	  (setq continue t)
	  (while (and continue
		      (re-search-forward "\\((\\*\\)\\|\\(\\*)\\)" nil t))
	    (cond
	     ((match-beginning 1) (setq nest (+ nest 1)))
	     ((match-beginning 2)
	      (setq nest (- nest 1)) (setq continue (> nest 0)))))
	  (if (not continue)
	      (cons st (match-end 2)))))))

(provide 'sml-hilite)

;;; no more sml-hilite.el, it's finished.
@


1.1.8.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@@


1.1.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@@


1.1.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@@


1.1.5.1
log
@branched from 1.1
@
text
@@


1.1.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.1.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.1.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.1.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.1.4.1
log
@branched from 1.1
@
text
@@


1.1.3.1
log
@branched from 1.1
@
text
@@


1.1.3.1.1.1
log
@branched from 1.1.3.1
@
text
@@


1.1.2.1
log
@branched from 1.1
@
text
@@


1.1.1.1
log
@branched from 1.1
@
text
@@


1.1.1.1.1.1
log
@branched from 1.1.1.1
@
text
@@
