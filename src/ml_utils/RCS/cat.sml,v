head	1.8;
access;
symbols
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.6
	MLWorks_20m1_1997_10_23:1.6
	MLWorks_11r1:1.5.8.1.1.1.1
	MLWorks_workspace_97:1.6.2
	MLWorks_dt_wizard:1.6.1
	MLWorks_11c0_1997_09_09:1.5.8.1.1.1
	MLWorks_10r3:1.5.8.1.3
	MLWorks_10r2_551:1.5.8.1.2
	MLWorks_11:1.5.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.5.8.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.5.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.5.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.5.8
	MLWorks_BugFix_1997_04_24:1.5
	MLWorks_1_0_r2_Win32_1997_04_11:1.5
	MLWorks_1_0_r2_Unix_1997_04_04:1.5
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.5.6.1.1
	MLWorks_gui_1996_12_18:1.5.7
	MLWorks_1_0_Win32_1996_12_17:1.5.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.5.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.5.4.1
	MLWorks_1_0_Irix_1996_11_28:1.5.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.5.5
	MLWorks_1_0_Unix_1996_11_14:1.5.4
	MLWorks_Open_Beta2_1996_10_11:1.5.3
	MLWorks_License_dev:1.5.2
	MLWorks_1_open_beta_1996_09_13:1.5.1
	MLWorks_Open_Beta_1996_08_22:1.5
	MLWorks_Beta_1996_07_02:1.5
	MLWorks_Beta_1996_06_07:1.5
	MLWorks_Beta_1996_06_06:1.5
	MLWorks_Beta_1996_06_05:1.5
	MLWorks_Beta_1996_06_03:1.5
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4;
locks; strict;
comment	@ * @;


1.8
date	98.03.20.15.19.35;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	98.02.19.09.07.43;	author mitchell;	state Exp;
branches;
next	1.6;

1.6
date	97.05.01.13.16.14;	author jont;	state Exp;
branches
	1.6.1.1
	1.6.2.1;
next	1.5;

1.5
date	96.05.31.14.16.10;	author stephenb;	state Exp;
branches
	1.5.1.1
	1.5.2.1
	1.5.3.1
	1.5.4.1
	1.5.5.1
	1.5.6.1
	1.5.7.1
	1.5.8.1;
next	1.4;

1.4
date	96.05.16.12.55.06;	author stephenb;	state Exp;
branches;
next	1.3;

1.3
date	96.05.02.14.25.24;	author stephenb;	state Exp;
branches;
next	1.2;

1.2
date	96.04.29.17.07.38;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	95.02.02.15.33.28;	author jont;	state Exp;
branches;
next	;

1.5.1.1
date	96.09.13.11.19.49;	author hope;	state Exp;
branches;
next	;

1.5.2.1
date	96.10.07.16.09.43;	author hope;	state Exp;
branches;
next	;

1.5.3.1
date	96.10.17.11.28.02;	author hope;	state Exp;
branches;
next	;

1.5.4.1
date	96.11.14.12.53.39;	author hope;	state Exp;
branches
	1.5.4.1.1.1;
next	;

1.5.4.1.1.1
date	96.11.28.15.04.34;	author hope;	state Exp;
branches;
next	;

1.5.5.1
date	96.11.22.18.12.35;	author hope;	state Exp;
branches;
next	;

1.5.6.1
date	96.12.17.17.51.04;	author hope;	state Exp;
branches
	1.5.6.1.1.1;
next	;

1.5.6.1.1.1
date	97.02.24.11.41.31;	author hope;	state Exp;
branches;
next	;

1.5.7.1
date	96.12.18.09.45.16;	author hope;	state Exp;
branches;
next	;

1.5.8.1
date	97.05.12.10.37.46;	author hope;	state Exp;
branches
	1.5.8.1.1.1
	1.5.8.1.2.1
	1.5.8.1.3.1;
next	;

1.5.8.1.1.1
date	97.07.28.18.22.53;	author daveb;	state Exp;
branches
	1.5.8.1.1.1.1.1;
next	;

1.5.8.1.1.1.1.1
date	97.10.07.11.48.35;	author jkbrook;	state Exp;
branches;
next	;

1.5.8.1.2.1
date	97.09.08.17.16.16;	author daveb;	state Exp;
branches;
next	;

1.5.8.1.3.1
date	97.09.09.14.12.14;	author daveb;	state Exp;
branches;
next	;

1.6.1.1
date	97.09.10.19.28.17;	author brucem;	state Exp;
branches;
next	;

1.6.2.1
date	97.09.11.20.58.14;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
No reason given
@


1.8
log
@[Bug #30090]
Remove MLWorks.IO in favour of TextIO and print
@
text
@(* cat.sml *)
(*
 *
 * creator for files to be used by -from arguments
 * (only required for NT because its CLI is broken)
 *
 * $Log: cat.sml,v $
 * Revision 1.7  1998/02/19  09:07:43  mitchell
 * [Bug #30349]
 * Fix to avoid non-unit sequence warnings
 *
 * Revision 1.6  1997/05/01  13:16:14  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
 * Revision 1.5  1996/05/31  14:16:10  stephenb
 * Io is no longer a top level exception therefore Io -> MLWorks.IO.Io
 *
 * Revision 1.4  1996/05/16  12:55:06  stephenb
 * Update wrt MLWorks.OS.arguments -> MLWorks.arguments change.
 *
 * Revision 1.3  1996/05/02  14:25:24  stephenb
 * Update now that output, std_out, ... etc. are no longer at the top level.
 *
 * Revision 1.2  1996/04/29  17:07:38  jont
 * MLWorks.save moves into MLWorks.Internal
 *
 * Revision 1.1  1995/02/02  15:33:28  jont
 * new unit
 * No reason given
 *
 *
 * Copyright (c) 1995 Harlequin Ltd.
 *)

require "^.basis.__text_io";
require "^.basis.__io";

exception bad_args of string

fun iterate f [] = ()
  | iterate f (x :: xs) = (ignore(f x); iterate f xs)

fun make_output(args, output_file) =
  let
    val file_handle = TextIO.openOut output_file
  in
    (iterate (fn x => TextIO.output(file_handle, x ^ "\n")) args;
     (TextIO.closeOut file_handle
      handle IO.Io{name, ...} =>
	TextIO.output(TextIO.stdErr, "Cannot close " ^ output_file ^ " because " ^ name ^ "\n")
	)
     ) handle IO.Io{name, ...} =>
    (TextIO.output(TextIO.stdErr, "Cannot write to " ^ output_file ^ " because " ^ name ^ "\n");
     (TextIO.closeOut file_handle
      handle IO.Io{name, ...} =>
	TextIO.output(TextIO.stdErr, "Cannot close " ^ output_file ^ " because " ^ name ^ "\n")))
  end
    handle IO.Io{name, ...} =>
      TextIO.output(TextIO.stdErr, "Cannot open " ^ output_file ^ "because " ^ name ^ "\n")

fun do_help() =
  (print("cat <output_file> [<args>]:\n");
   print("<output_file> : where the text is to be placed\n");
   print("<args> : a (possibly empty) list of names, space separated, to be written to <output_file>\n"))

fun obey(args, SOME output_file) =
  make_output (args, output_file)
  | obey([], NONE) = raise bad_args
    ("Missing args: <output_file>\n")
  | obey(args, NONE) =
    (case args of
       "-help" :: _ => do_help()
     | x :: rest => obey(rest, SOME x)
     | _ => raise bad_args "Compiler fault in nested case")

fun obey1 str_list =
  obey(str_list, NONE)
  handle bad_args string =>
    TextIO.output(TextIO.stdErr, "script: " ^ string ^ "\n")

fun obey2["-save", filename] =
  (ignore(MLWorks.Internal.save(filename, fn () => obey1(MLWorks.arguments())));
   ())
  | obey2 arg = (print("Bad initial args\n");
		 print("Required: -save <image_name>:\nGiven:\n");
		 iterate (fn str => print(str ^ "\n")) arg;
		 ())

val _ = obey2(MLWorks.arguments());
@


1.7
log
@[Bug #30349]
Fix to avoid non-unit sequence warnings
@
text
@d8 4
d36 3
d46 1
a46 1
    val file_handle = MLWorks.IO.open_out output_file
d48 4
a51 4
    (iterate (fn x => MLWorks.IO.output(file_handle, x ^ "\n")) args;
     (MLWorks.IO.close_out file_handle
      handle MLWorks.IO.Io s =>
	MLWorks.IO.output(MLWorks.IO.std_err, "Cannot close " ^ output_file ^ " because " ^ s ^ "\n")
d53 5
a57 5
     ) handle MLWorks.IO.Io s =>
    (MLWorks.IO.output(MLWorks.IO.std_err, "Cannot write to " ^ output_file ^ " because " ^ s ^ "\n");
     (MLWorks.IO.close_out file_handle
      handle MLWorks.IO.Io s =>
	MLWorks.IO.output(MLWorks.IO.std_err, "Cannot close " ^ output_file ^ " because " ^ s ^ "\n")))
d59 2
a60 2
  handle MLWorks.IO.Io s =>
    MLWorks.IO.output(MLWorks.IO.std_err, "Cannot open " ^ output_file ^ "because " ^ s ^ "\n")
d63 3
a65 3
  (MLWorks.IO.output(MLWorks.IO.std_out, "cat <output_file> [<args>]:\n");
   MLWorks.IO.output(MLWorks.IO.std_out, "<output_file> : where the text is to be placed\n");
   MLWorks.IO.output(MLWorks.IO.std_out, "<args> : a (possibly empty) list of names, space separated, to be written to <output_file>\n"))
a75 1
	
d80 1
a80 1
    MLWorks.IO.output(MLWorks.IO.std_err, "script: " ^ string ^ "\n")
d85 3
a87 3
  | obey2 arg = (MLWorks.IO.output(MLWorks.IO.std_out, "Bad initial args\n");
		 MLWorks.IO.output(MLWorks.IO.std_out, "Required: -save <image_name>:\nGiven:\n");
		 iterate (fn str => MLWorks.IO.output(MLWorks.IO.std_out, str ^ "\n")) arg;
@


1.6
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@d8 4
d35 1
a35 1
  | iterate f (x :: xs) = (f x; iterate f xs)
d77 1
a77 1
  (MLWorks.Internal.save(filename, fn () => obey1(MLWorks.arguments()));
@


1.6.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a7 4
 * Revision 1.6  1997/05/01  13:16:14  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.6.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a7 4
 * Revision 1.6  1997/05/01  13:16:14  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.5
log
@Io is no longer a top level exception therefore Io -> MLWorks.IO.Io
@
text
@d8 3
d56 1
a56 1
fun obey(args, MLWorks.Option.SOME output_file) =
d58 1
a58 1
  | obey([], MLWorks.Option.NONE) = raise bad_args
d60 1
a60 1
  | obey(args, MLWorks.Option.NONE) =
d63 1
a63 1
     | x :: rest => obey(rest, MLWorks.Option.SOME x)
d68 1
a68 1
  obey(str_list, MLWorks.Option.NONE)
@


1.5.8.1
log
@branched from 1.5
@
text
@a7 3
 * Revision 1.5  1996/05/31  14:16:10  stephenb
 * Io is no longer a top level exception therefore Io -> MLWorks.IO.Io
 *
@


1.5.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a7 3
 * Revision 1.5.8.1  1997/05/12  10:37:46  hope
 * branched from 1.5
 *
@


1.5.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a7 3
 * Revision 1.5.8.1  1997/05/12  10:37:46  hope
 * branched from 1.5
 *
@


1.5.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a7 3
 * Revision 1.5.8.1  1997/05/12  10:37:46  hope
 * branched from 1.5
 *
@


1.5.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a7 3
 * Revision 1.5.8.1.1.1  1997/07/28  18:22:53  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.5.7.1
log
@branched from 1.5
@
text
@a7 3
 * Revision 1.5  1996/05/31  14:16:10  stephenb
 * Io is no longer a top level exception therefore Io -> MLWorks.IO.Io
 *
@


1.5.6.1
log
@branched from 1.5
@
text
@a7 3
 * Revision 1.5  1996/05/31  14:16:10  stephenb
 * Io is no longer a top level exception therefore Io -> MLWorks.IO.Io
 *
@


1.5.6.1.1.1
log
@branched from 1.5.6.1
@
text
@a7 3
 * Revision 1.5.6.1  1996/12/17  17:51:04  hope
 * branched from 1.5
 *
@


1.5.5.1
log
@branched from 1.5
@
text
@a7 3
 * Revision 1.5  1996/05/31  14:16:10  stephenb
 * Io is no longer a top level exception therefore Io -> MLWorks.IO.Io
 *
@


1.5.4.1
log
@branched from 1.5
@
text
@a7 3
 * Revision 1.5  1996/05/31  14:16:10  stephenb
 * Io is no longer a top level exception therefore Io -> MLWorks.IO.Io
 *
@


1.5.4.1.1.1
log
@branched from 1.5.4.1
@
text
@a7 3
 * Revision 1.5.4.1  1996/11/14  12:53:39  hope
 * branched from 1.5
 *
@


1.5.3.1
log
@branched from 1.5
@
text
@a7 3
 * Revision 1.5  1996/05/31  14:16:10  stephenb
 * Io is no longer a top level exception therefore Io -> MLWorks.IO.Io
 *
@


1.5.2.1
log
@branched from 1.5
@
text
@a7 3
 * Revision 1.5  1996/05/31  14:16:10  stephenb
 * Io is no longer a top level exception therefore Io -> MLWorks.IO.Io
 *
@


1.5.1.1
log
@branched from 1.5
@
text
@a7 3
 * Revision 1.5  1996/05/31  14:16:10  stephenb
 * Io is no longer a top level exception therefore Io -> MLWorks.IO.Io
 *
@


1.4
log
@Update wrt MLWorks.OS.arguments -> MLWorks.arguments change.
@
text
@d8 3
d36 1
a36 1
      handle Io s =>
d39 1
a39 1
     ) handle Io s =>
d42 1
a42 1
      handle Io s =>
d45 1
a45 1
  handle Io s =>
@


1.3
log
@Update now that output, std_out, ... etc. are no longer at the top level.
@
text
@d8 3
d67 1
a67 1
  (MLWorks.Internal.save(filename, fn () => obey1(MLWorks.OS.arguments()));
d74 1
a74 1
val _ = obey2(MLWorks.OS.arguments());
@


1.2
log
@MLWorks.save moves into MLWorks.Internal
@
text
@d8 3
d26 1
a26 1
    val file_handle = open_out output_file
d28 2
a29 2
    (iterate (fn x => output(file_handle, x ^ "\n")) args;
     (close_out file_handle
d31 1
a31 1
	output(MLWorks.IO.std_err, "Cannot close " ^ output_file ^ " because " ^ s ^ "\n")
d34 2
a35 2
    (output(MLWorks.IO.std_err, "Cannot write to " ^ output_file ^ " because " ^ s ^ "\n");
     (close_out file_handle
d37 1
a37 1
	output(MLWorks.IO.std_err, "Cannot close " ^ output_file ^ " because " ^ s ^ "\n")))
d40 1
a40 1
    output(MLWorks.IO.std_err, "Cannot open " ^ output_file ^ "because " ^ s ^ "\n")
d43 3
a45 3
  (output(std_out, "cat <output_file> [<args>]:\n");
   output(std_out, "<output_file> : where the text is to be placed\n");
   output(std_out, "<args> : a (possibly empty) list of names, space separated, to be written to <output_file>\n"))
d61 1
a61 1
    output(MLWorks.IO.std_err, "script: " ^ string ^ "\n")
d66 3
a68 3
  | obey2 arg = (output(std_out, "Bad initial args\n");
		 output(std_out, "Required: -save <image_name>:\nGiven:\n");
		 iterate (fn str => output(std_out, str ^ "\n")) arg;
@


1.1
log
@new unit
No reason given
@
text
@d7 5
a11 1
 * $Log$
d61 1
a61 1
  (MLWorks.save(filename, fn () => obey1(MLWorks.OS.arguments()));
@
