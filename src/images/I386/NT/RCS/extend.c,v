head	1.1;
access;
symbols
	MLW_daveb_inline_1_4_99:1.1.1
	MLWorks_21c0_1999_03_25:1.1;
locks; strict;
comment	@ * @;


1.1
date	98.09.28.15.15.59;	author jont;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.01.18.08.21;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
A little program to get round a MS linker bug
@


1.1
log
@new unit
A little program to get round a MS linker bug
@
text
@/*
 *
 * Copyright (c) 1998, Harlequin Group plc
 * All rights reserved
 *
 * A little program to cope with the bug that MS linker
 * seeks off the end of object files produced by gcc
 *
 * Copyright (c) 1998, Harlequin Group plc
 * All rights reserved
 *
 * $Log$
 *
 */

#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{
  FILE *output;
  unsigned long zeroes = 0;
  if (argc != 2) {
    fprintf(stderr, "extend: Bad args\n");
    exit(1);
  }
  output = fopen(argv[1], "ab");
  if (output == NULL) {
    fprintf(stderr, "extend: cannot open %s for output\n", argv[1]);
    exit(1);
  }
  if (fwrite(&zeroes, 1, 4, output) != 4) {
    fclose(output);
    fprintf(stderr, "extend: cannot append to %s\n", argv[1]);
    exit(1);
  }
  fclose(output);
  return 0;
}
@


1.1.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@d12 1
a12 5
 * $Log: I386:NT:extend.c,v $
 * Revision 1.1  1998/09/28  15:15:59  jont
 * new unit
 * A little program to get round a MS linker bug
 *
@
