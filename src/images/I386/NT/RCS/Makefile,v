head	1.118;
access;
symbols
	MLW_daveb_inline_1_4_99:1.118.1
	MLWorks_21c0_1999_03_25:1.118
	MLWorks_20c1_1998_08_20:1.108
	MLWorks_20c0_1998_08_04:1.108
	MLWorks_20b2c2_1998_06_19:1.105
	MLWorks_20b2_Windows_1998_06_12:1.105
	MLWorks_20b1c1_1998_05_07:1.104
	MLWorks_20b0_1998_04_07:1.99
	MLWorks_20b0_1998_03_20:1.96
	MLWorks_20m2_1998_02_16:1.89
	MLWorks_20m1_1997_10_23:1.85
	MLWorks_11r1:1.80.1.1.1.2.1
	MLWorks_workspace_97:1.84.2
	MLWorks_dt_wizard:1.84.1
	MLWorks_11c0_1997_09_09:1.80.1.1.1.2
	MLWorks_10r3:1.80.1.1.3
	MLWorks_10r2_551:1.80.1.1.2
	MLWorks_11:1.80.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.80.1.1
	MLWorks_20m0_1997_06_20:1.84
	MLWorks_1_0_r2c2_1997_06_14:1.80.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.80.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.80.1
	MLWorks_BugFix_1997_04_24:1.80
	MLWorks_1_0_r2_Win32_1997_04_11:1.80
	MLWorks_1_0_r2_Unix_1997_04_04:1.80
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.77.3.1.1
	MLWorks_gui_1996_12_18:1.77.4
	MLWorks_1_0_Win32_1996_12_17:1.77.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.77.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.77.1.1
	MLWorks_1_0_Irix_1996_11_28:1.77.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.77.2
	MLWorks_1_0_Unix_1996_11_14:1.77.1
	MLWorks_Open_Beta2_1996_10_11:1.75.1
	MLWorks_License_dev:1.74.2
	MLWorks_1_open_beta_1996_09_13:1.74.1
	MLWorks_Open_Beta_1996_08_22:1.72
	MLWorks_Beta_1996_07_02:1.71
	MLWorks_Beta_1996_06_07:1.67
	MLWorks_Beta_1996_06_06:1.67
	MLWorks_Beta_1996_06_05:1.67
	MLWorks_Beta_1996_06_03:1.66
	MLWorks_Beta_1996_05_31:1.66
	MLWorks_Beta_1996_05_30:1.66;
locks; strict;
comment	@# @;


1.118
date	99.03.18.17.34.14;	author daveb;	state Exp;
branches
	1.118.1.1;
next	1.117;

1.117
date	99.03.08.13.59.13;	author mitchell;	state Exp;
branches;
next	1.116;

1.116
date	99.03.08.11.02.06;	author mitchell;	state Exp;
branches;
next	1.115;

1.115
date	99.02.10.17.28.31;	author mitchell;	state Exp;
branches;
next	1.114;

1.114
date	99.02.09.09.50.00;	author mitchell;	state Exp;
branches;
next	1.113;

1.113
date	98.10.27.15.32.42;	author jont;	state Exp;
branches;
next	1.112;

1.112
date	98.10.21.13.37.57;	author jont;	state Exp;
branches;
next	1.111;

1.111
date	98.10.19.15.24.43;	author jont;	state Exp;
branches;
next	1.110;

1.110
date	98.09.25.15.33.36;	author jont;	state Exp;
branches;
next	1.109;

1.109
date	98.08.20.15.36.46;	author jont;	state Exp;
branches;
next	1.108;

1.108
date	98.07.31.13.56.25;	author jkbrook;	state Exp;
branches;
next	1.107;

1.107
date	98.07.08.10.15.46;	author jont;	state Exp;
branches;
next	1.106;

1.106
date	98.07.03.12.32.18;	author mitchell;	state Exp;
branches;
next	1.105;

1.105
date	98.06.08.12.20.08;	author mitchell;	state Exp;
branches;
next	1.104;

1.104
date	98.05.06.14.36.06;	author jkbrook;	state Exp;
branches;
next	1.103;

1.103
date	98.04.20.12.13.52;	author jont;	state Exp;
branches;
next	1.102;

1.102
date	98.04.20.10.56.07;	author jont;	state Exp;
branches;
next	1.101;

1.101
date	98.04.07.17.17.07;	author jont;	state Exp;
branches;
next	1.100;

1.100
date	98.04.07.14.35.25;	author jont;	state Exp;
branches;
next	1.99;

1.99
date	98.04.03.16.29.52;	author jont;	state Exp;
branches;
next	1.98;

1.98
date	98.04.01.12.20.57;	author jont;	state Exp;
branches;
next	1.97;

1.97
date	98.03.31.12.06.28;	author jont;	state Exp;
branches;
next	1.96;

1.96
date	98.03.20.15.15.56;	author jont;	state Exp;
branches;
next	1.95;

1.95
date	98.03.16.14.04.32;	author johnh;	state Exp;
branches;
next	1.94;

1.94
date	98.03.16.11.02.44;	author johnh;	state Exp;
branches;
next	1.93;

1.93
date	98.02.26.13.59.52;	author johnh;	state Exp;
branches;
next	1.92;

1.92
date	98.02.19.17.11.27;	author jont;	state Exp;
branches;
next	1.91;

1.91
date	98.02.18.17.48.26;	author jont;	state Exp;
branches;
next	1.90;

1.90
date	98.02.10.15.58.51;	author jont;	state Exp;
branches;
next	1.89;

1.89
date	98.01.30.17.03.52;	author johnh;	state Exp;
branches;
next	1.88;

1.88
date	97.10.29.10.19.06;	author johnh;	state Exp;
branches;
next	1.87;

1.87
date	97.10.27.13.23.40;	author johnh;	state Exp;
branches;
next	1.86;

1.86
date	97.10.21.12.03.36;	author jont;	state Exp;
branches;
next	1.85;

1.85
date	97.09.30.09.19.10;	author jkbrook;	state Exp;
branches;
next	1.84;

1.84
date	97.05.23.12.07.39;	author jont;	state Exp;
branches
	1.84.1.1
	1.84.2.1;
next	1.83;

1.83
date	97.05.16.10.46.46;	author stephenb;	state Exp;
branches;
next	1.82;

1.82
date	97.05.13.22.06.16;	author jont;	state Exp;
branches;
next	1.81;

1.81
date	97.05.09.14.36.23;	author jont;	state Exp;
branches;
next	1.80;

1.80
date	97.01.08.17.03.37;	author jont;	state Exp;
branches
	1.80.1.1;
next	1.79;

1.79
date	97.01.06.16.51.01;	author andreww;	state Exp;
branches;
next	1.78;

1.78
date	96.12.18.13.36.29;	author matthew;	state Exp;
branches;
next	1.77;

1.77
date	96.10.31.14.08.47;	author jont;	state Exp;
branches
	1.77.1.1
	1.77.2.1
	1.77.3.1
	1.77.4.1;
next	1.76;

1.76
date	96.10.23.13.26.08;	author jont;	state Exp;
branches;
next	1.75;

1.75
date	96.10.09.14.31.28;	author jont;	state Exp;
branches
	1.75.1.1;
next	1.74;

1.74
date	96.09.04.16.52.28;	author jont;	state Exp;
branches
	1.74.1.1
	1.74.2.1;
next	1.73;

1.73
date	96.09.04.14.42.33;	author jont;	state Exp;
branches;
next	1.72;

1.72
date	96.07.22.17.35.02;	author brianm;	state Exp;
branches;
next	1.71;

1.71
date	96.06.28.17.26.12;	author jont;	state Exp;
branches;
next	1.70;

1.70
date	96.06.28.13.04.25;	author andreww;	state Exp;
branches;
next	1.69;

1.69
date	96.06.27.11.47.43;	author jont;	state Exp;
branches;
next	1.68;

1.68
date	96.06.11.10.19.22;	author jont;	state Exp;
branches;
next	1.67;

1.67
date	96.06.04.10.03.09;	author jont;	state Exp;
branches;
next	1.66;

1.66
date	96.05.21.09.39.39;	author jont;	state Exp;
branches;
next	1.65;

1.65
date	96.05.17.09.42.41;	author stephenb;	state Exp;
branches;
next	1.64;

1.64
date	96.05.17.07.24.26;	author stephenb;	state Exp;
branches;
next	1.63;

1.63
date	96.05.16.17.03.30;	author jont;	state Exp;
branches;
next	1.62;

1.62
date	96.05.16.16.51.29;	author jont;	state Exp;
branches;
next	1.61;

1.61
date	96.05.15.15.29.24;	author jont;	state Exp;
branches;
next	1.60;

1.60
date	96.05.09.11.39.24;	author stephenb;	state Exp;
branches;
next	1.59;

1.59
date	96.05.08.13.42.49;	author stephenb;	state Exp;
branches;
next	1.58;

1.58
date	96.05.08.11.25.04;	author stephenb;	state Exp;
branches;
next	1.57;

1.57
date	96.04.29.17.28.51;	author jont;	state Exp;
branches;
next	1.56;

1.56
date	96.04.29.12.14.44;	author jont;	state Exp;
branches;
next	1.55;

1.55
date	96.04.18.17.12.26;	author jont;	state Exp;
branches;
next	1.54;

1.54
date	96.04.03.12.24.04;	author stephenb;	state Exp;
branches;
next	1.53;

1.53
date	96.03.29.10.41.06;	author stephenb;	state Exp;
branches;
next	1.52;

1.52
date	96.03.25.17.30.39;	author jont;	state Exp;
branches;
next	1.51;

1.51
date	96.03.18.15.32.09;	author daveb;	state Exp;
branches;
next	1.50;

1.50
date	96.03.15.16.40.30;	author jont;	state Exp;
branches;
next	1.49;

1.49
date	96.03.15.12.30.23;	author matthew;	state Exp;
branches;
next	1.48;

1.48
date	96.03.08.17.53.10;	author jont;	state Exp;
branches;
next	1.47;

1.47
date	96.03.08.13.41.29;	author jont;	state Exp;
branches;
next	1.46;

1.46
date	96.03.07.15.05.53;	author jont;	state Exp;
branches;
next	1.45;

1.45
date	96.03.05.15.27.18;	author jont;	state Exp;
branches;
next	1.44;

1.44
date	96.02.23.16.11.29;	author daveb;	state Exp;
branches;
next	1.43;

1.43
date	96.02.21.14.02.49;	author jont;	state Exp;
branches;
next	1.42;

1.42
date	96.02.02.17.34.52;	author jont;	state Exp;
branches;
next	1.41;

1.41
date	96.01.19.15.45.38;	author stephenb;	state Exp;
branches;
next	1.40;

1.40
date	96.01.12.10.45.08;	author daveb;	state Exp;
branches;
next	1.39;

1.39
date	96.01.09.12.17.51;	author matthew;	state Exp;
branches;
next	1.38;

1.38
date	96.01.04.15.20.44;	author matthew;	state Exp;
branches;
next	1.37;

1.37
date	95.12.14.15.18.56;	author jont;	state Exp;
branches;
next	1.36;

1.36
date	95.12.13.15.34.07;	author daveb;	state Exp;
branches;
next	1.35;

1.35
date	95.12.06.13.03.20;	author daveb;	state Exp;
branches;
next	1.34;

1.34
date	95.12.05.14.01.47;	author daveb;	state Exp;
branches;
next	1.33;

1.33
date	95.10.20.16.27.13;	author jont;	state Exp;
branches;
next	1.32;

1.32
date	95.10.06.12.58.49;	author jont;	state Exp;
branches;
next	1.31;

1.31
date	95.09.19.12.15.09;	author matthew;	state Exp;
branches;
next	1.30;

1.30
date	95.08.17.16.08.41;	author io;	state Exp;
branches;
next	1.29;

1.29
date	95.08.14.15.20.03;	author jont;	state Exp;
branches;
next	1.28;

1.28
date	95.08.10.09.37.27;	author matthew;	state Exp;
branches;
next	1.27;

1.27
date	95.07.20.12.02.45;	author jont;	state Exp;
branches;
next	1.26;

1.26
date	95.07.19.16.22.33;	author jont;	state Exp;
branches;
next	1.25;

1.25
date	95.07.18.10.00.22;	author jont;	state Exp;
branches;
next	1.24;

1.24
date	95.06.23.14.36.33;	author jont;	state Exp;
branches;
next	1.23;

1.23
date	95.06.23.14.21.21;	author jont;	state Exp;
branches;
next	1.22;

1.22
date	95.05.31.09.55.32;	author matthew;	state Exp;
branches;
next	1.21;

1.21
date	95.05.03.15.44.23;	author jont;	state Exp;
branches;
next	1.20;

1.20
date	95.04.20.19.45.50;	author daveb;	state Exp;
branches;
next	1.19;

1.19
date	95.03.20.10.59.07;	author matthew;	state Exp;
branches;
next	1.18;

1.18
date	95.03.15.18.13.45;	author jont;	state Exp;
branches;
next	1.17;

1.17
date	95.03.02.14.44.43;	author matthew;	state Exp;
branches;
next	1.16;

1.16
date	95.02.13.13.20.19;	author jont;	state Exp;
branches;
next	1.15;

1.15
date	95.02.10.13.55.11;	author jont;	state Exp;
branches;
next	1.14;

1.14
date	95.02.10.12.53.46;	author jont;	state Exp;
branches;
next	1.13;

1.13
date	95.02.08.16.51.05;	author jont;	state Exp;
branches;
next	1.12;

1.12
date	95.02.08.14.59.08;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	95.02.06.15.24.42;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	95.02.06.14.23.03;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	95.02.03.16.29.15;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	95.02.02.18.42.25;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	95.02.02.17.57.18;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	95.02.02.17.53.30;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	95.02.02.17.30.56;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	95.02.02.17.26.50;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	95.02.02.17.05.37;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	95.02.02.16.35.50;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	95.02.02.16.00.45;	author jont;	state Exp;
branches;
next	;

1.74.1.1
date	96.09.13.11.27.06;	author hope;	state Exp;
branches;
next	;

1.74.2.1
date	96.10.07.16.17.39;	author hope;	state Exp;
branches;
next	;

1.75.1.1
date	96.10.17.11.37.32;	author hope;	state Exp;
branches;
next	;

1.77.1.1
date	96.11.14.13.05.25;	author hope;	state Exp;
branches
	1.77.1.1.1.1;
next	;

1.77.1.1.1.1
date	96.11.28.15.15.00;	author hope;	state Exp;
branches;
next	;

1.77.2.1
date	96.11.22.18.22.52;	author hope;	state Exp;
branches;
next	;

1.77.3.1
date	96.12.17.18.00.56;	author hope;	state Exp;
branches
	1.77.3.1.1.1;
next	;

1.77.3.1.1.1
date	97.02.24.11.52.38;	author hope;	state Exp;
branches;
next	;

1.77.4.1
date	96.12.18.09.56.18;	author hope;	state Exp;
branches;
next	;

1.80.1.1
date	97.05.12.10.51.00;	author hope;	state Exp;
branches
	1.80.1.1.1.1
	1.80.1.1.2.1
	1.80.1.1.3.1;
next	;

1.80.1.1.1.1
date	97.07.28.18.33.13;	author daveb;	state Exp;
branches;
next	1.80.1.1.1.2;

1.80.1.1.1.2
date	97.08.06.15.15.38;	author daveb;	state Exp;
branches
	1.80.1.1.1.2.1.1;
next	;

1.80.1.1.1.2.1.1
date	97.10.07.11.59.12;	author jkbrook;	state Exp;
branches;
next	;

1.80.1.1.2.1
date	97.09.08.17.26.19;	author daveb;	state Exp;
branches;
next	;

1.80.1.1.3.1
date	97.09.09.14.23.07;	author daveb;	state Exp;
branches;
next	;

1.84.1.1
date	97.09.10.19.42.07;	author brucem;	state Exp;
branches;
next	;

1.84.2.1
date	97.09.11.21.09.37;	author daveb;	state Exp;
branches;
next	1.84.2.2;

1.84.2.2
date	97.09.12.14.52.41;	author johnh;	state Exp;
branches;
next	1.84.2.3;

1.84.2.3
date	97.11.25.15.01.50;	author daveb;	state Exp;
branches;
next	1.84.2.4;

1.84.2.4
date	97.11.26.13.29.17;	author daveb;	state Exp;
branches;
next	1.84.2.5;

1.84.2.5
date	97.11.26.17.32.16;	author daveb;	state Exp;
branches;
next	1.84.2.6;

1.84.2.6
date	97.12.23.17.01.18;	author daveb;	state Exp;
branches;
next	1.84.2.7;

1.84.2.7
date	98.01.19.12.26.53;	author daveb;	state Exp;
branches;
next	;

1.118.1.1
date	99.04.01.18.08.24;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
No reason given
@


1.118
log
@[Bug #190523]
Moved basis/*flags to basis/*bit_flags.
Added the generated statuses file.
Set the pervasive directory explicitly when loading the basis.
@
text
@# ==== BUILD MLWORKS IMAGES ====
#
# Instructions
# ------------
# This makefile builds images in the usual way, but has extra targets
# called *-files for producing files containing lists of .mo's for use
# with the runtime system `-from' option.  This makes debugging using
# adb possible since adb will not accept the massive command lines
# generated for the normal rules.
#
# To build images from a source tree other than `..' use:
#
#   make SRC='source directory name' target...
#
# To build the file list for the parser relative to /usr/sml, for
# example, use:
#
#   make SRC=/usr/sml parser-files
#
# note --- owing to repeated use of MAKE_COMMAND in rules, do not use
# make -f <mymakefile> --- this option will not be passed to the recursive
# calls, and therefore the make will fail.
#
# Revision Log
# ------------
#
# $Log: I386:NT:Makefile,v $
# Revision 1.117  1999/03/08  13:59:13  mitchell
# [Bug #30286]
# Build Windows structure into guib image
#
# Revision 1.116  1999/03/08  11:02:06  mitchell
# [Bug #30286]
# Export Windows structure
#
# Revision 1.115  1999/02/10  17:28:31  mitchell
# [Bug #190507]
# Add new dependency files to makefile.
#
# Revision 1.114  1999/02/09  09:50:00  mitchell
# [Bug #190505]
# Support for precompilation of subprojects
#
# Revision 1.113  1998/10/27  15:32:42  jont
# [Bug #70222]
# Reinstate Windows structure in guib.img
#
# Revision 1.112  1998/10/21  13:37:57  jont
# [Bug #70196]
# Add link support stuff
#
# Revision 1.111  1998/10/19  15:24:43  jont
# [Bug #70203]
# Modify for new argument passing
#
# Revision 1.110  1998/09/25  15:33:36  jont
# [Bug #30108]
# Add rules for making DLLs
#
# Revision 1.109  1998/08/20  15:36:46  jont
# [Bug #70133]
# Add COFF outputter
#
# Revision 1.108  1998/07/31  13:56:25  jkbrook
# [Bug #30454]
# Remove Windows structure from distribution until it is more robust
# and the Unix structure is also implemented
#
# Revision 1.107  1998/07/08  10:15:46  jont
# [Bug #20123]
# Remove basis/{,__}list from list of gui files
#
# Revision 1.106  1998/07/03  12:32:18  mitchell
# [Bug #30434]
# Change load order to allow _win_ntgetenv to use Windows structure
#
# Revision 1.105  1998/06/08  12:20:08  mitchell
# [Bug #30418]
# Add sectioned_file etc
#
# Revision 1.104  1998/05/06  14:36:06  jkbrook
# [Bug #30354]
# Temporarily restore old FI to distribution
#
# Revision 1.103  1998/04/20  12:13:52  jont
# [Bug #70101]
# Move getenv and messages into compiler and out of basis and parser
#
# Revision 1.102  1998/04/20  10:56:07  jont
# [Bug #70104]
# Fix the script loading flags etc
#
# Revision 1.101  1998/04/07  17:17:07  jont
# [Bug #70086]
# Ensure Flags loaded at top level as well
#
# Revision 1.100  1998/04/07  14:35:25  jont
# [Bug #70086]
# Adding in windows and __windows to basis, guib.img and ttyb.img
#
# Revision 1.99  1998/04/03  16:29:52  jont
# [Bug #70088]
# Get rid of cat
#
# Revision 1.98  1998/04/01  12:20:57  jont
# [Bug #70086]
# *windows has moved to *windows_gui
#
# Revision 1.97  1998/03/31  12:06:28  jont
# [Bug #70077]
# Removing path, _unixpath, _win_ntpath and __path
# These are replaced by OS.Path
#
# Revision 1.96  1998/03/20  15:15:56  jont
# [Bug #30090]
# cat.img now depends on basis.img
#
# Revision 1.95  1998/03/16  14:04:32  johnh
# [Bug #70081]
# Look for cat.mo in ml_utils/debug now.
#
# Revision 1.94  1998/03/16  11:02:44  johnh
# [Bug #30365]
# Projects now use subprojects.
#
# Revision 1.93  1998/02/26  13:59:52  johnh
# [Bug #30362]
# Setting mode means object files live in a different place.
#
# Revision 1.92  1998/02/19  17:11:27  jont
# [Bug #30071]
# Don't set maximumStrDepth when building guib.img
#
# Revision 1.91  1998/02/18  17:48:26  jont
# [Bug #70070]
# Add terminal.mo and __terminal.mo to COMPILER
#
# Revision 1.90  1998/02/10  15:58:51  jont
# [Bug #70065]
# Load messages and __messages before getenv
#
# Revision 1.89  1998/01/30  17:03:52  johnh
# [Bug #30071]
# Merge in Project Workspace changes.
#
# Revision 1.88  1997/10/29  10:19:06  johnh
# [Bug #30059]
# __control_names.sml (generated) now lives in rts/gen
#
# Revision 1.87  1997/10/27  13:23:40  johnh
# [Bug #30059]
# Implement interface to Win32 resource dialogs.
#
# Revision 1.86  1997/10/21  12:03:36  jont
# [Bug #30089]
# Removing OldOS
#
# Revision 1.85  1997/09/30  09:19:10  jkbrook
# [Bug #30247]
# TTY listener gets confused by error messages during distribution
# builds -- implementing workaround
#
# Revision 1.84.2.7  1998/01/19  12:26:53  daveb
# [Bug #30071]
# Set ARCH_OS to I386/NT, if not already set.  Use this in ttyb.img & guib.img.
# Added missing backslashes to path of cat.mlp.
#
# Revision 1.84.2.5  1997/11/26  17:32:16  daveb
# [Bug #30071]
# Removed basics/*module.
#
# Revision 1.84.2.4  1997/11/26  13:29:17  daveb
# [Bug #30071]
# Source and object paths are redundant.  Need to use Shell.Project to build
# guib.img.
#
# Revision 1.84.2.3  1997/11/25  15:01:50  daveb
# [Bug #30326]
# Renamed utils/*timer to utils/*mlworks_timer and main/*io to main/*mlworks_io.
#
# Revision 1.84.2.2  1997/09/12  14:52:41  johnh
# [Bug #30071]
# Redesign Compilation Manager -> Project Workspace.
# New files: main/*proj_file.sml
#
# Revision 1.84  1997/05/23  12:07:39  jont
# [Bug #30090]
# Replace MLWorks.IO with TextIO where applicable
#
# Revision 1.83  1997/05/16  10:46:46  stephenb
# [Bug #30121]
# Move to new FI: remove any reference to foreign.img
#
# Revision 1.82  1997/05/13  22:06:16  jont
# Further modifications after change to encapsulator to use basis io
# Part of bug 30091
#
# Revision 1.81  1997/05/09  14:36:23  jont
# [Bug #30091]
# Make various basis code available to encapsulator
#
# Revision 1.80  1997/01/08  17:03:37  jont
# [Bug #1816]
# [Bug #1816]
# Improvements to use new (beta-17) GNU tools
#
# Revision 1.79  1997/01/06  16:51:01  andreww
# [Bug #1885]
# removing two spaces at end of line 193.
#
# Revision 1.78  1996/12/18  13:36:29  matthew
# lambda optimizer changes
#
# Revision 1.77  1996/10/31  14:08:47  jont
# [Bug #1709]
# Fix problems building cat.mo from cat.sml following registry changes
#
# Revision 1.76  1996/10/23  13:26:08  jont
# [Bug #1696]
# Add -batch to RUNTIMEOPTS
#
# Revision 1.75  1996/10/09  14:31:28  jont
# [Bug #1642]
# Modify make mechanism for guib.img to load object files instead of compiling source
#
# Revision 1.74  1996/09/04  16:52:28  jont
# Remove tty.img from list of files to be made for all
#
# Revision 1.73  1996/09/04  14:42:33  jont
# Extend list of targets for all to include all distributed targets
#
# Revision 1.72  1996/07/22  17:35:02  brianm
# Adding existence check for $(CATMO) before rm $(CATMO) ...
#
# Revision 1.71  1996/06/28  17:26:12  jont
# Ensure CATMO rebuilt if a new batch compiler produced
#
# Revision 1.70  1996/06/28  13:04:25  andreww
# Ensuring ARCH_OS values are propagated to recursive calls of make
# and that they are used to find correct object paths for NTGUIMO.
#
# Revision 1.69  1996/06/27  11:47:43  jont
# Add missing dependency of CATMO on batch.img
#
# Revision 1.68  1996/06/11  10:19:22  jont
# Make guib.img from the right things (basis, not foreign)
#
# Revision 1.67  1996/06/04  10:03:09  jont
# Remove BASISSYS, no longer necessary
#
# Revision 1.66  1996/05/21  09:39:39  jont
# Moving preferences out of batch system
#
# Revision 1.65  1996/05/17  09:42:41  stephenb
# Change filesys -> file_sys in accordance with latest file naming conventions.
#
# Revision 1.64  1996/05/17  07:24:26  stephenb
# Remove redundant references to files.
# PARSERSYS basis/path is now loaded in images/GNUmake.
#
# Revision 1.63  1996/05/16  17:03:30  jont
# ** No reason given. **
#
# Revision 1.62  1996/05/16  16:51:29  jont
# Set SYSTEM explicitly here
#
# Revision 1.61  1996/05/15  15:29:24  jont
# Add rule for guib.img, a gui with the revised basis loaded
# Also a rule for ttyb.img
#
# Revision 1.60  1996/05/09  11:39:24  stephenb
# Remove any reference to FILESYS since it is subsumed by PARSERSYS
# now that filesys stuff is needed for the parser.
#
# Revision 1.59  1996/05/08  13:42:49  stephenb
# Rename filesys to be os_filesys in line with latest file naming conventions.
#
# Revision 1.58  1996/05/08  11:25:04  stephenb
# Change any reference to basis/lists -> basis/list now that the
# file has been changed to have the same name as the signature.
#
# Revision 1.57  1996/04/29  17:28:51  jont
# Add rules for basis-files
#
# Revision 1.56  1996/04/29  12:14:44  jont
# Add extra parameter to Shell.saveImage to indicate not to use executable format
#
# Revision 1.55  1996/04/18  17:12:26  jont
# initbasis becomes basis
#
# Revision 1.54  1996/04/03  12:24:04  stephenb
# Patch up NTGUISRC wrt to change in definition of GUI
#
#
#

all: pervasive.img lexer.img batch.img gui.img guib.img basis.img foreign.img windows.img

everything: all tty.img ttyb.img

PLATFORM_DISTRIBUTED_IMAGES = windows.img


RUNTIME =	$(SRC)/rts/runtime-g
RUNTIMEOPTS =	-verbose -d 1 -delivery	-batch
MODE = 		Release

LEXERSYS =	system/win32 \
		system/_win32 \
		system/__win32 \
		system/win32os \
		system/_win32os \
		system/__win32os

INTERSYS = 	main/stack_interface \
		machine/_stack_interface \
		machine/__stack_interface \
		editor/editor \
		system/_editor \
		system/__editor

COMPILER1 =	utils/getenv \
		utils/messages \
		utils/__messages \
		system/__sys_word \
		system/_win_ntgetenv \
		system/__getenv \
		machine/i386types \
		machine/_i386types \
		machine/__i386types \
		main/machspec \
		utils/bignum \
		utils/_bignum \
		utils/__bignum_inf \
		machine/_i386spec \
		machine/__machspec \
		utils/_bignumsize \
		utils/__bignum \
		basics/scons \
		basics/_scons \
		basics/__scons \
		debugger/debugger_types \
		debugger/_debugger_types \
		debugger/__debugger_types \
		lambda/lambdaprint \
		lambda/_lambdaprint \
		lambda/__lambdaprint \
		lambda/environprint \
		lambda/_environprint \
		lambda/__environprint \
		match/type_utils \
		match/_type_utils \
		match/__type_utils \
		match/match \
		match/_match \
		match/__match \
		lambda/lambda \
		lambda/lambdaoptimiser \
		typechecker/typerep_utils \
		typechecker/_typerep_utils \
		typechecker/__typerep_utils \
		rts/gen/implicit \
		rts/gen/__implicit \
		utils/inthashtable \
		utils/_inthashtable \
		utils/__inthashtable

BASISSYS =	system/win32os \
		system/_win32os \
		system/__win32os 

BASISSYS2 =	system/__sys_word \
                basis/bit_flags \
                basis/__bit_flags \
		rts/gen/I386/NT/keys \
		rts/gen/I386/NT/statuses \
		system/windows \
		system/__windows


COMPILER = $(COMPILER1) main/mlworks_io \
		main/_mlworks_io \
		main/__mlworks_io \
		lambda/_lambda \
		lambda/simpleutils \
		lambda/_simpleutils \
		lambda/__simpleutils \
		lambda/transsimple \
		lambda/_transsimple \
		lambda/__transsimple \
		lambda/lambdaflow \
		lambda/_lambdaflow \
		lambda/__lambdaflow \
		lambda/_simplelambda \
		lambda/__lambdaoptimiser \
		lambda/__lambda \
		utils/monoset \
		utils/intset \
		utils/_intsetlist \
		utils/mutablemonoset \
		mir/virtualregister \
		utils/mutableintset \
		mir/_virtualregister \
		mir/mirtypes \
		mir/_mirtypes \
		utils/_smallintset \
		mir/__mirtypes \
		main/machperv \
		machine/_i386perv \
		machine/__machperv \
		rts/gen/tags \
		rts/gen/__tags \
		debugger/debugger_utilities \
		debugger/_debugger_utilities \
		debugger/__debugger_utilities \
		lambda/auglambda \
		lambda/_auglambda \
		lambda/__auglambda \
		main/library \
		main/_library \
		main/__library \
		mir/mirregisters \
		mir/_mirregisters \
		mir/__mirregisters \
		mir/mirprint \
		mir/_mirprint \
		mir/__mirprint \
		mir/mir_env \
		mir/_mir_env \
		mir/__mir_env \
		mir/mir_utils \
		mir/_mir_utils \
		mir/__mir_utils \
		mir/mirtables \
		mir/_mirtables \
		mir/__mirtables \
		mir/mir_cg \
		mir/_mir_cg \
		mir/__mir_cg \
		mir/mirprocedure \
		mir/registerpack \
		mir/_mirprocedure \
		mir/_registerpack \
		mir/__registerpack \
		mir/__mirprocedure \
		mir/registerallocator \
		mir/mirvariable \
		mir/_mirvariable \
		mir/registercolourer \
		mir/_registercolourer \
		mir/_registerallocator \
		utils/__smallintset \
		mir/__gccolourer \
		mir/__nongccolourer \
		mir/__fpcolourer \
		mir/__registerallocator \
		mir/__mirvariable \
		mir/stackallocator \
		mir/_stackallocator \
		mir/__stackallocator \
		mir/mirexpr \
		mir/_mirexpr \
		mir/__mirexpr \
		mir/miroptimiser \
		mir/_miroptimiser \
		mir/__miroptimiser \
		main/reals \
		main/_reals \
		main/__reals \
		main/code_module \
		main/__code_module \
		machine/i386_opcodes \
		machine/_i386_opcodes \
		machine/__i386_opcodes \
		machine/i386_assembly \
		machine/_i386_assembly \
		machine/__i386_assembly \
		machine/i386_schedule \
		machine/_i386_schedule \
		machine/__i386_schedule \
		main/mach_cg \
		machine/_i386_cg \
		machine/__mach_cg \
		main/machprint \
		machine/_i386print \
		machine/__machprint \
		rts/gen/__objectfile \
		rts/gen/objectfile \
		lambda/lambdamodule \
		lambda/_lambdamodule \
		lambda/__lambdamodule \
		main/enc_sub \
		main/_enc_sub \
		main/__enc_sub \
		basis/byte \
		basis/__byte \
		main/encapsulate \
		main/_encapsulate \
		main/__encapsulate \
		main/compiler \
		main/_compiler \
		main/__compiler \
		make/depend \
		make/_depend \
		make/__depend \
		utils/terminal \
		utils/__terminal \
		main/sectioned_file \
		main/_sectioned_file \
		main/__sectioned_file \
		main/proj_file \
		main/_proj_file \
		main/__proj_file \
		main/file_time \
		system/__file_time \
		main/link_support \
		system/_win_nt_link_support \
		system/__link_support \
		dependency/module_name \
		dependency/_module_name \
		dependency/__module_name \
		dependency/module_dec \
		dependency/_module_dec \
		dependency/__module_dec \
		dependency/import_export \
		dependency/_import_export \
		dependency/__import_export \
		dependency/convert_ast \
		dependency/_convert_ast \
		dependency/__convert_ast \
		dependency/module_dec_io \
		dependency/_module_dec_io \
		dependency/__module_dec_io \
		dependency/ordered_set \
		dependency/__ordered_set \
		dependency/group_dag \
		dependency/_group_dag \
		main/project \
		main/_project \
		main/__project \
		main/object_output \
		machine/_i386_object_output \
		machine/__object_output \
		main/toplevel \
		main/_toplevel \
		main/__toplevel \
		main/user_options \
		main/_user_options \
		main/__user_options

WINSYS =	winsys/windows_gui \
		winsys/_windows_gui \
		winsys/__windows_gui \
		winsys/labelstrings \
		winsys/__labelstrings \
		utils/lisp \
		utils/_lisp \
		utils/__lisp \
		winsys/capitypes \
		winsys/_capitypes \
		winsys/__capitypes \
		winsys/control_names \
		rts/gen/__control_names \
		gui/menus \
		winsys/_menus \
		winsys/__menus \
		gui/capi \
		winsys/_capi \
		winsys/__capi

SYSTEM = system

# ARCH_OS might be already set by the Win95 makefile, which includes
# this one.
ifeq (,$(ARCH_OS))
  ARCH_OS = I386/NT
endif

include ../../GNUmake

NTGUISRC = 	$(WINSYS) $(GUI)
NTGUIMO =	$(addsuffix .mo,$(addprefix $(OBJ)/$(ARCH_OS)/$(MODE)/, $(notdir $(NTGUISRC))))


shell-files: force
	echo $(COMPILERMO) $(SHELLMO) > $@@

tty2-files: $(INTERMO) $(TTYMO)
	echo $(INTERMO) $(TTYMO) > $@@

gui2-files: $(INTERMO) $(NTGUIMO)
	echo $(INTERMO) $(NTGUIMO) > $@@

shell.img: typechecker.img $(COMPILERMO) $(SHELLMO)
	echo make: $@@
	$(RUNTIME) -MLWpass MLWargs $(RUNTIMEOPTS) -load typechecker.img -save $@@ $(COMPILERMO) $(SHELLMO) MLWargs -pervasive-dir ${SRC}/pervasive

TTY_LOADER = 'Shell.saveImage("tty.img", false);'

tty.img: shell.img $(INTERMO) $(TTYMO)
	echo make: $@@ from shell.img
	echo $(TTY_LOADER) |    \
	$(RUNTIME) -MLWpass MLWargs $(RUNTIMEOPTS) -load shell.img $(INTERMO) $(TTYMO) MLWargs

GUI_LOADER = 'Shell.saveImage("gui.img", false);'
GUI_DLL_LOADER = 'Shell.saveImage("gui-dll.img", false);'

gui.img: shell.img $(INTERMO) $(NTGUIMO)
	echo make: $@@ from shell.img
	echo $(GUI_LOADER) |      \
	$(RUNTIME) -MLWpass MLWargs $(RUNTIMEOPTS) -load shell.img $(INTERMO) $(NTGUIMO) MLWargs

# note --- in the following rule, if using object-path, the gui2-files
# file can be fairly big, the construction of which may cause the make file
# to crash.  In this instance, the procedure is to make the gui2-files
# manually (do a make -n ARCH_OS=<whatever, e.g. I386/NT/> gui2-files)
# and then cut'n'paste the appropriate files into another file called
# "gui2-files", and edit it so that each .mo file appears on a separate line.
# Then remove the gui2-files dependency from below, and carry on.

GUIB_LOADER = 'Shell.Path.setPervasive "$(SRC)/pervasive"; \
	       Shell.Project.openProject "$(SRC)/basis.mlp"; \
               Shell.Project.setConfiguration "$(ARCH_OS)"; \
               Shell.Project.setTargets ["require_all.sml", \
                                         "platform_specific_exports.sml"]; \
               Shell.Project.loadAll () ; \
               Shell.saveImage("guib.img", false);'

guib.img: shell.img $(INTERMO) $(NTGUIMO) $(BASIS_AND_LOADERMO)
	echo make: $@@ from shell.img
	echo $(GUIB_LOADER) |      \
	$(RUNTIME) -MLWpass MLWargs $(RUNTIMEOPTS) -load shell.img $(INTERMO) $(NTGUIMO) MLWargs

TTYB_LOADER = 'Shell.Path.setPervasive "$(SRC)/pervasive"; \
	       Shell.Project.openProject "$(SRC)/basis.mlp"; \
               Shell.Project.setConfiguration "$(ARCH_OS)"; \
               Shell.Project.setTargets ["require_all.sml", \
                                         "platform_specific_exports.sml"]; \
               Shell.Project.loadAll () ; \
               Shell.saveImage("ttyb.img", false);'

ttyb.img: shell.img $(INTERMO) $(TTYMO) $(BASIS_AND_LOADERMO)
	echo make: $@@ from shell.img
	echo $(TTYB_LOADER) |      \
	$(RUNTIME) -MLWpass MLWargs $(RUNTIMEOPTS) -load shell.img $(INTERMO) $(TTYMO) MLWargs

PERVASIVE_TEXT_S=${PERVASIVEMO:.mo=_text.S}
PERVASIVE_DATA_S=${PERVASIVEMO:.mo=_data.S}
LEXER_TEXT_S=${LEXERMO:.mo=_text.S}
LEXER_DATA_S=${LEXERMO:.mo=_data.S}
PARSER_TEXT_S=${PARSERMO:.mo=_text.S}
PARSER_DATA_S=${PARSERMO:.mo=_data.S}
TYPER_TEXT_S=${TYPERMO:.mo=_text.S}
TYPER_DATA_S=${TYPERMO:.mo=_data.S}
COMPILER_TEXT_S=${COMPILERMO:.mo=_text.S}
COMPILER_DATA_S=${COMPILERMO:.mo=_data.S}
BATCH_TEXT_S=${BATCHMO:.mo=_text.S}
BATCH_DATA_S=${BATCHMO:.mo=_data.S}
SHELL_TEXT_S=${SHELLMO:.mo=_text.S}
SHELL_DATA_S=${SHELLMO:.mo=_data.S}
INTER_TEXT_S=${INTERMO:.mo=_text.S}
INTER_DATA_S=${INTERMO:.mo=_data.S}
NTGUI_TEXT_S=${NTGUIMO:.mo=_text.S}
NTGUI_DATA_S=${NTGUIMO:.mo=_data.S}

pervasive.lib pervasive.dll:	$(PERVASIVE_TEXT_S) $(PERVASIVE_DATA_S) extend
	echo make: $@@
	sh ./make-dll pervasive ${SRC}/rts/bin/$(ARCH_OS)/libmlw.lib

lexer.lib lexer.dll:	 ${LEXER_TEXT_s} pervasive.lib extend
	echo make: $@@
	sh ./make-dll lexer ${SRC}/rts/bin/$(ARCH_OS)/libmlw.lib pervasive.lib

typer.lib typer.dll:	  $(PARSER_TEXT_S) $(TYPER_TEXT_S) pervasive.lib lexer.lib extend
	echo make: $@@
	sh ./make-dll typer ${SRC}/rts/bin/$(ARCH_OS)/libmlw.lib pervasive.lib lexer.lib

batch.lib batch.dll:	  $(COMPILER_TEXT_S) $(BATCH_TEXT_S) pervasive.lib lexer.lib typer.lib extend
	echo make: $@@
	sh ./make-dll batch ${SRC}/rts/bin/$(ARCH_OS)/libmlw.lib pervasive.lib lexer.lib typer.lib

shell.lib shell.dll:	  $(COMPILER_TEXT_S) $(SHELL_TEXT_S) pervasive.lib lexer.lib typer.lib extend
	echo make: $@@
	sh ./make-dll shell ${SRC}/rts/bin/$(ARCH_OS)/libmlw.lib pervasive.lib lexer.lib typer.lib

gui2.lib gui2.dll:	   $(INTER_TEXT_S) $(NTGUI_TEXT_S) pervasive.lib lexer.lib typer.lib shell.lib extend
	echo make: $@@
	sh ./make-dll gui2 ${SRC}/rts/bin/$(ARCH_OS)/libmlw.lib pervasive.lib lexer.lib typer.lib shell.lib

extend:	extend.c
	gcc extend.c -o $@@

xinterpreter:	gui2.lib  shell.lib  typer.lib  lexer.lib  pervasive.lib ${OBJ}/${ARCH_OS}/${MODE}/xinterpreter_text.S ${OBJ}/${ARCH_OS}/${MODE}/xinterpreter_data.S
	echo make: $@@
	cp -p ${OBJ}/${ARCH_OS}/${MODE}/xinterpreter_{text,data}.S .
	sh ./make-exe xinterpreter gui2.lib shell.lib typer.lib lexer.lib pervasive.lib ${SRC}/rts/bin/$(ARCH_OS)/libmlw.lib

__batch:	batch.lib typer.lib lexer.lib pervasive.lib ${OBJ}/${ARCH_OS}/${MODE}/__batch_text.S ${OBJ}/${ARCH_OS}/${MODE}/__batch_data.S
	echo make: $@@
	cp -p ${OBJ}/${ARCH_OS}/${MODE}/__batch_{text,data}.S .
	sh ./make-exe __batch batch.lib typer.lib lexer.lib pervasive.lib ${SRC}/rts/bin/$(ARCH_OS)/libmlw.lib

gui-dll.img:	xinterpreter gui2.dll shell.dll typer.dll lexer.dll pervasive.dll
	echo make: $@@
	PATH=.:${SRC}/rts/bin/${ARCH_OS}:${PATH} && echo $(GUI_DLL_LOADER) | ./xinterpreter -tty -pervasive-dir ${SRC}/pervasive -source-path ${SRC} -parser-tables ${SRC}/parser/ml-tables/

GUIB_DLL_LOADER=	\
	'Shell.Project.openProject "${SRC}/basis.mlp";	\
	Shell.Project.setConfiguration "${ARCH_OS}";	\
        Shell.Project.setTargets ["require_all.sml", \
                                  "platform_specific_exports.sml"]; \
	Shell.Project.loadAll () ;			\
	Shell.saveImage("guib-dll.img", false);'

guib-dll.img:	xinterpreter gui2.dll shell.dll typer.dll lexer.dll pervasive.dll  $(BASIS_AND_LOADERMO)
	echo make: $@@
	PATH=.:${SRC}/rts/bin/${ARCH_OS}:${PATH} && echo $(GUIB_DLL_LOADER) | ./xinterpreter -tty -pervasive-dir ${SRC}/pervasive -source-path ${SRC} -parser-tables ${SRC}/parser/ml-tables/
@


1.118.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a27 6
# Revision 1.118  1999/03/18  17:34:14  daveb
# [Bug #190523]
# Moved basis/*flags to basis/*bit_flags.
# Added the generated statuses file.
# Set the pervasive directory explicitly when loading the basis.
#
@


1.117
log
@[Bug #30286]
Build Windows structure into guib image
@
text
@d28 4
d373 2
a374 2
                basis/flags \
                basis/__flags \
d376 1
d378 2
a379 1
		system/__windows 
a496 4
		basis/__bin_stream_io \
		basis/bin_io \
		basis/_bin_io \
		basis/__bin_io \
d621 2
a622 1
GUIB_LOADER = 'Shell.Project.openProject "$(SRC)/basis.mlp"; \
d634 2
a635 1
TTYB_LOADER = 'Shell.Project.openProject "$(SRC)/basis.mlp"; \
@


1.116
log
@[Bug #30286]
Export Windows structure
@
text
@d28 4
a321 5
		rts/gen/I386/NT/keys \
		basis/flags \
		system/windows \
		basis/__flags \
		system/__windows \
d368 6
a373 1
BASISSYS2 =	system/__sys_word 
a623 4
               Shell.Project.load "flags"; \
               Shell.Project.load "__flags"; \
               Shell.Project.load "windows"; \
               Shell.Project.load "__windows"; \
a635 4
               Shell.Project.load "flags"; \
               Shell.Project.load "__flags"; \
               Shell.Project.load "windows"; \
               Shell.Project.load "__windows"; \
a708 4
	Shell.Project.load "windows";			\
	Shell.Project.load "__windows";			\
	Shell.Project.load "flags";			\
	Shell.Project.load "__flags";			\
@


1.115
log
@[Bug #190507]
Add new dependency files to makefile.
@
text
@d28 4
d617 2
a618 1
               Shell.Project.setTargets ["require_all.sml"]; \
d633 2
a634 1
               Shell.Project.setTargets ["require_all.sml"]; \
d710 2
a711 1
	Shell.Project.setTargets ["require_all.sml"];	\
@


1.114
log
@[Bug #190505]
Support for precompilation of subprojects
@
text
@d28 4
d509 19
@


1.113
log
@[Bug #70222]
Reinstate Windows structure in guib.img
@
text
@d28 4
d361 1
a361 4
BASISSYS2 =	system/__sys_word \
		rts/gen/I386/NT/keys \
		basis/flags \
		basis/__flags 
a513 2
		main/version \
		main/__version \
d518 1
a518 3
WINSYS =	basis/general \
		basis/__general \
		winsys/windows_gui \
@


1.112
log
@[Bug #70196]
Add link support stuff
@
text
@d28 4
d597 2
d612 2
@


1.111
log
@[Bug #70203]
Modify for new argument passing
@
text
@d28 4
d497 3
@


1.110
log
@[Bug #30108]
Add rules for making DLLs
@
text
@d28 4
d555 1
a555 1
	$(RUNTIME) $(RUNTIMEOPTS) -load typechecker.img -save $@@ -pass wombats -pervasive-dir ${SRC}/pervasive wombats $(COMPILERMO) $(SHELLMO)
d562 1
a562 1
	$(RUNTIME) $(RUNTIMEOPTS) -load shell.img $(INTERMO) $(TTYMO)
d570 1
a570 1
	$(RUNTIME) $(RUNTIMEOPTS) -load shell.img $(INTERMO) $(NTGUIMO)
d591 1
a591 1
	$(RUNTIME) $(RUNTIMEOPTS) -load shell.img $(INTERMO) $(NTGUIMO)
d604 1
a604 1
	$(RUNTIME) $(RUNTIMEOPTS) -load shell.img $(INTERMO) $(TTYMO)
d664 1
a664 1
	PATH=.:${SRC}/rts/bin/${ARCH_OS}:${PATH} && echo $(GUI_DLL_LOADER) | ./xinterpreter -pass a -tty -pervasive-dir ${SRC}/pervasive -source-path ${SRC} -parser-tables ${SRC}/parser/ml-tables/ a
d679 1
a679 1
	PATH=.:${SRC}/rts/bin/${ARCH_OS}:${PATH} && echo $(GUIB_DLL_LOADER) | ./xinterpreter -pass a -tty -pervasive-dir ${SRC}/pervasive -source-path ${SRC} -parser-tables ${SRC}/parser/ml-tables/ a
@


1.109
log
@[Bug #70133]
Add COFF outputter
@
text
@d28 4
a505 2
		basis/word \
		basis/__word32 \
d551 1
a551 1
	$(RUNTIME) $(RUNTIMEOPTS) -load typechecker.img -save $@@ -pass wombats -pervasive-dir ../../../pervasive wombats $(COMPILERMO) $(SHELLMO)
d561 1
d601 75
@


1.108
log
@[Bug #30454]
Remove Windows structure from distribution until it is more robust
and the Unix structure is also implemented
@
text
@d28 5
d488 3
@


1.107
log
@[Bug #20123]
Remove basis/{,__}list from list of gui files
@
text
@d28 4
d339 1
a339 3
		system/windows \
		basis/__flags \
		system/__windows
a568 2
               Shell.Project.load "windows"; \
               Shell.Project.load "__windows"; \
d582 2
a583 4
               Shell.Project.load "basis.flags"; \
               Shell.Project.load "basis.__flags"; \
               Shell.Project.load "win_nt.windows"; \
               Shell.Project.load "win_nt.__windows"; \
@


1.106
log
@[Bug #30434]
Change load order to allow _win_ntgetenv to use Windows structure
@
text
@d28 4
a493 2
		basis/list \
		basis/__list \
@


1.105
log
@[Bug #30418]
Add sectioned_file etc
@
text
@d28 4
d276 6
a471 6
		system/__sys_word \
		rts/gen/I386/NT/keys \
		basis/flags \
		system/windows \
		basis/__flags \
		system/__windows \
@


1.104
log
@[Bug #30354]
Temporarily restore old FI to distribution
@
text
@d28 4
d456 3
@


1.103
log
@[Bug #70101]
Move getenv and messages into compiler and out of basis and parser
@
text
@d28 4
d240 1
a240 1
all: pervasive.img lexer.img batch.img gui.img guib.img basis.img windows.img
@


1.102
log
@[Bug #70104]
Fix the script loading flags etc
@
text
@d28 4
a253 6
PARSERSYS =	utils/getenv \
		utils/messages \
		utils/__messages \
		system/_win_ntgetenv \
		system/__getenv

d261 6
a266 1
COMPILER1 =	machine/i386types \
@


1.101
log
@[Bug #70086]
Ensure Flags loaded at top level as well
@
text
@d28 4
d547 4
a550 4
               Shell.Project.load "win_nt.windows"; \
               Shell.Project.load "win_nt.__windows"; \
               Shell.Project.load "basis.flags"; \
               Shell.Project.load "basis.__flags"; \
@


1.100
log
@[Bug #70086]
Adding in windows and __windows to basis, guib.img and ttyb.img
@
text
@d28 4
d545 2
d558 2
@


1.99
log
@[Bug #70088]
Get rid of cat
@
text
@d28 4
d297 8
a304 1
		system/__win32os
d440 8
d539 2
d552 2
@


1.98
log
@[Bug #70086]
*windows has moved to *windows_gui
@
text
@d28 4
a476 4
CATSRC =	ml_utils/cat
CATMODIR = 	ml_utils/Debug/cat
CATMO =		$(CATMODIR:%=$(SRC)/%.mo)
CATSML =	$(CATSRC:%=$(SRC)/%.sml)
d481 2
a482 2
basis-files:  cat.img $(BASISMO)
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats $@@ $(BASISMO) wombats
d484 2
a485 3
shell-files: cat.img $(COMPILERMO) $(SHELLMO)
	echo make: $@@
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats $@@ $(COMPILERMO) $(SHELLMO) wombats
d487 2
a488 3
tty2-files: cat.img $(INTERMO) $(TTYMO)
	echo make: $@@
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats $@@ $(INTERMO) $(TTYMO) wombats
d490 1
a490 1
gui2-files: cat.img $(INTERMO) $(NTGUIMO)
d492 1
a492 1
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats $@@ $(INTERMO) $(NTGUIMO) wombats
d494 1
a494 3
shell.img: typechecker.img $(COMPILERMO) $(SHELLMO) shell-files
	echo make: $@@
	$(RUNTIME) $(RUNTIMEOPTS) -load typechecker.img -save $@@ -from shell-files -pass wombats -pervasive-dir ../../../pervasive wombats
d496 1
a496 1
tty.img: shell.img $(INTERMO) $(TTYMO) tty2-files
d498 4
a501 3
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.saveImage\(\"tty.img\\\",false\) wombats
	sh -c 'cat spong.crf | $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from tty2-files'
	rm spong.crf
d503 1
a503 1
gui.img: shell.img $(INTERMO) $(NTGUIMO) gui2-files
d505 2
a506 4
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.saveImage\(\"gui.img\\\",false\) wombats
	sh -c 'cat spong.crf | $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from gui2-files'
	rm spong.crf

d516 5
a520 3
cat.img: basis.img $(CATMO)
	echo make: $@@ from basis.img
	$(RUNTIME) $(RUNTIMEOPTS) -pass wombats -save $@@ wombats -load basis.img $(CATMO)
d522 4
a525 4
$(CATMO): $(CATSML) $(PERVASIVEMO) $(BASISMO) batch.img
	echo make $@@ from $(CATSRC)
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" ARCH_OS="$(ARCH_OS)" batch.img
	$(RUNTIME) $(RUNTIMEOPTS) -load batch.img -pass wombats -pervasive-dir ../../../pervasive -project ..\\..\\..\\ml_utils\\cat.mlp -build wombats
d527 5
d533 1
a533 7
guib.img: shell.img $(INTERMO) $(NTGUIMO) $(BASIS_AND_LOADERMO) gui2-files
	echo make: $@@ from shell.img
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Project.openProject \"..\\\\..\\\\..\\\\basis.mlp\\\"\; Shell.Project.setConfiguration \"$(ARCH_OS)\\\"\; Shell.Project.setTargets \[\"require_all.sml\\\"\]\; Shell.Project.loadAll \(\) \; Shell.saveImage\(\"guib.img\\\", false\) \; wombats
	sh -c 'cat spong.crf | $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from gui2-files -pass wombats -pervasive-dir ../../../pervasive wombats'
	rm spong.crf

ttyb.img: shell.img $(INTERMO) $(NTGUIMO) tty2-files $(BASIS_AND_LOADERMO)
d535 2
a536 3
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Project.openProject \"..\\\\..\\\\..\\\\basis.mlp\\\"\; Shell.Project.setConfiguration \"$(ARCH_OS)\\\"\; Shell.Project.setTargets \[\"require_all.sml\\\"\]\; Shell.Project.loadAll \(\) \; Shell.saveImage\(\"ttyb.img\\\", false\) \; wombats
	sh -c 'cat spong.crf | $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from tty2-files'
	rm spong.crf
@


1.97
log
@[Bug #70077]
Removing path, _unixpath, _win_ntpath and __path
These are replaced by OS.Path
@
text
@d28 5
d443 3
a445 3
		winsys/windows \
		winsys/_windows \
		winsys/__windows \
@


1.96
log
@[Bug #30090]
cat.img now depends on basis.img
@
text
@d28 4
d233 1
a233 2
		system/__getenv \
		system/_win_ntpath
@


1.95
log
@[Bug #70081]
Look for cat.mo in ml_utils/debug now.
@
text
@d28 4
d513 3
a515 3
cat.img: pervasive.img $(CATMO)
	echo make: $@@ from pervasive.img
	$(RUNTIME) $(RUNTIMEOPTS) -pass wombats -save $@@ wombats -load pervasive.img $(CATMO)
d517 1
a517 1
$(CATMO): $(CATSML) $(PERVASIVEMO) batch.img
@


1.94
log
@[Bug #30365]
Projects now use subprojects.
@
text
@d28 4
d462 2
a463 1
CATMO =		$(CATSRC:%=$(SRC)/%.mo)
@


1.93
log
@[Bug #30362]
Setting mode means object files live in a different place.
@
text
@d28 4
d516 1
a516 1
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Project.openProject \"..\\\\..\\\\..\\\\mlworks.mlp\\\"\; Shell.Project.setConfiguration \"$(ARCH_OS)\\\"\; Shell.Project.setTargets \[\"require_all.sml\\\"\]\; Shell.Project.loadAll \(\) \; Shell.saveImage\(\"guib.img\\\", false\) \; wombats
d522 1
a522 1
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Project.openProject \"..\\\\..\\\\..\\\\mlworks.mlp\\\"\; Shell.Project.setConfiguration \"$(ARCH_OS)\\\"\; Shell.Project.setTargets \[\"require_all.sml\\\"\]\; Shell.Project.loadAll \(\) \; Shell.saveImage\(\"ttyb.img\\\", false\) \; wombats
@


1.92
log
@[Bug #30071]
Don't set maximumStrDepth when building guib.img
@
text
@d28 4
d204 1
d457 1
a457 1
NTGUIMO =	$(addsuffix .mo,$(addprefix $(OBJ)/$(ARCH_OS)/, $(notdir $(NTGUISRC))))
@


1.91
log
@[Bug #70070]
Add terminal.mo and __terminal.mo to COMPILER
@
text
@d28 4
d507 1
a507 1
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Options.set \(Shell.Options.ValuePrinter.maximumStrDepth, 0\) \; Shell.Project.openProject \"..\\\\..\\\\..\\\\mlworks.mlp\\\"\; Shell.Project.setConfiguration \"$(ARCH_OS)\\\"\; Shell.Project.setTargets \[\"require_all.sml\\\"\]\; Shell.Project.loadAll \(\) \; Shell.saveImage\(\"guib.img\\\", false\) \; wombats
d513 1
a513 1
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Options.set \(Shell.Options.ValuePrinter.maximumStrDepth, 0\) \; Shell.Project.openProject \"..\\\\..\\\\..\\\\mlworks.mlp\\\"\; Shell.Project.setConfiguration \"$(ARCH_OS)\\\"\; Shell.Project.setTargets \[\"require_all.sml\\\"\]\; Shell.Project.loadAll \(\) \; Shell.saveImage\(\"ttyb.img\\\", false\) \; wombats
@


1.90
log
@[Bug #70065]
Load messages and __messages before getenv
@
text
@d28 4
d391 2
@


1.89
log
@[Bug #30071]
Merge in Project Workspace changes.
@
text
@d28 4
d201 2
@


1.88
log
@[Bug #30059]
__control_names.sml (generated) now lives in rts/gen
@
text
@d28 4
d45 23
d187 1
a187 1
RUNTIMEOPTS =	-verbose -d 1 -delivery -batch
d252 3
a254 6
COMPILER = $(COMPILER1) main/io \
		main/_io \
		main/__io \
		basics/module \
		basics/_module \
		basics/__module \
d381 3
d424 6
d436 1
a436 1
NTGUIMO =	$(addsuffix .mo,$(addprefix $(SRC)/,$(join $(dir $(NTGUISRC)),$(addprefix $(ARCH_OS), $(notdir $(NTGUISRC))))))
d486 1
a486 1
	$(RUNTIME) $(RUNTIMEOPTS) -load batch.img -pass wombats -pervasive-dir ../../../pervasive -source-path ../../.. -compile-file $(CATSML) wombats
d491 2
a492 2
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Path.setPervasive\"../../../pervasive\\\"\; val _ = Shell.Path.setSourcePath\[\"../../..\\\"\]\; val _ = Shell.File.loadObject\"../../../basis/require_all\\\"\; val _ = Shell.saveImage\(\"guib.img\\\", false\) wombats
	sh -c 'cat spong.crf | $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from gui2-files'
d497 1
a497 1
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Path.setPervasive\"../../../pervasive\\\"\; val _ = Shell.Path.setSourcePath\[\"../../..\\\"\]\; val _ = Shell.File.loadObject\"../../../basis/require_all\\\"\; val _ = Shell.saveImage\(\"ttyb.img\\\", false\) wombats
@


1.87
log
@[Bug #30059]
Implement interface to Win32 resource dialogs.
@
text
@d28 4
d387 1
a387 1
		winsys/__control_names \
@


1.86
log
@[Bug #30089]
Removing OldOS
@
text
@d28 4
d382 2
@


1.85
log
@[Bug #30247]
TTY listener gets confused by error messages during distribution
builds -- implementing workaround
@
text
@d28 5
a186 3
		make/old_os \
		system/_win_nt \
		system/__old_os \
@


1.84
log
@[Bug #30090]
Replace MLWorks.IO with TextIO where applicable
@
text
@d28 4
d446 1
a446 1
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Path.setPervasive\"../../../pervasive\\\"\; val _ = Shell.Path.setSourcePath\[\"../../..\\\"\]\;val _ = Shell.File.loadObject\"../../../basis/require_all\\\"\;val _ = Shell.saveImage\(\"guib.img\\\", false\) wombats
d452 1
a452 1
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Path.setPervasive\"../../../pervasive\\\"\; val _ = Shell.Path.setSourcePath\[\"../../..\\\"\]\;val _ = Shell.File.loadObject\"../../../basis/require_all\\\"\;val _ = Shell.saveImage\(\"ttyb.img\\\", false\) wombats
@


1.84.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a27 4
# Revision 1.84  1997/05/23  12:07:39  jont
# [Bug #30090]
# Replace MLWorks.IO with TextIO where applicable
#
@


1.84.2.2
log
@[Bug #30071]
Redesign Compilation Manager -> Project Workspace.
New files: main/*proj_file.sml
@
text
@a352 3
		main/proj_file \
		main/_proj_file \
		main/__proj_file \
@


1.84.2.3
log
@[Bug #30326]
Renamed utils/*timer to utils/*mlworks_timer and main/*io to main/*mlworks_io.
@
text
@a27 5
# Revision 1.84.2.2  1997/09/12  14:52:41  johnh
# [Bug #30071]
# Redesign Compilation Manager -> Project Workspace.
# New files: main/*proj_file.sml
#
d215 3
a217 3
COMPILER = $(COMPILER1) main/mlworks_io \
		main/_mlworks_io \
		main/__mlworks_io \
@


1.84.2.4
log
@[Bug #30071]
Source and object paths are redundant.  Need to use Shell.Project to build
guib.img.
@
text
@a27 4
# Revision 1.84.2.3  1997/11/25  15:01:50  daveb
# [Bug #30326]
# Renamed utils/*timer to utils/*mlworks_timer and main/*io to main/*mlworks_io.
#
d454 1
a454 1
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Project.openProject \"../../../mlworks.mlp\\\"\; Shell.Project.setConfiguration "I386/NT\\\"\; Shell.Project.setTargets [\"require_all.sml\\\"]\; Shell.Project.loadAll () \; Shell.saveImage(\"guib.img\\\", false) \; wombats
@


1.84.2.5
log
@[Bug #30071]
Removed basics/*module.
@
text
@a27 5
# Revision 1.84.2.4  1997/11/26  13:29:17  daveb
# [Bug #30071]
# Source and object paths are redundant.  Need to use Shell.Project to build
# guib.img.
#
d227 3
@


1.84.2.6
log
@[Bug #30071]
Updated cat.img to use ml_utils\cat.mlp.
Updated guib.img and ttyb.img to use Shell.Project.
@
text
@a27 4
# Revision 1.84.2.5  1997/11/26  17:32:16  daveb
# [Bug #30071]
# Removed basics/*module.
#
d161 1
a161 1
RUNTIMEOPTS =	-verbose -d 1 -delivery	-batch
d196 3
a357 3
		main/proj_file \
		main/_proj_file \
		main/__proj_file \
d364 3
d405 1
a405 1
NTGUIMO =	$(addsuffix .mo,$(addprefix $(OBJ)/$(ARCH_OS)/, $(notdir $(NTGUISRC))))
d455 1
a455 1
	$(RUNTIME) $(RUNTIMEOPTS) -load batch.img -pass wombats -pervasive-dir ../../../pervasive -project ..\..\..\ml_utils\cat.mlp -build wombats
d460 2
a461 2
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Options.set \(Shell.Options.ValuePrinter.maximumStrDepth, 0\) \; Shell.Project.openProject \"..\\\\..\\\\..\\\\mlworks.mlp\\\"\; Shell.Project.setConfiguration \"I386/Win95\\\"\; Shell.Project.setTargets \[\"require_all.sml\\\"\]\; Shell.Project.loadAll \(\) \; Shell.saveImage\(\"guib.img\\\", false\) \; wombats
	sh -c 'cat spong.crf | $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from gui2-files -pass wombats -pervasive-dir ../../../pervasive wombats'
d466 1
a466 1
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Options.set \(Shell.Options.ValuePrinter.maximumStrDepth, 0\) \; Shell.Project.openProject \"..\\\\..\\\\..\\\\mlworks.mlp\\\"\; Shell.Project.setConfiguration \"I386/Win95\\\"\; Shell.Project.setTargets \[\"require_all.sml\\\"\]\; Shell.Project.loadAll \(\) \; Shell.saveImage\(\"ttyb.img\\\", false\) \; wombats
@


1.84.2.7
log
@[Bug #30071]
Set ARCH_OS to I386/NT, if not already set.  Use this in ttyb.img & guib.img.
Added missing backslashes to path of cat.mlp.
@
text
@a399 6
# ARCH_OS might be already set by the Win95 makefile, which includes
# this one.
ifeq (,$(ARCH_OS))
  ARCH_OS = I386/NT
endif

d456 1
a456 1
	$(RUNTIME) $(RUNTIMEOPTS) -load batch.img -pass wombats -pervasive-dir ../../../pervasive -project ..\\..\\..\\ml_utils\\cat.mlp -build wombats
d461 1
a461 1
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Options.set \(Shell.Options.ValuePrinter.maximumStrDepth, 0\) \; Shell.Project.openProject \"..\\\\..\\\\..\\\\mlworks.mlp\\\"\; Shell.Project.setConfiguration \"$(ARCH_OS)\\\"\; Shell.Project.setTargets \[\"require_all.sml\\\"\]\; Shell.Project.loadAll \(\) \; Shell.saveImage\(\"guib.img\\\", false\) \; wombats
d467 1
a467 1
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Options.set \(Shell.Options.ValuePrinter.maximumStrDepth, 0\) \; Shell.Project.openProject \"..\\\\..\\\\..\\\\mlworks.mlp\\\"\; Shell.Project.setConfiguration \"$(ARCH_OS)\\\"\; Shell.Project.setTargets \[\"require_all.sml\\\"\]\; Shell.Project.loadAll \(\) \; Shell.saveImage\(\"ttyb.img\\\", false\) \; wombats
@


1.84.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a27 4
# Revision 1.84  1997/05/23  12:07:39  jont
# [Bug #30090]
# Replace MLWorks.IO with TextIO where applicable
#
@


1.83
log
@[Bug #30121]
Move to new FI: remove any reference to foreign.img
@
text
@d28 4
d145 1
a145 1
PARSERSYS =	system/win32 \
d148 5
a152 1
		utils/getenv \
a327 10
		basis/mono_vector \
		basis/mono_array \
		basis/__word8 \
		basis/__word8_vector \
		basis/__word8_array \
		system/win32os \
		system/_win32os \
		system/__win32os \
		basis/substring \
		basis/__substring \
a329 15
		basis/__char_vector \
		basis/__char_array \
		basis/prim_io \
		basis/_prim_io \
		basis/__position \
		basis/__bin_prim_io \
		basis/io \
		basis/__io \
		basis/stream_io \
		basis/imperative_io \
		basis/_imperative_io \
		basis/os_prim_io \
		basis/__text_prim_io \
		system/__os_prim_io \
		basis/_stream_io \
@


1.82
log
@Further modifications after change to encapsulator to use basis io
Part of bug 30091
@
text
@d28 4
d131 5
a135 1
all: pervasive.img lexer.img batch.img gui.img guib.img basis.img foreign.img windows.img
a136 1
everything: all tty.img ttyb.img guii.img ttyi.img
a455 11
guii.img: shell.img $(INTERMO) $(NTGUIMO) $(BASISMO) $(FOREIGNMO) gui2-files
	echo make: $@@ from shell.img
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Path.setPervasive\"../../../pervasive\\\"\; val _ = Shell.Path.setSourcePath\[\"../../..\\\"\]\;val _ = Shell.File.loadObject\"../../../foreign/__interface\\\"\;val _ = Shell.saveImage\(\"guii.img\\\", false\) wombats
	sh -c 'cat spong.crf | $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from gui2-files'
	rm spong.crf

ttyi.img: shell.img $(INTERMO) $(NTGUIMO) $(BASISMO) $(FOREIGNMO) tty2-files
	echo make: $@@ from shell.img
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats spong.crf Shell.Path.setPervasive\"../../../pervasive\\\"\; val _ = Shell.Path.setSourcePath\[\"../../..\\\"\]\;val _ = Shell.File.loadObject\"../../../foreign/__interface\\\"\;val _ = Shell.saveImage\(\"ttyi.img\\\", false\) wombats
	sh -c 'cat spong.crf | $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from tty2-files'
	rm spong.crf
@


1.81
log
@[Bug #30091]
Make various basis code available to encapsulator
@
text
@d28 4
d313 1
d315 2
d318 3
a324 2
		basis/__word8 \
		basis/__word8_vector \
@


1.80
log
@[Bug #1816]
[Bug #1816]
Improvements to use new (beta-17) GNU tools
@
text
@d28 5
d136 1
a136 1
 		system/_win_ntpath
d309 27
@


1.80.1.1
log
@branched from 1.80
@
text
@a27 5
# Revision 1.80  1997/01/08  17:03:37  jont
# [Bug #1816]
# [Bug #1816]
# Improvements to use new (beta-17) GNU tools
#
@


1.80.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a27 3
# Revision 1.80.1.1  1997/05/12  10:51:00  hope
# branched from 1.80
#
@


1.80.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a27 3
# Revision 1.80.1.1  1997/05/12  10:51:00  hope
# branched from 1.80
#
@


1.80.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a27 3
# Revision 1.80.1.1  1997/05/12  10:51:00  hope
# branched from 1.80
#
@


1.80.1.1.1.2
log
@[Bug #30190]
Removed foreign.img
@
text
@a27 3
# Revision 1.80.1.1.1.1  1997/07/28  18:33:13  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
d33 1
d126 1
a126 1
all: pervasive.img lexer.img batch.img gui.img guib.img basis.img windows.img
d128 1
a128 1
everything: all tty.img ttyb.img
d416 12
@


1.80.1.1.1.2.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a27 4
# Revision 1.80.1.1.1.2  1997/08/06  15:15:38  daveb
# [Bug #30190]
# Removed foreign.img
#
@


1.79
log
@[Bug #1885]
removing two spaces at end of line 193.
@
text
@d28 4
d120 2
d379 5
a383 2
tty.img: shell.img $(INTERMO) $(TTYMO)
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" ARCH_OS="$(ARCH_OS)" tty2.img
d385 1
a385 4
gui.img: shell.img $(INTERMO) $(NTGUIMO)
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" ARCH_OS="$(ARCH_OS)" gui2.img

tty2.img: shell.img $(INTERMO) $(TTYMO) tty2-files
d387 3
a389 4
	echo @@$(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from tty2-files > spong.crf
	sed -e "s,/,\\,g" spong.crf > spong.bat
	echo Shell.saveImage("tty.img", false); | cmd /c spong.bat
	rm spong.crf spong.bat
a399 9
gui2.img: shell.img $(INTERMO) $(NTGUIMO) gui2-files
	echo make: $@@ from shell.img
	echo @@$(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from gui2-files > spong.crf
	sed -e "s,/,\\,g" spong.crf > spong.bat
	echo Shell.saveImage("gui.img", false); | cmd /c spong.bat
	rm spong.crf spong.bat

$(CATMO):	$(PERVASIVEMO) batch.img

d404 1
a404 1
$(CATMO): $(CATSML)
a405 1
	if exist $(CATMO)    rm $(CATMO)
d407 1
a407 9
	$(RUNTIME) $(RUNTIMEOPTS) -load batch.img -pass wombats -pervasive-dir ../../../pervasive -source-path ../../.. -compile $(CATSML) wombats

GUII_LOADER = val _ = Shell.Path.setPervasive "../../../pervasive"; \
val _ = Shell.Path.setSourcePath ["../../.."]; \
val _ = Shell.File.loadSource "../../../foreign/__foreign"; \
val _ = Shell.saveImage("guii.img", false);

guii.img: shell.img $(INTERMO) $(NTGUIMO)
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" ARCH_OS="$(ARCH_OS)" guii2.img
d409 1
a409 1
guii2.img: shell.img $(INTERMO) $(NTGUIMO) gui2-files
d411 3
a413 11
	echo $(GUII_LOADER) > spong1.bat
	echo $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from gui2-files -pass a -pervasive-dir ../../../pervasive -source-path ../../.. a > spong.crf
	sed -e "s,/,\\,g" spong.crf > spong1.crf
	sed -e "s,^,@@cat spong1.bat | ," spong1.crf > spong.bat
	cmd /c spong.bat
	rm spong*.crf spong*.bat

TTYI_LOADER = val _ = Shell.Path.setPervasive "../../../pervasive"; \
val _ = Shell.Path.setSourcePath ["../../.."]; \
val _ = Shell.File.loadSource "../../../foreign/__foreign"; \
val _ = Shell.saveImage("ttyi.img", false);
d415 1
a415 4
ttyi.img: shell.img $(INTERMO) $(NTGUIMO)
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" ARCH_OS="$(ARCH_OS)" ttyi2.img

ttyi2.img: shell.img $(INTERMO) $(NTGUIMO) tty2-files
d417 3
a419 14
	echo $(TTYI_LOADER) > spong1.bat
	echo $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from tty2-files -pass a -pervasive-dir ../../../pervasive -source-path ../../.. a > spong.crf
	sed -e "s,/,\\,g" spong.crf > spong1.crf
	sed -e "s,^,@@cat spong1.bat | ," spong1.crf > spong.bat
	cmd /c spong.bat
	rm spong*.crf spong*.bat

GUIB_LOADER = val _ = Shell.Path.setPervasive "../../../pervasive"; \
val _ = Shell.Path.setSourcePath ["../../.."]; \
val _ = Shell.File.loadObject "../../../basis/require_all"; \
val _ = Shell.saveImage("guib.img", false);

guib.img: shell.img $(INTERMO) $(NTGUIMO) $(BASIS_AND_LOADERMO)
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" ARCH_OS="$(ARCH_OS)" guib2.img
d421 1
a421 1
guib2.img: shell.img $(INTERMO) $(NTGUIMO) gui2-files
d423 3
a425 14
	echo $(GUIB_LOADER) > spong1.bat
	echo $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from gui2-files -pass a -pervasive-dir ../../../pervasive -source-path ../../.. a > spong.crf
	sed -e "s,/,\\,g" spong.crf > spong1.crf
	sed -e "s,^,@@cat spong1.bat | ," spong1.crf > spong.bat
	cmd /c spong.bat
	rm spong*.crf spong*.bat

TTYB_LOADER = val _ = Shell.Path.setPervasive "../../../pervasive"; \
val _ = Shell.Path.setSourcePath ["../../.."]; \
val _ = Shell.File.loadObject "../../../basis/require_all"; \
val _ = Shell.saveImage("ttyb.img", false);

ttyb.img: shell.img $(INTERMO) $(NTGUIMO) $(BASIS_AND_LOADERMO)
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" ARCH_OS="$(ARCH_OS)" ttyb2.img
d427 1
a427 1
ttyb2.img: shell.img $(INTERMO) $(NTGUIMO) tty2-files
d429 3
a431 6
	echo $(TTYB_LOADER) > spong1.bat
	echo $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from tty2-files -pass a -pervasive-dir ../../../pervasive -source-path ../../.. a > spong.crf
	sed -e "s,/,\\,g" spong.crf > spong1.crf
	sed -e "s,^,@@cat spong1.bat | ," spong1.crf > spong.bat
	cmd /c spong.bat
	rm spong*.crf spong*.bat
@


1.78
log
@lambda optimizer changes
@
text
@d28 3
d193 1
a193 1
		lambda/__transsimple \	
@


1.77
log
@[Bug #1709]
Fix problems building cat.mo from cat.sml following registry changes
@
text
@d28 4
a163 1
		lambda/lambdasub \
a184 5
		lambda/_lambdasub \
		lambda/__lambdasub \
		lambda/simplelambdatypes \
		lambda/_simplelambdatypes \
		lambda/__simplelambdatypes \
d190 4
a193 1
		lambda/__transsimple \
a221 6
		lambda/interproc \
		lambda/_interproc \
		lambda/__interproc \
		lambda/tail \
		lambda/_tail \
		lambda/__tail \
@


1.77.4.1
log
@branched from 1.77
@
text
@a27 4
# Revision 1.77  1996/10/31  14:08:47  jont
# [Bug #1709]
# Fix problems building cat.mo from cat.sml following registry changes
#
@


1.77.3.1
log
@branched from 1.77
@
text
@a27 4
# Revision 1.77  1996/10/31  14:08:47  jont
# [Bug #1709]
# Fix problems building cat.mo from cat.sml following registry changes
#
@


1.77.3.1.1.1
log
@branched from 1.77.3.1
@
text
@a27 3
# Revision 1.77.3.1  1996/12/17  18:00:56  hope
# branched from 1.77
#
@


1.77.2.1
log
@branched from 1.77
@
text
@a27 4
# Revision 1.77  1996/10/31  14:08:47  jont
# [Bug #1709]
# Fix problems building cat.mo from cat.sml following registry changes
#
@


1.77.1.1
log
@branched from 1.77
@
text
@a27 4
# Revision 1.77  1996/10/31  14:08:47  jont
# [Bug #1709]
# Fix problems building cat.mo from cat.sml following registry changes
#
@


1.77.1.1.1.1
log
@branched from 1.77.1.1
@
text
@a27 3
# Revision 1.77.1.1  1996/11/14  13:05:25  hope
# branched from 1.77
#
@


1.76
log
@[Bug #1696]
Add -batch to RUNTIMEOPTS
@
text
@d28 4
d373 1
a373 10
	cd > spong.crf
	sed -e "s,^,@@set MLWORKS_PERVASIVE=,;s,$$,\\$(SRC)\\pervasive," spong.crf > spong1.bat
	sed -e "s,^,@@set MLWORKS_SRC_PATH=,;s,$$,\\$(SRC)," spong.crf > spong2.bat
	echo @@set MLWORKS_OBJ_PATH=%%S\%%C\> spong1.crf
	sed -e "s,$$,$(ARCH_OS),;s,/,\\,g" spong1.crf > spong3.bat
	echo @@$(RUNTIME) $(RUNTIMEOPTS) > spong.crf
	sed -e "s,$$, -load typechecker.img -save $@@ -from shell-files,;s,/,\\,g" spong.crf > spong4.bat
	cat spong1.bat spong2.bat spong3.bat spong4.bat > spong.bat
	cmd /c spong.bat
	rm spong*.crf spong*.bat
d414 1
a414 9
	cd > spong.crf
	sed -e "s,^,@@set MLWORKS_PERVASIVE=,;s,$$,\\$(SRC)\\pervasive," spong.crf > spong1.bat
	cd > spong.crf
	sed -e "s,^,@@set MLWORKS_SRC_PATH=,;s,$$,\\$(SRC)," spong.crf > spong2.bat
	echo @@$(RUNTIME) $(RUNTIMEOPTS) -load batch.img -pass wombats -compile $(CATSML) wombats > spong.crf
	sed -e "s,/,\\,g" spong.crf > spong3.bat
	cat spong1.bat spong2.bat spong3.bat > spong.bat
	cmd /c spong
	rm spong.crf spong.bat spong1.bat spong2.bat spong3.bat
@


1.75
log
@[Bug #1642]
Modify make mechanism for guib.img to load object files instead of compiling source
@
text
@d28 4
d106 1
a106 1
RUNTIMEOPTS =	-verbose -d 1 -delivery
@


1.75.1.1
log
@branched from 1.75
@
text
@a27 4
# Revision 1.75  1996/10/09  14:31:28  jont
# [Bug #1642]
# Modify make mechanism for guib.img to load object files instead of compiling source
#
@


1.74
log
@Remove tty.img from list of files to be made for all
@
text
@d28 3
d461 1
a461 1
val _ = Shell.File.loadSource "../../../basis/require_all"; \
d464 1
a464 1
guib.img: shell.img $(INTERMO) $(NTGUIMO)
d478 1
a478 1
val _ = Shell.File.loadSource "../../../foreign/__foreign"; \
d481 1
a481 1
ttyb.img: shell.img $(INTERMO) $(NTGUIMO)
@


1.74.2.1
log
@branched from 1.74
@
text
@a27 3
# Revision 1.74  1996/09/04  16:52:28  jont
# Remove tty.img from list of files to be made for all
#
@


1.74.1.1
log
@branched from 1.74
@
text
@a27 3
# Revision 1.74  1996/09/04  16:52:28  jont
# Remove tty.img from list of files to be made for all
#
@


1.73
log
@Extend list of targets for all to include all distributed targets
@
text
@d28 3
d96 1
a96 1
all: pervasive.img lexer.img tty.img batch.img gui.img guib.img basis.img foreign.img windows.img
@


1.72
log
@Adding existence check for $(CATMO) before rm $(CATMO) ...
@
text
@d28 3
d93 1
a93 1
all: pervasive.img lexer.img tty.img batch.img gui.img
@


1.71
log
@Ensure CATMO rebuilt if a new batch compiler produced
@
text
@d28 3
d404 1
a404 1
	rm $(CATMO)
@


1.70
log
@Ensuring ARCH_OS values are propagated to recursive calls of make
and that they are used to find correct object paths for NTGUIMO.
@
text
@d28 4
d401 1
@


1.69
log
@Add missing dependency of CATMO on batch.img
@
text
@d20 3
d28 3
d329 2
a330 1
NTGUIMO =	$(NTGUISRC:%=$(SRC)/%.mo)
d361 1
a361 1
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" tty2.img
d364 1
a364 1
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" gui2.img
d373 9
d397 1
a397 1
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" batch.img
d414 1
a414 1
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" guii2.img
d431 1
a431 1
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" ttyi2.img
d448 1
a448 1
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" guib2.img
d465 1
a465 1
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" ttyb2.img
@


1.68
log
@Make guib.img from the right things (basis, not foreign)
@
text
@d25 3
d373 1
a373 1
$(CATMO):	$(PERVASIVEMO)
@


1.67
log
@Remove BASISSYS, no longer necessary
@
text
@d25 3
d425 1
a425 1
val _ = Shell.File.loadSource "../../../foreign/__foreign"; \
@


1.66
log
@Moving preferences out of batch system
@
text
@d25 3
d137 1
a137 3
		system/__win32os \
		system/__primio \
		basis/__textbinio
@


1.65
log
@Change filesys -> file_sys in accordance with latest file naming conventions.
@
text
@d25 3
a277 3
		main/preferences \
		main/_preferences \
		main/__preferences \
@


1.64
log
@Remove redundant references to files.
PARSERSYS basis/path is now loaded in images/GNUmake.
@
text
@d25 4
d76 1
a76 2
 		system/_win_ntpath \
 		system/_win_ntfilesys 
@


1.63
log
@** No reason given. **
@
text
@d25 3
a71 1
 		basis/path \
@


1.62
log
@Set SYSTEM explicitly here
@
text
@d25 3
d303 1
a303 1
SYSTEM = unix
@


1.61
log
@Add rule for guib.img, a gui with the revised basis loaded
Also a rule for ttyb.img
@
text
@d25 4
d299 2
@


1.60
log
@Remove any reference to FILESYS since it is subsumed by PARSERSYS
now that filesys stuff is needed for the parser.
@
text
@d25 4
d383 51
@


1.59
log
@Rename filesys to be os_filesys in line with latest file naming conventions.
@
text
@d25 3
a112 4
FILESYS =	basis/os_filesys \
		system/_win_ntfilesys \
		system/__os_filesys

d119 1
a119 1
COMPILER = $(COMPILER1) $(FILESYS) main/io \
@


1.58
log
@Change any reference to basis/lists -> basis/list now that the
file has been changed to have the same name as the signature.
@
text
@d25 4
d110 1
a110 1
FILESYS =	basis/filesys \
d112 1
a112 1
		system/__filesys
@


1.57
log
@Add rules for basis-files
@
text
@d25 3
d269 2
a270 2
		basis/lists \
		basis/__lists \
@


1.56
log
@Add extra parameter to Shell.saveImage to indicate not to use executable format
@
text
@d25 3
d293 3
@


1.55
log
@initbasis becomes basis
@
text
@d25 3
d326 1
a326 1
	echo Shell.saveImage "tty.img"; | cmd /c spong.bat
d333 1
a333 1
	echo Shell.saveImage "gui.img"; | cmd /c spong.bat
d358 1
a358 1
val _ = Shell.saveImage "guii.img";
@


1.54
log
@Patch up NTGUISRC wrt to change in definition of GUI
@
text
@d24 4
a27 1
# $Log$
d42 1
a42 1
 		initbasis/path \
d97 1
a97 1
FILESYS =	initbasis/filesys \
d105 1
a105 1
		initbasis/__textbinio
d256 6
a261 6
WINSYS =	initbasis/general \
		initbasis/__general \
		initbasis/word \
		initbasis/__word32 \
		initbasis/lists \
		initbasis/__lists \
@


1.53
log
@Various changes as part of the upgrade to the latest OS.* definition.
@
text
@a19 1
# $Id: I386:NT:Makefile,v 1.52 1996/03/25 17:30:39 jont Exp $
d21 4
d282 1
a282 1
NTGUISRC = 	$(GUI1) $(WINSYS) $(GUI2)
@


1.52
log
@Fix problems with MLWORKS_OBJ_PATH setting
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.51 1996/03/18 15:32:09 daveb Exp $
d38 1
a38 1
 		system/__path 
d61 1
a61 1
		make/os \
d63 1
a63 1
		system/__os \
@


1.51
log
@Set the object path when building shell.img.
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.50 1996/03/15 16:40:30 jont Exp $
d299 1
a299 1
	echo @@set MLWORKS_OBJ_PATH=%S\%C\> spong1.crf
@


1.50
log
@Remove instances of win_nt as a directory. These need to say system
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.49 1996/03/15 12:30:23 matthew Exp $
d299 2
d302 2
a303 2
	sed -e "s,$$, -load typechecker.img -save $@@ -from shell-files,;s,/,\\,g" spong.crf > spong3.bat
	cat spong1.bat spong2.bat spong3.bat > spong.bat
@


1.49
log
@Hyphenizing command line arguments
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.48 1996/03/08 17:53:10 jont Exp $
d30 3
a32 3
PARSERSYS =	win_nt/win32 \
		win_nt/_win32 \
		win_nt/__win32 \
d44 2
a45 2
		win_nt/_editor \
		win_nt/__editor
@


1.48
log
@Removing .sml in build of guii.img now interpreter has been fixed
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.47 1996/03/08 13:41:29 jont Exp $
d355 1
a355 1
	echo $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from gui2-files -pass a -pervasive_dir ../../../pervasive -source_path ../../.. a > spong.crf
@


1.47
log
@Suppress some output when making
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.46 1996/03/07 15:05:53 jont Exp $
d346 1
a346 1
val _ = Shell.File.loadSource "../../../foreign/__foreign.sml"; \
@


1.46
log
@Removed targets no longer required (win*.img) and associated macros
Added build for guii.img, the gui with the FFI loaded.
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.45 1996/03/05 15:27:18 jont Exp $
d283 1
a285 3
tty-files: cat.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(TTYMO)
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats $@@ $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(TTYMO) wombats

d287 1
d291 1
d297 3
a299 3
	sed -e "s,^,set MLWORKS_PERVASIVE=,;s,$$,\\$(SRC)\\pervasive," spong.crf > spong1.bat
	sed -e "s,^,set MLWORKS_SRC_PATH=,;s,$$,\\$(SRC)," spong.crf > spong2.bat
	echo $(RUNTIME) $(RUNTIMEOPTS) > spong.crf
d305 2
a306 1
tty.img: tty2.img
d308 2
a309 1
gui.img: gui2.img
d344 4
a347 8
SET_SOURCE    = MLWORKS_SRC_PATH=`pwd`/$(SRC)/; \
                export MLWORKS_SRC_PATH

SET_PERVASIVE = MLWORKS_PERVASIVE=`pwd`/$(SRC)/pervasive/; \
                export MLWORKS_PERVASIVE

GUII_LOADER = let val _ = Shell.File.loadSource \"../../../foreign/__foreign.sml\" \
		in Shell.saveImage \"guii.img\" end
d349 2
a350 1
guii.img: guii2.img
d354 2
a355 1
	echo $(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from gui2-files > spong.crf
d357 1
a357 2
	sed -e "s,^,echo $(GUII_LOADER) | ," spong1.crf > spong1.bat
	cat spong1.bat > spong.bat
@


1.45
log
@Add BASISSYS for OS specific revised basis files
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.44 1996/02/23 16:11:29 daveb Exp $
a278 1
WINSRC =	interpreter/win_int
a279 1
WINMO =		$(WINSRC:%=$(SRC)/%.mo)
a290 3
win2-files: cat.img $(INTERMO) $(WINMO)
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats $@@ $(INTERMO) $(WINMO) wombats

d297 5
a301 4
	sed -e "s,^,@@set MLWORKS_PERVASIVE=,;s,$$,\\$(SRC)\\pervasive," spong.crf > spong1.bat
	echo @@$(RUNTIME) $(RUNTIMEOPTS) > spong.crf
	sed -e "s,$$, -load typechecker.img -save $@@ -from shell-files,;s,/,\\,g" spong.crf > spong2.bat
	cat spong1.bat spong2.bat > spong.bat
d303 1
a303 4
	rm spong.crf spong1.bat spong2.bat spong.bat

tty.img: lexer.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(TTYMO)
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" tty2.img
d305 1
a305 2
win.img: lexer.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(WINMO)
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" win2.img
d307 1
a307 2
gui.img: lexer.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(NTGUIMO)
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" gui2.img
a315 7
win2.img: shell.img $(INTERMO) $(WINMO) win2-files
	echo make: $@@ from shell.img
	echo @@$(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from win2-files > spong.crf
	sed -e "s,/,\\,g" spong.crf > spong.bat
	echo Shell.saveImage "win.img"; | cmd /c spong.bat
	rm spong.crf spong.bat

d342 19
@


1.44
log
@Shell structure converted to new naming convention.
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.43 1996/02/21 14:02:49 jont Exp $
d94 6
@


1.43
log
@Modifications required because lambda uses module
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.42 1996/02/02 17:34:52 jont Exp $
d316 1
a316 1
	echo Shell.save_image "tty.img"; | cmd /c spong.bat
d323 1
a323 1
	echo Shell.save_image "win.img"; | cmd /c spong.bat
d330 1
a330 1
	echo Shell.save_image "gui.img"; | cmd /c spong.bat
@


1.42
log
@Ensure cpaitypes loaded before _menus
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.41 1996/01/19 15:45:38 stephenb Exp $
d89 12
a100 1
		utils/__inthashtable \
d137 1
a137 12
		lambda/__auglambda

FILESYS =	initbasis/filesys \
		system/_win_ntfilesys \
		system/__filesys

COMPILER = $(COMPILER1) $(FILESYS) main/io \
		main/_io \
		main/__io \
		basics/module \
		basics/_module \
		basics/__module \
@


1.41
log
@Add recently created win32 files.
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.40 1996/01/12 10:45:08 daveb Exp $
d258 3
@


1.40
log
@Removed file_dialog.
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.39 1996/01/09 12:17:51 matthew Exp $
d30 4
a33 1
PARSERSYS =	utils/getenv \
d38 1
a38 1
 		system/__path
d42 4
a45 1
		machine/__stack_interface
@


1.39
log
@Renaming motif.img to gui.img
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.38 1996/01/04 15:20:44 matthew Exp $
a246 1
		gui/file_dialog \
a248 2
		winsys/_file_dialog \
		winsys/__file_dialog \
@


1.38
log
@Reordering menus and capi
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.37 1995/12/14 15:18:56 jont Exp $
d25 1
a25 1
all: pervasive.img lexer.img tty.img batch.img motif.img
d268 1
a268 1
NTMOTIFSRC = 	$(MOTIF1) $(WINSYS) $(MOTIF2)
d270 1
a270 1
NTMOTIFMO =	$(NTMOTIFSRC:%=$(SRC)/%.mo)
d284 2
a285 2
motif2-files: cat.img $(INTERMO) $(NTMOTIFMO)
	$(RUNTIME) $(RUNTIMEOPTS) -load cat.img -pass wombats $@@ $(INTERMO) $(NTMOTIFMO) wombats
d303 2
a304 2
motif.img: lexer.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(NTMOTIFMO)
	$(MAKE_COMMAND) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" motif2.img
d320 1
a320 1
motif2.img: shell.img $(INTERMO) $(NTMOTIFMO) motif2-files
d322 1
a322 1
	echo @@$(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from motif2-files > spong.crf
d324 1
a324 1
	echo Shell.save_image "motif.img"; | cmd /c spong.bat
@


1.37
log
@Move inthashtable above _lambda
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.36 1995/12/13 15:34:07 daveb Exp $
a251 1
		gui/capi \
a254 2
		winsys/_capi \
		winsys/__capi \
d257 4
a260 1
		winsys/__menus
@


1.36
log
@Added initbasis/lists to WINSYS
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.35 1995/12/06 13:03:20 daveb Exp $
d81 3
a95 3
		utils/inthashtable \
		utils/_inthashtable \
		utils/__inthashtable \
@


1.35
log
@Removed load of initbasis/__lists from batch.img.
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.34 1995/12/05 14:01:47 daveb Exp $
d242 2
@


1.34
log
@Added *project, *depend, and associated changes.
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.33 1995/10/20 16:27:13 jont Exp $
a216 8
		initbasis/word \
		initbasis/__word \
		initbasis/__word8 \
		initbasis/toplevel \
		initbasis/general \
		initbasis/__general \
		initbasis/lists \
		initbasis/__lists \
@


1.33
log
@Add utils/*lisp into WINSYS
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.32 1995/10/06 12:58:49 jont Exp $
d217 17
a239 3
		make/recompile \
		make/_recompile \
		make/__recompile \
@


1.32
log
@Modify mswindows references to winsys
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.31 1995/09/19 12:15:09 matthew Exp $
d245 3
@


1.31
log
@Changing words to word
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.30 1995/08/17 16:08:41 io Exp $
d236 3
a238 3
		mswindows/windows \
		mswindows/_windows \
		mswindows/__windows \
d240 4
a243 4
		mswindows/labelstrings \
		mswindows/__labelstrings \
		mswindows/_file_dialog \
		mswindows/__file_dialog \
d245 2
a246 2
		mswindows/_capi \
		mswindows/__capi \
d248 2
a249 2
		mswindows/_menus \
		mswindows/__menus
@


1.30
log
@win.img -> motif.img
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.29 1995/08/14 15:20:03 jont Exp $
d234 1
a234 1
		initbasis/words \
@


1.29
log
@New bignum stuff
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.28 1995/08/10 09:37:27 matthew Exp $
d25 1
a25 1
all: pervasive.img lexer.img tty.img batch.img win.img
@


1.28
log
@Building a motif image
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.27 1995/07/20 12:02:45 jont Exp $
d45 3
d50 1
a50 2
		utils/bignum \
		utils/_bignum \
@


1.27
log
@Move _ident and __ident out of PARSERSYS
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.26 1995/07/19 16:22:33 jont Exp $
d230 19
d255 1
d257 1
d271 3
d290 2
a291 2
motif.img: lexer.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(MOTIFMO)
	echo Cannot make motif.img
d307 6
a312 2
motif2.img: shell.img $(INTERMO) $(MOTIFMO) 
	echo Cannot make motif.img
@


1.26
log
@Add new scons module, plus some rearrangements
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.25 1995/07/18 10:00:22 jont Exp $
d35 1
a35 3
 		system/__path \
		basics/_ident \
		basics/__ident
@


1.25
log
@Some rearrangements to allow bignum to be called by the _ident
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.24 1995/06/23 14:36:33 jont Exp $
d36 8
a43 1
		machine/i386types \
d52 4
a55 8
		basics/_ident \
		basics/__ident

INTERSYS = 	main/stack_interface \
		machine/_stack_interface \
		machine/__stack_interface

COMPILER1 =	make/os \
@


1.24
log
@Change i386 to machine
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.23 1995/06/23 14:21:21 jont Exp $
d35 12
a46 1
 		system/__path
a80 9
		machine/i386types \
		machine/_i386types \
		machine/__i386types \
		main/machspec \
		machine/_i386spec \
		machine/__machspec \
		utils/bignum \
		utils/_bignum \
		utils/__bignum \
@


1.23
log
@Get FILESYS right for NT
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.22 1995/05/31 09:55:32 matthew Exp $
d38 2
a39 2
		i386/_stack_interface \
		i386/__stack_interface
@


1.22
log
@Moving __primitives and dependencies to GNUmake
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.21 1995/05/03 15:44:23 jont Exp $
d25 1
a25 1
all: pervasive.img lexer.img tty.img batch.img
d27 1
a27 1
RUNTIME =	$(SRC)/rts/MLWorks.exe
d118 2
a119 2
		unix/_unixfilesys \
		unix/__filesys
d258 1
a258 1
	$(MAKE) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" tty2.img
d261 1
a261 1
	$(MAKE) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" win2.img
d291 1
a291 1
	$(MAKE) RUNTIME=$(RUNTIME) RUNTIMEOPTS="$(RUNTIMEOPTS)" batch.img
@


1.21
log
@Add support to make basis.img
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.20 1995/04/20 19:45:50 daveb Exp $
a43 17
		utils/text \
		utils/_text \
		utils/__text \
		utils/diagnostic \
		utils/_diagnostic \
		main/pervasives \
		main/_pervasives \
		main/__pervasives \
		lambda/lambdatypes \
		lambda/_lambdatypes \
		lambda/__lambdatypes \
		lambda/environtypes \
		lambda/_environtypes \
		lambda/__environtypes \
		lambda/environ \
		lambda/_environ \
		lambda/__environ \
a58 3
		main/primitives \
		main/_primitives \
		main/__primitives \
a91 1
		lambda/__simplelambda \
@


1.20
log
@path and filesys moved from utils to initbasis.
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.19 1995/03/20 10:59:07 matthew Exp $
d41 1
a41 1
COMPILER =	make/os \
d136 7
a142 5
		lambda/__auglambda \
		initbasis/filesys \
		system/_win_ntfilesys \
		system/__filesys \
		main/io \
@


1.19
log
@Adding stack_interface files
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.18 1995/03/15 18:13:45 jont Exp $
d33 1
a33 1
 		utils/path \
d137 1
a137 1
		utils/filesys \
@


1.18
log
@Ensure correct rts, make and options are used in submakes
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.17 1995/03/02 14:44:43 matthew Exp $
d36 4
@


1.17
log
@Various changes
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.16 1995/02/13 13:20:19 jont Exp $
d247 2
d259 3
d273 4
a276 1
	make tty2.img
d288 7
d298 2
d306 1
a306 1
	make batch.img
@


1.16
log
@Minor rearrangement
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.15 1995/02/10 13:55:11 jont Exp $
a74 2
		utils/delayed_newhashtable \
		utils/_delayed_newhashtable \
a75 1
		lambda/lambdautils \
d81 2
a83 3
		lambda/_lambdautils \
		lambda/__lambdautils \
		utils/__delayed_newhashtable \
a108 19
		lambda/optimise_lib \
		lambda/_optimise_lib \
		lambda/__optimise_lib \
		lambda/optimise_contract \
		lambda/_optimise_contract \
		lambda/__optimise_contract \
		lambda/optimise_beta \
		lambda/_optimise_beta \
		lambda/__optimise_beta \
		lambda/optimise_builtin \
		lambda/_optimise_builtin \
		lambda/__optimise_builtin \
		lambda/optimise_cse \
		lambda/_optimise_cse \
		lambda/__optimise_cse \
		lambda/optimise_lift \
		lambda/_optimise_lift \
		lambda/__optimise_lift \
		lambda/_lambdaoptimiser \
d125 5
a129 5
 		rts/gen/tags \
 		rts/gen/__tags \
 		debugger/debugger_utilities \
 		debugger/_debugger_utilities \
 		debugger/__debugger_utilities \
a150 1
		rts/gen/__implicit \
a162 1
		rts/gen/implicit \
a226 3
		lambda/lambdaio \
		lambda/_lambdaio \
		lambda/__lambdaio \
@


1.15
log
@Move all atrget to before others
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.14 1995/02/10 12:53:46 jont Exp $
a29 2
include ../../GNUmake

d269 2
@


1.14
log
@Add override for all target
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.13 1995/02/08 16:51:05 jont Exp $
d25 2
a274 2

all: pervasive.img lexer.img tty.img batch.img
@


1.13
log
@Split into generic and specific parts
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.12 1995/02/08 14:59:08 matthew Exp $
d273 2
@


1.12
log
@Removing typechecker files
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.11 1995/02/06 15:24:42 jont Exp $
a24 1
SRC =		../../..
d27 4
a30 74
COMPRESS =	compress -v
UNCOMPRESS =	uncompress
RM =		/bin/rm -f
CP =		/bin/cp
MKDIR =		/bin/mkdir
TMPDIR =	/tmp
DISTRIB =	/usr/sml/distribution/images
DISTRIBUTED =	pervasive.img batch.img motif.img
ADB =		adb
PERVASIVEDIR =	$(SRC)/pervasive
PERVASIVE =	__builtin_library bytearray bits array \
		string vector mlworks __pervasive_library 
PERVASIVEMO =	$(PERVASIVE:%=$(PERVASIVEDIR)/%.mo)
LEXER =		utils/print \
		utils/_print \
		utils/__print \
		utils/integer \
		utils/_integer \
		utils/__integer \
		utils/lists \
		utils/_lists \
		utils/__lists \
		utils/newmap \
		utils/mononewmap \
		utils/intnewmap \
		basics/location \
		basics/_location \
		basics/__location \
		main/info \
		main/_info \
		main/__info \
		utils/crash \
		utils/_crash \
		utils/__crash \
		utils/_b23tree \
		utils/__btree \
		utils/_intb23tree \
		utils/__intbtree \
		basics/symbol \
		basics/_symbol \
		basics/__symbol \
		basics/token \
		basics/_token \
		basics/__token \
		lexer/ndfa \
		lexer/_ndfa \
		lexer/__ndfa \
		lexer/regexp \
		lexer/_regexp \
		lexer/__regexp \
		lexer/inbuffer \
		lexer/_inbuffer \
		lexer/__inbuffer \
		main/options \
		main/_options \
		main/__options \
		lexer/lexrules \
		lexer/_lexrules \
		lexer/__lexrules \
		utils/timer \
		utils/__timer \
		lexer/lexer \
		lexer/_lexgen \
		lexer/__lexer

PARSER =	utils/map \
		basics/ident \
		basics/identprint \
		utils/set \
		utils/_set \
		utils/__set \
		utils/option \
		utils/__option \
		utils/getenv \
d35 1
a35 138
 		system/__path \
		basics/module_id \
		basics/_module_id \
		basics/__module_id \
		basics/absyn \
		parser/parserenv \
		parser/derived \
		parser/parser \
 		parser/LRbasics \
 		parser/actionfunctions \
 		parser/LRparser \
		parser/_parser \
		utils/_map \
		utils/__map \
		basics/_ident \
		basics/__ident \
		basics/_identprint \
		basics/__identprint \
		utils/counter \
		utils/_counter \
		typechecker/simpletypes \
		typechecker/_simpletypes \
		typechecker/__simpletypes \
		typechecker/datatypes \
		typechecker/_datatypes \
		typechecker/__datatypes \
 		debugger/runtime_env \
 		debugger/_runtime_env \
 		debugger/__runtime_env \
		basics/_absyn \
		basics/__absyn \
		parser/_parserenv \
		parser/__parserenv \
		parser/_derived \
		parser/__derived \
 		parser/_LRbasics \
 		parser/_LRparser \
 		parser/_actionfunctions \
 		parser/__LRbasics \
 		parser/__actionfunctions \
 		parser/__LRparser \
		parser/__parser

TYPER =		utils/hashset \
		utils/_hashset \
		lambda/pretty \
		lambda/_pretty \
		lambda/__pretty \
		utils/sexpr \
		utils/_sexpr \
		utils/__sexpr \
		typechecker/types \
		typechecker/_types \
		typechecker/__types \
		basics/absynprint \
		basics/_absynprint \
		basics/__absynprint \
		lambda/topdecprint \
		lambda/_topdecprint \
		lambda/__topdecprint \
		typechecker/namehash \
		typechecker/_namehash \
		typechecker/__namehash \
		typechecker/strnames \
		typechecker/_strnames \
		typechecker/__strnames \
		typechecker/namesettypes \
		typechecker/_namesettypes \
		typechecker/__namesettypes \
		typechecker/basistypes \
		typechecker/_basistypes \
		typechecker/__basistypes \
		typechecker/unify \
		typechecker/_unify \
		typechecker/__unify \
		utils/newhashtable \
		utils/_newhashtable \
		utils/__newhashtable \
		typechecker/completion \
		typechecker/_completion \
		typechecker/__completion \
		typechecker/scheme \
		typechecker/_scheme \
		typechecker/__scheme \
		typechecker/valenv \
		typechecker/_valenv \
		typechecker/__valenv \
		typechecker/tyenv \
		typechecker/_tyenv \
		typechecker/__tyenv \
		typechecker/strenv \
		typechecker/_strenv \
		typechecker/__strenv \
		typechecker/environment \
		typechecker/_environment \
		typechecker/__environment \
		typechecker/nameset \
		typechecker/_nameset \
		typechecker/__nameset \
		typechecker/sigma \
		typechecker/_sigma \
		typechecker/__sigma \
		typechecker/basis \
		typechecker/_basis \
		typechecker/__basis \
		typechecker/type_exp \
		typechecker/_type_exp \
		typechecker/__type_exp \
		typechecker/assemblies \
		typechecker/_assemblies \
		typechecker/__assemblies \
		typechecker/control_unify \
		typechecker/_control_unify \
		typechecker/__control_unify \
		typechecker/context_print \
		typechecker/_context_print \
		typechecker/__context_print \
		typechecker/patterns \
		typechecker/_patterns \
		typechecker/__patterns \
		typechecker/core_rules \
		typechecker/_core_rules \
		typechecker/__core_rules \
		typechecker/sharetypes \
		typechecker/_sharetypes \
		typechecker/__sharetypes \
		typechecker/share \
		typechecker/_share \
		typechecker/__share \
		typechecker/realise \
		typechecker/_realise \
		typechecker/__realise \
		typechecker/type_debugger \
		typechecker/_type_debugger \
		typechecker/__type_debugger \
		typechecker/mod_rules \
		typechecker/_mod_rules \
		typechecker/__mod_rules
d260 2
a261 3
		main/__preferences

BATCH =		make/recompile \
d268 1
a268 130
		main/__user_options \
		main/batch \
		main/_batch \
		main/__batch

SHELLSRC =	debugger/get_type_information \
		debugger/_get_type_information \
		debugger/__get_type_information \
		interpreter/inter_envtypes \
		interpreter/_inter_envtypes \
		interpreter/__inter_envtypes \
		debugger/value_printer_utilities \
		debugger/_value_printer_utilities \
		debugger/__value_printer_utilities \
		debugger/value_printer \
		debugger/_value_printer \
		debugger/__value_printer \
		main/compiler \
		main/_compiler \
		main/__compiler \
		interpreter/interload \
		interpreter/_interload \
		interpreter/__interload \
		interpreter/intermake \
		interpreter/_intermake \
		interpreter/__intermake \
		interpreter/incremental \
		interpreter/_incremental \
		interpreter/__incremental

INTERSRC =	editor/editor \
		editor/_editor \
		editor/__editor \
		main/version \
		main/__version \
		main/user_options \
		main/_user_options \
		main/__user_options \
		debugger/newtrace \
		debugger/_newtrace \
		debugger/__newtrace \
		interpreter/shell_types \
		interpreter/_shell_types \
		interpreter/__shell_types \
		interpreter/interprint \
		interpreter/_interprint \
		interpreter/__interprint \
		interpreter/shell_utils \
		interpreter/_shell_utils \
		interpreter/__shell_utils \
	        debugger/debugger_print \
		debugger/_debugger_print \
	        debugger/__debugger_print \
		debugger/ml_debugger \
		debugger/_ml_debugger \
		debugger/__ml_debugger \
		make/recompile \
		make/_recompile \
		make/__recompile \
		interpreter/action_queue \
		interpreter/_action_queue \
		interpreter/__action_queue \
		interpreter/inspector_values \
		interpreter/_inspector_values \
		interpreter/__inspector_values \
		interpreter/inspector \
		interpreter/_inspector \
		interpreter/__inspector \
		interpreter/shell_structure \
		interpreter/_shell_structure \
		interpreter/__shell_structure \
		interpreter/shell \
		interpreter/_shell \
		interpreter/__shell \
		interpreter/tty_listener \
		interpreter/_tty_listener \
		interpreter/__tty_listener

TTYSRC =	interpreter/interpreter

MOTIFSRC =	library/xm \
		library/_xm \
		library/__xm \
		motif/menus \
		motif/_menus \
		motif/__menus \
		motif/tooldata \
		motif/_tooldata \
		motif/__tooldata \
		motif/motif_utils \
		motif/_motif_utils \
		motif/__motif_utils \
		motif/input \
		motif/_input \
		motif/__input \
		motif/output \
		motif/_output \
		motif/__output \
		motif/inspector_tool \
		motif/_inspector_tool \
		motif/__inspector_tool \
		motif/debugger_window \
		motif/_debugger_window \
		motif/__debugger_window \
		motif/error_browser \
		motif/_error_browser \
		motif/__error_browser \
		motif/fileselect \
		motif/_fileselect \
		motif/__fileselect \
		motif/file_dialog \
		motif/_file_dialog \
		motif/__file_dialog \
		motif/evaluator \
		motif/_evaluator \
		motif/__evaluator \
		motif/browser_tool \
		motif/_browser_tool \
		motif/__browser_tool \
		motif/listener \
		motif/podium \
	 	motif/_listener \
		motif/_podium \
	 	motif/__listener \
		motif/__podium \
		interpreter/xinterpreter

TAGS =		ml_utils/mltags

ETAGS =		ml_utils/mletags
a269 12
SCRIPT =	utils/option \
		utils/__option \
		main/io \
		main/_io \
		main/__io \
		ml_utils/script

ARSRC =		utils/lists \
		utils/_lists \
		utils/__lists \
		ml_utils/ml_ar

a270 14

LEXERMO =	$(LEXER:%=$(SRC)/%.mo)
PARSERMO =	$(PARSER:%=$(SRC)/%.mo)
TYPERMO =	$(TYPER:%=$(SRC)/%.mo)
COMPILERMO =	$(COMPILER:%=$(SRC)/%.mo)
BATCHMO =	$(BATCH:%=$(SRC)/%.mo)
SHELLMO =	$(SHELLSRC:%=$(SRC)/%.mo)
INTERMO =	$(INTERSRC:%=$(SRC)/%.mo)
TTYMO =		$(TTYSRC:%=$(SRC)/%.mo)
MOTIFMO =	$(MOTIFSRC:%=$(SRC)/%.mo)
SCRIPTMO =	$(SCRIPT:%=$(SRC)/%.mo)
TAGSMO =	$(TAGS:%=$(SRC)/%.mo)
ETAGSMO =	$(ETAGS:%=$(SRC)/%.mo)
ARMO =		$(ARSRC:%=$(SRC)/%.mo)
a273 29

.PRECIOUS: pervasive.img lexer.img shell.img motif.img batch.img
.SILENT:

all: pervasive.img lexer.img tty.img batch.img

profile:
	make RUNTIMEOPTS="-verbose -c 2 -profile -profile-frequency 100"

clean:
	echo $(RM) *.img
	$(RM) *.img

backup:
	echo 'make: moving *.img to *.img~'
	for image in *.img; do mv $$image $$image~; done

lexer-files: force
	echo $(LEXERMO) > $@@

pervasive-files: force
	echo $(PERVASIVEMO) > $@@

parser-files:	force
	echo $(PARSERMO) > $@@

batch-files: force
	echo $(COMPILERMO) $(BATCHMO) > $@@

a279 6
motif-files: force
	echo $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(MOTIFMO) > motif-files

motif2-files: force
	echo $(INTERMO) $(MOTIFMO) > motif2-files

a282 32
tags-files: force
	echo $(TAGSMO) > tags-files

etags-files: force
	echo $(ETAGSMO) > etags-files

script-files: force
	echo $(SCRIPTMO) > script-files

ar-files: force
	echo $(ARMO) > ar-files

pervasive.img: $(PERVASIVEMO)
	echo make: $@@
	$(RUNTIME) $(RUNTIMEOPTS) -save $@@ $(PERVASIVEMO)

lexer.img: pervasive.img $(LEXERMO)
	echo make: $@@
	$(RUNTIME) $(RUNTIMEOPTS) -load pervasive.img -save $@@ $(LEXERMO)

parser.img: lexer.img $(PARSERMO)
	echo make: $@@
	$(RUNTIME) $(RUNTIMEOPTS) -load lexer.img -save $@@ $(PARSERMO)

typechecker.img: lexer.img $(PARSERMO) $(TYPERMO)
	echo make: $@@
	$(RUNTIME) $(RUNTIMEOPTS) -pass args -parser_tables $(SRC)/parser/ml-tables/ args -save $@@ -load lexer.img $(PARSERMO) $(TYPERMO)

batch.img: typechecker.img $(COMPILERMO) $(BATCHMO)
	echo make: $@@
	$(RUNTIME) $(RUNTIMEOPTS) -pass wombats -verbose -save $@@ wombats -load typechecker.img $(COMPILERMO) $(BATCHMO)

a294 2
#	echo make: $@@ from lexer.img
#	export MLWORKS_PERVASIVE;MLWORKS_PERVASIVE=`pwd`/$(SRC)/pervasive/;echo 'Shell.save_image "tty.img";' | $(RUNTIME) $(RUNTIMEOPTS) -load lexer.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(TTYMO)
a297 2
#	echo make: $@@ from lexer.img
#	export MLWORKS_PERVASIVE;MLWORKS_PERVASIVE=`pwd`/$(SRC)/pervasive/;echo 'Shell.save_image "motif.img";' | $(RUNTIME) $(RUNTIMEOPTS) -load lexer.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(MOTIFMO)
a307 14
#	echo make: $@@ from shell.img
#	echo 'Shell.save_image "motif.img";' | $(RUNTIME) $(RUNTIMEOPTS) -load shell.img $(INTERMO) $(MOTIFMO)

mltags.img: lexer.img $(TAGSMO)
	echo make: $@@ from lexer.img
	$(RUNTIME) $(RUNTIMEOPTS) -pass wombats -save $@@ wombats -load lexer.img $(TAGSMO)

mletags.img: lexer.img ../ml_utils/mletags.mo
	echo make: $@@ from lexer.img
	$(RUNTIME) $(RUNTIMEOPTS) -pass wombats -save $@@ wombats -load lexer.img $(ETAGSMO)

script.img: lexer.img $(SCRIPTMO)
	echo make: $@@ from lexer.img
	$(RUNTIME) $(RUNTIMEOPTS) -pass wombats -save $@@ wombats -load lexer.img $(SCRIPTMO)
a308 4
ml_ar.img: pervasive.img $(ARMO)
	echo make: $@@ from pervasive.img
	$(RUNTIME) $(RUNTIMEOPTS) -pass wombats -save $@@ wombats -load pervasive.img $(ARMO)

a325 8
distribution:
	$(RM) -r $(DISTDIR)/images
	$(MKDIR) $(DISTDIR)/images
	$(COMPRESS) $(DISTRIBUTED)
	$(CP) $(DISTRIBUTED:%=%.Z) $(DISTDIR)/images
	$(UNCOMPRESS) $(DISTRIBUTED)

force:
@


1.11
log
@Problems making cat.mo
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.10 1995/02/06 14:23:03 jont Exp $
a125 2
		utils/_debug \
		utils/__debug \
a156 2
		typechecker/ty_debug \
		typechecker/__ty_debug \
a177 3
		typechecker/tyvarenv \
		typechecker/_tyvarenv \
		typechecker/__tyvarenv \
a192 3
		typechecker/tystr \
		typechecker/_tystr \
		typechecker/__tystr \
a207 9
		typechecker/phi \
		typechecker/_phi \
		typechecker/__phi \
		typechecker/sigenv \
		typechecker/_sigenv \
		typechecker/__sigenv \
		typechecker/funenv \
		typechecker/_funenv \
		typechecker/__funenv \
@


1.10
log
@Problems with making cat.img
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.9 1995/02/03 16:29:15 jont Exp $
d792 1
a792 1
	echo $(RUNTIME) $(RUNTIMEOPTS) -load batch.img -pass wombats -compile $(CATSML) wombats > spong.crf
d795 1
a795 1
	cmd/c spong.bat
@


1.9
log
@Work on shell.img build to avoid problems with rts path
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.8 1995/02/02 18:42:25 jont Exp $
d736 1
a736 2
	sed -e "s,^,@@set MLWORKS_PERVASIVE=,;s,$$,\\$(SRC)\\pervasive," spong.crf > spong.bat
	cmd /c spong.bat
d738 2
a739 1
	sed -e "s,$$, -load typechecker.img -save $@@ -from shell-files,;s,/,\\,g" spong.crf > spong.bat
d741 1
a741 1
	rm spong.crf spong.bat
d785 1
a785 1
$(CATMO): $(CATSML) batch.img
d787 1
d789 1
a789 2
	sed -e "s,^,@@set MLWORKS_PERVASIVE=,;s,$$,\\$(SRC)\\pervasive," spong.crf > spong.bat
	cmd /c spong.bat
d791 6
a796 4
	sed -e "s,^,@@set MLWORKS_SRC_PATH=,;s,$$,\\$(SRC)," spong.crf > spong.bat
	cmd /c spong.bat
	$(RUNTIME) $(RUNTIMEOPTS) -load batch.img -pass wombats -compile $(CATSML) wombats
	rm spong.crf spong.bat
@


1.8
log
@Make shell.img depend on shell-files
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.7 1995/02/02 17:57:18 jont Exp $
d655 1
d657 1
d661 1
a661 1
all: pervasive.img lexer.img motif.img batch.img
d689 2
a690 2
tty-files: force
	echo $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(TTYMO) > tty-files
a734 2
	echo set MLWORKS_PERVASIVE= > spong.crf
	sed -e "s,$$, ^," spong.crf > spong1.crf
d736 6
a741 7
	sed -e "s,$$,\\..\\..\\..\\pervasive," spong.crf > spong2.crf
	echo $(RUNTIME) $(RUNTIMEOPTS) > spong.crf
	sed -e "s,$$, ^," spong.crf > spong3.crf
	echo -load typechecker.img -save $@@ -from shell-files > spong4.crf
	cmd /c "copy spong1.crf+spong2.crf+spong3.crf+spong4.crf poo.bat"
	cat poo.bat
	cmd /c poo.bat
d744 8
a751 6
	echo make: $@@ from lexer.img
	export MLWORKS_PERVASIVE;MLWORKS_PERVASIVE=`pwd`/$(SRC)/pervasive/;echo 'Shell.save_image "tty.img";' | $(RUNTIME) $(RUNTIMEOPTS) -load lexer.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(TTYMO)

motif.img: lexer.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(MOTIFMO) 
	echo make: $@@ from lexer.img
	export MLWORKS_PERVASIVE;MLWORKS_PERVASIVE=`pwd`/$(SRC)/pervasive/;echo 'Shell.save_image "motif.img";' | $(RUNTIME) $(RUNTIMEOPTS) -load lexer.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(MOTIFMO)
d753 1
a753 1
tty2.img: shell.img $(INTERMO) $(TTYMO)
d755 4
a758 2
	echo Shell.save_image "tty.img"; > poo.crf
	$(RUNTIME) $(RUNTIMEOPTS) -load shell.img -from tty2-files < poo.crf
d761 3
a763 2
	echo make: $@@ from shell.img
	echo 'Shell.save_image "motif.img";' | $(RUNTIME) $(RUNTIMEOPTS) -load shell.img $(INTERMO) $(MOTIFMO)
d784 11
@


1.7
log
@Get typechecker.img build right
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.6 1995/02/02 17:53:30 jont Exp $
d731 1
a731 1
shell.img: typechecker.img $(COMPILERMO) $(SHELLMO)
@


1.6
log
@More filename mods
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.4 1995/02/02 17:26:50 jont Exp $
d725 1
a725 1
	$(RUNTIME) $(RUNTIMEOPTS) -save $@@ -load lexer.img $(PARSERMO) $(TYPERMO)
@


1.5
log
@More filename mods
@
text
@a109 3
 		debugger/runtime_env \
 		debugger/_runtime_env \
 		debugger/__runtime_env \
@


1.4
log
@More filename mods
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.3 1995/02/02 17:05:37 jont Exp $
d137 3
a139 3
		debugger/debugger_env \
		debugger/_debugger_env \
		debugger/__debugger_env \
@


1.3
log
@Sort out ml utils, and filenames
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.2 1995/02/02 16:35:50 jont Exp $
d105 2
a106 2
 		unix/_win_ntpath \
 		unix/__path \
d387 2
a388 2
		unix/_unixfilesys \
		unix/__filesys \
@


1.2
log
@Modifications to get directory structure right
@
text
@d20 1
a20 1
# $Id: I386:NT:Makefile,v 1.1 1995/02/02 16:00:45 jont Exp $
d104 3
a106 3
		utils/filename \
		system/_win_ntfilename \
		system/__filename \
d110 3
d378 5
a382 3
		debugger/debugger_type_utilities \
		debugger/_debugger_type_utilities \
		debugger/__debugger_type_utilities \
d386 3
a464 2
		rts/gen/tags \
		rts/gen/__tags \
d764 1
a764 1
mltags.img: lexer.img ../ml_utils/mltags.mo
d766 1
a766 1
	$(RUNTIME) $(RUNTIMEOPTS) -pass wombats -save $@@ wombats -load lexer.img ../ml_utils/mltags.mo
d770 1
a770 1
	$(RUNTIME) $(RUNTIMEOPTS) -pass wombats -save $@@ wombats -load lexer.img ../ml_utils/mltags.mo
@


1.1
log
@new unit
No reason given
@
text
@d20 1
a20 1
# $Id: Makefile,v 1.8 1994/12/09 13:32:06 jont Exp $
d25 2
a26 1
RUNTIME =	../rts/runtime-g
a36 1
SRC =		..
d620 4
d648 2
d696 6
d733 1
a733 1
	sed -e "s,$$,\\..\\pervasive," spong.crf > spong2.crf
d743 1
a743 1
	export MLWORKS_PERVASIVE;MLWORKS_PERVASIVE=`pwd`/../pervasive/;echo 'Shell.save_image "tty.img";' | $(RUNTIME) $(RUNTIMEOPTS) -load lexer.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(TTYMO)
d747 1
a747 1
	export MLWORKS_PERVASIVE;MLWORKS_PERVASIVE=`pwd`/../pervasive/;echo 'Shell.save_image "motif.img";' | $(RUNTIME) $(RUNTIMEOPTS) -load lexer.img $(PARSERMO) $(TYPERMO) $(COMPILERMO) $(SHELLMO) $(INTERMO) $(MOTIFMO)
@
