head	1.15;
access;
symbols
	MLW_daveb_inline_1_4_99:1.15.11
	MLWorks_21c0_1999_03_25:1.15
	MLWorks_20c1_1998_08_20:1.15
	MLWorks_20c0_1998_08_04:1.15
	MLWorks_20b2c2_1998_06_19:1.15
	MLWorks_20b2_Windows_1998_06_12:1.15
	MLWorks_20b1c1_1998_05_07:1.15
	MLWorks_20b0_1998_04_07:1.15
	MLWorks_20b0_1998_03_20:1.15
	MLWorks_20m2_1998_02_16:1.15
	MLWorks_20m1_1997_10_23:1.15
	MLWorks_11r1:1.15.8.1.1.1.1
	MLWorks_workspace_97:1.15.10
	MLWorks_dt_wizard:1.15.9
	MLWorks_11c0_1997_09_09:1.15.8.1.1.1
	MLWorks_10r3:1.15.8.1.3
	MLWorks_10r2_551:1.15.8.1.2
	MLWorks_11:1.15.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.15.8.1
	MLWorks_20m0_1997_06_20:1.15
	MLWorks_1_0_r2c2_1997_06_14:1.15.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.15.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.15.8
	MLWorks_BugFix_1997_04_24:1.15
	MLWorks_1_0_r2_Win32_1997_04_11:1.15
	MLWorks_1_0_r2_Unix_1997_04_04:1.15
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.15.6.1.1
	MLWorks_gui_1996_12_18:1.15.7
	MLWorks_1_0_Win32_1996_12_17:1.15.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.15.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.15.4.1
	MLWorks_1_0_Irix_1996_11_28:1.15.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.15.5
	MLWorks_1_0_Unix_1996_11_14:1.15.4
	MLWorks_Open_Beta2_1996_10_11:1.15.3
	MLWorks_License_dev:1.15.2
	MLWorks_1_open_beta_1996_09_13:1.15.1
	MLWorks_Open_Beta_1996_08_22:1.15
	MLWorks_Beta_1996_07_02:1.15
	MLWorks_Beta_1996_06_07:1.15
	MLWorks_Beta_1996_06_06:1.15
	MLWorks_Beta_1996_06_05:1.15
	MLWorks_Beta_1996_06_03:1.15
	MLWorks_Beta_1996_05_31:1.15
	MLWorks_Beta_1996_05_30:1.15
	ML_beta_release_12/08/94:1.14
	ML_beta_release_03/08/94:1.14
	ML_revised_beta_release_25/05/94:1.14
	ML_final_beta_release_02/03/94:1.14
	mlworks-28-01-1994:1.14
	Release:1.14
	mlworks-beta-01-09-1993:1.14
	MLWorks-1-0-4-29/01/1993:1.9
	MLWorks-1-0-3-21/12/1992:1.9
	MLWorks-1-0-2-15/12/1992:1.9
	MLWorks-1-0-1-04/12/1992:1.9
	checkpoint_17_08_92:1.3;
locks; strict;
comment	@ * @;


1.15
date	96.02.23.17.44.13;	author jont;	state Exp;
branches
	1.15.1.1
	1.15.2.1
	1.15.3.1
	1.15.4.1
	1.15.5.1
	1.15.6.1
	1.15.7.1
	1.15.8.1
	1.15.9.1
	1.15.10.1
	1.15.11.1;
next	1.14;

1.14
date	93.07.05.13.47.34;	author daveb;	state Exp;
branches
	1.14.1.1;
next	1.13;

1.13
date	93.04.26.16.29.01;	author jont;	state Exp;
branches;
next	1.12;

1.12
date	93.03.11.10.24.12;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	93.03.04.18.08.25;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	93.02.04.14.32.27;	author matthew;	state Exp;
branches;
next	1.9;

1.9
date	92.11.25.14.47.38;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	92.11.20.16.09.36;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	92.10.13.12.52.02;	author richard;	state Exp;
branches;
next	1.6;

1.6
date	92.09.10.16.56.42;	author richard;	state Exp;
branches;
next	1.5;

1.5
date	92.08.26.15.13.11;	author richard;	state Exp;
branches;
next	1.4;

1.4
date	92.08.19.10.49.54;	author clive;	state Exp;
branches;
next	1.3;

1.3
date	92.08.13.14.12.16;	author clive;	state Exp;
branches;
next	1.2;

1.2
date	92.06.19.16.27.52;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	92.06.17.16.04.15;	author jont;	state Exp;
branches;
next	;

1.14.1.1
date	93.07.05.13.47.34;	author jont;	state Exp;
branches;
next	;

1.15.1.1
date	96.09.13.11.15.37;	author hope;	state Exp;
branches;
next	;

1.15.2.1
date	96.10.07.16.05.50;	author hope;	state Exp;
branches;
next	;

1.15.3.1
date	96.10.17.11.24.07;	author hope;	state Exp;
branches;
next	;

1.15.4.1
date	96.11.14.12.48.38;	author hope;	state Exp;
branches
	1.15.4.1.1.1;
next	;

1.15.4.1.1.1
date	96.11.28.15.00.09;	author hope;	state Exp;
branches;
next	;

1.15.5.1
date	96.11.22.18.08.30;	author hope;	state Exp;
branches;
next	;

1.15.6.1
date	96.12.17.17.47.11;	author hope;	state Exp;
branches
	1.15.6.1.1.1;
next	;

1.15.6.1.1.1
date	97.02.24.11.36.53;	author hope;	state Exp;
branches;
next	;

1.15.7.1
date	96.12.18.09.41.11;	author hope;	state Exp;
branches;
next	;

1.15.8.1
date	97.05.12.10.33.38;	author hope;	state Exp;
branches
	1.15.8.1.1.1
	1.15.8.1.2.1
	1.15.8.1.3.1;
next	;

1.15.8.1.1.1
date	97.07.28.18.19.05;	author daveb;	state Exp;
branches
	1.15.8.1.1.1.1.1;
next	;

1.15.8.1.1.1.1.1
date	97.10.07.11.44.14;	author jkbrook;	state Exp;
branches;
next	;

1.15.8.1.2.1
date	97.09.08.17.12.42;	author daveb;	state Exp;
branches;
next	;

1.15.8.1.3.1
date	97.09.09.14.08.21;	author daveb;	state Exp;
branches;
next	;

1.15.9.1
date	97.09.10.19.23.27;	author brucem;	state Exp;
branches;
next	;

1.15.10.1
date	97.09.11.20.54.29;	author daveb;	state Exp;
branches;
next	;

1.15.11.1
date	99.04.01.17.56.41;	author daveb;	state Exp;
branches;
next	;


desc
@Value environment for interpreter
@


1.15
log
@newmap becomes map, NEWMAP becomes MAP
@
text
@(* inter_envtypes.sml the signature *)
(*
$Log: inter_envtypes.sml,v $
 * Revision 1.14  1993/07/05  13:47:34  daveb
 * Removed exception environments.  Also removed add_*_list functions.
 *
Revision 1.13  1993/04/26  16:29:01  jont
Added remove_str for getting rid of FullPervasiveLibrary_ from initial env

Revision 1.12  1993/03/11  10:24:12  matthew
Signature revisions

Revision 1.11  1993/03/04  18:08:25  matthew
Options & Info changes

Revision 1.10  1993/02/04  14:32:27  matthew
Added sharing.

Revision 1.9  1992/11/25  14:47:38  daveb
Changes to make show_id_class and show_eq_info part of Info structure
instead of references.

Revision 1.8  1992/11/20  16:09:36  jont
Modified sharing constraints to remove superfluous structures

Revision 1.7  1992/10/13  12:52:02  richard
Added print.
Changed the type of augment_with_module so it doesn't reveal the
structure of module results.

Revision 1.6  1992/09/10  16:56:42  richard
Added augment_with_module.

Revision 1.5  1992/08/26  15:13:11  richard
Rationalisation of the MLWorks structure.

Revision 1.4  1992/08/19  10:49:54  clive
Changes to reflect pervasive_library changes

Revision 1.3  1992/08/13  14:12:16  clive
Changes to reflect lower level sharing changes

Revision 1.2  1992/06/19  16:27:52  jont
Fixed the source errors

Revision 1.1  1992/06/17  16:04:15  jont
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

require "../main/options";
require "../lambda/environtypes";

signature INTER_ENVTYPES =
  sig
    structure EnvironTypes : ENVIRONTYPES
    structure Options : OPTIONS

    datatype inter_env =
      INTER_ENV of
      (EnvironTypes.LambdaTypes.Ident.ValId, MLWorks.Internal.Value.ml_value) EnvironTypes.NewMap.map * (* VARs *)
      (EnvironTypes.LambdaTypes.Ident.StrId, MLWorks.Internal.Value.ml_value) EnvironTypes.NewMap.map * (* STRs *)
      (EnvironTypes.LambdaTypes.Ident.FunId, MLWorks.Internal.Value.ml_value) EnvironTypes.NewMap.map (* FUNs *)

    val empty_env : inter_env

    val lookup_val : EnvironTypes.LambdaTypes.Ident.ValId * inter_env -> MLWorks.Internal.Value.ml_value
    val lookup_str : EnvironTypes.LambdaTypes.Ident.StrId * inter_env -> MLWorks.Internal.Value.ml_value
    val lookup_fun : EnvironTypes.LambdaTypes.Ident.FunId * inter_env -> MLWorks.Internal.Value.ml_value

    val add_val : inter_env * (EnvironTypes.LambdaTypes.Ident.ValId * MLWorks.Internal.Value.ml_value) -> inter_env
    val add_str : inter_env * (EnvironTypes.LambdaTypes.Ident.StrId * MLWorks.Internal.Value.ml_value) -> inter_env
    val add_fun : inter_env * (EnvironTypes.LambdaTypes.Ident.FunId * MLWorks.Internal.Value.ml_value) -> inter_env

    val remove_str : inter_env * (EnvironTypes.LambdaTypes.Ident.StrId) -> inter_env

    val augment : inter_env * inter_env -> inter_env

    exception Augment
    val augment_with_module :
      inter_env * EnvironTypes.Top_Env * MLWorks.Internal.Value.T -> inter_env

    val print : Options.print_options -> ('a * string -> 'a) -> ('a * inter_env) -> 'a

  end
@


1.15.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.15  1996/02/23  17:44:13  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.15.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.15  1996/02/23  17:44:13  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.15.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.15  1996/02/23  17:44:13  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.15.8.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1996/02/23  17:44:13  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.15.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.15.8.1  1997/05/12  10:33:38  hope
 * branched from 1.15
 *
@


1.15.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.15.8.1  1997/05/12  10:33:38  hope
 * branched from 1.15
 *
@


1.15.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.15.8.1  1997/05/12  10:33:38  hope
 * branched from 1.15
 *
@


1.15.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.15.8.1.1.1  1997/07/28  18:19:05  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.15.7.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1996/02/23  17:44:13  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.15.6.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1996/02/23  17:44:13  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.15.6.1.1.1
log
@branched from 1.15.6.1
@
text
@a3 3
 * Revision 1.15.6.1  1996/12/17  17:47:11  hope
 * branched from 1.15
 *
@


1.15.5.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1996/02/23  17:44:13  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.15.4.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1996/02/23  17:44:13  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.15.4.1.1.1
log
@branched from 1.15.4.1
@
text
@a3 3
 * Revision 1.15.4.1  1996/11/14  12:48:38  hope
 * branched from 1.15
 *
@


1.15.3.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1996/02/23  17:44:13  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.15.2.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1996/02/23  17:44:13  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.15.1.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1996/02/23  17:44:13  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
@


1.14
log
@Removed exception environments.  Also removed add_*_list functions.
@
text
@d4 3
d62 3
a64 3
      (EnvironTypes.LambdaTypes.Ident.ValId, MLWorks.Internal.Value.ml_value) EnvironTypes.NewMap.T * (* VARs *)
      (EnvironTypes.LambdaTypes.Ident.StrId, MLWorks.Internal.Value.ml_value) EnvironTypes.NewMap.T * (* STRs *)
      (EnvironTypes.LambdaTypes.Ident.FunId, MLWorks.Internal.Value.ml_value) EnvironTypes.NewMap.T (* FUNs *)
@


1.14.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.14  1993/07/05  13:47:34  daveb
Removed exception environments.  Also removed add_*_list functions.

@


1.13
log
@Added remove_str for getting rid of FullPervasiveLibrary_ from initial env
@
text
@d4 3
a59 1
      (EnvironTypes.LambdaTypes.Ident.ValId, MLWorks.Internal.Value.ml_value) EnvironTypes.NewMap.T * (* EXNs *)
a65 1
    val lookup_exn : EnvironTypes.LambdaTypes.Ident.ValId * inter_env -> MLWorks.Internal.Value.ml_value
a69 1
    val add_exn : inter_env * (EnvironTypes.LambdaTypes.Ident.ValId * MLWorks.Internal.Value.ml_value) -> inter_env
a71 4
    val add_val_list : inter_env * (EnvironTypes.LambdaTypes.Ident.ValId * MLWorks.Internal.Value.ml_value) list -> inter_env
    val add_exn_list : inter_env * (EnvironTypes.LambdaTypes.Ident.ValId * MLWorks.Internal.Value.ml_value) list -> inter_env
    val add_str_list : inter_env * (EnvironTypes.LambdaTypes.Ident.StrId * MLWorks.Internal.Value.ml_value) list -> inter_env
    val add_fun_list : inter_env * (EnvironTypes.LambdaTypes.Ident.FunId * MLWorks.Internal.Value.ml_value) list -> inter_env
@


1.12
log
@Signature revisions
@
text
@d4 3
d76 2
@


1.11
log
@Options & Info changes
@
text
@d4 3
d53 4
a56 4
      (EnvironTypes.LambdaTypes.Datatypes.Ident.ValId, MLWorks.Internal.Value.ml_value) EnvironTypes.LambdaTypes.Datatypes.NewMap.T * (* VARs *)
      (EnvironTypes.LambdaTypes.Datatypes.Ident.ValId, MLWorks.Internal.Value.ml_value) EnvironTypes.LambdaTypes.Datatypes.NewMap.T * (* EXNs *)
      (EnvironTypes.LambdaTypes.Datatypes.Ident.StrId, MLWorks.Internal.Value.ml_value) EnvironTypes.LambdaTypes.Datatypes.NewMap.T * (* STRs *)
      (EnvironTypes.LambdaTypes.Datatypes.Ident.FunId, MLWorks.Internal.Value.ml_value) EnvironTypes.LambdaTypes.Datatypes.NewMap.T (* FUNs *)
d60 13
a72 13
    val lookup_val : EnvironTypes.LambdaTypes.Datatypes.Ident.ValId * inter_env -> MLWorks.Internal.Value.ml_value
    val lookup_exn : EnvironTypes.LambdaTypes.Datatypes.Ident.ValId * inter_env -> MLWorks.Internal.Value.ml_value
    val lookup_str : EnvironTypes.LambdaTypes.Datatypes.Ident.StrId * inter_env -> MLWorks.Internal.Value.ml_value
    val lookup_fun : EnvironTypes.LambdaTypes.Datatypes.Ident.FunId * inter_env -> MLWorks.Internal.Value.ml_value

    val add_val : inter_env * (EnvironTypes.LambdaTypes.Datatypes.Ident.ValId * MLWorks.Internal.Value.ml_value) -> inter_env
    val add_exn : inter_env * (EnvironTypes.LambdaTypes.Datatypes.Ident.ValId * MLWorks.Internal.Value.ml_value) -> inter_env
    val add_str : inter_env * (EnvironTypes.LambdaTypes.Datatypes.Ident.StrId * MLWorks.Internal.Value.ml_value) -> inter_env
    val add_fun : inter_env * (EnvironTypes.LambdaTypes.Datatypes.Ident.FunId * MLWorks.Internal.Value.ml_value) -> inter_env
    val add_val_list : inter_env * (EnvironTypes.LambdaTypes.Datatypes.Ident.ValId * MLWorks.Internal.Value.ml_value) list -> inter_env
    val add_exn_list : inter_env * (EnvironTypes.LambdaTypes.Datatypes.Ident.ValId * MLWorks.Internal.Value.ml_value) list -> inter_env
    val add_str_list : inter_env * (EnvironTypes.LambdaTypes.Datatypes.Ident.StrId * MLWorks.Internal.Value.ml_value) list -> inter_env
    val add_fun_list : inter_env * (EnvironTypes.LambdaTypes.Datatypes.Ident.FunId * MLWorks.Internal.Value.ml_value) list -> inter_env
@


1.10
log
@Added sharing.
@
text
@d4 3
d40 1
a40 1
require "../main/info";
d46 1
a46 3
    structure Info : INFO

    sharing Info.Location = EnvironTypes.LambdaTypes.Datatypes.Ident.Location
d77 1
a77 1
    val print : Info.options -> ('a * string -> 'a) -> ('a * inter_env) -> 'a
@


1.9
log
@Changes to make show_id_class and show_eq_info part of Info structure
instead of references.
@
text
@d4 4
d44 2
@


1.8
log
@Modified sharing constraints to remove superfluous structures
@
text
@d4 3
d33 1
d39 1
d70 1
a70 1
    val print : ('a * string -> 'a) -> ('a * inter_env) -> 'a
@


1.7
log
@Added print.
Changed the type of augment_with_module so it doesn't reveal the
structure of module results.
@
text
@d4 5
a29 2
require "../utils/newmap";
require "../basics/ident";
a33 2
    structure NewMap : NEWMAP
    structure Ident : IDENT
d38 4
a41 4
      (Ident.ValId, MLWorks.Internal.Value.ml_value) NewMap.T * (* VARs *)
      (Ident.ValId, MLWorks.Internal.Value.ml_value) NewMap.T * (* EXNs *)
      (Ident.StrId, MLWorks.Internal.Value.ml_value) NewMap.T * (* STRs *)
      (Ident.FunId, MLWorks.Internal.Value.ml_value) NewMap.T (* FUNs *)
d45 4
a48 4
    val lookup_val : Ident.ValId * inter_env -> MLWorks.Internal.Value.ml_value
    val lookup_exn : Ident.ValId * inter_env -> MLWorks.Internal.Value.ml_value
    val lookup_str : Ident.StrId * inter_env -> MLWorks.Internal.Value.ml_value
    val lookup_fun : Ident.FunId * inter_env -> MLWorks.Internal.Value.ml_value
d50 8
a57 8
    val add_val : inter_env * (Ident.ValId * MLWorks.Internal.Value.ml_value) -> inter_env
    val add_exn : inter_env * (Ident.ValId * MLWorks.Internal.Value.ml_value) -> inter_env
    val add_str : inter_env * (Ident.StrId * MLWorks.Internal.Value.ml_value) -> inter_env
    val add_fun : inter_env * (Ident.FunId * MLWorks.Internal.Value.ml_value) -> inter_env
    val add_val_list : inter_env * (Ident.ValId * MLWorks.Internal.Value.ml_value) list -> inter_env
    val add_exn_list : inter_env * (Ident.ValId * MLWorks.Internal.Value.ml_value) list -> inter_env
    val add_str_list : inter_env * (Ident.StrId * MLWorks.Internal.Value.ml_value) list -> inter_env
    val add_fun_list : inter_env * (Ident.FunId * MLWorks.Internal.Value.ml_value) list -> inter_env
@


1.6
log
@Added augment_with_module.
@
text
@d4 3
d62 3
a64 1
      inter_env * EnvironTypes.Top_Env * MLWorks.Internal.Value.T list -> inter_env
@


1.5
log
@Rationalisation of the MLWorks structure.
@
text
@d4 3
d24 1
d26 5
a30 3
signature INTER_ENVTYPES = sig
  structure NewMap : NEWMAP
  structure Ident : IDENT
d32 6
a37 6
  datatype inter_env =
    INTER_ENV of
    (Ident.ValId, MLWorks.Internal.Value.ml_value) NewMap.T * (* VARs *)
    (Ident.ValId, MLWorks.Internal.Value.ml_value) NewMap.T * (* EXNs *)
    (Ident.StrId, MLWorks.Internal.Value.ml_value) NewMap.T * (* STRs *)
    (Ident.FunId, MLWorks.Internal.Value.ml_value) NewMap.T (* FUNs *)
d39 1
a39 1
  val initial_env : inter_env
d41 4
a44 1
  val lookup_val : Ident.ValId * inter_env -> MLWorks.Internal.Value.ml_value
d46 8
a53 1
  val lookup_exn : Ident.ValId * inter_env -> MLWorks.Internal.Value.ml_value
d55 1
a55 1
  val lookup_str : Ident.StrId * inter_env -> MLWorks.Internal.Value.ml_value
d57 3
a59 1
  val lookup_fun : Ident.FunId * inter_env -> MLWorks.Internal.Value.ml_value
d61 1
a61 33
  val add_val :
    inter_env * (Ident.ValId * MLWorks.Internal.Value.ml_value) -> inter_env

  val add_exn :
    inter_env * (Ident.ValId * MLWorks.Internal.Value.ml_value) -> inter_env

  val add_str :
    inter_env * (Ident.StrId * MLWorks.Internal.Value.ml_value) -> inter_env

  val add_fun :
    inter_env * (Ident.FunId * MLWorks.Internal.Value.ml_value) -> inter_env

  val add_val_list :
    inter_env * (Ident.ValId * MLWorks.Internal.Value.ml_value) list -> inter_env

  val add_exn_list :
    inter_env * (Ident.ValId * MLWorks.Internal.Value.ml_value) list -> inter_env

  val add_str_list :
    inter_env * (Ident.StrId * MLWorks.Internal.Value.ml_value) list -> inter_env

  val add_fun_list :
    inter_env * (Ident.FunId * MLWorks.Internal.Value.ml_value) list -> inter_env

  val augment : inter_env * inter_env -> inter_env
(*
  datatype top_element =
    REAL of real |
    STRING of string |
    INT_CODE of string | (* The internal pieces of code *)
    EXT_CODE of store_value (* The external references *)
*)
end
@


1.4
log
@Changes to reflect pervasive_library changes
@
text
@d4 3
d28 4
a31 4
    (Ident.ValId, MLWorks.System.Unsafe.Value.ml_value) NewMap.T * (* VARs *)
    (Ident.ValId, MLWorks.System.Unsafe.Value.ml_value) NewMap.T * (* EXNs *)
    (Ident.StrId, MLWorks.System.Unsafe.Value.ml_value) NewMap.T * (* STRs *)
    (Ident.FunId, MLWorks.System.Unsafe.Value.ml_value) NewMap.T (* FUNs *)
d35 1
a35 1
  val lookup_val : Ident.ValId * inter_env -> MLWorks.System.Unsafe.Value.ml_value
d37 1
a37 1
  val lookup_exn : Ident.ValId * inter_env -> MLWorks.System.Unsafe.Value.ml_value
d39 1
a39 1
  val lookup_str : Ident.StrId * inter_env -> MLWorks.System.Unsafe.Value.ml_value
d41 1
a41 1
  val lookup_fun : Ident.FunId * inter_env -> MLWorks.System.Unsafe.Value.ml_value
d44 1
a44 1
    inter_env * (Ident.ValId * MLWorks.System.Unsafe.Value.ml_value) -> inter_env
d47 1
a47 1
    inter_env * (Ident.ValId * MLWorks.System.Unsafe.Value.ml_value) -> inter_env
d50 1
a50 1
    inter_env * (Ident.StrId * MLWorks.System.Unsafe.Value.ml_value) -> inter_env
d53 1
a53 1
    inter_env * (Ident.FunId * MLWorks.System.Unsafe.Value.ml_value) -> inter_env
d56 1
a56 1
    inter_env * (Ident.ValId * MLWorks.System.Unsafe.Value.ml_value) list -> inter_env
d59 1
a59 1
    inter_env * (Ident.ValId * MLWorks.System.Unsafe.Value.ml_value) list -> inter_env
d62 1
a62 1
    inter_env * (Ident.StrId * MLWorks.System.Unsafe.Value.ml_value) list -> inter_env
d65 1
a65 1
    inter_env * (Ident.FunId * MLWorks.System.Unsafe.Value.ml_value) list -> inter_env
@


1.3
log
@Changes to reflect lower level sharing changes
@
text
@d4 3
d25 4
a28 4
    (Ident.ValId, MLWorks.System.Unsafe.Int.ml_value) NewMap.T * (* VARs *)
    (Ident.ValId, MLWorks.System.Unsafe.Int.ml_value) NewMap.T * (* EXNs *)
    (Ident.StrId, MLWorks.System.Unsafe.Int.ml_value) NewMap.T * (* STRs *)
    (Ident.FunId, MLWorks.System.Unsafe.Int.ml_value) NewMap.T (* FUNs *)
d32 1
a32 1
  val lookup_val : Ident.ValId * inter_env -> MLWorks.System.Unsafe.Int.ml_value
d34 1
a34 1
  val lookup_exn : Ident.ValId * inter_env -> MLWorks.System.Unsafe.Int.ml_value
d36 1
a36 1
  val lookup_str : Ident.StrId * inter_env -> MLWorks.System.Unsafe.Int.ml_value
d38 1
a38 1
  val lookup_fun : Ident.FunId * inter_env -> MLWorks.System.Unsafe.Int.ml_value
d41 1
a41 1
    inter_env * (Ident.ValId * MLWorks.System.Unsafe.Int.ml_value) -> inter_env
d44 1
a44 1
    inter_env * (Ident.ValId * MLWorks.System.Unsafe.Int.ml_value) -> inter_env
d47 1
a47 1
    inter_env * (Ident.StrId * MLWorks.System.Unsafe.Int.ml_value) -> inter_env
d50 1
a50 1
    inter_env * (Ident.FunId * MLWorks.System.Unsafe.Int.ml_value) -> inter_env
d53 1
a53 1
    inter_env * (Ident.ValId * MLWorks.System.Unsafe.Int.ml_value) list -> inter_env
d56 1
a56 1
    inter_env * (Ident.ValId * MLWorks.System.Unsafe.Int.ml_value) list -> inter_env
d59 1
a59 1
    inter_env * (Ident.StrId * MLWorks.System.Unsafe.Int.ml_value) list -> inter_env
d62 1
a62 1
    inter_env * (Ident.FunId * MLWorks.System.Unsafe.Int.ml_value) list -> inter_env
@


1.2
log
@Fixed the source errors
@
text
@d4 3
d22 4
a25 4
    (Ident.ValId, System.Unsafe.Int.ml_value) NewMap.T * (* VARs *)
    (Ident.ValId, System.Unsafe.Int.ml_value) NewMap.T * (* EXNs *)
    (Ident.StrId, System.Unsafe.Int.ml_value) NewMap.T * (* STRs *)
    (Ident.FunId, System.Unsafe.Int.ml_value) NewMap.T (* FUNs *)
d29 1
a29 1
  val lookup_val : Ident.ValId * inter_env -> System.Unsafe.Int.ml_value
d31 1
a31 1
  val lookup_exn : Ident.ValId * inter_env -> System.Unsafe.Int.ml_value
d33 1
a33 1
  val lookup_str : Ident.StrId * inter_env -> System.Unsafe.Int.ml_value
d35 1
a35 1
  val lookup_fun : Ident.FunId * inter_env -> System.Unsafe.Int.ml_value
d38 1
a38 1
    inter_env * (Ident.ValId * System.Unsafe.Int.ml_value) -> inter_env
d41 1
a41 1
    inter_env * (Ident.ValId * System.Unsafe.Int.ml_value) -> inter_env
d44 1
a44 1
    inter_env * (Ident.StrId * System.Unsafe.Int.ml_value) -> inter_env
d47 1
a47 1
    inter_env * (Ident.FunId * System.Unsafe.Int.ml_value) -> inter_env
d50 1
a50 1
    inter_env * (Ident.ValId * System.Unsafe.Int.ml_value) list -> inter_env
d53 1
a53 1
    inter_env * (Ident.ValId * System.Unsafe.Int.ml_value) list -> inter_env
d56 1
a56 1
    inter_env * (Ident.StrId * System.Unsafe.Int.ml_value) list -> inter_env
d59 1
a59 1
    inter_env * (Ident.FunId * System.Unsafe.Int.ml_value) list -> inter_env
@


1.1
log
@Initial revision
@
text
@d3 4
a6 1
$Log$
d11 1
a11 1
require "../basics/symbol";
d15 1
a15 1
  structure Symbol : SYMBOL
@
