head	1.16;
access;
symbols
	MLW_daveb_inline_1_4_99:1.16.1
	MLWorks_21c0_1999_03_25:1.16
	MLWorks_20c1_1998_08_20:1.16
	MLWorks_20c0_1998_08_04:1.16
	MLWorks_20b2c2_1998_06_19:1.16
	MLWorks_20b2_Windows_1998_06_12:1.16
	MLWorks_20b1c1_1998_05_07:1.16
	MLWorks_20b0_1998_04_07:1.16
	MLWorks_20b0_1998_03_20:1.16
	MLWorks_20m2_1998_02_16:1.16
	MLWorks_20m1_1997_10_23:1.15
	MLWorks_11r1:1.15.1.1.1.1.1
	MLWorks_workspace_97:1.15.3
	MLWorks_dt_wizard:1.15.2
	MLWorks_11c0_1997_09_09:1.15.1.1.1.1
	MLWorks_10r3:1.15.1.1.3
	MLWorks_10r2_551:1.15.1.1.2
	MLWorks_11:1.15.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.15.1.1
	MLWorks_20m0_1997_06_20:1.15
	MLWorks_1_0_r2c2_1997_06_14:1.15.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.15.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.15.1
	MLWorks_BugFix_1997_04_24:1.15
	MLWorks_1_0_r2_Win32_1997_04_11:1.15
	MLWorks_1_0_r2_Unix_1997_04_04:1.15
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.14.6.1.1
	MLWorks_gui_1996_12_18:1.14.7
	MLWorks_1_0_Win32_1996_12_17:1.14.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.14.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.14.4.1
	MLWorks_1_0_Irix_1996_11_28:1.14.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.14.5
	MLWorks_1_0_Unix_1996_11_14:1.14.4
	MLWorks_Open_Beta2_1996_10_11:1.14.3
	MLWorks_License_dev:1.14.2
	MLWorks_1_open_beta_1996_09_13:1.14.1
	MLWorks_Open_Beta_1996_08_22:1.14
	MLWorks_Beta_1996_07_02:1.14
	MLWorks_Beta_1996_06_07:1.14
	MLWorks_Beta_1996_06_06:1.14
	MLWorks_Beta_1996_06_05:1.14
	MLWorks_Beta_1996_06_03:1.14
	MLWorks_Beta_1996_05_31:1.14
	MLWorks_Beta_1996_05_30:1.14
	ML_beta_release_12/08/94:1.9
	ML_beta_release_03/08/94:1.9
	ML_revised_beta_release_25/05/94:1.9
	ML_final_beta_release_02/03/94:1.8
	mlworks-28-01-1994:1.8
	Release:1.7
	mlworks-beta-01-09-1993:1.7
	MLWorks-1-0-4-29/01/1993:1.1
	MLWorks-1-0-3-21/12/1992:1.1
	MLWorks-1-0-2-15/12/1992:1.1
	MLWorks-1-0-1-04/12/1992:1.1;
locks; strict;
comment	@ * @;


1.16
date	98.01.26.18.54.44;	author johnh;	state Exp;
branches
	1.16.1.1;
next	1.15;

1.15
date	97.03.17.14.30.32;	author matthew;	state Exp;
branches
	1.15.1.1
	1.15.2.1
	1.15.3.1;
next	1.14;

1.14
date	96.01.22.14.01.03;	author daveb;	state Exp;
branches
	1.14.1.1
	1.14.2.1
	1.14.3.1
	1.14.4.1
	1.14.5.1
	1.14.6.1
	1.14.7.1;
next	1.13;

1.13
date	96.01.18.14.04.36;	author daveb;	state Exp;
branches;
next	1.12;

1.12
date	96.01.16.11.23.25;	author daveb;	state Exp;
branches;
next	1.11;

1.11
date	95.09.08.14.20.49;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	95.03.15.14.21.44;	author daveb;	state Exp;
branches;
next	1.9;

1.9
date	94.03.11.17.03.35;	author matthew;	state Exp;
branches;
next	1.8;

1.8
date	93.11.25.14.24.04;	author matthew;	state Exp;
branches;
next	1.7;

1.7
date	93.08.10.12.18.37;	author matthew;	state Exp;
branches
	1.7.1.1;
next	1.6;

1.6
date	93.04.02.12.46.37;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	93.03.29.14.26.16;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	93.03.12.11.21.55;	author matthew;	state Exp;
branches;
next	1.3;

1.3
date	93.03.05.15.51.48;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	93.03.02.18.45.59;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	92.09.10.12.58.03;	author richard;	state Exp;
branches;
next	;

1.7.1.1
date	93.08.10.12.18.37;	author jont;	state Exp;
branches;
next	;

1.14.1.1
date	96.09.13.11.15.34;	author hope;	state Exp;
branches;
next	;

1.14.2.1
date	96.10.07.16.05.48;	author hope;	state Exp;
branches;
next	;

1.14.3.1
date	96.10.17.11.24.06;	author hope;	state Exp;
branches;
next	;

1.14.4.1
date	96.11.14.12.48.36;	author hope;	state Exp;
branches
	1.14.4.1.1.1;
next	;

1.14.4.1.1.1
date	96.11.28.15.00.07;	author hope;	state Exp;
branches;
next	;

1.14.5.1
date	96.11.22.18.08.28;	author hope;	state Exp;
branches;
next	;

1.14.6.1
date	96.12.17.17.47.09;	author hope;	state Exp;
branches
	1.14.6.1.1.1;
next	;

1.14.6.1.1.1
date	97.02.24.11.36.51;	author hope;	state Exp;
branches;
next	;

1.14.7.1
date	96.12.18.09.41.10;	author hope;	state Exp;
branches;
next	;

1.15.1.1
date	97.05.12.10.33.36;	author hope;	state Exp;
branches
	1.15.1.1.1.1
	1.15.1.1.2.1
	1.15.1.1.3.1;
next	;

1.15.1.1.1.1
date	97.07.28.18.19.33;	author daveb;	state Exp;
branches
	1.15.1.1.1.1.1.1;
next	;

1.15.1.1.1.1.1.1
date	97.10.07.11.44.43;	author jkbrook;	state Exp;
branches;
next	;

1.15.1.1.2.1
date	97.09.08.17.13.09;	author daveb;	state Exp;
branches;
next	;

1.15.1.1.3.1
date	97.09.09.14.08.47;	author daveb;	state Exp;
branches;
next	;

1.15.2.1
date	97.09.10.19.24.10;	author brucem;	state Exp;
branches;
next	;

1.15.3.1
date	97.09.11.20.54.58;	author daveb;	state Exp;
branches;
next	1.15.3.2;

1.15.3.2
date	97.11.26.13.13.10;	author daveb;	state Exp;
branches;
next	;

1.16.1.1
date	99.04.01.17.56.55;	author daveb;	state Exp;
branches;
next	;


desc
@Incremental compiler shell.
Signature.
@


1.16
log
@[Bug #30071]
Merge in Project Workspace changes.
@
text
@(*  ==== COMPILER SHELL ====
 *
 *  Copyright (C) 1992 Harlequin Ltd
 *
 *  Description 
 *  -----------
 *  A user interface to the incremental compiler.
 *
 *  Revision Log
 *  ------------
 *  $Log: shell.sml,v $
 * Revision 1.15.3.2  1997/11/26  13:13:10  daveb
 * [Bug #30071]
 * The Shell.Error exception is no longer needed.
 *
 * Revision 1.15.3.1  1997/09/11  20:54:58  daveb
 * branched from trunk for label MLWorks_workspace_97
 *
 * Revision 1.15  1997/03/17  14:30:32  matthew
 * Adding Shell.Error exception
 *
 * Revision 1.14  1996/01/22  14:01:03  daveb
 * Added new constructors to Result datatype.
 *
 *  Revision 1.13  1996/01/18  14:04:36  daveb
 *  Added Result datatype.  Made the do_line function take Info.options.
 *
 *  Revision 1.12  1996/01/16  11:23:25  daveb
 *  Revised interface of shell function.  Added ShellState type to preserve
 *  state information instead of storing it internally.  Replaced the list
 *  of offsets into the source with a list of strings, each being the source of
 *  a topdec, and an extra string for any remaining source.
 *
 *  Revision 1.11  1995/09/08  14:20:49  matthew
 *  Adding flush_stream function to interface.
 *
 *  Revision 1.10  1995/03/15  14:21:44  daveb
 *  prompt_function now takes the context name string as an argument.
 *
 *  Revision 1.9  1994/03/11  17:03:35  matthew
 *   Added Exit exception
 *
 *  Revision 1.8  1993/11/25  14:24:04  matthew
 *  > Moved exception DebuggerTrapped into ShellTypes for easier use elsewhere.
 *
 *  Revision 1.7  1993/08/10  12:18:37  matthew
 *  Added stream_name parameter to Shell.shell
 *
 *  Revision 1.6  1993/04/02  12:46:37  daveb
 *  The shell's do_line function now returns the positions of any topdecs
 *  that end in the current line, and whether the current topdec is still valid.
 *
 *  Revision 1.5  1993/03/29  14:26:16  matthew
 *  shell doesn't take output function now
 *
 *  Revision 1.4  1993/03/12  11:21:55  matthew
 *  Shell takes an output function
 *
 *  Revision 1.3  1993/03/05  15:51:48  matthew
 *  Removed Context type and parameter
 *
 *  Revision 1.2  1993/03/02  18:45:59  daveb
 *  Major revision.  Now provides a shell for both TTY and X based listeners.
 *
 *  Revision 1.1  1992/09/10  12:58:03  richard
 *  Initial revision
 *
 *)

require "../main/info";

signature SHELL =
sig
  structure Info: INFO

  type ShellData	(* info used to create a shell *)
  type ShellState	(* current state of an incremental parse *)
  type Context

  exception Exit of int

  val initial_state: ShellState

  datatype Result = 
    OK of ShellState
  | ERROR of Info.error * Info.error list
  | INTERRUPT
  | DEBUGGER_TRAPPED
  | TRIVIAL

  (* The shell function creates a shell, and returns two functions.
     The first of these processes an input string, and returns a list of
     the topdecs that were successfully compiled, the string remaining after
     that point, and a result value.  This result contains error information
     if an error occurred, or a new state if no error occurred.
     The second function converts a string into a prompt.  The state 
     argument provides a line_count, which determines whether to return
     a primary or secondary prompt. *)
  val shell :
    ShellData * string * (unit -> unit) (* flush stream *)
    -> (Info.options -> string * ShellState -> string list * string * Result)
       * (string * ShellState -> string)
end;
@


1.16.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a11 4
 * Revision 1.16  1998/01/26  18:54:44  johnh
 * [Bug #30071]
 * Merge in Project Workspace changes.
 *
@


1.15
log
@Adding Shell.Error exception
@
text
@d12 10
a80 1
  exception Error of (string * Info.error * Info.error list)
@


1.15.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a11 3
 * Revision 1.15  1997/03/17  14:30:32  matthew
 * Adding Shell.Error exception
 *
@


1.15.3.2
log
@[Bug #30071]
The Shell.Error exception is no longer needed.
@
text
@a11 3
 * Revision 1.15.3.1  1997/09/11  20:54:58  daveb
 * branched from trunk for label MLWorks_workspace_97
 *
d74 1
@


1.15.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a11 3
 * Revision 1.15  1997/03/17  14:30:32  matthew
 * Adding Shell.Error exception
 *
@


1.15.1.1
log
@branched from 1.15
@
text
@a11 3
 * Revision 1.15  1997/03/17  14:30:32  matthew
 * Adding Shell.Error exception
 *
@


1.15.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a11 3
 * Revision 1.15.1.1  1997/05/12  10:33:36  hope
 * branched from 1.15
 *
@


1.15.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a11 3
 * Revision 1.15.1.1  1997/05/12  10:33:36  hope
 * branched from 1.15
 *
@


1.15.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a11 3
 * Revision 1.15.1.1  1997/05/12  10:33:36  hope
 * branched from 1.15
 *
@


1.15.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a11 3
 * Revision 1.15.1.1.1.1  1997/07/28  18:19:33  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.14
log
@Added new constructors to Result datatype.
@
text
@d12 3
d71 1
@


1.14.7.1
log
@branched from 1.14
@
text
@a11 3
 * Revision 1.14  1996/01/22  14:01:03  daveb
 * Added new constructors to Result datatype.
 *
@


1.14.6.1
log
@branched from 1.14
@
text
@a11 3
 * Revision 1.14  1996/01/22  14:01:03  daveb
 * Added new constructors to Result datatype.
 *
@


1.14.6.1.1.1
log
@branched from 1.14.6.1
@
text
@a11 3
 * Revision 1.14.6.1  1996/12/17  17:47:09  hope
 * branched from 1.14
 *
@


1.14.5.1
log
@branched from 1.14
@
text
@a11 3
 * Revision 1.14  1996/01/22  14:01:03  daveb
 * Added new constructors to Result datatype.
 *
@


1.14.4.1
log
@branched from 1.14
@
text
@a11 3
 * Revision 1.14  1996/01/22  14:01:03  daveb
 * Added new constructors to Result datatype.
 *
@


1.14.4.1.1.1
log
@branched from 1.14.4.1
@
text
@a11 3
 * Revision 1.14.4.1  1996/11/14  12:48:36  hope
 * branched from 1.14
 *
@


1.14.3.1
log
@branched from 1.14
@
text
@a11 3
 * Revision 1.14  1996/01/22  14:01:03  daveb
 * Added new constructors to Result datatype.
 *
@


1.14.2.1
log
@branched from 1.14
@
text
@a11 3
 * Revision 1.14  1996/01/22  14:01:03  daveb
 * Added new constructors to Result datatype.
 *
@


1.14.1.1
log
@branched from 1.14
@
text
@a11 3
 * Revision 1.14  1996/01/22  14:01:03  daveb
 * Added new constructors to Result datatype.
 *
@


1.13
log
@Added Result datatype.  Made the do_line function take Info.options.
@
text
@d12 3
d74 3
@


1.12
log
@Revised interface of shell function.  Added ShellState type to preserve
state information instead of storing it internally.  Replaced the list
of offsets into the source with a list of strings, each being the source of
a topdec, and an extra string for any remaining source.
@
text
@d12 6
d54 2
d58 2
d68 4
d74 10
a83 7
     topdecs, a boolean that indicates whether an error occurred, the string
     remaining after the last topdec, and a new state.
     The second function converts a string into a prompt. *)
  val shell : ShellData * string * (unit -> unit) (* flush stream *)
	      -> (string * ShellState
		  -> string list * bool * string * ShellState)
	       * (string * ShellState -> string)
@


1.11
log
@Adding flush_stream function to interface.
@
text
@d12 3
d50 2
a51 1
  type ShellData
d55 8
d64 3
a66 1
	      -> (string -> int list * bool) * (string -> string)
@


1.10
log
@prompt_function now takes the context name string as an argument.
@
text
@d12 3
d51 1
a51 1
  val shell : ShellData * string
@


1.9
log
@ Added Exit exception
@
text
@d12 3
d48 2
a49 1
  val shell : ShellData * string -> (string -> int list * bool) * (unit -> string)
@


1.8
log
@> Moved exception DebuggerTrapped into ShellTypes for easier use elsewhere.
@
text
@d12 3
d44 1
@


1.7
log
@Added stream_name parameter to Shell.shell
@
text
@d12 3
a39 2

  exception DebuggerTrapped
@


1.7.1.1
log
@Fork for bug fixing
@
text
@a11 3
 *  Revision 1.7  1993/08/10  12:18:37  matthew
 *  Added stream_name parameter to Shell.shell
 *
@


1.6
log
@The shell's do_line function now returns the positions of any topdecs
that end in the current line, and whether the current topdec is still valid.
@
text
@d12 4
d40 1
a40 1
  val shell : ShellData -> (string -> int list * bool) * (unit -> string)
@


1.5
log
@shell doesn't take output function now
@
text
@d12 3
d36 1
a36 1
  val shell : ShellData ->(string -> unit) * (unit -> string)
@


1.4
log
@Shell takes an output function
@
text
@d12 3
d28 1
a28 1
  type Args
d33 1
a33 4
  val shell:
    Args   ->
    ((string -> unit) * string -> unit) *
    (unit -> string)
@


1.3
log
@Removed Context type and parameter
@
text
@d12 3
d28 2
d32 1
a32 1
    (string -> string) *
@


1.2
log
@Major revision.  Now provides a shell for both TTY and X based listeners.
@
text
@d12 3
d26 3
a28 3
    (Context * Args) ->
      (string -> string) *
      (unit -> string)
@


1.1
log
@Initial revision
@
text
@d11 4
a14 1
 *  $Log$
d18 9
a26 3
  sig
    val main : string list -> int
  end;
@
