head	1.14;
access;
symbols
	MLW_daveb_inline_1_4_99:1.14.1
	MLWorks_21c0_1999_03_25:1.14
	MLWorks_20c1_1998_08_20:1.14
	MLWorks_20c0_1998_08_04:1.14
	MLWorks_20b2c2_1998_06_19:1.14
	MLWorks_20b2_Windows_1998_06_12:1.14
	MLWorks_20b1c1_1998_05_07:1.14
	MLWorks_20b0_1998_04_07:1.14
	MLWorks_20b0_1998_03_20:1.14
	MLWorks_20m2_1998_02_16:1.13
	MLWorks_20m1_1997_10_23:1.13
	MLWorks_11r1:1.10.8.1.1.2.1
	MLWorks_workspace_97:1.12.2
	MLWorks_dt_wizard:1.12.1
	MLWorks_11c0_1997_09_09:1.10.8.1.1.2
	MLWorks_10r3:1.10.8.1.3
	MLWorks_10r2_551:1.10.8.1.2
	MLWorks_11:1.10.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.10.8.1
	MLWorks_20m0_1997_06_20:1.11
	MLWorks_1_0_r2c2_1997_06_14:1.10.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.10.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.10.8
	MLWorks_BugFix_1997_04_24:1.10
	MLWorks_1_0_r2_Win32_1997_04_11:1.10
	MLWorks_1_0_r2_Unix_1997_04_04:1.10
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.10.6.1.1
	MLWorks_gui_1996_12_18:1.10.7
	MLWorks_1_0_Win32_1996_12_17:1.10.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.10.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.10.4.1
	MLWorks_1_0_Irix_1996_11_28:1.10.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.10.5
	MLWorks_1_0_Unix_1996_11_14:1.10.4
	MLWorks_Open_Beta2_1996_10_11:1.10.3
	MLWorks_License_dev:1.10.2
	MLWorks_1_open_beta_1996_09_13:1.10.1
	MLWorks_Open_Beta_1996_08_22:1.10
	MLWorks_Beta_1996_07_02:1.9
	MLWorks_Beta_1996_06_07:1.9
	MLWorks_Beta_1996_06_06:1.9
	MLWorks_Beta_1996_06_05:1.9
	MLWorks_Beta_1996_06_03:1.9
	MLWorks_Beta_1996_05_31:1.9
	MLWorks_Beta_1996_05_30:1.9;
locks; strict;
comment	@ * @;


1.14
date	98.03.18.17.08.55;	author mitchell;	state Exp;
branches
	1.14.1.1;
next	1.13;

1.13
date	97.10.14.12.41.21;	author daveb;	state Exp;
branches;
next	1.12;

1.12
date	97.07.31.12.41.38;	author johnh;	state Exp;
branches
	1.12.1.1
	1.12.2.1;
next	1.11;

1.11
date	97.05.01.12.40.04;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	96.08.15.13.55.06;	author daveb;	state Exp;
branches
	1.10.1.1
	1.10.2.1
	1.10.3.1
	1.10.4.1
	1.10.5.1
	1.10.6.1
	1.10.7.1
	1.10.8.1;
next	1.9;

1.9
date	96.05.14.11.37.43;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	96.04.11.15.54.32;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	96.02.08.13.53.23;	author daveb;	state Exp;
branches;
next	1.6;

1.6
date	96.01.17.17.16.47;	author matthew;	state Exp;
branches;
next	1.5;

1.5
date	95.06.06.11.22.04;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	95.06.05.13.54.50;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	95.05.23.15.52.52;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	95.05.19.15.51.23;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	95.05.01.08.55.48;	author daveb;	state Exp;
branches;
next	;

1.10.1.1
date	96.09.13.11.16.25;	author hope;	state Exp;
branches;
next	;

1.10.2.1
date	96.10.07.16.06.22;	author hope;	state Exp;
branches;
next	;

1.10.3.1
date	96.10.17.11.24.38;	author hope;	state Exp;
branches;
next	;

1.10.4.1
date	96.11.14.12.49.25;	author hope;	state Exp;
branches
	1.10.4.1.1.1;
next	;

1.10.4.1.1.1
date	96.11.28.15.00.41;	author hope;	state Exp;
branches;
next	;

1.10.5.1
date	96.11.22.18.09.04;	author hope;	state Exp;
branches;
next	;

1.10.6.1
date	96.12.17.17.47.42;	author hope;	state Exp;
branches
	1.10.6.1.1.1;
next	;

1.10.6.1.1.1
date	97.02.24.11.37.28;	author hope;	state Exp;
branches;
next	;

1.10.7.1
date	96.12.18.09.41.43;	author hope;	state Exp;
branches;
next	;

1.10.8.1
date	97.05.12.10.34.10;	author hope;	state Exp;
branches
	1.10.8.1.1.1
	1.10.8.1.2.1
	1.10.8.1.3.1;
next	;

1.10.8.1.1.1
date	97.07.28.18.19.41;	author daveb;	state Exp;
branches;
next	1.10.8.1.1.2;

1.10.8.1.1.2
date	97.08.04.15.40.07;	author johnh;	state Exp;
branches
	1.10.8.1.1.2.1.1;
next	;

1.10.8.1.1.2.1.1
date	97.10.07.11.44.50;	author jkbrook;	state Exp;
branches;
next	1.10.8.1.1.2.1.2;

1.10.8.1.1.2.1.2
date	97.10.14.16.43.46;	author jkbrook;	state Exp;
branches;
next	;

1.10.8.1.2.1
date	97.09.08.17.13.16;	author daveb;	state Exp;
branches;
next	;

1.10.8.1.3.1
date	97.09.09.14.08.54;	author daveb;	state Exp;
branches;
next	1.10.8.1.3.2;

1.10.8.1.3.2
date	97.10.14.17.30.19;	author jkbrook;	state Exp;
branches;
next	;

1.12.1.1
date	97.09.10.19.24.20;	author brucem;	state Exp;
branches;
next	;

1.12.2.1
date	97.09.11.20.55.05;	author daveb;	state Exp;
branches;
next	1.12.2.2;

1.12.2.2
date	97.09.12.15.13.28;	author johnh;	state Exp;
branches;
next	;

1.14.1.1
date	99.04.01.17.56.58;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Separated user context code from shelltypes.sml.
@


1.14
log
@[Bug #50062]
Fix context browser so contents persists in saved images, and the basis appears in the initial context for guib
@
text
@(* User contexts.
 *
 * Copyright (C) 1995 Harlequin Ltd.
 *
 * $Log: user_context.sml,v $
 * Revision 1.13  1997/10/14  12:41:21  daveb
 * [Bug #30283]
 * Added with_null_history.
 *
 * Revision 1.12  1997/07/31  12:41:38  johnh
 * [Bug #50019]
 * Modify process_result to take a UserContext.source_reference type for src.
 *
 * Revision 1.11  1997/05/01  12:40:04  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
 * Revision 1.10  1996/08/15  13:55:06  daveb
 * [Bug #1519]
 * Allowed the source field of an item to indicate that it shares the source
 * of the previous item in the history.
 *
 * Revision 1.9  1996/05/14  11:37:43  daveb
 * Added null_history and save_name_set.
 *
 * Revision 1.8  1996/04/11  15:54:32  daveb
 * Added history deletion functions, changed the type of update functions,
 * and added a preferences argument to process_result (and made it take a
 * record instead of a tuple).
 *
 * Revision 1.7  1996/02/08  13:53:23  daveb
 * The update_functions now take the list of new items as an argument.
 * Removed the old selection stuff.  Removed some detritus.
 *
 *  Revision 1.6  1996/01/17  17:16:47  matthew
 *  Adding history_item_name function
 *
 *  Revision 1.5  1995/06/06  11:22:04  daveb
 *  Added get_latest and get_n, to support history operations.
 *
 *  Revision 1.4  1995/06/05  13:54:50  daveb
 *  Added user_tool_options argument to process_result.
 *
 *  Revision 1.3  1995/05/23  15:52:52  daveb
 *  Added get_user_options.
 *
 *  Revision 1.2  1995/05/19  15:51:23  daveb
 *  Added getInitialContext.
 *
 *  Revision 1.1  1995/05/01  08:55:48  daveb
 *  new unit
 *  Separated user context code from shelltypes.sml.
 *
 *
 *)

require "../main/options";

signature USER_CONTEXT =
sig
  structure Options : OPTIONS

  type user_context_options
  type preferences
  type Context
  type Result
     
  type user_context
  type identifier

  (* A source reference stores the source of a value in the history.
     The COPY constructor is used when the same source binds several
     identifiers.  The function that saves source to files (in gui_utils)
     ignores copies.  *)
  datatype source_reference =
    STRING of string
  | COPY of string

  (* The History tool uses a list of history entries. *)
  datatype history_entry =
    ITEM of
      {index: int,              (* the number of the entry in the history *)
       id: identifier,          (* the identifier that was defined *)
       context: Context,        (* the delta context after evaluating the id *)
       result: string,          (* the printed version of the result *)
       source: source_reference}(* the source string *)
  (* If the source field is NONE, the source is assumed to be the same as
     the previous entry.  *)

  (* Each user_context contains the full incremental context used by the
     compiler, a second context containing just the identifiers defined in
     this user_context (used by the browser), a list for the history widget,
     and a map from identifiers to their source, all in the same ref so that
     they can be updated together.  This is the information returned and set
     by the [gs]et_context_info and [gs]et_user_context_info functions.

     Another reference holds a register of update functions.  These are
     called when the context is updated.  They can be used to update a
     context browser or similar tool.  The add_update_fn and remove_update_fn
     functions affect this register.  The update functions are passed NONE
     if they have to re-read the whole history, or (SOME items) when new
     items are added to an unchanged history.

     User contexts also contain the name of the context, a flag that indicates
     whether the context is constant, which file the history for that context
     has been saved in (if any) and the number of times that the context has
     been copied (which is used by the naming scheme).

     Keeping the per-user_context info in an incremental context keeps the
     option open of merging contexts.  Someday the history representation will
     change to handle modules better. *)

  val getCurrentContexts : unit -> user_context list
  val getInitialContext : unit -> user_context
  val getNewInitialContext : unit -> user_context
  val copyUserContext : user_context -> user_context

  (* This is a dummy value solely for initialising a reference in ShellTypes *)
  val dummy_context: user_context

  val makeInitialUserContext :
	Context * string * user_context_options -> user_context

  val get_saved_file_name : user_context -> string option
  val set_saved_file_name : user_context * string -> unit
  val saved_name_set : user_context -> bool

  val clear_debug_info : user_context * string -> unit
  val clear_debug_all_info : user_context -> unit

  val get_user_options : user_context -> user_context_options

  val get_context : user_context -> Context
  val get_delta : user_context -> Context

  val get_history : user_context -> history_entry list
  val null_history : user_context -> bool

  (* with_null_history u f x; modifies the u to have an empty history
     before evaluating f x, and restores the original history afterwards.
     It is primarily intended for use by <URI:/save_image.sml#saveImage>. *)
  val with_null_history : user_context -> ('a -> 'b) -> 'a -> 'b

  val delete_from_history : user_context * history_entry -> unit
  val delete_entire_history : user_context -> unit
  val remove_duplicates_from_history : user_context -> unit
  val move_context_history_to_system : user_context -> unit

  val get_latest: user_context -> history_entry option
  val get_nth: user_context * int -> history_entry option

  (* update functions are associated with an abstract key type, so that
     they can be removed later. *)
  type register_key

  val add_update_fn :
    user_context * (history_entry list option -> unit)
    -> register_key

  val remove_update_fn : user_context * register_key -> unit

  val history_entry_name : history_entry -> string option

  val is_const_context : user_context -> bool

  val set_context_name : user_context * string -> unit
  val get_context_name : user_context -> string

  val process_result :
    {src: source_reference,
     result: Result,
     user_context: user_context,
     preferences: preferences,
     options: Options.options,
     output_fn: string -> unit}
    -> unit

end;
@


1.14.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a5 4
 * Revision 1.14  1998/03/18  17:08:55  mitchell
 * [Bug #50062]
 * Fix context browser so contents persists in saved images, and the basis appears in the initial context for guib
 *
@


1.13
log
@[Bug #30283]
Added with_null_history.
@
text
@d6 4
d147 1
@


1.12
log
@[Bug #50019]
Modify process_result to take a UserContext.source_reference type for src.
@
text
@d6 4
d134 5
@


1.12.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a5 4
 * Revision 1.12  1997/07/31  12:41:38  johnh
 * [Bug #50019]
 * Modify process_result to take a UserContext.source_reference type for src.
 *
@


1.12.2.2
log
@[Bug #30071]
Redesign Comopilation Manager -> Project Workspace.
get/set project file.
@
text
@a123 4
  val get_project_file : user_context -> string option
  val set_project_file : user_context * string -> unit
  val project_file_set : user_context -> bool

@


1.12.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a5 4
 * Revision 1.12  1997/07/31  12:41:38  johnh
 * [Bug #50019]
 * Modify process_result to take a UserContext.source_reference type for src.
 *
@


1.11
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@d6 4
d156 1
a156 1
    {src: string,
@


1.10
log
@[Bug #1519]
Allowed the source field of an item to indicate that it shares the source
of the previous item in the history.
@
text
@d6 5
d112 1
a112 1
  val get_saved_file_name : user_context -> string MLWorks.Option.option
d131 2
a132 2
  val get_latest: user_context -> history_entry MLWorks.Option.option
  val get_nth: user_context * int -> history_entry MLWorks.Option.option
d139 1
a139 1
    user_context * (history_entry list MLWorks.Option.option -> unit)
d144 1
a144 1
  val history_entry_name : history_entry -> string MLWorks.Option.option
@


1.10.8.1
log
@branched from 1.10
@
text
@a5 5
 * Revision 1.10  1996/08/15  13:55:06  daveb
 * [Bug #1519]
 * Allowed the source field of an item to indicate that it shares the source
 * of the previous item in the history.
 *
@


1.10.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.10.8.1  1997/05/12  10:34:10  hope
 * branched from 1.10
 *
@


1.10.8.1.3.2
log
@[Bug #30283]
Merging from trunk:
Adding with_null_history
@
text
@a5 3
 * Revision 1.10.8.1.3.1  1997/09/09  14:08:54  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
 *
a128 5

  (* with_null_history u f x; modifies the u to have an empty history
     before evaluating f x, and restores the original history afterwards.
     It is primarily intended for use by <URI:/save_image.sml#saveImage>. *)
  val with_null_history : user_context -> ('a -> 'b) -> 'a -> 'b
@


1.10.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.10.8.1  1997/05/12  10:34:10  hope
 * branched from 1.10
 *
@


1.10.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.10.8.1  1997/05/12  10:34:10  hope
 * branched from 1.10
 *
@


1.10.8.1.1.2
log
@[Bug #50019]
Merging - changing type of src field in UserContext.process_result.
@
text
@a5 4
 *
 * Revision 1.10.8.1.1.1  1997/07/28  18:19:41  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
d155 1
a155 1
    {src: source_reference,
@


1.10.8.1.1.2.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 4
 * Revision 1.10.8.1.1.2  1997/08/04  15:40:07  johnh
 * [Bug #50019]
 * Merging - changing type of src field in UserContext.process_result.
 *
@


1.10.8.1.1.2.1.2
log
@[Bug #30283]
Merging from trunk:
Adding with_null_history
@
text
@a5 3
 * Revision 1.10.8.1.1.2.1.1  1997/10/07  11:44:50  jkbrook
 * branched from MLWorks_11 for label MLWorks_11r1
 *
a136 5

  (* with_null_history u f x; modifies the u to have an empty history
     before evaluating f x, and restores the original history afterwards.
     It is primarily intended for use by <URI:/save_image.sml#saveImage>. *)
  val with_null_history : user_context -> ('a -> 'b) -> 'a -> 'b
@


1.10.7.1
log
@branched from 1.10
@
text
@a5 5
 * Revision 1.10  1996/08/15  13:55:06  daveb
 * [Bug #1519]
 * Allowed the source field of an item to indicate that it shares the source
 * of the previous item in the history.
 *
@


1.10.6.1
log
@branched from 1.10
@
text
@a5 5
 * Revision 1.10  1996/08/15  13:55:06  daveb
 * [Bug #1519]
 * Allowed the source field of an item to indicate that it shares the source
 * of the previous item in the history.
 *
@


1.10.6.1.1.1
log
@branched from 1.10.6.1
@
text
@a5 3
 * Revision 1.10.6.1  1996/12/17  17:47:42  hope
 * branched from 1.10
 *
@


1.10.5.1
log
@branched from 1.10
@
text
@a5 5
 * Revision 1.10  1996/08/15  13:55:06  daveb
 * [Bug #1519]
 * Allowed the source field of an item to indicate that it shares the source
 * of the previous item in the history.
 *
@


1.10.4.1
log
@branched from 1.10
@
text
@a5 5
 * Revision 1.10  1996/08/15  13:55:06  daveb
 * [Bug #1519]
 * Allowed the source field of an item to indicate that it shares the source
 * of the previous item in the history.
 *
@


1.10.4.1.1.1
log
@branched from 1.10.4.1
@
text
@a5 3
 * Revision 1.10.4.1  1996/11/14  12:49:25  hope
 * branched from 1.10
 *
@


1.10.3.1
log
@branched from 1.10
@
text
@a5 5
 * Revision 1.10  1996/08/15  13:55:06  daveb
 * [Bug #1519]
 * Allowed the source field of an item to indicate that it shares the source
 * of the previous item in the history.
 *
@


1.10.2.1
log
@branched from 1.10
@
text
@a5 5
 * Revision 1.10  1996/08/15  13:55:06  daveb
 * [Bug #1519]
 * Allowed the source field of an item to indicate that it shares the source
 * of the previous item in the history.
 *
@


1.10.1.1
log
@branched from 1.10
@
text
@a5 5
 * Revision 1.10  1996/08/15  13:55:06  daveb
 * [Bug #1519]
 * Allowed the source field of an item to indicate that it shares the source
 * of the previous item in the history.
 *
@


1.9
log
@Added null_history and save_name_set.
@
text
@d6 3
d54 9
d64 8
a71 1
    ITEM of int * identifier * Context * string * string
@


1.8
log
@Added history deletion functions, changed the type of update functions,
and added a preferences argument to process_result (and made it take a
record instead of a tuple).
@
text
@d6 5
a88 1

d90 1
d99 1
d101 1
@


1.7
log
@The update_functions now take the list of new items as an argument.
Removed the old selection stuff.  Removed some detritus.
@
text
@d6 4
d39 1
d59 3
a61 1
     functions affect this register.
d96 4
d108 2
a109 1
    user_context * (history_entry list -> unit) -> register_key
d121 6
a126 1
    string * Result * user_context * Options.options * (string -> unit)
@


1.6
log
@Adding history_item_name function
@
text
@d6 3
a34 1
  type user_tool_options
a38 1
  type ('a, 'b) map
a43 2
  datatype source_map = MAP of (identifier, string) map

d51 4
a54 5
     Two more references hold registers of update and select functions.  These
     are called when the context is updated or the current selection is
     changed.  They can be used to update a context browser or similar tool.
     The add_update_fn, remove_update_fn, add_select_fn and remove_select_fn
     functions affect these registers.
d80 2
a81 5
  val get_context_info :
    user_context -> (Context * Context * history_entry list * source_map)

  val set_context_info :
    user_context * (Context * Context * history_entry list * source_map) -> unit
d86 2
a87 4

  val set_selected : user_context * user_tool_options * history_entry -> unit
  val get_selected : user_context * user_tool_options
		     -> history_entry MLWorks.Option.option
d96 2
a97 1
  val add_update_fn : user_context * (unit -> unit) -> register_key
a100 6
  val add_select_fn :
    user_context * ((history_entry -> unit) * (unit -> user_tool_options))
    -> register_key
  (* add_select_fn (c, (select_fn, mk_user_options)).  The current
     settings of the user options are checked before calling the callback. *)

a102 2
  val remove_select_fn : user_context * register_key -> unit

d109 1
a109 2
    string * Result * user_context * Options.options * user_tool_options 
    * (string -> unit)
@


1.5
log
@Added get_latest and get_n, to support history operations.
@
text
@d6 3
d112 2
@


1.4
log
@Added user_tool_options argument to process_result.
@
text
@d6 3
d92 3
@


1.3
log
@Added get_user_options.
@
text
@d6 3
d112 2
a113 1
    string * Result * user_context * Options.options * (string -> unit)
@


1.2
log
@Added getInitialContext.
@
text
@d6 3
d22 2
a23 1
  type user_options
d66 2
a67 1
  val makeInitialUserContext : Context * string -> user_context
d79 2
d83 2
a84 2
  val set_selected : user_context * user_options * history_entry -> unit
  val get_selected : user_context * user_options
d96 1
a96 1
    user_context * ((history_entry -> unit) * (unit -> user_options))
@


1.1
log
@new unit
Separated user context code from shelltypes.sml.
@
text
@d5 4
a8 1
 * $Log$
d10 1
d55 1
@
