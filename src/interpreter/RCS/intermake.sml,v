head	1.47;
access;
symbols
	MLW_daveb_inline_1_4_99:1.47.3
	MLWorks_21c0_1999_03_25:1.47
	MLWorks_20c1_1998_08_20:1.47
	MLWorks_20c0_1998_08_04:1.47
	MLWorks_20b2c2_1998_06_19:1.47
	MLWorks_20b2_Windows_1998_06_12:1.47
	MLWorks_20b1c1_1998_05_07:1.47
	MLWorks_20b0_1998_04_07:1.47
	MLWorks_20b0_1998_03_20:1.47
	MLWorks_20m2_1998_02_16:1.47
	MLWorks_20m1_1997_10_23:1.47
	MLWorks_11r1:1.45.8.2.1.1.1
	MLWorks_workspace_97:1.47.2
	MLWorks_dt_wizard:1.47.1
	MLWorks_11c0_1997_09_09:1.45.8.2.1.1
	MLWorks_10r3:1.45.8.2.3
	MLWorks_10r2_551:1.45.8.2.2
	MLWorks_11:1.45.8.2.1
	MLWorks_1_0_r2c2_1997_07_28:1.45.8.2
	MLWorks_20m0_1997_06_20:1.47
	MLWorks_1_0_r2c2_1997_06_14:1.45.8.2
	MLWorks_1_0_r2c1_released_1997_05_23:1.45.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.45.8
	MLWorks_BugFix_1997_04_24:1.46
	MLWorks_1_0_r2_Win32_1997_04_11:1.45
	MLWorks_1_0_r2_Unix_1997_04_04:1.45
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.45.6.1.1
	MLWorks_gui_1996_12_18:1.45.7
	MLWorks_1_0_Win32_1996_12_17:1.45.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.45.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.45.4.1
	MLWorks_1_0_Irix_1996_11_28:1.45.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.45.5
	MLWorks_1_0_Unix_1996_11_14:1.45.4
	MLWorks_Open_Beta2_1996_10_11:1.45.3
	MLWorks_License_dev:1.45.2
	MLWorks_1_open_beta_1996_09_13:1.45.1
	MLWorks_Open_Beta_1996_08_22:1.45
	MLWorks_Beta_1996_07_02:1.44
	MLWorks_Beta_1996_06_07:1.44
	MLWorks_Beta_1996_06_06:1.44
	MLWorks_Beta_1996_06_05:1.44
	MLWorks_Beta_1996_06_03:1.44
	MLWorks_Beta_1996_05_31:1.44
	MLWorks_Beta_1996_05_30:1.44
	ML_beta_release_12/08/94:1.37
	ML_beta_release_03/08/94:1.37
	ML_revised_beta_release_25/05/94:1.36
	ML_final_beta_release_02/03/94:1.32
	mlworks-28-01-1994:1.30
	Release:1.25
	mlworks-beta-01-09-1993:1.25
	MLWorks-1-0-4-29/01/1993:1.15
	MLWorks-1-0-3-21/12/1992:1.15
	MLWorks-1-0-2-15/12/1992:1.14
	MLWorks-1-0-1-04/12/1992:1.12;
locks; strict;
comment	@ * @;


1.47
date	97.05.01.12.39.32;	author jont;	state Exp;
branches
	1.47.1.1
	1.47.2.1
	1.47.3.1;
next	1.46;

1.46
date	97.04.09.16.17.23;	author jont;	state Exp;
branches;
next	1.45;

1.45
date	96.08.14.10.53.10;	author jont;	state Exp;
branches
	1.45.1.1
	1.45.2.1
	1.45.3.1
	1.45.4.1
	1.45.5.1
	1.45.6.1
	1.45.7.1
	1.45.8.1;
next	1.44;

1.44
date	96.05.03.09.15.21;	author daveb;	state Exp;
branches;
next	1.43;

1.43
date	96.03.14.16.15.28;	author daveb;	state Exp;
branches;
next	1.42;

1.42
date	95.12.11.17.07.10;	author daveb;	state Exp;
branches;
next	1.41;

1.41
date	95.11.29.14.53.13;	author daveb;	state Exp;
branches;
next	1.40;

1.40
date	95.07.28.12.01.50;	author matthew;	state Exp;
branches;
next	1.39;

1.39
date	95.01.30.13.03.53;	author daveb;	state Exp;
branches;
next	1.38;

1.38
date	95.01.13.12.15.15;	author daveb;	state Exp;
branches;
next	1.37;

1.37
date	94.07.26.10.09.44;	author daveb;	state Exp;
branches;
next	1.36;

1.36
date	94.04.12.17.31.01;	author jont;	state Exp;
branches;
next	1.35;

1.35
date	94.03.25.17.04.24;	author daveb;	state Exp;
branches;
next	1.34;

1.34
date	94.03.17.16.57.42;	author matthew;	state Exp;
branches;
next	1.33;

1.33
date	94.03.14.09.58.20;	author matthew;	state Exp;
branches;
next	1.32;

1.32
date	94.02.01.16.58.20;	author daveb;	state Exp;
branches;
next	1.31;

1.31
date	94.01.28.16.27.24;	author matthew;	state Exp;
branches;
next	1.30;

1.30
date	94.01.26.17.54.43;	author matthew;	state Exp;
branches;
next	1.29;

1.29
date	94.01.07.09.58.20;	author matthew;	state Exp;
branches;
next	1.28;

1.28
date	93.11.15.14.08.45;	author nickh;	state Exp;
branches;
next	1.27;

1.27
date	93.10.05.10.24.59;	author jont;	state Exp;
branches;
next	1.26;

1.26
date	93.09.02.17.08.30;	author matthew;	state Exp;
branches;
next	1.25;

1.25
date	93.08.09.18.31.53;	author daveb;	state Exp;
branches
	1.25.1.1;
next	1.24;

1.24
date	93.07.30.14.32.45;	author nosa;	state Exp;
branches;
next	1.23;

1.23
date	93.07.29.15.27.51;	author matthew;	state Exp;
branches;
next	1.22;

1.22
date	93.05.14.12.23.23;	author jont;	state Exp;
branches;
next	1.21;

1.21
date	93.05.11.12.47.41;	author matthew;	state Exp;
branches;
next	1.20;

1.20
date	93.04.02.13.34.27;	author matthew;	state Exp;
branches;
next	1.19;

1.19
date	93.03.11.13.26.51;	author matthew;	state Exp;
branches;
next	1.18;

1.18
date	93.03.08.10.14.12;	author matthew;	state Exp;
branches;
next	1.17;

1.17
date	93.02.24.14.22.17;	author daveb;	state Exp;
branches;
next	1.16;

1.16
date	93.02.04.14.49.22;	author matthew;	state Exp;
branches;
next	1.15;

1.15
date	92.12.18.10.11.46;	author clive;	state Exp;
branches;
next	1.14;

1.14
date	92.12.09.12.41.13;	author clive;	state Exp;
branches;
next	1.13;

1.13
date	92.12.08.12.09.44;	author daveb;	state Exp;
branches;
next	1.12;

1.12
date	92.12.04.13.05.55;	author richard;	state Exp;
branches;
next	1.11;

1.11
date	92.12.03.20.32.17;	author daveb;	state Exp;
branches;
next	1.10;

1.10
date	92.12.03.11.50.47;	author clive;	state Exp;
branches;
next	1.9;

1.9
date	92.12.02.17.05.02;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	92.11.30.17.44.15;	author clive;	state Exp;
branches;
next	1.7;

1.7
date	92.11.20.15.37.26;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	92.11.18.17.45.22;	author clive;	state Exp;
branches;
next	1.5;

1.5
date	92.11.17.17.26.07;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	92.11.02.16.27.33;	author richard;	state Exp;
branches;
next	1.3;

1.3
date	92.10.19.14.47.26;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	92.10.16.11.06.57;	author clive;	state Exp;
branches;
next	1.1;

1.1
date	92.10.14.12.13.24;	author richard;	state Exp;
branches;
next	;

1.25.1.1
date	93.08.09.18.31.53;	author jont;	state Exp;
branches;
next	1.25.1.2;

1.25.1.2
date	93.09.01.15.01.47;	author matthew;	state Exp;
branches;
next	;

1.45.1.1
date	96.09.13.11.15.39;	author hope;	state Exp;
branches;
next	;

1.45.2.1
date	96.10.07.16.05.51;	author hope;	state Exp;
branches;
next	;

1.45.3.1
date	96.10.17.11.24.08;	author hope;	state Exp;
branches;
next	;

1.45.4.1
date	96.11.14.12.48.39;	author hope;	state Exp;
branches
	1.45.4.1.1.1;
next	;

1.45.4.1.1.1
date	96.11.28.15.00.10;	author hope;	state Exp;
branches;
next	;

1.45.5.1
date	96.11.22.18.08.31;	author hope;	state Exp;
branches;
next	;

1.45.6.1
date	96.12.17.17.47.12;	author hope;	state Exp;
branches
	1.45.6.1.1.1;
next	;

1.45.6.1.1.1
date	97.02.24.11.36.54;	author hope;	state Exp;
branches;
next	;

1.45.7.1
date	96.12.18.09.41.12;	author hope;	state Exp;
branches;
next	;

1.45.8.1
date	97.05.12.10.33.39;	author hope;	state Exp;
branches;
next	1.45.8.2;

1.45.8.2
date	97.06.10.15.33.16;	author daveb;	state Exp;
branches
	1.45.8.2.1.1
	1.45.8.2.2.1
	1.45.8.2.3.1;
next	;

1.45.8.2.1.1
date	97.07.28.18.19.39;	author daveb;	state Exp;
branches
	1.45.8.2.1.1.1.1;
next	;

1.45.8.2.1.1.1.1
date	97.10.07.11.44.48;	author jkbrook;	state Exp;
branches;
next	;

1.45.8.2.2.1
date	97.09.08.17.13.14;	author daveb;	state Exp;
branches;
next	;

1.45.8.2.3.1
date	97.09.09.14.08.53;	author daveb;	state Exp;
branches;
next	;

1.47.1.1
date	97.09.10.19.24.17;	author brucem;	state Exp;
branches;
next	;

1.47.2.1
date	97.09.11.20.55.03;	author daveb;	state Exp;
branches;
next	;

1.47.3.1
date	99.04.01.17.56.57;	author daveb;	state Exp;
branches;
next	;


desc
@Make system for the interpreter.
Signature.
@


1.47
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@(*  ==== INTERPRETER MAKE SYSTEM ====
 *
 *  Copyright (C) 1992 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *
 *  Revision Log
 *  ------------
 *  $Log: intermake.sml,v $
 * Revision 1.46  1997/04/09  16:17:23  jont
 * [Bug #2040]
 * Make InterMake.load take an options argument
 *
 * Revision 1.45  1996/08/14  10:53:10  jont
 * Remove get_mo_information from interface as it's not used externally
 * Also remove get_src_information as it's also not used externally
 *
 * Revision 1.44  1996/05/03  09:15:21  daveb
 * Removed Interrupted and Error exceptions.
 * The load and compile functions side-effect their project arguments instead
 * of returning an updated value.
 *
 * Revision 1.43  1996/03/14  16:15:28  daveb
 * Added get_mo_information (again) and get_src_information.
 *
 * Revision 1.42  1995/12/11  17:07:10  daveb
 * Now passes debug info around as accumulated info instead of a basis.
 *
 *  Revision 1.41  1995/11/29  14:53:13  daveb
 *  Changed to use projects.
 *
 *  Revision 1.40  1995/07/28  12:01:50  matthew
 *  Improving load_mo errors
 *
 *  Revision 1.39  1995/01/30  13:03:53  daveb
 *  Changed get_mo_dependencies and get_mo_information to take module_ids.
 *
 *  Revision 1.38  1995/01/13  12:15:15  daveb
 *  Replaced Option structure with references to MLWorks.Option.
 *
 *  Revision 1.37  1994/07/26  10:09:44  daveb
 *  Removed inter_env component of Result type.
 *
 *  Revision 1.36  1994/04/12  17:31:01  jont
 *  Fix require file names in consistency info.
 *
 *  Revision 1.35  1994/03/25  17:04:24  daveb
 *  make now takes a module_id, instead of a module.
 *
 *  Revision 1.34  1994/03/17  16:57:42  matthew
 *  Return list of files EXECUTE result
 *
 *  Revision 1.33  1994/03/14  09:58:20  matthew
 *  Reinstated load_time in Result
 *  Dependencies also contain load_time value
 *
 *  Revision 1.32  1994/02/01  16:58:20  daveb
 *  make now takes a MOdule argument instead of a file name argument.
 *
 *  Revision 1.31  1994/01/28  16:27:24  matthew
 *  Improvements to error locations
 *
 *  Revision 1.30  1994/01/25  15:49:27  matthew
 *  Simplified interface.
 *
 *  Revision 1.29  1994/01/07  09:58:20  matthew
 *  Added get_mo_information
 *
 *  Revision 1.28  1993/11/15  14:08:45  nickh
 *  New pervasive time structure.
 *
 *  Revision 1.27  1993/10/05  10:24:59  jont
 *  Added save function for writing out .mo files
 *
 *  Revision 1.26  1993/09/02  17:08:30  matthew
 *  Merging in bug fixes
 *
 *  Revision 1.25.1.2  1993/09/01  15:01:47  matthew
 *  Added with_debug_information and current_debug_information to
 *  control global debug information.
 *
 *  Revision 1.25  1993/08/09  18:31:53  daveb
 *  Changes to reflect use of moduleids.
 *
 *  Revision 1.24  1993/07/30  14:32:45  nosa
 *  Changed Option.T to Option.opt.
 *
 *  Revision 1.23  1993/07/29  15:27:51  matthew
 *  Added Interrupted exception to indicate if a make was interrupted.
 *
 *  Revision 1.22  1993/05/14  12:23:23  jont
 *  Signature clean up
 *
 *  Revision 1.21  1993/05/11  12:47:41  matthew
 *  Added error list to Error exception
 *
 *  Revision 1.20  1993/04/02  13:34:27  matthew
 *  Signature changes
 *
 *  Revision 1.19  1993/03/11  13:26:51  matthew
 *  Signature revisions
 *
 *  Revision 1.18  1993/03/08  10:14:12  matthew
 *  Options & Info changes
 *
 *  Revision 1.17  1993/02/24  14:22:17  daveb
 *  Changed type of name_monitor field; indenting now done in this file.
 *
 *  Revision 1.16  1993/02/04  14:49:22  matthew
 *  Added sharing
 *
 *  Revision 1.15  1992/12/18  10:11:46  clive
 *  We also pass the current module forward for the source_displayer
 *
 *  Revision 1.14  1992/12/09  12:41:13  clive
 *  Added find_module
 *
 *  Revision 1.13  1992/12/08  12:09:44  daveb
 *  Added some sharing constraints.
 *
 *  Revision 1.12  1992/12/04  13:05:55  richard
 *  Make takes an extra parameter which is a list of modules which shouldn't
 *  be loaded from their compilation results but taked directly from there.
 *
 *  Revision 1.11  1992/12/03  20:32:17  daveb
 *  Added a sharing constraint.
 *
 *  Revision 1.10  1992/12/03  11:50:47  clive
 *  Added delete_module
 *
 *  Revision 1.9  1992/12/02  17:05:02  daveb
 *  Changes to propagate compiler options as parameters instead of references.
 *
 *  Revision 1.8  1992/11/30  17:44:15  clive
 *  Debugger function now takes up-to-date environment
 *
 *  Revision 1.7  1992/11/20  15:37:26  jont
 *  Modified sharing constraints to remove superfluous structures
 *
 *  Revision 1.6  1992/11/18  17:45:22  clive
 *  Added a debugger to make
 *
 *  Revision 1.5  1992/11/17  17:26:07  matthew
 *  Changed Error structure to Info
 *
 *  Revision 1.4  1992/11/02  16:27:33  richard
 *  Changes to pervasives and representation of time.
 *
 *  Revision 1.3  1992/10/19  14:47:26  richard
 *  Added an Error exception to allow make to return partially augmented
 *  modules and cache tables in case of an error.
 *
 *  Revision 1.2  1992/10/16  11:06:57  clive
 *  Changes for windowing listener
 *
 *  Revision 1.1  1992/10/14  12:13:24  richard
 *  Initial revision
 *
 *)

require "../main/compiler";
require "inter_envtypes";
require "../utils/diagnostic";

signature INTERMAKE =
  sig
    structure Compiler : COMPILER
    structure Inter_EnvTypes : INTER_ENVTYPES
    structure Diagnostic : DIAGNOSTIC

    sharing Inter_EnvTypes.Options = Compiler.Options
    sharing Compiler.NewMap = Inter_EnvTypes.EnvironTypes.NewMap
    sharing type Compiler.Top_Env = Inter_EnvTypes.EnvironTypes.Top_Env

    type Project
    type ModuleId

    (* The Compiler.basis type includes a debug_info field.  When an
       evaluation has returned, the current basis contains the up-to-date
       debug_info.  But during an evaluation, the debug_info needs to
       be accumulated separately.  The current_debug_information function
       returns this value, and with_debug_information can be used to set
       it.  This latter is used during calls of InterLoad.load, which may
       evaluate code, which may enter the debugger, which accesses the
       current debug info.
       Possibly the debug info should be moved out of the compiler basis
       and into the user context. *)

    val with_debug_information :
      Compiler.DebugInformation ->
      (unit -> 'a) ->
      'a

    val current_debug_information : unit -> Compiler.DebugInformation

    val compile :
      ((MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
       (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T)) -> 
      Compiler.basis * Inter_EnvTypes.inter_env ->
      Compiler.Info.options * Compiler.Info.Location.T
      * Compiler.Options.options ->
      (string * MLWorks.Internal.Value.T) list option ->
      Project * ModuleId * Compiler.DebugInformation ->
      Compiler.result * MLWorks.Internal.Value.T * Compiler.DebugInformation
      (* N.B. This side-effects the project argument. *)

    val load :
      Compiler.Options.options ->
      Project * Compiler.Info.Location.T -> ModuleId -> 
      Compiler.result * MLWorks.Internal.Value.T
      (* N.B. This side-effects the project argument. *)

  end

@


1.47.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a10 4
 * Revision 1.47  1997/05/01  12:39:32  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.47.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a10 4
 * Revision 1.47  1997/05/01  12:39:32  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.47.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a10 4
 * Revision 1.47  1997/05/01  12:39:32  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.46
log
@[Bug #2040]
Make InterMake.load take an options argument
@
text
@d11 4
d203 1
a203 1
      (string * MLWorks.Internal.Value.T) list MLWorks.Option.option ->
@


1.45
log
@Remove get_mo_information from interface as it's not used externally
Also remove get_src_information as it's also not used externally
@
text
@d11 4
d205 1
@


1.45.8.1
log
@branched from 1.45
@
text
@a10 4
 * Revision 1.45  1996/08/14  10:53:10  jont
 * Remove get_mo_information from interface as it's not used externally
 * Also remove get_src_information as it's also not used externally
 *
@


1.45.8.2
log
@[Bug #02040]
Added options argument to load.
@
text
@a10 3
 * Revision 1.45.8.1  1997/05/12  10:33:39  hope
 * branched from 1.45
 *
a204 1
      Compiler.Options.options ->
@


1.45.8.2.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a10 4
 * Revision 1.45.8.2  1997/06/10  15:33:16  daveb
 * [Bug #02040]
 * Added options argument to load.
 *
@


1.45.8.2.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a10 4
 * Revision 1.45.8.2  1997/06/10  15:33:16  daveb
 * [Bug #02040]
 * Added options argument to load.
 *
@


1.45.8.2.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a10 4
 * Revision 1.45.8.2  1997/06/10  15:33:16  daveb
 * [Bug #02040]
 * Added options argument to load.
 *
@


1.45.8.2.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a10 3
 * Revision 1.45.8.2.1.1  1997/07/28  18:19:39  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.45.7.1
log
@branched from 1.45
@
text
@a10 4
 * Revision 1.45  1996/08/14  10:53:10  jont
 * Remove get_mo_information from interface as it's not used externally
 * Also remove get_src_information as it's also not used externally
 *
@


1.45.6.1
log
@branched from 1.45
@
text
@a10 4
 * Revision 1.45  1996/08/14  10:53:10  jont
 * Remove get_mo_information from interface as it's not used externally
 * Also remove get_src_information as it's also not used externally
 *
@


1.45.6.1.1.1
log
@branched from 1.45.6.1
@
text
@a10 3
 * Revision 1.45.6.1  1996/12/17  17:47:12  hope
 * branched from 1.45
 *
@


1.45.5.1
log
@branched from 1.45
@
text
@a10 4
 * Revision 1.45  1996/08/14  10:53:10  jont
 * Remove get_mo_information from interface as it's not used externally
 * Also remove get_src_information as it's also not used externally
 *
@


1.45.4.1
log
@branched from 1.45
@
text
@a10 4
 * Revision 1.45  1996/08/14  10:53:10  jont
 * Remove get_mo_information from interface as it's not used externally
 * Also remove get_src_information as it's also not used externally
 *
@


1.45.4.1.1.1
log
@branched from 1.45.4.1
@
text
@a10 3
 * Revision 1.45.4.1  1996/11/14  12:48:39  hope
 * branched from 1.45
 *
@


1.45.3.1
log
@branched from 1.45
@
text
@a10 4
 * Revision 1.45  1996/08/14  10:53:10  jont
 * Remove get_mo_information from interface as it's not used externally
 * Also remove get_src_information as it's also not used externally
 *
@


1.45.2.1
log
@branched from 1.45
@
text
@a10 4
 * Revision 1.45  1996/08/14  10:53:10  jont
 * Remove get_mo_information from interface as it's not used externally
 * Also remove get_src_information as it's also not used externally
 *
@


1.45.1.1
log
@branched from 1.45
@
text
@a10 4
 * Revision 1.45  1996/08/14  10:53:10  jont
 * Remove get_mo_information from interface as it's not used externally
 * Also remove get_src_information as it's also not used externally
 *
@


1.44
log
@Removed Interrupted and Error exceptions.
The load and compile functions side-effect their project arguments instead
of returning an updated value.
@
text
@d11 5
a188 7
    val get_src_information :
      Compiler.basis ->
      Compiler.Info.options * Compiler.Info.Location.T
      * Compiler.Options.options ->
      Project * ModuleId ->
      Compiler.result

a199 5
    val get_mo_information :
      Project * Compiler.Info.Location.T -> ModuleId ->
      Compiler.result
    (* Returns the basis, id_cache and identifiers from the named mo file. *)

d205 1
a205 7
    (*
    val save :
      Compiler.Info.options ->
      Project * string * Compiler.Info.Location.T ->
      Project
    *)
  end;
@


1.43
log
@Added get_mo_information (again) and get_src_information.
@
text
@d11 3
a165 3
    exception Error of Project * Compiler.Info.error * Compiler.Info.error list
    exception Interrupted of Project

d199 2
a200 2
      Project * Compiler.result * MLWorks.Internal.Value.T
      * Compiler.DebugInformation
d209 2
a210 1
      Project * Compiler.result * MLWorks.Internal.Value.T
@


1.42
log
@Now passes debug info around as accumulated info instead of a basis.
@
text
@d11 3
d184 7
d201 5
@


1.41
log
@Changed to use projects.
@
text
@d11 3
d163 11
a180 3
    (* The second Compiler.basis in the following function is something
       to do with debug info, which I don't really understand.  It 
       corresponds to the accumulated_info parameter in the old version. *)
d188 3
a190 2
      Project * ModuleId * Compiler.basis ->
      Project * Compiler.result * MLWorks.Internal.Value.T * Compiler.basis
@


1.40
log
@Improving load_mo errors
@
text
@d11 3
d154 5
a158 32
    datatype result =
      RESULT of {name		: Compiler.Absyn.ModuleId,
                 time		: MLWorks.Time.time,
                 load_time		: MLWorks.Time.time,
                 dependencies	:
			{mod_name : Compiler.Absyn.ModuleId,
			 req_name : Compiler.Absyn.ModuleId,
                         time : MLWorks.Time.time,
                         load_time : MLWorks.Time.time} list,
                 compiler_result: Compiler.result,
                 module		: MLWorks.Internal.Value.T}

    type modules

    val empty_modules	: modules

    exception Lookup of string

    val add_module	: modules * string * result -> modules
    val lookup_module	: modules * string -> result

    datatype options =
      OPTIONS of {name_monitor	: (string -> unit) MLWorks.Option.option,
                  error_info    : Compiler.Info.options,
                  options	: Inter_EnvTypes.Options.options}

    exception Error of modules * Compiler.Info.error * Compiler.Info.error list
    exception Interrupted of modules

    datatype make_result =
      EXECUTE of result * string list
    | NO_EXECUTE of string list
d167 4
a170 13
    exception GetMoInformation of string

    val get_mo_information :
      Compiler.Absyn.ModuleId * MLWorks.Internal.Value.T * modules
      * Compiler.Info.Location.T
      -> result

    (* This should return module identifiers I guess *)

    val get_mo_dependencies :
      Compiler.Absyn.ModuleId * Compiler.Info.Location.T -> string list

    val make :
d174 9
a182 4
      options ->
      (string * MLWorks.Internal.Value.T) list * bool ->
      modules * Compiler.Absyn.ModuleId * string ->
      modules * make_result
d184 1
d187 3
a189 6
      modules * string * Compiler.Info.Location.T ->
      unit
      
    val delete_module :
      modules * Compiler.Absyn.ModuleId * Compiler.Info.options -> modules

@


1.39
log
@Changed get_mo_dependencies and get_mo_information to take module_ids.
@
text
@d11 3
d190 2
@


1.38
log
@Replaced Option structure with references to MLWorks.Option.
@
text
@d11 3
d188 4
a191 1
    val get_mo_information : string * MLWorks.Internal.Value.T * modules * Compiler.Info.Location.T -> result
d195 2
a196 1
    val get_mo_dependencies : string * Compiler.Info.Location.T -> string list
@


1.37
log
@Removed inter_env component of Result type.
@
text
@d11 3
a133 1
require "../utils/option";
a139 1
    structure Option : OPTION
d167 3
a169 3
      OPTIONS of {name_monitor		: (string -> unit) Option.opt,
                  error_info            : Compiler.Info.options,
                  options	        : Inter_EnvTypes.Options.options}
@


1.36
log
@Fix require file names in consistency info.
@
text
@d11 3
d154 1
a154 2
                 module		: MLWorks.Internal.Value.T,
                 inter_env	: Inter_EnvTypes.inter_env}
@


1.35
log
@make now takes a module_id, instead of a module.
@
text
@d11 3
d146 4
a149 3
			(Compiler.Absyn.ModuleId * 
                         MLWorks.Time.time *
                         MLWorks.Time.time) list,
@


1.34
log
@Return list of files EXECUTE result
@
text
@d11 3
a137 2
    type Module 

d190 1
a190 1
      modules * Module * string ->
d199 1
a199 1
      modules * string * Compiler.Info.options -> modules
@


1.33
log
@Reinstated load_time in Result
Dependencies also contain load_time value
@
text
@d11 4
d167 1
a167 1
      EXECUTE of result
@


1.32
log
@make now takes a MOdule argument instead of a file name argument.
@
text
@d11 3
d136 1
d138 3
a140 1
			(Compiler.Absyn.ModuleId * MLWorks.Time.time) list,
@


1.31
log
@Improvements to error locations
@
text
@d11 3
d115 1
a115 1
require "../utils/filename";
d122 1
a122 1
    structure FileName : FILENAME
d128 2
d149 1
a149 1
      OPTIONS of {name_monitor		: (string -> unit) FileName.Option.opt,
d179 1
a179 1
      modules * string * string ->
@


1.30
log
@Numerous small changes and simplifications.
@
text
@d11 3
d162 1
a162 1
    val get_mo_information : string * MLWorks.Internal.Value.T * modules -> result
d166 1
a166 1
    val get_mo_dependencies : string -> string list
d174 1
a174 1
      modules * string ->
d179 1
a179 1
      modules * string ->
@


1.29
log
@Added get_mo_information
@
text
@d11 3
a124 1
                 load_time    	: MLWorks.Time.time,
a139 3
    type cache
    val empty_cache	: cache

d145 2
a146 3
    exception Error of modules * cache * Compiler.Info.error *
		       Compiler.Info.error list
    exception Interrupted of modules * cache
d161 4
d171 2
a172 2
      modules * cache * string ->
      modules * cache * make_result
@


1.28
log
@New pervasive time structure.
@
text
@d11 3
d122 3
a124 3
                 load_time	: MLWorks.Time.time,
                 dependencies	: (Compiler.Absyn.ModuleId *
				   MLWorks.Time.time) list,
a130 1

a140 1

d160 2
@


1.27
log
@Added save function for writing out .mo files
@
text
@d11 3
d118 2
a119 2
                 time		: MLWorks.Time.Real.T,
                 load_time	: MLWorks.Time.Real.T,
d121 1
a121 1
				   MLWorks.Time.Real.T) list,
@


1.26
log
@Merging in bug fixes
@
text
@d11 3
d166 5
@


1.25
log
@Changes to reflect use of moduleids.
@
text
@d11 7
d147 7
d155 1
a155 2
      ((Compiler.basis * Inter_EnvTypes.inter_env * modules * string) ->
       (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
@


1.25.1.1
log
@Fork for bug fixing
@
text
@a10 3
 *  Revision 1.25  1993/08/09  18:31:53  daveb
 *  Changes to reflect use of moduleids.
 *
@


1.25.1.2
log
@Added with_debug_information and current_debug_information to
control global debug information.
@
text
@a142 7
    val with_debug_information :
      Compiler.DebugInformation ->
      (unit -> 'a) ->
      'a

    val current_debug_information : unit -> Compiler.DebugInformation

d144 2
a145 1
      ((MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
@


1.24
log
@Changed Option.T to Option.opt.
@
text
@d11 3
d104 1
a104 2
      RESULT of {name		: string,
                 source		: FileName.absolute,
d107 2
a108 1
                 dependencies	: (FileName.relative * MLWorks.Time.Real.T) list,
d132 2
a133 1
    exception Error of modules * cache * Compiler.Info.error * Compiler.Info.error list
d146 2
a147 2
      (string * MLWorks.Internal.Value.T) list ->
      modules * cache * FileName.absolute ->
d151 1
a151 8
      modules * FileName.absolute * Compiler.Info.options -> modules

    datatype find_module_result = 
      FOUND of string |
      NOT_FOUND

    val find_module :
      FileName.absolute * modules-> find_module_result
@


1.23
log
@Added Interrupted exception to indicate if a make was interrupted.
@
text
@d11 3
d112 1
d125 1
a125 1
      OPTIONS of {name_monitor		: (string -> unit) FileName.Option.T,
@


1.22
log
@Signature clean up
@
text
@d11 3
d126 1
@


1.21
log
@Added error list to Error exception
@
text
@d11 3
d91 1
a91 1

d124 4
d136 1
a136 1
      modules * cache * result
@


1.20
log
@Signature changes
@
text
@d11 3
d119 1
a119 1
    exception Error of modules * cache * Compiler.Info.error
@


1.19
log
@Signature revisions
@
text
@d11 3
d84 1
a84 1
    sharing Inter_EnvTypes.Options = Compiler.Debugger_Types.Options
@


1.18
log
@Options & Info changes
@
text
@d11 3
d81 3
a83 2
    sharing Compiler.EnvironTypes = Inter_EnvTypes.EnvironTypes
    sharing Inter_EnvTypes.Options = Compiler.MirTypes.Debugger_Types.Options
@


1.17
log
@Changed type of name_monitor field; indenting now done in this file.
@
text
@d11 3
d79 1
a79 1
    sharing Compiler.Parser.Lexer.Info = Inter_EnvTypes.Info
d106 2
a107 1
                  compiler_options	: Compiler.MirTypes.options}
d109 1
a109 1
    exception Error of modules * cache * Compiler.Parser.Lexer.Info.error
d122 1
a122 1
      modules * FileName.absolute * options -> modules
@


1.16
log
@Added sharing
@
text
@d11 3
d102 1
a102 1
      OPTIONS of {name_monitor		: (int * string -> unit) FileName.Option.T,
@


1.15
log
@We also pass the current module forward for the source_displayer
@
text
@d11 3
d60 2
a62 1
require "../utils/option";
a63 2
require "../main/compiler";
require "inter_envtypes";
d68 1
a68 1
    structure Option : OPTION
a69 1
    structure Inter_EnvTypes : INTER_ENVTYPES
d72 2
a73 6
    sharing Compiler.Parser.Lexer.Info =
      Inter_EnvTypes.Info
    sharing Compiler.Parser.Absyn.Datatypes =
      Inter_EnvTypes.EnvironTypes.LambdaTypes.Datatypes 
    sharing Compiler.EnvironTypes =
      Inter_EnvTypes.EnvironTypes
d99 1
a99 1
      OPTIONS of {name_monitor		: (int * string -> unit) Option.T,
@


1.14
log
@Added find_module
@
text
@d11 3
d108 1
a108 1
      ((Compiler.basis * Inter_EnvTypes.inter_env * modules) ->
@


1.13
log
@Added some sharing constraints.
@
text
@d11 3
d71 1
a71 1
      Inter_EnvTypes.EnvironTypes.LambdaTypes.Datatypes
d116 7
@


1.12
log
@Make takes an extra parameter which is a list of modules which shouldn't
be loaded from their compilation results but taked directly from there.
@
text
@d11 4
d67 4
@


1.11
log
@Added a sharing constraint.
@
text
@d11 3
d99 1
@


1.10
log
@Added delete_module
@
text
@d11 3
d57 3
@


1.9
log
@Changes to propagate compiler options as parameters instead of references.
@
text
@d11 3
d59 1
d92 4
@


1.8
log
@Debugger function now takes up-to-date environment
@
text
@d11 3
d76 1
a76 1
                  compiler_options	: Compiler.options}
@


1.7
log
@Modified sharing constraints to remove superfluous structures
@
text
@d11 3
d78 1
a78 1
      (Compiler.basis ->
@


1.6
log
@Added a debugger to make
@
text
@d11 3
a35 1
require "../main/info";
a40 1
    structure Info : INFO
a45 2
    sharing Compiler.Info = Info

d72 1
a72 1
    exception Error of modules * cache * Info.error
@


1.5
log
@Changed Error structure to Info
@
text
@d11 3
d76 3
@


1.4
log
@Changes to pervasives and representation of time.
@
text
@d11 3
d30 1
a30 1
require "../main/error";
d36 1
a36 1
    structure Error : ERROR
a40 1
    sharing Error = Compiler.Error
d42 2
d70 1
a70 1
    exception Error of modules * cache * Error.error
@


1.3
log
@Added an Error exception to allow make to return partially augmented
modules and cache tables in case of an error.
@
text
@d11 4
d43 2
a44 2
                 time		: {hi:int, lo:int},
                 dependencies	: (FileName.relative * {hi:int, lo:int}) list,
@


1.2
log
@Changes for windowing listener
@
text
@d11 3
a56 1
    exception FileName of string
d58 6
d66 2
a67 2
      Compiler.options ->
      modules * cache * FileName.absolute * (string -> unit) ->
@


1.1
log
@Initial revision
@
text
@d10 4
a13 1
 *  $Log$
d59 1
a59 1
      modules * cache * FileName.absolute ->
@
