head	1.13;
access;
symbols
	MLW_daveb_inline_1_4_99:1.13.11
	MLWorks_21c0_1999_03_25:1.13
	MLWorks_20c1_1998_08_20:1.13
	MLWorks_20c0_1998_08_04:1.13
	MLWorks_20b2c2_1998_06_19:1.13
	MLWorks_20b2_Windows_1998_06_12:1.13
	MLWorks_20b1c1_1998_05_07:1.13
	MLWorks_20b0_1998_04_07:1.13
	MLWorks_20b0_1998_03_20:1.13
	MLWorks_20m2_1998_02_16:1.13
	MLWorks_20m1_1997_10_23:1.13
	MLWorks_11r1:1.13.8.1.1.1.1
	MLWorks_workspace_97:1.13.10
	MLWorks_dt_wizard:1.13.9
	MLWorks_11c0_1997_09_09:1.13.8.1.1.1
	MLWorks_10r3:1.13.8.1.3
	MLWorks_10r2_551:1.13.8.1.2
	MLWorks_11:1.13.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.13.8.1
	MLWorks_20m0_1997_06_20:1.13
	MLWorks_1_0_r2c2_1997_06_14:1.13.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.13.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.13.8
	MLWorks_BugFix_1997_04_24:1.13
	MLWorks_1_0_r2_Win32_1997_04_11:1.13
	MLWorks_1_0_r2_Unix_1997_04_04:1.13
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.13.6.1.1
	MLWorks_gui_1996_12_18:1.13.7
	MLWorks_1_0_Win32_1996_12_17:1.13.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.13.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.13.4.1
	MLWorks_1_0_Irix_1996_11_28:1.13.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.13.5
	MLWorks_1_0_Unix_1996_11_14:1.13.4
	MLWorks_Open_Beta2_1996_10_11:1.13.3
	MLWorks_License_dev:1.13.2
	MLWorks_1_open_beta_1996_09_13:1.13.1
	MLWorks_Open_Beta_1996_08_22:1.13
	MLWorks_Beta_1996_07_02:1.13
	MLWorks_Beta_1996_06_07:1.13
	MLWorks_Beta_1996_06_06:1.13
	MLWorks_Beta_1996_06_05:1.13
	MLWorks_Beta_1996_06_03:1.13
	MLWorks_Beta_1996_05_31:1.13
	MLWorks_Beta_1996_05_30:1.13
	ML_beta_release_12/08/94:1.11
	ML_beta_release_03/08/94:1.11
	ML_revised_beta_release_25/05/94:1.9
	ML_final_beta_release_02/03/94:1.8
	mlworks-28-01-1994:1.8
	Release:1.8
	mlworks-beta-01-09-1993:1.8
	MLWorks-1-0-4-29/01/1993:1.4
	MLWorks-1-0-3-21/12/1992:1.2
	MLWorks-1-0-2-15/12/1992:1.2
	MLWorks-1-0-1-04/12/1992:1.2;
locks; strict;
comment	@ * @;


1.13
date	96.03.19.16.24.43;	author matthew;	state Exp;
branches
	1.13.1.1
	1.13.2.1
	1.13.3.1
	1.13.4.1
	1.13.5.1
	1.13.6.1
	1.13.7.1
	1.13.8.1
	1.13.9.1
	1.13.10.1
	1.13.11.1;
next	1.12;

1.12
date	94.12.07.13.22.31;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	94.06.09.16.01.46;	author nickh;	state Exp;
branches;
next	1.10;

1.10
date	94.05.26.13.54.02;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	94.03.09.10.53.11;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	93.07.05.14.00.32;	author daveb;	state Exp;
branches
	1.8.1.1;
next	1.7;

1.7
date	93.04.20.13.20.11;	author richard;	state Exp;
branches;
next	1.6;

1.6
date	93.03.11.11.09.03;	author matthew;	state Exp;
branches;
next	1.5;

1.5
date	93.03.01.15.21.17;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	93.01.15.11.24.12;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	93.01.14.14.26.52;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	92.11.20.16.14.01;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	92.10.09.08.13.03;	author richard;	state Exp;
branches;
next	;

1.8.1.1
date	93.07.05.14.00.32;	author jont;	state Exp;
branches;
next	;

1.13.1.1
date	96.09.13.11.15.44;	author hope;	state Exp;
branches;
next	;

1.13.2.1
date	96.10.07.16.05.54;	author hope;	state Exp;
branches;
next	;

1.13.3.1
date	96.10.17.11.24.11;	author hope;	state Exp;
branches;
next	;

1.13.4.1
date	96.11.14.12.48.45;	author hope;	state Exp;
branches
	1.13.4.1.1.1;
next	;

1.13.4.1.1.1
date	96.11.28.15.00.14;	author hope;	state Exp;
branches;
next	;

1.13.5.1
date	96.11.22.18.08.34;	author hope;	state Exp;
branches;
next	;

1.13.6.1
date	96.12.17.17.47.16;	author hope;	state Exp;
branches
	1.13.6.1.1.1;
next	;

1.13.6.1.1.1
date	97.02.24.11.36.57;	author hope;	state Exp;
branches;
next	;

1.13.7.1
date	96.12.18.09.41.16;	author hope;	state Exp;
branches;
next	;

1.13.8.1
date	97.05.12.10.33.42;	author hope;	state Exp;
branches
	1.13.8.1.1.1
	1.13.8.1.2.1
	1.13.8.1.3.1;
next	;

1.13.8.1.1.1
date	97.07.28.18.19.10;	author daveb;	state Exp;
branches
	1.13.8.1.1.1.1.1;
next	;

1.13.8.1.1.1.1.1
date	97.10.07.11.44.18;	author jkbrook;	state Exp;
branches;
next	;

1.13.8.1.2.1
date	97.09.08.17.12.46;	author daveb;	state Exp;
branches;
next	;

1.13.8.1.3.1
date	97.09.09.14.08.24;	author daveb;	state Exp;
branches;
next	;

1.13.9.1
date	97.09.10.19.23.33;	author brucem;	state Exp;
branches;
next	;

1.13.10.1
date	97.09.11.20.54.33;	author daveb;	state Exp;
branches;
next	;

1.13.11.1
date	99.04.01.17.56.41;	author daveb;	state Exp;
branches;
next	;


desc
@Link-loader for the interpreter.
Functor.
@


1.13
log
@Changes for value polymorphism\
@
text
@(*  ==== INTERPRETER LINK/LOADER ====
 *
 *  Copyright (C) 1992 Harlequin Ltd
 *
 *  Implementation
 *  --------------
 *
 *  Revision Log
 *  ------------
 *  $Log: _interload.sml,v $
 * Revision 1.12  1994/12/07  13:22:31  matthew
 * Changing uses of cast
 *
 *  Revision 1.11  1994/06/09  16:01:46  nickh
 *  New runtime directory structure.
 *
 *  Revision 1.10  1994/05/26  13:54:02  jont
 *  Change Lists.qsort to Lists.msort
 *
 *  Revision 1.9  1994/03/09  10:53:11  jont
 *  Moving module types into separate file
 *
 *  Revision 1.8  1993/07/05  14:00:32  daveb
 *  Removed exception environments.
 *
 *  Revision 1.7  1993/04/20  13:20:11  richard
 *  Corrected #define symbols to upper case.
 *
 *  Revision 1.6  1993/03/11  11:09:03  matthew
 *  Signature revisions
 *
 *  Revision 1.5  1993/03/01  15:21:17  matthew
 *  Added MLVALUE ot MachTypes
 *
 *  Revision 1.4  1993/01/15  11:24:12  daveb
 *  Changed ObjectFile.version to ObjectFile.object_file_version to avoid
 *  problem on the C side of the run time system.
 *
 *  Revision 1.3  1993/01/14  14:26:52  daveb
 *  Added  ObjectFile.version parameter to load_wordset call.
 *
 *  Revision 1.2  1992/11/20  16:14:01  jont
 *  Modified sharing constraints to remove superfluous structures
 *
 *  Revision 1.1  1992/10/09  08:13:03  richard
 *  Initial revision
 *
 *)

require "../main/code_module";
require "../rts/gen/objectfile";
require "../utils/lists";
require "inter_envtypes";
require "interload";

functor InterLoad (
  structure Code_Module : CODE_MODULE
  structure Inter_EnvTypes : INTER_ENVTYPES
  structure Lists : LISTS
  structure ObjectFile: OBJECTFILE
) : INTERLOAD =
  struct
    structure Inter_EnvTypes = Inter_EnvTypes
    structure Ident = Inter_EnvTypes.EnvironTypes.LambdaTypes.Ident
    structure Symbol = Ident.Symbol
    structure NewMap = Inter_EnvTypes.EnvironTypes.NewMap

    type Module = Code_Module.Module

    val cast = MLWorks.Internal.Value.cast

    fun load debugger
             (Inter_EnvTypes.INTER_ENV (values, structures, functors),
              module_map)
             (Code_Module.MODULE module_element_list) =
      let
        val value_map     = NewMap.apply values
        val structure_map = NewMap.apply structures
        val functor_map   = NewMap.apply functors

        fun element (result, []) = result
          | element (result, Code_Module.REAL (i, string) :: rest) =
            element ((i, cast (MLWorks.Internal.Value.string_to_real string))::result, rest)
          | element (result, Code_Module.STRING (i, string) :: rest) =
            element ((i, cast string)::result, rest)
          | element (result, Code_Module.MLVALUE (i, value) :: rest) =
            element ((i, cast value)::result, rest)
          | element (result, Code_Module.VAR (i, name) :: rest) =
            element ((i, value_map (Ident.VAR (Symbol.find_symbol name)))::result, rest)
          | element (result, Code_Module.EXN (i, name) :: rest) =
            element ((i, value_map (Ident.EXCON (Symbol.find_symbol name)))::result, rest)
          | element (result, Code_Module.STRUCT (i, name) :: rest) =
            element ((i, structure_map (Ident.STRID (Symbol.find_symbol name)))::result, rest)
          | element (result, Code_Module.FUNCT (i, name) :: rest) =
            element ((i, functor_map (Ident.FUNID (Symbol.find_symbol name)))::result, rest)
          | element (result, Code_Module.WORDSET (Code_Module.WORD_SET list) :: rest) =
            element (MLWorks.Internal.Runtime.Loader.load_wordset (
		       ObjectFile.OBJECT_FILE_VERSION,
		       list
		     ) @@ result,
		     rest
		    )
          | element (result, Code_Module.EXTERNAL (i, name) :: rest) =
            element ((i, module_map name)::result, rest)

	fun order_fn((i:int, _), (j, _)) = i < j

	val elements = element([], module_element_list)

        val closure =
          MLWorks.Internal.Value.list_to_tuple
          (map #2
           (if Lists.check_order order_fn elements then
              elements
            else
              Lists.msort order_fn elements))
      in
        cast ((debugger (cast closure)) (cast closure)) : MLWorks.Internal.Value.T
      end

  end
@


1.13.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a10 3
 * Revision 1.13  1996/03/19  16:24:43  matthew
 * Changes for value polymorphism\
 *
@


1.13.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a10 3
 * Revision 1.13  1996/03/19  16:24:43  matthew
 * Changes for value polymorphism\
 *
@


1.13.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a10 3
 * Revision 1.13  1996/03/19  16:24:43  matthew
 * Changes for value polymorphism\
 *
@


1.13.8.1
log
@branched from 1.13
@
text
@a10 3
 * Revision 1.13  1996/03/19  16:24:43  matthew
 * Changes for value polymorphism\
 *
@


1.13.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a10 3
 * Revision 1.13.8.1  1997/05/12  10:33:42  hope
 * branched from 1.13
 *
@


1.13.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a10 3
 * Revision 1.13.8.1  1997/05/12  10:33:42  hope
 * branched from 1.13
 *
@


1.13.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a10 3
 * Revision 1.13.8.1  1997/05/12  10:33:42  hope
 * branched from 1.13
 *
@


1.13.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a10 3
 * Revision 1.13.8.1.1.1  1997/07/28  18:19:10  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.13.7.1
log
@branched from 1.13
@
text
@a10 3
 * Revision 1.13  1996/03/19  16:24:43  matthew
 * Changes for value polymorphism\
 *
@


1.13.6.1
log
@branched from 1.13
@
text
@a10 3
 * Revision 1.13  1996/03/19  16:24:43  matthew
 * Changes for value polymorphism\
 *
@


1.13.6.1.1.1
log
@branched from 1.13.6.1
@
text
@a10 3
 * Revision 1.13.6.1  1996/12/17  17:47:16  hope
 * branched from 1.13
 *
@


1.13.5.1
log
@branched from 1.13
@
text
@a10 3
 * Revision 1.13  1996/03/19  16:24:43  matthew
 * Changes for value polymorphism\
 *
@


1.13.4.1
log
@branched from 1.13
@
text
@a10 3
 * Revision 1.13  1996/03/19  16:24:43  matthew
 * Changes for value polymorphism\
 *
@


1.13.4.1.1.1
log
@branched from 1.13.4.1
@
text
@a10 3
 * Revision 1.13.4.1  1996/11/14  12:48:45  hope
 * branched from 1.13
 *
@


1.13.3.1
log
@branched from 1.13
@
text
@a10 3
 * Revision 1.13  1996/03/19  16:24:43  matthew
 * Changes for value polymorphism\
 *
@


1.13.2.1
log
@branched from 1.13
@
text
@a10 3
 * Revision 1.13  1996/03/19  16:24:43  matthew
 * Changes for value polymorphism\
 *
@


1.13.1.1
log
@branched from 1.13
@
text
@a10 3
 * Revision 1.13  1996/03/19  16:24:43  matthew
 * Changes for value polymorphism\
 *
@


1.12
log
@Changing uses of cast
@
text
@d11 3
d70 1
a70 1
    val castit : 'a -> 'b = MLWorks.Internal.Value.cast (fn x => x)
d83 1
a83 1
            element ((i, castit (MLWorks.Internal.Value.string_to_real string))::result, rest)
d85 1
a85 1
            element ((i, castit string)::result, rest)
d87 1
a87 1
            element ((i, castit value)::result, rest)
d111 6
a116 7
          castit
          (MLWorks.Internal.Value.list_to_tuple
           (map #2
            (if Lists.check_order order_fn elements then
	       elements
	       else
		 Lists.msort order_fn elements)))
d118 1
a118 1
        castit ((debugger closure) closure) : MLWorks.Internal.Value.T
@


1.11
log
@New runtime directory structure.
@
text
@d11 3
d67 2
a77 2
        val cast = MLWorks.Internal.Value.cast

d80 1
a80 1
            element ((i, cast (MLWorks.Internal.Value.string_to_real string))::result, rest)
d82 1
a82 1
            element ((i, cast string)::result, rest)
d84 1
a84 1
            element ((i, cast value)::result, rest)
d108 1
a108 1
          MLWorks.Internal.Value.cast
d116 1
a116 1
        MLWorks.Internal.Value.cast ((debugger closure) closure) : MLWorks.Internal.Value.T
@


1.10
log
@Change Lists.qsort to Lists.msort
@
text
@d11 3
d45 1
a45 1
require "../rts/objectfile";
@


1.9
log
@Moving module types into separate file
@
text
@d11 3
d97 4
d105 4
a108 2
            (Lists.qsort (fn ((i:int, _), (j:int, _)) => i < j)
             (element ([], module_element_list)))))
@


1.8
log
@Removed exception environments.
@
text
@d11 3
d38 1
a38 1
require "../machine/machtypes";
d45 1
a45 1
  structure MachTypes : MACHTYPES
a51 1
    structure MachTypes = MachTypes
d56 1
a56 1
    type Module = MachTypes.Module
d61 1
a61 1
             (MachTypes.MODULE module_element_list) =
d70 1
a70 1
          | element (result, MachTypes.REAL (i, string) :: rest) =
d72 1
a72 1
          | element (result, MachTypes.STRING (i, string) :: rest) =
d74 1
a74 1
          | element (result, MachTypes.MLVALUE (i, value) :: rest) =
d76 1
a76 1
          | element (result, MachTypes.VAR (i, name) :: rest) =
d78 1
a78 1
          | element (result, MachTypes.EXN (i, name) :: rest) =
d80 1
a80 1
          | element (result, MachTypes.STRUCT (i, name) :: rest) =
d82 1
a82 1
          | element (result, MachTypes.FUNCT (i, name) :: rest) =
d84 1
a84 1
          | element (result, MachTypes.WORDSET (MachTypes.WORD_SET list) :: rest) =
d91 1
a91 1
          | element (result, MachTypes.EXTERNAL (i, name) :: rest) =
@


1.8.1.1
log
@Fork for bug fixing
@
text
@a10 3
 *  Revision 1.8  1993/07/05  14:00:32  daveb
 *  Removed exception environments.
 *
@


1.7
log
@Corrected #define symbols to upper case.
@
text
@d11 3
d57 1
a57 1
             (Inter_EnvTypes.INTER_ENV (values, exceptions, structures, functors),
a61 1
        val exception_map = NewMap.apply exceptions
d77 1
a77 1
            element ((i, exception_map (Ident.EXCON (Symbol.find_symbol name)))::result, rest)
@


1.6
log
@Signature revisions
@
text
@d11 3
d82 1
a82 1
		       ObjectFile.object_file_version,
@


1.5
log
@Added MLVALUE ot MachTypes
@
text
@d11 3
d44 1
a44 2
    structure Datatypes = Inter_EnvTypes.EnvironTypes.LambdaTypes.Datatypes
    structure Ident = Datatypes.Ident
d46 4
a49 1
    structure NewMap = Datatypes.NewMap
@


1.4
log
@Changed ObjectFile.version to ObjectFile.object_file_version to avoid
problem on the C side of the run time system.
@
text
@d11 4
d62 2
@


1.3
log
@Added  ObjectFile.version parameter to load_wordset call.
@
text
@d11 3
d68 1
a68 1
		       ObjectFile.version,
@


1.2
log
@Modified sharing constraints to remove superfluous structures
@
text
@d11 3
d20 1
d25 6
a30 3
functor InterLoad (structure MachTypes : MACHTYPES
                   structure Inter_EnvTypes : INTER_ENVTYPES
                   structure Lists : LISTS) : INTERLOAD =
d64 6
a69 1
            element (MLWorks.Internal.Runtime.Loader.load_wordset list @@ result, rest)
@


1.1
log
@Initial revision
@
text
@d10 4
a13 1
 *  $Log$
d27 2
a28 1
    structure Ident = Inter_EnvTypes.Ident
d30 1
a30 1

d36 4
a39 4
        val value_map     = Inter_EnvTypes.NewMap.apply values
        val exception_map = Inter_EnvTypes.NewMap.apply exceptions
        val structure_map = Inter_EnvTypes.NewMap.apply structures
        val functor_map   = Inter_EnvTypes.NewMap.apply functors
@
