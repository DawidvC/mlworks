head	1.5;
access;
symbols
	mlworks-28-01-1994:1.5
	Release:1.5
	mlworks-beta-01-09-1993:1.5
	MLWorks-1-0-4-29/01/1993:1.5
	MLWorks-1-0-3-21/12/1992:1.5
	MLWorks-1-0-2-15/12/1992:1.5
	MLWorks-1-0-1-04/12/1992:1.5;
locks; strict;


1.5
date	92.11.26.16.27.12;	author daveb;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	92.09.02.08.24.51;	author richard;	state Exp;
branches;
next	1.3;

1.3
date	92.08.21.10.46.21;	author clive;	state Exp;
branches;
next	1.2;

1.2
date	92.08.20.15.02.33;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	92.08.20.14.00.42;	author matthew;	state Exp;
branches;
next	;

1.5.1.1
date	92.11.26.16.27.12;	author jont;	state Exp;
branches;
next	;


desc
@Nasty low level bits used by the top loop.
@


1.5
log
@THIS FILE IS NO LONGER USED!!!
@
text
@(* TOPAUX signature *)
(*
$Log: topaux.sml,v $
Revision 1.4  1992/09/02  08:24:51  richard
Installed central error reporting mechanism.

Revision 1.3  1992/08/21  10:46:21  clive
> Added a loop inside the debugger

Revision 1.2  1992/08/20  15:02:33  matthew
Added log & copyright message


Copyright (c) 1992 Harlequin Ltd.

*)

THIS FILE IS NO LONGER USED!!!

require "../main/error";
require "../lexer/lexer";

signature TOPAUX =
  sig
    structure Error : ERROR
    structure Lexer : LEXER

    datatype syntax_result =
      REQUIRE of string |
      CODE

    val topdec : Lexer.Info.options -> Lexer.TokenStream * string -> syntax_result
    val initialize_for_loop : Lexer.Info.options -> unit
    val add_to_the_defined_functions : string * string * 'a -> unit
    val add_aux_functions : Lexer.Info.options -> unit
    val initialize_debugger : (string -> unit) -> unit
    val set_debug_level : int -> unit
    val get_debug_level : unit -> int

    exception StopLoop 
  end

@


1.5.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.5  1992/11/26  16:27:12  daveb
THIS FILE IS NO LONGER USED!!!

@


1.4
log
@Installed central error reporting mechanism.
@
text
@d4 3
d18 2
d32 2
a33 2
    val topdec : Lexer.TokenStream * string -> syntax_result
    val initialize_for_loop : unit -> unit
d35 1
a35 1
    val add_aux_functions : unit -> unit
@


1.3
log
@> Added a loop inside the debugger
@
text
@d4 3
d15 1
d20 1
d22 1
d26 1
d34 1
@


1.2
log
@Added log & copyright message
@
text
@d4 2
d7 1
d24 1
a24 1
    val initialize_debugger : unit -> unit
@


1.1
log
@Initial revision
@
text
@d1 8
@
