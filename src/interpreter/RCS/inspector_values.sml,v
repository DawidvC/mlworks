head	1.13;
access;
symbols
	MLW_daveb_inline_1_4_99:1.13.4
	MLWorks_21c0_1999_03_25:1.13
	MLWorks_20c1_1998_08_20:1.13
	MLWorks_20c0_1998_08_04:1.13
	MLWorks_20b2c2_1998_06_19:1.13
	MLWorks_20b2_Windows_1998_06_12:1.13
	MLWorks_20b1c1_1998_05_07:1.13
	MLWorks_20b0_1998_04_07:1.13
	MLWorks_20b0_1998_03_20:1.13
	MLWorks_20m2_1998_02_16:1.13
	MLWorks_20m1_1997_10_23:1.13
	MLWorks_11r1:1.13.1.1.1.1.1
	MLWorks_workspace_97:1.13.3
	MLWorks_dt_wizard:1.13.2
	MLWorks_11c0_1997_09_09:1.13.1.1.1.1
	MLWorks_10r3:1.13.1.1.3
	MLWorks_10r2_551:1.13.1.1.2
	MLWorks_11:1.13.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.13.1.1
	MLWorks_20m0_1997_06_20:1.13
	MLWorks_1_0_r2c2_1997_06_14:1.13.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.13.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.13.1
	MLWorks_BugFix_1997_04_24:1.13
	MLWorks_1_0_r2_Win32_1997_04_11:1.13
	MLWorks_1_0_r2_Unix_1997_04_04:1.13
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.12.6.1.1
	MLWorks_gui_1996_12_18:1.12.7
	MLWorks_1_0_Win32_1996_12_17:1.12.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.12.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.12.4.1
	MLWorks_1_0_Irix_1996_11_28:1.12.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.12.5
	MLWorks_1_0_Unix_1996_11_14:1.12.4
	MLWorks_Open_Beta2_1996_10_11:1.12.3
	MLWorks_License_dev:1.12.2
	MLWorks_1_open_beta_1996_09_13:1.12.1
	MLWorks_Open_Beta_1996_08_22:1.12
	MLWorks_Beta_1996_07_02:1.11
	MLWorks_Beta_1996_06_07:1.11
	MLWorks_Beta_1996_06_06:1.11
	MLWorks_Beta_1996_06_05:1.11
	MLWorks_Beta_1996_06_03:1.11
	MLWorks_Beta_1996_05_31:1.11
	MLWorks_Beta_1996_05_30:1.11
	ML_beta_release_12/08/94:1.7
	ML_beta_release_03/08/94:1.7
	ML_revised_beta_release_25/05/94:1.7
	ML_final_beta_release_02/03/94:1.6
	mlworks-28-01-1994:1.5
	Release:1.5
	mlworks-beta-01-09-1993:1.5;
locks; strict;
comment	@ * @;


1.13
date	97.03.06.16.44.12;	author matthew;	state Exp;
branches
	1.13.1.1
	1.13.2.1
	1.13.3.1
	1.13.4.1;
next	1.12;

1.12
date	96.08.06.15.23.25;	author andreww;	state Exp;
branches
	1.12.1.1
	1.12.2.1
	1.12.3.1
	1.12.4.1
	1.12.5.1
	1.12.6.1
	1.12.7.1;
next	1.11;

1.11
date	95.10.19.15.46.09;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	95.10.13.23.36.45;	author brianm;	state Exp;
branches;
next	1.9;

1.9
date	95.10.09.22.15.57;	author brianm;	state Exp;
branches;
next	1.8;

1.8
date	95.07.25.15.58.22;	author matthew;	state Exp;
branches;
next	1.7;

1.7
date	94.03.11.13.03.46;	author matthew;	state Exp;
branches;
next	1.6;

1.6
date	93.10.19.14.14.30;	author nosa;	state Exp;
branches;
next	1.5;

1.5
date	93.04.23.14.45.28;	author matthew;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	93.04.21.11.50.21;	author matthew;	state Exp;
branches;
next	1.3;

1.3
date	93.04.20.10.13.52;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	93.04.01.10.58.58;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	93.03.12.15.25.50;	author matthew;	state Exp;
branches;
next	;

1.5.1.1
date	93.04.23.14.45.28;	author jont;	state Exp;
branches;
next	;

1.12.1.1
date	96.09.13.11.15.50;	author hope;	state Exp;
branches;
next	;

1.12.2.1
date	96.10.07.16.05.57;	author hope;	state Exp;
branches;
next	;

1.12.3.1
date	96.10.17.11.24.15;	author hope;	state Exp;
branches;
next	;

1.12.4.1
date	96.11.14.12.48.50;	author hope;	state Exp;
branches
	1.12.4.1.1.1;
next	;

1.12.4.1.1.1
date	96.11.28.15.00.17;	author hope;	state Exp;
branches;
next	;

1.12.5.1
date	96.11.22.18.08.38;	author hope;	state Exp;
branches;
next	;

1.12.6.1
date	96.12.17.17.47.19;	author hope;	state Exp;
branches
	1.12.6.1.1.1;
next	;

1.12.6.1.1.1
date	97.02.24.11.37.01;	author hope;	state Exp;
branches;
next	;

1.12.7.1
date	96.12.18.09.41.19;	author hope;	state Exp;
branches;
next	;

1.13.1.1
date	97.05.12.10.33.46;	author hope;	state Exp;
branches
	1.13.1.1.1.1
	1.13.1.1.2.1
	1.13.1.1.3.1;
next	;

1.13.1.1.1.1
date	97.07.28.18.19.14;	author daveb;	state Exp;
branches
	1.13.1.1.1.1.1.1;
next	;

1.13.1.1.1.1.1.1
date	97.10.07.11.44.22;	author jkbrook;	state Exp;
branches;
next	;

1.13.1.1.2.1
date	97.09.08.17.12.50;	author daveb;	state Exp;
branches;
next	;

1.13.1.1.3.1
date	97.09.09.14.08.29;	author daveb;	state Exp;
branches;
next	;

1.13.2.1
date	97.09.10.19.23.41;	author brucem;	state Exp;
branches;
next	;

1.13.3.1
date	97.09.11.20.54.38;	author daveb;	state Exp;
branches;
next	;

1.13.4.1
date	99.04.01.17.56.44;	author daveb;	state Exp;
branches;
next	;


desc
@tty inspector
@


1.13
log
@Fixing equality
@
text
@(* inspector utility function
 *
 * Copyright (C) 1993 Harlequin Ltd.
 *
 * $Log: inspector_values.sml,v $
 * Revision 1.12  1996/08/06  15:23:25  andreww
 * [Bug #1521]
 * propagating changes to typechecker/_scheme.sml
 *
 * Revision 1.11  1995/10/19  15:46:09  matthew
 * Correcting misspelling of abbreviate.
 *
Revision 1.10  1995/10/13  23:36:45  brianm
Adding support for abbreviated strings (needed by the Graphical Inspector).

Revision 1.9  1995/10/09  22:15:57  brianm
Adding string type test.

Revision 1.8  1995/07/25  15:58:22  matthew
Adding utilities for graphical inspection

Revision 1.7  1994/03/11  13:03:46  matthew
Added inspector_method functions

Revision 1.6  1993/10/19  14:14:30  nosa
Boolean indicator for Monomorphic debugger decapsulation.

Revision 1.5  1993/04/23  14:45:28  matthew
Added DuffUserMethod exception to return failure from inspection

Revision 1.4  1993/04/21  11:50:21  matthew
Added set reference function and commented it out

Revision 1.3  1993/04/20  10:13:52  matthew
Added add_inspect_method function

Revision 1.2  1993/04/01  10:58:58  matthew
Removed printing stuff
Simplified return type

Revision 1.1  1993/03/12  15:25:50  matthew
Initial revision

 *)

signature INSPECTOR_VALUES =
  sig

    type Type
    type options

    val add_inspect_method : MLWorks.Internal.Value.T * Type -> unit
    val delete_inspect_method : MLWorks.Internal.Value.T * Type -> unit
    val delete_all_inspect_methods : unit -> unit

    exception DuffUserMethod of exn

    val get_inspector_values : options ->  bool ->
      (MLWorks.Internal.Value.T * Type) ->
      (string * (MLWorks.Internal.Value.T * Type)) list

    val type_eq : Type * Type -> bool
    val is_scalar_value : (MLWorks.Internal.Value.T * Type) -> bool
    val is_string_type : Type -> bool
    val is_ref_type : Type -> bool

(*
    exception SetReference
    val set_reference :
      (MLWorks.Internal.Value.T * Type) * (MLWorks.Internal.Value.T * Type)
      ->
      unit
*)

    val string_abbreviation : string ref

  end


@


1.13.4.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a5 3
 * Revision 1.13  1997/03/06  16:44:12  matthew
 * Fixing equality
 *
@


1.13.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a5 3
 * Revision 1.13  1997/03/06  16:44:12  matthew
 * Fixing equality
 *
@


1.13.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a5 3
 * Revision 1.13  1997/03/06  16:44:12  matthew
 * Fixing equality
 *
@


1.13.1.1
log
@branched from 1.13
@
text
@a5 3
 * Revision 1.13  1997/03/06  16:44:12  matthew
 * Fixing equality
 *
@


1.13.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.13.1.1  1997/05/12  10:33:46  hope
 * branched from 1.13
 *
@


1.13.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.13.1.1  1997/05/12  10:33:46  hope
 * branched from 1.13
 *
@


1.13.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.13.1.1  1997/05/12  10:33:46  hope
 * branched from 1.13
 *
@


1.13.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 * Revision 1.13.1.1.1.1  1997/07/28  18:19:14  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.12
log
@[Bug #1521]
propagating changes to typechecker/_scheme.sml
@
text
@d6 4
d65 1
@


1.12.7.1
log
@branched from 1.12
@
text
@a5 4
 * Revision 1.12  1996/08/06  15:23:25  andreww
 * [Bug #1521]
 * propagating changes to typechecker/_scheme.sml
 *
@


1.12.6.1
log
@branched from 1.12
@
text
@a5 4
 * Revision 1.12  1996/08/06  15:23:25  andreww
 * [Bug #1521]
 * propagating changes to typechecker/_scheme.sml
 *
@


1.12.6.1.1.1
log
@branched from 1.12.6.1
@
text
@a5 3
 * Revision 1.12.6.1  1996/12/17  17:47:19  hope
 * branched from 1.12
 *
@


1.12.5.1
log
@branched from 1.12
@
text
@a5 4
 * Revision 1.12  1996/08/06  15:23:25  andreww
 * [Bug #1521]
 * propagating changes to typechecker/_scheme.sml
 *
@


1.12.4.1
log
@branched from 1.12
@
text
@a5 4
 * Revision 1.12  1996/08/06  15:23:25  andreww
 * [Bug #1521]
 * propagating changes to typechecker/_scheme.sml
 *
@


1.12.4.1.1.1
log
@branched from 1.12.4.1
@
text
@a5 3
 * Revision 1.12.4.1  1996/11/14  12:48:50  hope
 * branched from 1.12
 *
@


1.12.3.1
log
@branched from 1.12
@
text
@a5 4
 * Revision 1.12  1996/08/06  15:23:25  andreww
 * [Bug #1521]
 * propagating changes to typechecker/_scheme.sml
 *
@


1.12.2.1
log
@branched from 1.12
@
text
@a5 4
 * Revision 1.12  1996/08/06  15:23:25  andreww
 * [Bug #1521]
 * propagating changes to typechecker/_scheme.sml
 *
@


1.12.1.1
log
@branched from 1.12
@
text
@a5 4
 * Revision 1.12  1996/08/06  15:23:25  andreww
 * [Bug #1521]
 * propagating changes to typechecker/_scheme.sml
 *
@


1.11
log
@Correcting misspelling of abbreviate.
@
text
@d6 3
d46 1
d54 1
a54 1
    val get_inspector_values : bool ->
@


1.10
log
@Adding support for abbreaviated strings (needed by the Graphical Inspector).
@
text
@d6 3
d66 1
a66 1
    val string_abbreaviation : string ref
@


1.9
log
@Adding string type test.
@
text
@d6 3
d62 2
@


1.8
log
@Adding utilities for graphical inspection
@
text
@d6 3
d50 1
@


1.7
log
@Added inspector_method functions
@
text
@d6 3
d44 3
@


1.6
log
@Boolean indicator for Monomorphic debugger decapsulation.
@
text
@d6 3
d33 2
@


1.5
log
@Added DuffUserMethod exception to return failure from inspection
@
text
@d6 3
d33 1
a33 1
    val get_inspector_values :
@


1.5.1.1
log
@Fork for bug fixing
@
text
@a5 3
Revision 1.5  1993/04/23  14:45:28  matthew
Added DuffUserMethod exception to return failure from inspection

@


1.4
log
@Added set reference function and commented it out
@
text
@d6 3
d27 2
@


1.3
log
@Added add_inspect_method function
@
text
@d6 3
d28 9
@


1.2
log
@Removed printing stuff
Simplified return type
@
text
@d6 4
d19 2
@


1.1
log
@Initial revision
@
text
@d6 3
a10 2
require "../typechecker/datatypes";

d13 2
a14 3
    structure Datatypes: DATATYPES
    exception CantInspect
    exception BadLabel
d17 2
a18 2
      (MLWorks.Internal.Value.T * Datatypes.Type) ->
      (string * (string * string) list * (string -> (MLWorks.Internal.Value.T * Datatypes.Type)))
@
