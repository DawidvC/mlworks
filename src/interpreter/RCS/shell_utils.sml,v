head	1.48;
access;
symbols
	MLW_daveb_inline_1_4_99:1.48.1
	MLWorks_21c0_1999_03_25:1.48
	MLWorks_20c1_1998_08_20:1.47
	MLWorks_20c0_1998_08_04:1.47
	MLWorks_20b2c2_1998_06_19:1.47
	MLWorks_20b2_Windows_1998_06_12:1.47
	MLWorks_20b1c1_1998_05_07:1.46
	MLWorks_20b0_1998_04_07:1.45
	MLWorks_20b0_1998_03_20:1.45
	MLWorks_20m2_1998_02_16:1.45
	MLWorks_20m1_1997_10_23:1.44
	MLWorks_11r1:1.43.1.1.1.1.1
	MLWorks_workspace_97:1.44.2
	MLWorks_dt_wizard:1.44.1
	MLWorks_11c0_1997_09_09:1.43.1.1.1.1
	MLWorks_10r3:1.43.1.1.3
	MLWorks_10r2_551:1.43.1.1.2
	MLWorks_11:1.43.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.43.1.1
	MLWorks_20m0_1997_06_20:1.44
	MLWorks_1_0_r2c2_1997_06_14:1.43.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.43.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.43.1
	MLWorks_BugFix_1997_04_24:1.43
	MLWorks_1_0_r2_Win32_1997_04_11:1.43
	MLWorks_1_0_r2_Unix_1997_04_04:1.43
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.42.6.1.1
	MLWorks_gui_1996_12_18:1.42.7
	MLWorks_1_0_Win32_1996_12_17:1.42.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.42.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.42.4.1
	MLWorks_1_0_Irix_1996_11_28:1.42.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.42.5
	MLWorks_1_0_Unix_1996_11_14:1.42.4
	MLWorks_Open_Beta2_1996_10_11:1.42.3
	MLWorks_License_dev:1.42.2
	MLWorks_1_open_beta_1996_09_13:1.42.1
	MLWorks_Open_Beta_1996_08_22:1.42
	MLWorks_Beta_1996_07_02:1.40
	MLWorks_Beta_1996_06_07:1.40
	MLWorks_Beta_1996_06_06:1.40
	MLWorks_Beta_1996_06_05:1.40
	MLWorks_Beta_1996_06_03:1.40
	MLWorks_Beta_1996_05_31:1.40
	MLWorks_Beta_1996_05_30:1.40
	ML_beta_release_12/08/94:1.19
	ML_beta_release_03/08/94:1.19
	ML_revised_beta_release_25/05/94:1.16
	ML_final_beta_release_02/03/94:1.12
	mlworks-28-01-1994:1.11
	Release:1.8
	mlworks-beta-01-09-1993:1.8;
locks; strict;
comment	@ * @;


1.48
date	98.10.30.16.20.41;	author jont;	state Exp;
branches
	1.48.1.1;
next	1.47;

1.47
date	98.05.19.11.49.24;	author mitchell;	state Exp;
branches;
next	1.46;

1.46
date	98.05.07.09.19.24;	author mitchell;	state Exp;
branches;
next	1.45;

1.45
date	98.01.29.16.05.48;	author johnh;	state Exp;
branches;
next	1.44;

1.44
date	97.05.01.12.39.47;	author jont;	state Exp;
branches
	1.44.1.1
	1.44.2.1;
next	1.43;

1.43
date	97.03.19.13.13.40;	author matthew;	state Exp;
branches
	1.43.1.1;
next	1.42;

1.42
date	96.08.15.12.59.22;	author daveb;	state Exp;
branches
	1.42.1.1
	1.42.2.1
	1.42.3.1
	1.42.4.1
	1.42.5.1
	1.42.6.1
	1.42.7.1;
next	1.41;

1.41
date	96.08.06.14.33.59;	author andreww;	state Exp;
branches;
next	1.40;

1.40
date	96.05.20.12.12.21;	author daveb;	state Exp;
branches;
next	1.39;

1.39
date	96.05.08.11.16.24;	author daveb;	state Exp;
branches;
next	1.38;

1.38
date	96.05.03.11.49.36;	author daveb;	state Exp;
branches;
next	1.37;

1.37
date	96.04.23.12.46.46;	author daveb;	state Exp;
branches;
next	1.36;

1.36
date	96.04.09.16.41.09;	author daveb;	state Exp;
branches;
next	1.35;

1.35
date	96.03.25.15.38.41;	author daveb;	state Exp;
branches;
next	1.34;

1.34
date	96.03.19.12.23.35;	author daveb;	state Exp;
branches;
next	1.33;

1.33
date	96.03.11.10.33.31;	author daveb;	state Exp;
branches;
next	1.32;

1.32
date	96.02.29.12.23.41;	author matthew;	state Exp;
branches;
next	1.31;

1.31
date	96.02.01.16.02.01;	author daveb;	state Exp;
branches;
next	1.30;

1.30
date	96.01.22.11.19.15;	author daveb;	state Exp;
branches;
next	1.29;

1.29
date	96.01.17.17.12.46;	author matthew;	state Exp;
branches;
next	1.28;

1.28
date	95.12.04.11.41.37;	author daveb;	state Exp;
branches;
next	1.27;

1.27
date	95.10.20.10.09.59;	author daveb;	state Exp;
branches;
next	1.26;

1.26
date	95.10.17.10.36.35;	author matthew;	state Exp;
branches;
next	1.25;

1.25
date	95.07.13.10.10.17;	author matthew;	state Exp;
branches;
next	1.24;

1.24
date	95.06.14.12.19.52;	author daveb;	state Exp;
branches;
next	1.23;

1.23
date	95.06.05.14.11.02;	author daveb;	state Exp;
branches;
next	1.22;

1.22
date	95.05.25.17.23.07;	author daveb;	state Exp;
branches;
next	1.21;

1.21
date	95.04.27.15.18.30;	author matthew;	state Exp;
branches;
next	1.20;

1.20
date	95.04.21.13.59.20;	author daveb;	state Exp;
branches;
next	1.19;

1.19
date	94.08.02.10.03.22;	author daveb;	state Exp;
branches;
next	1.18;

1.18
date	94.07.29.16.12.46;	author daveb;	state Exp;
branches;
next	1.17;

1.17
date	94.06.21.14.23.19;	author daveb;	state Exp;
branches;
next	1.16;

1.16
date	94.03.30.18.45.44;	author daveb;	state Exp;
branches;
next	1.15;

1.15
date	94.03.25.16.02.39;	author daveb;	state Exp;
branches;
next	1.14;

1.14
date	94.03.17.17.04.08;	author matthew;	state Exp;
branches;
next	1.13;

1.13
date	94.03.14.16.40.54;	author matthew;	state Exp;
branches;
next	1.12;

1.12
date	94.01.28.16.27.46;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	94.01.06.16.16.02;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	93.10.08.16.23.14;	author matthew;	state Exp;
branches;
next	1.9;

1.9
date	93.09.03.13.12.21;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	93.08.25.14.49.58;	author matthew;	state Exp;
branches
	1.8.1.1;
next	1.7;

1.7
date	93.08.24.12.15.11;	author matthew;	state Exp;
branches;
next	1.6;

1.6
date	93.07.14.16.53.29;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	93.06.16.16.23.20;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	93.05.27.14.43.55;	author matthew;	state Exp;
branches;
next	1.3;

1.3
date	93.05.12.14.20.35;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	93.05.11.16.15.37;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	93.04.30.10.57.02;	author matthew;	state Exp;
branches;
next	;

1.8.1.1
date	93.08.25.14.49.58;	author jont;	state Exp;
branches;
next	1.8.1.2;

1.8.1.2
date	93.10.07.12.55.12;	author matthew;	state Exp;
branches;
next	;

1.42.1.1
date	96.09.13.11.16.34;	author hope;	state Exp;
branches;
next	;

1.42.2.1
date	96.10.07.16.06.28;	author hope;	state Exp;
branches;
next	;

1.42.3.1
date	96.10.17.11.24.44;	author hope;	state Exp;
branches;
next	;

1.42.4.1
date	96.11.14.12.49.34;	author hope;	state Exp;
branches
	1.42.4.1.1.1;
next	;

1.42.4.1.1.1
date	96.11.28.15.00.49;	author hope;	state Exp;
branches;
next	;

1.42.5.1
date	96.11.22.18.09.10;	author hope;	state Exp;
branches;
next	;

1.42.6.1
date	96.12.17.17.47.49;	author hope;	state Exp;
branches
	1.42.6.1.1.1;
next	;

1.42.6.1.1.1
date	97.02.24.11.37.35;	author hope;	state Exp;
branches;
next	;

1.42.7.1
date	96.12.18.09.41.49;	author hope;	state Exp;
branches;
next	;

1.43.1.1
date	97.05.12.10.34.17;	author hope;	state Exp;
branches
	1.43.1.1.1.1
	1.43.1.1.2.1
	1.43.1.1.3.1;
next	;

1.43.1.1.1.1
date	97.07.28.18.19.18;	author daveb;	state Exp;
branches
	1.43.1.1.1.1.1.1;
next	;

1.43.1.1.1.1.1.1
date	97.10.07.11.44.25;	author jkbrook;	state Exp;
branches;
next	;

1.43.1.1.2.1
date	97.09.08.17.12.53;	author daveb;	state Exp;
branches;
next	;

1.43.1.1.3.1
date	97.09.09.14.08.32;	author daveb;	state Exp;
branches;
next	;

1.44.1.1
date	97.09.10.19.23.46;	author brucem;	state Exp;
branches;
next	;

1.44.2.1
date	97.09.11.20.54.42;	author daveb;	state Exp;
branches;
next	1.44.2.2;

1.44.2.2
date	97.11.26.11.37.10;	author daveb;	state Exp;
branches;
next	1.44.2.3;

1.44.2.3
date	97.12.02.16.30.47;	author daveb;	state Exp;
branches;
next	1.44.2.4;

1.44.2.4
date	97.12.03.13.30.07;	author daveb;	state Exp;
branches;
next	;

1.48.1.1
date	99.04.01.17.56.45;	author daveb;	state Exp;
branches;
next	;


desc
@Utilities for shell code
@


1.48
log
@[Bug #70198]
Add functions to make dlls and exes from a project
@
text
@(*  Utilities for shell etc.
 *  Copyright (C) 1993 Harlequin Ltd
 *
 *  $Log: shell_utils.sml,v $
 * Revision 1.47  1998/05/19  11:49:24  mitchell
 * [Bug #50071]
 * Add support for force compiles and loads
 *
 * Revision 1.46  1998/05/07  09:19:24  mitchell
 * [Bug #50071]
 * Add support for touch_all_sources
 *
 * Revision 1.45  1998/01/29  16:05:48  johnh
 * [Bug #30071]
 * Merge in Project Workspace changes.
 *
 * Revision 1.44.2.4  1997/12/03  13:30:07  daveb
 * [Bug #30017]
 * Rationalised Shell.Project commands:
 * Removed touch_source_file.
 * Added {,show_}{compile,load}_targets.
 * Made load/compile functions take strings instead of module_ids, and
 * explicit location values.
 *
 * Revision 1.44.2.3  1997/12/02  16:30:47  daveb
 * [Bug #30071]
 * Removed functions for loading from source files.
 *
 * Revision 1.44.2.2  1997/11/26  11:37:10  daveb
 * [Bug #30071]
 * The action queue is no more, so ShellUtils.use_{file,string} and
 * ShellUtils.read_dot_mlworks no longer take queue functions.
 *
 * Revision 1.44.2.1  1997/09/11  20:54:42  daveb
 * branched from trunk for label MLWorks_workspace_97
 *
 * Revision 1.44  1997/05/01  12:39:47  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
 * Revision 1.43  1997/03/19  13:13:40  matthew
 * Adding use function
 *
 * Revision 1.42  1996/08/15  12:59:22  daveb
 * [Bug #1519]
 * Added value_from_history_entry.
 *
 * Revision 1.41  1996/08/06  14:33:59  andreww
 * [Bug #1521]
 * Propagating changes made to typechecker/_scheme.sml and _types.sml
 *
 * Revision 1.40  1996/05/20  12:12:21  daveb
 * Moved preferences_file_name to new save_image module.
 *
 * Revision 1.39  1996/05/08  11:16:24  daveb
 * Added Info.options argument to use_file.
 *
 * Revision 1.38  1996/05/03  11:49:36  daveb
 * Removed the ShellUtils.Error exception.
 *
 * Revision 1.37  1996/04/23  12:46:46  daveb
 * show_source no longer returns a destroy function.
 * Added some comments.
 *
 * Revision 1.36  1996/04/09  16:41:09  daveb
 * Added preferences argument to load_source, load_file and use_file, because
 * UserContext.process_result now requires this.
 *
 * Revision 1.35  1996/03/25  15:38:41  daveb
 * Added delete_from_project.
 * Modified types of some other functions to suit Incremental.match_*_path.
 *
 * Revision 1.34  1996/03/19  12:23:35  daveb
 * Added check_load_file.
 *
 * Revision 1.33  1996/03/11  10:33:31  daveb
 * Removed compile_string and default_dynamic.
 *
 * Revision 1.32  1996/02/29  12:23:41  matthew
 * Adding preference_file_name function
 *
 * Revision 1.31  1996/02/01  16:02:01  daveb
 * Removed commented-out save function.
 *
 *  Revision 1.30  1996/01/22  11:19:15  daveb
 *  Removed history functions (replaced by more complete functionality in
 *  gui_utils).
 *
 *  Revision 1.29  1996/01/17  17:12:46  matthew
 *  Adding value_from_user_context function
 *
 *  Revision 1.28  1995/12/04  11:41:37  daveb
 *  InterMake and Incremental now use Projects.
 *
 *  Revision 1.27  1995/10/20  10:09:59  daveb
 *  Added show_source.
 *
 *  Revision 1.26  1995/10/17  10:36:35  matthew
 *  Simplifying tracing interface.
 *
 *  Revision 1.25  1995/07/13  10:10:17  matthew
 *  Adding compile functions for use by evaluator.
 *
 *  Revision 1.24  1995/06/14  12:19:52  daveb
 *  Removed redundant Context parameter from edit functions.
 *
 *  Revision 1.23  1995/06/05  14:11:02  daveb
 *  make_file and load_file now take a user_options argument, for passing
 *  to process_result.
 *
 *  Revision 1.22  1995/05/25  17:23:07  daveb
 *  add_history_item now takes user_preferences instead of user_options.
 *
 *  Revision 1.21  1995/04/27  15:18:30  matthew
 *  Removing exception EditObject
 *  
 *  Revision 1.20  1995/04/21  13:59:20  daveb
 *  touch_compile_module and touch_compile_file now take a filename
 *  argument for use in location information in the event of errors.
 *  
 *  Revision 1.19  1994/08/02  10:03:22  daveb
 *  Added editable function.
 *  
 *  Revision 1.18  1994/07/29  16:12:46  daveb
 *  Moved preferences out of Options structure.
 *  
 *  Revision 1.17  1994/06/21  14:23:19  daveb
 *  Replaced Context Refs by user_contexts.  Replaced the Context argument
 *  of the Error exception with a list of new modules, for updating the
 *  user_context appropriately.
 *  
 *  Revision 1.16  1994/03/30  18:45:44  daveb
 *  Added touch_compile_module and touch_compile_file.
 *  
 *  Revision 1.15  1994/03/25  16:02:39  daveb
 *  Revised functions to work with ActionQueue.with_source_path.
 *  
 *  Revision 1.14  1994/03/17  17:04:08  matthew
 *  Added edit_file and check_make_file
 *  
 *  Revision 1.13  1994/03/14  16:40:54  matthew
 *  Added untrace function
 *  
 *  Revision 1.12  1994/01/28  16:27:46  matthew
 *  Improvements to error locations
 *  
 *  Revision 1.11  1994/01/06  16:16:02  matthew
 *  Added load_file
 *  
 *  Revision 1.10  1993/10/08  16:23:14  matthew
 *  Merging in bug fixes
 *  
 *  Revision 1.9  1993/09/03  13:12:21  jont
 *  Added save_file function
 *  
 *  Revision 1.8.1.2  1993/10/07  12:55:12  matthew
 *  Added object_editable, object_traceable, find_common_completion,
 *  trim_history_string and add_history_item
 *  
 *  Revision 1.8.1.1  1993/08/25  14:49:58  jont
 *  Fork for bug fixing
 *  
 *  Revision 1.8  1993/08/25  14:49:58  matthew
 *  Return quit function from ShellUtils.edit_string etc.
 *  
 *  Revision 1.7  1993/08/24  12:15:11  matthew
 *  Added message function parameter to trace
 *  
 *  Revision 1.6  1993/07/14  16:53:29  daveb
 *  make_file and use_file now take strings (representing moduleids) instead
 *  of filenames.
 *  
 *  Revision 1.5  1993/06/16  16:23:20  matthew
 *  Added edit_object and trace functions
 *  
 *  Revision 1.4  1993/05/27  14:43:55  matthew
 *  Added error_info param to eval
 *  Added function get_completions
 *  
 *  Revision 1.3  1993/05/12  14:20:35  matthew
 *  Added make, use and eval functions
 *  
 *  Revision 1.2  1993/05/11  16:15:37  matthew
 *  Added make_file, parse_absolute and (commented out) eval
 *  
 *  Revision 1.1  1993/04/30  10:57:02  matthew
 *  Initial revision
 *  
 *
 *)

require "../main/options";
require "../main/info";

signature SHELL_UTILS =
  sig
    structure Info : INFO
    structure Options : OPTIONS

    type preferences
    type user_preferences
    type UserOptions
    type user_context
    type history_entry
    type Context
    type Type
    type ShellData
    type Project

    exception EditFailed of string

    (* The following functions invoke the editor on the location passed as
       an argument (either as the type, a string representation thereof,
       or a code vector containing the location).  If the editor is not
       linked by a socket or DDE, the function returned will destroy it. *)
    val edit_location : Info.Location.T * preferences -> (unit -> unit)
    val edit_source : string * preferences -> (unit -> unit)
    val edit_object : MLWorks.Internal.Value.T * preferences -> (unit -> unit)

    (* edit_file just takes a file name *)
    val edit_file : string * preferences -> (unit -> unit)

    (* show_source is similar to edit_source, but only succeeds if the
       editor is linked via a socket or DDE.  The caller can use the
       File Viewer tool if show_source fails. *)
    val show_source : string * preferences -> unit

    (* uneditable filenames (e.g. listeners) are of the form "<...>" *)
    val editable : Info.Location.T -> bool
    val object_editable : MLWorks.Internal.Value.T -> bool

    val trace : MLWorks.Internal.Value.T -> unit

    val untrace : MLWorks.Internal.Value.T -> unit

    val object_traceable : MLWorks.Internal.Value.T -> bool

    val object_path: string * Info.Location.T -> string 
                     (* source-file-name * location -> object-path *)

    val force_compile: 
      Info.Location.T * Options.options  -> Info.options -> string -> unit
    val force_compile_all: 
      Info.Location.T * Options.options  -> Info.options -> unit

    val delete_from_project: string * Info.Location.T -> unit

    (* Just makes the executable required to call the project dll for the given target *)
    val make_exe_from_project :
      Info.Location.T *
      Info.options *
      string * string list ->
      unit

    (* Makes the dll/so from a project *)
    val make_dll_from_project :
      Info.Location.T *
      Info.options *
      string * string list ->
      unit

    (* Compile/load files *)

    val compile_file :
      Info.Location.T * Options.options  -> Info.options -> string -> unit

    val show_compile_file :
      Info.Location.T * (string -> unit) -> Info.options -> string -> unit

    val load_file :
      user_context *
      Info.Location.T *
      Options.options *
      preferences *
      (string -> unit) ->
      Info.options -> string ->
      unit

    val show_load_file :
      Info.Location.T * (string -> unit) ->
      Info.options -> string ->
      unit


    (* Compile/load targets *)

    val compile_targets :
      Info.Location.T * Options.options  -> Info.options -> unit

    val show_compile_targets :
      Info.Location.T * (string -> unit) -> Info.options -> unit

    val load_targets :
      user_context *
      Info.Location.T *
      Options.options *
      preferences *
      (string -> unit) ->
      Info.options -> 
      unit

    val show_load_targets :
      Info.Location.T * (string -> unit) ->
      Info.options -> unit

    (* Use functions *)

    val use_file : ShellData * (string -> unit) * string -> unit
    val use_string : ShellData * (string -> unit) * string -> unit


    (* Type Dynamic *)

    exception NotAnExpression

    val eval :
      Info.options ->
      string *
      Options.options *
      Context ->
      (MLWorks.Internal.Value.T * Type)

    val print_value :
      (MLWorks.Internal.Value.T * Type) *
      Options.print_options * 
      Context ->
      string

    val print_type :
      Type * Options.options * Context -> string

    val get_completions :
      string * Options.options * Context -> (string * string list)

    val find_common_completion : string list -> string

    val lookup_name :
      string * Context * (MLWorks.Internal.Value.T * Type)
      -> (MLWorks.Internal.Value.T * Type)

    val value_from_history_entry :
      history_entry * Options.options ->
      (string * (MLWorks.Internal.Value.T * Type)) option

    val value_from_user_context :
      user_context * UserOptions ->
      (string * (MLWorks.Internal.Value.T * Type)) option

    val read_dot_mlworks: ShellData -> unit
  end
@


1.48.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a4 4
 * Revision 1.48  1998/10/30  16:20:41  jont
 * [Bug #70198]
 * Add functions to make dlls and exes from a project
 *
@


1.47
log
@[Bug #50071]
Add support for force compiles and loads
@
text
@d5 4
d208 1
d248 14
a350 1

@


1.46
log
@[Bug #50071]
Add support for touch_all_sources
@
text
@d5 4
d233 7
a239 2
    val touch_source: string * Info.Location.T -> unit
    val touch_all_sources: Info.Location.T -> unit
@


1.45
log
@[Bug #30071]
Merge in Project Workspace changes.
@
text
@d5 4
d230 1
@


1.44
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@d5 24
a194 1
    type ModuleId
a195 1
    type Result
d225 3
a227 1
    val touch_source_module: string * string -> unit
d229 1
a229 1
    val touch_source_file: string * string -> unit
d231 2
a232 1
    val delete_from_project: string * string -> unit
d234 4
a237 1
    val load_source_file :
d239 1
a239 1
      string *
a240 1
      UserOptions *
a241 2
      ((MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
       (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T)) *
d243 1
a243 1
      Info.options -> ModuleId ->
d246 3
a248 8
    val check_load_source_file :
      Context *
      string *
      Options.options *
      ((MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
       (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T)) *
      (string -> unit) ->
      Info.options -> ModuleId ->
a250 4
    val compile_file :
      string * Options.options * (string -> unit) ->
      Info.options -> ModuleId ->
      unit
d252 1
a252 4
    val check_compile_file :
      string * Options.options * (string -> unit) ->
      Info.options -> ModuleId ->
      unit
d254 2
a255 19
    (* use_file assumes that the filename argument (the first string) has
       already had any ~ abbreviation expanded.  (This expansion is done
       in _action_queue). *)

(*
    val use_file :
      {filename: string,
       user_context: user_context,
       toplevel_name: string,
       error_info: Info.options,
       user_options: UserOptions,
       preferences: preferences,
       debugger: (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
                 (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T),
       output_fn: string -> unit,
       level: int,
       queue_function: int -> unit} ->
      unit
*)
d257 2
a258 2
    val use_file : ShellData * (string -> unit) * (int -> unit) * string -> unit
    val use_string : ShellData * (string -> unit) * (int -> unit) * string -> unit
d260 1
a260 1
    val load_file :
d262 1
a262 1
      string *
d266 1
a266 1
      Info.options -> ModuleId ->
d269 11
a279 4
    val check_load_file :
      string * (string -> unit) ->
      Info.options -> ModuleId ->
      unit
d316 1
a316 1
    val read_dot_mlworks: ShellData * (int -> unit) -> unit
@


1.44.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a4 4
 * Revision 1.44  1997/05/01  12:39:47  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.44.2.2
log
@[Bug #30071]
The action queue is no more, so ShellUtils.use_{file,string} and
ShellUtils.read_dot_mlworks no longer take queue functions.
@
text
@a4 3
 * Revision 1.44.2.1  1997/09/11  20:54:42  daveb
 * branched from trunk for label MLWorks_workspace_97
 *
d265 2
a266 2
    val use_file : ShellData * (string -> unit) * string -> unit
    val use_string : ShellData * (string -> unit) * string -> unit
d317 1
a317 1
    val read_dot_mlworks: ShellData -> unit
@


1.44.2.3
log
@[Bug #30071]
Removed functions for loading from source files.
@
text
@a4 5
 * Revision 1.44.2.2  1997/11/26  11:37:10  daveb
 * [Bug #30071]
 * The action queue is no more, so ShellUtils.use_{file,string} and
 * ShellUtils.read_dot_mlworks no longer take queue functions.
 *
d180 1
d212 2
d216 22
d247 20
@


1.44.2.4
log
@[Bug #30017]
Rationalised Shell.Project commands:
Removed touch_source_file.
Added {,show_}{compile,load}_targets.
Made load/compile functions take strings instead of module_ids, and
explicit location values.
@
text
@a4 4
 * Revision 1.44.2.3  1997/12/02  16:30:47  daveb
 * [Bug #30071]
 * Removed functions for loading from source files.
 *
d183 1
d214 1
a214 3
    val touch_source: string * Info.Location.T -> unit

    val delete_from_project: string * Info.Location.T -> unit
d216 1
a216 2

    (* Compile/load files *)
d219 2
a220 12
      Info.Location.T * Options.options  -> Info.options -> string -> unit

    val show_compile_file :
      Info.Location.T * (string -> unit) -> Info.options -> string -> unit

    val load_file :
      user_context *
      Info.Location.T *
      Options.options *
      preferences *
      (string -> unit) ->
      Info.options -> string ->
d223 3
a225 3
    val show_load_file :
      Info.Location.T * (string -> unit) ->
      Info.options -> string ->
d228 2
d231 1
a231 9
    (* Compile/load targets *)

    val compile_targets :
      Info.Location.T * Options.options  -> Info.options -> unit

    val show_compile_targets :
      Info.Location.T * (string -> unit) -> Info.options -> unit

    val load_targets :
d233 1
a233 1
      Info.Location.T *
d237 1
a237 1
      Info.options -> 
d240 4
a243 11
    val show_load_targets :
      Info.Location.T * (string -> unit) ->
      Info.options -> unit

    (* Use functions *)

    val use_file : ShellData * (string -> unit) * string -> unit
    val use_string : ShellData * (string -> unit) * string -> unit


    (* Type Dynamic *)
@


1.44.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a4 4
 * Revision 1.44  1997/05/01  12:39:47  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.43
log
@Adding use function
@
text
@d5 3
d307 1
a307 1
      (string * (MLWorks.Internal.Value.T * Type)) MLWorks.Option.option
d311 1
a311 1
      (string * (MLWorks.Internal.Value.T * Type)) MLWorks.Option.option
@


1.43.1.1
log
@branched from 1.43
@
text
@a4 3
 * Revision 1.43  1997/03/19  13:13:40  matthew
 * Adding use function
 *
@


1.43.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a4 3
 * Revision 1.43.1.1  1997/05/12  10:34:17  hope
 * branched from 1.43
 *
@


1.43.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a4 3
 * Revision 1.43.1.1  1997/05/12  10:34:17  hope
 * branched from 1.43
 *
@


1.43.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a4 3
 * Revision 1.43.1.1  1997/05/12  10:34:17  hope
 * branched from 1.43
 *
@


1.43.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a4 3
 * Revision 1.43.1.1.1.1  1997/07/28  18:19:18  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.42
log
@[Bug #1519]
Added value_from_history_entry.
@
text
@d5 4
d169 1
a169 1

d241 2
d256 4
d281 1
a281 3
      Context * 
      ((MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
       (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T)) ->
d310 1
@


1.42.7.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/08/15  12:59:22  daveb
 * [Bug #1519]
 * Added value_from_history_entry.
 *
@


1.42.6.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/08/15  12:59:22  daveb
 * [Bug #1519]
 * Added value_from_history_entry.
 *
@


1.42.6.1.1.1
log
@branched from 1.42.6.1
@
text
@a4 3
 * Revision 1.42.6.1  1996/12/17  17:47:49  hope
 * branched from 1.42
 *
@


1.42.5.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/08/15  12:59:22  daveb
 * [Bug #1519]
 * Added value_from_history_entry.
 *
@


1.42.4.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/08/15  12:59:22  daveb
 * [Bug #1519]
 * Added value_from_history_entry.
 *
@


1.42.4.1.1.1
log
@branched from 1.42.4.1
@
text
@a4 3
 * Revision 1.42.4.1  1996/11/14  12:49:34  hope
 * branched from 1.42
 *
@


1.42.3.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/08/15  12:59:22  daveb
 * [Bug #1519]
 * Added value_from_history_entry.
 *
@


1.42.2.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/08/15  12:59:22  daveb
 * [Bug #1519]
 * Added value_from_history_entry.
 *
@


1.42.1.1
log
@branched from 1.42
@
text
@a4 4
 * Revision 1.42  1996/08/15  12:59:22  daveb
 * [Bug #1519]
 * Added value_from_history_entry.
 *
@


1.41
log
@[Bug #1521]
Propagating changes made to typechecker/_scheme.sml and _types.sml
@
text
@d5 4
d161 1
d294 4
d299 2
a300 1
      user_context * UserOptions -> (string * (MLWorks.Internal.Value.T * Type)) MLWorks.Option.option
@


1.40
log
@Moved preferences_file_name to new save_image module.
@
text
@d5 3
d278 1
a278 4
      Type *
      Options.print_options *
      Context ->
      string
@


1.39
log
@Added Info.options argument to use_file.
@
text
@d5 3
a291 1
    val preference_file_name : unit -> string MLWorks.Option.option
@


1.38
log
@Removed the ShellUtils.Error exception.
@
text
@d5 3
d227 11
a237 10
      string *
      user_context *
      string *
      UserOptions *
      preferences *
      ((MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
       (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T)) *
      (string -> unit) *
      int *
      (int -> unit) ->
@


1.37
log
@show_source no longer returns a destroy function.
Added some comments.
@
text
@d5 4
a180 2

    exception Error of Info.error * Info.error list
@


1.36
log
@Added preferences argument to load_source, load_file and use_file, because
UserContext.process_result now requires this.
@
text
@d5 4
d152 4
a155 2
    val editable : Info.Location.T -> bool

d158 3
a160 1
    val show_source : string * preferences -> (unit -> unit)
a161 1
    val edit_object : MLWorks.Internal.Value.T * preferences -> (unit -> unit)
d163 7
@


1.35
log
@Added delete_from_project.
Modified types of some other functions to suit Incremental.match_*_path.
@
text
@d5 4
d177 1
d212 1
d224 1
@


1.34
log
@Added check_load_file.
@
text
@d5 3
d166 2
d176 1
a176 1
      ModuleId ->
d186 1
a186 1
      ModuleId ->
d190 3
a192 1
      string * Options.options * (string -> unit) -> ModuleId -> unit
d195 3
a197 1
      string * Options.options * (string -> unit) -> ModuleId -> unit
d219 1
a219 1
      ModuleId ->
d224 1
a224 1
      ModuleId ->
@


1.33
log
@Removed compile_string and default_dynamic.
@
text
@d5 3
a208 1
      UserOptions *
d210 5
@


1.32
log
@Adding preference_file_name function
@
text
@d5 3
a220 9

    val compile_string :
      Info.options ->
      (string * string * (unit -> user_context) * UserOptions * 
       ((MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
        (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T))) ->
      Result
      
    val default_dynamic : MLWorks.Internal.Value.T * Type
@


1.31
log
@Removed commented-out save function.
@
text
@d5 3
d251 2
@


1.30
log
@Removed history functions (replaced by more complete functionality in
gui_utils).
@
text
@d5 4
a179 13

    (*
    val save_file :
      string * 
      Context *
      string *
      (string -> unit) *
      Options.options *
      ((MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
       (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T)) *
      (string -> unit) ->
      unit
    *)
@


1.29
log
@Adding value_from_user_context function
@
text
@d5 3
a253 5

    val trim_history_string : string * user_preferences -> string

    val add_history_item :
	  ('_a * '_a list ref * ('_a * '_a -> bool) * user_preferences) -> unit
@


1.28
log
@InterMake and Incremental now use Projects.
@
text
@d5 3
d256 3
d260 1
@


1.27
log
@Added show_source.
@
text
@d5 3
a113 1
    type modules
d138 1
a138 1
    exception Error of modules * Info.error * Info.error list
d140 1
a140 1
    val touch_compile_module: string * string -> unit
d142 1
a142 1
    val touch_compile_file: string * string -> unit
d144 1
a144 1
    val make_file :
a146 1
      (string -> unit) *
d155 1
a155 1
    val check_make_file :
a157 1
      (string -> unit) *
d165 7
d182 1
d240 3
a242 1
    val get_completions : string * Options.options * Context -> (string * string list)
d245 4
a248 1
    val lookup_name : string * Context * (MLWorks.Internal.Value.T * Type) -> (MLWorks.Internal.Value.T * Type)
@


1.26
log
@Simplifying tracing interface.
@
text
@d5 3
d122 3
a124 2
    val edit_source : Info.Location.T * preferences -> (unit -> unit)
    val edit_string : string * preferences -> (unit -> unit)
@


1.25
log
@Adding compile functions for use by evaluator.
@
text
@d5 3
d126 3
a128 7
    val trace : 
      (MLWorks.Internal.Value.T * Type)
      * UserOptions * (unit -> Context) * (string -> unit) -> unit

    val untrace : 
      (MLWorks.Internal.Value.T * Type)
      * UserOptions * (unit -> Context) * (string -> unit) -> unit
@


1.24
log
@Removed redundant Context parameter from edit functions.
@
text
@d5 3
d110 2
d208 7
d232 1
@


1.23
log
@make_file and load_file now take a user_options argument, for passing
to process_result.
@
text
@d5 4
d111 2
a112 2
    val edit_source : Info.Location.T * Context * preferences -> (unit -> unit)
    val edit_string : string * Context * preferences -> (unit -> unit)
d114 1
a114 1
    val edit_object : MLWorks.Internal.Value.T * Context * preferences -> (unit -> unit)
@


1.22
log
@add_history_item now takes user_preferences instead of user_options.
@
text
@d5 3
d135 1
d183 1
@


1.21
log
@Removing exception EditObject
@
text
@d5 75
a79 72
Revision 1.20  1995/04/21  13:59:20  daveb
touch_compile_module and touch_compile_file now take a filename
argument for use in location information in the event of errors.

Revision 1.19  1994/08/02  10:03:22  daveb
Added editable function.

Revision 1.18  1994/07/29  16:12:46  daveb
Moved preferences out of Options structure.

Revision 1.17  1994/06/21  14:23:19  daveb
Replaced Context Refs by user_contexts.  Replaced the Context argument
of the Error exception with a list of new modules, for updating the
user_context appropriately.

Revision 1.16  1994/03/30  18:45:44  daveb
Added touch_compile_module and touch_compile_file.

Revision 1.15  1994/03/25  16:02:39  daveb
Revised functions to work with ActionQueue.with_source_path.

Revision 1.14  1994/03/17  17:04:08  matthew
Added edit_file and check_make_file

Revision 1.13  1994/03/14  16:40:54  matthew
Added untrace function

Revision 1.12  1994/01/28  16:27:46  matthew
Improvements to error locations

Revision 1.11  1994/01/06  16:16:02  matthew
Added load_file

Revision 1.10  1993/10/08  16:23:14  matthew
Merging in bug fixes

Revision 1.9  1993/09/03  13:12:21  jont
Added save_file function

Revision 1.8.1.2  1993/10/07  12:55:12  matthew
Added object_editable, object_traceable, find_common_completion,
trim_history_string and add_history_item

Revision 1.8.1.1  1993/08/25  14:49:58  jont
Fork for bug fixing

Revision 1.8  1993/08/25  14:49:58  matthew
Return quit function from ShellUtils.edit_string etc.

Revision 1.7  1993/08/24  12:15:11  matthew
Added message function parameter to trace

Revision 1.6  1993/07/14  16:53:29  daveb
make_file and use_file now take strings (representing moduleids) instead
of filenames.

Revision 1.5  1993/06/16  16:23:20  matthew
Added edit_object and trace functions

Revision 1.4  1993/05/27  14:43:55  matthew
Added error_info param to eval
Added function get_completions

Revision 1.3  1993/05/12  14:20:35  matthew
Added make, use and eval functions

Revision 1.2  1993/05/11  16:15:37  matthew
Added make_file, parse_absolute and (commented out) eval

Revision 1.1  1993/04/30  10:57:02  matthew
Initial revision

d92 1
d112 3
a114 2
      (MLWorks.Internal.Value.T * Type) * 
      UserOptions * (unit -> Context) * (string -> unit) -> unit
d116 3
a118 2
      (MLWorks.Internal.Value.T * Type) * 
      UserOptions * (unit -> Context) * (string -> unit) -> unit
d211 1
a211 3
    val trim_history_string : string * UserOptions -> string

    val add_history_item : ('_a * '_a list ref * ('_a * '_a -> bool) * UserOptions)->unit
d213 2
@


1.20
log
@touch_compile_module and touch_compile_file now take a filename
argument for use in location information in the event of errors.
@
text
@d5 4
d98 2
a101 4
    val editable : Info.Location.T -> bool

    exception EditObject

d103 1
a103 1
    (* May raise EditFailed *)
a104 2
    val edit_object :
      MLWorks.Internal.Value.T * Context * preferences -> (unit -> unit)
@


1.19
log
@Added editable function.
@
text
@d5 3
d101 2
d117 3
a119 2
    val touch_compile_module: string -> unit
    val touch_compile_file: string -> unit
d154 3
@


1.18
log
@Moved preferences out of Options structure.
@
text
@d5 3
d93 1
@


1.17
log
@Replaced Context Refs by user_contexts.  Replaced the Context argument
of the Error exception with a list of new modules, for updating the
user_context appropriately.
@
text
@d5 5
d78 1
d88 2
a89 2
    val edit_source : Info.Location.T * Context * Options.options -> (unit -> unit)
    val edit_string : string * Context * Options.options -> (unit -> unit)
d93 3
a95 2
    val edit_file : string * Options.options -> (unit -> unit)
    val edit_object : MLWorks.Internal.Value.T * Context * Options.options -> (unit -> unit)
@


1.16
log
@Added touch_compile_module and touch_compile_file.
@
text
@d5 3
d74 2
d99 1
a99 1
    exception Error of Context * Info.error * Info.error list
d105 1
a105 1
      Context ref *
d116 1
a116 1
      Context ref *
d128 1
a128 1
      Context ref *
d139 1
a139 1
      Context ref *
d150 1
a150 1
      Context ref *
@


1.15
log
@Revised functions to work with ActionQueue.with_source_path.
@
text
@d5 3
d95 3
@


1.14
log
@Added edit_file and check_make_file
@
text
@d5 3
d70 1
a93 1
      string * 
d101 1
a104 1
      string * 
d112 1
a138 1
      string *
d143 1
@


1.13
log
@Added untrace function
@
text
@d5 3
d74 2
d90 11
@


1.12
log
@Improvements to error locations
@
text
@d5 3
d74 6
a79 1
    val trace : (MLWorks.Internal.Value.T * Type) * UserOptions * (unit -> Context) * (string -> unit) -> unit
@


1.11
log
@Added load_file
@
text
@d5 3
d79 1
d90 1
d101 1
d113 1
@


1.10
log
@Merging in bug fixes
@
text
@d5 3
d102 7
@


1.9
log
@Added save_file function
@
text
@d5 10
d63 1
d66 1
d127 5
@


1.8
log
@Return quit function from ShellUtils.edit_string etc.
@
text
@d5 3
d59 10
@


1.8.1.1
log
@Fork for bug fixing
@
text
@a4 3
Revision 1.8  1993/08/25  14:49:58  matthew
Return quit function from ShellUtils.edit_string etc.

@


1.8.1.2
log
@Added object_editable, object_traceable, find_common_completion,
trim_history_string and add_history_item
@
text
@a4 3
Revision 1.8.1.1  1993/08/25  14:49:58  jont
Fork for bug fixing

a52 1
    val object_editable : MLWorks.Internal.Value.T -> bool
a54 1
    val object_traceable : MLWorks.Internal.Value.T -> bool
a104 5
    val find_common_completion : string list -> string

    val trim_history_string : string * UserOptions -> string

    val add_history_item : ('_a * '_a list ref * ('_a * '_a -> bool) * UserOptions)->unit
@


1.7
log
@Added message function parameter to trace
@
text
@d5 3
d45 2
a46 2
    val edit_source : Info.Location.T * Context * Options.options -> unit
    val edit_string : string * Context * Options.options -> unit
d49 1
a49 1
    val edit_object : MLWorks.Internal.Value.T * Context * Options.options -> unit
@


1.6
log
@make_file and use_file now take strings (representing moduleids) instead
of filenames.
@
text
@d5 4
d48 1
a48 1
    val trace : (MLWorks.Internal.Value.T * Type) * UserOptions * (unit -> Context) -> unit
@


1.5
log
@Added edit_object and trace functions
@
text
@d5 3
a24 1
require "../utils/filename";
a30 1
    structure Filename : FILENAME
d49 1
a49 1
      Filename.absolute * 
d59 1
a59 1
      Filename.absolute *
a67 2

    val parse_absolute : (string * Info.options) -> Filename.absolute
@


1.4
log
@Added error_info param to eval
Added function get_completions
@
text
@d5 4
d39 5
@


1.3
log
@Added make, use and eval functions
@
text
@d5 3
d64 1
d85 3
@


1.2
log
@Added make_file, parse_absolute and (commented out) eval
@
text
@d5 3
d23 2
d26 2
a28 1
    val edit_source : string * Context * Options.options -> unit
d30 3
d45 11
d58 2
a59 1
(*
d67 2
a68 1
*)
d70 11
a80 1
      
@


1.1
log
@Initial revision
@
text
@d4 4
a7 1
 *  $Log: shell_utils,v $
d12 3
d17 1
d19 1
d23 26
@
