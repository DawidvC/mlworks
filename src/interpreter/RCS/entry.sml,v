head	1.7;
access;
symbols
	MLW_daveb_inline_1_4_99:1.7.1
	MLWorks_21c0_1999_03_25:1.7
	MLWorks_20c1_1998_08_20:1.6
	MLWorks_20c0_1998_08_04:1.6
	MLWorks_20b2c2_1998_06_19:1.6
	MLWorks_20b2_Windows_1998_06_12:1.6
	MLWorks_20b1c1_1998_05_07:1.6
	MLWorks_20b0_1998_04_07:1.6
	MLWorks_20b0_1998_03_20:1.6
	MLWorks_20m2_1998_02_16:1.6
	MLWorks_20m1_1997_10_23:1.6
	MLWorks_11r1:1.5.8.1.1.1.1
	MLWorks_workspace_97:1.6.2
	MLWorks_dt_wizard:1.6.1
	MLWorks_11c0_1997_09_09:1.5.8.1.1.1
	MLWorks_10r3:1.5.8.1.3
	MLWorks_10r2_551:1.5.8.1.2
	MLWorks_11:1.5.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.5.8.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.5.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.5.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.5.8
	MLWorks_BugFix_1997_04_24:1.5
	MLWorks_1_0_r2_Win32_1997_04_11:1.5
	MLWorks_1_0_r2_Unix_1997_04_04:1.5
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.5.6.1.1
	MLWorks_gui_1996_12_18:1.5.7
	MLWorks_1_0_Win32_1996_12_17:1.5.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.5.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.5.4.1
	MLWorks_1_0_Irix_1996_11_28:1.5.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.5.5
	MLWorks_1_0_Unix_1996_11_14:1.5.4
	MLWorks_Open_Beta2_1996_10_11:1.5.3
	MLWorks_License_dev:1.5.2
	MLWorks_1_open_beta_1996_09_13:1.5.1
	MLWorks_Open_Beta_1996_08_22:1.5
	MLWorks_Beta_1996_07_02:1.4
	MLWorks_Beta_1996_06_07:1.4
	MLWorks_Beta_1996_06_06:1.4
	MLWorks_Beta_1996_06_05:1.4
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4;
locks; strict;
comment	@ * @;


1.7
date	99.02.02.16.00.25;	author mitchell;	state Exp;
branches
	1.7.1.1;
next	1.6;

1.6
date	97.05.01.12.39.09;	author jont;	state Exp;
branches
	1.6.1.1
	1.6.2.1;
next	1.5;

1.5
date	96.08.06.16.14.34;	author andreww;	state Exp;
branches
	1.5.1.1
	1.5.2.1
	1.5.3.1
	1.5.4.1
	1.5.5.1
	1.5.6.1
	1.5.7.1
	1.5.8.1;
next	1.4;

1.4
date	96.01.10.13.06.34;	author matthew;	state Exp;
branches;
next	1.3;

1.3
date	95.10.06.14.09.34;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	95.09.28.23.59.10;	author brianm;	state Exp;
branches;
next	1.1;

1.1
date	95.07.17.11.49.01;	author matthew;	state Exp;
branches;
next	;

1.5.1.1
date	96.09.13.11.16.05;	author hope;	state Exp;
branches;
next	;

1.5.2.1
date	96.10.07.16.06.09;	author hope;	state Exp;
branches;
next	;

1.5.3.1
date	96.10.17.11.24.25;	author hope;	state Exp;
branches;
next	;

1.5.4.1
date	96.11.14.12.49.08;	author hope;	state Exp;
branches
	1.5.4.1.1.1;
next	;

1.5.4.1.1.1
date	96.11.28.15.00.28;	author hope;	state Exp;
branches;
next	;

1.5.5.1
date	96.11.22.18.08.52;	author hope;	state Exp;
branches;
next	;

1.5.6.1
date	96.12.17.17.47.30;	author hope;	state Exp;
branches
	1.5.6.1.1.1;
next	;

1.5.6.1.1.1
date	97.02.24.11.37.15;	author hope;	state Exp;
branches;
next	;

1.5.7.1
date	96.12.18.09.41.30;	author hope;	state Exp;
branches;
next	;

1.5.8.1
date	97.05.12.10.33.58;	author hope;	state Exp;
branches
	1.5.8.1.1.1
	1.5.8.1.2.1
	1.5.8.1.3.1;
next	;

1.5.8.1.1.1
date	97.07.28.18.19.02;	author daveb;	state Exp;
branches
	1.5.8.1.1.1.1.1;
next	;

1.5.8.1.1.1.1.1
date	97.10.07.11.44.10;	author jkbrook;	state Exp;
branches;
next	;

1.5.8.1.2.1
date	97.09.08.17.12.39;	author daveb;	state Exp;
branches;
next	;

1.5.8.1.3.1
date	97.09.09.14.08.17;	author daveb;	state Exp;
branches;
next	;

1.6.1.1
date	97.09.10.19.23.22;	author brucem;	state Exp;
branches;
next	;

1.6.2.1
date	97.09.11.20.54.25;	author daveb;	state Exp;
branches;
next	;

1.7.1.1
date	99.04.01.17.56.35;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Moved from motif
@


1.7
log
@[Bug #190500]
Remove redundant require statements
@
text
@(*
 * Copyright (c) 1995 Harlequin Ltd.
 *
 * $Log: entry.sml,v $
 * Revision 1.6  1997/05/01  12:39:09  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
 * Revision 1.5  1996/08/06  16:14:34  andreww
 * [Bug #1521]
 * Propagating changes made to typechecker/_types.sml to print
 * imperative type vars without an underscore when using value
 * polymorphism.
 *
 * Revision 1.4  1996/01/10  13:06:34  matthew
 * Simplification
 *
 *  Revision 1.3  1995/10/06  14:09:34  daveb
 *  Made searchOptions be a datatype.   Added searchContext field.
 *  Removed update function.
 *
 *  Revision 1.2  1995/09/28  23:59:10  brianm
 *  Adding is_tip function ...
 *
 *  Revision 1.1  1995/07/17  11:49:01  matthew
 *  new unit
 *  Moved from motif
 *

# Revision 1.1  1995/07/14  16:38:45  io
# new unit
# move context_browser bits over.
#
 *
 *)

(* This is auxilliary stuff from browser_tools with regard to searching
   and display
 *)


signature ENTRY =
sig

  type Entry
  type Context
  type options
  type Identifier

  (* These references control which entries are displayed. *)
  datatype BrowseOptions =
    BROWSE_OPTIONS of
    {show_sigs : bool ref,
     show_funs : bool ref,
     show_strs : bool ref,
     show_types : bool ref,
     show_exns : bool ref,
     show_vars : bool ref,
     (* show_conenvs controls whether the bodies of datatypes are
      displayed inline.  show_cons controls whether constructors
      are included in the list of values. *)
     show_conenvs : bool ref,
     show_cons : bool ref
     }

  val new_options : unit -> BrowseOptions
  val filter_entries : BrowseOptions -> Entry list -> Entry list

  datatype SearchOptions =
    SEARCH_OPTIONS of
       {showSig : bool,		(* search inside signatures *)
        showStr : bool,		(* search inside structures *)
        showFun : bool,		(* search inside functors   *)
        searchInitial : bool,	(* search initial context, used in listener *)
        searchContext : bool,	(* search user context, used in listener *)
        showType : bool}	(* show types of search results *)

  (* checks if Entry is `atomic' i.e. a value entry *)
  val is_tip : Entry -> bool
    
  val browse_entry : bool -> Entry -> Entry list

  (* basic context browser displayer *)
  val printEntry : options -> Entry -> string

  (* munged context browser displayer for use by search
     to gain access to the qualified identifiers
   *)
  val printEntry1 :
    SearchOptions * options * Entry list -> (string * string) list

  val massage : Entry -> Entry

  val context2entry : Context -> (Entry list)
    
  val get_id : Entry -> (string * bool)

  val get_entry : Identifier * Context -> Entry option

end;
@


1.7.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a4 4
 * Revision 1.7  1999/02/02  16:00:25  mitchell
 * [Bug #190500]
 * Remove redundant require statements
 *
@


1.6
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@d5 4
a35 5

require "../main/options";
require "../main/user_options";
require "../interpreter/user_context";

@


1.6.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a4 4
 * Revision 1.6  1997/05/01  12:39:09  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.6.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a4 4
 * Revision 1.6  1997/05/01  12:39:09  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.5
log
@[Bug #1521]
Propagating changes made to typechecker/_types.sml to print
imperative type vars without an underscore when using value
polymorphism.
@
text
@d5 6
d99 1
a99 1
  val get_entry : Identifier * Context -> Entry MLWorks.Option.option
@


1.5.8.1
log
@branched from 1.5
@
text
@a4 6
 * Revision 1.5  1996/08/06  16:14:34  andreww
 * [Bug #1521]
 * Propagating changes made to typechecker/_types.sml to print
 * imperative type vars without an underscore when using value
 * polymorphism.
 *
@


1.5.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a4 3
 * Revision 1.5.8.1  1997/05/12  10:33:58  hope
 * branched from 1.5
 *
@


1.5.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a4 3
 * Revision 1.5.8.1  1997/05/12  10:33:58  hope
 * branched from 1.5
 *
@


1.5.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a4 3
 * Revision 1.5.8.1  1997/05/12  10:33:58  hope
 * branched from 1.5
 *
@


1.5.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a4 3
 * Revision 1.5.8.1.1.1  1997/07/28  18:19:02  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.5.7.1
log
@branched from 1.5
@
text
@a4 6
 * Revision 1.5  1996/08/06  16:14:34  andreww
 * [Bug #1521]
 * Propagating changes made to typechecker/_types.sml to print
 * imperative type vars without an underscore when using value
 * polymorphism.
 *
@


1.5.6.1
log
@branched from 1.5
@
text
@a4 6
 * Revision 1.5  1996/08/06  16:14:34  andreww
 * [Bug #1521]
 * Propagating changes made to typechecker/_types.sml to print
 * imperative type vars without an underscore when using value
 * polymorphism.
 *
@


1.5.6.1.1.1
log
@branched from 1.5.6.1
@
text
@a4 3
 * Revision 1.5.6.1  1996/12/17  17:47:30  hope
 * branched from 1.5
 *
@


1.5.5.1
log
@branched from 1.5
@
text
@a4 6
 * Revision 1.5  1996/08/06  16:14:34  andreww
 * [Bug #1521]
 * Propagating changes made to typechecker/_types.sml to print
 * imperative type vars without an underscore when using value
 * polymorphism.
 *
@


1.5.4.1
log
@branched from 1.5
@
text
@a4 6
 * Revision 1.5  1996/08/06  16:14:34  andreww
 * [Bug #1521]
 * Propagating changes made to typechecker/_types.sml to print
 * imperative type vars without an underscore when using value
 * polymorphism.
 *
@


1.5.4.1.1.1
log
@branched from 1.5.4.1
@
text
@a4 3
 * Revision 1.5.4.1  1996/11/14  12:49:08  hope
 * branched from 1.5
 *
@


1.5.3.1
log
@branched from 1.5
@
text
@a4 6
 * Revision 1.5  1996/08/06  16:14:34  andreww
 * [Bug #1521]
 * Propagating changes made to typechecker/_types.sml to print
 * imperative type vars without an underscore when using value
 * polymorphism.
 *
@


1.5.2.1
log
@branched from 1.5
@
text
@a4 6
 * Revision 1.5  1996/08/06  16:14:34  andreww
 * [Bug #1521]
 * Propagating changes made to typechecker/_types.sml to print
 * imperative type vars without an underscore when using value
 * polymorphism.
 *
@


1.5.1.1
log
@branched from 1.5
@
text
@a4 6
 * Revision 1.5  1996/08/06  16:14:34  andreww
 * [Bug #1521]
 * Propagating changes made to typechecker/_types.sml to print
 * imperative type vars without an underscore when using value
 * polymorphism.
 *
@


1.4
log
@Simplification
@
text
@d5 3
d42 1
a42 1
  type PrintOptions
d79 1
a79 1
  val printEntry : PrintOptions -> Entry -> string
d85 1
a85 1
    SearchOptions * PrintOptions * Entry list -> (string * string) list
@


1.3
log
@Made searchOptions be a datatype.   Added searchContext field.
Removed update function.
@
text
@d5 4
d82 1
a82 1
    SearchOptions * PrintOptions * Entry list -> string list list
@


1.2
log
@Adding is_tip function ...
@
text
@d5 3
d57 8
a64 22
  val update :
    (string * bool *
     {showSig : bool,
      showStr : bool,
      showFun : bool,
      searchInitial : bool,
      showType : bool})
    ->
    {showSig : bool,
     showStr : bool,
     showFun : bool,
     searchInitial : bool,
     showType : bool}

(*
  val new :
    {showSig : bool,
     showStr : bool,
     showFun : bool,
     searchInitial : bool,
     showType : bool}
*)    
d78 2
a79 7
    {showSig : bool,
     showStr : bool,
     showFun : bool,
     searchInitial : bool,
     showType : bool}
    ->
    PrintOptions -> (Entry list) -> (string list list)
@


1.1
log
@new unit
Moved from motif
@
text
@d5 4
d76 3
@
