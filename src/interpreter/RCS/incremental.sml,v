head	1.69;
access;
symbols
	MLW_daveb_inline_1_4_99:1.69.1
	MLWorks_21c0_1999_03_25:1.69
	MLWorks_20c1_1998_08_20:1.69
	MLWorks_20c0_1998_08_04:1.69
	MLWorks_20b2c2_1998_06_19:1.69
	MLWorks_20b2_Windows_1998_06_12:1.69
	MLWorks_20b1c1_1998_05_07:1.69
	MLWorks_20b0_1998_04_07:1.69
	MLWorks_20b0_1998_03_20:1.69
	MLWorks_20m2_1998_02_16:1.69
	MLWorks_20m1_1997_10_23:1.68
	MLWorks_11r1:1.66.8.1.1.1.1
	MLWorks_workspace_97:1.67.2
	MLWorks_dt_wizard:1.67.1
	MLWorks_11c0_1997_09_09:1.66.8.1.1.1
	MLWorks_10r3:1.66.8.1.3
	MLWorks_10r2_551:1.66.8.1.2
	MLWorks_11:1.66.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.66.8.1
	MLWorks_20m0_1997_06_20:1.67
	MLWorks_1_0_r2c2_1997_06_14:1.66.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.66.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.66.8
	MLWorks_BugFix_1997_04_24:1.66
	MLWorks_1_0_r2_Win32_1997_04_11:1.66
	MLWorks_1_0_r2_Unix_1997_04_04:1.66
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.66.6.1.1
	MLWorks_gui_1996_12_18:1.66.7
	MLWorks_1_0_Win32_1996_12_17:1.66.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.66.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.66.4.1
	MLWorks_1_0_Irix_1996_11_28:1.66.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.66.5
	MLWorks_1_0_Unix_1996_11_14:1.66.4
	MLWorks_Open_Beta2_1996_10_11:1.66.3
	MLWorks_License_dev:1.66.2
	MLWorks_1_open_beta_1996_09_13:1.66.1
	MLWorks_Open_Beta_1996_08_22:1.66
	MLWorks_Beta_1996_07_02:1.65
	MLWorks_Beta_1996_06_07:1.65
	MLWorks_Beta_1996_06_06:1.65
	MLWorks_Beta_1996_06_05:1.65
	MLWorks_Beta_1996_06_03:1.65
	MLWorks_Beta_1996_05_31:1.65
	MLWorks_Beta_1996_05_30:1.65
	ML_beta_release_12/08/94:1.50
	ML_beta_release_03/08/94:1.49
	ML_revised_beta_release_25/05/94:1.45
	ML_final_beta_release_02/03/94:1.42
	mlworks-28-01-1994:1.39
	Release:1.38
	mlworks-beta-01-09-1993:1.38
	MLWorks-1-0-4-29/01/1993:1.19
	MLWorks-1-0-3-21/12/1992:1.19
	MLWorks-1-0-2-15/12/1992:1.18
	MLWorks-1-0-1-04/12/1992:1.16;
locks; strict;
comment	@ * @;


1.69
date	98.01.29.16.18.50;	author johnh;	state Exp;
branches
	1.69.1.1;
next	1.68;

1.68
date	97.09.17.15.50.08;	author brucem;	state Exp;
branches;
next	1.67;

1.67
date	97.05.01.12.39.22;	author jont;	state Exp;
branches
	1.67.1.1
	1.67.2.1;
next	1.66;

1.66
date	96.07.02.09.40.06;	author daveb;	state Exp;
branches
	1.66.1.1
	1.66.2.1
	1.66.3.1
	1.66.4.1
	1.66.5.1
	1.66.6.1
	1.66.7.1
	1.66.8.1;
next	1.65;

1.65
date	96.05.03.09.16.32;	author daveb;	state Exp;
branches;
next	1.64;

1.64
date	96.04.02.11.34.05;	author daveb;	state Exp;
branches;
next	1.63;

1.63
date	96.03.26.09.43.45;	author daveb;	state Exp;
branches;
next	1.62;

1.62
date	96.03.19.12.17.27;	author daveb;	state Exp;
branches;
next	1.61;

1.61
date	96.03.18.17.29.36;	author daveb;	state Exp;
branches;
next	1.60;

1.60
date	96.03.14.17.28.28;	author daveb;	state Exp;
branches;
next	1.59;

1.59
date	96.02.23.17.53.37;	author jont;	state Exp;
branches;
next	1.58;

1.58
date	95.12.11.15.18.20;	author daveb;	state Exp;
branches;
next	1.57;

1.57
date	95.12.11.10.12.58;	author daveb;	state Exp;
branches;
next	1.56;

1.56
date	95.12.06.17.47.10;	author daveb;	state Exp;
branches;
next	1.55;

1.55
date	95.11.29.10.32.26;	author daveb;	state Exp;
branches;
next	1.54;

1.54
date	95.07.13.12.00.07;	author matthew;	state Exp;
branches;
next	1.53;

1.53
date	95.06.01.16.18.20;	author matthew;	state Exp;
branches;
next	1.52;

1.52
date	95.03.30.13.21.22;	author matthew;	state Exp;
branches;
next	1.51;

1.51
date	95.03.02.12.49.39;	author daveb;	state Exp;
branches;
next	1.50;

1.50
date	94.08.09.14.46.55;	author daveb;	state Exp;
branches;
next	1.49;

1.49
date	94.07.28.14.56.29;	author daveb;	state Exp;
branches;
next	1.48;

1.48
date	94.07.19.17.35.23;	author daveb;	state Exp;
branches;
next	1.47;

1.47
date	94.06.22.15.00.54;	author jont;	state Exp;
branches;
next	1.46;

1.46
date	94.06.21.16.15.05;	author daveb;	state Exp;
branches;
next	1.45;

1.45
date	94.05.06.16.20.12;	author jont;	state Exp;
branches;
next	1.44;

1.44
date	94.03.25.16.22.30;	author daveb;	state Exp;
branches;
next	1.43;

1.43
date	94.03.18.14.26.42;	author matthew;	state Exp;
branches;
next	1.42;

1.42
date	94.02.25.15.50.12;	author daveb;	state Exp;
branches;
next	1.41;

1.41
date	94.02.01.16.50.15;	author daveb;	state Exp;
branches;
next	1.40;

1.40
date	94.01.28.16.27.12;	author matthew;	state Exp;
branches;
next	1.39;

1.39
date	94.01.06.16.04.03;	author matthew;	state Exp;
branches;
next	1.38;

1.38
date	93.08.12.16.18.56;	author daveb;	state Exp;
branches
	1.38.1.1;
next	1.37;

1.37
date	93.07.29.15.28.19;	author matthew;	state Exp;
branches;
next	1.36;

1.36
date	93.06.04.15.56.01;	author daveb;	state Exp;
branches;
next	1.35;

1.35
date	93.05.26.17.11.54;	author matthew;	state Exp;
branches;
next	1.34;

1.34
date	93.05.14.12.23.39;	author jont;	state Exp;
branches;
next	1.33;

1.33
date	93.05.12.10.27.20;	author matthew;	state Exp;
branches;
next	1.32;

1.32
date	93.05.11.12.46.25;	author matthew;	state Exp;
branches;
next	1.31;

1.31
date	93.05.10.14.08.47;	author daveb;	state Exp;
branches;
next	1.30;

1.30
date	93.05.06.13.44.47;	author matthew;	state Exp;
branches;
next	1.29;

1.29
date	93.04.02.13.40.33;	author matthew;	state Exp;
branches;
next	1.28;

1.28
date	93.03.29.17.48.15;	author matthew;	state Exp;
branches;
next	1.27;

1.27
date	93.03.26.16.05.37;	author jont;	state Exp;
branches;
next	1.26;

1.26
date	93.03.19.11.09.19;	author matthew;	state Exp;
branches;
next	1.25;

1.25
date	93.03.17.12.10.39;	author matthew;	state Exp;
branches;
next	1.24;

1.24
date	93.03.11.13.10.35;	author matthew;	state Exp;
branches;
next	1.23;

1.23
date	93.03.09.15.00.13;	author matthew;	state Exp;
branches;
next	1.22;

1.22
date	93.02.19.18.48.05;	author jont;	state Exp;
branches;
next	1.21;

1.21
date	93.02.09.10.22.06;	author matthew;	state Exp;
branches;
next	1.20;

1.20
date	93.02.04.13.16.08;	author matthew;	state Exp;
branches;
next	1.19;

1.19
date	92.12.18.10.06.40;	author clive;	state Exp;
branches;
next	1.18;

1.18
date	92.12.09.12.41.46;	author clive;	state Exp;
branches;
next	1.17;

1.17
date	92.12.08.20.53.21;	author jont;	state Exp;
branches;
next	1.16;

1.16
date	92.12.03.20.25.35;	author daveb;	state Exp;
branches;
next	1.15;

1.15
date	92.12.03.11.43.46;	author clive;	state Exp;
branches;
next	1.14;

1.14
date	92.12.02.17.22.49;	author daveb;	state Exp;
branches;
next	1.13;

1.13
date	92.11.26.17.03.42;	author clive;	state Exp;
branches;
next	1.12;

1.12
date	92.11.20.16.17.37;	author jont;	state Exp;
branches;
next	1.11;

1.11
date	92.11.17.17.01.47;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	92.11.12.10.02.46;	author daveb;	state Exp;
branches;
next	1.9;

1.9
date	92.10.26.17.56.19;	author clive;	state Exp;
branches;
next	1.8;

1.8
date	92.10.20.12.27.57;	author richard;	state Exp;
branches;
next	1.7;

1.7
date	92.10.16.11.05.41;	author clive;	state Exp;
branches;
next	1.6;

1.6
date	92.10.14.15.07.51;	author richard;	state Exp;
branches;
next	1.5;

1.5
date	92.10.08.11.32.27;	author richard;	state Exp;
branches;
next	1.4;

1.4
date	92.10.08.08.16.12;	author richard;	state Exp;
branches;
next	1.3;

1.3
date	92.10.07.15.42.08;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	92.10.06.14.15.00;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	92.10.01.17.19.28;	author richard;	state Exp;
branches;
next	;

1.38.1.1
date	93.08.12.16.18.56;	author jont;	state Exp;
branches;
next	;

1.66.1.1
date	96.09.13.11.15.29;	author hope;	state Exp;
branches;
next	;

1.66.2.1
date	96.10.07.16.05.45;	author hope;	state Exp;
branches;
next	;

1.66.3.1
date	96.10.17.11.24.02;	author hope;	state Exp;
branches;
next	;

1.66.4.1
date	96.11.14.12.48.30;	author hope;	state Exp;
branches
	1.66.4.1.1.1;
next	;

1.66.4.1.1.1
date	96.11.28.15.00.03;	author hope;	state Exp;
branches;
next	;

1.66.5.1
date	96.11.22.18.08.24;	author hope;	state Exp;
branches;
next	;

1.66.6.1
date	96.12.17.17.47.06;	author hope;	state Exp;
branches
	1.66.6.1.1.1;
next	;

1.66.6.1.1.1
date	97.02.24.11.36.46;	author hope;	state Exp;
branches;
next	;

1.66.7.1
date	96.12.18.09.41.06;	author hope;	state Exp;
branches;
next	;

1.66.8.1
date	97.05.12.10.33.32;	author hope;	state Exp;
branches
	1.66.8.1.1.1
	1.66.8.1.2.1
	1.66.8.1.3.1;
next	;

1.66.8.1.1.1
date	97.07.28.18.19.27;	author daveb;	state Exp;
branches
	1.66.8.1.1.1.1.1;
next	;

1.66.8.1.1.1.1.1
date	97.10.07.11.44.36;	author jkbrook;	state Exp;
branches;
next	;

1.66.8.1.2.1
date	97.09.08.17.13.03;	author daveb;	state Exp;
branches;
next	;

1.66.8.1.3.1
date	97.09.09.14.08.41;	author daveb;	state Exp;
branches;
next	;

1.67.1.1
date	97.09.10.19.24.00;	author brucem;	state Exp;
branches;
next	;

1.67.2.1
date	97.09.11.20.54.51;	author daveb;	state Exp;
branches;
next	1.67.2.2;

1.67.2.2
date	97.11.11.16.14.00;	author johnh;	state Exp;
branches;
next	1.67.2.3;

1.67.2.3
date	97.11.26.11.47.51;	author daveb;	state Exp;
branches;
next	1.67.2.4;

1.67.2.4
date	97.12.02.16.38.42;	author daveb;	state Exp;
branches;
next	1.67.2.5;

1.67.2.5
date	97.12.03.12.12.43;	author daveb;	state Exp;
branches;
next	;

1.69.1.1
date	99.04.01.17.56.52;	author daveb;	state Exp;
branches;
next	;


desc
@Incremental compiler.
Signature.
@


1.69
log
@[Bug #30071]
Merge in Project Workspace changes.
@
text
@(*  ==== INCREMENTAL COMPILER ====
 *
 *  Copyright (C) 1992 Harlequin Ltd
 *
 *  Description
 *  -----------
 *  The incremental compiler allows individual topdecs to be compiled in a
 *  context, yielding a new context.  Each topdec may refer to items
 *  previously compiled in a context.
 *
 *  Revision Log
 *  ------------
 *  $Log: incremental.sml,v $
 * Revision 1.67.2.5  1997/12/03  12:12:43  daveb
 * [Bug #30017]
 * Rationalised Shell/GUI Project commands:
 * Moved check_mo to ShellUtils, ditto for Project manipulation part of
 * load_mo.  Left the core part as load_mos, which loads all files in a list.
 *
 * Revision 1.67.2.4  1997/12/02  16:38:42  daveb
 * [Bug #30071]
 * Removed functions for loading from source files.
 *
 * Revision 1.67.2.3  1997/11/26  11:47:51  daveb
 * [Bug #30071]
 * match_{source,object}_path are no longer needed.
 *
 * Revision 1.67.2.2  1997/11/11  16:14:00  johnh
 * [Bug #30203]
 * Merging - checking files to be recompiled.
 *
 * Revision 1.67.2.1  1997/09/11  20:54:51  daveb
 * branched from trunk for label MLWorks_workspace_97
 *
 * Revision 1.68  1997/09/17  15:50:08  brucem
 * [Bug #30203]
 * make check_mo (and check_module) return module ids.
 *
 * Revision 1.67  1997/05/01  12:39:22  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
 * Revision 1.66  1996/07/02  09:40:06  daveb
 * Bug 1448/Support Call 35: Added remove_file_info to project and incremental,
 * and called it from _save_image.
 *
 * Revision 1.65  1996/05/03  09:16:32  daveb
 * Removed Error exception.  The project is updated locally in the case of
 * errors.
 *
 * Revision 1.64  1996/04/02  11:34:05  daveb
 * Added read_dependencies.
 *
 * Revision 1.63  1996/03/26  09:43:45  daveb
 * Added match_source_path and match_object_path, which do some of the work
 * that Module.with_source_path used to do, plus checking for attempts to use
 * different files with the same unit name.
 * Changed type of some other functions for use with these new ones.
 *
 * Revision 1.62  1996/03/19  12:17:27  daveb
 * Added check_mo.
 *
 * Revision 1.61  1996/03/18  17:29:36  daveb
 * Changed load_mo and add_module return a Result option.
 *
 * Revision 1.60  1996/03/14  17:28:28  daveb
 * Added preload function.
 *
 * Revision 1.59  1996/02/23  17:53:37  jont
 * newmap becomes map, NEWMAP becomes MAP
 *
 * Revision 1.58  1995/12/11  15:18:20  daveb
 * Reversing previous change.
 *
 *  Revision 1.57  1995/12/11  10:12:58  daveb
 *  Added debugging_options.
 *
 *  Revision 1.56  1995/12/06  17:47:10  daveb
 *  Reinstated delete_module and delete_all_modules.
 *
 *  Revision 1.55  1995/11/29  10:32:26  daveb
 *  Modifications to use new project stuff.
 *
 *  Revision 1.54  1995/07/13  12:00:07  matthew
 *  Moved identifier to Ident
 *
 *  Revision 1.53  1995/06/01  16:18:20  matthew
 *  Adding delete_all_modules
 *
 *  Revision 1.52  1995/03/30  13:21:22  matthew
 *  Adding delete all modules function
 *
 *  Revision 1.51  1995/03/02  12:49:39  daveb
 *  Merged identifier list into Result type.
 *
 *  Revision 1.50  1994/08/09  14:46:55  daveb
 *  Renamed SourceResult to Result, and added comments.
 *
 *  Revision 1.49  1994/07/28  14:56:29  daveb
 *  Made load_mo return a SourceResult value.
 *
 *  Revision 1.48  1994/07/19  17:35:23  daveb
 *  Changed add_module to return a SourceResult.  Added check_module.
 *
 *  Revision 1.47  1994/06/22  15:00:54  jont
 *  Update debugger information production
 *
 *  Revision 1.46  1994/06/21  16:15:05  daveb
 *  Added empty context (initial contexts aren't empty).
 *  Changed Context components of Error and Interrupted exceptions to a set
 *  of new modules, so that the user_context can be updated appropriately.
 *  Added update_modules to aid this task.
 *
 *  Revision 1.45  1994/05/06  16:20:12  jont
 *  Add function to give parser basis from source result
 *
 *  Revision 1.44  1994/03/25  16:22:30  daveb
 *  Changed add_module and delete_module and load_mo to take ModuleIds.
 *
 *  Revision 1.43  1994/03/18  14:26:42  matthew
 *  Added add_debug_info
 *  add_module returns file list
 *
 *  Revision 1.42  1994/02/25  15:50:12  daveb
 *  Adding clear_debug functionality.
 *
 *  Revision 1.41  1994/02/01  16:50:15  daveb
 *   _add_module now takes a MOdule argument instead of a file name.
 *
 *  Revision 1.40  1994/01/28  16:27:12  matthew
 *  Improvements to error locations
 *
 *  Revision 1.39  1994/01/06  16:04:03  matthew
 *  Added load_mo functions
 *
 *  Revision 1.38  1993/08/12  16:18:56  daveb
 *  Changed types of delete_module and add_module to take strings (representing
 *  moduleids) instead of filenames.
 *
 *  Revision 1.37  1993/07/29  15:28:19  matthew
 *  Added Interrupted exception to indicate if a make was interrupted.
 *
 *  Revision 1.36  1993/06/04  15:56:01  daveb
 *  Deleted the name component of the context type.
 *
 *  Revision 1.35  1993/05/26  17:11:54  matthew
 *  Added error_info param to eval_exp_topdec
 *
 *  Revision 1.34  1993/05/14  12:23:39  jont
 *  Signature clean up
 *
 *  Revision 1.33  1993/05/12  10:27:20  matthew
 *  Exported NotAnExpression
 *
 *  Revision 1.32  1993/05/11  12:46:25  matthew
 *  Added error list to Error exception
 *
 *  Revision 1.31  1993/05/10  14:08:47  daveb
 *  Removed error_info field from ListenerArgs, ShellData and Incremental.options
 *
 *  Revision 1.30  1993/05/06  13:44:47  matthew
 *  Removed name_monitor field
 *  Added monitor function parameter to add_module
 *
 *  Revision 1.29  1993/04/02  13:40:33  matthew
 *  Signature changes
 *  Added evaluate_exp_topdec function
 *
 *  Revision 1.28  1993/03/29  17:48:15  matthew
 *  Removed string param from debugger field in options
 *
 *  Revision 1.27  1993/03/26  16:05:37  jont
 *  Removed get_pervasive_dir, using one in io instead
 *
 *  Revision 1.26  1993/03/19  11:09:19  matthew
 *  Replaced add_source with compile_source and add_definitions
 *
 *  Revision 1.25  1993/03/17  12:10:39  matthew
 *  Formatting changes
 *
 *  Revision 1.24  1993/03/11  13:10:35  matthew
 *  Signature revisions
 *
 *  Revision 1.23  1993/03/09  15:00:13  matthew
 *  Options & Info changes
 *  Changed context to Context
 *
 *  Revision 1.22  1993/02/19  18:48:05  jont
 *  put get_pervasive_dir in the signature of incremental
 *
 *  Revision 1.21  1993/02/09  10:22:06  matthew
 *  Typechecker structure changes
 *
 *  Revision 1.20  1993/02/04  13:16:08  matthew
 *  Signature changes.
 *
 *  Revision 1.19  1992/12/18  10:06:40  clive
 *  We also pass the current module forward for the source_displayer
 *
 *  Revision 1.18  1992/12/09  12:41:46  clive
 *  Added find_module
 *
 *  Revision 1.17  1992/12/08  20:53:21  jont
 *  Removed a number of duplicated signatures and structures
 *
 *  Revision 1.16  1992/12/03  20:25:35  daveb
 *  Added a sharing constraint.
 *
 *  Revision 1.15  1992/12/03  11:43:46  clive
 *  Added delete_module
 *
 *  Revision 1.14  1992/12/02  17:22:49  daveb
 *  Changes to propagate compiler options as parameters instead of references.
 *
 *  Revision 1.13  1992/11/26  17:03:42  clive
 *  Added clear_debug_info function
 *
 *  Revision 1.12  1992/11/20  16:17:37  jont
 *  Modified sharing constraints to remove superfluous structures
 *
 *  Revision 1.11  1992/11/17  17:01:47  matthew
 *  Changed Error structure to Info
 *
 *  Revision 1.10  1992/11/12  10:02:46  daveb
 *  Added env function to extract the environment from a context.
 *
 *  Revision 1.9  1992/10/26  17:56:19  clive
 *  Got exit working, and passed through enough for debugger to bind frame arguments to it
 *  on invoking a sub-shell
 *
 *  Revision 1.8  1992/10/20  12:27:57  richard
 *  Added an Error exception to allow add_module to return a partially
 *  augmented context in the case of an error during make.
 *
 *  Revision 1.7  1992/10/16  11:05:41  clive
 *  Changes for windowing listener
 *
 *  Revision 1.6  1992/10/14  15:07:51  richard
 *  Incorporated the make system.
 *
 *  Revision 1.5  1992/10/08  11:32:27  richard
 *  Changed add_topdec to add_source of compiler source type.
 *
 *  Revision 1.4  1992/10/08  08:16:12  richard
 *  Added return of identifiers from add_value and add_structure.
 *
 *  Revision 1.3  1992/10/07  15:42:08  richard
 *  The incremental compiler now uses the generalised Compiler structure.
 *
 *  Revision 1.2  1992/10/06  14:15:00  richard
 *  Removed add_source_file as this doesn't express the idea of `use' properly.
 *
 *  Revision 1.1  1992/10/01  17:19:28  richard
 *  Initial revision
 *
 *)

require "intermake";
require "../typechecker/datatypes";
require "../utils/diagnostic";

signature INCREMENTAL =
  sig
    structure InterMake		: INTERMAKE
    structure Diagnostic	: DIAGNOSTIC
    structure Datatypes         : DATATYPES

    sharing InterMake.Compiler.Absyn.Ident = Datatypes.Ident
    sharing InterMake.Compiler.NewMap = Datatypes.NewMap

    type ModuleId

    datatype Context =
      CONTEXT of
	{topdec	 : int,
         compiler_basis : InterMake.Compiler.basis,
         inter_env      : InterMake.Inter_EnvTypes.inter_env,
         signatures	: (InterMake.Compiler.Absyn.Ident.SigId,
                           InterMake.Compiler.Absyn.SigExp) Datatypes.NewMap.map}

    datatype options =
      OPTIONS of
      {options	: InterMake.Inter_EnvTypes.Options.options,
       debugger	: (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
                  (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T)}

    (* The interpreter maintains a global Project value that stores
       information about compilation units, including the results of
       interactive compilations.  The get_project function allows this
       to be manipulated by the user interface. *)
    val get_project 	: unit -> InterMake.Project
    val set_project 	: InterMake.Project -> unit
    val reset_project	: unit -> unit
    val delete_from_project : ModuleId -> unit

    val remove_file_info : unit -> unit

    (* Compilation Managers and similar tools may register update functions
       to be called whenever set_project is called. *)
    type register_key
    val add_update_fn : (unit -> unit) -> register_key
    val remove_update_fn : register_key -> unit

    val empty_context	: Context
    val initial		: Context       (* Initial context *)

    val clear_debug_info        : string * Context -> Context
    val clear_debug_all_info    : Context -> Context

    val add_debug_info          : InterMake.Inter_EnvTypes.Options.options * InterMake.Compiler.DebugInformation * Context -> Context

    val topdec			: Context -> int
    val compiler_basis		: Context -> InterMake.Compiler.basis
    val parser_basis		: Context -> InterMake.Compiler.ParserBasis
    val type_basis		: Context -> InterMake.Compiler.TypeBasis
    val lambda_environment	: Context -> InterMake.Compiler.Top_Env
    val debug_info		: Context -> InterMake.Compiler.DebugInformation
    val inter_env		: Context -> InterMake.Inter_EnvTypes.inter_env
    val signatures		: Context -> (InterMake.Compiler.Absyn.Ident.SigId, InterMake.Compiler.Absyn.SigExp) InterMake.Compiler.NewMap.map
    val env			: Context -> Datatypes.Env

    (* The Result type provides a uniform interface for the result of
       compiling source interactively (as done by the use command,
       a listener or an evaluator), making a module in the interpreter,
       and loading an mo file into the interpreter.  A value of this
       type contains the objects defined by the source or module.
       add_definitions must be used to add these objects to a context. *)
    type Result

    val identifiers_from_result: Result -> InterMake.Compiler.Absyn.Ident.Identifier list
    val pb_from_result: Result -> InterMake.Compiler.ParserBasis

    val compile_source :
      InterMake.Compiler.Info.options ->
      options * Context * InterMake.Compiler.source ->
      Result

    exception NotAnExpression

    val evaluate_exp_topdec :
       InterMake.Compiler.Info.options ->
      (options * Context * InterMake.Compiler.Absyn.TopDec) ->
      (MLWorks.Internal.Value.T * Datatypes.Type)

    val add_definitions :
      InterMake.Inter_EnvTypes.Options.options * Context * Result -> Context

    val load_mos :
      InterMake.Compiler.Info.options
      -> InterMake.Inter_EnvTypes.Options.options * Context *
	 InterMake.Project * ModuleId * ModuleId list *
	 InterMake.Compiler.Info.Location.T
      -> Result option

    (* Incremental now uses a global reference of type InterMake.Project
       to store compiled compilation units.  So the following functions
       no longer take a context argument. *)

    val read_dependencies :
          string -> InterMake.Compiler.Info.options -> ModuleId -> unit
    (* read_dependencies toplevel_name error_info module_id; recursively
       reads the dependency information for module_id. *)

    val delete_module : InterMake.Compiler.Info.options -> ModuleId -> unit

    val delete_all_modules : bool -> unit

    val check_module :
      InterMake.Compiler.Info.options -> ModuleId * string -> ModuleId list

    (*
    val preload : Context * string -> unit
    val get_preload : unit -> Result
    (* preload (c, s); this takes a module name and loads that module
       (and all its dependencies) from source in such a way that the
       compiled code is shared with the compiler itself.  The result is
       stored, and can be accessed by getPreload.  Preload must be
       called before the user's image is saved, e.g. in xinterpreter. *)
    *)

    val add_value :
      Context * string * Datatypes.Typescheme * MLWorks.Internal.Value.T ->
      Context * InterMake.Compiler.Absyn.Ident.Identifier list

    val add_structure :
      Context * string * Datatypes.Structure * MLWorks.Internal.Value.T ->
      Context * InterMake.Compiler.Absyn.Ident.Identifier list
  end;
@


1.69.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a13 4
 * Revision 1.69  1998/01/29  16:18:50  johnh
 * [Bug #30071]
 * Merge in Project Workspace changes.
 *
@


1.68
log
@[Bug #30203]
make check_mo (and check_module) return module ids.
@
text
@d14 25
d348 1
a348 6
    val check_mo :
      InterMake.Compiler.Info.options
      -> ModuleId * InterMake.Compiler.Info.Location.T
      -> ModuleId list

    val load_mo :
d350 3
a352 2
      -> InterMake.Inter_EnvTypes.Options.options * Context * ModuleId
	 * InterMake.Compiler.Info.Location.T
d371 1
a371 5
    val add_module :
      InterMake.Compiler.Info.options
      -> options
      -> Context * ModuleId * string -> Result option

d379 1
a387 25

    val match_source_path:
      (InterMake.Compiler.Info.options -> ModuleId -> 'a)
      * InterMake.Compiler.Info.options
      * InterMake.Compiler.Info.Location.T * string * string
      -> 'a
    (* match_source_path (f, opt, loc, file, mesg); expands the file argument
       to a full path name, and calls Module.find_file.  If successful, it
       checks that the incremental project does not already contain a clashing
       entry for this module_id.  If all is OK, it calls the function f with
       the appropriate ModuleId, extending the source path if necessary.
       The mesg parameter describes the action being done on the module,
       e.g. "compiling". *)

    val match_object_path:
      (InterMake.Compiler.Info.options -> ModuleId -> 'a)
      * InterMake.Compiler.Info.options
      * InterMake.Compiler.Info.Location.T * string
      -> 'a
    (* match_object_path (f, opt, loc, file); expects a full path name.
       Reads the consistency info from that file.  If successful, it checks
       that the incremental project does not already contain a clashing entry
       for this module_id.  If all is OK, it calls the function f with the
       appropriate ModuleId. *)

@


1.67
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@d14 4
d326 1
a326 1
      -> string list
d348 1
a348 1
      InterMake.Compiler.Info.options -> ModuleId * string -> string list
@


1.67.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a13 4
 * Revision 1.67  1997/05/01  12:39:22  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.67.2.2
log
@[Bug #30203]
Merging - checking files to be recompiled.
@
text
@a13 7
 * Revision 1.67.2.1  1997/09/11  20:54:51  daveb
 * branched from trunk for label MLWorks_workspace_97
 *
 * Revision 1.68  1997/09/17  15:50:08  brucem
 * [Bug #30203]
 * make check_mo (and check_module) return module ids.
 *
d326 1
a326 1
      -> ModuleId list
d348 1
a348 1
      InterMake.Compiler.Info.options -> ModuleId * string -> ModuleId list
@


1.67.2.3
log
@[Bug #30071]
match_{source,object}_path are no longer needed.
@
text
@a13 4
 * Revision 1.67.2.2  1997/11/11  16:14:00  johnh
 * [Bug #30203]
 * Merging - checking files to be recompiled.
 *
d377 25
@


1.67.2.4
log
@[Bug #30071]
Removed functions for loading from source files.
@
text
@a13 4
 * Revision 1.67.2.3  1997/11/26  11:47:51  daveb
 * [Bug #30071]
 * match_{source,object}_path are no longer needed.
 *
d361 5
a365 1
    (*
a372 1
    *)
@


1.67.2.5
log
@[Bug #30017]
Rationalised Shell/GUI Project commands:
Moved check_mo to ShellUtils, ditto for Project manipulation part of
load_mo.  Left the core part as load_mos, which loads all files in a list.
@
text
@a13 4
 * Revision 1.67.2.4  1997/12/02  16:38:42  daveb
 * [Bug #30071]
 * Removed functions for loading from source files.
 *
d338 6
a343 1
    val load_mos :
d345 2
a346 3
      -> InterMake.Inter_EnvTypes.Options.options * Context *
	 InterMake.Project * ModuleId * ModuleId list *
	 InterMake.Compiler.Info.Location.T
@


1.67.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a13 4
 * Revision 1.67  1997/05/01  12:39:22  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.66
log
@Bug 1448/Support Call 35: Added remove_file_info to project and incremental,
and called it from _save_image.
@
text
@d14 4
d328 1
a328 1
      -> Result MLWorks.Option.option
d349 1
a349 1
      -> Context * ModuleId * string -> Result MLWorks.Option.option
@


1.66.8.1
log
@branched from 1.66
@
text
@a13 4
 * Revision 1.66  1996/07/02  09:40:06  daveb
 * Bug 1448/Support Call 35: Added remove_file_info to project and incremental,
 * and called it from _save_image.
 *
@


1.66.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a13 3
 * Revision 1.66.8.1  1997/05/12  10:33:32  hope
 * branched from 1.66
 *
@


1.66.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a13 3
 * Revision 1.66.8.1  1997/05/12  10:33:32  hope
 * branched from 1.66
 *
@


1.66.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a13 3
 * Revision 1.66.8.1  1997/05/12  10:33:32  hope
 * branched from 1.66
 *
@


1.66.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a13 3
 * Revision 1.66.8.1.1.1  1997/07/28  18:19:27  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.66.7.1
log
@branched from 1.66
@
text
@a13 4
 * Revision 1.66  1996/07/02  09:40:06  daveb
 * Bug 1448/Support Call 35: Added remove_file_info to project and incremental,
 * and called it from _save_image.
 *
@


1.66.6.1
log
@branched from 1.66
@
text
@a13 4
 * Revision 1.66  1996/07/02  09:40:06  daveb
 * Bug 1448/Support Call 35: Added remove_file_info to project and incremental,
 * and called it from _save_image.
 *
@


1.66.6.1.1.1
log
@branched from 1.66.6.1
@
text
@a13 3
 * Revision 1.66.6.1  1996/12/17  17:47:06  hope
 * branched from 1.66
 *
@


1.66.5.1
log
@branched from 1.66
@
text
@a13 4
 * Revision 1.66  1996/07/02  09:40:06  daveb
 * Bug 1448/Support Call 35: Added remove_file_info to project and incremental,
 * and called it from _save_image.
 *
@


1.66.4.1
log
@branched from 1.66
@
text
@a13 4
 * Revision 1.66  1996/07/02  09:40:06  daveb
 * Bug 1448/Support Call 35: Added remove_file_info to project and incremental,
 * and called it from _save_image.
 *
@


1.66.4.1.1.1
log
@branched from 1.66.4.1
@
text
@a13 3
 * Revision 1.66.4.1  1996/11/14  12:48:30  hope
 * branched from 1.66
 *
@


1.66.3.1
log
@branched from 1.66
@
text
@a13 4
 * Revision 1.66  1996/07/02  09:40:06  daveb
 * Bug 1448/Support Call 35: Added remove_file_info to project and incremental,
 * and called it from _save_image.
 *
@


1.66.2.1
log
@branched from 1.66
@
text
@a13 4
 * Revision 1.66  1996/07/02  09:40:06  daveb
 * Bug 1448/Support Call 35: Added remove_file_info to project and incremental,
 * and called it from _save_image.
 *
@


1.66.1.1
log
@branched from 1.66
@
text
@a13 4
 * Revision 1.66  1996/07/02  09:40:06  daveb
 * Bug 1448/Support Call 35: Added remove_file_info to project and incremental,
 * and called it from _save_image.
 *
@


1.65
log
@Removed Error exception.  The project is updated locally in the case of
errors.
@
text
@d14 4
d262 2
@


1.64
log
@Added read_dependencies.
@
text
@d14 3
a318 4

    exception Error of
      InterMake.Compiler.Info.error *
      InterMake.Compiler.Info.error list
@


1.63
log
@Added match_source_path and match_object_path, which do some of the work
that Module.with_source_path used to do, plus checking for attempts to use
different files with the same unit name.
Changed type of some other functions for use with these new ones.
@
text
@d14 6
d324 5
@


1.62
log
@Added check_mo.
@
text
@d14 3
d248 1
d301 3
a303 2
      ModuleId * InterMake.Compiler.Info.Location.T -> 
      string list
d306 4
a309 3
      InterMake.Inter_EnvTypes.Options.options * Context * ModuleId *
        InterMake.Compiler.Info.Location.T -> 
      Result MLWorks.Option.option
d319 1
a319 1
    val delete_module : ModuleId -> unit
d323 2
a324 1
    val check_module : ModuleId * string -> string list
d327 3
a329 1
      options -> Context * ModuleId * string -> Result MLWorks.Option.option
d346 25
@


1.61
log
@Changed load_mo and add_module return a Result option.
@
text
@d14 3
d296 4
d317 1
a317 1
    val check_module : options -> ModuleId * string -> string list
@


1.60
log
@Added preload function.
@
text
@d14 3
d296 1
a296 1
      Result
d312 2
a313 1
    val add_module : options -> Context * ModuleId * string -> Result
@


1.59
log
@newmap becomes map, NEWMAP becomes MAP
@
text
@d14 3
d310 8
@


1.58
log
@Reversing previous change.
@
text
@d14 3
d221 1
a221 1
                           InterMake.Compiler.Absyn.SigExp) Datatypes.NewMap.T}
d258 1
a258 1
    val signatures		: Context -> (InterMake.Compiler.Absyn.Ident.SigId, InterMake.Compiler.Absyn.SigExp) InterMake.Compiler.NewMap.T
@


1.57
log
@Added debugging_options.
@
text
@d14 3
a224 4

    (* debugging_options is a setting of the compiler options for producing
       debug information. *)
    val debugging_options: InterMake.Inter_EnvTypes.Options.options
@


1.56
log
@Reinstated delete_module and delete_all_modules.
@
text
@d14 3
d222 4
@


1.55
log
@Modifications to use new project stuff.
@
text
@d14 3
d291 1
a291 2
    (*
    val delete_module : ModuleId -> Context
d293 1
a293 2
    val delete_all_modules : bool -> Context
    *)
@


1.54
log
@Moved identifier to Ident
@
text
@d14 3
d204 6
a209 6
      CONTEXT of {topdec	 : int,
                  compiler_basis : InterMake.Compiler.basis,
                  inter_env	 : InterMake.Inter_EnvTypes.inter_env,
                  signatures	 : (InterMake.Compiler.Absyn.Ident.SigId,
                                    InterMake.Compiler.Absyn.SigExp) Datatypes.NewMap.T,
                  modules	 : InterMake.modules}
d213 17
a229 3
      {options	        : InterMake.Inter_EnvTypes.Options.options,
       debugger		: (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
                          (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T)}
d231 2
a232 2
    val empty_context		: Context
    val initial			: Context       (* Initial context *)
d281 1
a281 1
      InterMake.modules * InterMake.Compiler.Info.error *
d284 6
a289 1
    exception Interrupted of InterMake.modules
d291 2
a292 1
    val delete_module : Context -> ModuleId -> Context
d294 1
a294 1
    val delete_all_modules : Context * bool -> Context
d296 1
a296 11
    val check_module :
      options ->
      (string -> unit) ->
      Context * ModuleId * string ->
      string list

    val add_module :
      options ->
      (string -> unit) ->
      Context * ModuleId * string ->
      Result
a304 2

    val update_modules : Context * InterMake.modules -> Context
@


1.53
log
@Adding delete_all_modules
@
text
@d14 3
d240 1
a240 1
    val identifiers_from_result: Result -> InterMake.Compiler.identifier list
d287 1
a287 1
      Context * InterMake.Compiler.identifier list
d291 1
a291 1
      Context * InterMake.Compiler.identifier list
@


1.52
log
@Adding delete all modules function
@
text
@d14 3
d268 1
a268 1
    val delete_all_modules : Context -> Context
@


1.51
log
@Merged identifier list into Result type.
@
text
@d14 3
d264 2
@


1.50
log
@Renamed SourceResult to Result, and added comments.
@
text
@d14 3
d228 1
a228 4
       add_definitions must be used to add these objects to a context.
       
       The aforementioned functions also return a list of identifiers.
       This is used by the print functions (in InterPrint).  *)
d231 3
d237 1
a237 3
      Result * InterMake.Compiler.identifier list

    val pb_from_result : Result -> InterMake.Compiler.ParserBasis
d252 1
a252 1
      Result * InterMake.Compiler.identifier list
d272 1
a272 1
      Result * InterMake.Compiler.identifier list
@


1.49
log
@Made load_mo return a SourceResult value.
@
text
@d14 3
d220 10
a229 1
    type SourceResult
d234 1
a234 1
      SourceResult * InterMake.Compiler.identifier list
d236 1
a236 1
    val pb_from_result : SourceResult -> InterMake.Compiler.ParserBasis
d245 2
a246 1
    val add_definitions : InterMake.Inter_EnvTypes.Options.options * Context * SourceResult -> Context
d251 1
a251 1
      SourceResult * InterMake.Compiler.identifier list
d271 1
a271 1
      SourceResult * InterMake.Compiler.identifier list
@


1.48
log
@Changed add_module to return a SourceResult.  Added check_module.
@
text
@d14 3
d235 4
a238 2
    val load_mo : InterMake.Inter_EnvTypes.Options.options * Context * ModuleId * InterMake.Compiler.Info.Location.T -> 
      Context * InterMake.Compiler.identifier list * InterMake.Compiler.basis (*increment*)
d241 2
a242 2
      InterMake.modules * InterMake.Compiler.Info.error
      * InterMake.Compiler.Info.error list
@


1.47
log
@Update debugger information production
@
text
@d14 3
d243 6
d253 1
a253 2
      Context * InterMake.Compiler.identifier list * string list *
      InterMake.Compiler.basis
@


1.46
log
@Added empty context (initial contexts aren't empty).
Changed Context components of Error and Interrupted exceptions to a set
of new modules, so that the user_context can be updated appropriately.
Added update_modules to aid this task.
@
text
@d14 6
d199 1
a199 1
    val add_debug_info          : InterMake.Compiler.DebugInformation * Context -> Context
d227 1
a227 1
    val add_definitions : Context * SourceResult -> Context
d229 1
a229 1
    val load_mo : Context * ModuleId * InterMake.Compiler.Info.Location.T -> 
@


1.45
log
@Add function to give parser basis from source result
@
text
@d14 3
d187 2
a188 1
    val initial			: Context       (* Initial empty context *)
d226 5
a230 2
    exception Error of Context * InterMake.Compiler.Info.error * InterMake.Compiler.Info.error list
    exception Interrupted of Context
d249 1
@


1.44
log
@Changed add_module and delete_module and load_mo to take ModuleIds.
@
text
@d14 3
d208 2
d220 1
a220 1
      Context * InterMake.Compiler.identifier list
d231 2
a232 1
      Context * InterMake.Compiler.identifier list * string list
@


1.43
log
@Added add_debug_info
add_module returns file list
@
text
@d14 4
d165 1
a165 1
    type Module
d214 1
a214 1
    val load_mo : Context * string * InterMake.Compiler.Info.Location.T -> 
d220 1
a220 1
    val delete_module : Context * string -> Context
d225 1
a225 1
      Context * Module * string ->
@


1.42
log
@Adding clear_debug functionality.
@
text
@d14 3
d182 2
d222 1
a222 1
      Context * InterMake.Compiler.identifier list
@


1.41
log
@ _add_module now takes a MOdule argument instead of a file name.
@
text
@d14 3
d176 2
a177 1
    val clear_debug_info        : Context -> Context
@


1.40
log
@Improvements to error locations
@
text
@d14 3
d155 2
d212 1
a212 1
      Context * string * string ->
@


1.39
log
@Added load_mo functions
@
text
@d14 3
d196 2
a197 1
    val load_mo : Context * string -> Context * InterMake.Compiler.identifier list
d207 1
a207 1
      Context * string ->
@


1.38
log
@Changed types of delete_module and add_module to take strings (representing
moduleids) instead of filenames.
@
text
@d14 4
d192 3
a194 1
      
@


1.38.1.1
log
@Fork for bug fixing
@
text
@a13 4
 *  Revision 1.38  1993/08/12  16:18:56  daveb
 *  Changed types of delete_module and add_module to take strings (representing
 *  moduleids) instead of filenames.
 *
@


1.37
log
@Added Interrupted exception to indicate if a make was interrupted.
@
text
@d14 3
a172 7
(*
    val add_source :
      options -> 
      Context * InterMake.Compiler.source ->
      Context * InterMake.Compiler.identifier list
*)

d192 1
a192 1
    val delete_module : Context * InterMake.FileName.absolute -> Context
d197 1
a197 1
      Context * InterMake.FileName.absolute ->
a206 2

    val find_module : Context * InterMake.FileName.absolute -> string
@


1.36
log
@Deleted the name component of the context type.
@
text
@d14 3
d194 1
@


1.35
log
@Added error_info param to eval_exp_topdec
@
text
@d14 3
d140 1
a140 2
      CONTEXT of {name		 : string,
                  topdec	 : int,
a156 2
    val name			: Context -> string
    val rename			: Context * string -> Context
@


1.34
log
@Signature clean up
@
text
@d14 3
d177 2
a178 2
      options ->
      Context * InterMake.Compiler.source ->
d184 1
@


1.33
log
@Exported NotAnExpression
@
text
@d14 3
a122 1
require "../utils/newmap";
a128 1
    structure Map               : NEWMAP
d131 1
d139 1
a139 1
                                    InterMake.Compiler.Absyn.SigExp) Map.T,
@


1.32
log
@Added error list to Error exception
@
text
@d14 3
d175 2
@


1.31
log
@Removed error_info field from ListenerArgs, ShellData and Incremental.options
@
text
@d14 3
d179 1
a179 1
    exception Error of Context * InterMake.Compiler.Info.error
@


1.30
log
@Removed name_monitor field
Added monitor function parameter to add_module
@
text
@d14 4
d136 1
a136 2
      {error_info       : InterMake.Compiler.Info.options,
       options	        : InterMake.Inter_EnvTypes.Options.options,
d178 1
a178 1
    val delete_module : options -> Context * InterMake.FileName.absolute -> Context
a186 1
      options ->
a190 1
      options ->
@


1.29
log
@Signature changes
Added evaluate_exp_topdec function
@
text
@d14 4
a133 1
       name_monitor	: (string -> unit) InterMake.FileName.Option.T,
d179 1
@


1.28
log
@Removed string param from debugger field in options
@
text
@d14 3
d145 1
a145 1
    val debug_info		: Context -> InterMake.Compiler.Debugger_Types.information
d147 1
a147 1
    val signatures		: Context -> (InterMake.Compiler.Absyn.Ident.SigId, InterMake.Compiler.Absyn.SigExp) InterMake.Compiler.Debugger_Types.NewMap.T
d163 4
@


1.27
log
@Removed get_pervasive_dir, using one in io instead
@
text
@d14 3
d128 1
a128 2
       debugger		: string ->
                          (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
@


1.26
log
@Replaced add_source with compile_source and add_definitions
@
text
@d14 3
a181 1
    val get_pervasive_dir : string list -> string InterMake.FileName.Option.T
@


1.25
log
@Formatting changes
@
text
@d14 3
d142 1
d147 8
d156 2
@


1.24
log
@Signature revisions
@
text
@d14 3
d139 4
a142 1
    val add_source : options -> Context * InterMake.Compiler.source -> Context * InterMake.Compiler.identifier list
d148 4
a151 1
    val add_module : options -> Context * InterMake.FileName.absolute -> Context * InterMake.Compiler.identifier list
@


1.23
log
@Options & Info changes
Changed context to Context
@
text
@d14 4
d89 1
d97 1
d99 3
d116 1
a116 1
       debugger		: (options * Context ref * string) ->
d130 2
a131 2
    val lambda_environment	: Context -> InterMake.Compiler.EnvironTypes.Top_Env
    val debug_info		: Context -> InterMake.Compiler.MirTypes.Debugger_Types.information
d133 2
a134 2
    val signatures		: Context -> (InterMake.Compiler.Absyn.Ident.SigId, InterMake.Compiler.Absyn.SigExp) InterMake.Compiler.EnvironTypes.LambdaTypes.Datatypes.NewMap.T
    val env			: Context -> InterMake.Compiler.EnvironTypes.LambdaTypes.Datatypes.Env
d146 1
a146 1
      Context * string * InterMake.Compiler.EnvironTypes.LambdaTypes.Datatypes.Typescheme * MLWorks.Internal.Value.T ->
d151 1
a151 1
      Context * string * InterMake.Compiler.EnvironTypes.LambdaTypes.Datatypes.Structure * MLWorks.Internal.Value.T ->
@


1.22
log
@put get_pervasive_dir in the signature of incremental
@
text
@d14 3
d93 1
a93 1
    datatype context =
d98 2
a99 2
                  signatures	 : (InterMake.Compiler.BasisTypes.Datatypes.Ident.SigId,
                                    InterMake.Compiler.Parser.Absyn.SigExp) Map.T,
d104 4
a107 3
      {compiler_options	: InterMake.Compiler.MirTypes.options,
       make_options	: InterMake.options,
       debugger		: (options * context * string) ->
d111 1
a111 1
    val initial			: context       (* Initial empty context *)
d113 1
a113 1
    val clear_debug_info        : context -> context
d115 11
a125 11
    val name			: context -> string
    val rename			: context * string -> context
    val topdec			: context -> int
    val compiler_basis		: context -> InterMake.Compiler.basis
    val parser_basis		: context -> InterMake.Compiler.Parser.ParserBasis
    val type_basis		: context -> InterMake.Compiler.BasisTypes.Basis
    val lambda_environment	: context -> InterMake.Compiler.EnvironTypes.Top_Env
    val debug_info		: context -> InterMake.Compiler.MirTypes.Debugger_Types.information
    val inter_env		: context -> InterMake.Inter_EnvTypes.inter_env
    val signatures		: context -> (InterMake.Compiler.BasisTypes.Datatypes.Ident.SigId, InterMake.Compiler.Parser.Absyn.SigExp) InterMake.Compiler.BasisTypes.Datatypes.NewMap.T
    val env			: context -> InterMake.Compiler.BasisTypes.Datatypes.Env
d127 1
a127 1
    val add_source : options -> context * InterMake.Compiler.source -> context * InterMake.Compiler.identifier list
d129 1
a129 1
    exception Error of context * InterMake.Compiler.BasisTypes.Info.error
d131 1
a131 1
    val delete_module : options -> context * InterMake.FileName.absolute -> context
d133 1
a133 1
    val add_module : options -> context * InterMake.FileName.absolute -> context * InterMake.Compiler.identifier list
d137 2
a138 2
      context * string * InterMake.Compiler.BasisTypes.Datatypes.Typescheme * MLWorks.Internal.Value.T ->
      context * InterMake.Compiler.identifier list
d142 2
a143 2
      context * string * InterMake.Compiler.BasisTypes.Datatypes.Str * MLWorks.Internal.Value.T ->
      context * InterMake.Compiler.identifier list
d145 1
a145 1
    val find_module : context * InterMake.FileName.absolute -> string
@


1.21
log
@Typechecker structure changes
@
text
@d14 3
a89 1

d143 1
a144 1

@


1.20
log
@Signature changes.
@
text
@d14 3
d93 1
a93 1
                  signatures	 : (InterMake.Compiler.Parser.Absyn.Datatypes.Ident.SigId,
d114 1
a114 1
    val type_basis		: context -> InterMake.Compiler.Basis.Basis
d118 2
a119 2
    val signatures		: context -> (InterMake.Compiler.Parser.Absyn.Datatypes.Ident.SigId, InterMake.Compiler.Parser.Absyn.SigExp) InterMake.Compiler.Parser.Absyn.Datatypes.NewMap.T
    val env			: context -> InterMake.Compiler.Parser.Absyn.Datatypes.Env
d123 1
a123 1
    exception Error of context * InterMake.Compiler.Parser.Lexer.Info.error
d131 1
a131 1
      context * string * InterMake.Compiler.Parser.Absyn.Datatypes.Typescheme * MLWorks.Internal.Value.T ->
d136 1
a136 1
      context * string * InterMake.Compiler.Parser.Absyn.Datatypes.Str * MLWorks.Internal.Value.T ->
@


1.19
log
@We also pass the current module forward for the source_displayer
@
text
@d14 3
d75 1
a75 2
require "../utils/filename";
require "../typechecker/basis";
d77 1
a77 3
require "../lambda/environtypes";
require "../interpreter/inter_envtypes";
require "intermake";
a81 1
    structure Inter_EnvTypes	: INTER_ENVTYPES
d83 1
a83 3
    structure FileName		: FILENAME

    sharing InterMake.Inter_EnvTypes = Inter_EnvTypes
d85 8
a92 1
    type context
d114 1
a114 1
    val inter_env		: context -> Inter_EnvTypes.inter_env
d122 1
a122 1
    val delete_module : options -> context * FileName.absolute -> context
d124 1
a124 1
    val add_module : options -> context * FileName.absolute -> context * InterMake.Compiler.identifier list
d136 1
a136 1
    val find_module : context * FileName.absolute -> string
@


1.18
log
@Added find_module
@
text
@d14 3
d94 1
a94 1
       debugger		: (options * context) ->
@


1.17
log
@Removed a number of duplicated signatures and structures
@
text
@d14 3
d83 1
a83 5
    sharing InterMake.Compiler.Basis.Tyvarenv.Datatypes =
      Inter_EnvTypes.EnvironTypes.LambdaTypes.Datatypes =
      InterMake.Compiler.Parser.Absyn.Datatypes
    sharing InterMake.Compiler.EnvironTypes = Inter_EnvTypes.EnvironTypes
    sharing InterMake.Compiler.Parser.Lexer.Info = Inter_EnvTypes.Info
d128 2
@


1.16
log
@Added a sharing constraint.
@
text
@d14 3
a67 1
require "../typechecker/datatypes";
a76 1
    structure Datatypes 	: DATATYPES
d80 3
a82 3
    sharing Datatypes = InterMake.Compiler.Basis.Tyvarenv.Datatypes =
      InterMake.Compiler.Debugger_Types.Datatypes =
      Inter_EnvTypes.EnvironTypes.LambdaTypes.Datatypes
a83 1
    sharing Datatypes.Ident = InterMake.Compiler.Parser.Absyn.IdentClass
d107 1
a107 1
    val debug_info		: context -> InterMake.Compiler.Debugger_Types.information
d109 2
a110 2
    val signatures		: context -> (Datatypes.Ident.SigId, InterMake.Compiler.Parser.Absyn.SigExp) Datatypes.NewMap.T
    val env			: context -> Datatypes.Env
d122 1
a122 1
      context * string * Datatypes.Typescheme * MLWorks.Internal.Value.T ->
d127 1
a127 1
      context * string * Datatypes.Str * MLWorks.Internal.Value.T ->
@


1.15
log
@Added delete_module
@
text
@d14 3
d84 1
@


1.14
log
@Changes to propagate compiler options as parameters instead of references.
@
text
@d14 3
d111 3
@


1.13
log
@Added clear_debug_info function
@
text
@d14 3
d83 1
a83 1
      {compiler_options	: InterMake.Compiler.options,
@


1.12
log
@Modified sharing constraints to remove superfluous structures
@
text
@d14 3
d87 2
@


1.11
log
@Changed Error structure to Info
@
text
@d14 3
a51 5
require "../main/compiler";
require "../utils/newmap";
require "../main/info";
require "../lexer/lexer";
require "../parser/parser";
a56 2
require "../basics/ident";
require "../basics/absyn";
a60 2
    structure Info		: INFO
    structure Compiler		: COMPILER
a63 2
    structure Ident		: IDENT
    structure Absyn		: ABSYN
a64 1
    structure Map		: NEWMAP
d67 5
a71 7
    sharing Info.Location = Compiler.Info.Location
    sharing Datatypes = Compiler.Basis.Tyvarenv.Datatypes = Compiler.Debugger_Types.Datatypes
(*    sharing Error = Compiler.Error *)
    sharing Compiler.EnvironTypes = Inter_EnvTypes.EnvironTypes
    sharing Ident = Inter_EnvTypes.Ident = Compiler.Parser.Absyn.IdentClass
    sharing Absyn = Compiler.Parser.Absyn
    sharing Compiler = InterMake.Compiler
d77 1
a77 1
      {compiler_options	: Compiler.options,
d88 5
a92 5
    val compiler_basis		: context -> Compiler.basis
    val parser_basis		: context -> Compiler.Parser.ParserBasis
    val type_basis		: context -> Compiler.Basis.Basis
    val lambda_environment	: context -> Compiler.EnvironTypes.Top_Env
    val debug_info		: context -> Compiler.Debugger_Types.information
d94 1
a94 1
    val signatures		: context -> (Ident.SigId, Absyn.SigExp) Map.T
d97 1
a97 1
    val add_source : options -> context * Compiler.source -> context * Compiler.identifier list
d99 2
a100 2
    exception Error of context * Info.error
    val add_module : options -> context * FileName.absolute -> context * Compiler.identifier list
d105 1
a105 1
      context * Compiler.identifier list
d110 1
a110 1
      context * Compiler.identifier list
a111 11
(*
    val add_exception :
      options ->
      context * string * Datatypes.Typescheme * MLWorks.Internal.Value.T ->
      context

    val add_module :
      options ->
      context * string ->
      context
*)
@


1.10
log
@Added env function to extract the environment from a context.
@
text
@d14 3
d51 1
a51 1
require "../main/error";
d65 1
a65 1
    structure Error		: ERROR
d76 1
d78 1
a78 1
    sharing Error = Compiler.Error
d110 1
a110 1
    exception Error of context * Error.error
@


1.9
log
@Got exit working, and passed through enough for debugger to bind frame arguments to it
on invoking a sub-shell
@
text
@d14 4
d102 1
@


1.8
log
@Added an Error exception to allow add_module to return a partially
augmented context in the case of an error during make.
@
text
@d14 4
d82 1
a82 1
       debugger		: context ->
@


1.7
log
@Changes for windowing listener
@
text
@d14 3
d76 2
a77 1
      {compiler		: Compiler.options,
d97 2
a98 1
    val add_module : options -> context * FileName.absolute * (string -> unit) -> context * Compiler.identifier list
@


1.6
log
@Incorporated the make system.
@
text
@d14 3
d93 1
a93 1
    val add_module : options -> context * FileName.absolute -> context * Compiler.identifier list
@


1.5
log
@Changed add_topdec to add_source of compiler source type.
@
text
@d14 3
d31 1
d44 1
d50 1
d57 1
d64 1
d70 4
a73 4
      {compiler			: Compiler.options,
       debugger			: context ->
                    		  (MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T) ->
                  		  MLWorks.Internal.Value.T -> MLWorks.Internal.Value.T}
d75 1
a75 1
    val sml_initial		: context       (* Initial context for standard ML *)
d89 2
@


1.4
log
@Added return of identifiers from add_value and add_structure.
@
text
@d14 3
d80 1
a80 1
    val add_topdec : options -> context * Compiler.Parser.Lexer.TokenStream -> context * Compiler.identifier list
@


1.3
log
@The incremental compiler now uses the generalised Compiler structure.
@
text
@d14 3
a25 1

d82 1
a82 1
      context
d87 1
a87 1
      context
@


1.2
log
@Removed add_source_file as this doesn't express the idea of `use' properly.
@
text
@d14 3
d22 2
a32 1
require "../debugger/debugger_types";
d39 1
a39 3
    structure Parser		: PARSER
    structure Basis		: BASIS
    structure EnvironTypes	: ENVIRONTYPES
a40 1
    structure Debugger_Types	: DEBUGGER_TYPES
d44 1
a45 1
    structure Diagnostic	: DIAGNOSTIC
d47 5
a51 5
    sharing Datatypes = Basis.Tyvarenv.Datatypes = Debugger_Types.Datatypes
    sharing Error = Parser.Error = Parser.Lexer.Error
    sharing EnvironTypes = Inter_EnvTypes.EnvironTypes
    sharing Ident = Inter_EnvTypes.Ident = Parser.Absyn.IdentClass
    sharing Absyn = Parser.Absyn
a54 8
    datatype identifier =
      VALUE of Ident.ValId |
      EXCEPTION of Ident.ValId |
      TYPE of Ident.TyCon |
      STRUCTURE of Ident.StrId |
      SIGNATURE of Ident.SigId |
      FUNCTOR of Ident.FunId

d57 1
a57 3
      {compile_debug		: bool,
       compile_profile		: bool,
       error_output_level	: Error.severity,
d67 5
a71 3
    val parser_basis		: context -> Parser.ParserBasis
    val type_basis		: context -> Basis.Basis
    val lambda_environment	: context -> EnvironTypes.Top_Env
a72 1
    val debug_info		: context -> Debugger_Types.information
d75 1
a75 1
    val add_topdec : options -> context * Parser.Lexer.TokenStream -> context * identifier list
@


1.1
log
@Initial revision
@
text
@d13 4
a16 1
 *  $Log$
a83 2

    val add_source_file : options -> context * string -> context * identifier list
@
