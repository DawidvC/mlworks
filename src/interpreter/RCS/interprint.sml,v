head	1.23;
access;
symbols
	MLW_daveb_inline_1_4_99:1.23.11
	MLWorks_21c0_1999_03_25:1.23
	MLWorks_20c1_1998_08_20:1.23
	MLWorks_20c0_1998_08_04:1.23
	MLWorks_20b2c2_1998_06_19:1.23
	MLWorks_20b2_Windows_1998_06_12:1.23
	MLWorks_20b1c1_1998_05_07:1.23
	MLWorks_20b0_1998_04_07:1.23
	MLWorks_20b0_1998_03_20:1.23
	MLWorks_20m2_1998_02_16:1.23
	MLWorks_20m1_1997_10_23:1.23
	MLWorks_11r1:1.23.8.1.1.1.1
	MLWorks_workspace_97:1.23.10
	MLWorks_dt_wizard:1.23.9
	MLWorks_11c0_1997_09_09:1.23.8.1.1.1
	MLWorks_10r3:1.23.8.1.3
	MLWorks_10r2_551:1.23.8.1.2
	MLWorks_11:1.23.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.23.8.1
	MLWorks_20m0_1997_06_20:1.23
	MLWorks_1_0_r2c2_1997_06_14:1.23.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.23.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.23.8
	MLWorks_BugFix_1997_04_24:1.23
	MLWorks_1_0_r2_Win32_1997_04_11:1.23
	MLWorks_1_0_r2_Unix_1997_04_04:1.23
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.23.6.1.1
	MLWorks_gui_1996_12_18:1.23.7
	MLWorks_1_0_Win32_1996_12_17:1.23.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.23.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.23.4.1
	MLWorks_1_0_Irix_1996_11_28:1.23.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.23.5
	MLWorks_1_0_Unix_1996_11_14:1.23.4
	MLWorks_Open_Beta2_1996_10_11:1.23.3
	MLWorks_License_dev:1.23.2
	MLWorks_1_open_beta_1996_09_13:1.23.1
	MLWorks_Open_Beta_1996_08_22:1.23
	MLWorks_Beta_1996_07_02:1.23
	MLWorks_Beta_1996_06_07:1.23
	MLWorks_Beta_1996_06_06:1.23
	MLWorks_Beta_1996_06_05:1.23
	MLWorks_Beta_1996_06_03:1.23
	MLWorks_Beta_1996_05_31:1.23
	MLWorks_Beta_1996_05_30:1.23
	ML_beta_release_12/08/94:1.21
	ML_beta_release_03/08/94:1.20
	ML_revised_beta_release_25/05/94:1.18
	ML_final_beta_release_02/03/94:1.17
	mlworks-28-01-1994:1.17
	Release:1.16
	mlworks-beta-01-09-1993:1.16
	MLWorks-1-0-4-29/01/1993:1.9
	MLWorks-1-0-3-21/12/1992:1.9
	MLWorks-1-0-2-15/12/1992:1.9
	MLWorks-1-0-1-04/12/1992:1.9;
locks; strict;
comment	@ * @;


1.23
date	95.07.13.12.03.51;	author matthew;	state Exp;
branches
	1.23.1.1
	1.23.2.1
	1.23.3.1
	1.23.4.1
	1.23.5.1
	1.23.6.1
	1.23.7.1
	1.23.8.1
	1.23.9.1
	1.23.10.1
	1.23.11.1;
next	1.22;

1.22
date	95.03.02.12.54.02;	author daveb;	state Exp;
branches;
next	1.21;

1.21
date	94.08.09.15.00.12;	author daveb;	state Exp;
branches;
next	1.20;

1.20
date	94.07.28.15.39.41;	author daveb;	state Exp;
branches;
next	1.19;

1.19
date	94.06.17.13.42.05;	author daveb;	state Exp;
branches;
next	1.18;

1.18
date	94.05.06.15.35.37;	author jont;	state Exp;
branches;
next	1.17;

1.17
date	93.09.16.11.21.35;	author nosa;	state Exp;
branches;
next	1.16;

1.16
date	93.07.29.11.12.12;	author matthew;	state Exp;
branches
	1.16.1.1;
next	1.15;

1.15
date	93.05.06.12.11.47;	author matthew;	state Exp;
branches;
next	1.14;

1.14
date	93.04.02.13.45.07;	author matthew;	state Exp;
branches;
next	1.13;

1.13
date	93.03.12.11.09.37;	author matthew;	state Exp;
branches;
next	1.12;

1.12
date	93.03.09.12.32.03;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	93.02.09.10.49.20;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	93.02.04.18.30.22;	author matthew;	state Exp;
branches;
next	1.9;

1.9
date	92.12.01.17.45.55;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	92.11.30.16.35.55;	author matthew;	state Exp;
branches;
next	1.7;

1.7
date	92.11.27.19.30.46;	author daveb;	state Exp;
branches;
next	1.6;

1.6
date	92.11.26.14.09.59;	author matthew;	state Exp;
branches;
next	1.5;

1.5
date	92.11.20.16.32.24;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	92.11.04.13.42.27;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	92.10.13.14.56.37;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	92.10.07.15.20.51;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	92.10.01.12.02.23;	author richard;	state Exp;
branches;
next	;

1.16.1.1
date	93.07.29.11.12.12;	author jont;	state Exp;
branches;
next	;

1.23.1.1
date	96.09.13.11.16.38;	author hope;	state Exp;
branches;
next	;

1.23.2.1
date	96.10.07.16.06.31;	author hope;	state Exp;
branches;
next	;

1.23.3.1
date	96.10.17.11.24.47;	author hope;	state Exp;
branches;
next	;

1.23.4.1
date	96.11.14.12.49.39;	author hope;	state Exp;
branches
	1.23.4.1.1.1;
next	;

1.23.4.1.1.1
date	96.11.28.15.00.52;	author hope;	state Exp;
branches;
next	;

1.23.5.1
date	96.11.22.18.09.13;	author hope;	state Exp;
branches;
next	;

1.23.6.1
date	96.12.17.17.47.52;	author hope;	state Exp;
branches
	1.23.6.1.1.1;
next	;

1.23.6.1.1.1
date	97.02.24.11.37.40;	author hope;	state Exp;
branches;
next	;

1.23.7.1
date	96.12.18.09.41.52;	author hope;	state Exp;
branches;
next	;

1.23.8.1
date	97.05.12.10.34.20;	author hope;	state Exp;
branches
	1.23.8.1.1.1
	1.23.8.1.2.1
	1.23.8.1.3.1;
next	;

1.23.8.1.1.1
date	97.07.28.18.18.58;	author daveb;	state Exp;
branches
	1.23.8.1.1.1.1.1;
next	;

1.23.8.1.1.1.1.1
date	97.10.07.11.44.06;	author jkbrook;	state Exp;
branches;
next	;

1.23.8.1.2.1
date	97.09.08.17.12.36;	author daveb;	state Exp;
branches;
next	;

1.23.8.1.3.1
date	97.09.09.14.08.13;	author daveb;	state Exp;
branches;
next	;

1.23.9.1
date	97.09.10.19.23.17;	author brucem;	state Exp;
branches;
next	;

1.23.10.1
date	97.09.11.20.54.21;	author daveb;	state Exp;
branches;
next	;

1.23.11.1
date	99.04.01.17.56.34;	author daveb;	state Exp;
branches;
next	;


desc
@Incremental context value printer.
Signature.
@


1.23
log
@Moving identifier type to Ident
@
text
@(*  ==== INTERPRETER PRINTER ====
 *
 *  Copyright (C) 1992 Harlequin Ltd
 *
 *  Description 
 *  -----------
 *  The interpreter printer outputs a representation of increments to the
 *  incremental compiler context.  It prints a representation of the
 *  declarations fed to the interpreter.
 *
 *  Revision Log
 *  ------------
 *  $Log: interprint.sml,v $
 *  Revision 1.22  1995/03/02  12:54:02  daveb
 *  Removed the indentation argument to the strings function.
 *
 *  Revision 1.21  1994/08/09  15:00:12  daveb
 *  Replaced SourceResult argument to strings with a ParserBasis.
 *  Added a comment.
 *
 *  Revision 1.20  1994/07/28  15:39:41  daveb
 *  Removed definitions function.
 *
 *  Revision 1.19  1994/06/17  13:42:05  daveb
 *  Added strings function, for tools that want to use the result strings.
 *
 *  Revision 1.18  1994/05/06  15:35:37  jont
 *  Change type of definitions slightly
 *
 *  Revision 1.17  1993/09/16  11:21:35  nosa
 *  Pass options to InterPrint.definitions instead of print_options.
 *
 *  Revision 1.16  1993/07/29  11:12:12  matthew
 *  Removed error_info parameter from definitions
 *
 *  Revision 1.15  1993/05/06  12:11:47  matthew
 *  Removed printer_descriptor
 *
 *  Revision 1.14  1993/04/02  13:45:07  matthew
 *  Signature changes
 *
 *  Revision 1.13  1993/03/12  11:09:37  matthew
 *  definitions now takes an output function
 *
 *  Revision 1.12  1993/03/09  12:32:03  matthew
 *  Options & Info changes
 *
 *  Revision 1.11  1993/02/09  10:49:20  matthew
 *  Typechecker structure changes
 *
 *  Revision 1.10  1993/02/04  18:30:22  matthew
 *  Changed sharing
 *
 *  Revision 1.9  1992/12/01  17:45:55  daveb
 *  Changes to propagate compiler options as parameters instead of references.
 *
 *  Revision 1.8  1992/11/30  16:35:55  matthew
 *  Used pervasive streams
 *
 *  Revision 1.7  1992/11/27  19:30:46  daveb
 *  Changes to make show_id_class and show_eq_info part of Info structure
 *  instead of references.
 *
 *  Revision 1.6  1992/11/26  14:09:59  matthew
 *  Changed to use Stream structure
 *
 *  Revision 1.5  1992/11/20  16:32:24  jont
 *  Modified sharing constraints to remove superfluous structures
 *
 *  Revision 1.4  1992/11/04  13:42:27  daveb
 *  Added options type to control printing.
 *
 *  Revision 1.3  1992/10/13  14:56:37  richard
 *  Added diagnostics.
 *
 *  Revision 1.2  1992/10/07  15:20:51  richard
 *  Changes related to restructuring of Incremental.
 *
 *  Revision 1.1  1992/10/01  12:02:23  richard
 *  Initial revision
 *
 *)

require "../main/compiler";
require "../utils/diagnostic";

signature INTERPRINT =
  sig
    structure Compiler : COMPILER
    structure Diagnostic  : DIAGNOSTIC

    type Context

    exception Undefined of Compiler.Absyn.Ident.Identifier

    (* Arguments.
	 Context: The current context, used to find the types and values
	   needed when printing.
         Compiler.Options.options: Options
	 Compiler..Absyn.Ident.Identifier list:  The identifiers to be printed
         Compiler.ParserBasis: The increment to the parser basis, used to
           print any fixity declarations.
       Results.
	 A list of the identifiers paired with their printed representations. *)
    val strings :
      Context * Compiler.Options.options
      * Compiler.Absyn.Ident.Identifier list * Compiler.ParserBasis
      -> (Compiler.Absyn.Ident.Identifier * string) list
  end;
@


1.23.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a13 3
 * Revision 1.23  1995/07/13  12:03:51  matthew
 * Moving identifier type to Ident
 *
@


1.23.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a13 3
 * Revision 1.23  1995/07/13  12:03:51  matthew
 * Moving identifier type to Ident
 *
@


1.23.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a13 3
 * Revision 1.23  1995/07/13  12:03:51  matthew
 * Moving identifier type to Ident
 *
@


1.23.8.1
log
@branched from 1.23
@
text
@a13 3
 * Revision 1.23  1995/07/13  12:03:51  matthew
 * Moving identifier type to Ident
 *
@


1.23.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a13 3
 * Revision 1.23.8.1  1997/05/12  10:34:20  hope
 * branched from 1.23
 *
@


1.23.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a13 3
 * Revision 1.23.8.1  1997/05/12  10:34:20  hope
 * branched from 1.23
 *
@


1.23.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a13 3
 * Revision 1.23.8.1  1997/05/12  10:34:20  hope
 * branched from 1.23
 *
@


1.23.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a13 3
 * Revision 1.23.8.1.1.1  1997/07/28  18:18:58  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.23.7.1
log
@branched from 1.23
@
text
@a13 3
 * Revision 1.23  1995/07/13  12:03:51  matthew
 * Moving identifier type to Ident
 *
@


1.23.6.1
log
@branched from 1.23
@
text
@a13 3
 * Revision 1.23  1995/07/13  12:03:51  matthew
 * Moving identifier type to Ident
 *
@


1.23.6.1.1.1
log
@branched from 1.23.6.1
@
text
@a13 3
 * Revision 1.23.6.1  1996/12/17  17:47:52  hope
 * branched from 1.23
 *
@


1.23.5.1
log
@branched from 1.23
@
text
@a13 3
 * Revision 1.23  1995/07/13  12:03:51  matthew
 * Moving identifier type to Ident
 *
@


1.23.4.1
log
@branched from 1.23
@
text
@a13 3
 * Revision 1.23  1995/07/13  12:03:51  matthew
 * Moving identifier type to Ident
 *
@


1.23.4.1.1.1
log
@branched from 1.23.4.1
@
text
@a13 3
 * Revision 1.23.4.1  1996/11/14  12:49:39  hope
 * branched from 1.23
 *
@


1.23.3.1
log
@branched from 1.23
@
text
@a13 3
 * Revision 1.23  1995/07/13  12:03:51  matthew
 * Moving identifier type to Ident
 *
@


1.23.2.1
log
@branched from 1.23
@
text
@a13 3
 * Revision 1.23  1995/07/13  12:03:51  matthew
 * Moving identifier type to Ident
 *
@


1.23.1.1
log
@branched from 1.23
@
text
@a13 3
 * Revision 1.23  1995/07/13  12:03:51  matthew
 * Moving identifier type to Ident
 *
@


1.22
log
@Removed the indentation argument to the strings function.
@
text
@d14 3
d94 1
a94 1
    exception Undefined of Compiler.identifier
d100 1
a100 1
	 Compiler.identifier list:  The identifiers to be printed
d107 2
a108 2
      * Compiler.identifier list * Compiler.ParserBasis
      -> (Compiler.identifier * string) list
@


1.21
log
@Replaced SourceResult argument to strings with a ParserBasis.
Added a comment.
@
text
@d14 4
d96 2
a97 1
         Compiler.identifier list: The identifiers to be printed.
d99 1
a99 3
	   print any fixity declarations.
         Compiler.Options.options: Options
         int:	indentation
d103 2
a104 2
      Context * Compiler.ParserBasis * Compiler.Options.options
      * int * Compiler.identifier list
@


1.20
log
@Removed definitions function.
@
text
@d14 3
d89 10
a98 2
    type SourceResult

d100 2
a101 2
      Context * SourceResult * Compiler.Options.options
      * int (* indentation *) * Compiler.identifier list
@


1.19
log
@Added strings function, for tools that want to use the result strings.
@
text
@d14 3
a85 6
    val definitions :
      (string -> unit) ->
      Context * Compiler.Options.options *
      int (* indentation *) * Compiler.identifier list * Compiler.ParserBasis ->
      unit

a92 1

@


1.18
log
@Change type of definitions slightly
@
text
@d14 3
d85 2
a86 2
      (Context * Compiler.Options.options *
      int (* indentation *) * Compiler.identifier list * Compiler.ParserBasis) ->
d88 7
@


1.17
log
@Pass options to InterPrint.definitions instead of print_options.
@
text
@d14 3
d83 1
a83 1
      int (* indentation *) * Compiler.identifier list) ->
@


1.16
log
@Removed error_info parameter from definitions
@
text
@d14 3
d79 1
a79 1
      (Context * Compiler.Options.print_options *
@


1.16.1.1
log
@Fork for bug fixing
@
text
@a13 3
 *  Revision 1.16  1993/07/29  11:12:12  matthew
 *  Removed error_info parameter from definitions
 *
@


1.15
log
@Removed printer_descriptor
@
text
@d14 3
a75 1
      Compiler.Info.options ->
@


1.14
log
@Signature changes
@
text
@d14 3
a59 1
require "../debugger/value_printer";
a64 1
    structure ValuePrinter: VALUE_PRINTER
a66 4
    sharing Compiler.Options = ValuePrinter.Options
    sharing type Compiler.TypeBasis = ValuePrinter.TypeBasis
    sharing type Compiler.DebugInformation = ValuePrinter.DebugInformation

d74 1
a74 1
      (Context * ValuePrinter.printer_descriptor *
@


1.13
log
@definitions now takes an output function
@
text
@d14 3
d66 1
d68 1
a68 2
    sharing Compiler.Debugger_Types =
      ValuePrinter.Debugger_Types
@


1.12
log
@Options & Info changes
@
text
@d14 3
d64 1
a64 1
    sharing Compiler.MirTypes.Debugger_Types =
d72 1
a72 1
      outstream ->
@


1.11
log
@Typechecker structure changes
@
text
@d14 3
d50 1
a50 1
require "incremental";
d56 1
a56 1
    structure Incremental : INCREMENTAL
d60 2
a61 2
    sharing Incremental.InterMake.Compiler.BasisTypes = ValuePrinter.BasisTypes
    sharing Incremental.InterMake.Compiler.MirTypes.Debugger_Types =
d64 3
a66 1
    exception Undefined of Incremental.InterMake.Compiler.identifier
d70 3
a72 3
      Incremental.InterMake.Inter_EnvTypes.Info.options ->
      (Incremental.context * ValuePrinter.printer_descriptor *
      int (* indentation *) * Incremental.InterMake.Compiler.identifier list) ->
@


1.10
log
@Changed sharing
@
text
@d14 3
d57 1
a57 1
    sharing Incremental.InterMake.Compiler.Basis = ValuePrinter.Basis
@


1.9
log
@Changes to propagate compiler options as parameters instead of references.
@
text
@d14 3
a43 2
require "../utils/diagnostic";
require "../main/info";
a44 1
require "inter_envtypes";
d46 1
d51 1
d53 4
a56 1
    structure ValuePrinter: VALUE_PRINTER
d62 1
a62 1
      Incremental.Inter_EnvTypes.Info.options ->
@


1.8
log
@Used pervasive streams
@
text
@d14 3
a54 5
    datatype options =
      OPTIONS of
	ValuePrinter.printer_descriptor *
	Incremental.Inter_EnvTypes.Info.options
	
d57 3
a59 2
      (Incremental.context * options * int (* indentation *) *
      Incremental.InterMake.Compiler.identifier list) ->
@


1.7
log
@Changes to make show_id_class and show_eq_info part of Info structure
instead of references.
@
text
@d14 4
a42 1
require "../utils/stream";
d58 1
a58 1
      Incremental.InterMake.Compiler.Parser.Lexer.Info.Stream.outstream ->
@


1.6
log
@Changed to use Stream structure
@
text
@d14 3
d35 1
d37 1
d51 2
a52 1
	ValuePrinter.printer_descriptor
@


1.5
log
@Modified sharing constraints to remove superfluous structures
@
text
@d14 3
d34 1
d49 4
a52 4
      ('a * string -> 'a) ->
      ('a * Incremental.context * options * int (* indentation *) *
	Incremental.InterMake.Compiler.identifier list) ->
      'a
@


1.4
log
@Added options type to control printing.
@
text
@d14 3
d38 1
a38 1
    exception Undefined of Incremental.Compiler.identifier
d47 1
a47 1
	Incremental.Compiler.identifier list) ->
@


1.3
log
@Added diagnostics.
@
text
@d14 3
d27 1
d33 1
d37 4
d43 2
a44 1
      ('a * Incremental.context * int * Incremental.Compiler.identifier list) ->
@


1.2
log
@Changes related to restructuring of Incremental.
@
text
@d14 3
d22 1
d28 1
@


1.1
log
@Initial revision
@
text
@d13 4
a16 1
 *  $Log$
d25 1
a25 1
    exception Undefined of Incremental.identifier
d28 3
a30 1
      ('a * string -> 'a) -> ('a * Incremental.context * int * Incremental.identifier list) -> 'a
@
