head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.1
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_11r1:1.1.1.1.1.3.1
	MLWorks_workspace_97:1.3.2
	MLWorks_dt_wizard:1.3.1
	MLWorks_11c0_1997_09_09:1.1.1.1.1.3
	MLWorks_10r3:1.1.1.1.3
	MLWorks_10r2_551:1.1.1.1.2
	MLWorks_11:1.1.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.1.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c2_1997_06_14:1.1.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.1
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1;
locks; strict;
comment	@ *  @;


1.4
date	99.03.20.21.46.26;	author daveb;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	97.08.08.08.33.08;	author brucem;	state Exp;
branches
	1.3.1.1
	1.3.2.1;
next	1.2;

1.2
date	97.08.07.10.04.55;	author brucem;	state Exp;
branches;
next	1.1;

1.1
date	97.02.28.16.46.22;	author matthew;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.12.10.27.42;	author hope;	state Exp;
branches
	1.1.1.1.1.1
	1.1.1.1.2.1
	1.1.1.1.3.1;
next	;

1.1.1.1.1.1
date	97.07.28.18.14.05;	author daveb;	state Exp;
branches;
next	1.1.1.1.1.2;

1.1.1.1.1.2
date	97.08.08.08.50.21;	author johnh;	state Exp;
branches;
next	1.1.1.1.1.3;

1.1.1.1.1.3
date	97.08.08.09.24.57;	author johnh;	state Exp;
branches
	1.1.1.1.1.3.1.1;
next	;

1.1.1.1.1.3.1.1
date	97.10.07.11.39.12;	author jkbrook;	state Exp;
branches;
next	;

1.1.1.1.2.1
date	97.09.08.17.07.32;	author daveb;	state Exp;
branches;
next	;

1.1.1.1.3.1
date	97.09.09.14.02.46;	author daveb;	state Exp;
branches;
next	;

1.3.1.1
date	97.09.10.19.17.14;	author brucem;	state Exp;
branches;
next	;

1.3.2.1
date	97.09.11.20.47.48;	author daveb;	state Exp;
branches;
next	;

1.4.1.1
date	99.04.01.17.51.59;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.4
log
@[Bug #20125]
Replaced substructure with type.
@
text
@(*  ==== INITIAL BASIS : 2D MONO ARRAYS ====
 *
 *  Copyright (C) 1997 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This is part of the Basis Library.
 *
 *  Revision Log
 *  ------------
 *  $Log: mono_array2.sml,v $
 *  Revision 1.3  1997/08/08  08:33:08  brucem
 *  [Bug #30245]
 *  Fix mistake (traversal spelt as traveral).
 *
 *  Revision 1.2  1997/08/07  10:04:55  brucem
 *  [Bug #30245]
 *  Standard basis signature has been revised, change this to match it.
 *
 *  Revision 1.1  1997/02/28  16:46:22  matthew
 *  new unit
 *
*)

require "__array2";

signature MONO_ARRAY2 =
  sig
    eqtype array
    type elem
    type vector

    type region = {
      base : array,
      row : int, col : int,
      nrows : int option, ncols : int option}

    datatype traversal = datatype Array2.traversal

    val array : int * int * elem -> array
    val fromList : elem list list -> array
    val tabulate : traversal -> int * int * (int * int -> elem) -> array

    val sub : array * int * int -> elem
    val update : array * int * int * elem -> unit

    val dimensions : array -> int * int
    val nCols : array -> int
    val nRows : array -> int

    val row : array * int -> vector
    val column : array * int -> vector

    val copy : {src : region,
                dst : array,
                dst_row : int,
                dst_col : int} -> unit

    val appi    : traversal -> ((int * int * elem) -> unit) -> region -> unit
    val app     : traversal -> (elem -> unit) -> array -> unit
    val modifyi : traversal -> ((int * int * elem) -> elem) -> region -> unit
    val modify  : traversal -> (elem -> elem) -> array -> unit
    val foldi   : traversal -> (int * int * elem * 'a -> 'a) -> 'a ->
                  region -> 'a
    val fold    : traversal -> ((elem * 'a) -> 'a) -> 'a -> array -> 'a
  end
@


1.4.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a11 4
 *  Revision 1.4  1999/03/20  21:46:26  daveb
 *  [Bug #20125]
 *  Replaced substructure with type.
 *
@


1.3
log
@[Bug #30245]
Fix mistake (traversal spelt as traveral).
@
text
@d12 4
a24 1
require "mono_vector";
d31 2
a39 3
    structure Vector : MONO_VECTOR
    sharing type elem = Vector.elem

d51 2
a52 2
    val row : array * int -> Vector.vector
    val column : array * int -> Vector.vector
@


1.3.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a11 4
 *  Revision 1.3  1997/08/08  08:33:08  brucem
 *  [Bug #30245]
 *  Fix mistake (traversal spelt as traveral).
 *
@


1.3.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a11 4
 *  Revision 1.3  1997/08/08  08:33:08  brucem
 *  [Bug #30245]
 *  Fix mistake (traversal spelt as traveral).
 *
@


1.2
log
@[Bug #30245]
Standard basis signature has been revised, change this to match it.
@
text
@d12 4
d60 1
a60 1
    val modify  : traveral -> (elem -> elem) -> array -> unit
@


1.1
log
@new unit
@
text
@d12 3
d17 1
a17 1
require "mono_array";
d22 1
a22 1
    eqtype array2
d24 4
a27 2
    structure Array1 : MONO_ARRAY
    sharing type Array1.elem = elem
d29 21
a49 14
    val maxSize : int
    val array : int * int * elem -> array2
    val fromList : elem list list -> array2
    val tabulate : int * int * (int * int -> elem) -> array2
    val sub : array2 * int * int -> elem
    val update : array2 * int * int * elem -> unit
    val dimensions : array2 -> int * int
    val height : array2 -> int
    val width : array2 -> int
    val row : array2 * int -> Array1.array
    val column : array2 * int -> Array1.array
    val copy : {src : array2,
                dst : array2,
                src_reg : Array2.region,
d52 8
a59 9
    val appi : ((int * int * elem) -> unit) -> (array2 * Array2.region) -> unit
    val app : (elem -> unit) -> array2 -> unit
    val modifyi : ((int * int * elem) -> elem) -> (array2 * Array2.region) -> unit
    val modify : (elem -> elem) -> array2 -> unit
    val foldi : Array2.traversal -> (int * int * elem * 'b -> 'b) -> 'b -> (array2 * Array2.region) -> 'b
    val fold : Array2.traversal -> ((elem * 'b) -> 'b) -> 'b -> array2 -> 'b
    val shift : array2 * int * int * elem -> array2
    val rotate : array2 * int * int -> array2
    val transpose : array2 -> array2
@


1.1.1.1
log
@branched from 1.1
@
text
@a11 3
 *  Revision 1.1  1997/02/28  16:46:22  matthew
 *  new unit
 *
@


1.1.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a11 3
 *  Revision 1.1.1.1  1997/05/12  10:27:42  hope
 *  branched from 1.1
 *
@


1.1.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a11 3
 *  Revision 1.1.1.1  1997/05/12  10:27:42  hope
 *  branched from 1.1
 *
@


1.1.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a11 3
 *  Revision 1.1.1.1  1997/05/12  10:27:42  hope
 *  branched from 1.1
 *
@


1.1.1.1.1.2
log
@[Bug #30245]
Merging - signature has been revised - change this to match it.
@
text
@a11 3
 *  Revision 1.1.1.1.1.1  1997/07/28  18:14:05  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
d20 1
a20 1
require "mono_vector";
d25 1
a25 1
    eqtype array
d27 2
a28 13
    type region = {
      base : array,
      row : int, col : int,
      nrows : int option, ncols : int option}

    datatype traversal = datatype Array2.traversal

    structure Vector : MONO_VECTOR
    sharing type elem = Vector.elem

    val array : int * int * elem -> array
    val fromList : elem list list -> array
    val tabulate : traversal -> int * int * (int * int -> elem) -> array
d30 14
a43 12
    val sub : array * int * int -> elem
    val update : array * int * int * elem -> unit

    val dimensions : array -> int * int
    val nCols : array -> int
    val nRows : array -> int

    val row : array * int -> Vector.vector
    val column : array * int -> Vector.vector

    val copy : {src : region,
                dst : array,
d46 9
a54 8

    val appi    : traversal -> ((int * int * elem) -> unit) -> region -> unit
    val app     : traversal -> (elem -> unit) -> array -> unit
    val modifyi : traversal -> ((int * int * elem) -> elem) -> region -> unit
    val modify  : traveral -> (elem -> elem) -> array -> unit
    val foldi   : traversal -> (int * int * elem * 'a -> 'a) -> 'a ->
                  region -> 'a
    val fold    : traversal -> ((elem * 'a) -> 'a) -> 'a -> array -> 'a
@


1.1.1.1.1.3
log
@[Bug #30245]
Merging into MLWorks_11 - Fix mistake (traversal spelt as traveral).
@
text
@a11 4
 *  Revision 1.1.1.1.1.2  1997/08/08  08:50:21  johnh
 *  [Bug #30245]
 *  Merging - signature has been revised - change this to match it.
 *
d62 1
a62 1
    val modify  : traversal -> (elem -> elem) -> array -> unit
@


1.1.1.1.1.3.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a11 4
 *  Revision 1.1.1.1.1.3  1997/08/08  09:24:57  johnh
 *  [Bug #30245]
 *  Merging into MLWorks_11 - Fix mistake (traversal spelt as traveral).
 *
@
