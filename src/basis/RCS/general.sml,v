head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.3
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.3.8.1.1.1.1
	MLWorks_workspace_97:1.4.2
	MLWorks_dt_wizard:1.4.1
	MLWorks_11c0_1997_09_09:1.3.8.1.1.1
	MLWorks_10r3:1.3.8.1.3
	MLWorks_10r2_551:1.3.8.1.2
	MLWorks_11:1.3.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.8.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.8
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.6.1.1
	MLWorks_gui_1996_12_18:1.3.7
	MLWorks_1_0_Win32_1996_12_17:1.3.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3;
locks; strict;
comment	@ * @;


1.4
date	97.08.04.12.39.36;	author brucem;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1;
next	1.3;

1.3
date	96.05.08.14.53.41;	author jont;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1;
next	1.2;

1.2
date	96.04.23.13.05.43;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	96.04.18.11.42.57;	author jont;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.09.47;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.00.40;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.18.55;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.12.42.27;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.14.54.22;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.02.58;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.17.41.53;	author hope;	state Exp;
branches
	1.3.6.1.1.1;
next	;

1.3.6.1.1.1
date	97.02.24.11.30.13;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.18.09.35.50;	author hope;	state Exp;
branches;
next	;

1.3.8.1
date	97.05.12.10.27.54;	author hope;	state Exp;
branches
	1.3.8.1.1.1
	1.3.8.1.2.1
	1.3.8.1.3.1;
next	;

1.3.8.1.1.1
date	97.07.28.18.14.24;	author daveb;	state Exp;
branches
	1.3.8.1.1.1.1.1;
next	;

1.3.8.1.1.1.1.1
date	97.10.07.11.39.27;	author jkbrook;	state Exp;
branches;
next	;

1.3.8.1.2.1
date	97.09.08.17.07.51;	author daveb;	state Exp;
branches;
next	;

1.3.8.1.3.1
date	97.09.09.14.03.00;	author daveb;	state Exp;
branches;
next	;

1.4.1.1
date	97.09.10.19.17.29;	author brucem;	state Exp;
branches;
next	;

1.4.2.1
date	97.09.11.20.48.13;	author daveb;	state Exp;
branches;
next	;

1.4.3.1
date	99.04.01.17.52.37;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.4
log
@[Bug #30084]
Remove items which have been moved to Option.
@
text
@(*  ==== INITIAL BASIS :  GENERAL ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This is part of the extended Initial Basis.
 *
 *  Revision Log
 *  ------------
 *  $Log: general.sml,v $
 * Revision 1.3  1996/05/08  14:53:41  jont
 * Update to latest revision
 *
 * Revision 1.2  1996/04/23  13:05:43  matthew
 * Updating
 *
 * Revision 1.1  1996/04/18  11:42:57  jont
 * new unit
 *
 *  Revision 1.4  1996/03/28  12:29:02  matthew
 *  Fixing rigid type sharing problem
 *
 *  Revision 1.3  1995/03/31  13:44:07  brianm
 *  Adding options operators to General ...
 *
 * Revision 1.2  1995/03/12  18:49:24  brianm
 * Commented out troublesome datatypes and equality definitions.
 *
 * Revision 1.1  1995/03/08  16:23:04  brianm
 * new unit
 *
 *)

signature GENERAL =
  sig
    eqtype  unit
    type  exn

    exception Bind
    exception Match
    exception Subscript
    exception Size
    exception Overflow
    exception Domain
    exception Div
    exception Chr
    exception Fail of string

    val exnName : exn -> string
    val exnMessage : exn -> string

    datatype order = LESS | EQUAL | GREATER

    val <> : (''a * ''a) -> bool

    val ! : 'a ref -> 'a

    val := : ('a ref * 'a) -> unit

    val o : (('b -> 'c) * ('a -> 'b)) -> 'a -> 'c

    val before : ('a * unit) -> 'a

    val ignore : 'a -> unit

  end
@


1.4.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a11 4
 * Revision 1.4  1997/08/04  12:39:36  brucem
 * [Bug #30084]
 * Remove items which have been moved to Option.
 *
@


1.4.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a11 4
 * Revision 1.4  1997/08/04  12:39:36  brucem
 * [Bug #30084]
 * Remove items which have been moved to Option.
 *
@


1.4.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a11 4
 * Revision 1.4  1997/08/04  12:39:36  brucem
 * [Bug #30084]
 * Remove items which have been moved to Option.
 *
@


1.3
log
@Update to latest revision
@
text
@d12 3
a51 8

    datatype 'a option = NONE | SOME of 'a

    exception Option

    val getOpt : ('a option * 'a) -> 'a
    val isSome : 'a option -> bool
    val valOf : 'a option -> 'a
@


1.3.8.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/05/08  14:53:41  jont
 * Update to latest revision
 *
@


1.3.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a11 3
 * Revision 1.3.8.1  1997/05/12  10:27:54  hope
 * branched from 1.3
 *
@


1.3.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a11 3
 * Revision 1.3.8.1  1997/05/12  10:27:54  hope
 * branched from 1.3
 *
@


1.3.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a11 3
 * Revision 1.3.8.1  1997/05/12  10:27:54  hope
 * branched from 1.3
 *
@


1.3.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a11 3
 * Revision 1.3.8.1.1.1  1997/07/28  18:14:24  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3.7.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/05/08  14:53:41  jont
 * Update to latest revision
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/05/08  14:53:41  jont
 * Update to latest revision
 *
@


1.3.6.1.1.1
log
@branched from 1.3.6.1
@
text
@a11 3
 * Revision 1.3.6.1  1996/12/17  17:41:53  hope
 * branched from 1.3
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/05/08  14:53:41  jont
 * Update to latest revision
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/05/08  14:53:41  jont
 * Update to latest revision
 *
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a11 3
 * Revision 1.3.4.1  1996/11/14  12:42:27  hope
 * branched from 1.3
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/05/08  14:53:41  jont
 * Update to latest revision
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/05/08  14:53:41  jont
 * Update to latest revision
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a11 3
 * Revision 1.3  1996/05/08  14:53:41  jont
 * Update to latest revision
 *
@


1.2
log
@Updating
@
text
@d12 3
d34 2
a35 3

    eqtype unit
    type exn
d47 2
a48 6
    exception Option
(*
    datatype bool = true | false
       sharing type bool = bool
*)
    val not : bool -> bool
d52 5
a56 10
    val getOpt : ('a)option * 'a -> 'a
    val isSome : ('a)option -> bool
    val valOf  : ('a)option -> 'a

    datatype ('a, 'b) union = INL of 'a | INR of 'b

(*
    datatype 'a list = nil | :: of ('a * 'a list)
       sharing type list = list
*)
d60 3
a62 4
(*
    val =  : ''a * ''a -> bool
*)
    val <> : ''a * ''a -> bool
a63 1
    val !  : 'a ref -> 'a
d66 4
a69 2
    val o   : ('b -> 'c) * ('a -> 'b) -> ('a -> 'c)
    val before : ('a * 'b) -> 'a
@


1.1
log
@new unit
@
text
@d11 4
a14 1
 *  $Log$
d32 1
a34 2
    type unit

a36 3
    exception Option
    exception Interrupt

a38 1

d40 1
d42 1
a42 3
    exception Ln
    exception Sqrt

d45 1
d65 1
a65 1
    datatype ordering = LESS | EQUAL | GREATER
@
