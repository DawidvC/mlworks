head	1.5;
access;
symbols
	MLW_daveb_inline_1_4_99:1.5.1
	MLWorks_21c0_1999_03_25:1.5
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.3.1.1.1.1.1
	MLWorks_workspace_97:1.4.2
	MLWorks_dt_wizard:1.4.1
	MLWorks_11c0_1997_09_09:1.3.1.1.1.1
	MLWorks_10r3:1.3.1.1.3
	MLWorks_10r2_551:1.3.1.1.2
	MLWorks_11:1.3.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.1.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.3.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.1
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3;
locks; strict;
comment	@ *  @;


1.5
date	99.02.02.15.58.26;	author mitchell;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	97.05.16.15.41.47;	author jont;	state Exp;
branches
	1.4.1.1
	1.4.2.1;
next	1.3;

1.3
date	97.01.23.13.39.02;	author io;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	96.04.29.15.40.00;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	96.04.18.11.38.22;	author jont;	state Exp;
branches;
next	;

1.3.1.1
date	97.05.12.10.28.53;	author hope;	state Exp;
branches
	1.3.1.1.1.1
	1.3.1.1.2.1
	1.3.1.1.3.1;
next	;

1.3.1.1.1.1
date	97.07.28.18.13.40;	author daveb;	state Exp;
branches
	1.3.1.1.1.1.1.1;
next	;

1.3.1.1.1.1.1.1
date	97.10.07.11.38.50;	author jkbrook;	state Exp;
branches;
next	;

1.3.1.1.2.1
date	97.09.08.17.07.07;	author daveb;	state Exp;
branches;
next	;

1.3.1.1.3.1
date	97.09.09.14.02.23;	author daveb;	state Exp;
branches;
next	;

1.4.1.1
date	97.09.10.19.16.50;	author brucem;	state Exp;
branches;
next	;

1.4.2.1
date	97.09.11.20.47.08;	author daveb;	state Exp;
branches;
next	;

1.5.1.1
date	99.04.01.17.51.49;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.5
log
@[Bug #190500]
Remove redundant require statements
@
text
@(*  ==== INITIAL BASIS :  PACK WORDS (BIG) ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Implementation
 *  --------------
 *
 *  This is part of the extended Initial Basis.
 *
 *  Revision Log
 *  ------------
 *  $Log: _pack_words_big.sml,v $
 *  Revision 1.4  1997/05/16  15:41:47  jont
 *  [Bug #30090]
 *  Translate output std_out to print
 *
 *  Revision 1.3  1997/01/23  13:39:02  io
 *  new unit
 *  rename _pack_word_{big,little} to _pack_words_{big,little}
 *         __pack{8,16,32}{big,little} to __pack{8,16,32}_{big,little}
 *
 *  Revision 1.3  1996/11/06  10:48:00  matthew
 *  Renamed __integer to __int
 *
 *  Revision 1.2  1996/05/17  14:24:20  jont
 *  Revise to latest signature
 *
 *  Revision 1.1  1996/05/15  13:32:46  jont
 *  new unit
 *
 * Revision 1.2  1996/04/29  15:40:00  matthew
 * Removed MLWorks.Integer
 *
 * Revision 1.1  1996/04/18  11:38:22  jont
 * new unit
 *
 *  Revision 1.3  1996/03/20  14:55:00  matthew
 *  Changes for new language definition
 *
 *  Revision 1.2  1995/09/12  11:48:18  daveb
 *  words.sml replaced with word.sml.
 *
 *  Revision 1.1  1995/03/22  20:24:17  brianm
 *  new unit
 *  New file.
 *
 *
 *)

require "__int";
require "__word8_vector";
require "__word8_array";
require "pack_word";
require "word";


functor PackWordsBig(
  structure Word : WORD
) : PACK_WORD =
   struct

     val wordSize = Word.wordSize

     val wordTag = " word" ^ Int.toString(wordSize)

     val MLWenvironment  = MLWorks.Internal.Runtime.environment;

     fun env s = MLWenvironment(s ^ wordTag);

     val bytesPerElem : int = (wordSize div 8)

     val isBigEndian : bool = true

     val subVec  : (Word8Vector.vector * int) -> Word.word      = env "subV"
     val subArr  : (Word8Array.array * int) -> Word.word        = env "subA"
     val update  : (Word8Array.array * int * Word.word) -> unit = env "update"

     val subVecX = Word.toLargeWordX o subVec
     val subVec = Word.toLargeWord o subVec
     val subArrX = Word.toLargeWordX o subArr
     val subArr = Word.toLargeWord o subArr
     val update =
       fn (array, i, word) => update(array, i, Word.fromLargeWord word)
   end
@


1.5.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a12 4
 *  Revision 1.5  1999/02/02  15:58:26  mitchell
 *  [Bug #190500]
 *  Remove redundant require statements
 *
@


1.4
log
@[Bug #30090]
Translate output std_out to print
@
text
@d13 4
a52 1
require "__word32";
@


1.4.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a12 4
 *  Revision 1.4  1997/05/16  15:41:47  jont
 *  [Bug #30090]
 *  Translate output std_out to print
 *
@


1.4.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a12 4
 *  Revision 1.4  1997/05/16  15:41:47  jont
 *  [Bug #30090]
 *  Translate output std_out to print
 *
@


1.3
log
@new unit
rename _pack_word_{big,little} to _pack_words_{big,little}
       __pack{8,16,32}{big,little} to __pack{8,16,32}_{big,little}
@
text
@d12 6
a17 1
 *  $Log: _pack_word_big.sml,v $
a63 2

     fun outstr s = (MLWorks.IO.output(MLWorks.IO.std_out,s); s)
@


1.3.1.1
log
@branched from 1.3
@
text
@d12 1
a12 6
 *  $Log: _pack_words_big.sml,v $
 *  Revision 1.3  1997/01/23  13:39:02  io
 *  new unit
 *  rename _pack_word_{big,little} to _pack_words_{big,little}
 *         __pack{8,16,32}{big,little} to __pack{8,16,32}_{big,little}
 *
@


1.3.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a12 3
 *  Revision 1.3.1.1  1997/05/12  10:28:53  hope
 *  branched from 1.3
 *
@


1.3.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a12 3
 *  Revision 1.3.1.1  1997/05/12  10:28:53  hope
 *  branched from 1.3
 *
@


1.3.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a12 3
 *  Revision 1.3.1.1  1997/05/12  10:28:53  hope
 *  branched from 1.3
 *
@


1.3.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a12 3
 *  Revision 1.3.1.1.1.1  1997/07/28  18:13:40  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.2
log
@Removed MLWorks.Integer
@
text
@d12 13
a24 1
 *  $Log: _pack_words_big.sml,v $
d41 5
a45 6
require "__integer";

require "__word8";
require "__word8vector";
require "__word8array";
require "pack_words";
a53 2
     structure Word = Word

d64 15
a78 12
     type vector = Word8Vector.vector
     type array = Word8Array.array
     type word = Word.word

     val bytesPerWord : int = (wordSize div 8)

     val isBig : bool = true

     val subv : (vector * int) -> word           = env "sub"
     val sub  : (array * int) -> word            = env "sub"
     val update : (array * int * word) -> unit   = env "update"
   end;
@


1.1
log
@new unit
@
text
@d12 4
a15 1
 *  $Log$
d29 2
d47 1
a47 1
     val wordTag = " word" ^ MLWorks.Integer.makestring(wordSize)
@
