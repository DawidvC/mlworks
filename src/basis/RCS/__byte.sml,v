head	1.7;
access;
symbols
	MLW_daveb_inline_1_4_99:1.7.3
	MLWorks_21c0_1999_03_25:1.7
	MLWorks_20c1_1998_08_20:1.7
	MLWorks_20c0_1998_08_04:1.7
	MLWorks_20b2c2_1998_06_19:1.7
	MLWorks_20b2_Windows_1998_06_12:1.7
	MLWorks_20b1c1_1998_05_07:1.7
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.7
	MLWorks_20m1_1997_10_23:1.7
	MLWorks_11r1:1.6.1.1.1.1.1
	MLWorks_workspace_97:1.7.2
	MLWorks_dt_wizard:1.7.1
	MLWorks_11c0_1997_09_09:1.6.1.1.1.1
	MLWorks_10r3:1.6.1.1.3
	MLWorks_10r2_551:1.6.1.1.2
	MLWorks_11:1.6.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.1.1
	MLWorks_20m0_1997_06_20:1.7
	MLWorks_1_0_r2c2_1997_06_14:1.6.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.1
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.5.6.1.1
	MLWorks_gui_1996_12_18:1.5.7
	MLWorks_1_0_Win32_1996_12_17:1.5.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.5.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.5.4.1
	MLWorks_1_0_Irix_1996_11_28:1.5.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.5.5
	MLWorks_1_0_Unix_1996_11_14:1.5.4
	MLWorks_Open_Beta2_1996_10_11:1.5.3
	MLWorks_License_dev:1.5.2
	MLWorks_1_open_beta_1996_09_13:1.5.1
	MLWorks_Open_Beta_1996_08_22:1.5
	MLWorks_Beta_1996_07_02:1.4
	MLWorks_Beta_1996_06_07:1.4
	MLWorks_Beta_1996_06_06:1.4
	MLWorks_Beta_1996_06_05:1.4
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4;
locks; strict;
comment	@ *  @;


1.7
date	97.05.27.14.21.00;	author matthew;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1;
next	1.6;

1.6
date	97.01.15.12.03.43;	author io;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	96.08.09.13.57.17;	author daveb;	state Exp;
branches
	1.5.1.1
	1.5.2.1
	1.5.3.1
	1.5.4.1
	1.5.5.1
	1.5.6.1
	1.5.7.1;
next	1.4;

1.4
date	96.05.23.20.58.24;	author io;	state Exp;
branches;
next	1.3;

1.3
date	96.05.17.14.26.12;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	96.05.17.09.37.37;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	96.05.15.12.58.07;	author jont;	state Exp;
branches;
next	;

1.5.1.1
date	96.09.13.11.10.36;	author hope;	state Exp;
branches;
next	;

1.5.2.1
date	96.10.07.16.01.21;	author hope;	state Exp;
branches;
next	;

1.5.3.1
date	96.10.17.11.19.37;	author hope;	state Exp;
branches;
next	;

1.5.4.1
date	96.11.14.12.43.11;	author hope;	state Exp;
branches
	1.5.4.1.1.1;
next	;

1.5.4.1.1.1
date	96.11.28.14.55.04;	author hope;	state Exp;
branches;
next	;

1.5.5.1
date	96.11.22.18.03.39;	author hope;	state Exp;
branches;
next	;

1.5.6.1
date	96.12.17.17.42.35;	author hope;	state Exp;
branches
	1.5.6.1.1.1;
next	;

1.5.6.1.1.1
date	97.02.24.11.31.09;	author hope;	state Exp;
branches;
next	;

1.5.7.1
date	96.12.18.09.36.33;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	97.05.12.10.28.46;	author hope;	state Exp;
branches
	1.6.1.1.1.1
	1.6.1.1.2.1
	1.6.1.1.3.1;
next	;

1.6.1.1.1.1
date	97.07.28.18.14.42;	author daveb;	state Exp;
branches
	1.6.1.1.1.1.1.1;
next	;

1.6.1.1.1.1.1.1
date	97.10.07.11.39.46;	author jkbrook;	state Exp;
branches;
next	;

1.6.1.1.2.1
date	97.09.08.17.08.07;	author daveb;	state Exp;
branches;
next	;

1.6.1.1.3.1
date	97.09.09.14.03.17;	author daveb;	state Exp;
branches;
next	;

1.7.1.1
date	97.09.10.19.17.46;	author brucem;	state Exp;
branches;
next	;

1.7.2.1
date	97.09.11.20.48.34;	author daveb;	state Exp;
branches;
next	;

1.7.3.1
date	99.04.01.17.52.42;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.7
log
@Changing type of pack_string
@
text
@(*  ==== INITIAL BASIS : Byte structure ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This is part of the extended Initial Basis.
 *
 *  Revision Log
 *  ------------
 *  $Log: __byte.sml,v $
 *  Revision 1.6  1997/01/15  12:03:43  io
 *  [Bug #1892]
 *  rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
 *
 *  Revision 1.5  1996/08/09  13:57:17  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector and string no longer share.
 *  Replaced implementations of stringToBytes and bytesToString by casts.
 *  Removed redundant requires.
 *
 *  Revision 1.4  1996/05/23  20:58:24  io
 *  revising
 *  ..
 *  ..
 *
 *  Revision 1.3  1996/05/17  14:26:12  matthew
 *  Vector and array changes
 *
 *  Revision 1.2  1996/05/17  09:37:37  matthew
 *  Moved Bits to MLWorks.Internal.Bits
 *
 *  Revision 1.1  1996/05/15  12:58:07  jont
 *  new unit
 *
 * Revision 1.2  1996/04/23  16:01:54  matthew
 * Defining char properly
 *
 * Revision 1.1  1996/04/18  11:23:53  jont
 * new unit
 *
 *  Revision 1.2  1995/05/10  15:01:54  daveb
 *  Type of char changed from int to Word8.word.
 *
 * Revision 1.1  1995/04/13  13:13:05  jont
 * new unit
 * No reason given
 *
 *
 *)

require "byte";
require "__word8";
require "__word8_vector";
require "__word8_array";
require "__substring";

structure Byte : BYTE =
  struct
    fun byteToChar (w:Word8.word) : char = MLWorks.Internal.Value.cast w
    fun charToByte (c:char) : Word8.word = MLWorks.Internal.Value.cast c

    fun bytesToString (v:Word8Vector.vector) : string = 
      MLWorks.Internal.Value.cast v

    fun stringToBytes (s:string) : Word8Vector.vector = 
      MLWorks.Internal.Value.cast s

    val unpackStringVec =
      bytesToString o Word8Vector.extract
	
    val unpackString =
      bytesToString o Word8Array.extract

    fun packString (a, i, ss) = 
      let
        val length = Word8Array.length a

        fun copyFrom i = 
          if i < length then
            (Word8Array.update(a, i, charToByte (Substring.sub(ss, i)));
             copyFrom (i+1))
          else
            ()
      in
        copyFrom i
      end
        
  end (* Byte *)
@


1.7.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a11 3
 *  Revision 1.7  1997/05/27  14:21:00  matthew
 *  Changing type of pack_string
 *
@


1.7.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a11 3
 *  Revision 1.7  1997/05/27  14:21:00  matthew
 *  Changing type of pack_string
 *
@


1.7.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a11 3
 *  Revision 1.7  1997/05/27  14:21:00  matthew
 *  Changing type of pack_string
 *
@


1.6
log
@[Bug #1892]
rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
@
text
@d12 4
d76 1
a76 1
    fun packString (ss, a, i) = 
@


1.6.1.1
log
@branched from 1.6
@
text
@a11 4
 *  Revision 1.6  1997/01/15  12:03:43  io
 *  [Bug #1892]
 *  rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
 *
@


1.6.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a11 3
 *  Revision 1.6.1.1  1997/05/12  10:28:46  hope
 *  branched from 1.6
 *
@


1.6.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a11 3
 *  Revision 1.6.1.1  1997/05/12  10:28:46  hope
 *  branched from 1.6
 *
@


1.6.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a11 3
 *  Revision 1.6.1.1  1997/05/12  10:28:46  hope
 *  branched from 1.6
 *
@


1.6.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a11 3
 *  Revision 1.6.1.1.1.1  1997/07/28  18:14:42  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.5
log
@[Bug #1536]
[Bug #1536]
Word8Vector.vector and string no longer share.
Replaced implementations of stringToBytes and bytesToString by casts.
Removed redundant requires.
@
text
@d12 7
d51 2
a52 2
require "__word8vector";
require "__word8array";
@


1.5.7.1
log
@branched from 1.5
@
text
@a11 7
 *  Revision 1.5  1996/08/09  13:57:17  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector and string no longer share.
 *  Replaced implementations of stringToBytes and bytesToString by casts.
 *  Removed redundant requires.
 *
@


1.5.6.1
log
@branched from 1.5
@
text
@a11 7
 *  Revision 1.5  1996/08/09  13:57:17  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector and string no longer share.
 *  Replaced implementations of stringToBytes and bytesToString by casts.
 *  Removed redundant requires.
 *
@


1.5.6.1.1.1
log
@branched from 1.5.6.1
@
text
@a11 3
 *  Revision 1.5.6.1  1996/12/17  17:42:35  hope
 *  branched from 1.5
 *
@


1.5.5.1
log
@branched from 1.5
@
text
@a11 7
 *  Revision 1.5  1996/08/09  13:57:17  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector and string no longer share.
 *  Replaced implementations of stringToBytes and bytesToString by casts.
 *  Removed redundant requires.
 *
@


1.5.4.1
log
@branched from 1.5
@
text
@a11 7
 *  Revision 1.5  1996/08/09  13:57:17  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector and string no longer share.
 *  Replaced implementations of stringToBytes and bytesToString by casts.
 *  Removed redundant requires.
 *
@


1.5.4.1.1.1
log
@branched from 1.5.4.1
@
text
@a11 3
 *  Revision 1.5.4.1  1996/11/14  12:43:11  hope
 *  branched from 1.5
 *
@


1.5.3.1
log
@branched from 1.5
@
text
@a11 7
 *  Revision 1.5  1996/08/09  13:57:17  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector and string no longer share.
 *  Replaced implementations of stringToBytes and bytesToString by casts.
 *  Removed redundant requires.
 *
@


1.5.2.1
log
@branched from 1.5
@
text
@a11 7
 *  Revision 1.5  1996/08/09  13:57:17  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector and string no longer share.
 *  Replaced implementations of stringToBytes and bytesToString by casts.
 *  Removed redundant requires.
 *
@


1.5.1.1
log
@branched from 1.5
@
text
@a11 7
 *  Revision 1.5  1996/08/09  13:57:17  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector and string no longer share.
 *  Replaced implementations of stringToBytes and bytesToString by casts.
 *  Removed redundant requires.
 *
@


1.4
log
@revising
..
..
@
text
@d12 5
a41 1
require "toplevel";
a45 2
require "__charvector";
require "__string";
d52 1
d54 1
a54 7
      let
        val length = Word8Vector.length v
	fun aux(0, acc) = acc
	  | aux(n, acc) = aux(n-1, byteToChar(Word8Vector.sub(v, n-1)) :: acc)
      in
        CharVector.fromList (aux (length, []))
      end
d57 8
a64 12
      let
        val size = size s
        fun aux (acc, i) = 
          if i < 0 then
            Word8Vector.fromList acc
          else
            aux (charToByte (String.sub(s, i))::acc, i-1)
      in
        aux ([], size-1)
      end
    val unpackStringVec = Word8Vector.extract
    val unpackString = Word8Array.extract
d68 1
d79 1
a79 1
  end (* Byte *)@


1.3
log
@Vector and array changes
@
text
@d12 3
d37 2
a38 1
require "__char";
d40 1
a41 1
require "__word8vector";
d43 2
a44 1
require "byte";
d48 10
a57 4
    structure Bits = MLWorks.Internal.Bits
    exception Ord
    fun chr (x: Word8.word): Char.char = MLWorks.Internal.Value.cast x
    fun ord (x: Char.char): Word8.word = MLWorks.Internal.Value.cast x
d59 1
a59 3
    val maxw = Bits.lshift(1, Word8.wordSize)
    val string : Word8Vector.vector -> string =
      fn v =>
d61 6
a66 3
	val len = Word8Vector.length v
	fun elems(0, acc) = acc
	  | elems(n, acc) = elems(n-1, chr(Word8Vector.sub(v, n-1)) :: acc)
d68 1
a68 1
	CharVector.fromList(elems(len, []))
d70 3
a72 3

    val extract : Word8Array.array * int * int -> string =
      fn (a, start, len) =>
d74 7
a80 2
	fun elems(0, acc) = acc
	  | elems(n, acc) = elems(n-1, chr(Word8Array.sub(a, start+n-1)) :: acc)
d82 1
a82 1
	CharVector.fromList(elems(len, []))
d84 2
a85 2

  end
@


1.2
log
@Moved Bits to MLWorks.Internal.Bits
@
text
@d12 3
d56 1
a56 1
	CharVector.vector(elems(len, []))
d65 1
a65 1
	CharVector.vector(elems(len, []))
@


1.1
log
@new unit
@
text
@d11 4
a14 1
 *  $Log: __bytes.sml,v $
d40 1
@
