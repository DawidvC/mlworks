head	1.14;
access;
symbols
	MLW_daveb_inline_1_4_99:1.14.1
	MLWorks_21c0_1999_03_25:1.14
	MLWorks_20c1_1998_08_20:1.13
	MLWorks_20c0_1998_08_04:1.13
	MLWorks_20b2c2_1998_06_19:1.13
	MLWorks_20b2_Windows_1998_06_12:1.13
	MLWorks_20b1c1_1998_05_07:1.13
	MLWorks_20b0_1998_04_07:1.13
	MLWorks_20b0_1998_03_20:1.13
	MLWorks_20m2_1998_02_16:1.13
	MLWorks_20m1_1997_10_23:1.13
	MLWorks_11r1:1.11.1.1.1.1.1
	MLWorks_workspace_97:1.13.2
	MLWorks_dt_wizard:1.13.1
	MLWorks_11c0_1997_09_09:1.11.1.1.1.1
	MLWorks_10r3:1.11.1.1.3
	MLWorks_10r2_551:1.11.1.1.2
	MLWorks_11:1.11.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.11.1.1
	MLWorks_20m0_1997_06_20:1.13
	MLWorks_1_0_r2c2_1997_06_14:1.11.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.11.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.11.1
	MLWorks_BugFix_1997_04_24:1.11
	MLWorks_1_0_r2_Win32_1997_04_11:1.11
	MLWorks_1_0_r2_Unix_1997_04_04:1.11
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.8.3.1.1
	MLWorks_gui_1996_12_18:1.8.4
	MLWorks_1_0_Win32_1996_12_17:1.8.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.8.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.8.1.1
	MLWorks_1_0_Irix_1996_11_28:1.8.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.8.2
	MLWorks_1_0_Unix_1996_11_14:1.8.1
	MLWorks_Open_Beta2_1996_10_11:1.7.2
	MLWorks_License_dev:1.7.1
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.6
	MLWorks_Beta_1996_06_07:1.6
	MLWorks_Beta_1996_06_06:1.6
	MLWorks_Beta_1996_06_05:1.6
	MLWorks_Beta_1996_06_03:1.5
	MLWorks_Beta_1996_05_31:1.5
	MLWorks_Beta_1996_05_30:1.5;
locks; strict;
comment	@ * @;


1.14
date	99.02.17.14.42.22;	author mitchell;	state Exp;
branches
	1.14.1.1;
next	1.13;

1.13
date	97.05.27.14.08.57;	author matthew;	state Exp;
branches
	1.13.1.1
	1.13.2.1;
next	1.12;

1.12
date	97.05.27.13.15.34;	author jkbrook;	state Exp;
branches;
next	1.11;

1.11
date	97.03.03.17.35.58;	author matthew;	state Exp;
branches
	1.11.1.1;
next	1.10;

1.10
date	97.01.14.17.51.22;	author io;	state Exp;
branches;
next	1.9;

1.9
date	96.11.16.00.52.56;	author io;	state Exp;
branches;
next	1.8;

1.8
date	96.11.04.19.03.37;	author andreww;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1
	1.8.4.1;
next	1.7;

1.7
date	96.10.03.15.24.45;	author io;	state Exp;
branches
	1.7.1.1
	1.7.2.1;
next	1.6;

1.6
date	96.06.04.15.57.14;	author io;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	96.05.10.15.22.51;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	96.05.09.10.13.48;	author matthew;	state Exp;
branches;
next	1.3;

1.3
date	96.05.02.16.05.24;	author io;	state Exp;
branches;
next	1.2;

1.2
date	96.04.30.11.26.09;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	96.04.18.11.45.28;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.09.32;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	96.10.07.16.00.28;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.10.17.11.18.43;	author hope;	state Exp;
branches;
next	;

1.8.1.1
date	96.11.14.12.42.16;	author hope;	state Exp;
branches
	1.8.1.1.1.1;
next	;

1.8.1.1.1.1
date	96.11.28.14.54.09;	author hope;	state Exp;
branches;
next	;

1.8.2.1
date	96.11.22.18.02.45;	author hope;	state Exp;
branches;
next	;

1.8.3.1
date	96.12.17.17.41.40;	author hope;	state Exp;
branches
	1.8.3.1.1.1;
next	;

1.8.3.1.1.1
date	97.02.24.11.29.58;	author hope;	state Exp;
branches;
next	;

1.8.4.1
date	96.12.18.09.35.38;	author hope;	state Exp;
branches;
next	;

1.11.1.1
date	97.05.12.10.27.39;	author hope;	state Exp;
branches
	1.11.1.1.1.1
	1.11.1.1.2.1
	1.11.1.1.3.1;
next	;

1.11.1.1.1.1
date	97.07.28.18.14.32;	author daveb;	state Exp;
branches
	1.11.1.1.1.1.1.1;
next	;

1.11.1.1.1.1.1.1
date	97.10.07.11.39.38;	author jkbrook;	state Exp;
branches;
next	;

1.11.1.1.2.1
date	97.09.08.17.07.59;	author daveb;	state Exp;
branches;
next	;

1.11.1.1.3.1
date	97.09.09.14.03.09;	author daveb;	state Exp;
branches;
next	;

1.13.1.1
date	97.09.10.19.17.37;	author brucem;	state Exp;
branches;
next	;

1.13.2.1
date	97.09.11.20.48.23;	author daveb;	state Exp;
branches;
next	;

1.14.1.1
date	99.04.01.17.52.40;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.14
log
@[Bug #190507]
Modify to satisfy CM constraints.
@
text
@(*  ==== INITIAL BASIS : REAL ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This is part of the extended Initial Basis.
 *
 *  $Log: real.sml,v $
 * Revision 1.13  1997/05/27  14:08:57  matthew
 * [Bug #30093]
 *
 * Removing Real.<>
 *
 * Revision 1.12  1997/05/27  13:15:34  jkbrook
 * [Bug #01749]
 * Changed to use __large_int for synonym structure LargeInt
 *
 * Revision 1.11  1997/03/03  17:35:58  matthew
 * Updating for yet more basis revisions
 *
 * Revision 1.10  1997/01/14  17:51:22  io
 * [Bug #1757]
 * rename __pre{integer,int32,real} to __pre_{int{,32},real}
 *
 * Revision 1.9  1996/11/16  00:52:56  io
 * [Bug #1757]
 * renamed __ieeereal to __ieee_real
 *
 * Revision 1.8  1996/11/04  19:03:37  andreww
 * [Bug #1711]
 * real type loses equality attribute.
 *
 * Revision 1.7  1996/10/03  15:24:45  io
 * [Bug #1614]
 * remove redundant requires
 *
 * Revision 1.6  1996/06/04  15:57:14  io
 * stringcvt -> string_cvt
 *
 * Revision 1.5  1996/05/10  15:22:51  matthew
 * Changing type of scan
 *
 * Revision 1.4  1996/05/09  10:13:48  matthew
 * Updating.
 *
 * Revision 1.3  1996/05/02  16:05:24  io
 * finis stringcvt
 *
 * Revision 1.2  1996/04/30  11:26:09  matthew
 * Revisions
 *
 * Revision 1.1  1996/04/18  11:45:28  jont
 * new unit
 *
 *  Revision 1.1  1995/04/13  14:09:03  jont
 *  new unit
 *  No reason given
 *
 *
 *)

require "__string_cvt";
require "__pre_int";
require "__large_int";
require "__pre_real";
require "__ieee_real";
require "math";

signature REAL =
  sig
    type real

    structure Math : MATH
    sharing type Math.real = real

    val radix : int
    val precision : PreInt.int
    val maxFinite : real
    val minPos : real
    val minNormalPos : real

    val posInf : real
    val negInf : real

    val + : real * real -> real
    val - : real * real -> real
    val * : real * real -> real
    val / : real * real -> real

    val *+ : real * real * real -> real
    val *- : real * real * real -> real

    val ~ : real -> real
    val abs : real -> real
    val min : real * real -> real
    val max : real * real -> real

    val sign : real -> int
    val signBit : real -> bool
    val sameSign : real * real -> bool
    val copySign : real * real -> real

    val compare : real * real -> order
    val compareReal : real * real -> IEEEReal.real_order

    val < : real * real -> bool
    val <= : real * real -> bool
    val > : real * real -> bool
    val >= : real * real -> bool

    val == : (real * real) -> bool		(* IEEE "=" *)
    val != : (real * real) -> bool		(* IEEE "?<>" *)
    val ?= : (real * real) -> bool		(* IEEE "?=" *)

    val unordered : real * real -> bool
    val isFinite : real -> bool
    val isNan : real -> bool
    val isNormal : real -> bool
    val class : real -> IEEEReal.float_class
    val fmt : StringCvt.realfmt -> real -> string 
    val toString : real -> string
    val fromString : string -> real option
    val scan : (char, 'a) StringCvt.reader -> 'a -> (real * 'a) option
    val toManExp : real -> {man : real, exp : int}
    val fromManExp : {man : real, exp : int} -> real
    val split : real -> {whole : real, frac : real}
    val realMod : real -> real
    val rem : real * real -> real
    val nextAfter : real * real -> real
    val checkFloat : real -> real

    val realFloor : real -> real
    val realCeil : real -> real
    val realTrunc : real -> real
    val floor : real -> PreInt.int
    val ceil : real -> PreInt.int (* round towards positive infinity *)
    val trunc : real -> PreInt.int (* round towards zero *)
    val round : real -> PreInt.int (* round towards nearest, ties towards even *)
      
    val toInt : IEEEReal.rounding_mode -> real -> int
    val toLargeInt : IEEEReal.rounding_mode -> real -> LargeInt.int
    val fromInt : int -> real
    val fromLargeInt : LargeInt.int -> real
    val toLarge : real -> PreLargeReal.real
    val fromLarge : IEEEReal.rounding_mode -> PreLargeReal.real -> real
    val toDecimal : real -> IEEEReal.decimal_approx
    val fromDecimal : IEEEReal.decimal_approx -> real
  end
@


1.14.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a9 4
 * Revision 1.14  1999/02/17  14:42:22  mitchell
 * [Bug #190507]
 * Modify to satisfy CM constraints.
 *
@


1.13
log
@[Bug #30093]

Removing Real.<>
@
text
@d10 5
d78 1
a78 1
    val precision : Int.int
d136 4
a139 4
    val floor : real -> Int.int
    val ceil : real -> Int.int (* round towards positive infinity *)
    val trunc : real -> Int.int (* round towards zero *)
    val round : real -> Int.int (* round towards nearest, ties towards even *)
d145 2
a146 2
    val toLarge : real -> LargeReal.real
    val fromLarge : IEEEReal.rounding_mode -> LargeReal.real -> real
@


1.13.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a9 5
 * Revision 1.13  1997/05/27  14:08:57  matthew
 * [Bug #30093]
 *
 * Removing Real.<>
 *
@


1.13.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a9 5
 * Revision 1.13  1997/05/27  14:08:57  matthew
 * [Bug #30093]
 *
 * Removing Real.<>
 *
@


1.12
log
@[Bug #01749]
Changed to use __large_int for synonym structure LargeInt
@
text
@d10 4
a108 1
    val <> : (real * real) -> bool		(* IEEE "<>" *)
@


1.11
log
@Updating for yet more basis revisions
@
text
@d10 3
d56 1
a56 1
require "__pre_int32";
@


1.11.1.1
log
@branched from 1.11
@
text
@a9 3
 * Revision 1.11  1997/03/03  17:35:58  matthew
 * Updating for yet more basis revisions
 *
@


1.11.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a9 3
 * Revision 1.11.1.1  1997/05/12  10:27:39  hope
 * branched from 1.11
 *
@


1.11.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a9 3
 * Revision 1.11.1.1  1997/05/12  10:27:39  hope
 * branched from 1.11
 *
@


1.11.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a9 3
 * Revision 1.11.1.1  1997/05/12  10:27:39  hope
 * branched from 1.11
 *
@


1.11.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a9 3
 * Revision 1.11.1.1.1.1  1997/07/28  18:14:32  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.10
log
@[Bug #1757]
rename __pre{integer,int32,real} to __pre_{int{,32},real}
@
text
@d10 4
a61 5
    val == : (real * real) -> bool		(* IEEE "=" *)
    val <> : (real * real) -> bool		(* IEEE "<>" *)
    val ?<> : (real * real) -> bool		(* IEEE "?<>" *)
    val ?= : (real * real) -> bool		(* IEEE "?=" *)

d100 5
a104 1
    val equal : real * real -> bool
d117 1
d122 3
d136 2
@


1.9
log
@[Bug #1757]
renamed __ieeereal to __ieee_real
@
text
@d10 4
d48 3
a50 3
require "__preinteger";
require "__preint32";
require "__prereal";
@


1.8
log
@[Bug #1711]
real type loses equality attribute.
@
text
@d10 4
d47 1
a47 1
require "__ieeereal";
@


1.8.4.1
log
@branched from 1.8
@
text
@a9 4
 * Revision 1.8  1996/11/04  19:03:37  andreww
 * [Bug #1711]
 * real type loses equality attribute.
 *
@


1.8.3.1
log
@branched from 1.8
@
text
@a9 4
 * Revision 1.8  1996/11/04  19:03:37  andreww
 * [Bug #1711]
 * real type loses equality attribute.
 *
@


1.8.3.1.1.1
log
@branched from 1.8.3.1
@
text
@a9 3
 * Revision 1.8.3.1  1996/12/17  17:41:40  hope
 * branched from 1.8
 *
@


1.8.2.1
log
@branched from 1.8
@
text
@a9 4
 * Revision 1.8  1996/11/04  19:03:37  andreww
 * [Bug #1711]
 * real type loses equality attribute.
 *
@


1.8.1.1
log
@branched from 1.8
@
text
@a9 4
 * Revision 1.8  1996/11/04  19:03:37  andreww
 * [Bug #1711]
 * real type loses equality attribute.
 *
@


1.8.1.1.1.1
log
@branched from 1.8.1.1
@
text
@a9 3
 * Revision 1.8.1.1  1996/11/14  12:42:16  hope
 * branched from 1.8
 *
@


1.7
log
@[Bug #1614]
remove redundant requires
@
text
@d10 4
d48 6
a53 1
    eqtype real
d93 1
a93 1
    val unequal : real * real -> bool
d103 2
a104 2
    val toSci : real -> {man : real, exp : int}
    val fromSci : {man : real, exp : int} -> real
@


1.7.2.1
log
@branched from 1.7
@
text
@a9 4
 * Revision 1.7  1996/10/03  15:24:45  io
 * [Bug #1614]
 * remove redundant requires
 *
@


1.7.1.1
log
@branched from 1.7
@
text
@a9 4
 * Revision 1.7  1996/10/03  15:24:45  io
 * [Bug #1614]
 * remove redundant requires
 *
@


1.6
log
@stringcvt -> string_cvt
@
text
@d10 3
a34 1
require "toplevel";
@


1.6.1.1
log
@branched from 1.6
@
text
@a9 3
 * Revision 1.6  1996/06/04  15:57:14  io
 * stringcvt -> string_cvt
 *
@


1.5
log
@Changing type of scan
@
text
@d10 3
d33 1
a33 1
require "__stringcvt";
@


1.4
log
@Updating.
@
text
@d10 3
d88 1
a88 1
    val scan : (char, 'a) StringCvt.reader -> (real, 'a) StringCvt.reader
@


1.3
log
@finis stringcvt
@
text
@d10 3
d85 1
a85 1
(*    val scan : (char, 'a) StringCvt.reader -> (real, 'a) StringCvt.reader *)
@


1.2
log
@Revisions
@
text
@d10 3
d79 1
a79 1
    val fmt : StringCvt.realfmt -> real -> string
d82 1
a82 1
    val scan : (char, 'a) StringCvt.reader -> (real, 'a) StringCvt.reader
@


1.1
log
@new unit
@
text
@d9 4
a12 1
 *  $Log$
d21 1
d23 1
d25 2
d30 10
a39 1
    type real
d41 2
a42 2
    exception Div
    exception Overflow
d44 2
a45 1
    val ~ : real -> real
d48 5
a52 6
    val + : real * real -> real
    val - : real * real -> real
    val > : real * real -> bool
    val >= : real * real -> bool
    val < : real * real -> bool
    val <= : real * real -> bool
d54 2
d58 1
d60 1
d62 7
a68 2
    val toDefault : real -> Real.real
    val fromDefault : Real.real -> real
d70 28
a97 5
    val floor : real -> Integer.int
    val ceil : real -> Integer.int (* round towards positive infinity *)
    val trunc : real -> Integer.int (* round towards zero *)
    val round : real -> Integer.int (* round towards nearest, ties towards even *)
    val real : Integer.int -> Real.real
@
