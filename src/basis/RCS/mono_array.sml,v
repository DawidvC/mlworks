head	1.5;
access;
symbols
	MLW_daveb_inline_1_4_99:1.5.1
	MLWorks_21c0_1999_03_25:1.5
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.1.1.1.1.1
	MLWorks_workspace_97:1.4.3
	MLWorks_dt_wizard:1.4.2
	MLWorks_11c0_1997_09_09:1.4.1.1.1.1
	MLWorks_10r3:1.4.1.1.3
	MLWorks_10r2_551:1.4.1.1.2
	MLWorks_11:1.4.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.1.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.1
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.5.1.1
	MLWorks_gui_1996_12_18:1.3.6
	MLWorks_1_0_Win32_1996_12_17:1.3.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.3.1
	MLWorks_1_0_Irix_1996_11_28:1.3.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.4
	MLWorks_1_0_Unix_1996_11_14:1.3.3
	MLWorks_Open_Beta2_1996_10_11:1.3.2
	MLWorks_License_dev:1.3.1
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ *  @;


1.5
date	99.03.20.21.46.05;	author daveb;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	97.01.29.14.09.23;	author andreww;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1;
next	1.3;

1.3
date	96.10.03.15.22.04;	author io;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1;
next	1.2;

1.2
date	96.05.17.12.23.37;	author matthew;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	96.04.18.11.44.00;	author jont;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.09.44;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	96.10.07.16.00.37;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.17.11.18.52;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.11.14.12.42.25;	author hope;	state Exp;
branches
	1.3.3.1.1.1;
next	;

1.3.3.1.1.1
date	96.11.28.14.54.19;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.22.18.02.56;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.12.17.17.41.50;	author hope;	state Exp;
branches
	1.3.5.1.1.1;
next	;

1.3.5.1.1.1
date	97.02.24.11.30.10;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.18.09.35.47;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	97.05.12.10.27.51;	author hope;	state Exp;
branches
	1.4.1.1.1.1
	1.4.1.1.2.1
	1.4.1.1.3.1;
next	;

1.4.1.1.1.1
date	97.07.28.18.13.51;	author daveb;	state Exp;
branches
	1.4.1.1.1.1.1.1;
next	;

1.4.1.1.1.1.1.1
date	97.10.07.11.39.02;	author jkbrook;	state Exp;
branches;
next	;

1.4.1.1.2.1
date	97.09.08.17.07.20;	author daveb;	state Exp;
branches;
next	;

1.4.1.1.3.1
date	97.09.09.14.02.36;	author daveb;	state Exp;
branches;
next	;

1.4.2.1
date	97.09.10.19.17.03;	author brucem;	state Exp;
branches;
next	;

1.4.3.1
date	97.09.11.20.47.30;	author daveb;	state Exp;
branches;
next	;

1.5.1.1
date	99.04.01.17.51.56;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.5
log
@[Bug #20125]
Replaced substructure with type.
@
text
@(*  ==== INITIAL BASIS : MONO ARRAYS ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This is part of the extended Initial Basis.
 *
 *  Revision Log
 *  ------------
 *  $Log: mono_array.sml,v $
 *  Revision 1.4  1997/01/29  14:09:23  andreww
 *  [Bug #1904]
 *  elem type no longer an equality type
 *
 *  Revision 1.3  1996/10/03  15:22:04  io
 *  [Bug #1614]
 *  remove redundant requires
 *
 *  Revision 1.2  1996/05/17  12:23:37  matthew
 *  Updating
 *
 *  Revision 1.1  1996/04/18  11:44:00  jont
 *  new unit
 *
 * Revision 1.1  1996/04/18  11:44:00  jont
 * new unit
 *
 *  Revision 1.3  1995/03/18  17:52:59  brianm
 *  Changed spelling of arrayoflist to arrayOfList and
 *  made all types eqtypes (as per current draft).
 *
 * Revision 1.2  1995/03/17  16:59:49  brianm
 * Adding copy and copyv to signature ...
 *
 * Revision 1.1  1995/03/16  21:17:46  brianm
 * new unit
 * renamed from mono-arrays.sml
 *
 *)

signature MONO_ARRAY =
  sig

    eqtype array
    type elem
    type vector

    val maxLen : int

    (* array creation functions *)
    val array       : (int * elem) -> array
    val fromList : elem list -> array
    val tabulate    : (int * (int -> elem)) -> array

    val length      : array -> int
    val sub         : (array * int) -> elem
    val update      : (array * int * elem) -> unit
    val extract     : (array * int * int option) -> vector

    val copy        : { src : array, si : int, len : int option,
                        dst : array, di : int
                      } -> unit

    val copyVec       : { src : vector, si : int, len : int option,
                        dst : array, di : int
                      } -> unit

    val appi : ((int * elem) -> unit) -> (array * int * int option) -> unit
    val app : (elem -> unit) -> array -> unit

    val foldli : ((int * elem * 'b) -> 'b) -> 'b -> (array * int * int option) -> 'b
    val foldri : ((int * elem * 'b) -> 'b) -> 'b -> (array * int * int option) -> 'b
    val foldl : ((elem * 'b) -> 'b) -> 'b -> array -> 'b
    val foldr : ((elem * 'b) -> 'b) -> 'b -> array -> 'b

    val modifyi : ((int * elem) -> elem) -> (array * int * int option) -> unit
    val modify : (elem -> elem) -> array -> unit

  end
@


1.5.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a11 4
 *  Revision 1.5  1999/03/20  21:46:05  daveb
 *  [Bug #20125]
 *  Replaced substructure with type.
 *
@


1.4
log
@[Bug #1904]
elem type no longer an equality type
@
text
@d12 4
a41 2
require "mono_vector";

d47 1
a47 3

    structure Vector : MONO_VECTOR
    sharing type Vector.elem = elem
d59 1
a59 1
    val extract     : (array * int * int option) -> Vector.vector
d65 1
a65 1
    val copyVec       : { src : Vector.vector, si : int, len : int option,
@


1.4.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a11 4
 *  Revision 1.4  1997/01/29  14:09:23  andreww
 *  [Bug #1904]
 *  elem type no longer an equality type
 *
@


1.4.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a11 4
 *  Revision 1.4  1997/01/29  14:09:23  andreww
 *  [Bug #1904]
 *  elem type no longer an equality type
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a11 4
 *  Revision 1.4  1997/01/29  14:09:23  andreww
 *  [Bug #1904]
 *  elem type no longer an equality type
 *
@


1.4.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a11 3
 *  Revision 1.4.1.1  1997/05/12  10:27:51  hope
 *  branched from 1.4
 *
@


1.4.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a11 3
 *  Revision 1.4.1.1  1997/05/12  10:27:51  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a11 3
 *  Revision 1.4.1.1  1997/05/12  10:27:51  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a11 3
 *  Revision 1.4.1.1.1.1  1997/07/28  18:13:51  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3
log
@[Bug #1614]
remove redundant requires
@
text
@d12 4
d44 1
a44 1
    eqtype elem
@


1.3.6.1
log
@branched from 1.3
@
text
@a11 4
 *  Revision 1.3  1996/10/03  15:22:04  io
 *  [Bug #1614]
 *  remove redundant requires
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a11 4
 *  Revision 1.3  1996/10/03  15:22:04  io
 *  [Bug #1614]
 *  remove redundant requires
 *
@


1.3.5.1.1.1
log
@branched from 1.3.5.1
@
text
@a11 3
 *  Revision 1.3.5.1  1996/12/17  17:41:50  hope
 *  branched from 1.3
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a11 4
 *  Revision 1.3  1996/10/03  15:22:04  io
 *  [Bug #1614]
 *  remove redundant requires
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a11 4
 *  Revision 1.3  1996/10/03  15:22:04  io
 *  [Bug #1614]
 *  remove redundant requires
 *
@


1.3.3.1.1.1
log
@branched from 1.3.3.1
@
text
@a11 3
 *  Revision 1.3.3.1  1996/11/14  12:42:25  hope
 *  branched from 1.3
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a11 4
 *  Revision 1.3  1996/10/03  15:22:04  io
 *  [Bug #1614]
 *  remove redundant requires
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a11 4
 *  Revision 1.3  1996/10/03  15:22:04  io
 *  [Bug #1614]
 *  remove redundant requires
 *
@


1.2
log
@Updating
@
text
@d12 3
a33 1
require "toplevel";
@


1.2.1.1
log
@branched from 1.2
@
text
@a11 3
 *  Revision 1.2  1996/05/17  12:23:37  matthew
 *  Updating
 *
@


1.1
log
@new unit
@
text
@d11 4
a14 1
 *  $Log: mono_arrays.sml,v $
d31 3
a38 1
    eqtype vector
d40 4
a43 1
    val maxlen : int
d45 1
a45 1
  (* array creation functions *)
d47 1
a48 1
    val arrayOfList : elem list -> array
d53 1
a53 1
    val extract     : (array * int * int) -> vector
d55 1
a55 1
    val copy        : { src : array, si : int, len : int,
d59 1
a59 1
    val copyv       : { src : vector, si : int, len : int,
d62 11
@
