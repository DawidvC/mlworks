head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	96.04.18.11.44.46;	author jont;	state Exp;
branches;
next	;


desc
@new unit
@


1.1
log
@new unit
@
text
@(*  ==== INITIAL BASIS :  PACK WORDS ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  Packing/unpacking of words in arrays of bytes.
 *
 *  This is part of the extended Initial Basis.
 *
 *  Revision Log
 *  ------------
 *  $Log$
 *  Revision 1.4  1996/03/28  12:42:52  matthew
 *  New language definition
 *
 *  Revision 1.3  1995/09/12  11:48:34  daveb
 *  words.sml replaced with word.sml.
 *
 *  Revision 1.2  1995/03/18  19:03:47  brianm
 *  Added require statements and Word structure dependency.
 *
# Revision 1.1  1995/03/08  17:08:10  brianm
# new unit
# New file.
#
 *
 *)

require "__word8";
require "__word8vector";
require "__word8array";
require "word";



signature PACK_WORD =
   sig

     structure Word : WORD

     eqtype vector
     eqtype array
     eqtype word = Word.word

     val bytesPerWord : int
     val isBig : bool

     val subv : (vector * int) -> word
     val sub  : (array * int) -> word
     val update : (array * int * word) -> unit
   end
   where type vector = Word8Vector.vector
         and array = Word8Array.array
@
