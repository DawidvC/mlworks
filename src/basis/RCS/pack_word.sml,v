head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.3
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.3.1.1.1.1.1
	MLWorks_workspace_97:1.4.2
	MLWorks_dt_wizard:1.4.1
	MLWorks_11c0_1997_09_09:1.3.1.1.1.1
	MLWorks_10r3:1.3.1.1.3
	MLWorks_10r2_551:1.3.1.1.2
	MLWorks_11:1.3.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.1.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.3.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.1
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.2.6.1.1
	MLWorks_gui_1996_12_18:1.2.7
	MLWorks_1_0_Win32_1996_12_17:1.2.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.2.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.2.4.1
	MLWorks_1_0_Irix_1996_11_28:1.2.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.2.5
	MLWorks_1_0_Unix_1996_11_14:1.2.4
	MLWorks_Open_Beta2_1996_10_11:1.2.3
	MLWorks_License_dev:1.2.2
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ *  @;


1.4
date	97.05.27.13.14.51;	author jkbrook;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1;
next	1.3;

1.3
date	97.01.15.12.06.40;	author io;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	96.05.17.12.01.24;	author jont;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1
	1.2.5.1
	1.2.6.1
	1.2.7.1;
next	1.1;

1.1
date	96.04.18.11.44.46;	author jont;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.09.24;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.10.07.16.00.20;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.17.11.18.35;	author hope;	state Exp;
branches;
next	;

1.2.4.1
date	96.11.14.12.42.09;	author hope;	state Exp;
branches
	1.2.4.1.1.1;
next	;

1.2.4.1.1.1
date	96.11.28.14.54.01;	author hope;	state Exp;
branches;
next	;

1.2.5.1
date	96.11.22.18.02.37;	author hope;	state Exp;
branches;
next	;

1.2.6.1
date	96.12.17.17.41.33;	author hope;	state Exp;
branches
	1.2.6.1.1.1;
next	;

1.2.6.1.1.1
date	97.02.24.11.29.49;	author hope;	state Exp;
branches;
next	;

1.2.7.1
date	96.12.18.09.35.30;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	97.05.12.10.27.31;	author hope;	state Exp;
branches
	1.3.1.1.1.1
	1.3.1.1.2.1
	1.3.1.1.3.1;
next	;

1.3.1.1.1.1
date	97.07.28.18.14.50;	author daveb;	state Exp;
branches
	1.3.1.1.1.1.1.1;
next	;

1.3.1.1.1.1.1.1
date	97.10.07.11.39.54;	author jkbrook;	state Exp;
branches;
next	;

1.3.1.1.2.1
date	97.09.08.17.08.17;	author daveb;	state Exp;
branches;
next	;

1.3.1.1.3.1
date	97.09.09.14.03.24;	author daveb;	state Exp;
branches;
next	;

1.4.1.1
date	97.09.10.19.17.53;	author brucem;	state Exp;
branches;
next	;

1.4.2.1
date	97.09.11.20.48.44;	author daveb;	state Exp;
branches;
next	;

1.4.3.1
date	99.04.01.17.52.45;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.4
log
@[Bug #01749]
Changed to use __large_word for synonym structure LargeWord
@
text
@(*  ==== INITIAL BASIS :  PACK WORDS ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  Packing/unpacking of words in arrays of bytes.
 *
 *  This is part of the extended Initial Basis.
 *
 *  Revision Log
 *  ------------
 *  $Log: pack_word.sml,v $
 *  Revision 1.3  1997/01/15  12:06:40  io
 *  [Bug #1892]
 *  rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
 *
 *  Revision 1.2  1996/05/17  12:01:24  jont
 *  Revise to latest signature
 *
 *  Revision 1.1  1996/04/18  11:44:46  jont
 *  new unit
 *
 * Revision 1.1  1996/04/18  11:44:46  jont
 * new unit
 *
 *  Revision 1.4  1996/03/28  12:42:52  matthew
 *  New language definition
 *
 *  Revision 1.3  1995/09/12  11:48:34  daveb
 *  words.sml replaced with word.sml.
 *
 *  Revision 1.2  1995/03/18  19:03:47  brianm
 *  Added require statements and Word structure dependency.
 *
 * Revision 1.1  1995/03/08  17:08:10  brianm
 * new unit
 * New file.
 *
 *)

require "__large_word"; 
require "__word8_vector";
require "__word8_array";

signature PACK_WORD =
   sig

     val bytesPerElem : int
     val isBigEndian : bool

     val subVec : (Word8Vector.vector * int) -> LargeWord.word
     val subVecX : (Word8Vector.vector * int) -> LargeWord.word
     val subArr : (Word8Array.array * int) -> LargeWord.word
     val subArrX : (Word8Array.array * int) -> LargeWord.word

     val update : (Word8Array.array * int * LargeWord.word) -> unit
   end
@


1.4.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a13 4
 *  Revision 1.4  1997/05/27  13:14:51  jkbrook
 *  [Bug #01749]
 *  Changed to use __large_word for synonym structure LargeWord
 *
@


1.4.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a13 4
 *  Revision 1.4  1997/05/27  13:14:51  jkbrook
 *  [Bug #01749]
 *  Changed to use __large_word for synonym structure LargeWord
 *
@


1.4.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a13 4
 *  Revision 1.4  1997/05/27  13:14:51  jkbrook
 *  [Bug #01749]
 *  Changed to use __large_word for synonym structure LargeWord
 *
@


1.3
log
@[Bug #1892]
rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
@
text
@d14 4
d42 1
a42 1
require "__word32";
@


1.3.1.1
log
@branched from 1.3
@
text
@a13 4
 *  Revision 1.3  1997/01/15  12:06:40  io
 *  [Bug #1892]
 *  rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
 *
@


1.3.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a13 3
 *  Revision 1.3.1.1  1997/05/12  10:27:31  hope
 *  branched from 1.3
 *
@


1.3.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a13 3
 *  Revision 1.3.1.1  1997/05/12  10:27:31  hope
 *  branched from 1.3
 *
@


1.3.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a13 3
 *  Revision 1.3.1.1  1997/05/12  10:27:31  hope
 *  branched from 1.3
 *
@


1.3.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a13 3
 *  Revision 1.3.1.1.1.1  1997/07/28  18:14:50  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.2
log
@Revise to latest signature
@
text
@d14 3
d39 2
a40 2
require "__word8vector";
require "__word8array";
@


1.2.7.1
log
@branched from 1.2
@
text
@a13 3
 *  Revision 1.2  1996/05/17  12:01:24  jont
 *  Revise to latest signature
 *
@


1.2.6.1
log
@branched from 1.2
@
text
@a13 3
 *  Revision 1.2  1996/05/17  12:01:24  jont
 *  Revise to latest signature
 *
@


1.2.6.1.1.1
log
@branched from 1.2.6.1
@
text
@a13 3
 *  Revision 1.2.6.1  1996/12/17  17:41:33  hope
 *  branched from 1.2
 *
@


1.2.5.1
log
@branched from 1.2
@
text
@a13 3
 *  Revision 1.2  1996/05/17  12:01:24  jont
 *  Revise to latest signature
 *
@


1.2.4.1
log
@branched from 1.2
@
text
@a13 3
 *  Revision 1.2  1996/05/17  12:01:24  jont
 *  Revise to latest signature
 *
@


1.2.4.1.1.1
log
@branched from 1.2.4.1
@
text
@a13 3
 *  Revision 1.2.4.1  1996/11/14  12:42:09  hope
 *  branched from 1.2
 *
@


1.2.3.1
log
@branched from 1.2
@
text
@a13 3
 *  Revision 1.2  1996/05/17  12:01:24  jont
 *  Revise to latest signature
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a13 3
 *  Revision 1.2  1996/05/17  12:01:24  jont
 *  Revise to latest signature
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a13 3
 *  Revision 1.2  1996/05/17  12:01:24  jont
 *  Revise to latest signature
 *
@


1.1
log
@new unit
@
text
@d13 4
a16 1
 *  $Log: pack_words.sml,v $
d29 3
a31 4
# Revision 1.1  1995/03/08  17:08:10  brianm
# new unit
# New file.
#
d35 1
a35 1
require "__word8";
a37 3
require "word";


d42 2
a43 5
     structure Word : WORD

     eqtype vector
     eqtype array
     eqtype word = Word.word
d45 4
a48 2
     val bytesPerWord : int
     val isBig : bool
d50 1
a50 3
     val subv : (vector * int) -> word
     val sub  : (array * int) -> word
     val update : (array * int * word) -> unit
a51 2
   where type vector = Word8Vector.vector
         and array = Word8Array.array
@
