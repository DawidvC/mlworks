head	1.3;
access;
symbols
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.3.1.1
	MLWorks_gui_1996_12_18:1.3.4
	MLWorks_1_0_Win32_1996_12_17:1.3.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.1.1
	MLWorks_1_0_Irix_1996_11_28:1.3.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.2
	MLWorks_1_0_Unix_1996_11_14:1.3.1
	MLWorks_Open_Beta2_1996_10_11:1.2.3
	MLWorks_License_dev:1.2.2
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ *  @;


1.3
date	96.11.06.10.47.52;	author matthew;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1;
next	1.2;

1.2
date	96.05.17.14.24.32;	author jont;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1;
next	1.1;

1.1
date	96.05.15.13.32.57;	author jont;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.10.24;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.10.07.16.01.12;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.17.11.19.27;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	96.11.14.12.42.59;	author hope;	state Exp;
branches
	1.3.1.1.1.1;
next	;

1.3.1.1.1.1
date	96.11.28.14.54.53;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.11.22.18.03.29;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.12.17.17.42.23;	author hope;	state Exp;
branches
	1.3.3.1.1.1;
next	;

1.3.3.1.1.1
date	97.02.24.11.30.54;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.12.18.09.36.22;	author hope;	state Exp;
branches;
next	;


desc
@new unit
@


1.3
log
@Renamed __integer to __int
@
text
@(*  ==== INITIAL BASIS :  PACK WORDS (LITTLE) ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Implementation
 *  --------------
 *
 *  This is part of the extended Initial Basis.
 *
 *  Revision Log
 *  ------------
 *  $Log: _pack_word_little.sml,v $
 *  Revision 1.2  1996/05/17  14:24:32  jont
 *  Revise to latest signature
 *
 *  Revision 1.1  1996/05/15  13:32:57  jont
 *  new unit
 *
 * Revision 1.2  1996/04/29  15:40:10  matthew
 * Removed MLWorks.Integer
 *
 * Revision 1.1  1996/04/18  11:38:27  jont
 * new unit
 *
 *  Revision 1.3  1996/03/20  14:55:50  matthew
 *  Changes for new language definition
 *
 *  Revision 1.2  1995/09/12  11:48:23  daveb
 *  words.sml replaced with word.sml.
 *
 *  Revision 1.1  1995/03/22  20:24:43  brianm
 *  new unit
 *  New file.
 *
 *
 *)

require "__int";
require "__word8vector";
require "__word8array";
require "__word32";
require "pack_word";
require "word";


functor PackWordsLittle(
  structure Word : WORD
) : PACK_WORD =
   struct

     val wordSize = Word.wordSize

     val wordTag = " word" ^ Int.toString(wordSize)

     val MLWenvironment  = MLWorks.Internal.Runtime.environment;

     fun env s = MLWenvironment (s ^ wordTag);

     val bytesPerElem : int = (wordSize div 8)

     val isBigEndian : bool = false

     val subVec  : (Word8Vector.vector * int) -> Word.word      = env "subV reverse"
     val subArr  : (Word8Array.array * int) -> Word.word        = env "subA reverse"
     val update  : (Word8Array.array * int * Word.word) -> unit = env "update reverse"

     val subVecX = Word.toLargeWordX o subVec
     val subVec = Word.toLargeWord o subVec
     val subArrX = Word.toLargeWordX o subArr
     val subArr = Word.toLargeWord o subArr
     val update =
       fn (array, i, word) => update(array, i, Word.fromLargeWord word)
   end
@


1.3.4.1
log
@branched from 1.3
@
text
@a12 3
 *  Revision 1.3  1996/11/06  10:47:52  matthew
 *  Renamed __integer to __int
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a12 3
 *  Revision 1.3  1996/11/06  10:47:52  matthew
 *  Renamed __integer to __int
 *
@


1.3.3.1.1.1
log
@branched from 1.3.3.1
@
text
@a12 3
 *  Revision 1.3.3.1  1996/12/17  17:42:23  hope
 *  branched from 1.3
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a12 3
 *  Revision 1.3  1996/11/06  10:47:52  matthew
 *  Renamed __integer to __int
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a12 3
 *  Revision 1.3  1996/11/06  10:47:52  matthew
 *  Renamed __integer to __int
 *
@


1.3.1.1.1.1
log
@branched from 1.3.1.1
@
text
@a12 3
 *  Revision 1.3.1.1  1996/11/14  12:42:59  hope
 *  branched from 1.3
 *
@


1.2
log
@Revise to latest signature
@
text
@d13 3
d38 1
a38 1
require "__integer";
@


1.2.3.1
log
@branched from 1.2
@
text
@a12 3
 *  Revision 1.2  1996/05/17  14:24:32  jont
 *  Revise to latest signature
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a12 3
 *  Revision 1.2  1996/05/17  14:24:32  jont
 *  Revise to latest signature
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a12 3
 *  Revision 1.2  1996/05/17  14:24:32  jont
 *  Revise to latest signature
 *
@


1.1
log
@new unit
@
text
@d12 4
a15 1
 *  $Log: _pack_words_little.sml,v $
a35 2

require "__word8";
d38 1
a47 2
     structure Word = Word

d56 15
a70 12
     type vector = Word8Vector.vector
     type array = Word8Array.array
     type word = Word.word

     val bytesPerWord : int = (wordSize div 8)

     val isBig : bool = false

     val subv : (vector * int) -> word           = env "sub reverse"
     val sub  : (array * int) -> word            = env "sub reverse"
     val update : (array * int * word) -> unit   = env "update reverse"
   end;
@
