head	1.9;
access;
symbols
	MLW_daveb_inline_1_4_99:1.7.1
	MLWorks_21c0_1999_03_25:1.7
	MLWorks_20c1_1998_08_20:1.6
	MLWorks_20c0_1998_08_04:1.6
	MLWorks_20b2c2_1998_06_19:1.6
	MLWorks_20b2_Windows_1998_06_12:1.6
	MLWorks_20b1c1_1998_05_07:1.5
	MLWorks_20b0_1998_04_07:1.5
	MLWorks_20b0_1998_03_20:1.5
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.2.8.1.1.1.1
	MLWorks_workspace_97:1.2.10
	MLWorks_dt_wizard:1.2.9
	MLWorks_11c0_1997_09_09:1.2.8.1.1.1
	MLWorks_10r3:1.2.8.1.3
	MLWorks_10r2_551:1.2.8.1.2
	MLWorks_11:1.2.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.2.8.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.2.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.2.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.2.8
	MLWorks_BugFix_1997_04_24:1.2
	MLWorks_1_0_r2_Win32_1997_04_11:1.2
	MLWorks_1_0_r2_Unix_1997_04_04:1.2
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.2.6.1.1
	MLWorks_gui_1996_12_18:1.2.7
	MLWorks_1_0_Win32_1996_12_17:1.2.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.2.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.2.4.1
	MLWorks_1_0_Irix_1996_11_28:1.2.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.2.5
	MLWorks_1_0_Unix_1996_11_14:1.2.4
	MLWorks_Open_Beta2_1996_10_11:1.2.3
	MLWorks_License_dev:1.2.2
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ *  @;


1.9
date	99.05.27.10.17.45;	author johnh;	state Exp;
branches;
next	1.8;

1.8
date	99.04.22.09.44.02;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	99.03.11.15.22.28;	author daveb;	state Exp;
branches
	1.7.1.1;
next	1.6;

1.6
date	98.05.26.13.56.24;	author mitchell;	state Exp;
branches;
next	1.5;

1.5
date	98.02.19.16.16.10;	author mitchell;	state Exp;
branches;
next	1.4;

1.4
date	97.10.08.09.59.48;	author johnh;	state Exp;
branches;
next	1.3;

1.3
date	97.10.07.14.50.11;	author johnh;	state Exp;
branches;
next	1.2;

1.2
date	96.05.09.14.58.15;	author stephenb;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1
	1.2.5.1
	1.2.6.1
	1.2.7.1
	1.2.8.1
	1.2.9.1
	1.2.10.1;
next	1.1;

1.1
date	96.04.17.15.27.39;	author stephenb;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.10.43;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.10.07.16.01.29;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.17.11.19.44;	author hope;	state Exp;
branches;
next	;

1.2.4.1
date	96.11.14.12.43.18;	author hope;	state Exp;
branches
	1.2.4.1.1.1;
next	;

1.2.4.1.1.1
date	96.11.28.14.55.11;	author hope;	state Exp;
branches;
next	;

1.2.5.1
date	96.11.22.18.03.46;	author hope;	state Exp;
branches;
next	;

1.2.6.1
date	96.12.17.17.42.41;	author hope;	state Exp;
branches
	1.2.6.1.1.1;
next	;

1.2.6.1.1.1
date	97.02.24.11.31.16;	author hope;	state Exp;
branches;
next	;

1.2.7.1
date	96.12.18.09.36.40;	author hope;	state Exp;
branches;
next	;

1.2.8.1
date	97.05.12.10.28.51;	author hope;	state Exp;
branches
	1.2.8.1.1.1
	1.2.8.1.2.1
	1.2.8.1.3.1;
next	;

1.2.8.1.1.1
date	97.07.28.18.14.46;	author daveb;	state Exp;
branches
	1.2.8.1.1.1.1.1;
next	;

1.2.8.1.1.1.1.1
date	97.10.07.11.39.51;	author jkbrook;	state Exp;
branches;
next	;

1.2.8.1.2.1
date	97.09.08.17.08.12;	author daveb;	state Exp;
branches;
next	;

1.2.8.1.3.1
date	97.09.09.14.03.20;	author daveb;	state Exp;
branches;
next	;

1.2.9.1
date	97.09.10.19.17.49;	author brucem;	state Exp;
branches;
next	;

1.2.10.1
date	97.09.11.20.48.40;	author daveb;	state Exp;
branches;
next	;

1.7.1.1
date	99.04.01.17.52.10;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Moved from main so that the files can be distributed as part
of the basis.
@


1.9
log
@[Bug #190553]
Fix require statements to make bootstrap compiler work.
@
text
@(* Copyright (C) 1996 Harlequin Ltd.
 *
 * See exit.sml for documentation.
 *
 * Revision Log
 * ------------
 *
 * $Log: __exit.sml,v $
 *  Revision 1.8  1999/04/22  09:44:02  daveb
 *  Removed the equality attribute from the status type; added isSuccess.
 *
 *  Revision 1.7  1999/03/11  15:22:28  daveb
 *  [Bug #190523]
 *  Added fromStatus.
 *
 *  Revision 1.6  1998/05/26  13:56:24  mitchell
 *  [Bug #30413]
 *  Define exit structure in terms of the pervasive exit structure
 *
 *  Revision 1.5  1998/02/19  16:16:10  mitchell
 *  [Bug #30349]
 *  Fix to avoid non-unit sequence warnings
 *
 *  Revision 1.4  1997/10/08  09:59:48  johnh
 *  [Bug #20101]
 *  Add signature constraint.
 *
 *  Revision 1.3  1997/10/07  14:50:11  johnh
 *  [Bug #30226]
 *  Set a reference  in pervasive to store the exit function to call when
 *  the executable exits normally.
 *
 *  Revision 1.2  1996/05/09  14:58:15  stephenb
 *  Fix the definition of terminate so the C function actually gets called!
 *
 *  Revision 1.1  1996/04/17  15:27:39  stephenb
 *  new unit
 *  Moved from main so that the files can be distributed as part
 *  of the basis.
 *
 *  Revision 1.1  1996/04/17  15:27:39  stephenb
 *  new unit
 *  Provide an OS independent way of terminating MLWorks.
 *
 *
 *)

require "exit";
require "../system/__os_exit";

structure Exit_ : EXIT = OSExit;
@


1.8
log
@Removed the equality attribute from the status type; added isSuccess.
@
text
@d9 3
d49 1
a49 1
require "__os_exit";
@


1.7
log
@[Bug #190523]
Added fromStatus.
@
text
@d9 4
d46 1
d48 1
a48 10
structure Exit_ :> EXIT = 
  struct
    open MLWorks.Internal.Exit;
    fun atExit action = (ignore(MLWorks.Internal.Exit.atExit action); ())

    fun fromStatus x = x

  end;


@


1.7.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a8 4
 *  Revision 1.7  1999/03/11  15:22:28  daveb
 *  [Bug #190523]
 *  Added fromStatus.
 *
@


1.6
log
@[Bug #30413]
Define exit structure in terms of the pervasive exit structure
@
text
@d9 4
d47 3
@


1.5
log
@[Bug #30349]
Fix to avoid non-unit sequence warnings
@
text
@d9 4
d39 1
a39 1
structure Exit_ : EXIT =
d41 3
a43 43
    val env = MLWorks.Internal.Runtime.environment

    type status = int

    val success : status = 0

    val failure : status = 1

    val uncaughtIOException : status = 2

    val badUsage : status = 3

    val stop : status = 4

    val save : status = 5

    val badInput : status = 6

    fun terminate (x:status):'a = env "system os exit" x

    val exitActions = ref [] : (unit -> unit) list ref

    val exiting = ref false : bool ref

    (* exit is a little convoluted because it must satisfy the
     * following requirement on OS.Process.exit :-
     *
     *   Calls to *exit* do not return, but should cause the remainder 
     *   of the functions registered with *atExit* to be executed.
     *)
    fun exit exitCode =
      let 
        fun exit' [] = terminate exitCode
          | exit' (action::actions) = 
              (exitActions := actions;
               (action () handle _ => ());
               exit' actions)
      in
        exiting := true;
        exit' (!exitActions)
      end

    val firstExitFn = ref true
a44 9
    fun atExit action =
      if !exiting
      then ()
      else
	(if !firstExitFn then 
	  (MLWorks.Deliver.exitFn := (fn () => (ignore(exit 0); ()));
	   firstExitFn := false)
	 else ();
	 exitActions := action::(!exitActions))
a45 1
  end
@


1.4
log
@[Bug #20101]
Add signature constraint.
@
text
@d9 4
d86 1
a86 1
	  (MLWorks.Deliver.exitFn := (fn () => (exit 0; ()));
@


1.3
log
@[Bug #30226]
Set a reference  in pervasive to store the exit function to call when
the executable exits normally.
@
text
@d9 5
d29 1
d31 1
a31 1
structure Exit_ =
@


1.2
log
@Fix the definition of terminate so the C function actually gets called!
@
text
@d9 3
a50 7

    fun atExit action =
      if !exiting
      then ()
      else  exitActions := action::(!exitActions)


d68 12
@


1.2.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a8 3
 *  Revision 1.2  1996/05/09  14:58:15  stephenb
 *  Fix the definition of terminate so the C function actually gets called!
 *
@


1.2.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a8 3
 *  Revision 1.2  1996/05/09  14:58:15  stephenb
 *  Fix the definition of terminate so the C function actually gets called!
 *
@


1.2.8.1
log
@branched from 1.2
@
text
@a8 3
 *  Revision 1.2  1996/05/09  14:58:15  stephenb
 *  Fix the definition of terminate so the C function actually gets called!
 *
@


1.2.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a8 3
 *  Revision 1.2.8.1  1997/05/12  10:28:51  hope
 *  branched from 1.2
 *
@


1.2.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a8 3
 *  Revision 1.2.8.1  1997/05/12  10:28:51  hope
 *  branched from 1.2
 *
@


1.2.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a8 3
 *  Revision 1.2.8.1  1997/05/12  10:28:51  hope
 *  branched from 1.2
 *
@


1.2.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a8 3
 *  Revision 1.2.8.1.1.1  1997/07/28  18:14:46  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.2.7.1
log
@branched from 1.2
@
text
@a8 3
 *  Revision 1.2  1996/05/09  14:58:15  stephenb
 *  Fix the definition of terminate so the C function actually gets called!
 *
@


1.2.6.1
log
@branched from 1.2
@
text
@a8 3
 *  Revision 1.2  1996/05/09  14:58:15  stephenb
 *  Fix the definition of terminate so the C function actually gets called!
 *
@


1.2.6.1.1.1
log
@branched from 1.2.6.1
@
text
@a8 3
 *  Revision 1.2.6.1  1996/12/17  17:42:41  hope
 *  branched from 1.2
 *
@


1.2.5.1
log
@branched from 1.2
@
text
@a8 3
 *  Revision 1.2  1996/05/09  14:58:15  stephenb
 *  Fix the definition of terminate so the C function actually gets called!
 *
@


1.2.4.1
log
@branched from 1.2
@
text
@a8 3
 *  Revision 1.2  1996/05/09  14:58:15  stephenb
 *  Fix the definition of terminate so the C function actually gets called!
 *
@


1.2.4.1.1.1
log
@branched from 1.2.4.1
@
text
@a8 3
 *  Revision 1.2.4.1  1996/11/14  12:43:18  hope
 *  branched from 1.2
 *
@


1.2.3.1
log
@branched from 1.2
@
text
@a8 3
 *  Revision 1.2  1996/05/09  14:58:15  stephenb
 *  Fix the definition of terminate so the C function actually gets called!
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a8 3
 *  Revision 1.2  1996/05/09  14:58:15  stephenb
 *  Fix the definition of terminate so the C function actually gets called!
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a8 3
 *  Revision 1.2  1996/05/09  14:58:15  stephenb
 *  Fix the definition of terminate so the C function actually gets called!
 *
@


1.1
log
@new unit
Moved from main so that the files can be distributed as part
of the basis.
@
text
@d11 5
d42 1
a42 1
    fun terminate (x:status):'a = env "system os exit"
@
