head	1.9;
access;
symbols
	MLW_daveb_inline_1_4_99:1.9.1
	MLWorks_21c0_1999_03_25:1.9
	MLWorks_20c1_1998_08_20:1.8
	MLWorks_20c0_1998_08_04:1.8
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.8
	MLWorks_20b1c1_1998_05_07:1.8
	MLWorks_20b0_1998_04_07:1.8
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.7.1.1.1.1.1
	MLWorks_workspace_97:1.8.2
	MLWorks_dt_wizard:1.8.1
	MLWorks_11c0_1997_09_09:1.7.1.1.1.1
	MLWorks_10r3:1.7.1.1.3
	MLWorks_10r2_551:1.7.1.1.2
	MLWorks_11:1.7.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.7.1.1
	MLWorks_20m0_1997_06_20:1.8
	MLWorks_1_0_r2c2_1997_06_14:1.7.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.7.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.7.1
	MLWorks_BugFix_1997_04_24:1.7
	MLWorks_1_0_r2_Win32_1997_04_11:1.7
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.6.5.1.1
	MLWorks_gui_1996_12_18:1.6.6
	MLWorks_1_0_Win32_1996_12_17:1.6.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.6.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.6.3.1
	MLWorks_1_0_Irix_1996_11_28:1.6.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.6.4
	MLWorks_1_0_Unix_1996_11_14:1.6.3
	MLWorks_Open_Beta2_1996_10_11:1.6.2
	MLWorks_License_dev:1.6.1
	MLWorks_1_open_beta_1996_09_13:1.5.1
	MLWorks_Open_Beta_1996_08_22:1.5
	MLWorks_Beta_1996_07_02:1.5
	MLWorks_Beta_1996_06_07:1.5
	MLWorks_Beta_1996_06_06:1.5
	MLWorks_Beta_1996_06_05:1.5
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4;
locks; strict;
comment	@ * @;


1.9
date	99.02.17.14.42.07;	author mitchell;	state Exp;
branches
	1.9.1.1;
next	1.8;

1.8
date	97.05.01.16.35.22;	author jont;	state Exp;
branches
	1.8.1.1
	1.8.2.1;
next	1.7;

1.7
date	97.01.14.17.47.15;	author io;	state Exp;
branches
	1.7.1.1;
next	1.6;

1.6
date	96.10.03.15.21.42;	author io;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1
	1.6.4.1
	1.6.5.1
	1.6.6.1;
next	1.5;

1.5
date	96.06.04.15.38.42;	author io;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	96.05.17.11.04.46;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	96.05.07.15.33.27;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	96.04.30.12.57.14;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	96.04.18.11.43.02;	author jont;	state Exp;
branches;
next	;

1.5.1.1
date	96.09.13.11.09.35;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	96.10.07.16.00.31;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.17.11.18.45;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.11.14.12.42.18;	author hope;	state Exp;
branches
	1.6.3.1.1.1;
next	;

1.6.3.1.1.1
date	96.11.28.14.54.11;	author hope;	state Exp;
branches;
next	;

1.6.4.1
date	96.11.22.18.02.49;	author hope;	state Exp;
branches;
next	;

1.6.5.1
date	96.12.17.17.41.43;	author hope;	state Exp;
branches
	1.6.5.1.1.1;
next	;

1.6.5.1.1.1
date	97.02.24.11.30.01;	author hope;	state Exp;
branches;
next	;

1.6.6.1
date	96.12.18.09.35.40;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	97.05.12.10.27.45;	author hope;	state Exp;
branches
	1.7.1.1.1.1
	1.7.1.1.2.1
	1.7.1.1.3.1;
next	;

1.7.1.1.1.1
date	97.07.28.18.14.09;	author daveb;	state Exp;
branches
	1.7.1.1.1.1.1.1;
next	;

1.7.1.1.1.1.1.1
date	97.10.07.11.39.15;	author jkbrook;	state Exp;
branches;
next	;

1.7.1.1.2.1
date	97.09.08.17.07.35;	author daveb;	state Exp;
branches;
next	;

1.7.1.1.3.1
date	97.09.09.14.02.49;	author daveb;	state Exp;
branches;
next	;

1.8.1.1
date	97.09.10.19.17.17;	author brucem;	state Exp;
branches;
next	;

1.8.2.1
date	97.09.11.20.47.54;	author daveb;	state Exp;
branches;
next	;

1.9.1.1
date	99.04.01.17.52.30;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.9
log
@[Bug #190507]
Modify to satisfy CM constraints.
@
text
@(*  ==== INITIAL BASIS : INTEGER ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This is part of the extended Initial Basis.
 *
 *  $Log: integer.sml,v $
 * Revision 1.8  1997/05/01  16:35:22  jont
 * [Bug #30096]
 * Change type of precision
 *
 * Revision 1.7  1997/01/14  17:47:15  io
 * [Bug #1757]
 * rename __pre{integer,int32} to __pre_int{,32}
 *
 * Revision 1.6  1996/10/03  15:21:42  io
 * [Bug #1614]
 * remove redundant requires
 *
 * Revision 1.5  1996/06/04  15:38:42  io
 * stringcvt -> string_cvt
 *
 * Revision 1.4  1996/05/17  11:04:46  jont
 * Update to latest signature
 *
 * Revision 1.3  1996/05/07  15:33:27  matthew
 * Adding fmt and scan
 *
 * Revision 1.2  1996/04/30  12:57:14  matthew
 * Updating
 *
 * Revision 1.1  1996/04/18  11:43:02  jont
 * new unit
 *
 *  Revision 1.3  1995/09/15  11:29:53  daveb
 *  Added makestring, removed require of prereal.
 *
 *  Revision 1.1  1995/04/13  13:56:49  jont
 *  new unit
 *  No reason given
 *
 *
 *)

require "__pre_int";
require "__pre_int32";
require "__string_cvt";

signature INTEGER =
  sig
    eqtype int

    val toLarge : int -> PreLargeInt.int
    val fromLarge : PreLargeInt.int -> int

    val toInt : int -> PreInt.int
    val fromInt : PreInt.int -> int

    val precision : PreInt.int option
    val minInt : int option
    val maxInt : int option

    val ~ : int -> int
    val * : int * int -> int
    val div : int * int -> int
    val mod : int * int -> int
    val quot : int * int -> int
    val rem : int * int -> int
    val + : int * int -> int
    val - : int * int -> int

    val compare : (int * int) -> order

    val > : int * int -> bool
    val >= : int * int -> bool
    val < : int * int -> bool
    val <= : int * int -> bool
    val abs : int -> int

    val min : int * int -> int
    val max : int * int -> int
    val sign : int -> PreInt.int
    val sameSign : int * int -> bool

    val fmt : StringCvt.radix -> int -> string

    val toString : int -> string

    val fromString : string -> int option

    val scan : StringCvt.radix -> (char, 'a) StringCvt.reader -> 'a -> (int * 'a) option
  end;


@


1.9.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a9 4
 * Revision 1.9  1999/02/17  14:42:07  mitchell
 * [Bug #190507]
 * Modify to satisfy CM constraints.
 *
@


1.8
log
@[Bug #30096]
Change type of precision
@
text
@d10 4
d55 2
a56 2
    val toLarge : int -> LargeInt.int
    val fromLarge : LargeInt.int -> int
d58 2
a59 2
    val toInt : int -> Int.int
    val fromInt : Int.int -> int
d61 1
a61 1
    val precision : Int.int option
d84 1
a84 1
    val sign : int -> Int.int
@


1.8.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a9 4
 * Revision 1.8  1997/05/01  16:35:22  jont
 * [Bug #30096]
 * Change type of precision
 *
@


1.8.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a9 4
 * Revision 1.8  1997/05/01  16:35:22  jont
 * [Bug #30096]
 * Change type of precision
 *
@


1.7
log
@[Bug #1757]
rename __pre{integer,int32} to __pre_int{,32}
@
text
@d10 4
d57 1
a57 1
    val precision : int option
@


1.7.1.1
log
@branched from 1.7
@
text
@a9 4
 * Revision 1.7  1997/01/14  17:47:15  io
 * [Bug #1757]
 * rename __pre{integer,int32} to __pre_int{,32}
 *
@


1.7.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a9 3
 * Revision 1.7.1.1  1997/05/12  10:27:45  hope
 * branched from 1.7
 *
@


1.7.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a9 3
 * Revision 1.7.1.1  1997/05/12  10:27:45  hope
 * branched from 1.7
 *
@


1.7.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a9 3
 * Revision 1.7.1.1  1997/05/12  10:27:45  hope
 * branched from 1.7
 *
@


1.7.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a9 3
 * Revision 1.7.1.1.1.1  1997/07/28  18:14:09  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.6
log
@[Bug #1614]
remove redundant requires
@
text
@d10 4
d39 2
a40 2
require "__preinteger";
require "__preint32";
@


1.6.6.1
log
@branched from 1.6
@
text
@a9 4
 * Revision 1.6  1996/10/03  15:21:42  io
 * [Bug #1614]
 * remove redundant requires
 *
@


1.6.5.1
log
@branched from 1.6
@
text
@a9 4
 * Revision 1.6  1996/10/03  15:21:42  io
 * [Bug #1614]
 * remove redundant requires
 *
@


1.6.5.1.1.1
log
@branched from 1.6.5.1
@
text
@a9 3
 * Revision 1.6.5.1  1996/12/17  17:41:43  hope
 * branched from 1.6
 *
@


1.6.4.1
log
@branched from 1.6
@
text
@a9 4
 * Revision 1.6  1996/10/03  15:21:42  io
 * [Bug #1614]
 * remove redundant requires
 *
@


1.6.3.1
log
@branched from 1.6
@
text
@a9 4
 * Revision 1.6  1996/10/03  15:21:42  io
 * [Bug #1614]
 * remove redundant requires
 *
@


1.6.3.1.1.1
log
@branched from 1.6.3.1
@
text
@a9 3
 * Revision 1.6.3.1  1996/11/14  12:42:18  hope
 * branched from 1.6
 *
@


1.6.2.1
log
@branched from 1.6
@
text
@a9 4
 * Revision 1.6  1996/10/03  15:21:42  io
 * [Bug #1614]
 * remove redundant requires
 *
@


1.6.1.1
log
@branched from 1.6
@
text
@a9 4
 * Revision 1.6  1996/10/03  15:21:42  io
 * [Bug #1614]
 * remove redundant requires
 *
@


1.5
log
@stringcvt -> string_cvt
@
text
@d10 3
a34 1
require "toplevel";
@


1.5.1.1
log
@branched from 1.5
@
text
@a9 3
 * Revision 1.5  1996/06/04  15:38:42  io
 * stringcvt -> string_cvt
 *
@


1.4
log
@Update to latest signature
@
text
@d10 3
d35 1
a35 1
require "__stringcvt";
@


1.3
log
@Adding fmt and scan
@
text
@d10 3
d45 2
a46 2
    val minint : int option
    val maxint : int option
@


1.2
log
@Updating
@
text
@d10 3
a66 1
(*
a67 1
*)
d72 1
a72 1
(*
a73 1
*)
@


1.1
log
@new unit
@
text
@d9 4
a12 1
 *  $Log$
d25 2
d31 7
d51 2
d61 1
a61 1
    val sign : int -> int
d64 11
a74 4
    (*
    val toDefault : int -> Integer.int
    val fromDefault : Integer.int -> int
    *)
a75 1
    val makestring: int -> string
a76 1
  end
@
