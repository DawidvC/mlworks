head	1.11;
access;
symbols
	MLW_daveb_inline_1_4_99:1.11.1
	MLWorks_21c0_1999_03_25:1.11
	MLWorks_20c1_1998_08_20:1.10
	MLWorks_20c0_1998_08_04:1.10
	MLWorks_20b2c2_1998_06_19:1.10
	MLWorks_20b2_Windows_1998_06_12:1.10
	MLWorks_20b1c1_1998_05_07:1.10
	MLWorks_20b0_1998_04_07:1.10
	MLWorks_20b0_1998_03_20:1.10
	MLWorks_20m2_1998_02_16:1.9
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.6.1.1.1.1.1
	MLWorks_workspace_97:1.7.2
	MLWorks_dt_wizard:1.7.1
	MLWorks_11c0_1997_09_09:1.6.1.1.1.1
	MLWorks_10r3:1.6.1.1.3
	MLWorks_10r2_551:1.6.1.1.2
	MLWorks_11:1.6.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.1.1
	MLWorks_20m0_1997_06_20:1.7
	MLWorks_1_0_r2c2_1997_06_14:1.6.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.1
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.6.1.1
	MLWorks_gui_1996_12_18:1.4.7
	MLWorks_1_0_Win32_1996_12_17:1.4.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.4.1
	MLWorks_1_0_Irix_1996_11_28:1.4.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.5
	MLWorks_1_0_Unix_1996_11_14:1.4.4
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.1
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1;
locks; strict;
comment	@ *  @;


1.11
date	99.03.20.21.55.28;	author daveb;	state Exp;
branches
	1.11.1.1;
next	1.10;

1.10
date	98.02.19.14.59.54;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	97.11.25.17.49.21;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	97.10.07.16.07.47;	author johnh;	state Exp;
branches;
next	1.7;

1.7
date	97.06.03.17.46.07;	author jont;	state Exp;
branches
	1.7.1.1
	1.7.2.1;
next	1.6;

1.6
date	97.02.26.11.16.24;	author andreww;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	97.01.15.12.06.01;	author io;	state Exp;
branches;
next	1.4;

1.4
date	96.08.09.14.05.44;	author daveb;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1;
next	1.3;

1.3
date	96.07.18.12.57.57;	author andreww;	state Exp;
branches;
next	1.2;

1.2
date	96.07.02.15.55.07;	author andreww;	state Exp;
branches;
next	1.1;

1.1
date	96.06.03.14.16.19;	author andreww;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.10.30;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.01.17;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.19.32;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.14.12.43.06;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	96.11.28.14.54.59;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.22.18.03.35;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.17.17.42.30;	author hope;	state Exp;
branches
	1.4.6.1.1.1;
next	;

1.4.6.1.1.1
date	97.02.24.11.31.03;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.18.09.36.28;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	97.05.12.10.28.42;	author hope;	state Exp;
branches
	1.6.1.1.1.1
	1.6.1.1.2.1
	1.6.1.1.3.1;
next	;

1.6.1.1.1.1
date	97.07.28.18.13.28;	author daveb;	state Exp;
branches
	1.6.1.1.1.1.1.1;
next	;

1.6.1.1.1.1.1.1
date	97.10.07.11.38.38;	author jkbrook;	state Exp;
branches;
next	;

1.6.1.1.2.1
date	97.09.08.17.06.51;	author daveb;	state Exp;
branches;
next	;

1.6.1.1.3.1
date	97.09.09.14.02.12;	author daveb;	state Exp;
branches;
next	;

1.7.1.1
date	97.09.10.19.16.37;	author brucem;	state Exp;
branches;
next	;

1.7.2.1
date	97.09.11.20.46.46;	author daveb;	state Exp;
branches;
next	;

1.11.1.1
date	99.04.01.17.52.17;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Revised basis functor.
@


1.11
log
@[Bug #20125]
Replaced substructure with type.
@
text
@(*  ==== INITIAL BASIS : textbinio functor ====
 *
 *  Copyright (C) 1996 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This is part of the extended Initial Basis.
 *
 *  $Log: _bin_io.sml,v $
 *  Revision 1.10  1998/02/19  14:59:54  jont
 *  [Bug #30341]
 *  Fix where type ... and syntax
 *
 *  Revision 1.9  1997/11/25  17:49:21  daveb
 *  [Bug #30329]
 *  Removed bogus Process argument from ImperativeIO functor.
 *
 *  Revision 1.8  1997/10/07  16:07:47  johnh
 *  [Bug #30226]
 *  Closing streams on exit.
 *
 *  Revision 1.7  1997/06/03  17:46:07  jont
 *  Make sure SysErr is handled around calls to openIn, oenOut and openAppend
 *
 *  Revision 1.6  1997/02/26  11:16:24  andreww
 *  [Bug #1759]
 *  __stream_io.sml -> __bin_stream_io.sml
 *
 *  Revision 1.5  1997/01/15  12:06:01  io
 *  [Bug #1892]
 *  rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
 *
 *  Revision 1.4  1996/08/09  14:05:44  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector no longer shares with string.
 *
 *  Revision 1.3  1996/07/18  12:57:57  andreww
 *  [Bug #1453]
 *  Updating to meet the new revised basis definition of IO (May 96)
 *
 *  Revision 1.2  1996/07/02  15:55:07  andreww
 *  Removing the definitions of standard In, Standard Out and Standard Error
 *  streams:  they're not part of the BinIO structure anyway.
 *
 *  Revision 1.1  1996/06/03  14:16:19  andreww
 *  new unit
 *  Revised basis functor.
 *
 *
 *)

require "__word8_vector";
require "__word8_array";
require "__word8";
require "__position";
require "_imperative_io";
require "__bin_stream_io";
require "os_prim_io";
require "bin_io.sml";
require "__io";
require "prim_io";
require "^.system.__os";

functor BinIO(include sig
                structure BinPrimIO: PRIM_IO
                structure OSPrimIO: OS_PRIM_IO
                sharing type OSPrimIO.bin_reader = BinPrimIO.reader
                sharing type OSPrimIO.bin_writer = BinPrimIO.writer
              end where type BinPrimIO.reader = BinStreamIO.reader
	      where type BinPrimIO.writer = BinStreamIO.writer
	      where type BinPrimIO.elem = Word8.word
	      where type BinPrimIO.array = Word8Array.array
	      where type BinPrimIO.vector = Word8Array.vector
	      where type BinPrimIO.pos = int): BIN_IO =

  struct
    structure BinIO' = ImperativeIO(structure StreamIO = BinStreamIO
                                    structure Vector = Word8Vector
                                    structure Array = Word8Array)

    val openIn =
      fn x =>
      BinIO'.mkInstream
      (BinIO'.StreamIO.mkInstream
       (OSPrimIO.openRd x, Word8Vector.fromList []))
      handle MLWorks.Internal.Error.SysErr e =>
	raise IO.Io{name=x,function="openIn",cause=OS.SysErr e}

    val openOut =
      fn x =>
      BinIO'.mkOutstream(BinIO'.StreamIO.mkOutstream(OSPrimIO.openWr x,
                                                     IO.NO_BUF))
      handle MLWorks.Internal.Error.SysErr e =>
	raise IO.Io{name=x,function="openOut",cause=OS.SysErr e}

    val openAppend =
      fn x =>
      BinIO'.mkOutstream(BinIO'.StreamIO.mkOutstream(OSPrimIO.openApp x,
                                                     IO.NO_BUF))
      handle MLWorks.Internal.Error.SysErr e =>
	raise IO.Io{name=x,function="openAppend",cause=OS.SysErr e}

    open BinIO'
    structure Position = Position

  end
@


1.11.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a9 4
 *  Revision 1.11  1999/03/20  21:55:28  daveb
 *  [Bug #20125]
 *  Replaced substructure with type.
 *
@


1.10
log
@[Bug #30341]
Fix where type ... and syntax
@
text
@d10 4
d74 1
a74 1
	      where type BinPrimIO.vector = Word8Array.Vector.vector
d86 1
a86 1
       (OSPrimIO.openRd x, Word8Array.Vector.fromList []))
@


1.9
log
@[Bug #30329]
Removed bogus Process argument from ImperativeIO functor.
@
text
@d10 4
d67 5
a71 5
                         and BinPrimIO.writer = BinStreamIO.writer
                         and BinPrimIO.elem = Word8.word
                         and BinPrimIO.array = Word8Array.array
                         and BinPrimIO.vector = Word8Array.Vector.vector
                         and BinPrimIO.pos = int): BIN_IO =
@


1.8
log
@[Bug #30226]
Closing streams on exit.
@
text
@d10 4
d72 1
a72 2
                                    structure Array = Word8Array
				    structure Process = OS.Process)
@


1.7
log
@Make sure SysErr is handled around calls to openIn, oenOut and openAppend
@
text
@d10 3
d68 2
a69 1
                                    structure Array = Word8Array)
@


1.7.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a9 3
 *  Revision 1.7  1997/06/03  17:46:07  jont
 *  Make sure SysErr is handled around calls to openIn, oenOut and openAppend
 *
@


1.7.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a9 3
 *  Revision 1.7  1997/06/03  17:46:07  jont
 *  Make sure SysErr is handled around calls to openIn, oenOut and openAppend
 *
@


1.6
log
@[Bug #1759]
__stream_io.sml -> __bin_stream_io.sml
@
text
@d10 4
d48 1
d67 2
a68 1
    fun openIn x =
d70 4
a73 2
	(BinIO'.StreamIO.mkInstream
	   (OSPrimIO.openRd x, Word8Array.Vector.fromList []))
d79 3
d86 3
a88 1
      
d91 1
a91 1
      
a92 2


@


1.6.1.1
log
@branched from 1.6
@
text
@a9 4
 *  Revision 1.6  1997/02/26  11:16:24  andreww
 *  [Bug #1759]
 *  __stream_io.sml -> __bin_stream_io.sml
 *
@


1.6.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a9 3
 *  Revision 1.6.1.1  1997/05/12  10:28:42  hope
 *  branched from 1.6
 *
@


1.6.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a9 3
 *  Revision 1.6.1.1  1997/05/12  10:28:42  hope
 *  branched from 1.6
 *
@


1.6.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a9 3
 *  Revision 1.6.1.1  1997/05/12  10:28:42  hope
 *  branched from 1.6
 *
@


1.6.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a9 3
 *  Revision 1.6.1.1.1.1  1997/07/28  18:13:28  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.5
log
@[Bug #1892]
rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
@
text
@d10 4
d39 1
a39 1
require "__stream_io";
@


1.4
log
@[Bug #1536]
[Bug #1536]
Word8Vector.vector no longer shares with string.
@
text
@d10 5
d30 2
a31 2
require "__word8vector";
require "__word8array";
@


1.4.7.1
log
@branched from 1.4
@
text
@a9 5
 *  Revision 1.4  1996/08/09  14:05:44  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector no longer shares with string.
 *
@


1.4.6.1
log
@branched from 1.4
@
text
@a9 5
 *  Revision 1.4  1996/08/09  14:05:44  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector no longer shares with string.
 *
@


1.4.6.1.1.1
log
@branched from 1.4.6.1
@
text
@a9 3
 *  Revision 1.4.6.1  1996/12/17  17:42:30  hope
 *  branched from 1.4
 *
@


1.4.5.1
log
@branched from 1.4
@
text
@a9 5
 *  Revision 1.4  1996/08/09  14:05:44  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector no longer shares with string.
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a9 5
 *  Revision 1.4  1996/08/09  14:05:44  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector no longer shares with string.
 *
@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@a9 3
 *  Revision 1.4.4.1  1996/11/14  12:43:06  hope
 *  branched from 1.4
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a9 5
 *  Revision 1.4  1996/08/09  14:05:44  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector no longer shares with string.
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a9 5
 *  Revision 1.4  1996/08/09  14:05:44  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector no longer shares with string.
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a9 5
 *  Revision 1.4  1996/08/09  14:05:44  daveb
 *  [Bug #1536]
 *  [Bug #1536]
 *  Word8Vector.vector no longer shares with string.
 *
@


1.3
log
@[Bug #1453]
Updating to meet the new revised basis definition of IO (May 96)
@
text
@d10 4
a24 1
require "toplevel";
a27 3
require "__chararray";
require "__charvector";
require "__char";
d29 1
a30 1
require "_imperative_io";
d53 4
a56 3
    val openIn =
      fn x =>
      BinIO'.mkInstream(BinIO'.StreamIO.mkInstream(OSPrimIO.openRd x, ""))
@


1.2
log
@Removing the definitions of standard In, Standard Out and Standard Error
streams:  they're not part of the BinIO structure anyway.
@
text
@d10 4
d31 1
a31 1
require "osprimio";
@


1.1
log
@new unit
Revised basis functor.
@
text
@d9 5
a13 1
 *  $Log:$
a61 8
    val stdIn =
      BinIO'.mkInstream(BinIO'.StreamIO.mkInstream(OSPrimIO.stdIn, ""))
    val stdOut =
      BinIO'.mkOutstream(BinIO'.StreamIO.mkOutstream(OSPrimIO.stdOut,
                                                     IO.NO_BUF))
    val stdErr =
      BinIO'.mkOutstream(BinIO'.StreamIO.mkOutstream(OSPrimIO.stdErr,
                                                     IO.NO_BUF))
@
