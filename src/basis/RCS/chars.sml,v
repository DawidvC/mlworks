head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	96.05.14.14.12.01;	author io;	state Exp;
branches;
next	1.2;

1.2
date	96.05.07.21.05.52;	author io;	state Exp;
branches;
next	1.1;

1.1
date	96.04.18.11.41.00;	author jont;	state Exp;
branches;
next	;


desc
@new unit
@


1.3
log
@remove exception Chr
@
text
@(*  ==== INITIAL BASIS : CHARACTERS ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This is part of the extended Initial Basis.
 *
 *  Revision Log
 *  ------------
 *  $Log: chars.sml,v $
 * Revision 1.2  1996/05/07  21:05:52  io
 * revising...
 *
 * Revision 1.1  1996/04/18  11:41:00  jont
 * new unit
 *
 *  Revision 1.1  1995/03/08  16:22:37  brianm
 *  new unit
 *  No reason given
 *
 *
 *)
require "toplevel";
require "__stringcvt";
signature CHAR =
  sig

    eqtype char
    eqtype string

    val maxOrd : int
    val minChar : char
    val maxChar : char

    val chr : int -> char (* raise Chr *)
    val ord : char -> int

    val succ : char -> char (* raise Chr *)
    val pred : char -> char (* raise Chr *)

    val <  : (char * char) -> bool
    val <= : (char * char) -> bool
    val >  : (char * char) -> bool
    val >= : (char * char) -> bool

    val compare : (char * char) -> order
    val contains : string -> char -> bool
    val notContains : string -> char -> bool
    val isLower : char -> bool
    val isUpper : char -> bool
    val isDigit : char -> bool
    val isDigit2 : char -> bool
    val isAlpha : char -> bool
    val isAlphaNum : char -> bool
    val isAscii : char -> bool
    val isSpace : char -> bool
    val toLower : char -> char
    val toUpper : char -> char
    val isCntrl : char -> bool
    val isGraph : char -> bool
    val isHexDigit : char -> bool
    val isPrint: char -> bool

    val isPunct : char -> bool
    val fromString : string -> char option
    val toString : char -> string
    val scan : (char, 'a) StringCvt.reader -> 'a -> (char * 'a) option

(*
    val fromCString : string -> char option
    val toCString : char -> string option
*)

  end; (* CHAR *)
@


1.2
log
@revising...
@
text
@d12 3
a31 1
    exception Chr
@


1.1
log
@new unit
@
text
@d11 4
a14 1
 *  $Log$
d21 2
a22 1

d27 1
d30 3
d34 1
a34 1
    val chr : int -> char
d37 2
a38 1
    val maxCharOrd : int
d44 28
@
