head	1.15;
access;
symbols
	MLW_daveb_inline_1_4_99:1.15.1
	MLWorks_21c0_1999_03_25:1.15
	MLWorks_20c1_1998_08_20:1.14
	MLWorks_20c0_1998_08_04:1.14
	MLWorks_20b2c2_1998_06_19:1.14
	MLWorks_20b2_Windows_1998_06_12:1.14
	MLWorks_20b1c1_1998_05_07:1.14
	MLWorks_20b0_1998_04_07:1.14
	MLWorks_20b0_1998_03_20:1.14
	MLWorks_20m2_1998_02_16:1.13
	MLWorks_20m1_1997_10_23:1.12
	MLWorks_11r1:1.11.1.1.1.1.1
	MLWorks_workspace_97:1.11.3
	MLWorks_dt_wizard:1.11.2
	MLWorks_11c0_1997_09_09:1.11.1.1.1.1
	MLWorks_10r3:1.11.1.1.3
	MLWorks_10r2_551:1.11.1.1.2
	MLWorks_11:1.11.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.11.1.1
	MLWorks_20m0_1997_06_20:1.11
	MLWorks_1_0_r2c2_1997_06_14:1.11.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.11.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.11.1
	MLWorks_BugFix_1997_04_24:1.11
	MLWorks_1_0_r2_Win32_1997_04_11:1.11
	MLWorks_1_0_r2_Unix_1997_04_04:1.11
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.9.3.1.1
	MLWorks_gui_1996_12_18:1.9.4
	MLWorks_1_0_Win32_1996_12_17:1.9.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.9.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.9.1.1
	MLWorks_1_0_Irix_1996_11_28:1.9.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.9.2
	MLWorks_1_0_Unix_1996_11_14:1.9.1
	MLWorks_Open_Beta2_1996_10_11:1.8.2
	MLWorks_License_dev:1.8.1
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.5
	MLWorks_Beta_1996_07_02:1.1
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1;
locks; strict;
comment	@ *  @;


1.15
date	99.02.02.15.58.40;	author mitchell;	state Exp;
branches
	1.15.1.1;
next	1.14;

1.14
date	98.02.19.14.37.44;	author jont;	state Exp;
branches;
next	1.13;

1.13
date	97.11.25.17.49.12;	author daveb;	state Exp;
branches;
next	1.12;

1.12
date	97.10.07.16.05.37;	author johnh;	state Exp;
branches;
next	1.11;

1.11
date	97.02.26.15.26.53;	author andreww;	state Exp;
branches
	1.11.1.1
	1.11.2.1
	1.11.3.1;
next	1.10;

1.10
date	96.11.16.01.57.51;	author io;	state Exp;
branches;
next	1.9;

1.9
date	96.11.08.14.19.23;	author matthew;	state Exp;
branches
	1.9.1.1
	1.9.2.1
	1.9.3.1
	1.9.4.1;
next	1.8;

1.8
date	96.10.07.10.37.30;	author andreww;	state Exp;
branches
	1.8.1.1
	1.8.2.1;
next	1.7;

1.7
date	96.10.03.15.25.27;	author io;	state Exp;
branches;
next	1.6;

1.6
date	96.08.21.11.43.46;	author stephenb;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	96.07.31.16.22.46;	author andreww;	state Exp;
branches;
next	1.4;

1.4
date	96.07.18.13.17.03;	author andreww;	state Exp;
branches;
next	1.3;

1.3
date	96.07.15.13.41.10;	author andreww;	state Exp;
branches;
next	1.2;

1.2
date	96.07.02.15.48.08;	author andreww;	state Exp;
branches;
next	1.1;

1.1
date	96.06.03.14.08.42;	author andreww;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.10.11;	author hope;	state Exp;
branches;
next	;

1.8.1.1
date	96.10.07.16.01.02;	author hope;	state Exp;
branches;
next	;

1.8.2.1
date	96.10.17.11.19.17;	author hope;	state Exp;
branches;
next	;

1.9.1.1
date	96.11.14.12.42.49;	author hope;	state Exp;
branches
	1.9.1.1.1.1;
next	;

1.9.1.1.1.1
date	96.11.28.14.54.42;	author hope;	state Exp;
branches;
next	;

1.9.2.1
date	96.11.22.18.03.18;	author hope;	state Exp;
branches;
next	;

1.9.3.1
date	96.12.17.17.42.13;	author hope;	state Exp;
branches
	1.9.3.1.1.1;
next	;

1.9.3.1.1.1
date	97.02.24.11.30.39;	author hope;	state Exp;
branches;
next	;

1.9.4.1
date	96.12.18.09.36.11;	author hope;	state Exp;
branches;
next	;

1.11.1.1
date	97.05.12.10.28.23;	author hope;	state Exp;
branches
	1.11.1.1.1.1
	1.11.1.1.2.1
	1.11.1.1.3.1;
next	;

1.11.1.1.1.1
date	97.07.28.18.13.36;	author daveb;	state Exp;
branches
	1.11.1.1.1.1.1.1;
next	;

1.11.1.1.1.1.1.1
date	97.10.07.11.38.46;	author jkbrook;	state Exp;
branches;
next	;

1.11.1.1.2.1
date	97.09.08.17.07.01;	author daveb;	state Exp;
branches;
next	;

1.11.1.1.3.1
date	97.09.09.14.02.19;	author daveb;	state Exp;
branches;
next	;

1.11.2.1
date	97.09.10.19.16.46;	author brucem;	state Exp;
branches;
next	;

1.11.3.1
date	97.09.11.20.47.02;	author daveb;	state Exp;
branches;
next	;

1.15.1.1
date	99.04.01.17.52.20;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Revised basis functor.
@


1.15
log
@[Bug #190500]
Remove redundant require statements
@
text
@(*  ==== INITIAL BASIS : TextIO functor ====
 *
 *  Copyright (C) 1996 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This is part of the extended Initial Basis.
 *
 *  $Log: _text_io.sml,v $
 *  Revision 1.14  1998/02/19  14:37:44  jont
 *  [Bug #30341]
 *  Fix where type ... and syntax
 *
 *  Revision 1.13  1997/11/25  17:49:12  daveb
 *  [Bug #30329]
 *  Removed bogus Process argument from ImperativeIO functor.
 *
 *  Revision 1.12  1997/10/07  16:05:37  johnh
 *  [Bug #30226]
 *  Closing streams on exit.
 *
 *  Revision 1.11  1997/02/26  15:26:53  andreww
 *  [Bug #1759]
 *  new TEXT_STREAM_IO sig.
 *
 *  Revision 1.10  1996/11/16  01:57:51  io
 *  [Bug #1757]
 *  renamed __ieeereal to __ieee_real
 *
 *  Revision 1.9  1996/11/08  14:19:23  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
 *  Revision 1.8  1996/10/07  10:37:30  andreww
 *  [Bug #1631]
 *  Altering inputLine to insert a newline after the last line of a file if it
 *  does not already contain one.
 *
 *  Revision 1.7  1996/10/03  15:25:27  io
 *  [Bug #1614]
 *  remove redundant requires
 *
 *  Revision 1.6  1996/08/21  11:43:46  stephenb
 *  [Bug #1554]
 *  As part of the iodesc change MLWorks.Internal.SysErr has changed
 *  to MLWorks.Internal.Error.SysErr
 *
 *  Revision 1.5  1996/07/31  16:22:46  andreww
 *  [Bug #1523]
 *  Wrapping openIn, openOut and openApp with handlers to translate
 *  SysErr exceptions to Io exceptions.
 *
 *  Revision 1.3  1996/07/15  13:41:10  andreww
 *  modifying the standard io redirection stuff.
 *  Removing guiIO and terminalIO.
 *
 *  Revision 1.2  1996/07/02  15:48:08  andreww
 *  Altering treatment of standard IO streams, to allow redirection
 *  when converting from a GUI running program to a terminal standalone image.
 *
 *  Revision 1.1  1996/06/03  14:08:42  andreww
 *  new unit
 *  Revised basis functor.
 *
 *
 *)

require "__char_array";
require "__char_vector";
require "__char";
require "__position";
require "__io";
require "_imperative_io";
require "os_prim_io";
require "text_io";
require "__text_stream_io";
require "prim_io";
require "__substring";
require "^.system.__os";

functor TextIO(include sig
                structure TextPrimIO: PRIM_IO
                structure OSPrimIO: OS_PRIM_IO
                sharing type OSPrimIO.text_reader = TextPrimIO.reader
                sharing type OSPrimIO.text_writer = TextPrimIO.writer
              end where type OSPrimIO.text_reader = TextStreamIO.reader
	       where type OSPrimIO.text_writer = TextStreamIO.writer
	       where type TextPrimIO.elem = Char.char
	       where type TextPrimIO.array = CharArray.array
	       where type TextPrimIO.vector = CharVector.vector): TEXT_IO =

  struct
     structure TextIO' =
       ImperativeIO(structure StreamIO = TextStreamIO
                    structure Vector = CharVector
                    structure Array = CharArray)
       
     val translateIn = OSPrimIO.translateIn
     val translateOut = OSPrimIO.translateOut

     val openIn =
       fn x => TextIO'.mkInstream
       (TextIO'.StreamIO.mkInstream
        (translateIn(OSPrimIO.openRd x), ""))
       handle MLWorks.Internal.Error.SysErr e =>
         raise IO.Io{name=x,function="openIn",cause=OS.SysErr e}

     val openOut =
       fn x => TextIO'.mkOutstream
       (TextIO'.StreamIO.mkOutstream
        (translateOut(OSPrimIO.openWr x), IO.NO_BUF))
       handle MLWorks.Internal.Error.SysErr e =>
         raise IO.Io{name=x,function="openOut",cause=OS.SysErr e}

     val openAppend =
       fn x => TextIO'.mkOutstream
       (TextIO'.StreamIO.mkOutstream
        (translateOut(OSPrimIO.openApp x), IO.NO_BUF))
       handle MLWorks.Internal.Error.SysErr e =>
         raise IO.Io{name=x,function="openAppend",cause=OS.SysErr e}
       

     fun openString s = 
         TextIO'.mkInstream
           (TextIO'.StreamIO.mkInstream
             (OSPrimIO.openString s,""))

     
     fun inputLine (f: TextIO'.instream) =
       let
         val g0 = TextIO'.getInstream f
         val (s,gn) = TextStreamIO.inputLine g0
         val _ = TextIO'.setInstream(f,gn)
       in
         s
       end
         

     fun outputSubstr(f:TextIO'.outstream, ss:Substring.substring) =
       TextIO'.output(f,Substring.string ss)


     val stdIn = 
       TextIO'.mkInstream(TextIO'.StreamIO.mkInstream
                          (translateIn OSPrimIO.stdIn,""))
     val stdOut =
       TextIO'.mkOutstream(TextIO'.StreamIO.mkOutstream
                           (translateOut OSPrimIO.stdOut, IO.NO_BUF))

     val stdErr =
       TextIO'.mkOutstream(TextIO'.StreamIO.mkOutstream
                           (translateOut OSPrimIO.stdErr, IO.NO_BUF))
       

     fun print s = (TextIO'.output(stdOut, s); TextIO'.flushOut stdOut)

     fun scanStream scanFn stream =
       let
         val instream=TextIO'.getInstream stream
       in
         case (scanFn TextIO'.StreamIO.input1 instream)
           of NONE => NONE
            | (SOME (v,instream')) => 
                (TextIO'.setInstream (stream,instream');
                 SOME v)
       end
                                     

     open TextIO'
     structure StreamIO = TextStreamIO
     structure Position = Position


  end






@


1.15.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a9 4
 *  Revision 1.15  1999/02/02  15:58:40  mitchell
 *  [Bug #190500]
 *  Remove redundant require statements
 *
@


1.14
log
@[Bug #30341]
Fix where type ... and syntax
@
text
@d10 4
a72 1
require "stream_io";
a75 1
require "__text_prim_io";
@


1.13
log
@[Bug #30329]
Removed bogus Process argument from ImperativeIO functor.
@
text
@d10 4
d51 1
a51 1
 *  (Removing guiIO and terminalIO.
d85 4
a88 4
                         and OSPrimIO.text_writer = TextStreamIO.writer
                         and TextPrimIO.elem = Char.char
                         and TextPrimIO.array = CharArray.array
                         and TextPrimIO.vector = CharVector.vector): TEXT_IO =
@


1.12
log
@[Bug #30226]
Closing streams on exit.
@
text
@d10 4
d90 1
a90 3
                    structure Array = CharArray
		    structure Process = OS.Process)

@


1.11
log
@[Bug #1759]
new TEXT_STREAM_IO sig.
@
text
@d10 4
d86 2
a87 1
                    structure Array = CharArray)
@


1.11.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a9 4
 *  Revision 1.11  1997/02/26  15:26:53  andreww
 *  [Bug #1759]
 *  new TEXT_STREAM_IO sig.
 *
@


1.11.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a9 4
 *  Revision 1.11  1997/02/26  15:26:53  andreww
 *  [Bug #1759]
 *  new TEXT_STREAM_IO sig.
 *
@


1.11.1.1
log
@branched from 1.11
@
text
@a9 4
 *  Revision 1.11  1997/02/26  15:26:53  andreww
 *  [Bug #1759]
 *  new TEXT_STREAM_IO sig.
 *
@


1.11.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a9 3
 *  Revision 1.11.1.1  1997/05/12  10:28:23  hope
 *  branched from 1.11
 *
@


1.11.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a9 3
 *  Revision 1.11.1.1  1997/05/12  10:28:23  hope
 *  branched from 1.11
 *
@


1.11.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a9 3
 *  Revision 1.11.1.1  1997/05/12  10:28:23  hope
 *  branched from 1.11
 *
@


1.11.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a9 3
 *  Revision 1.11.1.1.1.1  1997/07/28  18:13:36  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.10
log
@[Bug #1757]
renamed __ieeereal to __ieee_real
@
text
@d1 1
a1 1
(*  ==== INITIAL BASIS : textbinio functor ====
d10 4
d57 1
a57 1
require "__stream_io";
d62 1
d79 4
a82 3
     structure TextIO' = ImperativeIO(structure StreamIO = TextStreamIO
                                      structure Vector = CharVector
                                      structure Array = CharArray)
a115 1

a117 12
           (* the following function returns a triple:
               (l,b,g), where l is a list of characters
                              b is value of proposition "last char is newline"
                              g is the input stream at the end
            *)

         fun loop(i,g) = case TextIO'.StreamIO.input1 g of
            SOME(c, g') =>
              if c = Char.chr 10 then ([c],true,g') 
              else let val (l,b,g'')= loop(i+1,g') in (c::l,b,g'') end
          | NONE => ([],false,g)

d119 1
a119 1
         val (l,lastCharNewline,gn) = loop(0,g0)
d122 1
a122 3
         if l<>[] andalso (not lastCharNewline)
           then implode (l@@[#"\n"])
         else implode l
a129 1

d157 1
d159 1
@


1.9
log
@[Bug #1661]
Changing io_desc to iodesc
@
text
@d10 4
d48 2
a49 2
require "__chararray";
require "__charvector";
@


1.9.4.1
log
@branched from 1.9
@
text
@a9 4
 *  Revision 1.9  1996/11/08  14:19:23  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
@


1.9.3.1
log
@branched from 1.9
@
text
@a9 4
 *  Revision 1.9  1996/11/08  14:19:23  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
@


1.9.3.1.1.1
log
@branched from 1.9.3.1
@
text
@a9 3
 *  Revision 1.9.3.1  1996/12/17  17:42:13  hope
 *  branched from 1.9
 *
@


1.9.2.1
log
@branched from 1.9
@
text
@a9 4
 *  Revision 1.9  1996/11/08  14:19:23  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
@


1.9.1.1
log
@branched from 1.9
@
text
@a9 4
 *  Revision 1.9  1996/11/08  14:19:23  matthew
 *  [Bug #1661]
 *  Changing io_desc to iodesc
 *
@


1.9.1.1.1.1
log
@branched from 1.9.1.1
@
text
@a9 3
 *  Revision 1.9.1.1  1996/11/14  12:42:49  hope
 *  branched from 1.9
 *
@


1.8
log
@[Bug #1631]
Altering inputLine to insert a newline after the last line of a file if it
does not already contain one.
@
text
@d10 5
d21 1
a21 1
 *  As part of the io_desc change MLWorks.Internal.SysErr has changed
@


1.8.2.1
log
@branched from 1.8
@
text
@a9 5
 *  Revision 1.8  1996/10/07  10:37:30  andreww
 *  [Bug #1631]
 *  Altering inputLine to insert a newline after the last line of a file if it
 *  does not already contain one.
 *
@


1.8.1.1
log
@branched from 1.8
@
text
@a9 5
 *  Revision 1.8  1996/10/07  10:37:30  andreww
 *  [Bug #1631]
 *  Altering inputLine to insert a newline after the last line of a file if it
 *  does not already contain one.
 *
@


1.7
log
@[Bug #1614]
remove redundant requires
@
text
@d10 4
d104 12
d117 2
a118 3
         fun loop(i,g) = case TextIO'.StreamIO.input1 g of
           SOME(c, g') => if c = Char.chr 10 then i+1 else loop(i+1,g')
         | NONE => i
d120 3
a122 1
         TextIO'.inputN(f, loop(0,g0))
d124 1
a124 1
     
@


1.6
log
@[Bug #1554]
As part of the io_desc change MLWorks.Internal.SysErr has changed
to MLWorks.Internal.Error.SysErr
@
text
@d10 5
a34 4
require "toplevel";
require "__word8vector";
require "__word8array";
require "__word8";
d39 1
a44 1
require "__io";
@


1.6.1.1
log
@branched from 1.6
@
text
@a9 5
 *  Revision 1.6  1996/08/21  11:43:46  stephenb
 *  [Bug #1554]
 *  As part of the io_desc change MLWorks.Internal.SysErr has changed
 *  to MLWorks.Internal.Error.SysErr
 *
@


1.5
log
@[Bug #1523]
Wrapping openIn, openOut and openApp with handlers to translate
SysErr exceptions to Io exceptions.
@
text
@d10 5
d72 1
a72 1
       handle MLWorks.Internal.SysErr e =>
d79 1
a79 1
       handle MLWorks.Internal.SysErr e =>
d86 1
a86 1
       handle MLWorks.Internal.SysErr e =>
@


1.4
log
@[Bug #1453]
Updating to meet the new revised basis definition of IO (May 96)
@
text
@d41 1
d67 3
d74 3
d81 2
@


1.3
log
@modifying the standard io redirection stuff.
(Removing guiIO and terminalIO.
@
text
@d10 4
d35 1
a35 1
require "osprimio";
d76 7
d112 12
@


1.2
log
@Altering treatment of standard IO streams, to allow redirection
when converting from a GUI running program to a terminal standalone image.
@
text
@d10 4
d90 1
a90 4
                          (translateIn
                           (if MLWorks.Internal.GuiStandardIO.guiIsActive()
                              then OSPrimIO.guiIn
                              else OSPrimIO.terminalIn), ""))
d93 2
a94 4
                           (translateOut 
                             (if MLWorks.Internal.GuiStandardIO.guiIsActive()
                                then OSPrimIO.guiOut
                              else OSPrimIO.terminalOut), IO.NO_BUF))
d97 1
a97 4
                           (translateOut 
                            (if MLWorks.Internal.GuiStandardIO.guiIsActive()
                               then OSPrimIO.guiErr
                             else OSPrimIO.terminalErr), IO.NO_BUF))
a100 28

  (* now we provide a function which, when wrapped around another *)
  (* will reset stdIn, stdOut and stdErr to the terminal for the  *)
  (* duration of the wrapped fun.  This is for delivery, when the *)
  (* I/O functions are directed to the terminal.                  *)


    fun resetIOfor (f: unit-> unit) =
      let 
        val tempIn = TextIO'.getInstream stdIn
        val tempOut = TextIO'.getOutstream stdOut
        val tempErr = TextIO'.getOutstream stdErr
      in
        (TextIO'.setInstream (stdIn,TextIO'.StreamIO.mkInstream
                        (translateIn OSPrimIO.terminalIn,""));
         TextIO'.setOutstream (stdOut,TextIO'.StreamIO.mkOutstream
                        (translateOut OSPrimIO.terminalOut,IO.NO_BUF));
         TextIO'.setOutstream (stdErr,TextIO'.StreamIO.mkOutstream
                        (translateOut OSPrimIO.terminalErr,IO.NO_BUF));
         f();
         TextIO'.setInstream (stdIn,tempIn);
         TextIO'.setOutstream (stdOut,tempOut);
         TextIO'.setOutstream (stdErr,tempErr))
      end


     val _ = MLWorks.Internal.GuiStandardIO.forDelivery resetIOfor

@


1.1
log
@new unit
Revised basis functor.
@
text
@d9 5
a13 1
 *  $Log:$
a66 10
     val stdIn =
       TextIO'.mkInstream(TextIO'.StreamIO.mkInstream
                          (translateIn OSPrimIO.stdIn, ""))
     val stdOut =
       TextIO'.mkOutstream(TextIO'.StreamIO.mkOutstream
                           (translateOut OSPrimIO.stdOut, IO.NO_BUF))
     val stdErr =
       TextIO'.mkOutstream(TextIO'.StreamIO.mkOutstream
                           (translateOut OSPrimIO.stdErr, IO.NO_BUF))
       
d83 21
d106 27
d138 6
@
