head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.4
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.1.1.1.1.1
	MLWorks_workspace_97:1.4.3
	MLWorks_dt_wizard:1.4.2
	MLWorks_11c0_1997_09_09:1.4.1.1.1.1
	MLWorks_10r3:1.4.1.1.3
	MLWorks_10r2_551:1.4.1.1.2
	MLWorks_11:1.4.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.1.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.1
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.5.1.1
	MLWorks_gui_1996_12_18:1.3.6
	MLWorks_1_0_Win32_1996_12_17:1.3.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.3.1
	MLWorks_1_0_Irix_1996_11_28:1.3.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.4
	MLWorks_1_0_Unix_1996_11_14:1.3.3
	MLWorks_Open_Beta2_1996_10_11:1.3.2
	MLWorks_License_dev:1.3.1
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1
	MLWorks_Beta_1996_07_02:1.1
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1;
locks; strict;
comment	@ *  @;


1.4
date	97.03.06.17.50.04;	author jont;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1;
next	1.3;

1.3
date	96.10.02.17.15.27;	author io;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1;
next	1.2;

1.2
date	96.09.18.14.08.11;	author io;	state Exp;
branches;
next	1.1;

1.1
date	96.06.05.00.32.57;	author io;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.13.11.09.43;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	96.10.07.16.00.37;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.17.11.18.51;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.11.14.12.42.24;	author hope;	state Exp;
branches
	1.3.3.1.1.1;
next	;

1.3.3.1.1.1
date	96.11.28.14.54.18;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.22.18.02.55;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.12.17.17.41.49;	author hope;	state Exp;
branches
	1.3.5.1.1.1;
next	;

1.3.5.1.1.1
date	97.02.24.11.30.09;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.18.09.35.46;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	97.05.12.10.27.49;	author hope;	state Exp;
branches
	1.4.1.1.1.1
	1.4.1.1.2.1
	1.4.1.1.3.1;
next	;

1.4.1.1.1.1
date	97.07.28.18.14.18;	author daveb;	state Exp;
branches
	1.4.1.1.1.1.1.1;
next	;

1.4.1.1.1.1.1.1
date	97.10.07.11.39.23;	author jkbrook;	state Exp;
branches;
next	;

1.4.1.1.2.1
date	97.09.08.17.07.45;	author daveb;	state Exp;
branches;
next	;

1.4.1.1.3.1
date	97.09.09.14.02.56;	author daveb;	state Exp;
branches;
next	;

1.4.2.1
date	97.09.10.19.17.24;	author brucem;	state Exp;
branches;
next	;

1.4.3.1
date	97.09.11.20.48.06;	author daveb;	state Exp;
branches;
next	;

1.4.4.1
date	99.04.01.17.52.00;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.4
log
@[Bug #1938]
Remove uses of global usafe stuff from __pre_basis
@
text
@(*  ==== INITIAL BASIS : PreBasis structure ====
 *
 *  Copyright (C) 1996 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  For miscellaneous use
 *
 *  $Log: __pre_basis.sml,v $
 *  Revision 1.3  1996/10/02  17:15:27  io
 *  [Bug #1628]
 *  pull is{Oct,Hex}Digit from Char to here
 *
 *  Revision 1.2  1996/09/18  14:08:11  io
 *  [Bug #1490]
 *  update maxSize
 *
 *  Revision 1.1  1996/06/05  00:32:57  io
 *  new unit
 *
 *)
structure PreBasis = 
  struct
    val maxSize = MLWorks.String.maxLen
    (* <URI:rts/src/values.h#ML_MAX_STRING>
     * <URI:pervasive/__pervasive_library.sml#maxLen>
     *)
    local
      fun unsafe_alloc_string (n:int) : string = 
	let val alloc_s = MLWorks.Internal.Value.alloc_string n
	in
	  MLWorks.Internal.Value.unsafe_string_update(alloc_s, n-1, 0);
	  alloc_s
	end
    in
      fun alloc_string (n:int) : string =
	if n > maxSize then
	  raise Size 
	else
        unsafe_alloc_string n
    end

    local
      fun rev_map f =
	let
	  fun aux(acc, []) = acc
	    | aux(acc, x :: xs) = aux(f x :: acc, xs)
	in
	  aux
	end
    in
      fun revImplode ([]:char list) : string = ""
	| revImplode cs = MLWorks.String.implode_char (rev_map ord ([], cs))
    end

    fun isSpace c = c = #" " orelse
      c >= #"\009" andalso c <= #"\013"
    (* space, newline, tab, cr, vt, ff *)      
    fun isOctDigit c = #"0" <= c andalso c <= #"7"
    fun isDigit c = #"0" <= c andalso c <= #"9"
    fun isHexDigit c = isDigit c orelse
      (#"a" <= c andalso c <= #"f") orelse
      (#"A" <= c andalso c <= #"F")
      
  end (* PreBasis *)
@


1.4.4.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a9 4
 *  Revision 1.4  1997/03/06  17:50:04  jont
 *  [Bug #1938]
 *  Remove uses of global usafe stuff from __pre_basis
 *
@


1.4.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a9 4
 *  Revision 1.4  1997/03/06  17:50:04  jont
 *  [Bug #1938]
 *  Remove uses of global usafe stuff from __pre_basis
 *
@


1.4.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a9 4
 *  Revision 1.4  1997/03/06  17:50:04  jont
 *  [Bug #1938]
 *  Remove uses of global usafe stuff from __pre_basis
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1997/03/06  17:50:04  jont
 *  [Bug #1938]
 *  Remove uses of global usafe stuff from __pre_basis
 *
@


1.4.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a9 3
 *  Revision 1.4.1.1  1997/05/12  10:27:49  hope
 *  branched from 1.4
 *
@


1.4.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a9 3
 *  Revision 1.4.1.1  1997/05/12  10:27:49  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a9 3
 *  Revision 1.4.1.1  1997/05/12  10:27:49  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a9 3
 *  Revision 1.4.1.1.1.1  1997/07/28  18:14:18  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3
log
@[Bug #1628]
pull is{Oct,Hex}Digit from Char to here
@
text
@d10 4
a23 11
    val cast = MLWorks.Internal.Value.cast
    val ctoi : char -> int = MLWorks.Internal.Value.cast
    val itoc : int -> char = MLWorks.Internal.Value.cast (* does not generate Chr exn *)
    val env = MLWorks.Internal.Runtime.environment
    val internal_implode_char : int list * int -> string = MLWorks.Internal.Runtime.environment "string c implode char"
    val unsafe_string_sub : (string * int) -> int = MLWorks.Internal.Value.unsafe_string_sub
    val unsafe_string_char_sub : (string * int) -> char = itoc o MLWorks.Internal.Value.unsafe_string_sub 
    val unsafe_string_update : (string * int * int) -> unit = MLWorks.Internal.Value.unsafe_string_update
    val unsafe_string_char_update : (string * int * char) -> unit = fn (x,y,z)=>MLWorks.Internal.Value.unsafe_string_update (x,y,ctoi z)
    val unsafe_substring : (string * int * int) -> string = MLWorks.Internal.Runtime.environment "string unsafe substring"
    val internal_string_concat : string list -> string = MLWorks.Internal.Runtime.environment "string implode"
d28 27
a55 15
    fun unsafe_alloc_string (n:int) : string = 
      let val alloc_s = MLWorks.Internal.Value.alloc_string n
      in
        unsafe_string_char_update (alloc_s, n-1, #"\000");
        alloc_s
      end
    fun alloc_string (n:int) : string =
      if n > maxSize then
        raise Size 
      else
        unsafe_alloc_string n
        
    fun revImplode ([]:char list) : string = ""
      | revImplode cs = MLWorks.String.implode_char (rev (cast cs))
      
a64 1
      
a65 1
open PreBasis
@


1.3.6.1
log
@branched from 1.3
@
text
@a9 4
 *  Revision 1.3  1996/10/02  17:15:27  io
 *  [Bug #1628]
 *  pull is{Oct,Hex}Digit from Char to here
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a9 4
 *  Revision 1.3  1996/10/02  17:15:27  io
 *  [Bug #1628]
 *  pull is{Oct,Hex}Digit from Char to here
 *
@


1.3.5.1.1.1
log
@branched from 1.3.5.1
@
text
@a9 3
 *  Revision 1.3.5.1  1996/12/17  17:41:49  hope
 *  branched from 1.3
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a9 4
 *  Revision 1.3  1996/10/02  17:15:27  io
 *  [Bug #1628]
 *  pull is{Oct,Hex}Digit from Char to here
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a9 4
 *  Revision 1.3  1996/10/02  17:15:27  io
 *  [Bug #1628]
 *  pull is{Oct,Hex}Digit from Char to here
 *
@


1.3.3.1.1.1
log
@branched from 1.3.3.1
@
text
@a9 3
 *  Revision 1.3.3.1  1996/11/14  12:42:24  hope
 *  branched from 1.3
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a9 4
 *  Revision 1.3  1996/10/02  17:15:27  io
 *  [Bug #1628]
 *  pull is{Oct,Hex}Digit from Char to here
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a9 4
 *  Revision 1.3  1996/10/02  17:15:27  io
 *  [Bug #1628]
 *  pull is{Oct,Hex}Digit from Char to here
 *
@


1.2
log
@[Bug #1490]
update maxSize
@
text
@d10 4
d54 7
@


1.1
log
@new unit
@
text
@d9 4
a12 1
 *  $Log$
d27 3
a29 3
    val maxSize = 8388606 (* 2 ^ 23 - 1 - 1 *)
    (* 2 ^ 24 -1-1 so as not to include null character 
     * change this value in synch with ML_MAX_STRING in rts/src/values.h
@


1.1.1.1
log
@branched from 1.1
@
text
@d9 1
a9 4
 *  $Log: __pre_basis.sml,v $
 *  Revision 1.1  1996/06/05  00:32:57  io
 *  new unit
 *
@
