head	1.8;
access;
symbols
	MLW_daveb_inline_1_4_99:1.8.1
	MLWorks_21c0_1999_03_25:1.8
	MLWorks_20c1_1998_08_20:1.7
	MLWorks_20c0_1998_08_04:1.7
	MLWorks_20b2c2_1998_06_19:1.7
	MLWorks_20b2_Windows_1998_06_12:1.7
	MLWorks_20b1c1_1998_05_07:1.7
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.6
	MLWorks_20m1_1997_10_23:1.6
	MLWorks_11r1:1.6.1.1.1.1.1
	MLWorks_workspace_97:1.6.3
	MLWorks_dt_wizard:1.6.2
	MLWorks_11c0_1997_09_09:1.6.1.1.1.1
	MLWorks_10r3:1.6.1.1.3
	MLWorks_10r2_551:1.6.1.1.2
	MLWorks_11:1.6.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.1.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.6.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.1
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.6.1.1
	MLWorks_gui_1996_12_18:1.4.7
	MLWorks_1_0_Win32_1996_12_17:1.4.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.4.1
	MLWorks_1_0_Irix_1996_11_28:1.4.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.5
	MLWorks_1_0_Unix_1996_11_14:1.4.4
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.1
	MLWorks_Beta_1996_05_31:1.1
	MLWorks_Beta_1996_05_30:1.1;
locks; strict;
comment	@ *  @;


1.8
date	99.02.02.15.58.48;	author mitchell;	state Exp;
branches
	1.8.1.1;
next	1.7;

1.7
date	98.02.19.14.32.48;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	97.02.26.11.10.50;	author andreww;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1;
next	1.5;

1.5
date	96.11.15.17.56.49;	author io;	state Exp;
branches;
next	1.4;

1.4
date	96.07.17.17.25.40;	author andreww;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1;
next	1.3;

1.3
date	96.06.04.09.49.38;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	96.06.03.13.07.52;	author andreww;	state Exp;
branches;
next	1.1;

1.1
date	96.05.20.14.47.55;	author jont;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.10.45;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.01.32;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.19.47;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.14.12.43.21;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	96.11.28.14.55.13;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.22.18.03.48;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.17.17.42.44;	author hope;	state Exp;
branches
	1.4.6.1.1.1;
next	;

1.4.6.1.1.1
date	97.02.24.11.31.19;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.18.09.36.43;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	97.05.12.10.28.52;	author hope;	state Exp;
branches
	1.6.1.1.1.1
	1.6.1.1.2.1
	1.6.1.1.3.1;
next	;

1.6.1.1.1.1
date	97.07.28.18.13.39;	author daveb;	state Exp;
branches
	1.6.1.1.1.1.1.1;
next	;

1.6.1.1.1.1.1.1
date	97.10.07.11.38.49;	author jkbrook;	state Exp;
branches;
next	;

1.6.1.1.2.1
date	97.09.08.17.07.06;	author daveb;	state Exp;
branches;
next	;

1.6.1.1.3.1
date	97.09.09.14.02.23;	author daveb;	state Exp;
branches;
next	;

1.6.2.1
date	97.09.10.19.16.50;	author brucem;	state Exp;
branches;
next	;

1.6.3.1
date	97.09.11.20.47.07;	author daveb;	state Exp;
branches;
next	;

1.8.1.1
date	99.04.01.17.52.20;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.8
log
@[Bug #190500]
Remove redundant require statements
@
text
@(*  ==== INITIAL BASIS : TEXT_IO ====
 *
 *  Copyright (C) 1996 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This is part of the extended Initial Basis.
 *
 *  $Log: text_io.sml,v $
 *  Revision 1.7  1998/02/19  14:32:48  jont
 *  [Bug #30341]
 *  Fix where type ... and syntax
 *
 *  Revision 1.6  1997/02/26  11:10:50  andreww
 *  [Bug #1759]
 *  take account of new TEXT_STREAM_IO signature.
 *
 *  Revision 1.5  1996/11/15  17:56:49  io
 *  [Bug #1757]
 *  renamed __charvector to __char_vector
 *
 *  Revision 1.4  1996/07/17  17:25:40  andreww
 *  [Bug #1453]
 *  Updating to meet the new basis definition (May 30 1996).
 *
 *  Revision 1.3  1996/06/04  09:49:38  jont
 *  Remove dependence on __stream_io
 *
 *  Revision 1.2  1996/06/03  13:07:52  andreww
 *  debugging.
 *
 *  Revision 1.1  1996/05/20  14:47:55  jont
 *  new unit
 *
 *
 *)

require "text_stream_io.sml";
require "__char";
require "__char_vector";
require "__substring";
require "__string_cvt";

signature TEXT_IO =
  sig

    type  vector
    type  elem

    type  instream

    type  outstream

    val input : instream -> vector

    val input1 : instream -> elem option

    val inputN : (instream * int) -> vector

    val inputAll : instream -> vector

    val canInput : (instream * int) -> bool

    val lookahead : instream -> elem option

    val closeIn : instream -> unit

    val endOfStream : instream -> bool

    val output : (outstream * vector) -> unit

    val output1 : (outstream * elem) -> unit

    val flushOut : outstream -> unit

    val closeOut : outstream -> unit

    structure StreamIO : TEXT_STREAM_IO

    val getPosIn: instream -> StreamIO.in_pos

    val setPosIn: (instream * StreamIO.in_pos) -> unit


    val mkInstream : StreamIO.instream -> instream

    val getInstream : instream -> StreamIO.instream

    val setInstream : (instream * StreamIO.instream) -> unit

    val getPosOut : outstream -> StreamIO.out_pos

    val setPosOut : (outstream * StreamIO.out_pos) -> unit

    val mkOutstream : StreamIO.outstream -> outstream

    val getOutstream : outstream -> StreamIO.outstream

    val setOutstream : (outstream * StreamIO.outstream) -> unit


    val inputLine : instream -> string

    val outputSubstr : (outstream * Substring.substring) -> unit

    val print : string -> unit

    val openIn : string -> instream
    val openOut : string -> outstream
    val openAppend : string -> outstream

    val openString: string -> instream

    val stdIn : instream
    val stdOut : outstream
    val stdErr : outstream

    val scanStream: ((Char.char, StreamIO.instream) StringCvt.reader
                  -> ('a,StreamIO.instream) StringCvt.reader)
                  -> instream -> 'a option

  end
  where type vector = CharVector.vector
  where type elem = char
@


1.8.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a9 4
 *  Revision 1.8  1999/02/02  15:58:48  mitchell
 *  [Bug #190500]
 *  Remove redundant require statements
 *
@


1.7
log
@[Bug #30341]
Fix where type ... and syntax
@
text
@d10 4
a37 1
require "imperative_io.sml";
a40 1
require "__text_prim_io";
@


1.6
log
@[Bug #1759]
take account of new TEXT_STREAM_IO signature.
@
text
@d10 4
d122 1
a122 1
         and elem = char
@


1.6.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a9 4
 *  Revision 1.6  1997/02/26  11:10:50  andreww
 *  [Bug #1759]
 *  take account of new TEXT_STREAM_IO signature.
 *
@


1.6.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a9 4
 *  Revision 1.6  1997/02/26  11:10:50  andreww
 *  [Bug #1759]
 *  take account of new TEXT_STREAM_IO signature.
 *
@


1.6.1.1
log
@branched from 1.6
@
text
@a9 4
 *  Revision 1.6  1997/02/26  11:10:50  andreww
 *  [Bug #1759]
 *  take account of new TEXT_STREAM_IO signature.
 *
@


1.6.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a9 3
 *  Revision 1.6.1.1  1997/05/12  10:28:52  hope
 *  branched from 1.6
 *
@


1.6.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a9 3
 *  Revision 1.6.1.1  1997/05/12  10:28:52  hope
 *  branched from 1.6
 *
@


1.6.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a9 3
 *  Revision 1.6.1.1  1997/05/12  10:28:52  hope
 *  branched from 1.6
 *
@


1.6.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a9 3
 *  Revision 1.6.1.1.1.1  1997/07/28  18:13:39  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.5
log
@[Bug #1757]
renamed __charvector to __char_vector
@
text
@d10 4
d31 1
d41 54
a94 3
    include IMPERATIVE_IO
      sharing type vector = StreamIO.vector
      sharing type elem = StreamIO.elem
a118 2
         and StreamIO.reader = TextPrimIO.reader
         and StreamIO.writer = TextPrimIO.writer
@


1.4
log
@[Bug #1453]
Updating to meet the new basis definition (May 30 1996).
@
text
@d10 4
d28 1
a28 1
require "__charvector";
@


1.4.7.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1996/07/17  17:25:40  andreww
 *  [Bug #1453]
 *  Updating to meet the new basis definition (May 30 1996).
 *
@


1.4.6.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1996/07/17  17:25:40  andreww
 *  [Bug #1453]
 *  Updating to meet the new basis definition (May 30 1996).
 *
@


1.4.6.1.1.1
log
@branched from 1.4.6.1
@
text
@a9 3
 *  Revision 1.4.6.1  1996/12/17  17:42:44  hope
 *  branched from 1.4
 *
@


1.4.5.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1996/07/17  17:25:40  andreww
 *  [Bug #1453]
 *  Updating to meet the new basis definition (May 30 1996).
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1996/07/17  17:25:40  andreww
 *  [Bug #1453]
 *  Updating to meet the new basis definition (May 30 1996).
 *
@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@a9 3
 *  Revision 1.4.4.1  1996/11/14  12:43:21  hope
 *  branched from 1.4
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1996/07/17  17:25:40  andreww
 *  [Bug #1453]
 *  Updating to meet the new basis definition (May 30 1996).
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1996/07/17  17:25:40  andreww
 *  [Bug #1453]
 *  Updating to meet the new basis definition (May 30 1996).
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1996/07/17  17:25:40  andreww
 *  [Bug #1453]
 *  Updating to meet the new basis definition (May 30 1996).
 *
@


1.3
log
@Remove dependence on __stream_io
@
text
@d10 3
d23 1
d27 1
d46 2
d51 4
@


1.2
log
@debugging.
@
text
@d10 3
a20 1
require "__stream_io";
a46 1
(*         and CharVector.vector = string*)
@


1.1
log
@new unit
@
text
@d9 4
a12 1
 *  $Log$
d26 2
a27 4
      sharing type vector = CharVector.vector = string = StreamIO.vector
      sharing type elem = char = StreamIO.elem
      sharing type TextPrimIO.reader = StreamIO.reader
      sharing type TextPrimIO.writer = StreamIO.writer
d31 1
a31 1
    val outputSubstr : (outstream * substring) -> unit
d44 5
@
