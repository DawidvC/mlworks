head	1.5;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.1
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_11r1:1.3.8.1.1.1.1
	MLWorks_workspace_97:1.3.10
	MLWorks_dt_wizard:1.3.9
	MLWorks_11c0_1997_09_09:1.3.8.1.1.1
	MLWorks_10r3:1.3.8.1.3
	MLWorks_10r2_551:1.3.8.1.2
	MLWorks_11:1.3.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.8.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.8
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.6.1.1
	MLWorks_gui_1996_12_18:1.3.7
	MLWorks_1_0_Win32_1996_12_17:1.3.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ * @;


1.5
date	99.05.12.11.31.55;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	97.11.18.17.17.54;	author jont;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	96.05.30.09.09.53;	author stephenb;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1
	1.3.9.1
	1.3.10.1;
next	1.2;

1.2
date	96.05.01.15.26.08;	author stephenb;	state Exp;
branches;
next	1.1;

1.1
date	96.04.18.11.34.42;	author jont;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.09.51;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.00.44;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.18.59;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.12.42.33;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.14.54.26;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.03.02;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.17.41.57;	author hope;	state Exp;
branches
	1.3.6.1.1.1;
next	;

1.3.6.1.1.1
date	97.02.24.11.30.19;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.18.09.35.54;	author hope;	state Exp;
branches;
next	;

1.3.8.1
date	97.05.12.10.28.00;	author hope;	state Exp;
branches
	1.3.8.1.1.1
	1.3.8.1.2.1
	1.3.8.1.3.1;
next	;

1.3.8.1.1.1
date	97.07.28.18.14.26;	author daveb;	state Exp;
branches
	1.3.8.1.1.1.1.1;
next	;

1.3.8.1.1.1.1.1
date	97.10.07.11.39.29;	author jkbrook;	state Exp;
branches;
next	;

1.3.8.1.2.1
date	97.09.08.17.07.52;	author daveb;	state Exp;
branches;
next	;

1.3.8.1.3.1
date	97.09.09.14.03.03;	author daveb;	state Exp;
branches;
next	;

1.3.9.1
date	97.09.10.19.17.30;	author brucem;	state Exp;
branches;
next	;

1.3.10.1
date	97.09.11.20.48.15;	author daveb;	state Exp;
branches;
next	;

1.4.1.1
date	99.04.01.17.52.03;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.5
log
@[Bug #190554]
Separated out GC timers.
@
text
@(*  Copyright (C) 1995 Harlequin Ltd.
 *
 *
 * Design decisions
 * ----------------
 *
 * When a CPU timer is started, what is returned is is the cpu, usr and gc
 * at that point.  When this is checked at a later point, all that is done
 * is to get times again and compute the difference.  The attraction of
 * this method is that it only requires one runtime routine (the one to
 * return the current user, system and gc time), all the rest can be done
 * in SML.  This is at the cost of doing some allocation i.e. generating
 * the times only to unpick them to compute their difference.  
 *
 * Unlike the previous interface, the CPU timer doensn't bundle in the
 * real timer.  I didn't do this because I could see no advantage to
 * doing so.
 *
 * Revision Log
 * ------------
 *  $Log: __timer.sml,v $
 * Revision 1.4  1997/11/18  17:17:54  jont
 * [Bug #30085]
 * Add totalCPUTimer and totalRealTimer
 *
 * Revision 1.3  1996/05/30  09:09:53  stephenb
 * Update so that it matches March 1996 basis definition.
 *
 * Revision 1.2  1996/05/01  15:26:08  stephenb
 * Update wrt change in Time implementation.
 *
 * Revision 1.1  1996/04/18  11:34:42  jont
 * new unit
 *
 *  Revision 1.1  1995/04/13  13:35:47  jont
 *  new unit
 *  No reason given
 *)

require "^.system.__time";
require "timer";


structure Timer : TIMER =
  struct

    val env = MLWorks.Internal.Runtime.environment

    datatype cpu_timer = 
      CPU_TIMER of 
       { usr: Time.time
       , sys: Time.time
       , gc:  Time.time
       }

    datatype real_timer = REAL_TIMER of Time.time | TOTAL


    val now : unit -> cpu_timer = env "Timer.now"


    val startCPUTimer : unit -> cpu_timer = now

    fun totalCPUTimer() =
      CPU_TIMER{usr=Time.zeroTime, sys=Time.zeroTime, gc=Time.zeroTime}

    fun checkCPUTimer (CPU_TIMER {usr, sys, ...}) =
      let
        val (CPU_TIMER {usr= usr', sys=sys', ...}) = now ()
        val usr'' =  Time.-(usr', usr)
        val sys'' =  Time.-(sys', sys)
      in
        {usr=usr'', sys=sys''}
      end

    fun checkGCTime (CPU_TIMER {gc, ...}) =
      let
        val (CPU_TIMER {gc=gc', ...}) = now ()
      in
	Time.-(gc', gc)
      end


    fun startRealTimer () = REAL_TIMER (Time.now ())

    fun totalRealTimer() = TOTAL

    val startTime = env "Time.start"

    fun checkRealTimer arg =
      let
        val t = case arg of
	  REAL_TIMER t => t
	| TOTAL => startTime ()
      in
        Time.-(Time.now (), t)
      end

  end
@


1.4
log
@[Bug #30085]
Add totalCPUTimer and totalRealTimer
@
text
@d22 4
d67 1
a67 1
    fun checkCPUTimer (CPU_TIMER {usr, sys, gc}) =
d69 1
a69 1
        val (CPU_TIMER {usr= usr', sys=sys', gc=gc'}) = now ()
a71 1
        val gc'' = Time.-(gc', gc)
d73 8
a80 1
        {usr=usr'', sys=sys'', gc=gc''}
@


1.4.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a21 4
 * Revision 1.4  1997/11/18  17:17:54  jont
 * [Bug #30085]
 * Add totalCPUTimer and totalRealTimer
 *
@


1.3
log
@Update so that it matches March 1996 basis definition.
@
text
@d22 3
d52 1
a52 1
    datatype real_timer = REAL_TIMER of Time.time
d60 2
d76 3
d80 1
a80 1
    fun checkRealTimer (REAL_TIMER t) =
d82 3
a84 1
        val t' = Time.now ()
d86 1
a86 1
        Time.-(t', t)
@


1.3.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a21 3
 * Revision 1.3  1996/05/30  09:09:53  stephenb
 * Update so that it matches March 1996 basis definition.
 *
@


1.3.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a21 3
 * Revision 1.3  1996/05/30  09:09:53  stephenb
 * Update so that it matches March 1996 basis definition.
 *
@


1.3.8.1
log
@branched from 1.3
@
text
@a21 3
 * Revision 1.3  1996/05/30  09:09:53  stephenb
 * Update so that it matches March 1996 basis definition.
 *
@


1.3.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a21 3
 * Revision 1.3.8.1  1997/05/12  10:28:00  hope
 * branched from 1.3
 *
@


1.3.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a21 3
 * Revision 1.3.8.1  1997/05/12  10:28:00  hope
 * branched from 1.3
 *
@


1.3.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a21 3
 * Revision 1.3.8.1  1997/05/12  10:28:00  hope
 * branched from 1.3
 *
@


1.3.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a21 3
 * Revision 1.3.8.1.1.1  1997/07/28  18:14:26  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3.7.1
log
@branched from 1.3
@
text
@a21 3
 * Revision 1.3  1996/05/30  09:09:53  stephenb
 * Update so that it matches March 1996 basis definition.
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a21 3
 * Revision 1.3  1996/05/30  09:09:53  stephenb
 * Update so that it matches March 1996 basis definition.
 *
@


1.3.6.1.1.1
log
@branched from 1.3.6.1
@
text
@a21 3
 * Revision 1.3.6.1  1996/12/17  17:41:57  hope
 * branched from 1.3
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a21 3
 * Revision 1.3  1996/05/30  09:09:53  stephenb
 * Update so that it matches March 1996 basis definition.
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a21 3
 * Revision 1.3  1996/05/30  09:09:53  stephenb
 * Update so that it matches March 1996 basis definition.
 *
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a21 3
 * Revision 1.3.4.1  1996/11/14  12:42:33  hope
 * branched from 1.3
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a21 3
 * Revision 1.3  1996/05/30  09:09:53  stephenb
 * Update so that it matches March 1996 basis definition.
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a21 3
 * Revision 1.3  1996/05/30  09:09:53  stephenb
 * Update so that it matches March 1996 basis definition.
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a21 3
 * Revision 1.3  1996/05/30  09:09:53  stephenb
 * Update so that it matches March 1996 basis definition.
 *
@


1.2
log
@Update wrt change in Time implementation.
@
text
@d1 1
a1 1
(*  ==== INITIAL BASIS : Timer structure ====
a2 1
 *  Copyright (C) 1995 Harlequin Ltd.
d4 2
a5 3
 *  Description
 *  -----------
 *  This is part of the extended Initial Basis.
d7 14
d22 3
a30 2
 *
 *
d33 1
d36 1
a38 2
    type cpu_timer = MLWorks.Time.Elapsed.T
    type real_timer = MLWorks.Time.Elapsed.T
d40 7
a46 6
    val totalCPUTime : cpu_timer =
      MLWorks.Time.Elapsed.ELAPSED
      {real = MLWorks.Time.Interval.from_real 0.0,
       user = MLWorks.Time.Interval.from_real 0.0,
       system = MLWorks.Time.Interval.from_real 0.0,
       gc = MLWorks.Time.Interval.from_real 0.0
d49 21
a69 2
    val startCPUTimer : unit -> cpu_timer =
      MLWorks.Time.Elapsed.elapsed
a70 2
    fun interval_to_time x =
      MLWorks.Time.+(MLWorks.Time.zero, x)
d72 6
a77 15
    val checkCPUTimer : cpu_timer -> {usr : MLWorks.Time.time, sys: MLWorks.Time.time, gc : MLWorks.Time.time} =
      fn x =>
      case MLWorks.Time.Elapsed.elapsed_since x of
	MLWorks.Time.Elapsed.ELAPSED{user, system, gc, ...} =>
	  {usr=interval_to_time user,
	   sys=interval_to_time system,
	   gc=interval_to_time gc
	   }

    val totalRealTime : real_timer = totalCPUTime
    val startRealTimer : unit -> real_timer = startCPUTimer
    val checkRealTimer : real_timer -> MLWorks.Time.time =
      fn x =>
      case MLWorks.Time.Elapsed.elapsed_since x of
	MLWorks.Time.Elapsed.ELAPSED{real, ...} => interval_to_time real
d79 1
a79 1
  end (* TIMER *)
@


1.1
log
@new unit
@
text
@d9 4
a12 1
 *  $Log$
a19 1
require "__time";
d41 1
a41 1
    val checkCPUTimer : cpu_timer -> {usr : Time.time, sys: Time.time, gc : Time.time} =
d52 1
a52 1
    val checkRealTimer : real_timer -> Time.time =
@
