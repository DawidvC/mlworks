head	1.5;
access;
symbols
	MLW_daveb_inline_1_4_99:1.5.1
	MLWorks_21c0_1999_03_25:1.5
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.1.1.1.1.1
	MLWorks_workspace_97:1.4.3
	MLWorks_dt_wizard:1.4.2
	MLWorks_11c0_1997_09_09:1.4.1.1.1.1
	MLWorks_10r3:1.4.1.1.3
	MLWorks_10r2_551:1.4.1.1.2
	MLWorks_11:1.4.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.1.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.1
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.6.1.1
	MLWorks_gui_1996_12_18:1.3.7
	MLWorks_1_0_Win32_1996_12_17:1.3.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3;
locks; strict;
comment	@ *  @;


1.5
date	99.03.20.21.27.17;	author daveb;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	97.03.03.11.34.51;	author matthew;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1;
next	1.3;

1.3
date	96.05.21.11.18.35;	author matthew;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1;
next	1.2;

1.2
date	96.05.17.09.38.50;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	96.05.15.13.04.44;	author jont;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.09.43;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.00.36;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.18.50;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.12.42.23;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.14.54.17;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.02.54;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.17.41.48;	author hope;	state Exp;
branches
	1.3.6.1.1.1;
next	;

1.3.6.1.1.1
date	97.02.24.11.30.07;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.18.09.35.46;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	97.05.12.10.27.50;	author hope;	state Exp;
branches
	1.4.1.1.1.1
	1.4.1.1.2.1
	1.4.1.1.3.1;
next	;

1.4.1.1.1.1
date	97.07.28.18.14.19;	author daveb;	state Exp;
branches
	1.4.1.1.1.1.1.1;
next	;

1.4.1.1.1.1.1.1
date	97.10.07.11.39.24;	author jkbrook;	state Exp;
branches;
next	;

1.4.1.1.2.1
date	97.09.08.17.07.46;	author daveb;	state Exp;
branches;
next	;

1.4.1.1.3.1
date	97.09.09.14.02.57;	author daveb;	state Exp;
branches;
next	;

1.4.2.1
date	97.09.10.19.17.24;	author brucem;	state Exp;
branches;
next	;

1.4.3.1
date	97.09.11.20.48.07;	author daveb;	state Exp;
branches;
next	;

1.5.1.1
date	99.04.01.17.52.36;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.5
log
@[Bug #20125]
Replaced substructure with type.
@
text
@(*  ==== INITIAL BASIS : MONO ARRAYS ====
 *
 *  Copyright (C) 1995 Harlequin Ltd.
 *  
 *  Implementation
 *  --------------
 *  The functor MonoArrays is implemented genericlly using standard MLWorks
 *  arrays.
 *
 *  This is part of the extended Initial Basis.
 *
 *
 *  Revision Log
 *  ------------
 *  $Log: _mono_array.sml,v $
 *  Revision 1.4  1997/03/03  11:34:51  matthew
 *  Removing eqtype from elem
 *
 *  Revision 1.3  1996/05/21  11:18:35  matthew
 *  Updating.
 *
 *  Revision 1.2  1996/05/17  09:38:50  matthew
 *  Moved Bits to MLWorks.Internal.Bits
 *
 *  Revision 1.1  1996/05/15  13:04:44  jont
 *  new unit
 *
 * Revision 1.2  1996/05/07  12:03:45  jont
 * Array moving to MLWorks.Array
 *
 * Revision 1.1  1996/04/18  11:38:06  jont
 * new unit
 *
 *  Revision 1.2  1996/03/20  14:57:28  matthew
 *  Changes for new language definition
 *
 *  Revision 1.1  1995/03/22  20:23:25  brianm
 *  new unit
 *  New file.
 *
 *
 *)


require "mono_array";
require "__array";
require "_mono_vector";

functor MonoArray(type elem) : MONO_ARRAY =
  struct
    open Array
    structure Vector = MonoVector (type elem = elem)
    type vector = Vector.vector
    type elem = elem
    type array = elem array
  end
@


1.5.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a15 4
 *  Revision 1.5  1999/03/20  21:27:17  daveb
 *  [Bug #20125]
 *  Replaced substructure with type.
 *
@


1.4
log
@Removing eqtype from elem
@
text
@d16 3
d53 1
@


1.4.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a15 3
 *  Revision 1.4  1997/03/03  11:34:51  matthew
 *  Removing eqtype from elem
 *
@


1.4.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a15 3
 *  Revision 1.4  1997/03/03  11:34:51  matthew
 *  Removing eqtype from elem
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a15 3
 *  Revision 1.4  1997/03/03  11:34:51  matthew
 *  Removing eqtype from elem
 *
@


1.4.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a15 3
 *  Revision 1.4.1.1  1997/05/12  10:27:50  hope
 *  branched from 1.4
 *
@


1.4.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a15 3
 *  Revision 1.4.1.1  1997/05/12  10:27:50  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a15 3
 *  Revision 1.4.1.1  1997/05/12  10:27:50  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a15 3
 *  Revision 1.4.1.1.1.1  1997/07/28  18:14:19  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3
log
@Updating.
@
text
@d16 3
d46 1
a46 1
functor MonoArray(eqtype elem) : MONO_ARRAY =
@


1.3.7.1
log
@branched from 1.3
@
text
@a15 3
 *  Revision 1.3  1996/05/21  11:18:35  matthew
 *  Updating.
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a15 3
 *  Revision 1.3  1996/05/21  11:18:35  matthew
 *  Updating.
 *
@


1.3.6.1.1.1
log
@branched from 1.3.6.1
@
text
@a15 3
 *  Revision 1.3.6.1  1996/12/17  17:41:48  hope
 *  branched from 1.3
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a15 3
 *  Revision 1.3  1996/05/21  11:18:35  matthew
 *  Updating.
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a15 3
 *  Revision 1.3  1996/05/21  11:18:35  matthew
 *  Updating.
 *
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a15 3
 *  Revision 1.3.4.1  1996/11/14  12:42:23  hope
 *  branched from 1.3
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a15 3
 *  Revision 1.3  1996/05/21  11:18:35  matthew
 *  Updating.
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a15 3
 *  Revision 1.3  1996/05/21  11:18:35  matthew
 *  Updating.
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a15 3
 *  Revision 1.3  1996/05/21  11:18:35  matthew
 *  Updating.
 *
@


1.2
log
@Moved Bits to MLWorks.Internal.Bits
@
text
@d16 3
d40 2
a41 83
require "mono_vector";
require "general";


functor MonoArrays(
   structure MonoVector : MONO_VECTOR
   structure General    : GENERAL
) : MONO_ARRAY =
   struct

    structure Bits = MLWorks.Internal.Bits

    fun pow2(n) = Bits.lshift(1,n)

    val array_arr        = MLWorks.Internal.Array.array
    val sub_arr          = MLWorks.Internal.Array.sub
    val update_arr       = MLWorks.Internal.Array.update
    val length_arr       = MLWorks.Internal.Array.length
    val tabulate_arr     = MLWorks.Internal.Array.tabulate
    val arrayoflist_arr  = MLWorks.Internal.Array.arrayoflist

    val vector_vec       = MonoVector.vector
    val length_vec       = MonoVector.length
    val extract_vec      = MonoVector.extract

    type elem   = MonoVector.elem
    type vector = MonoVector.vector

    type array  = elem MLWorks.Internal.Array.array

    exception Subscript = General.Subscript

    val maxlen : int = pow2(28)

  (* array creation functions *)
    val array       : (int * elem) -> array            = array_arr
    val tabulate    : (int * (int -> elem)) -> array   = tabulate_arr
    val arrayOfList : elem list -> array               = arrayoflist_arr

    val length      : array -> int                     = length_arr
    val sub         : (array * int) -> elem            = sub_arr
    val update      : (array * int * elem) -> unit     = update_arr

    local

       val MLWcast = MLWorks.Internal.Value.cast
       val unsafe_array_sub     = MLWorks.Internal.Value.unsafe_array_sub
       val unsafe_array_update  = MLWorks.Internal.Value.unsafe_array_update

       val unsafe_vector_sub : (vector * int) -> elem =
           MLWcast(unsafe_array_sub)

       fun copyv'(src_vec : vector, si, len, dst_arr : array, di) =
           let fun upd_arr(si,di) =
	           let val new_elt = unsafe_vector_sub(src_vec,si)
                   in
                       unsafe_array_update(dst_arr,di,new_elt)
                   end
               fun do_upd(0,_,_) = ()
                 | do_upd(i,a,b) = ( upd_arr(a,b) ; do_upd(i-1,a+1,b+1) ) 
           in
              do_upd(len,si,di)
           end
    in

       val extract : (array * int * int) -> vector = MLWcast(extract_vec)

       fun copyv { src=src_vec : vector, si, len, dst=dst_arr : array, di } =
	   let val src_size = length_vec(src_vec)
               val dst_size = length(dst_arr)
	   in
	       if ((0 <= si)             andalso
		   (0 <= len)            andalso
		   (si + len < src_size) andalso
                   (0 <= di)             andalso
                   (di <= dst_size)
		  )
	       then copyv'(src_vec,si,len,dst_arr,di)
	       else raise Subscript
	   end

       val copy : { src : array, si : int, len : int,
                    dst : array, di : int } -> unit      = MLWcast(copyv)
d43 6
a48 1
    end
@


1.1
log
@new unit
@
text
@d15 4
a18 1
 *  $Log: _mono_arrays.sml,v $
d46 2
@
