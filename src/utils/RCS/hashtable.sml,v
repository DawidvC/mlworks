head	1.8;
access;
symbols
	MLW_daveb_inline_1_4_99:1.8.3
	MLWorks_21c0_1999_03_25:1.8
	MLWorks_20c1_1998_08_20:1.8
	MLWorks_20c0_1998_08_04:1.8
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.8
	MLWorks_20b1c1_1998_05_07:1.8
	MLWorks_20b0_1998_04_07:1.8
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.7.7.1.1.1.1
	MLWorks_workspace_97:1.8.2
	MLWorks_dt_wizard:1.8.1
	MLWorks_11c0_1997_09_09:1.7.7.1.1.1
	MLWorks_10r3:1.7.7.1.3
	MLWorks_10r2_551:1.7.7.1.2
	MLWorks_11:1.7.7.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.7.7.1
	MLWorks_20m0_1997_06_20:1.8
	MLWorks_1_0_r2c2_1997_06_14:1.7.7.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.7.7.1
	MLWorks_1_0_r2c1_1997_05_12:1.7.7
	MLWorks_BugFix_1997_04_24:1.7
	MLWorks_1_0_r2_Win32_1997_04_11:1.7
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.5.1.1
	MLWorks_gui_1996_12_18:1.7.6
	MLWorks_1_0_Win32_1996_12_17:1.7.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.7.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.7.3.1
	MLWorks_1_0_Irix_1996_11_28:1.7.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.7.4
	MLWorks_1_0_Unix_1996_11_14:1.7.3
	MLWorks_Open_Beta2_1996_10_11:1.7.2
	MLWorks_License_dev:1.7.1
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.6
	MLWorks_Beta_1996_06_07:1.6
	MLWorks_Beta_1996_06_06:1.6
	MLWorks_Beta_1996_06_05:1.6
	MLWorks_Beta_1996_06_03:1.6
	MLWorks_Beta_1996_05_31:1.6
	MLWorks_Beta_1996_05_30:1.6
	ML_final_beta_release_02/03/94:1.5
	mlworks-28-01-1994:1.5
	Release:1.5
	mlworks-beta-01-09-1993:1.5
	MLWorks-1-0-4-29/01/1993:1.5
	MLWorks-1-0-3-21/12/1992:1.5
	MLWorks-1-0-2-15/12/1992:1.5
	MLWorks-1-0-1-04/12/1992:1.5
	checkpoint_17_08_92:1.5
	Ten15_release_19-11-91:1.1.1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ *  @;


1.8
date	97.05.01.12.57.09;	author jont;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1;
next	1.7;

1.7
date	96.10.03.09.36.20;	author matthew;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1
	1.7.5.1
	1.7.6.1
	1.7.7.1;
next	1.6;

1.6
date	96.02.26.12.05.21;	author jont;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	92.08.13.16.11.49;	author davidt;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	92.04.27.09.30.34;	author clive;	state Exp;
branches;
next	1.3;

1.3
date	91.11.21.17.03.55;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.11.19.12.20.41;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.15.58.17;	author colin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	91.11.19.11.13.39;	author jont;	state Exp;
branches;
next	;

1.5.1.1
date	92.08.13.16.11.49;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.43.31;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	96.10.07.16.36.45;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.10.17.11.55.44;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.11.14.13.24.05;	author hope;	state Exp;
branches
	1.7.3.1.1.1;
next	;

1.7.3.1.1.1
date	96.11.28.15.34.46;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	96.11.22.18.41.11;	author hope;	state Exp;
branches;
next	;

1.7.5.1
date	96.12.17.18.20.09;	author hope;	state Exp;
branches
	1.7.5.1.1.1;
next	;

1.7.5.1.1.1
date	97.02.24.12.14.36;	author hope;	state Exp;
branches;
next	;

1.7.6.1
date	96.12.18.10.15.40;	author hope;	state Exp;
branches;
next	;

1.7.7.1
date	97.05.12.10.53.48;	author hope;	state Exp;
branches
	1.7.7.1.1.1
	1.7.7.1.2.1
	1.7.7.1.3.1;
next	;

1.7.7.1.1.1
date	97.07.28.18.36.08;	author daveb;	state Exp;
branches
	1.7.7.1.1.1.1.1;
next	;

1.7.7.1.1.1.1.1
date	97.10.07.12.01.28;	author jkbrook;	state Exp;
branches;
next	;

1.7.7.1.2.1
date	97.09.08.17.28.30;	author daveb;	state Exp;
branches;
next	;

1.7.7.1.3.1
date	97.09.09.14.26.09;	author daveb;	state Exp;
branches;
next	;

1.8.1.1
date	97.09.10.19.44.01;	author brucem;	state Exp;
branches;
next	;

1.8.2.1
date	97.09.11.21.11.26;	author daveb;	state Exp;
branches;
next	;

1.8.3.1
date	99.04.01.18.09.59;	author daveb;	state Exp;
branches;
next	;


desc
@SML hashtables
@


1.8
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@(* newhashtable the signature *)
(*
$Log: hashtable.sml,v $
 *  Revision 1.7  1996/10/03  09:36:20  matthew
 *  Generalizing type of map
 *
 *  Revision 1.6  1996/02/26  12:05:21  jont
 *  new unit
 *  Renamed from newhashtable
 *
Revision 1.7  1992/09/22  13:04:50  clive
Needed to make some type variables weak

Revision 1.6  1992/09/22  09:02:21  clive
Changed hashtables to a single structure implementation

Revision 1.5  1992/09/16  09:44:50  clive
Added tryLookup

Revision 1.4  1992/09/14  13:44:43  jont
Added a lookup_default function to assign a default value when the
key is not found

Revision 1.3  1992/08/13  16:16:25  davidt
Added fold and iterate functions.

Revision 1.2  1992/07/24  11:35:12  clive
Added some functionality including the printing of statistics, and resizing

Revision 1.1  1992/07/16  11:05:48  jont
Initial revision

Copyright (c) 1992 Harlequin Ltd.
*)

signature HASHTABLE =
  sig
    type ('_Key,'_Value) HashTable
    exception Lookup 
    val new     : int * ('_Key * '_Key -> bool) * ('_Key -> int) -> ('_Key,'_Value) HashTable
    val lookup  : (('_Key,'_Value) HashTable * '_Key) -> '_Value
    val lookup_default  : (('_Key,'_Value) HashTable * '_Value * '_Key) -> '_Value
    val tryLookup : (('_Key,'_Value) HashTable * '_Key) -> '_Value option
    val update  : (('_Key,'_Value) HashTable * '_Key * '_Value) -> unit
    val delete  : (('_Key,'_Value) HashTable * '_Key) -> unit
    val to_list : ('_Key,'_Value) HashTable -> ('_Key * '_Value) list
    val copy    : ('_Key,'_Value) HashTable -> ('_Key,'_Value) HashTable
    val map     : ('_Key * '_Value1 -> '_Value2) -> ('_Key,'_Value1) HashTable -> ('_Key,'_Value2) HashTable
    val fold    : ('a * '_Key * '_Value -> 'a) -> ('a * ('_Key,'_Value) HashTable) -> 'a
    val iterate : ('_Key * '_Value -> unit) -> ('_Key,'_Value) HashTable -> unit
    val stats : ('_Key,'_Value) HashTable -> {size:int, count:int, smallest:int, largest:int}
    val string_hash_table_stats : ('_Key,'_Value) HashTable -> string
  end
@


1.8.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 *  Revision 1.8  1997/05/01  12:57:09  jont
 *  [Bug #30088]
 *  Get rid of MLWorks.Option
 *
@


1.8.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 *  Revision 1.8  1997/05/01  12:57:09  jont
 *  [Bug #30088]
 *  Get rid of MLWorks.Option
 *
@


1.8.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 *  Revision 1.8  1997/05/01  12:57:09  jont
 *  [Bug #30088]
 *  Get rid of MLWorks.Option
 *
@


1.7
log
@Generalizing type of map
@
text
@d4 3
d43 1
a43 1
    val tryLookup : (('_Key,'_Value) HashTable * '_Key) -> '_Value MLWorks.Option.option
@


1.7.7.1
log
@branched from 1.7
@
text
@a3 3
 *  Revision 1.7  1996/10/03  09:36:20  matthew
 *  Generalizing type of map
 *
@


1.7.7.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 *  Revision 1.7.7.1  1997/05/12  10:53:48  hope
 *  branched from 1.7
 *
@


1.7.7.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 *  Revision 1.7.7.1  1997/05/12  10:53:48  hope
 *  branched from 1.7
 *
@


1.7.7.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 *  Revision 1.7.7.1  1997/05/12  10:53:48  hope
 *  branched from 1.7
 *
@


1.7.7.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 *  Revision 1.7.7.1.1.1  1997/07/28  18:36:08  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.7.6.1
log
@branched from 1.7
@
text
@a3 3
 *  Revision 1.7  1996/10/03  09:36:20  matthew
 *  Generalizing type of map
 *
@


1.7.5.1
log
@branched from 1.7
@
text
@a3 3
 *  Revision 1.7  1996/10/03  09:36:20  matthew
 *  Generalizing type of map
 *
@


1.7.5.1.1.1
log
@branched from 1.7.5.1
@
text
@a3 3
 *  Revision 1.7.5.1  1996/12/17  18:20:09  hope
 *  branched from 1.7
 *
@


1.7.4.1
log
@branched from 1.7
@
text
@a3 3
 *  Revision 1.7  1996/10/03  09:36:20  matthew
 *  Generalizing type of map
 *
@


1.7.3.1
log
@branched from 1.7
@
text
@a3 3
 *  Revision 1.7  1996/10/03  09:36:20  matthew
 *  Generalizing type of map
 *
@


1.7.3.1.1.1
log
@branched from 1.7.3.1
@
text
@a3 3
 *  Revision 1.7.3.1  1996/11/14  13:24:05  hope
 *  branched from 1.7
 *
@


1.7.2.1
log
@branched from 1.7
@
text
@a3 3
 *  Revision 1.7  1996/10/03  09:36:20  matthew
 *  Generalizing type of map
 *
@


1.7.1.1
log
@branched from 1.7
@
text
@a3 3
 *  Revision 1.7  1996/10/03  09:36:20  matthew
 *  Generalizing type of map
 *
@


1.6
log
@new unit
Renamed from newhashtable
@
text
@d3 5
a7 1
$Log: newhashtable.sml,v $
d45 1
a45 1
    val map     : ('_Key * '_Value -> '_Value) -> ('_Key,'_Value) HashTable -> ('_Key,'_Value) HashTable
@


1.6.1.1
log
@branched from 1.6
@
text
@d3 1
a3 5
$Log: hashtable.sml,v $
 *  Revision 1.6  1996/02/26  12:05:21  jont
 *  new unit
 *  Renamed from newhashtable
 *
@


1.5
log
@NO LONGER IN USE. Commented out code so that a parse
error is generated if the file is used.
@
text
@d1 1
a1 1
(* hashtable.sml the signature *)
d3 3
a5 3
$Log: hashtable.sml,v $
Revision 1.4  1992/04/27  09:30:34  clive
Added largest row details returned from the statistics function
d7 2
a8 2
Revision 1.3  1991/11/21  17:03:55  jont
Added copyright message
d10 2
a11 2
Revision 1.2  91/11/19  12:20:41  jont
Merging in comments from Ten15 branch to main trunk
d13 3
a15 2
Revision 1.1.1.1  91/11/19  11:13:39  jont
Added comments for DRA on functions
d17 7
a23 1
Revision 1.1  91/06/07  15:58:17  colin
d26 1
a26 1
Copyright (c) 1991 Harlequin Ltd.
d29 1
a29 22
(* A general hashtable package. Used in encoding types (see
encoder/type_encoder.sml), but could be used elsewhere. One defines a
hashtable by writing a structure which matches the HASHSPEC signature
below, then applying the functor HashTable to it. The result matches
the HASHTABLE signature. All the functions are self-explanatory. The
implementation uses lists as hashing buckets. *)

signature (*HASHTABLE =
  sig
    type Key
    type Value
    exception Lookup of Key
    val clear : unit -> unit
    val lookup : Key -> Value
    val update : Key * Value -> unit
    val stats : unit -> {size : int, count : int, 
			 smallest : int, largest : int, used : int,
                         largest_row_contents : (Key * Value) list}
  end


signature HASHSPEC =
d31 15
a45 5
    type Key
    type Value
    val size : int
    val hash : Key -> int
    val eq : Key * Key -> bool
a46 1
*)
@


1.5.1.1
log
@Fork for bug fixing
@
text
@a3 4
Revision 1.5  1992/08/13  16:11:49  davidt
NO LONGER IN USE. Commented out code so that a parse
error is generated if the file is used.

@


1.4
log
@Added largest row details returned from the statistics function
@
text
@d4 3
d29 1
a29 1
signature HASHTABLE =
d51 1
@


1.3
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	hashtable.sml,v $
a33 1
    val rehash : unit -> unit
d35 2
a36 1
			 smallest : int, largest : int, used : int}
@


1.2
log
@Merging in comments from Ten15 branch to main trunk
@
text
@d1 1
d4 3
d13 1
@


1.1
log
@Initial revision
@
text
@d2 7
a8 1
$Log$
d10 8
@


1.1.1.1
log
@Added comments for DRA on functions
@
text
@d2 1
a2 4
$Log:	hashtable.sml,v $
Revision 1.1  91/06/07  15:58:17  colin
Initial revision

a3 8

(* A general hashtable package. Used in encoding types (see
encoder/type_encoder.sml), but could be used elsewhere. One defines a
hashtable by writing a structure which matches the HASHSPEC signature
below, then applying the functor HashTable to it. The result matches
the HASHTABLE signature. All the functions are self-explanatory. The
implementation uses lists as hashing buckets. *)

@
