head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.12
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.9.1.1.1.1
	MLWorks_workspace_97:1.4.11
	MLWorks_dt_wizard:1.4.10
	MLWorks_11c0_1997_09_09:1.4.9.1.1.1
	MLWorks_10r3:1.4.9.1.3
	MLWorks_10r2_551:1.4.9.1.2
	MLWorks_11:1.4.9.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.9.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.9.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.9.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.9
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.7.1.1
	MLWorks_gui_1996_12_18:1.4.8
	MLWorks_1_0_Win32_1996_12_17:1.4.7
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.5.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.5.1
	MLWorks_1_0_Irix_1996_11_28:1.4.5.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.6
	MLWorks_1_0_Unix_1996_11_14:1.4.5
	MLWorks_Open_Beta2_1996_10_11:1.4.4
	MLWorks_License_dev:1.4.3
	MLWorks_1_open_beta_1996_09_13:1.4.2
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.4
	MLWorks_Beta_1996_06_07:1.4
	MLWorks_Beta_1996_06_06:1.4
	MLWorks_Beta_1996_06_05:1.4
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4
	ML_beta_release_12/08/94:1.4
	ML_beta_release_03/08/94:1.4
	ML_revised_beta_release_25/05/94:1.4
	ML_final_beta_release_02/03/94:1.4
	mlworks-28-01-1994:1.4
	Release:1.4
	mlworks-beta-01-09-1993:1.4
	MLWorks-1-0-4-29/01/1993:1.4
	MLWorks-1-0-3-21/12/1992:1.4
	MLWorks-1-0-2-15/12/1992:1.4
	MLWorks-1-0-1-04/12/1992:1.4
	checkpoint_17_08_92:1.4
	Ten15_release_19-11-91:1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.4
date	92.01.29.11.12.55;	author clive;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1
	1.4.8.1
	1.4.9.1
	1.4.10.1
	1.4.11.1
	1.4.12.1;
next	1.3;

1.3
date	92.01.28.12.30.58;	author clive;	state Exp;
branches;
next	1.2;

1.2
date	91.11.21.17.00.29;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.15.56.28;	author colin;	state Exp;
branches;
next	;

1.4.1.1
date	92.01.29.11.12.55;	author jont;	state Exp;
branches;
next	;

1.4.2.1
date	96.09.13.11.42.56;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.07.16.36.06;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.10.17.11.55.09;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.14.13.23.31;	author hope;	state Exp;
branches
	1.4.5.1.1.1;
next	;

1.4.5.1.1.1
date	96.11.28.15.34.06;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.11.22.18.40.34;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.17.18.19.33;	author hope;	state Exp;
branches
	1.4.7.1.1.1;
next	;

1.4.7.1.1.1
date	97.02.24.12.13.54;	author hope;	state Exp;
branches;
next	;

1.4.8.1
date	96.12.18.10.15.00;	author hope;	state Exp;
branches;
next	;

1.4.9.1
date	97.05.12.10.53.07;	author hope;	state Exp;
branches
	1.4.9.1.1.1
	1.4.9.1.2.1
	1.4.9.1.3.1;
next	;

1.4.9.1.1.1
date	97.07.28.18.35.38;	author daveb;	state Exp;
branches
	1.4.9.1.1.1.1.1;
next	;

1.4.9.1.1.1.1.1
date	97.10.07.12.01.08;	author jkbrook;	state Exp;
branches;
next	;

1.4.9.1.2.1
date	97.09.08.17.28.11;	author daveb;	state Exp;
branches;
next	;

1.4.9.1.3.1
date	97.09.09.14.25.39;	author daveb;	state Exp;
branches;
next	;

1.4.10.1
date	97.09.10.19.44.20;	author brucem;	state Exp;
branches;
next	;

1.4.11.1
date	97.09.11.21.11.41;	author daveb;	state Exp;
branches;
next	;

1.4.12.1
date	99.04.01.18.09.40;	author daveb;	state Exp;
branches;
next	;


desc
@Resetable integer counter
@


1.4
log
@Added code to compute the next value that a counter would take given
its existing value
@
text
@(* _counter.sml the functor *)
(*
$Log: _counter.sml,v $
Revision 1.3  1992/01/28  12:30:58  clive
Added a previous counter function

Revision 1.2  1991/11/21  17:00:29  jont
Added copyright message

Revision 1.1  91/06/07  15:56:28  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)
require "counter";

functor Counter (): COUNTER =
    struct
	local 
	    val count = ref 0
	in
	    fun counter () = 
		let val ref x = count
		in
		    (count := (x + 1);
		     x)
		end 

              fun previous_count x =
                (x-1)
                
              fun next_count x =
                (x+1)

	    fun reset_counter n =
	      (count := n;
	       ())

	    fun read_counter () = !count
	      
	end
    end
@


1.4.12.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.4  1992/01/29  11:12:55  clive
 * Added code to compute the next value that a counter would take given
 * its existing value
 *
@


1.4.11.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.4  1992/01/29  11:12:55  clive
 * Added code to compute the next value that a counter would take given
 * its existing value
 *
@


1.4.10.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.4  1992/01/29  11:12:55  clive
 * Added code to compute the next value that a counter would take given
 * its existing value
 *
@


1.4.9.1
log
@branched from 1.4
@
text
@a3 4
 * Revision 1.4  1992/01/29  11:12:55  clive
 * Added code to compute the next value that a counter would take given
 * its existing value
 *
@


1.4.9.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.4.9.1  1997/05/12  10:53:07  hope
 * branched from 1.4
 *
@


1.4.9.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.4.9.1  1997/05/12  10:53:07  hope
 * branched from 1.4
 *
@


1.4.9.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.4.9.1  1997/05/12  10:53:07  hope
 * branched from 1.4
 *
@


1.4.9.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.4.9.1.1.1  1997/07/28  18:35:38  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.4.8.1
log
@branched from 1.4
@
text
@a3 4
 * Revision 1.4  1992/01/29  11:12:55  clive
 * Added code to compute the next value that a counter would take given
 * its existing value
 *
@


1.4.7.1
log
@branched from 1.4
@
text
@a3 4
 * Revision 1.4  1992/01/29  11:12:55  clive
 * Added code to compute the next value that a counter would take given
 * its existing value
 *
@


1.4.7.1.1.1
log
@branched from 1.4.7.1
@
text
@a3 3
 * Revision 1.4.7.1  1996/12/17  18:19:33  hope
 * branched from 1.4
 *
@


1.4.6.1
log
@branched from 1.4
@
text
@a3 4
 * Revision 1.4  1992/01/29  11:12:55  clive
 * Added code to compute the next value that a counter would take given
 * its existing value
 *
@


1.4.5.1
log
@branched from 1.4
@
text
@a3 4
 * Revision 1.4  1992/01/29  11:12:55  clive
 * Added code to compute the next value that a counter would take given
 * its existing value
 *
@


1.4.5.1.1.1
log
@branched from 1.4.5.1
@
text
@a3 3
 * Revision 1.4.5.1  1996/11/14  13:23:31  hope
 * branched from 1.4
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a3 4
 * Revision 1.4  1992/01/29  11:12:55  clive
 * Added code to compute the next value that a counter would take given
 * its existing value
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a3 4
 * Revision 1.4  1992/01/29  11:12:55  clive
 * Added code to compute the next value that a counter would take given
 * its existing value
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a3 4
 * Revision 1.4  1992/01/29  11:12:55  clive
 * Added code to compute the next value that a counter would take given
 * its existing value
 *
@


1.4.1.1
log
@Fork for bug fixing
@
text
@a3 4
Revision 1.4  1992/01/29  11:12:55  clive
Added code to compute the next value that a counter would take given
its existing value

@


1.3
log
@Added a previous counter function
@
text
@d4 3
d31 3
@


1.2
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	_counter.sml,v $
d25 3
@


1.1
log
@Initial revision
@
text
@d1 1
d3 5
a7 1
$Log$
@
