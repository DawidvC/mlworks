head	1.7;
access;
symbols
	MLW_daveb_inline_1_4_99:1.7.8
	MLWorks_21c0_1999_03_25:1.7
	MLWorks_20c1_1998_08_20:1.7
	MLWorks_20c0_1998_08_04:1.7
	MLWorks_20b2c2_1998_06_19:1.7
	MLWorks_20b2_Windows_1998_06_12:1.7
	MLWorks_20b1c1_1998_05_07:1.7
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.7
	MLWorks_20m1_1997_10_23:1.7
	MLWorks_11r1:1.7.5.1.1.1.1
	MLWorks_workspace_97:1.7.7
	MLWorks_dt_wizard:1.7.6
	MLWorks_11c0_1997_09_09:1.7.5.1.1.1
	MLWorks_10r3:1.7.5.1.3
	MLWorks_10r2_551:1.7.5.1.2
	MLWorks_11:1.7.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.7.5.1
	MLWorks_20m0_1997_06_20:1.7
	MLWorks_1_0_r2c2_1997_06_14:1.7.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.7.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.7.5
	MLWorks_BugFix_1997_04_24:1.7
	MLWorks_1_0_r2_Win32_1997_04_11:1.7
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.3.1.1
	MLWorks_gui_1996_12_18:1.7.4
	MLWorks_1_0_Win32_1996_12_17:1.7.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.7.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.7.1.1
	MLWorks_1_0_Irix_1996_11_28:1.7.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.7.2
	MLWorks_1_0_Unix_1996_11_14:1.7.1
	MLWorks_Open_Beta2_1996_10_11:1.6.3
	MLWorks_License_dev:1.6.2
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.5
	MLWorks_Beta_1996_06_07:1.5
	MLWorks_Beta_1996_06_06:1.5
	MLWorks_Beta_1996_06_05:1.5
	MLWorks_Beta_1996_06_03:1.5
	MLWorks_Beta_1996_05_31:1.5
	MLWorks_Beta_1996_05_30:1.5
	ML_beta_release_12/08/94:1.4
	ML_beta_release_03/08/94:1.4
	ML_revised_beta_release_25/05/94:1.4
	ML_final_beta_release_02/03/94:1.4
	mlworks-28-01-1994:1.4
	Release:1.4
	mlworks-beta-01-09-1993:1.4
	MLWorks-1-0-4-29/01/1993:1.4
	MLWorks-1-0-3-21/12/1992:1.4
	MLWorks-1-0-2-15/12/1992:1.4
	MLWorks-1-0-1-04/12/1992:1.4
	checkpoint_17_08_92:1.4
	Ten15_release_19-11-91:1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.7
date	96.10.28.14.43.44;	author io;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1
	1.7.5.1
	1.7.6.1
	1.7.7.1
	1.7.8.1;
next	1.6;

1.6
date	96.08.09.13.18.51;	author io;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1;
next	1.5;

1.5
date	96.05.07.10.49.46;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	92.08.07.16.20.59;	author davidt;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	92.02.14.13.47.47;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.11.21.17.02.31;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.15.57.36;	author colin;	state Exp;
branches;
next	;

1.4.1.1
date	92.08.07.16.20.59;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.43.11;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.07.16.36.22;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.10.17.11.55.23;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	96.11.14.13.23.44;	author hope;	state Exp;
branches
	1.7.1.1.1.1;
next	;

1.7.1.1.1.1
date	96.11.28.15.34.21;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.11.22.18.40.49;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.12.17.18.19.47;	author hope;	state Exp;
branches
	1.7.3.1.1.1;
next	;

1.7.3.1.1.1
date	97.02.24.12.14.11;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	96.12.18.10.15.18;	author hope;	state Exp;
branches;
next	;

1.7.5.1
date	97.05.12.10.53.35;	author hope;	state Exp;
branches
	1.7.5.1.1.1
	1.7.5.1.2.1
	1.7.5.1.3.1;
next	;

1.7.5.1.1.1
date	97.07.28.18.36.25;	author daveb;	state Exp;
branches
	1.7.5.1.1.1.1.1;
next	;

1.7.5.1.1.1.1.1
date	97.10.07.12.01.38;	author jkbrook;	state Exp;
branches;
next	;

1.7.5.1.2.1
date	97.09.08.17.28.40;	author daveb;	state Exp;
branches;
next	;

1.7.5.1.3.1
date	97.09.09.14.26.26;	author daveb;	state Exp;
branches;
next	;

1.7.6.1
date	97.09.10.19.44.37;	author brucem;	state Exp;
branches;
next	;

1.7.7.1
date	97.09.11.21.11.53;	author daveb;	state Exp;
branches;
next	;

1.7.8.1
date	99.04.01.18.10.10;	author daveb;	state Exp;
branches;
next	;


desc
@Lisp like S-expressions and printing routines
@


1.7
log
@moving String from toplevel
@
text
@(* _sexpr.sml the functor *)
(*
$Log: _sexpr.sml,v $
 * Revision 1.6  1996/08/09  13:18:51  io
 * add toList for MIPS mach_cg
 *
 * Revision 1.5  1996/05/07  10:49:46  jont
 * Array moving to MLWorks.Array
 *
 * Revision 1.4  1992/08/07  16:20:59  davidt
 * Took out String structure argument.
 *
Revision 1.3  1992/02/14  13:47:47  jont
Added string parameter to functor

Revision 1.2  1991/11/21  17:02:31  jont
Added copyright message

Revision 1.1  91/06/07  15:57:36  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

require "sexpr";

(* For Lisp lovers *)

functor Sexpr () : SEXPR =
  struct

    datatype 'a Sexpr = NIL | ATOM of 'a | CONS of 'a Sexpr * 'a Sexpr

    fun list nil = NIL
      | list (hd::tl) = CONS (hd,list tl)

    exception Append
    
    fun append (NIL,x) = x
      | append (CONS (car,cdr), x) = CONS (car, append (cdr,x))
      | append (ATOM _,_) = raise Append

    fun printSexpr printer sexpr =
      let 
	fun printexp NIL = "()"
	  | printexp (ATOM a) = printer a
	  | printexp (CONS (car,cdr)) = "(" ^ printexp car ^ printrest cdr
	
	and printrest NIL = ")"
	  | printrest (ATOM a) = " . " ^ printer a ^ ")"
	  | printrest (CONS (car,cdr)) = " " ^ printexp car ^ printrest cdr
      in
	printexp sexpr
      end

    fun pprintSexpr printer sexpr =
      let
	fun spaces 0 = ""
	  | spaces n = " " ^ spaces (n-1)

	val spaces40 = spaces 40

	val indents =
	  MLWorks.Internal.Array.arrayoflist ["\n" ^ spaces40,
			       "\n>" ^ spaces40,
			       "\n>>" ^ spaces40,
			       "\n>>>" ^ spaces40,
			       "\n>>>>" ^ spaces40,
			       "\n>>>>>" ^ spaces40,
			       "\n>>>>>>" ^ spaces40,
			       "\n>>>>>>>" ^ spaces40]

	exception Indent

	fun indent s = 
	  let 
	    val a = s div 40
	    val b = s mod 40
	  in
	    if a > 7 then
	      raise Indent
	    else
	      substring (* could raise Substring *) (MLWorks.Internal.Array.sub(indents,a),0,a+b+1)
	  end

	fun pprintexp (NIL,_) = "()"
	  | pprintexp (ATOM a,_) = printer a
	  | pprintexp (CONS (car,cdr),n) =
	    indent n ^ "(" ^ pprintexp (car,n+1) ^ pprintrest (cdr,n+1)

	and pprintrest (NIL,_) = ")"
	  | pprintrest (ATOM a,_) = " . " ^ printer a ^ ")"
	  | pprintrest (CONS (car,cdr),n) = 
	    " " ^ pprintexp (car,n) ^ pprintrest (cdr,n)
      in
	pprintexp (sexpr,0)
      end

    (* flattens a list of lists
     * so far used in mips mach_cg only
     *)
    fun toList arg = 
      let 
	fun toList (CONS (xs, ys), zs, acc) = toList (xs, ys::zs, acc)
	  | toList (NIL, [], acc) = 
	    (* rev acc *)
	  foldl (op@@) [] acc
	  | toList (NIL, x::xs, acc) = toList (x, xs, acc)
	  | toList (ATOM x, xs, acc) = toList (NIL, xs, x::acc)
      in
	toList (arg, [], [])
      end
  end
@


1.7.8.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 3
 * Revision 1.7  1996/10/28  14:43:44  io
 * moving String from toplevel
 *
@


1.7.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 3
 * Revision 1.7  1996/10/28  14:43:44  io
 * moving String from toplevel
 *
@


1.7.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 3
 * Revision 1.7  1996/10/28  14:43:44  io
 * moving String from toplevel
 *
@


1.7.5.1
log
@branched from 1.7
@
text
@a3 3
 * Revision 1.7  1996/10/28  14:43:44  io
 * moving String from toplevel
 *
@


1.7.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.7.5.1  1997/05/12  10:53:35  hope
 * branched from 1.7
 *
@


1.7.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.7.5.1  1997/05/12  10:53:35  hope
 * branched from 1.7
 *
@


1.7.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.7.5.1  1997/05/12  10:53:35  hope
 * branched from 1.7
 *
@


1.7.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.7.5.1.1.1  1997/07/28  18:36:25  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.7.4.1
log
@branched from 1.7
@
text
@a3 3
 * Revision 1.7  1996/10/28  14:43:44  io
 * moving String from toplevel
 *
@


1.7.3.1
log
@branched from 1.7
@
text
@a3 3
 * Revision 1.7  1996/10/28  14:43:44  io
 * moving String from toplevel
 *
@


1.7.3.1.1.1
log
@branched from 1.7.3.1
@
text
@a3 3
 * Revision 1.7.3.1  1996/12/17  18:19:47  hope
 * branched from 1.7
 *
@


1.7.2.1
log
@branched from 1.7
@
text
@a3 3
 * Revision 1.7  1996/10/28  14:43:44  io
 * moving String from toplevel
 *
@


1.7.1.1
log
@branched from 1.7
@
text
@a3 3
 * Revision 1.7  1996/10/28  14:43:44  io
 * moving String from toplevel
 *
@


1.7.1.1.1.1
log
@branched from 1.7.1.1
@
text
@a3 3
 * Revision 1.7.1.1  1996/11/14  13:23:44  hope
 * branched from 1.7
 *
@


1.6
log
@add toList for MIPS mach_cg
@
text
@d4 3
a25 1
require "../basis/__list";
d83 1
a83 1
	      String.substring (MLWorks.Internal.Array.sub(indents,a),0,a+b+1)
d107 1
a107 1
	    List.foldl (op@@) [] acc
@


1.6.3.1
log
@branched from 1.6
@
text
@a3 3
 * Revision 1.6  1996/08/09  13:18:51  io
 * add toList for MIPS mach_cg
 *
@


1.6.2.1
log
@branched from 1.6
@
text
@a3 3
 * Revision 1.6  1996/08/09  13:18:51  io
 * add toList for MIPS mach_cg
 *
@


1.6.1.1
log
@branched from 1.6
@
text
@a3 3
 * Revision 1.6  1996/08/09  13:18:51  io
 * add toList for MIPS mach_cg
 *
@


1.5
log
@Array moving to MLWorks.Array
@
text
@d4 3
d23 1
d95 15
@


1.4
log
@Took out String structure argument.
@
text
@d4 3
d58 1
a58 1
	  Array.arrayoflist ["\n" ^ spaces40,
d77 1
a77 1
	      String.substring (Array.sub(indents,a),0,a+b+1)
@


1.4.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.4  1992/08/07  16:20:59  davidt
Took out String structure argument.

@


1.3
log
@Added string parameter to functor
@
text
@d4 3
d15 1
a15 1
require "string";
d20 1
a20 1
functor Sexpr (structure String : STRING) : SEXPR =
@


1.2
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	_sexpr.sml,v $
d12 1
d17 1
a17 1
functor Sexpr () : SEXPR =
@


1.1
log
@Initial revision
@
text
@d1 1
d3 5
a7 1
$Log$
@
