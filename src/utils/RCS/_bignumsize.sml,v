head	1.2;
access;
symbols
	MLW_daveb_inline_1_4_99:1.2.8
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_11r1:1.2.5.1.1.1.1
	MLWorks_workspace_97:1.2.7
	MLWorks_dt_wizard:1.2.6
	MLWorks_11c0_1997_09_09:1.2.5.1.1.1
	MLWorks_10r3:1.2.5.1.3
	MLWorks_10r2_551:1.2.5.1.2
	MLWorks_11:1.2.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.2.5.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.2.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.2.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.2.5
	MLWorks_BugFix_1997_04_24:1.2
	MLWorks_1_0_r2_Win32_1997_04_11:1.2
	MLWorks_1_0_r2_Unix_1997_04_04:1.2
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.2.3.1.1
	MLWorks_gui_1996_12_18:1.2.4
	MLWorks_1_0_Win32_1996_12_17:1.2.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.2.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.2.1.1
	MLWorks_1_0_Irix_1996_11_28:1.2.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.2.2
	MLWorks_1_0_Unix_1996_11_14:1.2.1
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1
	MLWorks_Beta_1996_07_02:1.1
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1
	MLWorks_Beta_1996_06_03:1.1
	MLWorks_Beta_1996_05_31:1.1
	MLWorks_Beta_1996_05_30:1.1;
locks; strict;
comment	@ * @;


1.2
date	96.10.05.14.13.57;	author io;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1
	1.2.5.1
	1.2.6.1
	1.2.7.1
	1.2.8.1;
next	1.1;

1.1
date	95.08.14.16.07.36;	author jont;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	96.09.13.11.42.55;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.16.36.05;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.55.08;	author hope;	state Exp;
branches;
next	;

1.2.1.1
date	96.11.14.13.23.30;	author hope;	state Exp;
branches
	1.2.1.1.1.1;
next	;

1.2.1.1.1.1
date	96.11.28.15.34.05;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.11.22.18.40.34;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.12.17.18.19.32;	author hope;	state Exp;
branches
	1.2.3.1.1.1;
next	;

1.2.3.1.1.1
date	97.02.24.12.13.53;	author hope;	state Exp;
branches;
next	;

1.2.4.1
date	96.12.18.10.14.59;	author hope;	state Exp;
branches;
next	;

1.2.5.1
date	97.05.12.10.53.30;	author hope;	state Exp;
branches
	1.2.5.1.1.1
	1.2.5.1.2.1
	1.2.5.1.3.1;
next	;

1.2.5.1.1.1
date	97.07.28.18.35.37;	author daveb;	state Exp;
branches
	1.2.5.1.1.1.1.1;
next	;

1.2.5.1.1.1.1.1
date	97.10.07.12.01.07;	author jkbrook;	state Exp;
branches;
next	;

1.2.5.1.2.1
date	97.09.08.17.28.10;	author daveb;	state Exp;
branches;
next	;

1.2.5.1.3.1
date	97.09.09.14.25.38;	author daveb;	state Exp;
branches;
next	;

1.2.6.1
date	97.09.10.19.44.19;	author brucem;	state Exp;
branches;
next	;

1.2.7.1
date	97.09.11.21.11.40;	author daveb;	state Exp;
branches;
next	;

1.2.8.1
date	99.04.01.18.09.39;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Parameterise on target word size
@


1.2
log
@[Bug #1614]
basifying String
@
text
@(* _bignumsize.sml the functor *)
(*
   Integer arithmetic to given size.

$Log: _bignumsize.sml,v $
 * Revision 1.1  1995/08/14  16:07:36  jont
 * new unit
 * Parameterise on target word size
 *

Copyright (c) 1995 Harlequin Ltd.
*)

require "crash";
require "bignum";
require "_bignum";

functor BigNumSize
  (structure Crash  : CRASH
   structure BigNum : BIGNUM
   val bits_per_word : int
     ) : BIGNUM =
struct
  fun power(acc, base, index) =
    if index <= 0 then acc else power(BigNum.*(acc, base), base, index-1)

  val bignum_one = BigNum.int_to_bignum 1
  val intpower = power(bignum_one, BigNum.int_to_bignum 2, bits_per_word-1)
  val largest_int =
    BigNum.bignum_to_string(BigNum.-(intpower, bignum_one))
  val smallest_int = BigNum.bignum_to_string(BigNum.~ intpower)
  val largest_word =
    BigNum.bignum_to_string
    (BigNum.-(BigNum.*(intpower, BigNum.int_to_bignum 2), bignum_one))

  structure BigNumSize = BigNumFun
    (structure Crash = Crash
     val check_range = true
     val smallest_int = smallest_int
     val largest_int = largest_int
     val largest_word = largest_word)

  open BigNumSize

end
@


1.2.8.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a5 4
 * Revision 1.2  1996/10/05  14:13:57  io
 * [Bug #1614]
 * basifying String
 *
@


1.2.7.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a5 4
 * Revision 1.2  1996/10/05  14:13:57  io
 * [Bug #1614]
 * basifying String
 *
@


1.2.6.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a5 4
 * Revision 1.2  1996/10/05  14:13:57  io
 * [Bug #1614]
 * basifying String
 *
@


1.2.5.1
log
@branched from 1.2
@
text
@a5 4
 * Revision 1.2  1996/10/05  14:13:57  io
 * [Bug #1614]
 * basifying String
 *
@


1.2.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.2.5.1  1997/05/12  10:53:30  hope
 * branched from 1.2
 *
@


1.2.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.2.5.1  1997/05/12  10:53:30  hope
 * branched from 1.2
 *
@


1.2.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.2.5.1  1997/05/12  10:53:30  hope
 * branched from 1.2
 *
@


1.2.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 * Revision 1.2.5.1.1.1  1997/07/28  18:35:37  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.2.4.1
log
@branched from 1.2
@
text
@a5 4
 * Revision 1.2  1996/10/05  14:13:57  io
 * [Bug #1614]
 * basifying String
 *
@


1.2.3.1
log
@branched from 1.2
@
text
@a5 4
 * Revision 1.2  1996/10/05  14:13:57  io
 * [Bug #1614]
 * basifying String
 *
@


1.2.3.1.1.1
log
@branched from 1.2.3.1
@
text
@a5 3
 * Revision 1.2.3.1  1996/12/17  18:19:32  hope
 * branched from 1.2
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a5 4
 * Revision 1.2  1996/10/05  14:13:57  io
 * [Bug #1614]
 * basifying String
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a5 4
 * Revision 1.2  1996/10/05  14:13:57  io
 * [Bug #1614]
 * basifying String
 *
@


1.2.1.1.1.1
log
@branched from 1.2.1.1
@
text
@a5 3
 * Revision 1.2.1.1  1996/11/14  13:23:30  hope
 * branched from 1.2
 *
@


1.1
log
@new unit
Parameterise on target word size
@
text
@d5 5
a9 1
$Log$
a14 1
require "lists";
a19 1
   structure Lists  : LISTS
a37 1
     structure Lists = Lists
@


1.1.3.1
log
@branched from 1.1
@
text
@d5 1
a5 5
$Log: _bignumsize.sml,v $
 * Revision 1.1  1995/08/14  16:07:36  jont
 * new unit
 * Parameterise on target word size
 *
@


1.1.2.1
log
@branched from 1.1
@
text
@d5 1
a5 5
$Log: _bignumsize.sml,v $
 * Revision 1.1  1995/08/14  16:07:36  jont
 * new unit
 * Parameterise on target word size
 *
@


1.1.1.1
log
@branched from 1.1
@
text
@d5 1
a5 5
$Log: _bignumsize.sml,v $
 * Revision 1.1  1995/08/14  16:07:36  jont
 * new unit
 * Parameterise on target word size
 *
@
