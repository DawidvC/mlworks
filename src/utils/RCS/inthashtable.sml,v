head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.3
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.3.7.1.1.1.1
	MLWorks_workspace_97:1.4.2
	MLWorks_dt_wizard:1.4.1
	MLWorks_11c0_1997_09_09:1.3.7.1.1.1
	MLWorks_10r3:1.3.7.1.3
	MLWorks_10r2_551:1.3.7.1.2
	MLWorks_11:1.3.7.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.7.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.3.7.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.7.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.7
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.5.1.1
	MLWorks_gui_1996_12_18:1.3.6
	MLWorks_1_0_Win32_1996_12_17:1.3.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.3.1
	MLWorks_1_0_Irix_1996_11_28:1.3.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.4
	MLWorks_1_0_Unix_1996_11_14:1.3.3
	MLWorks_Open_Beta2_1996_10_11:1.3.2
	MLWorks_License_dev:1.3.1
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ * @;


1.4
date	97.05.01.12.57.49;	author jont;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1;
next	1.3;

1.3
date	96.10.03.09.36.40;	author matthew;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1;
next	1.2;

1.2
date	95.01.03.16.48.06;	author matthew;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	94.09.23.14.49.21;	author matthew;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.43.18;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	96.10.07.16.36.29;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.17.11.55.30;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.11.14.13.23.52;	author hope;	state Exp;
branches
	1.3.3.1.1.1;
next	;

1.3.3.1.1.1
date	96.11.28.15.34.29;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.22.18.40.56;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.12.17.18.19.54;	author hope;	state Exp;
branches
	1.3.5.1.1.1;
next	;

1.3.5.1.1.1
date	97.02.24.12.14.20;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.18.10.15.25;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	97.05.12.10.53.41;	author hope;	state Exp;
branches
	1.3.7.1.1.1
	1.3.7.1.2.1
	1.3.7.1.3.1;
next	;

1.3.7.1.1.1
date	97.07.28.18.36.28;	author daveb;	state Exp;
branches
	1.3.7.1.1.1.1.1;
next	;

1.3.7.1.1.1.1.1
date	97.10.07.12.01.40;	author jkbrook;	state Exp;
branches;
next	;

1.3.7.1.2.1
date	97.09.08.17.28.42;	author daveb;	state Exp;
branches;
next	;

1.3.7.1.3.1
date	97.09.09.14.26.30;	author daveb;	state Exp;
branches;
next	;

1.4.1.1
date	97.09.10.19.44.44;	author brucem;	state Exp;
branches;
next	;

1.4.2.1
date	97.09.11.21.11.58;	author daveb;	state Exp;
branches;
next	;

1.4.3.1
date	99.04.01.18.10.11;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.4
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@(* inthashtable the signature *)
(*
$Log: inthashtable.sml,v $
 * Revision 1.3  1996/10/03  09:36:40  matthew
 * Generalizing type of map
 *
 * Revision 1.2  1995/01/03  16:48:06  matthew
 * Sorting out type names
 *
 * Revision 1.1  1994/09/23  14:49:21  matthew
 * new file
 *
 * Copyright (c) 1994 Harlequin Ltd.
 *)

signature INTHASHTABLE =
  sig
    type '_a T
    exception Lookup 
    val new     : int -> '_a T
    val lookup  : ('_a T * int) -> '_a
    val lookup_default  : ('_a T * '_a * int) -> '_a
    val tryLookup : ('_a T * int) -> '_a option
    val is_defined : ('_a T * int) -> bool
    val update  : ('_a T * int * '_a) -> unit
    val delete  : ('_a T * int) -> unit
    val to_list : '_a T -> (int * '_a) list
    val copy    : '_a T -> '_a T
    val map     : (int * '_a -> '_b) -> '_a T -> '_b T
    val fold    : ('b * int * '_a -> 'b) -> ('b * '_a T) -> 'b
    val iterate : (int * '_a -> unit) -> '_a T -> unit
    val stats : '_a T -> {size:int, count:int, smallest:int, largest:int}
    val print_stats : '_a T -> unit
  end
@


1.4.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.4  1997/05/01  12:57:49  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.4.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.4  1997/05/01  12:57:49  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.4.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.4  1997/05/01  12:57:49  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.3
log
@Generalizing type of map
@
text
@d4 3
d10 5
a14 6
# Revision 1.1  1994/09/23  14:49:21  matthew
# new file
#

Copyright (c) 1994 Harlequin Ltd.
*)
d23 1
a23 1
    val tryLookup : ('_a T * int) -> '_a MLWorks.Option.option
@


1.3.7.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/10/03  09:36:40  matthew
 * Generalizing type of map
 *
@


1.3.7.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.3.7.1  1997/05/12  10:53:41  hope
 * branched from 1.3
 *
@


1.3.7.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.3.7.1  1997/05/12  10:53:41  hope
 * branched from 1.3
 *
@


1.3.7.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.3.7.1  1997/05/12  10:53:41  hope
 * branched from 1.3
 *
@


1.3.7.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.3.7.1.1.1  1997/07/28  18:36:28  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/10/03  09:36:40  matthew
 * Generalizing type of map
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/10/03  09:36:40  matthew
 * Generalizing type of map
 *
@


1.3.5.1.1.1
log
@branched from 1.3.5.1
@
text
@a3 3
 * Revision 1.3.5.1  1996/12/17  18:19:54  hope
 * branched from 1.3
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/10/03  09:36:40  matthew
 * Generalizing type of map
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/10/03  09:36:40  matthew
 * Generalizing type of map
 *
@


1.3.3.1.1.1
log
@branched from 1.3.3.1
@
text
@a3 3
 * Revision 1.3.3.1  1996/11/14  13:23:52  hope
 * branched from 1.3
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/10/03  09:36:40  matthew
 * Generalizing type of map
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a3 3
 * Revision 1.3  1996/10/03  09:36:40  matthew
 * Generalizing type of map
 *
@


1.2
log
@Sorting out type names
@
text
@d4 3
d27 1
a27 1
    val map     : (int * '_a -> '_a) -> '_a T -> '_a T
@


1.2.1.1
log
@branched from 1.2
@
text
@a3 3
 * Revision 1.2  1995/01/03  16:48:06  matthew
 * Sorting out type names
 *
@


1.1
log
@new file
@
text
@d4 3
d25 1
a25 1
    val fold    : ('a * int * '_a -> 'a) -> ('a * '_a T) -> 'a
@
