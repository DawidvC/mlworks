head	1.17;
access;
symbols
	MLWorks_20m1_1997_10_23:1.15
	MLWorks_11r1:1.14.5.1.1.1.1
	MLWorks_workspace_97:1.15.2
	MLWorks_dt_wizard:1.15.1
	MLWorks_11c0_1997_09_09:1.14.5.1.1.1
	MLWorks_10r3:1.14.5.1.3
	MLWorks_10r2_551:1.14.5.1.2
	MLWorks_11:1.14.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.14.5.1
	MLWorks_20m0_1997_06_20:1.15
	MLWorks_1_0_r2c2_1997_06_14:1.14.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.14.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.14.5
	MLWorks_BugFix_1997_04_24:1.14
	MLWorks_1_0_r2_Win32_1997_04_11:1.14
	MLWorks_1_0_r2_Unix_1997_04_04:1.14
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.14.3.1.1
	MLWorks_gui_1996_12_18:1.14.4
	MLWorks_1_0_Win32_1996_12_17:1.14.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.14.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.14.1.1
	MLWorks_1_0_Irix_1996_11_28:1.14.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.14.2
	MLWorks_1_0_Unix_1996_11_14:1.14.1
	MLWorks_Open_Beta2_1996_10_11:1.12.3
	MLWorks_License_dev:1.12.2
	MLWorks_1_open_beta_1996_09_13:1.12.1
	MLWorks_Open_Beta_1996_08_22:1.12
	MLWorks_Beta_1996_07_02:1.12
	MLWorks_Beta_1996_06_07:1.12
	MLWorks_Beta_1996_06_06:1.12
	MLWorks_Beta_1996_06_05:1.12
	MLWorks_Beta_1996_06_03:1.12
	MLWorks_Beta_1996_05_31:1.12
	MLWorks_Beta_1996_05_30:1.12
	ML_beta_release_12/08/94:1.9
	ML_beta_release_03/08/94:1.9
	ML_revised_beta_release_25/05/94:1.8
	ML_final_beta_release_02/03/94:1.7
	mlworks-28-01-1994:1.7
	Release:1.6
	mlworks-beta-01-09-1993:1.6
	MLWorks-1-0-4-29/01/1993:1.6
	MLWorks-1-0-3-21/12/1992:1.6
	MLWorks-1-0-2-15/12/1992:1.6
	MLWorks-1-0-1-04/12/1992:1.6
	checkpoint_17_08_92:1.4;
locks; strict;
comment	@ * @;


1.17
date	97.11.13.11.22.12;	author jont;	state Exp;
branches;
next	1.16;

1.16
date	97.11.08.17.52.06;	author jont;	state Exp;
branches;
next	1.15;

1.15
date	97.05.19.13.05.42;	author jont;	state Exp;
branches
	1.15.1.1
	1.15.2.1;
next	1.14;

1.14
date	96.11.06.10.53.38;	author matthew;	state Exp;
branches
	1.14.1.1
	1.14.2.1
	1.14.3.1
	1.14.4.1
	1.14.5.1;
next	1.13;

1.13
date	96.10.28.14.00.20;	author io;	state Exp;
branches;
next	1.12;

1.12
date	96.04.30.17.44.40;	author jont;	state Exp;
branches
	1.12.1.1
	1.12.2.1
	1.12.3.1;
next	1.11;

1.11
date	96.04.29.13.12.15;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	96.01.16.12.17.20;	author nickb;	state Exp;
branches;
next	1.9;

1.9
date	94.07.15.10.08.11;	author nickh;	state Exp;
branches;
next	1.8;

1.8
date	94.03.03.15.22.26;	author nickh;	state Exp;
branches;
next	1.7;

1.7
date	93.11.15.16.54.58;	author nickh;	state Exp;
branches;
next	1.6;

1.6
date	92.10.28.13.00.52;	author richard;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	92.08.26.14.55.43;	author richard;	state Exp;
branches;
next	1.4;

1.4
date	92.08.10.15.35.03;	author davidt;	state Exp;
branches;
next	1.3;

1.3
date	92.08.07.15.12.28;	author davidt;	state Exp;
branches;
next	1.2;

1.2
date	92.05.15.14.08.33;	author clive;	state Exp;
branches;
next	1.1;

1.1
date	92.01.31.12.26.58;	author clive;	state Exp;
branches;
next	;

1.6.1.1
date	92.10.28.13.00.52;	author jont;	state Exp;
branches;
next	;

1.12.1.1
date	96.09.13.11.42.57;	author hope;	state Exp;
branches;
next	;

1.12.2.1
date	96.10.07.16.36.07;	author hope;	state Exp;
branches;
next	;

1.12.3.1
date	96.10.17.11.55.09;	author hope;	state Exp;
branches;
next	;

1.14.1.1
date	96.11.14.13.23.31;	author hope;	state Exp;
branches
	1.14.1.1.1.1;
next	;

1.14.1.1.1.1
date	96.11.28.15.34.06;	author hope;	state Exp;
branches;
next	;

1.14.2.1
date	96.11.22.18.40.35;	author hope;	state Exp;
branches;
next	;

1.14.3.1
date	96.12.17.18.19.34;	author hope;	state Exp;
branches
	1.14.3.1.1.1;
next	;

1.14.3.1.1.1
date	97.02.24.12.13.55;	author hope;	state Exp;
branches;
next	;

1.14.4.1
date	96.12.18.10.15.01;	author hope;	state Exp;
branches;
next	;

1.14.5.1
date	97.05.12.10.53.06;	author hope;	state Exp;
branches
	1.14.5.1.1.1
	1.14.5.1.2.1
	1.14.5.1.3.1;
next	;

1.14.5.1.1.1
date	97.07.28.18.36.18;	author daveb;	state Exp;
branches
	1.14.5.1.1.1.1.1;
next	;

1.14.5.1.1.1.1.1
date	97.10.07.12.01.34;	author jkbrook;	state Exp;
branches;
next	;

1.14.5.1.2.1
date	97.09.08.17.28.36;	author daveb;	state Exp;
branches;
next	;

1.14.5.1.3.1
date	97.09.09.14.26.19;	author daveb;	state Exp;
branches;
next	;

1.15.1.1
date	97.09.10.19.44.21;	author brucem;	state Exp;
branches;
next	;

1.15.2.1
date	97.09.11.21.11.42;	author daveb;	state Exp;
branches;
next	;


desc
@Timing utilities
@


1.17
log
@[Bug #30089]
Modify TIMER (from utils) to be INTERNAL_TIMER to keep bootstrap happy
@
text
@(* __timer.sml the structure *)

(*
$Log: __timer.sml,v $
 * Revision 1.16  1997/11/08  17:52:06  jont
 * [Bug #30089]
 * Convert to use basis timer
 *
 * Revision 1.15  1997/05/19  13:05:42  jont
 * [Bug #30090]
 * Translate output std_out to print
 *
 * Revision 1.14  1996/11/06  10:53:38  matthew
 * [Bug #1728]
 * __integer becomes __int
 *
 * Revision 1.13  1996/10/28  14:00:20  io
 * [Bug #1614]
 * basifying String
 *
 * Revision 1.12  1996/04/30  17:44:40  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
 * Revision 1.11  1996/04/29  13:12:15  matthew
 * Removed MLWorks.Integer
 *
 * Revision 1.10  1996/01/16  12:17:20  nickb
 * Change to StorageManager interface.
 *
Revision 1.9  1994/07/15  10:08:11  nickh
Add simple allocation statistics.

Revision 1.8  1994/03/03  15:22:26  nickh
Don't call elapsed if not printing a report.

Revision 1.7  1993/11/15  16:54:58  nickh
New pervasive time structure.
(makes this stuff run faster).

Revision 1.6  1992/10/28  13:00:52  richard
Changes to pervasives and representation of time.

Revision 1.5  1992/08/26  14:55:43  richard
Rationalisation of the MLWorks structure.

Revision 1.4  1992/08/10  15:35:03  davidt
Changed MLworks structure to MLWorks

Revision 1.3  1992/08/07  15:12:28  davidt
Now uses MLworks structure instead of NewJersey structure.

Revision 1.2  1992/05/15  14:08:33  clive
Adjusted to make it work with our system

Revision 1.1  1992/01/31  12:26:58  clive
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

require "timer";
require "^.basis.__int";
require "^.basis.__timer";
require "^.system.__time";

structure Timer_ : INTERNAL_TIMER =
  struct

    structure M = MLWorks.Internal.Runtime.Memory
    structure V = MLWorks.Internal.Value

    fun xtime (s, flag, f) =
      if flag then
	let
	  val cpu_timer = Timer.startCPUTimer()
	  val real_timer = Timer.startRealTimer()
	  val (initcollects,initbytes) = M.collections()
	  fun print_time () =
	    let
	      val {usr, sys, gc} = Timer.checkCPUTimer cpu_timer
	      val real_elapsed = Timer.checkRealTimer real_timer
	      val (finalcollects, finalbytes) = M.collections()
	      val bytes = finalbytes-initbytes
	      val coll = finalcollects - initcollects
	      val (showcoll,showbytes) =
		if bytes > 0 then (coll,bytes) else
		  (coll-1,bytes+1048576)
	    in
	      print(concat ["Time for ", s, " : ",
			    Time.toString real_elapsed,
			    " (user: ",
			    Time.toString usr,
			    ", system: ",
			    Time.toString sys,
			    ", gc: ",
			    Time.toString gc,
			    ")",
			    " allocated: (",
			    Int.toString showcoll,
			    ", ",
			    Int.toString showbytes,
			    ")\n"])
	    end
	  val result = f () handle exn => (print_time ();
					   raise exn)
	in
	  (print_time ();
	   result)
	end
      else
	f ()

    fun time_it (a, b) = xtime (a, true, b)

  end
@


1.16
log
@[Bug #30089]
Convert to use basis timer
@
text
@d5 4
d69 1
a69 1
structure Timer_ : TIMER =
@


1.15
log
@[Bug #30090]
Translate output std_out to print
@
text
@d5 4
d62 2
a67 1
    structure E = MLWorks.Time.Elapsed
d71 1
a71 1
    fun xtime (s, flag, f) = 
d74 2
a75 1
	  val start = E.elapsed ()
d78 9
a86 7
	    let val elapsed = E.elapsed_since start
	        val (finalcollects, finalbytes) = M.collections()
		val bytes = finalbytes-initbytes
		val coll = finalcollects - initcollects
		val (showcoll,showbytes) =
		  if bytes > 0 then (coll,bytes) else
		    (coll-1,bytes+1048576)
d89 8
a96 1
			    E.format elapsed,
@


1.15.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a4 4
 * Revision 1.15  1997/05/19  13:05:42  jont
 * [Bug #30090]
 * Translate output std_out to print
 *
@


1.15.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a4 4
 * Revision 1.15  1997/05/19  13:05:42  jont
 * [Bug #30090]
 * Translate output std_out to print
 *
@


1.14
log
@[Bug #1728]
__integer becomes __int
@
text
@d5 4
d80 7
a86 8
	      MLWorks.IO.output(MLWorks.IO.std_out,
				concat ["Time for ", s, " : ",
					E.format elapsed,
					" allocated: (",
					Int.toString showcoll,
					", ",
					Int.toString showbytes,
					")\n"])
@


1.14.5.1
log
@branched from 1.14
@
text
@a4 4
 * Revision 1.14  1996/11/06  10:53:38  matthew
 * [Bug #1728]
 * __integer becomes __int
 *
@


1.14.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a4 3
 * Revision 1.14.5.1  1997/05/12  10:53:06  hope
 * branched from 1.14
 *
@


1.14.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a4 3
 * Revision 1.14.5.1  1997/05/12  10:53:06  hope
 * branched from 1.14
 *
@


1.14.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a4 3
 * Revision 1.14.5.1  1997/05/12  10:53:06  hope
 * branched from 1.14
 *
@


1.14.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a4 3
 * Revision 1.14.5.1.1.1  1997/07/28  18:36:18  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.14.4.1
log
@branched from 1.14
@
text
@a4 4
 * Revision 1.14  1996/11/06  10:53:38  matthew
 * [Bug #1728]
 * __integer becomes __int
 *
@


1.14.3.1
log
@branched from 1.14
@
text
@a4 4
 * Revision 1.14  1996/11/06  10:53:38  matthew
 * [Bug #1728]
 * __integer becomes __int
 *
@


1.14.3.1.1.1
log
@branched from 1.14.3.1
@
text
@a4 3
 * Revision 1.14.3.1  1996/12/17  18:19:34  hope
 * branched from 1.14
 *
@


1.14.2.1
log
@branched from 1.14
@
text
@a4 4
 * Revision 1.14  1996/11/06  10:53:38  matthew
 * [Bug #1728]
 * __integer becomes __int
 *
@


1.14.1.1
log
@branched from 1.14
@
text
@a4 4
 * Revision 1.14  1996/11/06  10:53:38  matthew
 * [Bug #1728]
 * __integer becomes __int
 *
@


1.14.1.1.1.1
log
@branched from 1.14.1.1
@
text
@a4 3
 * Revision 1.14.1.1  1996/11/14  13:23:31  hope
 * branched from 1.14
 *
@


1.13
log
@[Bug #1614]
basifying String
@
text
@d5 4
d53 1
a53 1
require "^.basis.__integer";
@


1.12
log
@String functions explode, implode, chr and ord now only available from String
io functions and types
instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
now only available from MLWorks.IO
@
text
@d5 6
d49 1
a49 1
require "../basis/__integer";
d73 7
a79 7
		     String.implode ["Time for ", s, " : ",
			      E.format elapsed,
			      " allocated: (",
			      Int.toString showcoll,
			      ", ",
			      Int.toString showbytes,
			      ")\n"])
@


1.12.3.1
log
@branched from 1.12
@
text
@a4 6
 * Revision 1.12  1996/04/30  17:44:40  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.12.2.1
log
@branched from 1.12
@
text
@a4 6
 * Revision 1.12  1996/04/30  17:44:40  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.12.1.1
log
@branched from 1.12
@
text
@a4 6
 * Revision 1.12  1996/04/30  17:44:40  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.11
log
@Removed MLWorks.Integer
@
text
@d5 3
d66 2
a67 2
	      output(std_out,
		     implode ["Time for ", s, " : ",
@


1.10
log
@Change to StorageManager interface.
@
text
@d5 3
d40 1
d67 1
a67 1
			      MLWorks.Integer.makestring showcoll,
d69 1
a69 1
			      MLWorks.Integer.makestring showbytes,
@


1.9
log
@Add simple allocation statistics.
@
text
@d5 3
d42 1
a42 1
    structure S = MLWorks.Internal.Runtime.StorageManager
d49 1
a49 2
	  val (initcollects,initbytes) : (int * int) =
	    V.cast(S.interface(110,()));
d52 1
a52 2
	        val (finalcollects, finalbytes) : (int * int) =
		  V.cast(S.interface(110,()))
@


1.8
log
@Don't call elapsed if not printing a report.
@
text
@d5 3
d39 2
d46 2
d50 7
d61 5
a65 1
			      "\n"])
@


1.7
log
@New pervasive time structure.
(makes this stuff run faster).
@
text
@d5 4
d38 4
a41 5
      let
	val start = E.elapsed ()

        fun print_time () =
          if flag then 
d45 12
a56 12
                   implode ["Time for ", s, " : ",
			    E.format elapsed,
			    "\n"])
	      end
          else
            ()

        val result = 
          f () handle exn => (print_time () ; raise exn)
      in
        (print_time () ; result)
      end
@


1.6
log
@Changes to pervasives and representation of time.
@
text
@d5 3
d31 1
a31 1
    structure T = MLWorks.Time.Virtual
d35 1
a35 3
        val user = T.user ()
        val system = T.system ()
        val gc = T.gc ()
d39 7
a45 5
            output(std_out,
                   implode ["Time for ", s, " : ", T.format (T.- (T.user(), user)),
                            " (gc : ", T.format (T.- (T.gc (), gc)),
                            " sys : ", T.format (T.- (T.system (), system)),
                            ")\n"])
@


1.6.1.1
log
@Fork for bug fixing
@
text
@a4 3
Revision 1.6  1992/10/28  13:00:52  richard
Changes to pervasives and representation of time.

@


1.5
log
@Rationalisation of the MLWorks structure.
@
text
@d5 3
d26 1
a26 27
struct
  fun do_timing (s,flag,f) = 
    let 
      val timer = MLWorks.Internal.Timer.start_timer () 
	
      fun print_time () =
        if flag
          then 
            let 
              val time = MLWorks.Internal.Timer.makestring(MLWorks.Internal.Timer.check_timer timer)
              val gc_time =
                MLWorks.Internal.Timer.makestring(MLWorks.Internal.Timer.check_timer_gc timer)
              val sys_time =
                MLWorks.Internal.Timer.makestring(MLWorks.Internal.Timer.check_timer_sys timer)
            in
              output(std_out, ("Time for "^s^" : " ^ time ^
                               " (gc : " ^ gc_time ^ 
                               " sys : " ^ sys_time ^ ")")) 
            end
        else
          ()
      
      val result = 
	f () handle exn => (print_time () ; raise exn)
    in
      (print_time () ; result)
    end
d28 1
a28 9
  fun xtime (a,b,c) =
    (let 
      val res = do_timing(a,b,c) 
    in
       if b then output(std_out,"\n") else () ; 
         res
    end ) 
       handle exn => (if b then output(std_out,"\n") else () ; 
                      raise exn)
d30 5
a34 2
  fun time_it (a,b) = xtime(a,true,b)
end;
d36 19
@


1.4
log
@Changed MLworks structure to MLWorks
@
text
@d5 3
d26 1
a26 1
      val timer = MLWorks.Timer.start_timer () 
d32 1
a32 1
              val time = MLWorks.Timer.makestring(MLWorks.Timer.check_timer timer)
d34 1
a34 1
                MLWorks.Timer.makestring(MLWorks.Timer.check_timer_gc timer)
d36 1
a36 1
                MLWorks.Timer.makestring(MLWorks.Timer.check_timer_sys timer)
@


1.3
log
@Now uses MLworks structure instead of NewJersey structure.
@
text
@d5 3
d23 1
a23 1
      val timer = MLworks.Timer.start_timer () 
d29 1
a29 1
              val time = MLworks.Timer.makestring(MLworks.Timer.check_timer timer)
d31 1
a31 1
                MLworks.Timer.makestring(MLworks.Timer.check_timer_gc timer)
d33 1
a33 1
                MLworks.Timer.makestring(MLworks.Timer.check_timer_sys timer)
@


1.2
log
@Adjusted to make it work with our system
@
text
@d5 3
d20 1
a20 1
      val timer = NewJersey.System.Timer.start_timer () 
d26 1
a26 1
              val time = NewJersey.System.Timer.makestring(NewJersey.System.Timer.check_timer timer)
d28 1
a28 1
                NewJersey.System.Timer.makestring(NewJersey.System.Timer.check_timer_gc timer)
d30 1
a30 1
                NewJersey.System.Timer.makestring(NewJersey.System.Timer.check_timer_sys timer)
d56 1
a57 1
end
@


1.1
log
@Initial revision
@
text
@d4 4
a7 1
$Log$
d17 1
a17 1
      val timer = System.Timer.start_timer () 
d23 1
a23 1
              val time = System.Timer.makestring(System.Timer.check_timer timer)
d25 1
a25 1
                System.Timer.makestring(System.Timer.check_timer_gc timer)
d27 1
a27 1
                System.Timer.makestring(System.Timer.check_timer_sys timer)
@
