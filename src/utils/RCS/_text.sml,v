head	1.4;
access;
symbols
	MLW_daveb_inline_1_4_99:1.4.3
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.3.8.1.1.1.1
	MLWorks_workspace_97:1.4.2
	MLWorks_dt_wizard:1.4.1
	MLWorks_11c0_1997_09_09:1.3.8.1.1.1
	MLWorks_10r3:1.3.8.1.3
	MLWorks_10r2_551:1.3.8.1.2
	MLWorks_11:1.3.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.8.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.3.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.8
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.6.1.1
	MLWorks_gui_1996_12_18:1.3.7
	MLWorks_1_0_Win32_1996_12_17:1.3.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3
	ML_beta_release_12/08/94:1.2
	ML_beta_release_03/08/94:1.2
	ML_revised_beta_release_25/05/94:1.2
	ML_final_beta_release_02/03/94:1.2
	mlworks-28-01-1994:1.2
	Release:1.2
	mlworks-beta-01-09-1993:1.2
	MLWorks-1-0-4-29/01/1993:1.1
	MLWorks-1-0-3-21/12/1992:1.1
	MLWorks-1-0-2-15/12/1992:1.1
	MLWorks-1-0-1-04/12/1992:1.1
	checkpoint_17_08_92:1.1;
locks; strict;
comment	@ * @;


1.4
date	97.05.21.17.24.52;	author jont;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1;
next	1.3;

1.3
date	96.04.30.14.23.25;	author jont;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1;
next	1.2;

1.2
date	93.08.13.08.39.49;	author daveb;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	92.02.11.11.40.11;	author richard;	state Exp;
branches;
next	;

1.2.1.1
date	93.08.13.08.39.49;	author jont;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.43.27;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.36.38;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.55.39;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.13.24.01;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.15.34.39;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.41.07;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.18.20.04;	author hope;	state Exp;
branches
	1.3.6.1.1.1;
next	;

1.3.6.1.1.1
date	97.02.24.12.14.30;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.18.10.15.34;	author hope;	state Exp;
branches;
next	;

1.3.8.1
date	97.05.12.10.53.23;	author hope;	state Exp;
branches
	1.3.8.1.1.1
	1.3.8.1.2.1
	1.3.8.1.3.1;
next	;

1.3.8.1.1.1
date	97.07.28.18.36.34;	author daveb;	state Exp;
branches
	1.3.8.1.1.1.1.1;
next	;

1.3.8.1.1.1.1.1
date	97.10.07.12.01.45;	author jkbrook;	state Exp;
branches;
next	;

1.3.8.1.2.1
date	97.09.08.17.28.47;	author daveb;	state Exp;
branches;
next	;

1.3.8.1.3.1
date	97.09.09.14.26.37;	author daveb;	state Exp;
branches;
next	;

1.4.1.1
date	97.09.10.19.44.57;	author brucem;	state Exp;
branches;
next	;

1.4.2.1
date	97.09.11.21.12.09;	author daveb;	state Exp;
branches;
next	;

1.4.3.1
date	99.04.01.18.10.14;	author daveb;	state Exp;
branches;
next	;


desc
@Text type functor.
@


1.4
log
@[Bug #30090]
Replace MLWorks.IO with TextIO where applicable
@
text
@(*  ==== TEXT TYPE ====
 *        FUNCTOR
 *
 *  Copyright (C) 1992 Harlequin Ltd
 *
 *  Implementation
 *  --------------
 *  The text type is very simple: it's constructors are the exported
 *  functions for building it, so no real computation is done when
 *  making one out of small strings.  The output function traverses the
 *  data structure in order, sending the strings to the outstream one
 *  after the other.  Simple.
 *
 *  Revision Log
 *  ------------
 *  $Log: _text.sml,v $
 * Revision 1.3  1996/04/30  14:23:25  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
 * Revision 1.2  1993/08/13  08:39:49  daveb
 * Removed spurious ".sml" from require declaration.
 *
 *  Revision 1.1  1992/02/11  11:40:11  richard
 *  Initial revision
 *
 *)

require "../basis/__text_io";

require "lists";
require "text";

functor Text (

  structure Lists	: LISTS

) : TEXT =

  struct

    datatype T =
      concatenate of T * T
    | from_list   of string list
    | from_string of string

    local

      fun output' (stream, concatenate (left, right)) =
          (output' (stream, left); output' (stream, right))
        | output' (stream, from_list list) =
          Lists.iterate (fn string => TextIO.output (stream, string)) list
        | output' (stream, from_string string) =
          TextIO.output (stream, string)

    in

      val output = output'

    end

  end
@


1.4.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a16 4
 * Revision 1.4  1997/05/21  17:24:52  jont
 * [Bug #30090]
 * Replace MLWorks.IO with TextIO where applicable
 *
@


1.4.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a16 4
 * Revision 1.4  1997/05/21  17:24:52  jont
 * [Bug #30090]
 * Replace MLWorks.IO with TextIO where applicable
 *
@


1.4.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a16 4
 * Revision 1.4  1997/05/21  17:24:52  jont
 * [Bug #30090]
 * Replace MLWorks.IO with TextIO where applicable
 *
@


1.3
log
@String functions explode, implode, chr and ord now only available from String
io functions and types
instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
now only available from MLWorks.IO
@
text
@d17 6
d31 2
d54 1
a54 1
          Lists.iterate (fn string => MLWorks.IO.output (stream, string)) list
d56 1
a56 1
          MLWorks.IO.output (stream, string)
@


1.3.8.1
log
@branched from 1.3
@
text
@a16 6
 * Revision 1.3  1996/04/30  14:23:25  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.3.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a16 3
 * Revision 1.3.8.1  1997/05/12  10:53:23  hope
 * branched from 1.3
 *
@


1.3.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a16 3
 * Revision 1.3.8.1  1997/05/12  10:53:23  hope
 * branched from 1.3
 *
@


1.3.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a16 3
 * Revision 1.3.8.1  1997/05/12  10:53:23  hope
 * branched from 1.3
 *
@


1.3.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a16 3
 * Revision 1.3.8.1.1.1  1997/07/28  18:36:34  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3.7.1
log
@branched from 1.3
@
text
@a16 6
 * Revision 1.3  1996/04/30  14:23:25  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a16 6
 * Revision 1.3  1996/04/30  14:23:25  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.3.6.1.1.1
log
@branched from 1.3.6.1
@
text
@a16 3
 * Revision 1.3.6.1  1996/12/17  18:20:04  hope
 * branched from 1.3
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a16 6
 * Revision 1.3  1996/04/30  14:23:25  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a16 6
 * Revision 1.3  1996/04/30  14:23:25  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a16 3
 * Revision 1.3.4.1  1996/11/14  13:24:01  hope
 * branched from 1.3
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a16 6
 * Revision 1.3  1996/04/30  14:23:25  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a16 6
 * Revision 1.3  1996/04/30  14:23:25  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a16 6
 * Revision 1.3  1996/04/30  14:23:25  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.2
log
@Removed spurious ".sml" from require declaration.
@
text
@d17 3
d46 1
a46 1
          Lists.iterate (fn string => output (stream, string)) list
d48 1
a48 1
          output (stream, string)
@


1.2.1.1
log
@Fork for bug fixing
@
text
@a16 3
 *  Revision 1.2  1993/08/13  08:39:49  daveb
 *  Removed spurious ".sml" from require declaration.
 *
@


1.1
log
@Initial revision
@
text
@d16 4
a19 1
 *  $Log$
d22 1
a22 1
require "lists.sml";
@
