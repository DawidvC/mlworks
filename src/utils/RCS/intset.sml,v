head	1.6;
access;
symbols
	MLW_daveb_inline_1_4_99:1.6.11
	MLWorks_21c0_1999_03_25:1.6
	MLWorks_20c1_1998_08_20:1.6
	MLWorks_20c0_1998_08_04:1.6
	MLWorks_20b2c2_1998_06_19:1.6
	MLWorks_20b2_Windows_1998_06_12:1.6
	MLWorks_20b1c1_1998_05_07:1.6
	MLWorks_20b0_1998_04_07:1.6
	MLWorks_20b0_1998_03_20:1.6
	MLWorks_20m2_1998_02_16:1.6
	MLWorks_20m1_1997_10_23:1.6
	MLWorks_11r1:1.6.8.1.1.1.1
	MLWorks_workspace_97:1.6.10
	MLWorks_dt_wizard:1.6.9
	MLWorks_11c0_1997_09_09:1.6.8.1.1.1
	MLWorks_10r3:1.6.8.1.3
	MLWorks_10r2_551:1.6.8.1.2
	MLWorks_11:1.6.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.8.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.6.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.8
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.6.6.1.1
	MLWorks_gui_1996_12_18:1.6.7
	MLWorks_1_0_Win32_1996_12_17:1.6.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.6.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.6.4.1
	MLWorks_1_0_Irix_1996_11_28:1.6.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.6.5
	MLWorks_1_0_Unix_1996_11_14:1.6.4
	MLWorks_Open_Beta2_1996_10_11:1.6.3
	MLWorks_License_dev:1.6.2
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.6
	MLWorks_Beta_1996_06_07:1.6
	MLWorks_Beta_1996_06_06:1.6
	MLWorks_Beta_1996_06_05:1.6
	MLWorks_Beta_1996_06_03:1.6
	MLWorks_Beta_1996_05_31:1.6
	MLWorks_Beta_1996_05_30:1.6
	ML_beta_release_12/08/94:1.5
	ML_beta_release_03/08/94:1.5
	ML_revised_beta_release_25/05/94:1.5
	ML_final_beta_release_02/03/94:1.5
	mlworks-28-01-1994:1.5
	Release:1.5
	mlworks-beta-01-09-1993:1.5
	MLWorks-1-0-4-29/01/1993:1.5
	MLWorks-1-0-3-21/12/1992:1.5
	MLWorks-1-0-2-15/12/1992:1.5
	MLWorks-1-0-1-04/12/1992:1.5
	checkpoint_17_08_92:1.5;
locks; strict;
comment	@ * @;


1.6
date	96.03.28.10.35.10;	author matthew;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1
	1.6.4.1
	1.6.5.1
	1.6.6.1
	1.6.7.1
	1.6.8.1
	1.6.9.1
	1.6.10.1
	1.6.11.1;
next	1.5;

1.5
date	92.08.04.10.32.50;	author jont;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	92.05.18.13.57.54;	author richard;	state Exp;
branches;
next	1.3;

1.3
date	92.05.05.10.14.24;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	92.02.27.17.33.49;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	92.02.21.13.26.35;	author richard;	state Exp;
branches;
next	;

1.5.1.1
date	92.08.04.10.32.50;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.43.17;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.07.16.36.28;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.10.17.11.55.29;	author hope;	state Exp;
branches;
next	;

1.6.4.1
date	96.11.14.13.23.51;	author hope;	state Exp;
branches
	1.6.4.1.1.1;
next	;

1.6.4.1.1.1
date	96.11.28.15.34.28;	author hope;	state Exp;
branches;
next	;

1.6.5.1
date	96.11.22.18.40.55;	author hope;	state Exp;
branches;
next	;

1.6.6.1
date	96.12.17.18.19.53;	author hope;	state Exp;
branches
	1.6.6.1.1.1;
next	;

1.6.6.1.1.1
date	97.02.24.12.14.19;	author hope;	state Exp;
branches;
next	;

1.6.7.1
date	96.12.18.10.15.24;	author hope;	state Exp;
branches;
next	;

1.6.8.1
date	97.05.12.10.53.16;	author hope;	state Exp;
branches
	1.6.8.1.1.1
	1.6.8.1.2.1
	1.6.8.1.3.1;
next	;

1.6.8.1.1.1
date	97.07.28.18.35.58;	author daveb;	state Exp;
branches
	1.6.8.1.1.1.1.1;
next	;

1.6.8.1.1.1.1.1
date	97.10.07.12.01.21;	author jkbrook;	state Exp;
branches;
next	;

1.6.8.1.2.1
date	97.09.08.17.28.24;	author daveb;	state Exp;
branches;
next	;

1.6.8.1.3.1
date	97.09.09.14.25.59;	author daveb;	state Exp;
branches;
next	;

1.6.9.1
date	97.09.10.19.44.44;	author brucem;	state Exp;
branches;
next	;

1.6.10.1
date	97.09.11.21.11.59;	author daveb;	state Exp;
branches;
next	;

1.6.11.1
date	99.04.01.18.09.49;	author daveb;	state Exp;
branches;
next	;


desc
@Monomorphic Integer Sets
Signature
@


1.6
log
@Adding where type clause
@
text
@(*  ==== INTEGER SET ABSTRACT TYPE ====
 *              SIGNATURE
 *
 *  Copyright (C) 1992 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  This signature describes monomorphic sets of integers with useful
 *  operations thereon.  An efficient implementation of integer sets is
 *  posssible because the special properties of integers.
 *
 *  Revision Log
 *  ------------
 *  $Log: intset.sml,v $
 * Revision 1.5  1992/08/04  10:32:50  jont
 * Removed unnecessary require
 *
 *  Revision 1.4  1992/05/18  13:57:54  richard
 *  Used `include' and `sharing' to specialise the MONOSET signature
 *  rather than copy it.
 *
 *  Revision 1.3  1992/05/05  10:14:24  richard
 *  Added `filter'.
 *
 *  Revision 1.2  1992/02/27  17:33:49  richard
 *  Added `equal', `subset', `reduce', and `iterate'.
 *
 *  Revision 1.1  1992/02/21  13:26:35  richard
 *  Initial revision
 *
 *)


require "monoset";

signature INTSET = MONOSET where type element = int
@


1.6.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a14 3
 * Revision 1.6  1996/03/28  10:35:10  matthew
 * Adding where type clause
 *
@


1.6.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a14 3
 * Revision 1.6  1996/03/28  10:35:10  matthew
 * Adding where type clause
 *
@


1.6.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a14 3
 * Revision 1.6  1996/03/28  10:35:10  matthew
 * Adding where type clause
 *
@


1.6.8.1
log
@branched from 1.6
@
text
@a14 3
 * Revision 1.6  1996/03/28  10:35:10  matthew
 * Adding where type clause
 *
@


1.6.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a14 3
 * Revision 1.6.8.1  1997/05/12  10:53:16  hope
 * branched from 1.6
 *
@


1.6.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a14 3
 * Revision 1.6.8.1  1997/05/12  10:53:16  hope
 * branched from 1.6
 *
@


1.6.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a14 3
 * Revision 1.6.8.1  1997/05/12  10:53:16  hope
 * branched from 1.6
 *
@


1.6.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a14 3
 * Revision 1.6.8.1.1.1  1997/07/28  18:35:58  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.6.7.1
log
@branched from 1.6
@
text
@a14 3
 * Revision 1.6  1996/03/28  10:35:10  matthew
 * Adding where type clause
 *
@


1.6.6.1
log
@branched from 1.6
@
text
@a14 3
 * Revision 1.6  1996/03/28  10:35:10  matthew
 * Adding where type clause
 *
@


1.6.6.1.1.1
log
@branched from 1.6.6.1
@
text
@a14 3
 * Revision 1.6.6.1  1996/12/17  18:19:53  hope
 * branched from 1.6
 *
@


1.6.5.1
log
@branched from 1.6
@
text
@a14 3
 * Revision 1.6  1996/03/28  10:35:10  matthew
 * Adding where type clause
 *
@


1.6.4.1
log
@branched from 1.6
@
text
@a14 3
 * Revision 1.6  1996/03/28  10:35:10  matthew
 * Adding where type clause
 *
@


1.6.4.1.1.1
log
@branched from 1.6.4.1
@
text
@a14 3
 * Revision 1.6.4.1  1996/11/14  13:23:51  hope
 * branched from 1.6
 *
@


1.6.3.1
log
@branched from 1.6
@
text
@a14 3
 * Revision 1.6  1996/03/28  10:35:10  matthew
 * Adding where type clause
 *
@


1.6.2.1
log
@branched from 1.6
@
text
@a14 3
 * Revision 1.6  1996/03/28  10:35:10  matthew
 * Adding where type clause
 *
@


1.6.1.1
log
@branched from 1.6
@
text
@a14 3
 * Revision 1.6  1996/03/28  10:35:10  matthew
 * Adding where type clause
 *
@


1.5
log
@Removed unnecessary require
@
text
@d15 3
d36 1
a36 5
signature INTSET =
  sig
    include MONOSET
    sharing type element = int
  end
@


1.5.1.1
log
@Fork for bug fixing
@
text
@a14 3
 *  Revision 1.5  1992/08/04  10:32:50  jont
 *  Removed unnecessary require
 *
@


1.4
log
@Used `include' and `sharing' to specialise the MONOSET signature
rather than copy it.
@
text
@d15 4
a31 2
require "text";

@


1.3
log
@Added `filter'.
@
text
@d15 3
d27 1
a31 1

d33 2
a34 25

    structure Text	: TEXT

    type T

    val empty		: T
    val singleton	: int -> T
    val add		: T * int -> T
    val remove		: T * int -> T
    val member		: T * int -> bool
    val equal		: T * T -> bool
    val subset		: T * T -> bool
    val intersection	: T * T -> T
    val union		: T * T -> T
    val difference	: T * T -> T
    val cardinality	: T -> int

    val reduce		: ('a * int -> 'a) -> ('a * T) -> 'a
    val iterate		: (int -> unit) -> T -> unit
    val filter		: (int -> bool) -> T -> T

    val to_list		: T -> int list
    val from_list	: int list -> T
    val to_text		: T -> Text.T

@


1.2
log
@Added `equal', `subset', `reduce', and `iterate'.
@
text
@d15 3
d49 1
@


1.1
log
@Initial revision
@
text
@d14 4
a17 1
 *  $Log$
d37 2
d43 3
@
