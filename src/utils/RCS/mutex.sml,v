head	1.2;
access;
symbols
	MLW_daveb_inline_1_4_99:1.2.4
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_11r1:1.2.1.1.1.1.1
	MLWorks_workspace_97:1.2.3
	MLWorks_dt_wizard:1.2.2
	MLWorks_11c0_1997_09_09:1.2.1.1.1.1
	MLWorks_10r3:1.2.1.1.3
	MLWorks_10r2_551:1.2.1.1.2
	MLWorks_11:1.2.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.2.1.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.2.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.2.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.2.1
	MLWorks_BugFix_1997_04_24:1.2
	MLWorks_1_0_r2_Win32_1997_04_11:1.2
	MLWorks_1_0_r2_Unix_1997_04_04:1.2;
locks; strict;
comment	@ *  @;


1.2
date	97.04.03.14.15.47;	author andreww;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1;
next	1.1;

1.1
date	97.01.28.17.25.47;	author andreww;	state Exp;
branches;
next	;

1.2.1.1
date	97.05.12.10.53.53;	author hope;	state Exp;
branches
	1.2.1.1.1.1
	1.2.1.1.2.1
	1.2.1.1.3.1;
next	;

1.2.1.1.1.1
date	97.07.28.18.36.14;	author daveb;	state Exp;
branches
	1.2.1.1.1.1.1.1;
next	;

1.2.1.1.1.1.1.1
date	97.10.07.12.01.31;	author jkbrook;	state Exp;
branches;
next	;

1.2.1.1.2.1
date	97.09.08.17.28.33;	author daveb;	state Exp;
branches;
next	;

1.2.1.1.3.1
date	97.09.09.14.26.15;	author daveb;	state Exp;
branches;
next	;

1.2.2.1
date	97.09.10.19.44.12;	author brucem;	state Exp;
branches;
next	;

1.2.3.1
date	97.09.11.21.11.36;	author daveb;	state Exp;
branches;
next	;

1.2.4.1
date	99.04.01.18.10.02;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
signature for new mutex functionality.
@


1.2
log
@correcting spelling mistake.
@
text
@(*
 * MLWorks mutual exclusion primitives.  The signature.
 *
 * Revision Log:
 * -------------
 * $Log: mutex.sml,v $
 *  Revision 1.1  1997/01/28  17:25:47  andreww
 *  new unit
 *  signature for new mutex functionality.
 *
 *
 *
 * Copyright (C) 1997 Harlequin Ltd.
 *)



signature MUTEX =
sig
  exception Mutex of string
  type mutex
  val newCountingMutex: int -> mutex
  val newBinaryMutex: bool -> mutex
  val test: mutex list -> bool
  val testAndClaim : mutex list -> bool
  val wait: mutex list -> unit
  val signal: mutex list -> unit
  val query: mutex -> MLWorks.Threads.Internal.thread_id list
  val allSleeping: MLWorks.Threads.Internal.thread_id list -> bool
  val cleanUp : unit -> unit
  val critical: mutex list * ('a -> 'b)  -> 'a -> 'b
  val await: mutex list * (unit -> bool) -> unit
end 


         (* newCountingMutex counter
            returns a new counting mutex with initial value counter.

            newBinaryMutex isClaimed
            returns a new binary mutex with initial value isClaimed.

            test l
            returns true if all mutexes are free in l at the time of
            the procedure call, false otherwise.  No blocking.

            testAndClaim l
            like test, but actually claims the mutexes in l if they're
            all available, returning true.  Returns false otherwise.
            No blocking.
           
            wait l
            wait 'til all mutexes are free in l simultaneously

            signal l
            simultaneously signal that all the mutexes in l are free

            query m
            returns list of threads that are waiting on mutex m

            allSleeping l
            Returns true if every thread in l is sleeping simultaneously.
            Used for deadlock detection.

            cleanUp ()
            Kills off all threads except MLWorks' own.


            critical(l,f) a
            wait for mutexes l, apply f to a and return the result
            after signalling l

            await(l,c)
            waits until both every mutex in l is free, and
            condition c() evaluates to true, in which case
            it does *not* release the mutexes.
          *)

@


1.2.4.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a6 3
 *  Revision 1.2  1997/04/03  14:15:47  andreww
 *  correcting spelling mistake.
 *
@


1.2.3.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a6 3
 *  Revision 1.2  1997/04/03  14:15:47  andreww
 *  correcting spelling mistake.
 *
@


1.2.2.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a6 3
 *  Revision 1.2  1997/04/03  14:15:47  andreww
 *  correcting spelling mistake.
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a6 3
 *  Revision 1.2  1997/04/03  14:15:47  andreww
 *  correcting spelling mistake.
 *
@


1.2.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a6 3
 *  Revision 1.2.1.1  1997/05/12  10:53:53  hope
 *  branched from 1.2
 *
@


1.2.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a6 3
 *  Revision 1.2.1.1  1997/05/12  10:53:53  hope
 *  branched from 1.2
 *
@


1.2.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a6 3
 *  Revision 1.2.1.1  1997/05/12  10:53:53  hope
 *  branched from 1.2
 *
@


1.2.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a6 3
 *  Revision 1.2.1.1.1.1  1997/07/28  18:36:14  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.1
log
@new unit
signature for new mutex functionality.
@
text
@d6 5
a10 1
 * $Log:,v$
d62 1
a62 2
            Used for deadlock detection.  Doesn't really belong to this
            structure though, but we've nowhere else to put it.
d75 1
a75 1
            it does *not* realease the mutices.
@
