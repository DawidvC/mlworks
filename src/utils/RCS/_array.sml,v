head	1.3;
access;
symbols
	ML_final_beta_release_02/03/94:1.3
	mlworks-28-01-1994:1.3
	Release:1.3
	mlworks-beta-01-09-1993:1.3
	MLWorks-1-0-4-29/01/1993:1.3
	MLWorks-1-0-3-21/12/1992:1.3
	MLWorks-1-0-2-15/12/1992:1.3
	MLWorks-1-0-1-04/12/1992:1.3
	checkpoint_17_08_92:1.3
	Ten15_release_19-11-91:1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;


1.3
date	92.08.07.14.46.19;	author davidt;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	91.10.09.17.09.16;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.15.56.17;	author colin;	state Exp;
branches;
next	;

1.3.1.1
date	92.08.07.14.46.19;	author jont;	state Exp;
branches;
next	;


desc
@ML arrays
@


1.3
log
@THIS FILE IS NO LONGER IN USE!
Commented out code so that any attempted use of this
file causes a parse error.
@
text
@(*
$Log: _array.sml,v $
Revision 1.2  1991/10/09  17:09:16  jont
Changed Subscript so as not to take an exception

Revision 1.1  91/06/07  15:56:17  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

(* !!! THIS FILE IS NO LONGER IN USE !!! *)

(*require "array";*)
(*require "lists";*)

functor Array (*(structure Lists : LISTS) : ARRAY = 
  struct

    datatype 'a array = ARRAY of (int * 'a ref) list

    exception Subscript
    exception Sub
    exception Update

    nonfix sub

    fun sub (ARRAY [],n) = raise Subscript
      | sub (ARRAY ((pos,ref elem)::t),n) = 
	if n = pos
	  then elem
	else sub (ARRAY t,n)
	
    local  
      fun update' ([],n,new_elem) = raise Subscript
	| update' ((pos,r as ref elem)::t,n,new_elem) = 
	  if n = pos
	    then r := new_elem
	  else update' (t,n,new_elem)
    in 
      fun update (ARRAY alist,n,new_elem) = update' (alist,n,new_elem)
    end

    fun length (ARRAY alist) = Lists.length alist

    local
      fun array' (0,avar) = []
	| array' (n,avar) = (n-1,ref avar) :: array' (n-1,avar)
    in
      fun array (n,avar) = ARRAY (array' (n,avar))
    end

    local
      fun arraylist ([],n) =  []
	| arraylist (h::t,n) = (n-1,ref h) :: arraylist (t,n-1)
    in
      fun arrayoflist alist = ARRAY (arraylist (rev alist,Lists.length alist))
    end

  end*)

@


1.3.1.1
log
@Fork for bug fixing
@
text
@a2 5
Revision 1.3  1992/08/07  14:46:19  davidt
THIS FILE IS NO LONGER IN USE!
Commented out code so that any attempted use of this
file causes a parse error.

@


1.2
log
@Changed Subscript so as not to take an exception
@
text
@d2 4
a5 1
$Log:	_array.sml,v $
d11 5
a15 3
(* Note that this isn't used currently, we use NJ array for efficiency *)
require "array";
require "lists";
d17 1
a17 1
functor Array (structure Lists : LISTS) : ARRAY = 
d60 2
a61 2
  end
	
@


1.1
log
@Initial revision
@
text
@d2 5
a6 1
$Log$
d8 1
d17 1
a17 1
    exception Subscript of exn
d23 1
a23 1
    fun sub (ARRAY [],n) = raise Subscript Sub
d30 1
a30 1
      fun update' ([],n,new_elem) = raise Subscript Update
@
