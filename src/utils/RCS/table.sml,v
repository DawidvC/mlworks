head	1.4;
access;
symbols
	ML_beta_release_12/08/94:1.4
	ML_beta_release_03/08/94:1.4
	ML_revised_beta_release_25/05/94:1.4
	ML_final_beta_release_02/03/94:1.4
	mlworks-28-01-1994:1.4
	Release:1.4
	mlworks-beta-01-09-1993:1.4
	MLWorks-1-0-4-29/01/1993:1.4
	MLWorks-1-0-3-21/12/1992:1.4
	MLWorks-1-0-2-15/12/1992:1.4
	MLWorks-1-0-1-04/12/1992:1.4
	checkpoint_17_08_92:1.4
	Ten15_release_19-11-91:1.1
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1;
locks; strict;


1.4
date	91.11.21.17.06.11;	author jont;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	91.10.18.14.48.27;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	91.10.01.13.12.58;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	91.08.08.11.56.45;	author davida;	state Exp;
branches;
next	;

1.4.1.1
date	91.11.21.17.06.11;	author jont;	state Exp;
branches;
next	;


desc
@Efficient lookup-tables.
@


1.4
log
@Added copyright message
@
text
@(* table.sml the signature *)
(* 
$Log:	table.sml,v $
Revision 1.3  91/10/18  14:48:27  richard
Added size.

Revision 1.2  91/10/01  13:12:58  richard
Added spec function to extract table spec from a table.

Revision 1.1  91/08/08  11:56:45  davida
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

(*  An Efficient Lookup-Table  *)


signature TABLE =
    sig

      (*  Order function must be irreflexive. For types with no ordering, *)
      (*  specifying a constant function with value false will give       *)
      (*  efficiency no better than for linear search.			  *)

	datatype 'key tablespec = TableSpec of {order : 'key * 'key -> bool,
						eq    : 'key * 'key -> bool}

	type ('key,'val) table

	val empty_table : 'key tablespec -> ('key,'val) table

	exception Lookup
	val lookup : ('key * ('key,'val) table) -> 'val

	exception Exists
	val add_new : (('key * 'val) * ('key,'val) table) -> ('key,'val) table

	val overwrite: (('key * 'val) * ('key,'val) table) -> ('key,'val) table

	val alist_of_table : ('key,'val) table -> ('key * 'val) list

	val table_of_alist : ('key * 'val) list * 'key tablespec
	                                              -> ('key,'val) table

	val spec : ('key, 'val) table -> 'key tablespec

	val apply : ('val1 -> 'val2) -> ('key,'val1) table ->('key,'val2) table

	val size : ('key, 'val) table -> int

    end;
    
@


1.4.1.1
log
@Fork for bug fixing
@
text
@d3 1
a3 4
$Log: table.sml,v $
Revision 1.4  1991/11/21  17:06:11  jont
Added copyright message

@


1.3
log
@Added size.
@
text
@d1 1
d4 3
d13 1
@


1.2
log
@Added spec function to extract table spec from a table.
@
text
@d3 3
d44 2
@


1.1
log
@Initial revision
@
text
@d2 4
a5 1
$Log$
d37 2
@
