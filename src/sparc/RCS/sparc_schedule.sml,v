head	1.9;
access;
symbols
	MLW_daveb_inline_1_4_99:1.9.3
	MLWorks_21c0_1999_03_25:1.9
	MLWorks_20c1_1998_08_20:1.9
	MLWorks_20c0_1998_08_04:1.9
	MLWorks_20b2c2_1998_06_19:1.9
	MLWorks_20b2_Windows_1998_06_12:1.9
	MLWorks_20b1c1_1998_05_07:1.9
	MLWorks_20b0_1998_04_07:1.9
	MLWorks_20b0_1998_03_20:1.9
	MLWorks_20m2_1998_02_16:1.9
	MLWorks_20m1_1997_10_23:1.9
	MLWorks_11r1:1.8.1.1.1.1.1
	MLWorks_workspace_97:1.9.2
	MLWorks_dt_wizard:1.9.1
	MLWorks_11c0_1997_09_09:1.8.1.1.1.1
	MLWorks_10r3:1.8.1.1.3
	MLWorks_10r2_551:1.8.1.1.2
	MLWorks_11:1.8.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.8.1.1
	MLWorks_20m0_1997_06_20:1.9
	MLWorks_1_0_r2c2_1997_06_14:1.8.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.8.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.8.1
	MLWorks_BugFix_1997_04_24:1.8
	MLWorks_1_0_r2_Win32_1997_04_11:1.8
	MLWorks_1_0_r2_Unix_1997_04_04:1.8
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.6.1.1
	MLWorks_gui_1996_12_18:1.7.7
	MLWorks_1_0_Win32_1996_12_17:1.7.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.7.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.7.4.1
	MLWorks_1_0_Irix_1996_11_28:1.7.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.7.5
	MLWorks_1_0_Unix_1996_11_14:1.7.4
	MLWorks_Open_Beta2_1996_10_11:1.7.3
	MLWorks_License_dev:1.7.2
	MLWorks_1_open_beta_1996_09_13:1.7.1
	MLWorks_Open_Beta_1996_08_22:1.7
	MLWorks_Beta_1996_07_02:1.7
	MLWorks_Beta_1996_06_07:1.7
	MLWorks_Beta_1996_06_06:1.7
	MLWorks_Beta_1996_06_05:1.7
	MLWorks_Beta_1996_06_03:1.7
	MLWorks_Beta_1996_05_31:1.7
	MLWorks_Beta_1996_05_30:1.7
	ML_beta_release_12/08/94:1.6
	ML_beta_release_03/08/94:1.6
	ML_revised_beta_release_25/05/94:1.6
	ML_final_beta_release_02/03/94:1.6
	mlworks-28-01-1994:1.6
	Release:1.6
	mlworks-beta-01-09-1993:1.6
	MLWorks-1-0-4-29/01/1993:1.4
	MLWorks-1-0-3-21/12/1992:1.4
	MLWorks-1-0-2-15/12/1992:1.4
	MLWorks-1-0-1-04/12/1992:1.4
	checkpoint_17_08_92:1.3;
locks; strict;
comment	@ * @;


1.9
date	97.05.02.16.32.31;	author jont;	state Exp;
branches
	1.9.1.1
	1.9.2.1
	1.9.3.1;
next	1.8;

1.8
date	97.01.31.10.48.50;	author matthew;	state Exp;
branches
	1.8.1.1;
next	1.7;

1.7
date	95.12.22.13.03.02;	author jont;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1
	1.7.5.1
	1.7.6.1
	1.7.7.1;
next	1.6;

1.6
date	93.08.24.11.53.28;	author jont;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	93.07.29.15.27.38;	author nosa;	state Exp;
branches;
next	1.4;

1.4
date	92.08.26.16.12.32;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	91.10.25.10.49.29;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.10.23.15.50.24;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.10.22.18.06.16;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	93.08.24.11.53.28;	author jont;	state Exp;
branches;
next	;

1.7.1.1
date	96.09.13.11.26.41;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.10.07.16.17.13;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.10.17.11.36.59;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	96.11.14.13.04.49;	author hope;	state Exp;
branches
	1.7.4.1.1.1;
next	;

1.7.4.1.1.1
date	96.11.28.15.14.15;	author hope;	state Exp;
branches;
next	;

1.7.5.1
date	96.11.22.18.22.17;	author hope;	state Exp;
branches;
next	;

1.7.6.1
date	96.12.17.18.00.16;	author hope;	state Exp;
branches
	1.7.6.1.1.1;
next	;

1.7.6.1.1.1
date	97.02.24.11.51.56;	author hope;	state Exp;
branches;
next	;

1.7.7.1
date	96.12.18.09.55.38;	author hope;	state Exp;
branches;
next	;

1.8.1.1
date	97.05.12.10.50.19;	author hope;	state Exp;
branches
	1.8.1.1.1.1
	1.8.1.1.2.1
	1.8.1.1.3.1;
next	;

1.8.1.1.1.1
date	97.07.28.18.32.31;	author daveb;	state Exp;
branches
	1.8.1.1.1.1.1.1;
next	;

1.8.1.1.1.1.1.1
date	97.10.07.11.58.39;	author jkbrook;	state Exp;
branches;
next	;

1.8.1.1.2.1
date	97.09.08.17.25.47;	author daveb;	state Exp;
branches;
next	;

1.8.1.1.3.1
date	97.09.09.14.22.25;	author daveb;	state Exp;
branches;
next	;

1.9.1.1
date	97.09.10.19.41.32;	author brucem;	state Exp;
branches;
next	;

1.9.2.1
date	97.09.11.21.09.05;	author daveb;	state Exp;
branches;
next	;

1.9.3.1
date	99.04.01.18.07.52;	author daveb;	state Exp;
branches;
next	;


desc
@Instruction scheduling into delay slots
@


1.9
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@(* sparc_schedule.sml the signature *)
(*
$Log: sparc_schedule.sml,v $
 * Revision 1.8  1997/01/31  10:48:50  matthew
 * Adding static flag to scheduler
 *
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 *
Revision 1.6  1993/08/24  11:53:28  jont
Changed $Log to $Log: sparc_schedule.sml,v $
 * Revision 1.8  1997/01/31  10:48:50  matthew
 * Adding static flag to scheduler
 *
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 * to get the change log

Copyright (c) 1991 Harlequin Ltd.
*)

require "sparc_assembly";

signature SPARC_SCHEDULE = sig
  structure Sparc_Assembly : SPARC_ASSEMBLY

  val reschedule_block :
    bool *
    (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag option * string) list ->
    (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag option * string) list
    (* Internal block rescheduling to move instructions forward into *)
    (* delay slots where possible *)

  val reschedule_proc :
    (Sparc_Assembly.MirTypes.tag *
     (Sparc_Assembly.MirTypes.tag *
      (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag option * string) list) list)
    ->
    (Sparc_Assembly.MirTypes.tag *
     (Sparc_Assembly.MirTypes.tag *
      (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag option * string) list) list)
    (* Inter block rescheduling to move instructions back from destination *)
    (* blocks into delay slots for conditional branches where possible *)

end
@


1.9.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.9  1997/05/02  16:32:31  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
a12 4
 * Revision 1.9  1997/05/02  16:32:31  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.9.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.9  1997/05/02  16:32:31  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
a12 4
 * Revision 1.9  1997/05/02  16:32:31  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.9.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.9  1997/05/02  16:32:31  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
a12 4
 * Revision 1.9  1997/05/02  16:32:31  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.8
log
@Adding static flag to scheduler
@
text
@d4 3
d13 3
d31 2
a32 2
    (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag MLWorks.Option.option * string) list ->
    (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag MLWorks.Option.option * string) list
d39 1
a39 1
      (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag MLWorks.Option.option * string) list) list)
d43 1
a43 1
      (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag MLWorks.Option.option * string) list) list)
@


1.8.1.1
log
@branched from 1.8
@
text
@a3 3
 * Revision 1.8  1997/01/31  10:48:50  matthew
 * Adding static flag to scheduler
 *
a9 3
 * Revision 1.8  1997/01/31  10:48:50  matthew
 * Adding static flag to scheduler
 *
@


1.8.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.8.1.1  1997/05/12  10:50:19  hope
 * branched from 1.8
 *
a12 3
 * Revision 1.8.1.1  1997/05/12  10:50:19  hope
 * branched from 1.8
 *
@


1.8.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.8.1.1  1997/05/12  10:50:19  hope
 * branched from 1.8
 *
a12 3
 * Revision 1.8.1.1  1997/05/12  10:50:19  hope
 * branched from 1.8
 *
@


1.8.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.8.1.1  1997/05/12  10:50:19  hope
 * branched from 1.8
 *
a12 3
 * Revision 1.8.1.1  1997/05/12  10:50:19  hope
 * branched from 1.8
 *
@


1.8.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.8.1.1.1.1  1997/07/28  18:32:31  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
a15 3
 * Revision 1.8.1.1.1.1  1997/07/28  18:32:31  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.7
log
@Add extra field to procedure_parameters to contain old (pre register allocation)
spill sizes. This is for the i386, where spill assignment is done in the backend
@
text
@d4 4
d9 5
a13 1
Changed $Log to $Log$ to get the change log
d24 1
@


1.7.7.1
log
@branched from 1.7
@
text
@a3 4
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 *
d5 1
a5 5
Changed $Log to $Log: sparc_schedule.sml,v $
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 * to get the change log
@


1.7.6.1
log
@branched from 1.7
@
text
@a3 4
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 *
d5 1
a5 5
Changed $Log to $Log: sparc_schedule.sml,v $
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 * to get the change log
@


1.7.6.1.1.1
log
@branched from 1.7.6.1
@
text
@a3 3
 * Revision 1.7.6.1  1996/12/17  18:00:16  hope
 * branched from 1.7
 *
a9 3
 * Revision 1.7.6.1  1996/12/17  18:00:16  hope
 * branched from 1.7
 *
@


1.7.5.1
log
@branched from 1.7
@
text
@a3 4
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 *
d5 1
a5 5
Changed $Log to $Log: sparc_schedule.sml,v $
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 * to get the change log
@


1.7.4.1
log
@branched from 1.7
@
text
@a3 4
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 *
d5 1
a5 5
Changed $Log to $Log: sparc_schedule.sml,v $
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 * to get the change log
@


1.7.4.1.1.1
log
@branched from 1.7.4.1
@
text
@a3 3
 * Revision 1.7.4.1  1996/11/14  13:04:49  hope
 * branched from 1.7
 *
a9 3
 * Revision 1.7.4.1  1996/11/14  13:04:49  hope
 * branched from 1.7
 *
@


1.7.3.1
log
@branched from 1.7
@
text
@a3 4
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 *
d5 1
a5 5
Changed $Log to $Log: sparc_schedule.sml,v $
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 * to get the change log
@


1.7.2.1
log
@branched from 1.7
@
text
@a3 4
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 *
d5 1
a5 5
Changed $Log to $Log: sparc_schedule.sml,v $
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 * to get the change log
@


1.7.1.1
log
@branched from 1.7
@
text
@a3 4
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 *
d5 1
a5 5
Changed $Log to $Log: sparc_schedule.sml,v $
 * Revision 1.7  1995/12/22  13:03:02  jont
 * Add extra field to procedure_parameters to contain old (pre register allocation)
 * spill sizes. This is for the i386, where spill assignment is done in the backend
 * to get the change log
@


1.6
log
@Changed $Log to $Log$ to get the change log
@
text
@d3 4
a6 1
$Log$
d16 2
a17 2
    (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag Sparc_Assembly.MirTypes.Option.opt * string) list ->
    (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag Sparc_Assembly.MirTypes.Option.opt * string) list
d24 1
a24 1
      (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag Sparc_Assembly.MirTypes.Option.opt * string) list) list)
d28 1
a28 1
      (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag Sparc_Assembly.MirTypes.Option.opt * string) list) list)
@


1.6.1.1
log
@Fork for bug fixing
@
text
@d3 1
a3 4
$Log: sparc_schedule.sml,v $
Revision 1.6  1993/08/24  11:53:28  jont
Changed $Log to $Log$ to get the change log

@


1.5
log
@structure Option.
@
text
@d3 1
a3 1
$Log
@


1.4
log
@Removed some redundant structures and sharing
@
text
@d13 2
a14 2
    (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag Sparc_Assembly.MirTypes.Opt * string) list ->
    (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag Sparc_Assembly.MirTypes.Opt * string) list
d21 1
a21 1
      (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag Sparc_Assembly.MirTypes.Opt * string) list) list)
d25 1
a25 1
      (Sparc_Assembly.opcode * Sparc_Assembly.MirTypes.tag Sparc_Assembly.MirTypes.Opt * string) list) list)
@


1.3
log
@> Added backwards instruction scheduling to take instructions into
> delay slots for conditional branches from their destinations.
@
text
@a6 1
require "../mir/mirtypes";
a9 1
  structure MirTypes : MIRTYPES
d13 2
a14 2
    (Sparc_Assembly.opcode * MirTypes.tag MirTypes.Opt * string) list ->
    (Sparc_Assembly.opcode * MirTypes.tag MirTypes.Opt * string) list
d19 3
a21 3
    (MirTypes.tag *
     (MirTypes.tag *
      (Sparc_Assembly.opcode * MirTypes.tag MirTypes.Opt * string) list) list)
d23 3
a25 3
    (MirTypes.tag *
     (MirTypes.tag *
      (Sparc_Assembly.opcode * MirTypes.tag MirTypes.Opt * string) list) list)
@


1.2
log
@Changed to export only a rescheduler within basic blocks
@
text
@a13 17
(*
  val find_delay_instr :
    (Sparc_Assembly.opcode * MirTypes.tag MirTypes.Opt * string) list ->
    int * bool
  (* Look through the opcode list in a basic block to see if we can find *)
  (* an annulled conditional branch or a Call or a JMPL *)
  (* with a nop in its delay slot *)
  (* Return the position of the instruction requiring the delay slot *)
  val find_available_instruction :
    (Sparc_Assembly.opcode * MirTypes.tag MirTypes.Opt * string) list *
    int ->
    int * bool
  (* Look back through the opcode list in a basic block from the given *)
  (* position to see if we can find an instruction suitable to be moved *)
  (* into the delay slot *)
  (* Return the position of such an instruction *)
*)
d17 2
a18 1
end
d20 10
d31 1
@


1.1
log
@Initial revision
@
text
@d14 1
d30 4
d35 2
@
