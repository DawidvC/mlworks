head	1.17;
access;
symbols
	MLW_daveb_inline_1_4_99:1.16.1
	MLWorks_21c0_1999_03_25:1.15
	MLWorks_20c1_1998_08_20:1.15
	MLWorks_20c0_1998_08_04:1.15
	MLWorks_20b2c2_1998_06_19:1.15
	MLWorks_20b2_Windows_1998_06_12:1.15
	MLWorks_20b1c1_1998_05_07:1.14
	MLWorks_20b0_1998_04_07:1.12
	MLWorks_20b0_1998_03_20:1.12
	MLWorks_20m2_1998_02_16:1.12
	MLWorks_20m1_1997_10_23:1.10
	MLWorks_11r1:1.6.1.1.1.1.1
	MLWorks_workspace_97:1.9.2
	MLWorks_dt_wizard:1.9.1
	MLWorks_11c0_1997_09_09:1.6.1.1.1.1
	MLWorks_10r3:1.6.1.1.3
	MLWorks_10r2_551:1.6.1.1.2
	MLWorks_11:1.6.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.1.1
	MLWorks_20m0_1997_06_20:1.9
	MLWorks_1_0_r2c2_1997_06_14:1.6.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.1
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.6.1.1
	MLWorks_gui_1996_12_18:1.4.7
	MLWorks_1_0_Win32_1996_12_17:1.4.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.4.1
	MLWorks_1_0_Irix_1996_11_28:1.4.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.5
	MLWorks_1_0_Unix_1996_11_14:1.4.4
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.4
	MLWorks_Beta_1996_06_07:1.4
	MLWorks_Beta_1996_06_06:1.4
	MLWorks_Beta_1996_06_05:1.4
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.3;
locks; strict;
comment	@ *  @;


1.17
date	99.05.27.13.21.21;	author johnh;	state Exp;
branches;
next	1.16;

1.16
date	99.03.26.14.51.49;	author johnh;	state Exp;
branches
	1.16.1.1;
next	1.15;

1.15
date	98.05.26.15.17.26;	author mitchell;	state Exp;
branches;
next	1.14;

1.14
date	98.04.22.16.32.00;	author jont;	state Exp;
branches;
next	1.13;

1.13
date	98.04.15.12.38.21;	author jont;	state Exp;
branches;
next	1.12;

1.12
date	97.11.26.15.45.34;	author johnh;	state Exp;
branches;
next	1.11;

1.11
date	97.11.13.10.55.02;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	97.10.09.09.11.06;	author johnh;	state Exp;
branches;
next	1.9;

1.9
date	97.06.16.12.13.56;	author jont;	state Exp;
branches
	1.9.1.1
	1.9.2.1;
next	1.8;

1.8
date	97.05.12.14.35.19;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	97.05.01.12.44.50;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	97.03.19.14.27.13;	author andreww;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	97.03.07.12.28.44;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	96.05.30.15.11.18;	author jont;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1;
next	1.3;

1.3
date	96.04.09.16.01.02;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	96.04.02.13.44.02;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	96.04.01.17.00.41;	author jont;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.18.59;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.08.53;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.27.07;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.14.12.52.38;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	96.11.28.15.03.38;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.22.18.11.44;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.17.17.50.14;	author hope;	state Exp;
branches
	1.4.6.1.1.1;
next	;

1.4.6.1.1.1
date	97.02.24.11.40.32;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.18.09.44.22;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	97.05.12.10.36.51;	author hope;	state Exp;
branches
	1.6.1.1.1.1
	1.6.1.1.2.1
	1.6.1.1.3.1;
next	;

1.6.1.1.1.1
date	97.07.28.18.22.09;	author daveb;	state Exp;
branches
	1.6.1.1.1.1.1.1;
next	;

1.6.1.1.1.1.1.1
date	97.10.07.11.47.47;	author jkbrook;	state Exp;
branches;
next	;

1.6.1.1.2.1
date	97.09.08.17.15.31;	author daveb;	state Exp;
branches;
next	;

1.6.1.1.3.1
date	97.09.09.14.11.24;	author daveb;	state Exp;
branches;
next	;

1.9.1.1
date	97.09.10.19.27.28;	author brucem;	state Exp;
branches;
next	;

1.9.2.1
date	97.09.11.20.57.28;	author daveb;	state Exp;
branches;
next	;

1.16.1.1
date	99.04.01.17.58.19;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
This is like change_nj.sml, but is for bootstrapping from
an mlworks interactive system. It starts off requiring no
environment alterations
@


1.17
log
@[Bug #190553]
Changes to Exit structure.
@
text
@(*  ==== MODIFY MLWorks ENVIRONMENT ====
 *
 *  Copyright (C) 1996 Harlequin Ltd
 *
 *  $Log: change_mlworks.sml,v $
 *  Revision 1.16  1999/03/26  14:51:49  johnh
 *  [Bug #190523]
 *  Fix up changes to Exit structure.
 *
 *  Revision 1.15  1998/05/26  15:17:26  mitchell
 *  [Bug #30413]
 *  Moving Exit structure to pervasives
 *
 *  Revision 1.14  1998/04/22  16:32:00  jont
 *  [Bug #70107]
 *  Ensure Win32.closeIOD is available for bootstrapping under NT
 *  Also make Win32.fdToIOD fail, so we don't run out of
 *  handles c=from CreateFile.
 *
 *  Revision 1.13  1998/04/15  12:38:21  jont
 *  [Bug #70096]
 *  Modify to assign Windows.fileTimeToLocalTime to be the identity.
 *
 *  Revision 1.12  1997/11/26  15:45:34  johnh
 *  [Bug #30134]
 *  Change third arg of MLWorks.Deliver.deliver.
 *
 *  Revision 1.11  1997/11/13  10:55:02  jont
 *  [Bug #30089]
 *  Add MLWorks.Internal.Types.time for basis time
 *
 *  Revision 1.10  1997/10/09  09:11:06  johnh
 *  [Bug #30226]
 *  Add exitFn change in MLWorks.Deliver structure.
 *
 *  Revision 1.9  1997/06/16  12:13:56  jont
 *  [Bug #30101]
 *  Provide trig functions within MLWorks.Internal.Value for bootstrap process
 *
 *  Revision 1.8  1997/05/12  14:35:19  jont
 *  [Bug #20050]
 *  Provide MLWorks.Internal.IO.Io
 *
 *  Revision 1.7  1997/05/01  12:44:50  jont
 *  [Bug #30088]
 *  Get rid of MLWorks.Option
 *
 *  Revision 1.6  1997/03/19  14:27:13  andreww
 *  [Bug #1431]
 *  Altering calls to UnixOS etc.
 *
 *  Revision 1.5  1997/03/07  12:28:44  matthew
 *  Redefining MLWorks.Internal.environment
 *
 *  Revision 1.4  1996/05/30  15:11:18  jont
 *  Shell.Options.Compatibility has moved to Shell.Options.Language
 *
 *  Revision 1.3  1996/04/09  16:01:02  matthew
 *  Removing oldDefinition option
 *
 *  Revision 1.2  1996/04/02  13:44:02  jont
 *  Force to compile under old definition for the present
 *
 *  Revision 1.1  1996/04/01  17:00:41  jont
 *  new unit
 *  This is like change_nj.sml, but is for bootstrapping from
 *  an mlworks interactive system. It starts off requiring no
 *  environment alterations
 *
 *)

(* Now we want the new definition *)
Shell.Options.set(Shell.Options.Language.oldDefinition, false);

structure MLWorks =
  struct
    open MLWorks
    structure Deliver = 
      struct
	open Deliver
	datatype app_style = CONSOLE | WINDOWS
	type deliverer = string * (unit -> unit) * app_style -> unit
	val exitFn : (unit -> unit) ref = ref (fn () => ())
        val add_delivery_hook : (deliverer -> deliverer) -> unit =
          fn hook => ()
      end
    structure Internal = 
      struct
        open Internal
        structure Error =
          struct
            open Error
            val errorMsg:syserror ->string = fn _ => ""
            val errorName: syserror ->string = fn _ => ""
            val syserror: string -> syserror option 
              = fn _ => NONE
          end
	structure Value =
	  struct
	    open Value
	    val arctan : real -> real = Runtime.environment"real arctan"
	    val sin : real -> real = Runtime.environment"real sin"
	    val cos : real -> real = Runtime.environment"real cos"
	    val exp : real -> real = Runtime.environment"real exp"
	    val sqrt : real -> real = Runtime.environment"real square root"
	  end
        structure Runtime =
          struct
            open Runtime
            val environment =
              fn "Win32.fdToIOD" =>
	      Value.cast(fn _ => raise Error.SysErr("Unbound", NONE))
	    | s =>
              environment s handle exn as Unbound _ =>
		(case s of
		   "Windows.fileTimeToLocalFileTime" => Value.cast(fn x => x)
		 | "Win32.closeIOD" => Value.cast(fn x => ())
		 | _ => Value.cast (fn x => raise exn))
          end
	structure IO =
	  struct
	    exception Io of {name : string, function : string, cause : exn}
	    open IO
	  end
	structure Types =
	  struct
	    open Types
	    datatype time = TIME of int * int * int (* basis time *)
	  end
        structure Exit =
          struct
            type key = int
            type status = MLWorks.Internal.Types.word32
            val success : status = 0w0
            val failure : status = 0w1
            val atExit : (unit -> unit) -> key = fn _ => 0
            val removeAtExit : key -> unit = fn k => ()
            exception dummy
            val exit : status -> 'a = fn _ => raise dummy
            val terminate : status -> 'a = fn _ => raise dummy
          end
      end
  end





@


1.16
log
@[Bug #190523]
Fix up changes to Exit structure.
@
text
@d6 4
a135 5
            val uncaughtIOException : status = 0w2
            val badUsage : status = 0w3
            val stop : status = 0w4
            val save : status = 0w5
            val badInput : status = 0w6
@


1.16.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a5 4
 *  Revision 1.16  1999/03/26  14:51:49  johnh
 *  [Bug #190523]
 *  Fix up changes to Exit structure.
 *
@


1.15
log
@[Bug #30413]
Moving Exit structure to pervasives
@
text
@d6 4
d129 8
a136 8
            type status = int
            val success : status = 0
            val failure : status = 1
            val uncaughtIOException : status = 2
            val badUsage : status = 3
            val stop : status = 4
            val save : status = 5
            val badInput : status = 6
@


1.14
log
@[Bug #70107]
Ensure Win32.closeIOD is available for bootstrapping under NT
Also make Win32.fdToIOD fail, so we don't run out of
handles c=from CreateFile.
@
text
@d6 6
d76 2
d122 17
d141 4
@


1.13
log
@[Bug #70096]
Modify to assign Windows.fileTimeToLocalTime to be the identity.
@
text
@d6 4
d95 3
a97 1
              fn s => 
d101 2
a102 2
		 | _ =>
		   Value.cast (fn x => raise exn))
@


1.12
log
@[Bug #30134]
Change third arg of MLWorks.Deliver.deliver.
@
text
@d6 4
d93 4
a96 1
                Value.cast (fn x => raise exn)
@


1.11
log
@[Bug #30089]
Add MLWorks.Internal.Types.time for basis time
@
text
@d6 4
d59 2
@


1.10
log
@[Bug #30226]
Add exitFn change in MLWorks.Deliver structure.
@
text
@d6 4
d89 5
@


1.9
log
@[Bug #30101]
Provide trig functions within MLWorks.Internal.Value for bootstrap process
@
text
@d6 4
d48 5
@


1.9.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a5 4
 *  Revision 1.9  1997/06/16  12:13:56  jont
 *  [Bug #30101]
 *  Provide trig functions within MLWorks.Internal.Value for bootstrap process
 *
@


1.9.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a5 4
 *  Revision 1.9  1997/06/16  12:13:56  jont
 *  [Bug #30101]
 *  Provide trig functions within MLWorks.Internal.Value for bootstrap process
 *
@


1.8
log
@[Bug #20050]
Provide MLWorks.Internal.IO.Io
@
text
@d6 4
d55 9
@


1.7
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@d6 4
d59 5
@


1.6
log
@[Bug #1431]
Altering calls to UnixOS etc.
@
text
@d6 4
d44 2
a45 2
            val syserror: string -> syserror Option.option 
              = fn _ => Option.NONE
@


1.6.1.1
log
@branched from 1.6
@
text
@a5 4
 *  Revision 1.6  1997/03/19  14:27:13  andreww
 *  [Bug #1431]
 *  Altering calls to UnixOS etc.
 *
@


1.6.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 *  Revision 1.6.1.1  1997/05/12  10:36:51  hope
 *  branched from 1.6
 *
@


1.6.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 *  Revision 1.6.1.1  1997/05/12  10:36:51  hope
 *  branched from 1.6
 *
@


1.6.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 *  Revision 1.6.1.1  1997/05/12  10:36:51  hope
 *  branched from 1.6
 *
@


1.6.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 *  Revision 1.6.1.1.1.1  1997/07/28  18:22:09  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.5
log
@Redefining MLWorks.Internal.environment
@
text
@d6 3
d35 8
@


1.4
log
@Shell.Options.Compatibility has moved to Shell.Options.Language
@
text
@d6 3
d25 17
@


1.4.7.1
log
@branched from 1.4
@
text
@a5 3
 *  Revision 1.4  1996/05/30  15:11:18  jont
 *  Shell.Options.Compatibility has moved to Shell.Options.Language
 *
@


1.4.6.1
log
@branched from 1.4
@
text
@a5 3
 *  Revision 1.4  1996/05/30  15:11:18  jont
 *  Shell.Options.Compatibility has moved to Shell.Options.Language
 *
@


1.4.6.1.1.1
log
@branched from 1.4.6.1
@
text
@a5 3
 *  Revision 1.4.6.1  1996/12/17  17:50:14  hope
 *  branched from 1.4
 *
@


1.4.5.1
log
@branched from 1.4
@
text
@a5 3
 *  Revision 1.4  1996/05/30  15:11:18  jont
 *  Shell.Options.Compatibility has moved to Shell.Options.Language
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a5 3
 *  Revision 1.4  1996/05/30  15:11:18  jont
 *  Shell.Options.Compatibility has moved to Shell.Options.Language
 *
@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@a5 3
 *  Revision 1.4.4.1  1996/11/14  12:52:38  hope
 *  branched from 1.4
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a5 3
 *  Revision 1.4  1996/05/30  15:11:18  jont
 *  Shell.Options.Compatibility has moved to Shell.Options.Language
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a5 3
 *  Revision 1.4  1996/05/30  15:11:18  jont
 *  Shell.Options.Compatibility has moved to Shell.Options.Language
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a5 3
 *  Revision 1.4  1996/05/30  15:11:18  jont
 *  Shell.Options.Compatibility has moved to Shell.Options.Language
 *
@


1.3
log
@Removing oldDefinition option
@
text
@d6 3
d21 1
a21 1
Shell.Options.set(Shell.Options.Compatibility.oldDefinition, false);
@


1.2
log
@Force to compile under old definition for the present
@
text
@d6 3
d17 2
a18 1
Shell.Options.set(Shell.Options.Compatibility.oldDefinition, true);
@


1.1
log
@new unit
This is like change_nj.sml, but is for bootstrapping from
an mlworks interactive system. It starts off requiring no
environment alterations
@
text
@d5 7
a11 1
 *  $Log$
d14 2
a15 1
(* Nothing needs to be done yet *)
@
