head	1.6;
access;
symbols
	MLWorks_20m1_1997_10_23:1.6
	MLWorks_11r1:1.6.8.1.1.1.1
	MLWorks_workspace_97:1.6.10
	MLWorks_dt_wizard:1.6.9
	MLWorks_11c0_1997_09_09:1.6.8.1.1.1
	MLWorks_10r3:1.6.8.1.3
	MLWorks_10r2_551:1.6.8.1.2
	MLWorks_11:1.6.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.8.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.6.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.8
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.6.6.1.1
	MLWorks_gui_1996_12_18:1.6.7
	MLWorks_1_0_Win32_1996_12_17:1.6.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.6.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.6.4.1
	MLWorks_1_0_Irix_1996_11_28:1.6.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.6.5
	MLWorks_1_0_Unix_1996_11_14:1.6.4
	MLWorks_Open_Beta2_1996_10_11:1.6.3
	MLWorks_License_dev:1.6.2
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.6
	MLWorks_Beta_1996_06_07:1.6
	MLWorks_Beta_1996_06_06:1.6
	MLWorks_Beta_1996_06_05:1.6
	MLWorks_Beta_1996_06_03:1.6
	MLWorks_Beta_1996_05_31:1.6
	MLWorks_Beta_1996_05_30:1.6
	ML_beta_release_12/08/94:1.4
	ML_beta_release_03/08/94:1.4
	ML_revised_beta_release_25/05/94:1.4
	ML_final_beta_release_02/03/94:1.4
	mlworks-28-01-1994:1.4
	Release:1.4
	mlworks-beta-01-09-1993:1.4
	MLWorks-1-0-4-29/01/1993:1.4
	MLWorks-1-0-3-21/12/1992:1.4
	MLWorks-1-0-2-15/12/1992:1.4
	MLWorks-1-0-1-04/12/1992:1.4
	checkpoint_17_08_92:1.3
	Ten15_release_21-08-91:1.1
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.6
date	96.03.26.13.15.44;	author stephenb;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1
	1.6.4.1
	1.6.5.1
	1.6.6.1
	1.6.7.1
	1.6.8.1
	1.6.9.1
	1.6.10.1;
next	1.5;

1.5
date	94.12.09.12.19.53;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	92.09.29.15.25.40;	author daveb;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	91.11.21.16.29.38;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.09.25.09.39.36;	author davida;	state Exp;
branches;
next	1.1;

1.1
date	91.06.07.10.58.55;	author colin;	state Exp;
branches;
next	;

1.4.1.1
date	92.09.29.15.25.40;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.18.53;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.07.16.08.47;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.10.17.11.27.01;	author hope;	state Exp;
branches;
next	;

1.6.4.1
date	96.11.14.12.52.28;	author hope;	state Exp;
branches
	1.6.4.1.1.1;
next	;

1.6.4.1.1.1
date	96.11.28.15.03.28;	author hope;	state Exp;
branches;
next	;

1.6.5.1
date	96.11.22.18.11.37;	author hope;	state Exp;
branches;
next	;

1.6.6.1
date	96.12.17.17.50.08;	author hope;	state Exp;
branches
	1.6.6.1.1.1;
next	;

1.6.6.1.1.1
date	97.02.24.11.40.23;	author hope;	state Exp;
branches;
next	;

1.6.7.1
date	96.12.18.09.44.15;	author hope;	state Exp;
branches;
next	;

1.6.8.1
date	97.05.12.10.36.45;	author hope;	state Exp;
branches
	1.6.8.1.1.1
	1.6.8.1.2.1
	1.6.8.1.3.1;
next	;

1.6.8.1.1.1
date	97.07.28.18.22.02;	author daveb;	state Exp;
branches
	1.6.8.1.1.1.1.1;
next	;

1.6.8.1.1.1.1.1
date	97.10.07.11.47.41;	author jkbrook;	state Exp;
branches;
next	;

1.6.8.1.2.1
date	97.09.08.17.15.24;	author daveb;	state Exp;
branches;
next	;

1.6.8.1.3.1
date	97.09.09.14.11.18;	author daveb;	state Exp;
branches;
next	;

1.6.9.1
date	97.09.10.19.27.22;	author brucem;	state Exp;
branches;
next	;

1.6.10.1
date	97.09.11.20.57.19;	author daveb;	state Exp;
branches;
next	;


desc
@Unix Pathname routines
@


1.6
log
@Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
the deprecated OS interface.
@
text
@(* _pathname.sml the functor *)
(*
$Log: _pathname.sml,v $
 * Revision 1.5  1994/12/09  12:19:53  jont
 * Replace use of unix with generic os
 *
Revision 1.4  1992/09/29  15:25:40  daveb
Changed  parseFileName  to check for multiple dots in a file name.

Revision 1.3  1991/11/21  16:29:38  jont
Added copyright message

Revision 1.2  91/09/25  09:39:36  davida
Corrected syntax errors to work with NJ v0.73

Revision 1.1  91/06/07  10:58:55  colin
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)
functor PathName (structure OldOs : OLD_OS) : PATHNAME =

struct

type FileName = string * string

datatype Directory = 
  ABSOLUTE of string list
| RELATIVE of string list

type PathName = Directory * FileName

fun parseComponentsOnto onto s =
  let
    fun parseComponent nil = (nil,nil)
      | parseComponent (x as ("/" :: _)) = (nil,x)
      | parseComponent (char :: rest) = 
	let 
	  val (component, rest') = parseComponent rest
	in
	  (char::component, rest')
	end

    fun parseComponents' nil = onto
      | parseComponents' chars =
	let
	  val (component, rest) = parseComponent chars
	in
	  implode component ::
	  (case rest of
	      "/" :: nil => "" :: nil
	    | "/" :: rest' => parseComponents' rest'
	    | _ => parseComponents' rest)
	end
  in
    parseComponents' (explode s)
  end

val parseComponents = parseComponentsOnto nil

fun parseFileName s =
  let
    fun parseFileName' nil = (nil,nil)
      | parseFileName' (x as ("." :: rest)) =
	(case parseFileName' rest of
	   (name,nil) => (nil,x)
	 | (name,type') => ("." :: name, type')
	)
      | parseFileName' (char :: rest) = 
	let val (name,type') = parseFileName' rest
	in
	  (char::name,type')
	end
  in
    let val (name,type') = parseFileName' (explode s)
    in
      (implode name,implode type')
    end
  end

fun expand_twiddle nil = nil
  | expand_twiddle (all as (first :: rest)) =
    let val chars = explode first
    in
      case chars of
	"~" :: chars' => parseComponentsOnto rest (OldOs.home (implode chars'))
      | _ => all
    end

fun parseDirComponents components =
  let
    fun parseDirComponents' nil = nil
      | parseDirComponents' ("" :: rest) = parseDirComponents' rest
      | parseDirComponents' (name :: rest) =
	name :: parseDirComponents' rest
  in
    case components of
      "" :: rest => ABSOLUTE (parseDirComponents' rest)
    | all => RELATIVE (parseDirComponents' all)
  end

fun pathname_type (_,(_,x)) = x
fun pathname_name (_,(x,_)) = x
fun pathname_directory (x,_) = x
fun modify_type ((dir,(name,_)),t) = (dir,(name,t))
fun modify_name ((dir,(_,t)),name) = (dir,(name,t))
fun modify_directory ((_,(name,t)),dir) = (dir,(name,t))


fun parseDirectory s =
  parseDirComponents (expand_twiddle (parseComponents s))

exception ParsePathName

fun parsePathName s =
  let
    val components = expand_twiddle (parseComponents s)
      
    fun split_last nil = raise ParsePathName
      | split_last ("" :: nil) = raise ParsePathName
      | split_last (last :: nil) = (nil,last)
      | split_last (x :: rest) =
	let val (butlast,last) = split_last rest
	in
	  (x :: butlast,last)
	end
  in
    let val (butlast,last) = split_last components
    in
      (parseDirComponents butlast, parseFileName last)
    end
  end

fun isRelative (RELATIVE _) = true
  | isRelative (ABSOLUTE _) = false

fun resolveRelative (dir,RELATIVE y) =
  (case dir of
     RELATIVE x => RELATIVE (x @@ y)
   | ABSOLUTE x => ABSOLUTE (x @@ y))
  | resolveRelative (_,(dir' as (ABSOLUTE _))) = dir'
       
  
fun directory_namestring dir =
  let 
    fun namestring nil = ""
      | namestring ("" :: rest) = namestring rest
      | namestring ("." :: rest) = namestring rest
      | namestring (x :: ".." :: rest) = namestring rest
      | namestring (x :: rest) = x ^ "/" ^ namestring rest
  in
    case dir of
      RELATIVE x => namestring x
    | ABSOLUTE x => "/" ^ namestring x
  end

fun pathname_namestring (dir,(n,t)) =
  directory_namestring dir ^ n ^ t

end
@


1.6.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.6  1996/03/26  13:15:44  stephenb
 * Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
 * the deprecated OS interface.
 *
@


1.6.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.6  1996/03/26  13:15:44  stephenb
 * Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
 * the deprecated OS interface.
 *
@


1.6.8.1
log
@branched from 1.6
@
text
@a3 4
 * Revision 1.6  1996/03/26  13:15:44  stephenb
 * Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
 * the deprecated OS interface.
 *
@


1.6.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.6.8.1  1997/05/12  10:36:45  hope
 * branched from 1.6
 *
@


1.6.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.6.8.1  1997/05/12  10:36:45  hope
 * branched from 1.6
 *
@


1.6.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.6.8.1  1997/05/12  10:36:45  hope
 * branched from 1.6
 *
@


1.6.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.6.8.1.1.1  1997/07/28  18:22:02  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.6.7.1
log
@branched from 1.6
@
text
@a3 4
 * Revision 1.6  1996/03/26  13:15:44  stephenb
 * Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
 * the deprecated OS interface.
 *
@


1.6.6.1
log
@branched from 1.6
@
text
@a3 4
 * Revision 1.6  1996/03/26  13:15:44  stephenb
 * Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
 * the deprecated OS interface.
 *
@


1.6.6.1.1.1
log
@branched from 1.6.6.1
@
text
@a3 3
 * Revision 1.6.6.1  1996/12/17  17:50:08  hope
 * branched from 1.6
 *
@


1.6.5.1
log
@branched from 1.6
@
text
@a3 4
 * Revision 1.6  1996/03/26  13:15:44  stephenb
 * Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
 * the deprecated OS interface.
 *
@


1.6.4.1
log
@branched from 1.6
@
text
@a3 4
 * Revision 1.6  1996/03/26  13:15:44  stephenb
 * Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
 * the deprecated OS interface.
 *
@


1.6.4.1.1.1
log
@branched from 1.6.4.1
@
text
@a3 3
 * Revision 1.6.4.1  1996/11/14  12:52:28  hope
 * branched from 1.6
 *
@


1.6.3.1
log
@branched from 1.6
@
text
@a3 4
 * Revision 1.6  1996/03/26  13:15:44  stephenb
 * Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
 * the deprecated OS interface.
 *
@


1.6.2.1
log
@branched from 1.6
@
text
@a3 4
 * Revision 1.6  1996/03/26  13:15:44  stephenb
 * Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
 * the deprecated OS interface.
 *
@


1.6.1.1
log
@branched from 1.6
@
text
@a3 4
 * Revision 1.6  1996/03/26  13:15:44  stephenb
 * Change any use of Os/OS to OldOs/OLD_OS to emphasise that it is using
 * the deprecated OS interface.
 *
@


1.5
log
@Replace use of unix with generic os
@
text
@d4 3
d21 1
a21 1
functor PathName (structure Os : OS) : PATHNAME =
d86 1
a86 1
	"~" :: chars' => parseComponentsOnto rest (Os.home (implode chars'))
@


1.4
log
@Changed  parseFileName  to check for multiple dots in a file name.
@
text
@d4 3
d18 1
a18 1
functor PathName (structure Unix : UNIX) : PATHNAME =
d83 1
a83 1
	"~" :: chars' => parseComponentsOnto rest (Unix.home (implode chars'))
@


1.4.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.4  1992/09/29  15:25:40  daveb
Changed  parseFileName  to check for multiple dots in a file name.

@


1.3
log
@Added copyright message
@
text
@d3 4
a6 1
$Log:	_pathname.sml,v $
d58 5
a62 1
      | parseFileName' (x as ("." :: _)) = (nil,x)
@


1.2
log
@Corrected syntax errors to work with NJ v0.73
@
text
@d1 1
d4 3
d10 1
@


1.1
log
@Initial revision
@
text
@d2 4
a5 1
$Log$
d36 4
a39 4
	  case rest of
	    "/" :: nil => "" :: nil
	  | "/" :: rest' => parseComponents' rest'
	  | _ => parseComponents' rest
d52 1
a52 1
	let val (name,_type) = parseFileName' rest
d54 1
a54 1
	  (char::name,_type)
d57 1
a57 1
    let val (name,_type) = parseFileName' (explode s)
d59 1
a59 1
      (implode name,implode _type)
@
