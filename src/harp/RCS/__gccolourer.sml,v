head	1.12;
access;
symbols
	MLW_daveb_inline_1_4_99:1.12.1
	MLWorks_21c0_1999_03_25:1.12
	MLWorks_20c1_1998_08_20:1.11
	MLWorks_20c0_1998_08_04:1.11
	MLWorks_20b2c2_1998_06_19:1.11
	MLWorks_20b2_Windows_1998_06_12:1.11
	MLWorks_20b1c1_1998_05_07:1.11
	MLWorks_20b0_1998_04_07:1.11
	MLWorks_20b0_1998_03_20:1.11
	MLWorks_20m2_1998_02_16:1.11
	MLWorks_20m1_1997_10_23:1.11
	MLWorks_11r1:1.10.1.1.1.1.1
	MLWorks_workspace_97:1.11.2
	MLWorks_dt_wizard:1.11.1
	MLWorks_11c0_1997_09_09:1.10.1.1.1.1
	MLWorks_10r3:1.10.1.1.3
	MLWorks_10r2_551:1.10.1.1.2
	MLWorks_11:1.10.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.10.1.1
	MLWorks_20m0_1997_06_20:1.11
	MLWorks_1_0_r2c2_1997_06_14:1.10.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.10.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.10.1
	MLWorks_BugFix_1997_04_24:1.10
	MLWorks_1_0_r2_Win32_1997_04_11:1.10
	MLWorks_1_0_r2_Unix_1997_04_04:1.10
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.9.6.1.1
	MLWorks_gui_1996_12_18:1.9.7
	MLWorks_1_0_Win32_1996_12_17:1.9.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.9.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.9.4.1
	MLWorks_1_0_Irix_1996_11_28:1.9.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.9.5
	MLWorks_1_0_Unix_1996_11_14:1.9.4
	MLWorks_Open_Beta2_1996_10_11:1.9.3
	MLWorks_License_dev:1.9.2
	MLWorks_1_open_beta_1996_09_13:1.9.1
	MLWorks_Open_Beta_1996_08_22:1.9
	MLWorks_Beta_1996_07_02:1.9
	MLWorks_Beta_1996_06_07:1.9
	MLWorks_Beta_1996_06_06:1.9
	MLWorks_Beta_1996_06_05:1.9
	MLWorks_Beta_1996_06_03:1.9
	MLWorks_Beta_1996_05_31:1.9
	MLWorks_Beta_1996_05_30:1.9
	ML_beta_release_12/08/94:1.7
	ML_beta_release_03/08/94:1.7
	ML_revised_beta_release_25/05/94:1.7
	ML_final_beta_release_02/03/94:1.7
	mlworks-28-01-1994:1.7
	Release:1.6
	mlworks-beta-01-09-1993:1.6
	MLWorks-1-0-4-29/01/1993:1.5
	MLWorks-1-0-3-21/12/1992:1.5
	MLWorks-1-0-2-15/12/1992:1.5
	MLWorks-1-0-1-04/12/1992:1.5
	checkpoint_17_08_92:1.3;
locks; strict;
comment	@ * @;


1.12
date	98.08.27.12.16.46;	author jont;	state Exp;
branches
	1.12.1.1;
next	1.11;

1.11
date	97.04.24.15.40.18;	author jont;	state Exp;
branches
	1.11.1.1
	1.11.2.1;
next	1.10;

1.10
date	97.01.22.16.01.42;	author jont;	state Exp;
branches
	1.10.1.1;
next	1.9;

1.9
date	95.12.27.15.50.57;	author jont;	state Exp;
branches
	1.9.1.1
	1.9.2.1
	1.9.3.1
	1.9.4.1
	1.9.5.1
	1.9.6.1
	1.9.7.1;
next	1.8;

1.8
date	95.05.30.11.08.27;	author matthew;	state Exp;
branches;
next	1.7;

1.7
date	93.10.11.13.24.03;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	93.05.18.14.45.04;	author jont;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	92.11.03.14.11.25;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	92.10.05.13.15.09;	author clive;	state Exp;
branches;
next	1.3;

1.3
date	92.06.19.10.53.36;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	92.06.08.14.28.24;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	92.06.04.15.02.25;	author richard;	state Exp;
branches;
next	;

1.6.1.1
date	93.05.18.14.45.04;	author jont;	state Exp;
branches;
next	;

1.9.1.1
date	96.09.13.11.14.24;	author hope;	state Exp;
branches;
next	;

1.9.2.1
date	96.10.07.16.04.51;	author hope;	state Exp;
branches;
next	;

1.9.3.1
date	96.10.17.11.23.05;	author hope;	state Exp;
branches;
next	;

1.9.4.1
date	96.11.14.12.47.23;	author hope;	state Exp;
branches
	1.9.4.1.1.1;
next	;

1.9.4.1.1.1
date	96.11.28.14.58.57;	author hope;	state Exp;
branches;
next	;

1.9.5.1
date	96.11.22.18.07.27;	author hope;	state Exp;
branches;
next	;

1.9.6.1
date	96.12.17.17.46.11;	author hope;	state Exp;
branches
	1.9.6.1.1.1;
next	;

1.9.6.1.1.1
date	97.02.24.11.35.47;	author hope;	state Exp;
branches;
next	;

1.9.7.1
date	96.12.18.09.40.09;	author hope;	state Exp;
branches;
next	;

1.10.1.1
date	97.05.12.10.32.30;	author hope;	state Exp;
branches
	1.10.1.1.1.1
	1.10.1.1.2.1
	1.10.1.1.3.1;
next	;

1.10.1.1.1.1
date	97.07.28.18.18.15;	author daveb;	state Exp;
branches
	1.10.1.1.1.1.1.1;
next	;

1.10.1.1.1.1.1.1
date	97.10.07.11.43.14;	author jkbrook;	state Exp;
branches;
next	;

1.10.1.1.2.1
date	97.09.08.17.11.48;	author daveb;	state Exp;
branches;
next	;

1.10.1.1.3.1
date	97.09.09.14.07.24;	author daveb;	state Exp;
branches;
next	;

1.11.1.1
date	97.09.10.19.22.13;	author brucem;	state Exp;
branches;
next	;

1.11.2.1
date	97.09.11.20.53.31;	author daveb;	state Exp;
branches;
next	;

1.12.1.1
date	99.04.01.17.56.07;	author daveb;	state Exp;
branches;
next	;


desc
@Register colourer instanced for GC registers
@


1.12
log
@[Bug #70040]
Modify register colourer to use stack colourer only if requested from machspec
@
text
@(*  ==== GC REGISTER COLOURER ====
 *            STRUCTURE
 *
 *  Copyright (C) 1992 Harlequin Ltd.
 *
 *  Revision Log
 *  -------------
 *  $Log: __gccolourer.sml,v $
 * Revision 1.11  1997/04/24  15:40:18  jont
 * [Bug #20007]
 * [Bug #20007]
 * Adding reserved_but_preferencable registers
 *
 * Revision 1.10  1997/01/22  16:01:42  jont
 * Adding corrupted_by_callee to functor parameter
 *
 * Revision 1.9  1995/12/27  15:50:57  jont
 * Remove __option
 *
 *  Revision 1.8  1995/05/30  11:08:27  matthew
 *  Adding debugging_available value
 *
 *  Revision 1.7  1993/10/11  13:24:03  jont
 *  Added option parameter
 *
 *  Revision 1.6  1993/05/18  14:45:04  jont
 *  Removed Integer parameter
 *
 *  Revision 1.5  1992/11/03  14:11:25  jont
 *  Efficiency changes to use mononewmap for registers and tags
 *
 *  Revision 1.4  1992/10/05  13:15:09  clive
 *  Change to NewMap.empty which now takes < and = functions instead of the single-function
 *
 *  Revision 1.3  1992/06/19  10:53:36  richard
 *  Added instance_name and available temporaries parameters.
 *
 *  Revision 1.2  1992/06/08  14:28:24  richard
 *  Added allocation order for registers.
 *
 *  Revision 1.1  1992/06/04  15:02:25  richard
 *  Initial revision
 *
 *)


require "../utils/__lists";
require "../utils/__crash";
require "../utils/__text";
require "../utils/__smallintset";
require "../utils/_diagnostic";
require "../machine/__machspec";
require "__mirtypes";
require "__mirregisters";
require "_registercolourer";


structure GCColourer_ =
  RegisterColourer
  (structure Lists = Lists_
   structure IntSet = SmallIntSet_
   structure Crash = Crash_
   structure Register = MirTypes_.GC
   structure Diagnostic = Diagnostic (structure Text = Text_)
   structure MachSpec = MachSpec_

   val instance_name = Text_.from_string "GC"

   val allocation_order = #gc MirRegisters_.allocation_order
   val allocation_equal = #gc MirRegisters_.allocation_equal

   val preassigned      = #gc MirRegisters_.preassigned
   val corrupted_by_callee = #gc MirRegisters_.corrupted_by_callee
   val available        = #gc MirRegisters_.general_purpose
   val debugging_available        = #gc MirRegisters_.debugging_general_purpose
   val temporaries	= #gc MirRegisters_.temporary
   val reserved_but_preferencable = #gc MirRegisters_.gp_for_preferencing
   val debugger_reserved_but_preferencable = #gc MirRegisters_.debugging_gp_for_preferencing)
@


1.12.1.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a8 4
 * Revision 1.12  1998/08/27  12:16:46  jont
 * [Bug #70040]
 * Modify register colourer to use stack colourer only if requested from machspec
 *
@


1.11
log
@[Bug #20007]
[Bug #20007]
Adding reserved_but_preferencable registers
@
text
@d9 5
d52 1
d65 1
@


1.11.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a8 5
 * Revision 1.11  1997/04/24  15:40:18  jont
 * [Bug #20007]
 * [Bug #20007]
 * Adding reserved_but_preferencable registers
 *
@


1.11.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a8 5
 * Revision 1.11  1997/04/24  15:40:18  jont
 * [Bug #20007]
 * [Bug #20007]
 * Adding reserved_but_preferencable registers
 *
@


1.10
log
@Adding corrupted_by_callee to functor parameter
@
text
@d9 3
d69 3
a71 1
   val temporaries	= #gc MirRegisters_.temporary)
@


1.10.1.1
log
@branched from 1.10
@
text
@a8 3
 * Revision 1.10  1997/01/22  16:01:42  jont
 * Adding corrupted_by_callee to functor parameter
 *
@


1.10.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a8 3
 * Revision 1.10.1.1  1997/05/12  10:32:30  hope
 * branched from 1.10
 *
@


1.10.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a8 3
 * Revision 1.10.1.1  1997/05/12  10:32:30  hope
 * branched from 1.10
 *
@


1.10.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a8 3
 * Revision 1.10.1.1  1997/05/12  10:32:30  hope
 * branched from 1.10
 *
@


1.10.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a8 3
 * Revision 1.10.1.1.1.1  1997/07/28  18:18:15  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.9
log
@Remove __option
@
text
@d9 3
d63 1
@


1.9.7.1
log
@branched from 1.9
@
text
@a8 3
 * Revision 1.9  1995/12/27  15:50:57  jont
 * Remove __option
 *
@


1.9.6.1
log
@branched from 1.9
@
text
@a8 3
 * Revision 1.9  1995/12/27  15:50:57  jont
 * Remove __option
 *
@


1.9.6.1.1.1
log
@branched from 1.9.6.1
@
text
@a8 3
 * Revision 1.9.6.1  1996/12/17  17:46:11  hope
 * branched from 1.9
 *
@


1.9.5.1
log
@branched from 1.9
@
text
@a8 3
 * Revision 1.9  1995/12/27  15:50:57  jont
 * Remove __option
 *
@


1.9.4.1
log
@branched from 1.9
@
text
@a8 3
 * Revision 1.9  1995/12/27  15:50:57  jont
 * Remove __option
 *
@


1.9.4.1.1.1
log
@branched from 1.9.4.1
@
text
@a8 3
 * Revision 1.9.4.1  1996/11/14  12:47:23  hope
 * branched from 1.9
 *
@


1.9.3.1
log
@branched from 1.9
@
text
@a8 3
 * Revision 1.9  1995/12/27  15:50:57  jont
 * Remove __option
 *
@


1.9.2.1
log
@branched from 1.9
@
text
@a8 3
 * Revision 1.9  1995/12/27  15:50:57  jont
 * Remove __option
 *
@


1.9.1.1
log
@branched from 1.9
@
text
@a8 3
 * Revision 1.9  1995/12/27  15:50:57  jont
 * Remove __option
 *
@


1.8
log
@Adding debugging_available value
@
text
@d9 3
a39 1
require "../utils/__option";
a50 1
   structure Option = Option_
@


1.7
log
@Added option parameter
@
text
@d9 3
d60 1
@


1.6
log
@Removed Integer parameter
@
text
@d9 3
d34 1
d46 1
@


1.6.1.1
log
@Fork for bug fixing
@
text
@a8 3
 *  Revision 1.6  1993/05/18  14:45:04  jont
 *  Removed Integer parameter
 *
@


1.5
log
@Efficiency changes to use mononewmap for registers and tags
@
text
@d9 3
a29 1
require "../utils/__integer";
a39 1
   structure Integer = Integer_
@


1.4
log
@Change to NewMap.empty which now takes < and = functions instead of the single-function
@
text
@d9 3
a24 1
require "../utils/__btree";
a37 1
   structure Map = BTree_
@


1.3
log
@Added instance_name and available temporaries parameters.
@
text
@d9 3
d45 2
a46 5
   local
     structure S : sig datatype relation = LESS | EQUAL | GREATER end = MirRegisters_
   in
     open S
   end
a47 1
   val allocation_order = #gc MirRegisters_.allocation_order
@


1.2
log
@Added allocation order for registers.
@
text
@d9 3
d40 2
d50 2
a51 1
   val available        = #gc MirRegisters_.general_purpose)
@


1.1
log
@Initial revision
@
text
@d8 4
a11 1
 *  $Log$
d20 1
d32 1
d36 10
a45 3
        
   val preassigned = #gc MirRegisters_.preassigned
   val available   = #gc MirRegisters_.general_purpose)
@
