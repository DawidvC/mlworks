head	1.16;
access;
symbols
	MLW_daveb_inline_1_4_99:1.16.3
	MLWorks_21c0_1999_03_25:1.16
	MLWorks_20c1_1998_08_20:1.16
	MLWorks_20c0_1998_08_04:1.16
	MLWorks_20b2c2_1998_06_19:1.16
	MLWorks_20b2_Windows_1998_06_12:1.16
	MLWorks_20b1c1_1998_05_07:1.16
	MLWorks_20b0_1998_04_07:1.16
	MLWorks_20b0_1998_03_20:1.16
	MLWorks_20m2_1998_02_16:1.16
	MLWorks_20m1_1997_10_23:1.16
	MLWorks_11r1:1.15.8.1.1.1.1
	MLWorks_workspace_97:1.16.2
	MLWorks_dt_wizard:1.16.1
	MLWorks_11c0_1997_09_09:1.15.8.1.1.1
	MLWorks_10r3:1.15.8.1.3
	MLWorks_10r2_551:1.15.8.1.2
	MLWorks_11:1.15.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.15.8.1
	MLWorks_20m0_1997_06_20:1.16
	MLWorks_1_0_r2c2_1997_06_14:1.15.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.15.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.15.8
	MLWorks_BugFix_1997_04_24:1.15
	MLWorks_1_0_r2_Win32_1997_04_11:1.15
	MLWorks_1_0_r2_Unix_1997_04_04:1.15
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.15.6.1.1
	MLWorks_gui_1996_12_18:1.15.7
	MLWorks_1_0_Win32_1996_12_17:1.15.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.15.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.15.4.1
	MLWorks_1_0_Irix_1996_11_28:1.15.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.15.5
	MLWorks_1_0_Unix_1996_11_14:1.15.4
	MLWorks_Open_Beta2_1996_10_11:1.15.3
	MLWorks_License_dev:1.15.2
	MLWorks_1_open_beta_1996_09_13:1.15.1
	MLWorks_Open_Beta_1996_08_22:1.15
	MLWorks_Beta_1996_07_02:1.15
	MLWorks_Beta_1996_06_07:1.15
	MLWorks_Beta_1996_06_06:1.15
	MLWorks_Beta_1996_06_05:1.15
	MLWorks_Beta_1996_06_03:1.15
	MLWorks_Beta_1996_05_31:1.15
	MLWorks_Beta_1996_05_30:1.15
	ML_beta_release_12/08/94:1.13
	ML_beta_release_03/08/94:1.13
	ML_revised_beta_release_25/05/94:1.13
	ML_final_beta_release_02/03/94:1.13
	mlworks-28-01-1994:1.13
	Release:1.13
	mlworks-beta-01-09-1993:1.13
	MLWorks-1-0-4-29/01/1993:1.11
	MLWorks-1-0-3-21/12/1992:1.11
	MLWorks-1-0-2-15/12/1992:1.11
	MLWorks-1-0-1-04/12/1992:1.11
	checkpoint_17_08_92:1.9
	Ten15_release_19-08-91:1.4
	ten15_release:1.3;
locks; strict;
comment	@ * @;


1.16
date	97.05.01.12.37.02;	author jont;	state Exp;
branches
	1.16.1.1
	1.16.2.1
	1.16.3.1;
next	1.15;

1.15
date	95.12.04.11.48.56;	author matthew;	state Exp;
branches
	1.15.1.1
	1.15.2.1
	1.15.3.1
	1.15.4.1
	1.15.5.1
	1.15.6.1
	1.15.7.1
	1.15.8.1;
next	1.14;

1.14
date	94.10.11.15.26.28;	author matthew;	state Exp;
branches;
next	1.13;

1.13
date	93.03.10.17.13.29;	author matthew;	state Exp;
branches
	1.13.1.1;
next	1.12;

1.12
date	93.02.01.16.41.28;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	92.10.30.12.08.58;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	92.08.19.18.03.06;	author davidt;	state Exp;
branches;
next	1.9;

1.9
date	92.07.21.11.37.21;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	91.09.05.16.34.15;	author jont;	state Exp;
branches
	1.8.1.1;
next	1.7;

1.7
date	91.09.02.11.36.00;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	91.08.30.15.48.48;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	91.08.23.13.39.33;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	91.08.15.11.12.06;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	91.07.30.17.28.29;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.07.26.14.20.58;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.07.25.11.15.03;	author jont;	state Exp;
branches;
next	;

1.8.1.1
date	91.09.26.15.02.02;	author richard;	state Exp;
branches;
next	;

1.13.1.1
date	93.03.10.17.13.29;	author jont;	state Exp;
branches;
next	;

1.15.1.1
date	96.09.13.11.14.46;	author hope;	state Exp;
branches;
next	;

1.15.2.1
date	96.10.07.16.05.09;	author hope;	state Exp;
branches;
next	;

1.15.3.1
date	96.10.17.11.23.24;	author hope;	state Exp;
branches;
next	;

1.15.4.1
date	96.11.14.12.47.44;	author hope;	state Exp;
branches
	1.15.4.1.1.1;
next	;

1.15.4.1.1.1
date	96.11.28.14.59.16;	author hope;	state Exp;
branches;
next	;

1.15.5.1
date	96.11.22.18.07.47;	author hope;	state Exp;
branches;
next	;

1.15.6.1
date	96.12.17.17.46.29;	author hope;	state Exp;
branches
	1.15.6.1.1.1;
next	;

1.15.6.1.1.1
date	97.02.24.11.36.07;	author hope;	state Exp;
branches;
next	;

1.15.7.1
date	96.12.18.09.40.29;	author hope;	state Exp;
branches;
next	;

1.15.8.1
date	97.05.12.10.32.49;	author hope;	state Exp;
branches
	1.15.8.1.1.1
	1.15.8.1.2.1
	1.15.8.1.3.1;
next	;

1.15.8.1.1.1
date	97.07.28.18.17.45;	author daveb;	state Exp;
branches
	1.15.8.1.1.1.1.1;
next	;

1.15.8.1.1.1.1.1
date	97.10.07.11.42.39;	author jkbrook;	state Exp;
branches;
next	;

1.15.8.1.2.1
date	97.09.08.17.11.17;	author daveb;	state Exp;
branches;
next	;

1.15.8.1.3.1
date	97.09.09.14.06.54;	author daveb;	state Exp;
branches;
next	;

1.16.1.1
date	97.09.10.19.21.29;	author brucem;	state Exp;
branches;
next	;

1.16.2.1
date	97.09.11.20.52.42;	author daveb;	state Exp;
branches;
next	;

1.16.3.1
date	99.04.01.17.55.47;	author daveb;	state Exp;
branches;
next	;


desc
@Environment relating lambda vaiables to mir registers etc
@


1.16
log
@[Bug #30088]
Get rid of MLWorks.Option
@
text
@(* mir_env.sml the signature *)
(*
$Log: mir_env.sml,v $
 * Revision 1.15  1995/12/04  11:48:56  matthew
 * Adding Map type
 *
Revision 1.14  1994/10/11  15:26:28  matthew
Make lookup_in_closure return an Option value

Revision 1.13  1993/03/10  17:13:29  matthew
Signature revisions

Revision 1.12  1993/02/01  16:41:28  matthew
Added sharing

Revision 1.11  1992/10/30  12:08:58  jont
Changed to use LambdaTypes.Map

Revision 1.10  1992/08/19  18:03:06  davidt
Mir_Env now uses NewMap instead of Map.

Revision 1.9  1992/07/21  11:37:21  jont
Removed is_in_lambda_env and is_in_closure_env, not needed

Revision 1.8  1991/09/05  16:34:15  jont
Added augment_lambda_env

Revision 1.7  91/09/02  11:36:00  jont
Removed translations from primitives to HARP

Revision 1.6  91/08/30  15:48:48  jont
Removed Prim_Calc and associated items, now explicit in mir_cg

Revision 1.5  91/08/23  13:39:33  jont
Changed to use pervasives

Revision 1.4  91/08/15  11:12:06  jont
Updated for later version of HARP

Revision 1.3  91/07/30  17:28:29  jont
Added closure environment

Revision 1.2  91/07/26  14:20:58  jont
Added empty_lambda_env

Revision 1.1  91/07/25  11:15:03  jont
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

require "../lambda/lambdatypes";
require "mirtypes";

signature MIR_ENV =
  sig
    structure LambdaTypes : LAMBDATYPES
    structure MirTypes : MIRTYPES
    type 'a Map 
    sharing type MirTypes.Debugger_Types.Type = LambdaTypes.Type

    datatype Lambda_Env =
      LAMBDA_ENV of (MirTypes.any_register) Map
    val empty_lambda_env : Lambda_Env

    datatype Closure_Env = CLOSURE_ENV of int Map
    val empty_closure_env : Closure_Env
      
    val add_lambda_env:
      (LambdaTypes.LVar * MirTypes.any_register) * Lambda_Env -> Lambda_Env
    val lookup_lambda: LambdaTypes.LVar * Lambda_Env -> MirTypes.any_register option
    val augment_lambda_env:  Lambda_Env * Lambda_Env -> Lambda_Env
    val add_closure_env:
      (LambdaTypes.LVar * int) * Closure_Env -> Closure_Env
    val lookup_in_closure: LambdaTypes.LVar * Closure_Env -> int option
  end;
@


1.16.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.16  1997/05/01  12:37:02  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.16.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.16  1997/05/01  12:37:02  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.16.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.16  1997/05/01  12:37:02  jont
 * [Bug #30088]
 * Get rid of MLWorks.Option
 *
@


1.15
log
@Adding Map type
@
text
@d4 3
d71 1
a71 1
    val lookup_lambda: LambdaTypes.LVar * Lambda_Env -> MirTypes.any_register MLWorks.Option.option
d75 1
a75 1
    val lookup_in_closure: LambdaTypes.LVar * Closure_Env -> int MLWorks.Option.option
@


1.15.8.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1995/12/04  11:48:56  matthew
 * Adding Map type
 *
@


1.15.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.15.8.1  1997/05/12  10:32:49  hope
 * branched from 1.15
 *
@


1.15.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.15.8.1  1997/05/12  10:32:49  hope
 * branched from 1.15
 *
@


1.15.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.15.8.1  1997/05/12  10:32:49  hope
 * branched from 1.15
 *
@


1.15.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.15.8.1.1.1  1997/07/28  18:17:45  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.15.7.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1995/12/04  11:48:56  matthew
 * Adding Map type
 *
@


1.15.6.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1995/12/04  11:48:56  matthew
 * Adding Map type
 *
@


1.15.6.1.1.1
log
@branched from 1.15.6.1
@
text
@a3 3
 * Revision 1.15.6.1  1996/12/17  17:46:29  hope
 * branched from 1.15
 *
@


1.15.5.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1995/12/04  11:48:56  matthew
 * Adding Map type
 *
@


1.15.4.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1995/12/04  11:48:56  matthew
 * Adding Map type
 *
@


1.15.4.1.1.1
log
@branched from 1.15.4.1
@
text
@a3 3
 * Revision 1.15.4.1  1996/11/14  12:47:44  hope
 * branched from 1.15
 *
@


1.15.3.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1995/12/04  11:48:56  matthew
 * Adding Map type
 *
@


1.15.2.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1995/12/04  11:48:56  matthew
 * Adding Map type
 *
@


1.15.1.1
log
@branched from 1.15
@
text
@a3 3
 * Revision 1.15  1995/12/04  11:48:56  matthew
 * Adding Map type
 *
@


1.14
log
@Make lookup_in_closure return an Option value
@
text
@d4 3
d56 1
a56 1

d60 1
a60 1
      LAMBDA_ENV of (MirTypes.any_register) LambdaTypes.Map.T
d63 1
a63 2
    datatype Closure_Env =
      CLOSURE_ENV of (int) LambdaTypes.Map.T
@


1.13
log
@Signature revisions
@
text
@d4 3
a63 2
    exception Lookup

d66 1
a66 1
    val lookup_lambda: LambdaTypes.LVar * Lambda_Env -> MirTypes.any_register
d70 1
a70 1
    val lookup_in_closure: LambdaTypes.LVar * Closure_Env -> int
@


1.13.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.13  1993/03/10  17:13:29  matthew
Signature revisions

@


1.12
log
@Added sharing
@
text
@d4 3
d51 1
a51 1
    sharing MirTypes.Debugger_Types.Datatypes = LambdaTypes.Datatypes
@


1.11
log
@Changed to use LambdaTypes.Map
@
text
@d4 3
d47 2
@


1.10
log
@Mir_Env now uses NewMap instead of Map.
@
text
@d4 3
d46 1
a46 1
      LAMBDA_ENV of (LambdaTypes.LVar, MirTypes.any_register) LambdaTypes.Datatypes.NewMap.T
d50 1
a50 1
      CLOSURE_ENV of (LambdaTypes.LVar, int) LambdaTypes.Datatypes.NewMap.T
@


1.9
log
@Removed is_in_lambda_env and is_in_closure_env, not needed
@
text
@d4 3
a33 1
require "../utils/map";
d37 23
a59 21
signature MIR_ENV = sig
  structure Map : MAP
  structure LambdaTypes : LAMBDATYPES
  structure MirTypes : MIRTYPES

  datatype Lambda_Env =
    LAMBDA_ENV of (LambdaTypes.LVar, MirTypes.any_register) Map.Map
  val empty_lambda_env : Lambda_Env

  datatype Closure_Env =
    CLOSURE_ENV of (LambdaTypes.LVar, int) Map.Map
  val empty_closure_env : Closure_Env

  val add_lambda_env:
    (LambdaTypes.LVar * MirTypes.any_register) * Lambda_Env -> Lambda_Env
  val lookup_lambda: LambdaTypes.LVar * Lambda_Env -> MirTypes.any_register
  val augment_lambda_env:  Lambda_Env * Lambda_Env -> Lambda_Env
  val add_closure_env:
    (LambdaTypes.LVar * int) * Closure_Env -> Closure_Env
  val lookup_in_closure: LambdaTypes.LVar * Closure_Env -> int
end
@


1.8
log
@Added augment_lambda_env
@
text
@d3 4
a6 1
$Log:	mir_env.sml,v $
a50 1
  val is_in_lambda_env: LambdaTypes.LVar * Lambda_Env -> bool
a54 1
  val is_in_closure: LambdaTypes.LVar * Closure_Env -> bool
@


1.8.1.1
log
@This is a modified version to use the reworked MirTypes module
(ver 1.23.1.1). This module is correct, but work has been suspended
on this branch because of the amount of time it would take to convert
the code generator (Mir_Cg) module.
@
text
@a3 3
Revision 1.8  91/09/05  16:34:15  jont
Added augment_lambda_env

d38 1
a38 1
    LAMBDA_ENV of (LambdaTypes.LVar, MirTypes.virtual_register) Map.Map
d46 2
a47 2
    (LambdaTypes.LVar * MirTypes.virtual_register) * Lambda_Env -> Lambda_Env
  val lookup_lambda: LambdaTypes.LVar * Lambda_Env -> MirTypes.virtual_register
@


1.7
log
@Removed translations from primitives to HARP
@
text
@d4 3
d49 1
@


1.6
log
@Removed Prim_Calc and associated items, now explicit in mir_cg
@
text
@d4 3
a37 6
  datatype test =
    ITEST of MirTypes.cond_branch |
    FTEST of MirTypes.fcond_branch * bool (* Sense of test *)

  type Prim_Test_Env

d45 1
a45 4
  val lookup_prim_test:
    LambdaTypes.Primitive * Prim_Test_Env -> test
  val is_prim_test : LambdaTypes.Primitive * Prim_Test_Env -> bool
  val initial_prim_test_env: Prim_Test_Env
@


1.5
log
@Changed to use pervasives
@
text
@d4 3
d32 1
a32 1
    LAMBDA_ENV of (LambdaTypes.LVar, MirTypes.reg_operand) Map.Map
a34 2
  type Prim_Calc_Env

d46 2
a47 6
    (LambdaTypes.LVar * MirTypes.reg_operand) * Lambda_Env -> Lambda_Env
  val lookup_lambda: LambdaTypes.LVar * Lambda_Env -> MirTypes.reg_operand
  val lookup_prim_calc:
    LambdaTypes.Primitive * Prim_Calc_Env -> MirTypes.calc_op
  val is_prim_calc : LambdaTypes.Primitive * Prim_Calc_Env -> bool
  val initial_prim_calc_env: Prim_Calc_Env
@


1.4
log
@Updated for later version of HARP
@
text
@d4 3
d32 1
a32 2
  datatype Prim_Calc_Env =
    PRIM_CALC_ENV of (LambdaTypes.Primitive, MirTypes.calc_op) Map.Map
d38 1
a38 3
  datatype Prim_Test_Env =
    PRIM_TEST_ENV of
    (LambdaTypes.Primitive, test) Map.Map
a46 2
  val add_prim_calc_env:
    (LambdaTypes.Primitive * MirTypes.calc_op) * Prim_Calc_Env -> Prim_Calc_Env
a50 3
  val add_prim_test_env:
    (LambdaTypes.Primitive * test)
     * Prim_Test_Env -> Prim_Test_Env
@


1.3
log
@Added closure environment
@
text
@d4 3
d24 1
d28 1
d31 5
d38 2
a39 1
    (LambdaTypes.Primitive, (MirTypes.calc_op * MirTypes.branch)) Map.Map
d43 1
d54 1
a54 1
    (LambdaTypes.Primitive * (MirTypes.calc_op * MirTypes.branch))
d57 1
a57 2
    LambdaTypes.Primitive * Prim_Test_Env ->
     (MirTypes.calc_op * MirTypes.branch)
@


1.2
log
@Added empty_lambda_env
@
text
@d4 3
d29 3
d49 4
@


1.1
log
@Initial revision
@
text
@d3 4
a6 1
$Log$
d20 1
@
