head	1.24;
access;
symbols
	MLW_daveb_inline_1_4_99:1.24.11
	MLWorks_21c0_1999_03_25:1.24
	MLWorks_20c1_1998_08_20:1.24
	MLWorks_20c0_1998_08_04:1.24
	MLWorks_20b2c2_1998_06_19:1.24
	MLWorks_20b2_Windows_1998_06_12:1.24
	MLWorks_20b1c1_1998_05_07:1.24
	MLWorks_20b0_1998_04_07:1.24
	MLWorks_20b0_1998_03_20:1.24
	MLWorks_20m2_1998_02_16:1.24
	MLWorks_20m1_1997_10_23:1.24
	MLWorks_11r1:1.24.8.1.1.1.1
	MLWorks_workspace_97:1.24.10
	MLWorks_dt_wizard:1.24.9
	MLWorks_11c0_1997_09_09:1.24.8.1.1.1
	MLWorks_10r3:1.24.8.1.3
	MLWorks_10r2_551:1.24.8.1.2
	MLWorks_11:1.24.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.24.8.1
	MLWorks_20m0_1997_06_20:1.24
	MLWorks_1_0_r2c2_1997_06_14:1.24.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.24.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.24.8
	MLWorks_BugFix_1997_04_24:1.24
	MLWorks_1_0_r2_Win32_1997_04_11:1.24
	MLWorks_1_0_r2_Unix_1997_04_04:1.24
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.24.6.1.1
	MLWorks_gui_1996_12_18:1.24.7
	MLWorks_1_0_Win32_1996_12_17:1.24.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.24.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.24.4.1
	MLWorks_1_0_Irix_1996_11_28:1.24.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.24.5
	MLWorks_1_0_Unix_1996_11_14:1.24.4
	MLWorks_Open_Beta2_1996_10_11:1.24.3
	MLWorks_License_dev:1.24.2
	MLWorks_1_open_beta_1996_09_13:1.24.1
	MLWorks_Open_Beta_1996_08_22:1.24
	MLWorks_Beta_1996_07_02:1.24
	MLWorks_Beta_1996_06_07:1.24
	MLWorks_Beta_1996_06_06:1.24
	MLWorks_Beta_1996_06_05:1.24
	MLWorks_Beta_1996_06_03:1.24
	MLWorks_Beta_1996_05_31:1.24
	MLWorks_Beta_1996_05_30:1.24
	ML_beta_release_12/08/94:1.23
	ML_beta_release_03/08/94:1.23
	ML_revised_beta_release_25/05/94:1.23
	ML_final_beta_release_02/03/94:1.23
	mlworks-28-01-1994:1.23
	Release:1.23
	mlworks-beta-01-09-1993:1.23
	MLWorks-1-0-4-29/01/1993:1.20
	MLWorks-1-0-3-21/12/1992:1.20
	MLWorks-1-0-2-15/12/1992:1.20
	MLWorks-1-0-1-04/12/1992:1.19
	checkpoint_17_08_92:1.12
	Ten15_release_19-08-91:1.3
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.24
date	95.02.13.15.04.43;	author matthew;	state Exp;
branches
	1.24.1.1
	1.24.2.1
	1.24.3.1
	1.24.4.1
	1.24.5.1
	1.24.6.1
	1.24.7.1
	1.24.8.1
	1.24.9.1
	1.24.10.1
	1.24.11.1;
next	1.23;

1.23
date	93.06.23.15.27.01;	author daveb;	state Exp;
branches
	1.23.1.1;
next	1.22;

1.22
date	93.03.10.17.18.03;	author matthew;	state Exp;
branches;
next	1.21;

1.21
date	93.03.04.14.49.12;	author matthew;	state Exp;
branches;
next	1.20;

1.20
date	92.12.08.19.36.31;	author jont;	state Exp;
branches;
next	1.19;

1.19
date	92.12.01.14.58.51;	author daveb;	state Exp;
branches;
next	1.18;

1.18
date	92.11.04.15.49.14;	author matthew;	state Exp;
branches;
next	1.17;

1.17
date	92.09.10.09.35.22;	author richard;	state Exp;
branches;
next	1.16;

1.16
date	92.09.09.10.03.41;	author clive;	state Exp;
branches;
next	1.15;

1.15
date	92.09.01.11.30.12;	author clive;	state Exp;
branches;
next	1.14;

1.14
date	92.08.26.14.30.53;	author jont;	state Exp;
branches;
next	1.13;

1.13
date	92.08.24.16.11.31;	author clive;	state Exp;
branches;
next	1.12;

1.12
date	92.08.07.11.37.03;	author clive;	state Exp;
branches;
next	1.11;

1.11
date	92.07.08.10.50.35;	author clive;	state Exp;
branches;
next	1.10;

1.10
date	92.06.11.10.50.09;	author clive;	state Exp;
branches;
next	1.9;

1.9
date	92.05.08.16.15.55;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	92.04.13.15.22.23;	author clive;	state Exp;
branches;
next	1.7;

1.7
date	92.01.14.12.26.56;	author clive;	state Exp;
branches;
next	1.6;

1.6
date	92.01.14.12.26.56;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	91.09.18.12.00.27;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	91.09.16.15.49.56;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	91.08.07.15.23.02;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.07.31.18.05.32;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.07.25.10.27.36;	author jont;	state Exp;
branches;
next	;

1.23.1.1
date	93.06.23.15.27.01;	author jont;	state Exp;
branches;
next	;

1.24.1.1
date	96.09.13.11.14.47;	author hope;	state Exp;
branches;
next	;

1.24.2.1
date	96.10.07.16.05.10;	author hope;	state Exp;
branches;
next	;

1.24.3.1
date	96.10.17.11.23.25;	author hope;	state Exp;
branches;
next	;

1.24.4.1
date	96.11.14.12.47.45;	author hope;	state Exp;
branches
	1.24.4.1.1.1;
next	;

1.24.4.1.1.1
date	96.11.28.14.59.17;	author hope;	state Exp;
branches;
next	;

1.24.5.1
date	96.11.22.18.07.48;	author hope;	state Exp;
branches;
next	;

1.24.6.1
date	96.12.17.17.46.30;	author hope;	state Exp;
branches
	1.24.6.1.1.1;
next	;

1.24.6.1.1.1
date	97.02.24.11.36.08;	author hope;	state Exp;
branches;
next	;

1.24.7.1
date	96.12.18.09.40.29;	author hope;	state Exp;
branches;
next	;

1.24.8.1
date	97.05.12.10.32.50;	author hope;	state Exp;
branches
	1.24.8.1.1.1
	1.24.8.1.2.1
	1.24.8.1.3.1;
next	;

1.24.8.1.1.1
date	97.07.28.18.17.46;	author daveb;	state Exp;
branches
	1.24.8.1.1.1.1.1;
next	;

1.24.8.1.1.1.1.1
date	97.10.07.11.42.39;	author jkbrook;	state Exp;
branches;
next	;

1.24.8.1.2.1
date	97.09.08.17.11.18;	author daveb;	state Exp;
branches;
next	;

1.24.8.1.3.1
date	97.09.09.14.06.55;	author daveb;	state Exp;
branches;
next	;

1.24.9.1
date	97.09.10.19.21.30;	author brucem;	state Exp;
branches;
next	;

1.24.10.1
date	97.09.11.20.52.44;	author daveb;	state Exp;
branches;
next	;

1.24.11.1
date	99.04.01.17.55.48;	author daveb;	state Exp;
branches;
next	;


desc
@Code generator from lambda to mir
@


1.24
log
@Changes to DebuggerTypes structure
Changes to DebuggerTypes structure
@
text
@(* mir_cg.sml the signature *)
(*
$Log: mir_cg.sml,v $
Revision 1.23  1993/06/23  15:27:01  daveb
Replaced EnvironTypes with LambdaTypes.

Revision 1.22  1993/03/10  17:18:03  matthew
Signature revisions

Revision 1.21  1993/03/04  14:49:12  matthew
Options & Info changes

Revision 1.20  1992/12/08  19:36:31  jont
Removed a number of duplicated signatures and structures

Revision 1.19  1992/12/01  14:58:51  daveb
Changes to propagate compiler options as parameters instead of references.

Revision 1.18  1992/11/04  15:49:14  matthew
Changed Error structure to Info

Revision 1.17  1992/09/10  09:35:22  richard
Created a type `information' which wraps up the debugger information
needed in so many parts of the compiler.

Revision 1.16  1992/09/09  10:03:41  clive
Added flag to switch off warning messages in generating recipes

Revision 1.15  1992/09/01  11:30:12  clive
Added switches for self call optimisation

Revision 1.14  1992/08/26  14:30:53  jont
Removed some redundant structures and sharing

Revision 1.13  1992/08/24  16:11:31  clive
Added details about leafness to the debug information

Revision 1.12  1992/08/07  11:37:03  clive
Added a flag to turn off tail-call optimisation

Revision 1.11  1992/07/08  10:50:35  clive
Added call point information

Revision 1.10  1992/06/11  10:50:09  clive
Changes for the recording of FNexp type information

Revision 1.9  1992/05/08  16:15:55  jont
*** empty log message ***

Revision 1.8  1992/04/13  15:22:23  clive
First version of the profiler

Revision 1.7  1992/01/14  12:26:56  clive
More work on arrays

Revision 1.6  1992/01/14  12:26:56  jont
Added diagnostic parameter

Revision 1.5  1991/09/18  12:00:27  jont
Removed fn_arg etc to separate module

Revision 1.4  91/09/16  15:49:56  jont
Added sp, fp, handler

Revision 1.3  91/08/07  15:23:02  jont
Added cl_arg' for the function body version of the closure pointer,
whereas cl_arg is now only for the caller immediately prior to the
call, and for the function entry sequence. This preserves a calle
save model

Revision 1.2  91/07/31  18:05:32  jont
Exported the arg and closure registers

Revision 1.1  91/07/25  10:27:36  jont
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

require "../utils/diagnostic";
require "../lambda/lambdatypes";
require "../main/info";
require "../main/options";
require "mirtypes";

signature MIR_CG = sig
  structure Diagnostic : DIAGNOSTIC
  structure LambdaTypes : LAMBDATYPES
  structure MirTypes : MIRTYPES
  structure Info : INFO
  structure Options : OPTIONS

  sharing type MirTypes.Debugger_Types.Type = LambdaTypes.Type

  val mir_cg :
    Info.options ->
    Options.options * LambdaTypes.LambdaExp * string * MirTypes.Debugger_Types.information ->
    MirTypes.mir_code * MirTypes.Debugger_Types.information
end
@


1.24.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.24  1995/02/13  15:04:43  matthew
 * Changes to DebuggerTypes structure
 * Changes to DebuggerTypes structure
 *
@


1.24.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.24  1995/02/13  15:04:43  matthew
 * Changes to DebuggerTypes structure
 * Changes to DebuggerTypes structure
 *
@


1.24.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.24  1995/02/13  15:04:43  matthew
 * Changes to DebuggerTypes structure
 * Changes to DebuggerTypes structure
 *
@


1.24.8.1
log
@branched from 1.24
@
text
@a3 4
 * Revision 1.24  1995/02/13  15:04:43  matthew
 * Changes to DebuggerTypes structure
 * Changes to DebuggerTypes structure
 *
@


1.24.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.24.8.1  1997/05/12  10:32:50  hope
 * branched from 1.24
 *
@


1.24.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.24.8.1  1997/05/12  10:32:50  hope
 * branched from 1.24
 *
@


1.24.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.24.8.1  1997/05/12  10:32:50  hope
 * branched from 1.24
 *
@


1.24.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.24.8.1.1.1  1997/07/28  18:17:46  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.24.7.1
log
@branched from 1.24
@
text
@a3 4
 * Revision 1.24  1995/02/13  15:04:43  matthew
 * Changes to DebuggerTypes structure
 * Changes to DebuggerTypes structure
 *
@


1.24.6.1
log
@branched from 1.24
@
text
@a3 4
 * Revision 1.24  1995/02/13  15:04:43  matthew
 * Changes to DebuggerTypes structure
 * Changes to DebuggerTypes structure
 *
@


1.24.6.1.1.1
log
@branched from 1.24.6.1
@
text
@a3 3
 * Revision 1.24.6.1  1996/12/17  17:46:30  hope
 * branched from 1.24
 *
@


1.24.5.1
log
@branched from 1.24
@
text
@a3 4
 * Revision 1.24  1995/02/13  15:04:43  matthew
 * Changes to DebuggerTypes structure
 * Changes to DebuggerTypes structure
 *
@


1.24.4.1
log
@branched from 1.24
@
text
@a3 4
 * Revision 1.24  1995/02/13  15:04:43  matthew
 * Changes to DebuggerTypes structure
 * Changes to DebuggerTypes structure
 *
@


1.24.4.1.1.1
log
@branched from 1.24.4.1
@
text
@a3 3
 * Revision 1.24.4.1  1996/11/14  12:47:45  hope
 * branched from 1.24
 *
@


1.24.3.1
log
@branched from 1.24
@
text
@a3 4
 * Revision 1.24  1995/02/13  15:04:43  matthew
 * Changes to DebuggerTypes structure
 * Changes to DebuggerTypes structure
 *
@


1.24.2.1
log
@branched from 1.24
@
text
@a3 4
 * Revision 1.24  1995/02/13  15:04:43  matthew
 * Changes to DebuggerTypes structure
 * Changes to DebuggerTypes structure
 *
@


1.24.1.1
log
@branched from 1.24
@
text
@a3 4
 * Revision 1.24  1995/02/13  15:04:43  matthew
 * Changes to DebuggerTypes structure
 * Changes to DebuggerTypes structure
 *
@


1.23
log
@Replaced EnvironTypes with LambdaTypes.
@
text
@d4 3
d83 1
d91 1
d97 1
a97 2
    MirTypes.Debugger_Types.Options.options *
    LambdaTypes.LambdaExp * string * MirTypes.Debugger_Types.information ->
@


1.23.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.23  1993/06/23  15:27:01  daveb
Replaced EnvironTypes with LambdaTypes.

@


1.22
log
@Signature revisions
@
text
@d4 3
d78 1
a78 1
require "../lambda/environtypes";
d84 1
a84 1
  structure EnvironTypes : ENVIRONTYPES
d88 1
a88 1
  sharing type MirTypes.Debugger_Types.Type = EnvironTypes.LambdaTypes.Type
d93 1
a93 1
    EnvironTypes.LambdaTypes.LambdaExp * EnvironTypes.Top_Env * string * MirTypes.Debugger_Types.information ->
@


1.21
log
@Options & Info changes
@
text
@d4 3
d85 1
a85 1
  sharing MirTypes.Debugger_Types.Datatypes = EnvironTypes.LambdaTypes.Datatypes
d89 1
a89 1
    MirTypes.Debugger_Types.Options.compiler_options *
@


1.20
log
@Removed a number of duplicated signatures and structures
@
text
@d4 3
d73 1
d80 1
d85 4
a88 4
    MirTypes.Debugger_Types.Info.options ->
      MirTypes.options * EnvironTypes.LambdaTypes.LambdaExp *
	EnvironTypes.Top_Env * string * MirTypes.Debugger_Types.information ->
      MirTypes.mir_code * MirTypes.Debugger_Types.information
@


1.19
log
@Changes to propagate compiler options as parameters instead of references.
@
text
@d4 3
a69 1
require "../main/info";
d80 1
a80 1
    MirTypes.Info.options ->
@


1.18
log
@Changed Error structure to Info
@
text
@d4 3
a73 1
  structure Info : INFO
a76 5
  val generate_profiling : bool ref
  val generate_tail_optimisation : bool ref
  val generate_self_call_optimisation : bool ref
  val generate_debug_inhibit_warnings : bool ref

d78 4
a81 4
    Info.options ->
    EnvironTypes.LambdaTypes.LambdaExp * EnvironTypes.Top_Env * string *
    MirTypes.Debugger_Types.information * bool ->
    MirTypes.mir_code * MirTypes.Debugger_Types.information
@


1.17
log
@Created a type `information' which wraps up the debugger information
needed in so many parts of the compiler.
@
text
@d4 4
d64 1
d71 1
d81 1
@


1.16
log
@Added flag to switch off warning messages in generating recipes
@
text
@d4 3
d74 4
a77 7
  val mir_cg: EnvironTypes.LambdaTypes.LambdaExp * EnvironTypes.Top_Env * string *
    (string,EnvironTypes.LambdaTypes.Datatypes.Type * bool * 
     (int * MirTypes.Debugger_Types.Backend_Annotation) list) MirTypes.Debugger_Types.Datatypes.NewMap.T *
    bool
               -> MirTypes.mir_code * 
               (string,EnvironTypes.LambdaTypes.Datatypes.Type * bool *
                (int * MirTypes.Debugger_Types.Backend_Annotation) list) MirTypes.Debugger_Types.Datatypes.NewMap.T
@


1.15
log
@Added switches for self call optimisation
@
text
@d4 3
d69 1
@


1.14
log
@Removed some redundant structures and sharing
@
text
@d4 3
d65 1
@


1.13
log
@Added details about leafness to the debug information
@
text
@d4 3
a49 1
require "../lambda/lambdatypes";
a50 1
require "../debugger/debugger_types";
a54 1
  structure LambdaTypes : LAMBDATYPES
a56 1
  structure Debugger_Types : DEBUGGER_TYPES
d58 1
a58 2
  sharing EnvironTypes.LambdaTypes = LambdaTypes
  sharing MirTypes.Ident = LambdaTypes.Ident
d63 3
a65 3
  val mir_cg: LambdaTypes.LambdaExp * EnvironTypes.Top_Env * string *
    (string,LambdaTypes.Datatypes.Type * bool * 
     (int * Debugger_Types.Backend_Annotation) list) Debugger_Types.Map.T *
d68 2
a69 2
               (string,LambdaTypes.Datatypes.Type * bool *
                (int * Debugger_Types.Backend_Annotation) list) Debugger_Types.Map.T
@


1.12
log
@Added a flag to turn off tail-call optimisation
@
text
@d4 3
d66 2
a67 1
    (string,LambdaTypes.Datatypes.Type * (int * Debugger_Types.Backend_Annotation) list) Debugger_Types.Map.T *
d70 2
a71 1
               (string,LambdaTypes.Datatypes.Type * (int * Debugger_Types.Backend_Annotation) list) Debugger_Types.Map.T
@


1.11
log
@Added call point information
@
text
@d4 3
d60 1
@


1.10
log
@Changes for the recording of FNexp type information
@
text
@d4 3
d43 1
d51 1
a56 2
  val generate_debug_information : bool ref
  val print_generated_debug_information : bool ref
d58 5
a62 3
  val mir_cg: LambdaTypes.LambdaExp * EnvironTypes.Top_Env * string 
               -> MirTypes.mir_code * (string * LambdaTypes.Datatypes.Type) list

@


1.9
log
@*** empty log message ***
@
text
@d4 3
d50 1
d52 6
a57 2
  val mir_cg: LambdaTypes.LambdaExp * EnvironTypes.Top_Env * string -> MirTypes.mir_code
  (* The code generator *)
@


1.8
log
@First version of the profiler
@
text
@d4 3
@


1.7
log
@More work on arrays
@
text
@d4 3
d44 2
a45 1
  val mir_cg: LambdaTypes.LambdaExp * EnvironTypes.Top_Env -> MirTypes.mir_code
@


1.6
log
@Added diagnostic parameter
@
text
@d4 3
@


1.5
log
@Removed fn_arg etc to separate module
@
text
@d3 4
a6 1
$Log:	mir_cg.sml,v $
d25 1
d31 1
@


1.4
log
@Added sp, fp, handler
@
text
@d4 3
a32 6
  val fn_arg: MirTypes.gc_register * MirTypes.real_gc_reg MirTypes.Opt
  val cl_arg: MirTypes.gc_register * MirTypes.real_gc_reg MirTypes.Opt
  val cl_arg': MirTypes.gc_register * MirTypes.real_gc_reg MirTypes.Opt
  val fp:  MirTypes.gc_register * MirTypes.real_gc_reg MirTypes.Opt
  val sp: MirTypes.gc_register * MirTypes.real_gc_reg MirTypes.Opt
  val handler:  MirTypes.gc_register * MirTypes.real_gc_reg MirTypes.Opt
@


1.3
log
@Added cl_arg' for the function body version of the closure pointer,
whereas cl_arg is now only for the caller immediately prior to the
call, and for the function entry sequence. This preserves a calle
save model
@
text
@d4 6
d33 3
@


1.2
log
@Exported the arg and closure registers
@
text
@d4 3
d26 1
@


1.1
log
@Initial revision
@
text
@d3 4
a6 1
$Log$
d21 2
@
