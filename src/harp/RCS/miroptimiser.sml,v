head	1.12;
access;
symbols
	MLW_daveb_inline_1_4_99:1.12.11
	MLWorks_21c0_1999_03_25:1.12
	MLWorks_20c1_1998_08_20:1.12
	MLWorks_20c0_1998_08_04:1.12
	MLWorks_20b2c2_1998_06_19:1.12
	MLWorks_20b2_Windows_1998_06_12:1.12
	MLWorks_20b1c1_1998_05_07:1.12
	MLWorks_20b0_1998_04_07:1.12
	MLWorks_20b0_1998_03_20:1.12
	MLWorks_20m2_1998_02_16:1.12
	MLWorks_20m1_1997_10_23:1.12
	MLWorks_11r1:1.12.8.1.1.1.1
	MLWorks_workspace_97:1.12.10
	MLWorks_dt_wizard:1.12.9
	MLWorks_11c0_1997_09_09:1.12.8.1.1.1
	MLWorks_10r3:1.12.8.1.3
	MLWorks_10r2_551:1.12.8.1.2
	MLWorks_11:1.12.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.12.8.1
	MLWorks_20m0_1997_06_20:1.12
	MLWorks_1_0_r2c2_1997_06_14:1.12.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.12.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.12.8
	MLWorks_BugFix_1997_04_24:1.12
	MLWorks_1_0_r2_Win32_1997_04_11:1.12
	MLWorks_1_0_r2_Unix_1997_04_04:1.12
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.12.6.1.1
	MLWorks_gui_1996_12_18:1.12.7
	MLWorks_1_0_Win32_1996_12_17:1.12.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.12.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.12.4.1
	MLWorks_1_0_Irix_1996_11_28:1.12.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.12.5
	MLWorks_1_0_Unix_1996_11_14:1.12.4
	MLWorks_Open_Beta2_1996_10_11:1.12.3
	MLWorks_License_dev:1.12.2
	MLWorks_1_open_beta_1996_09_13:1.12.1
	MLWorks_Open_Beta_1996_08_22:1.12
	MLWorks_Beta_1996_07_02:1.12
	MLWorks_Beta_1996_06_07:1.12
	MLWorks_Beta_1996_06_06:1.12
	MLWorks_Beta_1996_06_05:1.12
	MLWorks_Beta_1996_06_03:1.12
	MLWorks_Beta_1996_05_31:1.12
	MLWorks_Beta_1996_05_30:1.12
	ML_beta_release_12/08/94:1.11
	ML_beta_release_03/08/94:1.11
	ML_revised_beta_release_25/05/94:1.11
	ML_final_beta_release_02/03/94:1.10
	mlworks-28-01-1994:1.10
	Release:1.10
	mlworks-beta-01-09-1993:1.10
	MLWorks-1-0-4-29/01/1993:1.10
	MLWorks-1-0-3-21/12/1992:1.10
	MLWorks-1-0-2-15/12/1992:1.10
	MLWorks-1-0-1-04/12/1992:1.10
	checkpoint_17_08_92:1.9;
locks; strict;
comment	@ * @;


1.12
date	95.05.30.11.37.21;	author matthew;	state Exp;
branches
	1.12.1.1
	1.12.2.1
	1.12.3.1
	1.12.4.1
	1.12.5.1
	1.12.6.1
	1.12.7.1
	1.12.8.1
	1.12.9.1
	1.12.10.1
	1.12.11.1;
next	1.11;

1.11
date	94.03.04.12.37.45;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	92.11.02.18.03.55;	author jont;	state Exp;
branches
	1.10.1.1;
next	1.9;

1.9
date	92.02.27.16.03.41;	author richard;	state Exp;
branches;
next	1.8;

1.8
date	92.02.17.17.24.59;	author richard;	state Exp;
branches;
next	1.7;

1.7
date	91.11.18.16.24.14;	author richard;	state Exp;
branches;
next	1.6;

1.6
date	91.10.17.11.26.24;	author richard;	state Exp;
branches;
next	1.5;

1.5
date	91.10.15.13.32.54;	author richard;	state Exp;
branches;
next	1.4;

1.4
date	91.10.07.11.55.02;	author richard;	state Exp;
branches;
next	1.3;

1.3
date	91.10.04.13.26.48;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	91.09.03.10.47.15;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	91.09.02.12.22.35;	author richard;	state Exp;
branches;
next	;

1.10.1.1
date	92.11.02.18.03.55;	author jont;	state Exp;
branches;
next	;

1.12.1.1
date	96.09.13.11.14.39;	author hope;	state Exp;
branches;
next	;

1.12.2.1
date	96.10.07.16.05.03;	author hope;	state Exp;
branches;
next	;

1.12.3.1
date	96.10.17.11.23.17;	author hope;	state Exp;
branches;
next	;

1.12.4.1
date	96.11.14.12.47.37;	author hope;	state Exp;
branches
	1.12.4.1.1.1;
next	;

1.12.4.1.1.1
date	96.11.28.14.59.10;	author hope;	state Exp;
branches;
next	;

1.12.5.1
date	96.11.22.18.07.40;	author hope;	state Exp;
branches;
next	;

1.12.6.1
date	96.12.17.17.46.23;	author hope;	state Exp;
branches
	1.12.6.1.1.1;
next	;

1.12.6.1.1.1
date	97.02.24.11.36.01;	author hope;	state Exp;
branches;
next	;

1.12.7.1
date	96.12.18.09.40.21;	author hope;	state Exp;
branches;
next	;

1.12.8.1
date	97.05.12.10.32.42;	author hope;	state Exp;
branches
	1.12.8.1.1.1
	1.12.8.1.2.1
	1.12.8.1.3.1;
next	;

1.12.8.1.1.1
date	97.07.28.18.18.26;	author daveb;	state Exp;
branches
	1.12.8.1.1.1.1.1;
next	;

1.12.8.1.1.1.1.1
date	97.10.07.11.43.29;	author jkbrook;	state Exp;
branches;
next	;

1.12.8.1.2.1
date	97.09.08.17.12.01;	author daveb;	state Exp;
branches;
next	;

1.12.8.1.3.1
date	97.09.09.14.07.36;	author daveb;	state Exp;
branches;
next	;

1.12.9.1
date	97.09.10.19.22.31;	author brucem;	state Exp;
branches;
next	;

1.12.10.1
date	97.09.11.20.53.44;	author daveb;	state Exp;
branches;
next	;

1.12.11.1
date	99.04.01.17.56.14;	author daveb;	state Exp;
branches;
next	;


desc
@Signature for HARP optimiser
@


1.12
log
@Adding make_debug_code flag
@
text
@(*  ==== MIR OPTIMISER ====
 *
 *  Copyright (C) 1992 Harlequin Ltd.
 *
 *  Description
 *  -----------
 *  The MIR optimiser takes an MIR code unit (see MirTypes) and transforms
 *  it in an attempt to impove is execution speed.  It also asssigns real
 *  registers to the virtual registers used in the procedure so that the
 *  code for the target machine can be generated.
 *
 *  Diagnostic Levels
 *  -----------------
 *   0  no output
 *   1  procedure tags printed
 *   2  listings generated between all stages
 *
 *  Revision Log
 *  ------------
 *  $Log: miroptimiser.sml,v $
Revision 1.11  1994/03/04  12:37:45  jont
Changes for automatic_callee mechanism removal
and moving machspec from machine to main

Revision 1.10  1992/11/02  18:03:55  jont
Reworked in terms of mononewmap

Revision 1.9  1992/02/27  16:03:41  richard
Changed the way virtual registers are handled.  See MirTypes.

Revision 1.8  1992/02/17  17:24:59  richard
Moved machine register assignments to the top level of this structure.
Added show_timings.

Revision 1.8  1992/02/14  16:05:59  richard
Moved machine register assignments to the top level of this structure.
Added show_timings.

 *  Revision 1.7  1991/11/18  16:24:14  richard
 *  Changed debugging output to use the Diagnostic module.
 *  
 *  Revision 1.6  91/10/17  11:26:24  richard
 *  Added Switches structure.
 *  
 *  Revision 1.5  91/10/15  13:32:54  richard
 *  Removed register assignments. These are now in the MirRegisters
 *  structure.
 *  
 *  Revision 1.4  91/10/07  11:55:02  richard
 *  Changed dependency on MachRegisters to MachSpec.
 *  
 *  Revision 1.3  91/10/04  13:26:48  richard
 *  Mappings from virtual to real registers are now exported.
 *  
 *  Revision 1.2  91/09/03  10:47:15  richard
 *  Early version of code to split up MIR code ready for
 *  dataflow analysis.
 *  
 *  Revision 1.1  91/09/02  12:22:35  richard
 *  Initial revision
 *)


require "../utils/diagnostic";
require "../main/machspec";
require "mirtypes";


signature MIROPTIMISER = 

  sig
    
    structure MirTypes		: MIRTYPES
    structure Diagnostic	: DIAGNOSTIC
    structure MachSpec		: MACHSPEC

    (*  === OPTIMISE MIR CODE ===
     *
     *  Attempts to optimise the execution speed of the code. It
     *  returns the optimised code, which has had its virtual
     *  registers mapped onto a set of aliases for the real machine
     *  registers. Tables which map these onto the real machine
     *  registers can be found in the MirRegisters structure above.
     *)
      
    val optimise : MirTypes.mir_code * bool -> MirTypes.mir_code
      
      
    (*  === MACHINE REGISTER ALIASES ===
     *
     *  The result procedure of optimisation (above) contains virtual
     *  registers which can be mapped onto real machine registers using the
     *  following maps.
     *)

    val machine_register_assignments :
      {gc	: (MachSpec.register) MirTypes.GC.Map.T,
       non_gc	: (MachSpec.register) MirTypes.NonGC.Map.T,
       fp	: (MachSpec.register) MirTypes.FP.Map.T}


  end
@


1.12.11.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a20 3
 * Revision 1.12  1995/05/30  11:37:21  matthew
 * Adding make_debug_code flag
 *
@


1.12.10.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a20 3
 * Revision 1.12  1995/05/30  11:37:21  matthew
 * Adding make_debug_code flag
 *
@


1.12.9.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a20 3
 * Revision 1.12  1995/05/30  11:37:21  matthew
 * Adding make_debug_code flag
 *
@


1.12.8.1
log
@branched from 1.12
@
text
@a20 3
 * Revision 1.12  1995/05/30  11:37:21  matthew
 * Adding make_debug_code flag
 *
@


1.12.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a20 3
 * Revision 1.12.8.1  1997/05/12  10:32:42  hope
 * branched from 1.12
 *
@


1.12.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a20 3
 * Revision 1.12.8.1  1997/05/12  10:32:42  hope
 * branched from 1.12
 *
@


1.12.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a20 3
 * Revision 1.12.8.1  1997/05/12  10:32:42  hope
 * branched from 1.12
 *
@


1.12.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a20 3
 * Revision 1.12.8.1.1.1  1997/07/28  18:18:26  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.12.7.1
log
@branched from 1.12
@
text
@a20 3
 * Revision 1.12  1995/05/30  11:37:21  matthew
 * Adding make_debug_code flag
 *
@


1.12.6.1
log
@branched from 1.12
@
text
@a20 3
 * Revision 1.12  1995/05/30  11:37:21  matthew
 * Adding make_debug_code flag
 *
@


1.12.6.1.1.1
log
@branched from 1.12.6.1
@
text
@a20 3
 * Revision 1.12.6.1  1996/12/17  17:46:23  hope
 * branched from 1.12
 *
@


1.12.5.1
log
@branched from 1.12
@
text
@a20 3
 * Revision 1.12  1995/05/30  11:37:21  matthew
 * Adding make_debug_code flag
 *
@


1.12.4.1
log
@branched from 1.12
@
text
@a20 3
 * Revision 1.12  1995/05/30  11:37:21  matthew
 * Adding make_debug_code flag
 *
@


1.12.4.1.1.1
log
@branched from 1.12.4.1
@
text
@a20 3
 * Revision 1.12.4.1  1996/11/14  12:47:37  hope
 * branched from 1.12
 *
@


1.12.3.1
log
@branched from 1.12
@
text
@a20 3
 * Revision 1.12  1995/05/30  11:37:21  matthew
 * Adding make_debug_code flag
 *
@


1.12.2.1
log
@branched from 1.12
@
text
@a20 3
 * Revision 1.12  1995/05/30  11:37:21  matthew
 * Adding make_debug_code flag
 *
@


1.12.1.1
log
@branched from 1.12
@
text
@a20 3
 * Revision 1.12  1995/05/30  11:37:21  matthew
 * Adding make_debug_code flag
 *
@


1.11
log
@Changes for automatic_callee mechanism removal
and moving machspec from machine to main
@
text
@d21 4
a76 3
    val show_timings		: bool ref


d86 1
a86 1
    val optimise : MirTypes.mir_code -> MirTypes.mir_code
@


1.10
log
@Reworked in terms of mononewmap
@
text
@d21 3
d61 1
a61 1
require "../machine/machspec";
@


1.10.1.1
log
@Fork for bug fixing
@
text
@a20 3
Revision 1.10  1992/11/02  18:03:55  jont
Reworked in terms of mononewmap

@


1.9
log
@Changed the way virtual registers are handled.  See MirTypes.
@
text
@d21 3
a57 1
require "../utils/newmap";
a67 1
    structure Map		: NEWMAP
d93 3
a95 3
      {gc	: (MirTypes.GC.T, MachSpec.register) Map.T,
       non_gc	: (MirTypes.NonGC.T, MachSpec.register) Map.T,
       fp	: (MirTypes.FP.T, MachSpec.register) Map.T}
@


1.8
log
@Moved machine register assignments to the top level of this structure.
Added show_timings.
@
text
@d21 4
d92 3
a94 3
      {gc	: (MirTypes.gc_register, MachSpec.register) Map.T,
       non_gc	: (MirTypes.non_gc_register, MachSpec.register) Map.T,
       fp	: (MirTypes.fp_register, MachSpec.register) Map.T}
@


1.7
log
@Changed debugging output to use the Diagnostic module.
@
text
@d1 23
a23 1
(* miroptimiser.sml the signature *)
d25 23
a47 4
(*
$Log:	miroptimiser.sml,v $
Revision 1.6  91/10/17  11:26:24  richard
Added Switches structure.
a48 3
Revision 1.5  91/10/15  13:32:54  richard
Removed register assignments. These are now in the MirRegisters
structure.
a49 16
Revision 1.4  91/10/07  11:55:02  richard
Changed dependency on MachRegisters to MachSpec.

Revision 1.3  91/10/04  13:26:48  richard
Mappings from virtual to real registers are now exported.

Revision 1.2  91/09/03  10:47:15  richard
Early version of code to split up MIR code ready for
dataflow analysis.

Revision 1.1  91/09/02  12:22:35  richard
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

d51 2
a52 1
require "mirregisters";
a53 1
require "switches";
d55 1
d61 3
a63 2
    structure MirRegisters	: MIRREGISTERS
    structure Switches		: SWITCHES
d65 1
a65 7
    (* Diagnostic levels:
     *   0  no output
     *   1  procedure tags printed
     *   2  listings generated between first and second pass (i.e. just
     *      after register allocation
     *   3  listings generated between all stages
     *)
a66 1
    structure Diagnostic	: DIAGNOSTIC
a67 1

d80 13
@


1.6
log
@Added Switches structure.
@
text
@d5 3
d28 1
d40 10
@


1.5
log
@Removed register assignments. These are now in the MirRegisters
structure.
@
text
@d5 4
d27 1
d35 2
a36 1
      
@


1.4
log
@Changed dependency on MachRegisters to MachSpec.
@
text
@d5 3
d21 1
a21 2
require "../utils/table";
require "../machine/machspec";
d29 1
a29 2
    structure MachSpec		: MACHSPEC
    structure Table		: TABLE
a30 21
      
    (*  === REGISTER ASSIGNMENTS ===
     *
     *  The virtual registers in the code returned by the optimise
     *  function can be mapped on to real machine registers using the
     *  following tables.
     *)
      
    val gc_assign :
      (MirTypes.gc_register, MachSpec.register) Table.table
      
    val non_gc_assign :
      (MirTypes.non_gc_register, MachSpec.register) Table.table
      
    val fp_assign :
      (MirTypes.fp_register, MachSpec.register) Table.table
      
    val fp_double_assign :
      (MirTypes.fp_double_register, MachSpec.register) Table.table
      
      
d34 5
a38 3
     *  Attempts to optimise the execution speed of the code. It returns
     *  a set of four tables which map the virtual registers in the
     *  returned code onto real machine registers.
@


1.3
log
@Mappings from virtual to real registers are now exported.
@
text
@d5 3
d19 1
a19 1
require "../machine/machregisters";
d27 1
a27 1
    structure MachRegisters	: MACHREGISTERS
d39 1
a39 1
      (MirTypes.gc_register, MachRegisters.T) Table.table
d42 1
a42 1
      (MirTypes.non_gc_register, MachRegisters.T) Table.table
d45 1
a45 1
      (MirTypes.fp_register, MachRegisters.T) Table.table
d48 1
a48 1
      (MirTypes.fp_double_register, MachRegisters.T) Table.table
@


1.2
log
@Early version of code to split up MIR code ready for
dataflow analysis.
@
text
@d5 4
d15 2
a19 1
sig
d21 27
a47 1
  structure MirTypes : MIRTYPES
d49 11
a59 5
  (* Optimise MIR code *)

  val optimise : MirTypes.mir_code -> MirTypes.mir_code

end
@


1.1
log
@Initial revision
@
text
@d4 4
a7 1
$Log:$
d17 2
@
