head	1.3;
access;
symbols
	ML_final_beta_release_02/03/94:1.3
	mlworks-28-01-1994:1.3
	Release:1.3
	mlworks-beta-01-09-1993:1.3
	MLWorks-1-0-4-29/01/1993:1.3
	MLWorks-1-0-3-21/12/1992:1.3
	MLWorks-1-0-2-15/12/1992:1.3
	MLWorks-1-0-1-04/12/1992:1.3
	checkpoint_17_08_92:1.3;
locks; strict;
comment	@ *  @;


1.3
date	91.11.19.15.14.14;	author richard;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	91.10.17.11.32.42;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	91.09.18.11.58.08;	author richard;	state Exp;
branches;
next	;

1.3.1.1
date	91.11.19.15.14.14;	author jont;	state Exp;
branches;
next	;


desc
@The MirFlow module traces the flow of control in a MirOptTypes.procedure
and adds this information to the data structure. This is the signature.
@


1.3
log
@Changed debugging output to use the Diagnostic module, which
prevents the debugging output strings being constructed even
if they aren't printed.
@
text
@(* mirflow.sml the signature *)

(*
$Log:	mirflow.sml,v $
Revision 1.2  91/10/17  11:32:42  richard
Added Switches structure.

Revision 1.1  91/09/18  11:58:08  richard
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

require "../utils/diagnostic";
require "switches";
require "miropttypes";


signature MIRFLOW =

  sig

    structure MirOptTypes	: MIROPTTYPES
    structure Switches		: SWITCHES

    (* Diagnostic output levels:
     *   0  none
     *   1  procedure tags
     *   2  block tags and exception handlers traced
     *   3  block concatenations and blocks reached from other blocks
     *   4  branching instructions and block references
     *)

    structure Diagnostic	: DIAGNOSTIC


    (*  === TRACE FLOW OF CONTROL ON A PROCEDURE ===
     *
     *  The instructions in the procedure are examined and successors
     *  attached (see MirOptTypes module) to each so that the flow of
     *  control can be followed by other modules.
     *
     *  As a side effect of this, any obviously unreachable code (e.g.,
     *  after a BRA) or unreachable blocks will be discarded.
     *)

    val trace : MirOptTypes.procedure -> MirOptTypes.procedure

  end
@


1.3.1.1
log
@Fork for bug fixing
@
text
@d4 1
a4 6
$Log: mirflow.sml,v $
 *  Revision 1.3  1991/11/19  15:14:14  richard
 *  Changed debugging output to use the Diagnostic module, which
 *  prevents the debugging output strings being constructed even
 *  if they aren't printed.
 *
@


1.2
log
@Added Switches structure.
@
text
@d5 3
d14 1
a19 1
sig
d21 1
a21 2
  structure MirOptTypes : MIROPTTYPES
  structure Switches	: SWITCHES
d23 2
d26 7
a32 9
  (*  === TRACE FLOW OF CONTROL ON A PROCEDURE ===
   *
   *  The instructions in the procedure are examined and successors
   *  attached (see MirOptTypes module) to each so that the flow of
   *  control can be followed by other modules.
   *
   *  As a side effect of this, any obviously unreachable code (e.g.,
   *  after a BRA) or unreachable blocks will be discarded.
   *)
d34 1
a34 1
  val trace : MirOptTypes.procedure -> MirOptTypes.procedure
d36 14
a49 1
end
@


1.1
log
@Initial revision
@
text
@d4 4
a7 1
$Log:$
d11 1
d19 1
@
