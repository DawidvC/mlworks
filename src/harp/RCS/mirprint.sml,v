head	1.14;
access;
symbols
	MLW_daveb_inline_1_4_99:1.14.3
	MLWorks_21c0_1999_03_25:1.14
	MLWorks_20c1_1998_08_20:1.14
	MLWorks_20c0_1998_08_04:1.14
	MLWorks_20b2c2_1998_06_19:1.14
	MLWorks_20b2_Windows_1998_06_12:1.14
	MLWorks_20b1c1_1998_05_07:1.14
	MLWorks_20b0_1998_04_07:1.14
	MLWorks_20b0_1998_03_20:1.14
	MLWorks_20m2_1998_02_16:1.14
	MLWorks_20m1_1997_10_23:1.14
	MLWorks_11r1:1.13.8.1.1.1.1
	MLWorks_workspace_97:1.14.2
	MLWorks_dt_wizard:1.14.1
	MLWorks_11c0_1997_09_09:1.13.8.1.1.1
	MLWorks_10r3:1.13.8.1.3
	MLWorks_10r2_551:1.13.8.1.2
	MLWorks_11:1.13.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.13.8.1
	MLWorks_20m0_1997_06_20:1.14
	MLWorks_1_0_r2c2_1997_06_14:1.13.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.13.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.13.8
	MLWorks_BugFix_1997_04_24:1.13
	MLWorks_1_0_r2_Win32_1997_04_11:1.13
	MLWorks_1_0_r2_Unix_1997_04_04:1.13
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.13.6.1.1
	MLWorks_gui_1996_12_18:1.13.7
	MLWorks_1_0_Win32_1996_12_17:1.13.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.13.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.13.4.1
	MLWorks_1_0_Irix_1996_11_28:1.13.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.13.5
	MLWorks_1_0_Unix_1996_11_14:1.13.4
	MLWorks_Open_Beta2_1996_10_11:1.13.3
	MLWorks_License_dev:1.13.2
	MLWorks_1_open_beta_1996_09_13:1.13.1
	MLWorks_Open_Beta_1996_08_22:1.13
	MLWorks_Beta_1996_07_02:1.13
	MLWorks_Beta_1996_06_07:1.13
	MLWorks_Beta_1996_06_06:1.13
	MLWorks_Beta_1996_06_05:1.13
	MLWorks_Beta_1996_06_03:1.13
	MLWorks_Beta_1996_05_31:1.13
	MLWorks_Beta_1996_05_30:1.13
	ML_beta_release_12/08/94:1.11
	ML_beta_release_03/08/94:1.11
	ML_revised_beta_release_25/05/94:1.11
	ML_final_beta_release_02/03/94:1.11
	mlworks-28-01-1994:1.11
	Release:1.11
	mlworks-beta-01-09-1993:1.11
	MLWorks-1-0-4-29/01/1993:1.11
	MLWorks-1-0-3-21/12/1992:1.10
	MLWorks-1-0-2-15/12/1992:1.10
	MLWorks-1-0-1-04/12/1992:1.10
	checkpoint_17_08_92:1.10
	Ten15_release_19-08-91:1.1
	ten15_release:1.1;
locks; strict;
comment	@ * @;


1.14
date	97.05.21.17.01.16;	author jont;	state Exp;
branches
	1.14.1.1
	1.14.2.1
	1.14.3.1;
next	1.13;

1.13
date	96.04.30.16.47.32;	author jont;	state Exp;
branches
	1.13.1.1
	1.13.2.1
	1.13.3.1
	1.13.4.1
	1.13.5.1
	1.13.6.1
	1.13.7.1
	1.13.8.1;
next	1.12;

1.12
date	96.04.30.16.47.32;	author jont;	state Exp;
branches;
next	1.11;

1.11
date	93.01.05.15.51.18;	author jont;	state Exp;
branches
	1.11.1.1;
next	1.10;

1.10
date	92.02.28.15.33.40;	author richard;	state Exp;
branches;
next	1.9;

1.9
date	91.11.14.10.49.24;	author richard;	state Exp;
branches;
next	1.8;

1.8
date	91.11.05.10.14.36;	author richard;	state Exp;
branches;
next	1.7;

1.7
date	91.10.16.16.12.45;	author richard;	state Exp;
branches;
next	1.6;

1.6
date	91.10.03.10.46.25;	author richard;	state Exp;
branches;
next	1.5;

1.5
date	91.09.11.14.39.59;	author richard;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	91.09.09.13.33.43;	author richard;	state Exp;
branches;
next	1.3;

1.3
date	91.09.06.13.52.05;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	91.09.05.11.59.31;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	91.07.25.14.01.09;	author jont;	state Exp;
branches;
next	;

1.5.1.1
date	91.09.26.13.12.11;	author richard;	state Exp;
branches;
next	;

1.11.1.1
date	93.01.05.15.51.18;	author jont;	state Exp;
branches;
next	;

1.13.1.1
date	96.09.13.11.14.25;	author hope;	state Exp;
branches;
next	;

1.13.2.1
date	96.10.07.16.04.52;	author hope;	state Exp;
branches;
next	;

1.13.3.1
date	96.10.17.11.23.06;	author hope;	state Exp;
branches;
next	;

1.13.4.1
date	96.11.14.12.47.24;	author hope;	state Exp;
branches
	1.13.4.1.1.1;
next	;

1.13.4.1.1.1
date	96.11.28.14.58.57;	author hope;	state Exp;
branches;
next	;

1.13.5.1
date	96.11.22.18.07.28;	author hope;	state Exp;
branches;
next	;

1.13.6.1
date	96.12.17.17.46.12;	author hope;	state Exp;
branches
	1.13.6.1.1.1;
next	;

1.13.6.1.1.1
date	97.02.24.11.35.48;	author hope;	state Exp;
branches;
next	;

1.13.7.1
date	96.12.18.09.40.10;	author hope;	state Exp;
branches;
next	;

1.13.8.1
date	97.05.12.10.32.31;	author hope;	state Exp;
branches
	1.13.8.1.1.1
	1.13.8.1.2.1
	1.13.8.1.3.1;
next	;

1.13.8.1.1.1
date	97.07.28.18.18.15;	author daveb;	state Exp;
branches
	1.13.8.1.1.1.1.1;
next	;

1.13.8.1.1.1.1.1
date	97.10.07.11.43.15;	author jkbrook;	state Exp;
branches;
next	;

1.13.8.1.2.1
date	97.09.08.17.11.49;	author daveb;	state Exp;
branches;
next	;

1.13.8.1.3.1
date	97.09.09.14.07.25;	author daveb;	state Exp;
branches;
next	;

1.14.1.1
date	97.09.10.19.22.14;	author brucem;	state Exp;
branches;
next	;

1.14.2.1
date	97.09.11.20.53.32;	author daveb;	state Exp;
branches;
next	;

1.14.3.1
date	99.04.01.17.56.07;	author daveb;	state Exp;
branches;
next	;


desc
@Printing of mir for debugging purposes
@


1.14
log
@[Bug #30090]
Replace MLWorks.IO with TextIO where applicable
@
text
@(* mirprint.sml the signature *)
(*
$Log: mirprint.sml,v $
 * Revision 1.13  1996/04/30  16:47:32  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
 * Revision 1.11  1993/01/05  15:51:18  jont
 * Modified to print directly to a given stream for speed and controllability
 *
Revision 1.10  1992/02/28  15:33:40  richard
Changed the way virtual registers are handled.  See MirTypes.

Revision 1.9  1991/11/14  10:49:24  richard
Removed references to fp_double registers.

Revision 1.8  91/11/05  10:14:36  richard
Added procedure print function.

Revision 1.7  91/10/16  16:12:45  richard
Added unadorned register printing.

Revision 1.6  91/10/03  10:46:25  richard
Added fp_operand function.

Revision 1.5  91/09/11  14:39:59  richard
Brought reg_operand to the outside.

Revision 1.4  91/09/09  13:33:43  richard
Yet more functions made available. Names containing ``print''
shortened (it's in the structure name).

Revision 1.3  91/09/06  13:52:05  richard
Still more functions revealed to the outside world (but
mostly to MirDataFlow so I can watch what it is doing.

Revision 1.2  91/09/05  11:59:31  richard
Added functions to allow individual opcodes and blocks to be printed.

Revision 1.1  91/07/25  14:01:09  jont
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

require "../basis/__text_io";
require "mirtypes";

signature MIRPRINT = sig
  structure MirTypes	: MIRTYPES

  val show_register_names	: bool ref
  val show_real_registers	: bool ref

  val string_mir_code	: MirTypes.mir_code -> string
  val print_mir_code	: MirTypes.mir_code -> TextIO.outstream -> unit
  val procedure		: MirTypes.procedure -> string
  val block		: MirTypes.block -> string
  val opcode		: MirTypes.opcode -> string
  val binary_op		: MirTypes.binary_op -> string
  val unary_op		: MirTypes.unary_op -> string
  val binary_fp_op	: MirTypes.binary_fp_op -> string
  val unary_fp_op	: MirTypes.unary_fp_op -> string
  val store_op		: MirTypes.store_op -> string
  val store_fp_op	: MirTypes.store_fp_op -> string
  val gp_operand	: MirTypes.gp_operand -> string
  val reg_operand	: MirTypes.reg_operand -> string
  val fp_operand	: MirTypes.fp_operand -> string
  val any_reg		: MirTypes.any_register -> string
  val gc_register	: MirTypes.GC.T -> string
  val non_gc_register	: MirTypes.NonGC.T -> string
  val fp_register	: MirTypes.FP.T -> string
end
@


1.14.3.1
log
@branched from trunk for label MLW_daveb_inline_1_4_99
@
text
@a3 4
 * Revision 1.14  1997/05/21  17:01:16  jont
 * [Bug #30090]
 * Replace MLWorks.IO with TextIO where applicable
 *
@


1.14.2.1
log
@branched from trunk for label MLWorks_workspace_97
@
text
@a3 4
 * Revision 1.14  1997/05/21  17:01:16  jont
 * [Bug #30090]
 * Replace MLWorks.IO with TextIO where applicable
 *
@


1.14.1.1
log
@branched from trunk for label MLWorks_dt_wizard
@
text
@a3 4
 * Revision 1.14  1997/05/21  17:01:16  jont
 * [Bug #30090]
 * Replace MLWorks.IO with TextIO where applicable
 *
@


1.13
log
@String functions explode, implode, chr and ord now only available from String
io functions and types
instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
now only available from MLWorks.IO
@
text
@d4 6
d48 1
d58 1
a58 1
  val print_mir_code	: MirTypes.mir_code -> MLWorks.IO.outstream -> unit
@


1.13.8.1
log
@branched from 1.13
@
text
@a3 6
 * Revision 1.13  1996/04/30  16:47:32  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
 * Revision 1.13.8.1  1997/05/12  10:32:31  hope
 * branched from 1.13
 *
@


1.13.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
 * Revision 1.13.8.1  1997/05/12  10:32:31  hope
 * branched from 1.13
 *
@


1.13.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
 * Revision 1.13.8.1  1997/05/12  10:32:31  hope
 * branched from 1.13
 *
@


1.13.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
 * Revision 1.13.8.1.1.1  1997/07/28  18:18:15  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.13.7.1
log
@branched from 1.13
@
text
@a3 6
 * Revision 1.13  1996/04/30  16:47:32  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.6.1
log
@branched from 1.13
@
text
@a3 6
 * Revision 1.13  1996/04/30  16:47:32  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.6.1.1.1
log
@branched from 1.13.6.1
@
text
@a3 3
 * Revision 1.13.6.1  1996/12/17  17:46:12  hope
 * branched from 1.13
 *
@


1.13.5.1
log
@branched from 1.13
@
text
@a3 6
 * Revision 1.13  1996/04/30  16:47:32  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.4.1
log
@branched from 1.13
@
text
@a3 6
 * Revision 1.13  1996/04/30  16:47:32  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.4.1.1.1
log
@branched from 1.13.4.1
@
text
@a3 3
 * Revision 1.13.4.1  1996/11/14  12:47:24  hope
 * branched from 1.13
 *
@


1.13.3.1
log
@branched from 1.13
@
text
@a3 6
 * Revision 1.13  1996/04/30  16:47:32  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.2.1
log
@branched from 1.13
@
text
@a3 6
 * Revision 1.13  1996/04/30  16:47:32  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.13.1.1
log
@branched from 1.13
@
text
@a3 6
 * Revision 1.13  1996/04/30  16:47:32  jont
 * String functions explode, implode, chr and ord now only available from String
 * io functions and types
 * instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
 * now only available from MLWorks.IO
 *
@


1.12
log
@String functions explode, implode, chr and ord now only available from String
io functions and types
instream, oustream, open_in, open_out, close_in, close_out, input, output and end_of_stream
now only available from MLWorks.IO
@
text
@@


1.11
log
@Modified to print directly to a given stream for speed and controllability
@
text
@d4 3
d51 1
a51 1
  val print_mir_code	: MirTypes.mir_code -> outstream -> unit
@


1.11.1.1
log
@Fork for bug fixing
@
text
@a3 3
Revision 1.11  1993/01/05  15:51:18  jont
Modified to print directly to a given stream for speed and controllability

@


1.10
log
@Changed the way virtual registers are handled.  See MirTypes.
@
text
@d4 3
d47 2
a48 1
  val print_mir_code	: MirTypes.mir_code -> string
@


1.9
log
@Removed references to fp_double registers.
@
text
@d3 4
a6 1
$Log:	mirprint.sml,v $
d41 3
d58 3
a60 3
  val gc_register	: MirTypes.gc_register -> string
  val non_gc_register	: MirTypes.non_gc_register -> string
  val fp_register	: MirTypes.fp_register -> string
@


1.8
log
@Added procedure print function.
@
text
@d4 3
a54 1
  val fp_double_register: MirTypes.fp_double_register -> string
@


1.7
log
@Added unadorned register printing.
@
text
@d4 3
d36 1
@


1.6
log
@Added fp_operand function.
@
text
@d4 3
d45 4
@


1.5
log
@Brought reg_operand to the outside.
@
text
@d4 3
d40 1
@


1.5.1.1
log
@This is a modified version to use the reworked MirTypes module
(ver 1.23.1.1). This module is correct, but work has been suspended
on this branch because of the amount of time it would take to convert
the code generator (Mir_Cg) module.
@
text
@a3 3
Revision 1.5  91/09/11  14:39:59  richard
Brought reg_operand to the outside.

d35 3
a37 1
  val operand		: MirTypes.operand -> string
@


1.4
log
@Yet more functions made available. Names containing ``print''
shortened (it's in the structure name).
@
text
@d4 4
d36 1
@


1.3
log
@Still more functions revealed to the outside world (but
mostly to MirDataFlow so I can watch what it is doing.
@
text
@d4 4
d20 13
a32 6
  structure MirTypes : MIRTYPES
  val print_mir_code : MirTypes.mir_code -> string
  val print_block : MirTypes.block -> string
  val print_opcode : MirTypes.opcode -> string
  val print_gp_operand : MirTypes.gp_operand -> string
  val print_any_reg : MirTypes.any_register -> string
@


1.2
log
@Added functions to allow individual opcodes and blocks to be printed.
@
text
@d4 3
d20 2
@


1.1
log
@Initial revision
@
text
@d3 4
a6 1
$Log$
d14 3
a16 1
  val print_mir_code: MirTypes.mir_code -> string
@
