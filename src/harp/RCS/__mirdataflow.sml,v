head	1.5;
access;
symbols
	ML_final_beta_release_02/03/94:1.5
	mlworks-28-01-1994:1.5
	Release:1.5
	mlworks-beta-01-09-1993:1.5
	MLWorks-1-0-4-29/01/1993:1.5
	MLWorks-1-0-3-21/12/1992:1.5
	MLWorks-1-0-2-15/12/1992:1.5
	MLWorks-1-0-1-04/12/1992:1.5
	checkpoint_17_08_92:1.5;
locks; strict;


1.5
date	91.09.18.18.11.21;	author richard;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	91.09.17.15.20.40;	author richard;	state Exp;
branches;
next	1.3;

1.3
date	91.09.11.14.08.01;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	91.09.10.14.51.39;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	91.09.05.13.12.27;	author richard;	state Exp;
branches;
next	;

1.5.1.1
date	91.09.18.18.11.21;	author jont;	state Exp;
branches;
next	;


desc
@Data flow analysis module for MIR code. This is the structure.
@


1.5
log
@Added MirVariable module to functor call.
@
text
@(* __mirdataflow.sml the structure *)
(*
$Log:	__mirdataflow.sml,v $
Revision 1.4  91/09/17  15:20:40  richard
Module split up. Expression analysis moved to __mirexpression.sml.

Revision 1.3  91/09/11  14:08:01  richard
Imported Mir_Cg module into functor to get at fixed registers.

Revision 1.2  91/09/10  14:51:39  richard
Added Lists module to functor.

Revision 1.1  91/09/05  13:12:27  richard
Initial revision

Copyright (c) 1991 Harlequin Ltd.
*)

require "../utils/__print";
require "__miropttypes";
require "__mirexpression";
require "__mirvariable";
require "_mirdataflow";

structure MirDataFlow_ = MirDataFlow(
  structure MirOptTypes = MirOptTypes_
  structure MirExpression = MirExpression_
  structure MirVariable = MirVariable_
  structure Print = Print_
);
@


1.5.1.1
log
@Fork for bug fixing
@
text
@d3 1
a3 4
$Log: __mirdataflow.sml,v $
Revision 1.5  1991/09/18  18:11:21  richard
Added MirVariable module to functor call.

@


1.4
log
@Module split up. Expression analysis moved to __mirexpression.sml.
@
text
@d4 3
a18 1
require "../utils/__crash";
a19 4
require "../utils/__set";
require "../utils/__lists";
require "../lambda/__pretty";
require "__mirprint";
a20 2
require "__mirtypes";
require "__mir_cg";
d22 1
d27 2
a28 6
  structure Exp = MirExpression_
  structure MirTypes = MirTypes_
  structure MirPrint = MirPrint_
  structure Mir_Cg = Mir_Cg_
  structure Lists = Lists_
  structure Crash = Crash_
a29 2
  structure Set = Set_
  structure P = Pretty_
@


1.3
log
@Imported Mir_Cg module into functor to get at fixed registers.
@
text
@d4 3
d22 1
d25 1
d29 2
@


1.2
log
@Added Lists module to functor.
@
text
@d4 3
d20 1
d26 1
@


1.1
log
@Initial revision
@
text
@d3 4
a6 1
$Log:$
d13 1
d22 1
@
