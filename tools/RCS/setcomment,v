head	1.3;
access;
symbols
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_11r1:1.3.7.2.1.1.1
	MLWorks_11c0_1997_09_09:1.3.7.2.1.1
	MLWorks_10r3:1.3.7.2.3
	MLWorks_10r2_551:1.3.7.2.2
	MLWorks_11:1.3.7.2.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.7.2
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.3.7.2
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.7.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.7
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.6.1.1
	MLWorks_1_0_Win32_1996_12_17:1.3.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@# @;


1.3
date	96.07.12.11.01.12;	author io;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1;
next	1.2;

1.2
date	95.06.27.15.05.52;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	95.05.01.10.16.01;	author daveb;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.44.40;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.37.57;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.56.53;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.13.25.13;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.15.36.15;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.42.19;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.18.21.19;	author hope;	state Exp;
branches
	1.3.6.1.1.1;
next	;

1.3.6.1.1.1
date	97.02.24.12.16.12;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	97.05.12.11.12.54;	author hope;	state Exp;
branches;
next	1.3.7.2;

1.3.7.2
date	97.06.04.16.48.36;	author daveb;	state Exp;
branches
	1.3.7.2.1.1
	1.3.7.2.2.1
	1.3.7.2.3.1;
next	;

1.3.7.2.1.1
date	97.07.28.18.54.50;	author daveb;	state Exp;
branches
	1.3.7.2.1.1.1.1;
next	;

1.3.7.2.1.1.1.1
date	97.10.07.12.19.40;	author jkbrook;	state Exp;
branches;
next	;

1.3.7.2.2.1
date	97.09.08.17.47.07;	author daveb;	state Exp;
branches;
next	;

1.3.7.2.3.1
date	97.09.09.14.46.19;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Tool for setting comment leaders in Hope files.
@


1.3
log
@[Bug #1463]
beauty treatment and bug-ids
@
text
@#!/bin/sh
# Copyright (c) 1996 Harlequin Ltd.
script_path=`dirname $0`
script_name=`basename $0`
cmd="set"
STATUS=0
test="";comment=" * "; new_comment=""; bug_id="";
usage="usage: $script_name [-h] [- <bug-id>] [-c <comment>] (file|dir)+"

while getopts "thc:i:" opt; do
  case $opt in
    t) test="test";;
    c) new_comment="$OPTARG";;
    i) bug_id="-bug-number $OPTARG";;
    h|\?)
      echo $usage;
      echo "    h for this help"
      echo "    c <comment>"
      echo "    i <bug-id>"
      exit 1;;
  esac
done
shift `expr $OPTIND - 1`

: echo $script_name: checking arguments...
if [ $# -eq 0 ]; then
  echo "nothing to $script_name"
  echo $usage
  exit 1
else
  : echo ok
fi

: echo prime $entry

eval `$script_path/findcomp2 $1`;
if [ -z "$compound" ]; then
  entry=;
  echo "cannot identify compound \"$1\""
  exit 1
elif [ -z "$unit" ]; then
  entry="-c $compound"
else
  entry="-c $compound -u $unit"
fi
shift

: echo stuff in the separators

for arg in $*; do
  eval `$script_path/findcomp2 $arg`;
  if [ -z "$compound" ]; then
    echo "cannot identify compound \"$arg\""
    exit 1
  elif [ -z "$unit" ]; then
    entry="$entry -a -c $compound"
  else
    entry="$entry -a -c $compound -u $unit"
  fi
done

: echo final processing

if [ -z "$entry" ]; then
  echo skipped everythin
elif [ -n "new_$comment" ]; then
  hope $test $cmd $bug_id -comment "$new_comment" $entry
else
  hope $test $cmd $bug_id -comment "$comment" $entry
fi

###############################################################################
# $Log: setcomment,v $
# Revision 1.2  1995/06/27  15:05:52  jont
# Add necessary paths
#
# Revision 1.1  1995/05/01  10:16:01  daveb
# new unit
# Tool for setting comment leaders in Hope files.
#
#
# Copyright Harlequin Ltd. 1995
#
@


1.3.7.1
log
@branched from 1.3
@
text
@a73 4
# Revision 1.3  1996/07/12  11:01:12  io
# [Bug #1463]
# beauty treatment and bug-ids
#
@


1.3.7.2
log
@[Bug #30167]
@
text
@d3 1
d36 1
a36 1
eval `findcomp2 $1`;
d51 1
a51 1
  eval `findcomp2 $arg`;
a73 3
# Revision 1.3.7.1  1997/05/12  11:12:54  hope
# branched from 1.3
#
@


1.3.7.2.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a72 3
# Revision 1.3.7.2  1997/06/04  16:48:36  daveb
# [Bug #30167]
#
@


1.3.7.2.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a72 3
# Revision 1.3.7.2  1997/06/04  16:48:36  daveb
# [Bug #30167]
#
@


1.3.7.2.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a72 3
# Revision 1.3.7.2  1997/06/04  16:48:36  daveb
# [Bug #30167]
#
@


1.3.7.2.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a72 3
# Revision 1.3.7.2.1.1  1997/07/28  18:54:50  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.3.6.1
log
@branched from 1.3
@
text
@a73 4
# Revision 1.3  1996/07/12  11:01:12  io
# [Bug #1463]
# beauty treatment and bug-ids
#
@


1.3.6.1.1.1
log
@branched from 1.3.6.1
@
text
@a73 3
# Revision 1.3.6.1  1996/12/17  18:21:19  hope
# branched from 1.3
#
@


1.3.5.1
log
@branched from 1.3
@
text
@a73 4
# Revision 1.3  1996/07/12  11:01:12  io
# [Bug #1463]
# beauty treatment and bug-ids
#
@


1.3.4.1
log
@branched from 1.3
@
text
@a73 4
# Revision 1.3  1996/07/12  11:01:12  io
# [Bug #1463]
# beauty treatment and bug-ids
#
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a73 3
# Revision 1.3.4.1  1996/11/14  13:25:13  hope
# branched from 1.3
#
@


1.3.3.1
log
@branched from 1.3
@
text
@a73 4
# Revision 1.3  1996/07/12  11:01:12  io
# [Bug #1463]
# beauty treatment and bug-ids
#
@


1.3.2.1
log
@branched from 1.3
@
text
@a73 4
# Revision 1.3  1996/07/12  11:01:12  io
# [Bug #1463]
# beauty treatment and bug-ids
#
@


1.3.1.1
log
@branched from 1.3
@
text
@a73 4
# Revision 1.3  1996/07/12  11:01:12  io
# [Bug #1463]
# beauty treatment and bug-ids
#
@


1.2
log
@Add necessary paths
@
text
@d2 71
d74 3
a83 49

SML_HOME=/u/sml; export SML_HOME
SML=$SML_HOME/MLW; export SML
PATH=$SML/tools:$SML/images:/usr/local/bin:$PATH; export PATH
script=`basename $0`
usage="USAGE: $script [-c <comment header>] <File1> [<File2> ...]"


comment=""
while getopts c: option
do
  case $option in
    c) comment="$OPTARG" ;;
    *) echo "$usage"; exit 1;;
  esac
done
shift `expr $OPTIND - 1`

if [ "$#" -lt 1 ]; then
    echo $usage
    exit
fi

for i in $*
do
  (if [ $i = '/' ]
   then
     echo $script: ignoring /
   else
     # strip trailing /
     tmp=`expr match $i '\(.*[^/]\)'`
     eval `findcomp $tmp`
        # defines $dir, $compound, $unit
     if [ -z "$compound" ]
     then
       $script failed : .compound file not found
     else
       cd $dir
       if [ ! -z ""$comment ] 
       then
         hope set -compound $compound -unit $unit -comment "$comment"
       else
         hope set -compound $compound -unit $unit -comment " * "
       fi
     fi
   fi)
done

exit
@


1.1
log
@new unit
Tool for setting comment leaders in Hope files.
@
text
@d2 4
a5 1
# $Log$
d7 1
d11 3
d52 1
a52 1
         hope set -compound $compound -unit $unit -comment " *  "
@
