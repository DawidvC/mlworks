head	1.13;
access;
symbols
	MLWorks_21c0_1999_03_25:1.13
	MLWorks_20c1_1998_08_20:1.9
	MLWorks_20c0_1998_08_04:1.9
	MLWorks_20b2c2_1998_06_19:1.9
	MLWorks_20b2_Windows_1998_06_12:1.9
	MLWorks_20b1c1_1998_05_07:1.9
	MLWorks_20b0_1998_04_07:1.9
	MLWorks_20b0_1998_03_20:1.9
	MLWorks_20m2_1998_02_16:1.9
	MLWorks_20m1_1997_10_23:1.9
	MLWorks_11r1:1.8.6.2.1.1.1
	MLWorks_11c0_1997_09_09:1.8.6.2.1.1
	MLWorks_10r3:1.8.6.2.3
	MLWorks_10r2_551:1.8.6.2.2
	MLWorks_11:1.8.6.2.1
	MLWorks_1_0_r2c2_1997_07_28:1.8.6.2
	MLWorks_20m0_1997_06_20:1.9
	MLWorks_1_0_r2c2_1997_06_14:1.8.6.2
	MLWorks_1_0_r2c1_released_1997_05_23:1.8.6.1
	MLWorks_1_0_r2c1_1997_05_12:1.8.6
	MLWorks_BugFix_1997_04_24:1.9
	MLWorks_1_0_r2_Win32_1997_04_11:1.8
	MLWorks_1_0_r2_Unix_1997_04_04:1.8
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.8.5.1.1
	MLWorks_1_0_Win32_1996_12_17:1.8.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.8.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.8.3.1
	MLWorks_1_0_Irix_1996_11_28:1.8.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.8.4
	MLWorks_1_0_Unix_1996_11_14:1.8.3
	MLWorks_Open_Beta2_1996_10_11:1.8.2
	MLWorks_License_dev:1.8.1
	MLWorks_1_open_beta_1996_09_13:1.7.1
	MLWorks_Open_Beta_1996_08_22:1.7
	MLWorks_Beta_1996_07_02:1.5
	MLWorks_Beta_1996_06_07:1.5
	MLWorks_Beta_1996_06_06:1.5
	MLWorks_Beta_1996_06_05:1.5
	MLWorks_Beta_1996_06_03:1.5
	MLWorks_Beta_1996_05_31:1.5
	MLWorks_Beta_1996_05_30:1.5
	ML_beta_release_12/08/94:1.1
	ML_beta_release_03/08/94:1.1;
locks; strict;
comment	@# @;


1.13
date	99.03.24.15.37.58;	author daveb;	state Exp;
branches;
next	1.12;

1.12
date	98.10.07.12.45.36;	author jont;	state Exp;
branches;
next	1.11;

1.11
date	98.09.24.14.31.33;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	98.08.25.14.52.49;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	97.04.15.12.00.38;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	96.10.07.11.57.59;	author io;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1
	1.8.4.1
	1.8.5.1
	1.8.6.1;
next	1.7;

1.7
date	96.08.01.12.54.10;	author daveb;	state Exp;
branches
	1.7.1.1;
next	1.6;

1.6
date	96.07.12.11.31.23;	author io;	state Exp;
branches;
next	1.5;

1.5
date	96.04.09.17.19.42;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	95.05.16.15.44.36;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	95.02.23.17.17.02;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	95.02.21.15.47.09;	author brianm;	state Exp;
branches;
next	1.1;

1.1
date	94.07.04.12.52.56;	author brianm;	state Exp;
branches;
next	;

1.7.1.1
date	96.09.13.11.44.46;	author hope;	state Exp;
branches;
next	;

1.8.1.1
date	96.10.07.16.38.05;	author hope;	state Exp;
branches;
next	;

1.8.2.1
date	96.10.17.11.56.58;	author hope;	state Exp;
branches;
next	;

1.8.3.1
date	96.11.14.13.25.18;	author hope;	state Exp;
branches
	1.8.3.1.1.1;
next	;

1.8.3.1.1.1
date	96.11.28.15.36.19;	author hope;	state Exp;
branches;
next	;

1.8.4.1
date	96.11.22.18.42.24;	author hope;	state Exp;
branches;
next	;

1.8.5.1
date	96.12.17.18.21.24;	author hope;	state Exp;
branches
	1.8.5.1.1.1;
next	;

1.8.5.1.1.1
date	97.02.24.12.16.17;	author hope;	state Exp;
branches;
next	;

1.8.6.1
date	97.05.12.11.12.59;	author hope;	state Exp;
branches;
next	1.8.6.2;

1.8.6.2
date	97.06.04.16.48.04;	author daveb;	state Exp;
branches
	1.8.6.2.1.1
	1.8.6.2.2.1
	1.8.6.2.3.1;
next	;

1.8.6.2.1.1
date	97.07.28.18.54.55;	author daveb;	state Exp;
branches
	1.8.6.2.1.1.1.1;
next	;

1.8.6.2.1.1.1.1
date	97.10.07.12.19.45;	author jkbrook;	state Exp;
branches;
next	;

1.8.6.2.2.1
date	97.09.08.17.47.14;	author daveb;	state Exp;
branches;
next	;

1.8.6.2.3.1
date	97.09.09.14.46.27;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.13
log
@[Bug #190541]
Check both the OS and OSTYPE environment variables.
@
text
@#!/bin/sh
# Copyright (c) 1996 Harlequin Ltd.
script_name=`basename $0`
cmd="claim"
STATUS=0
test=""; reason=""; update=""; bug_id=""; claim=""; branch="trunk";
usage="usage: $script_name [-[husxt]+] [-b <branch>] [-r <reason>] [-i <bug-id>] (file|dir)+"

while getopts "tur:usxi:hb:" opt; do
  case $opt in
    b) branch="$OPTARG";;
    t) test="test";;
    u) update="-update";;
    i) bug_id="-bug-number $OPTARG";;
    r) reason="$OPTARG";;
    s) claim="-claim soft";;
    x) claim="-claim hard";;
    h|\?)
      echo $usage;
      echo "    h for this help"
      echo "    t to show the hope expression passed"
      echo "    u update existing claim, allows bugid & reason changes"
      echo "    r <reason>"
      echo "    s soft claim"
      echo "    x hard claim"
      echo "    i <bug-id>"
      exit 1;;
    esac
done
shift `expr $OPTIND - 1`

: echo $script_name: checking arguments...
if [ $# -eq 0 ]; then
  echo "nothing to $script_name"
  echo $usage
  exit 1
else
  : echo ok
fi
      
: echo prime $entry

eval `findcomp2 $1`;
if [ -z "$compound" ]; then
  entry=; 
  echo "cannot identify compound \"$1\""
  exit 1
elif [ -z "$unit" ]; then
  entry="-c $compound -fn $1"
else
  entry="-c $compound -u $unit -fn $1"
fi
shift


: echo stuff in the separators

for arg in $*; do
  eval `findcomp2 $arg`; 
  if [ -z "$compound" ]; then
    echo "cannot identify compound \"$arg\""
    exit 1
  elif [ -z "$unit" ]; then
    entry="$entry -a -c $compound -fn $arg"
  else
    entry="$entry -a -c $compound -u $unit -fn $arg"
  fi
done


: echo final processing

if [ -z "$TMP" ]; then
  temp_dir=/tmp
else
  temp_dir=`echo $TMP | sed -e 's!\\\\!/!g'`
fi
temp_file=$temp_dir/hope_tmp$$

# We need to work out whether we're on Unix or Windows.
# NT sets the OS variable to Windows_NT.
# Some MLWorkers set the OS variable themselves.
# Failing that, bash sets the OSTYPE variable.
hope_temp_file=""
case "$OS" in
  Win*)
    hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
  NT*)
    hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
  Solaris*)
    hope_temp_file=$temp_file;;
  SunOS*)
    hope_temp_file=$temp_file;;
  Irix*)
    hope_temp_file=$temp_file;;
  Linux*)
    hope_temp_file=$temp_file;;
esac

if [ -z "$hope_temp_file" ]; then
  case "$OSTYPE" in
    Win*)
      hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
    Solaris*)
      hope_temp_file=$temp_file;;
    SunOS*)
      hope_temp_file=$temp_file;;
    linux*)
      hope_temp_file=$temp_file;;
    *)
      # Assume Unix if we have no other clue.
      # We could also get here on Win95, but we don't use that
      # for development.
      hope_temp_file=$temp_file;;
  esac
fi

if [ -z "$entry" ]; then
  echo skipped everything
elif [ -n "$reason" ]; then # reason exists
  echo $test $cmd -branch "$branch" $update $bug_id -reason "$reason" $entry > $temp_file
  hope source $hope_temp_file
  rm $temp_file
else
  echo $test $cmd -branch "$branch" $update $bug_id $entry > $temp_file
  hope source $hope_temp_file
  rm $temp_file
fi

###############################################################################
#
# claim - make a claim on an existing (edited) file
#
# $Log: claim,v $
# Revision 1.12  1998/10/07  12:45:36  jont
# [Bug #70179]
# Avoid OSTYPE=linux problems
#
# Revision 1.11  1998/09/24  14:31:33  jont
# [Bug #70179]
# Make sure temp file name more carefully created to avoid drive letter problems
#
# Revision 1.10  1998/08/25  14:52:49  jont
# [Bug #70162]
# Use source files to get past hope 44 argument limit under Win32
#
# Revision 1.9  1997/04/15  12:00:38  jont
# Stop using script_path mechanism as this confuses Win32
#
# Revision 1.8  1996/10/07  11:57:59  io
# allow updating of bug numbers of existing claims
#
# Revision 1.7  1996/08/01  12:54:10  daveb
# The -i option now correctly inserts the -bug-number argument.
#
# Revision 1.6  1996/07/12  11:31:23  io
# [Bug #1463]
# add support for directories and bug-ids
#
# Revision 1.5  1996/04/09  17:19:42  daveb
# Added -u (= update-reason) option.
#
# Revision 1.4  1995/05/16  15:44:36  daveb
# Changed this script drastically to take advantage of the greater speed
# offered by passing all arguments to hope at once.
#
# Revision 1.3  1995/02/23  17:17:02  jont
# Modify for new file structure /u
#
# Revision 1.2  1995/02/21  15:47:09  brianm
# Introducing SML_HOME
#
# Revision 1.1  1994/07/04  12:52:56  brianm
# new file
#
# 
@


1.12
log
@[Bug #70179]
Avoid OSTYPE=linux problems
@
text
@d79 37
a115 4
if [ -z "$OSTYPE" -o "$OSTYPE" = "linux" ]; then
  hope_temp_file=$temp_file
else
  hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`
d117 1
d135 4
@


1.11
log
@[Bug #70179]
Make sure temp file name more carefully created to avoid drive letter problems
@
text
@d79 1
a79 1
if [ -z "$OSTYPE" ]; then
d101 4
@


1.10
log
@[Bug #70162]
Use source files to get past hope 44 argument limit under Win32
@
text
@d73 11
a83 1
temp_file=/tmp/hope_tmp$$
d88 1
a88 1
  hope source $temp_file
d92 1
a92 1
  hope source $temp_file
d101 4
@


1.9
log
@Stop using script_path mechanism as this confuses Win32
@
text
@d12 1
a12 1
    t) test="echo";;
d73 1
d75 1
a75 1
  echo skipped everthin
d77 3
a79 1
  $test hope $cmd -branch "$branch" $update $bug_id -reason "$reason" $entry
d81 3
a83 1
  $test hope $cmd -branch "$branch" $update $bug_id $entry
d91 3
@


1.8
log
@allow updating of bug numbers of existing claims
@
text
@a2 1
script_path=`dirname $0`
d43 1
a43 1
eval `$script_path/findcomp2 $1`;
d59 1
a59 1
  eval `$script_path/findcomp2 $arg`; 
d86 3
@


1.8.6.1
log
@branched from 1.8
@
text
@a86 3
# Revision 1.8  1996/10/07  11:57:59  io
# allow updating of bug numbers of existing claims
#
@


1.8.6.2
log
@[Bug #30167]
@
text
@d3 1
d44 1
a44 1
eval `findcomp2 $1`;
d60 1
a60 1
  eval `findcomp2 $arg`; 
a86 3
# Revision 1.8.6.1  1997/05/12  11:12:59  hope
# branched from 1.8
#
@


1.8.6.2.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a85 3
# Revision 1.8.6.2  1997/06/04  16:48:04  daveb
# [Bug #30167]
#
@


1.8.6.2.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a85 3
# Revision 1.8.6.2  1997/06/04  16:48:04  daveb
# [Bug #30167]
#
@


1.8.6.2.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a85 3
# Revision 1.8.6.2  1997/06/04  16:48:04  daveb
# [Bug #30167]
#
@


1.8.6.2.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a85 3
# Revision 1.8.6.2.1.1  1997/07/28  18:54:55  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.8.5.1
log
@branched from 1.8
@
text
@a86 3
# Revision 1.8  1996/10/07  11:57:59  io
# allow updating of bug numbers of existing claims
#
@


1.8.5.1.1.1
log
@branched from 1.8.5.1
@
text
@a86 3
# Revision 1.8.5.1  1996/12/17  18:21:24  hope
# branched from 1.8
#
@


1.8.4.1
log
@branched from 1.8
@
text
@a86 3
# Revision 1.8  1996/10/07  11:57:59  io
# allow updating of bug numbers of existing claims
#
@


1.8.3.1
log
@branched from 1.8
@
text
@a86 3
# Revision 1.8  1996/10/07  11:57:59  io
# allow updating of bug numbers of existing claims
#
@


1.8.3.1.1.1
log
@branched from 1.8.3.1
@
text
@a86 3
# Revision 1.8.3.1  1996/11/14  13:25:18  hope
# branched from 1.8
#
@


1.8.2.1
log
@branched from 1.8
@
text
@a86 3
# Revision 1.8  1996/10/07  11:57:59  io
# allow updating of bug numbers of existing claims
#
@


1.8.1.1
log
@branched from 1.8
@
text
@a86 3
# Revision 1.8  1996/10/07  11:57:59  io
# allow updating of bug numbers of existing claims
#
@


1.7
log
@The -i option now correctly inserts the -bug-number argument.
@
text
@d7 2
a8 2
test=""; reason=""; update_reason="";
usage="usage: $script_name [-[usxt]+] [-r <reason>] [-i <bug-id>] (file|dir)+"
d10 1
a10 1
while getopts "tur:usxi:h" opt; do
d12 3
a14 1
    t) test="test";;
a15 1
    u) update_reason="-update-reason";;
d22 2
a23 2
      echo "    t for hope test mode"
      echo "    u update reason"
d77 1
a77 1
  hope $test $cmd $bug_id $update_reason -reason "$reason" $entry
d79 1
a79 1
  hope $test $cmd $bug_id $update_reason $entry
d87 3
@


1.7.1.1
log
@branched from 1.7
@
text
@a85 3
# Revision 1.7  1996/08/01  12:54:10  daveb
# The -i option now correctly inserts the -bug-number argument.
#
@


1.6
log
@[Bug #1463]
add support for directories and bug-ids
@
text
@d13 1
a13 1
    i) bug_id="$OPTARG";;
d86 4
@


1.5
log
@Added -u (= update-reason) option.
@
text
@d2 80
d86 3
a102 69
# Copyright (c) 1994 Harlequin Ltd.

SML_HOME=/u/sml; export SML_HOME
SML=$SML_HOME/MLW; export SML
PATH=$SML/tools:$SML/images:/usr/local/bin:$PATH; export PATH
script=`basename $0`
usage="USAGE: $script -[ush] <File1> [<File2>...]"

if [ "$#" -lt 2 ]
then
    echo "$usage"
    exit 1
fi

coopts=""

case "$1" in
  -u)  opts="-update-reason";;
  -s)  opts="-soft";;
  -h)  opts="-hard";;
  *)   echo "$usage"
       exit 1;;
esac

shift

items=""
lastdir=""
for i in $*
do
  if [ $i = '/' ]
   then
     echo $script: ignoring /
   else
     # strip trailing /
     tmp=`expr match $i '\(.*[^/]\)'`
     # find the compound
     eval `findcomp $tmp`
        # defines $dir, $compound, $unit
     if [ -z "$compound" ]
     then
       echo $script failed : .compound file not found
       exit 3
     elif [ ! -z "$lastdir" -a "$lastdir" != "$dir" ]
     then
       echo $script failed : incompatible root directories $dir and $lastdir
       exit 4
     else
       if [ "$unit" = "." ]
       then
         item="-compound $compound"
       else
         item="-compound $compound -unit $unit"
       fi
       if [ -z "$items" ]
       then
         items="$item"
       else
         items="$items -and $item"
       fi
     fi
     lastdir=$dir
   fi
done

cd $dir
hope claim $opts $items

exit
@


1.4
log
@Changed this script drastically to take advantage of the greater speed
offered by passing all arguments to hope at once.
@
text
@d6 4
d26 1
a26 1
usage="USAGE: $script -[sh] <File1> [<File2>...]"
d37 1
@


1.3
log
@Modify for new file structure /u
@
text
@d6 3
d41 2
d45 1
a45 1
  (if [ $i = '/' ]
d53 1
a53 1
	# defines $dir, $compound, $unit
d57 5
d63 12
a74 2
       cd $dir
       hope claim $opts -compound $compound -unit $unit
d76 2
a77 1
   fi)
d80 2
@


1.2
log
@Introducing SML_HOME
@
text
@d6 3
d15 1
a15 1
SML_HOME=/usr/sml; export SML_HOME
@


1.1
log
@new file
@
text
@d5 4
a8 1
# $Log$
d12 2
a13 1
SML=/usr/sml/MLW; export SML
@
