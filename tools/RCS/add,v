head	1.19;
access;
symbols
	MLWorks_21c0_1999_03_25:1.19
	MLWorks_20c1_1998_08_20:1.19
	MLWorks_20c0_1998_08_04:1.19
	MLWorks_20b2c2_1998_06_19:1.19
	MLWorks_20b2_Windows_1998_06_12:1.19
	MLWorks_20b1c1_1998_05_07:1.19
	MLWorks_20b0_1998_04_07:1.19
	MLWorks_20b0_1998_03_20:1.19
	MLWorks_20m2_1998_02_16:1.19
	MLWorks_20m1_1997_10_23:1.19
	MLWorks_11r1:1.18.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.18.1.1.1.1
	MLWorks_10r3:1.18.1.1.3
	MLWorks_10r2_551:1.18.1.1.2
	MLWorks_11:1.18.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.18.1.1
	MLWorks_20m0_1997_06_20:1.18
	MLWorks_1_0_r2c2_1997_06_14:1.18.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.18.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.18.1
	MLWorks_BugFix_1997_04_24:1.18
	MLWorks_1_0_r2_Win32_1997_04_11:1.18
	MLWorks_1_0_r2_Unix_1997_04_04:1.18
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.16.3.1.1
	MLWorks_1_0_Win32_1996_12_17:1.16.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.16.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.16.1.1
	MLWorks_1_0_Irix_1996_11_28:1.16.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.16.2
	MLWorks_1_0_Unix_1996_11_14:1.16.1
	MLWorks_Open_Beta2_1996_10_11:1.15.3
	MLWorks_License_dev:1.15.2
	MLWorks_1_open_beta_1996_09_13:1.15.1
	MLWorks_Open_Beta_1996_08_22:1.15
	MLWorks_Beta_1996_07_02:1.13
	MLWorks_Beta_1996_06_07:1.13
	MLWorks_Beta_1996_06_06:1.13
	MLWorks_Beta_1996_06_05:1.13
	MLWorks_Beta_1996_06_03:1.13
	MLWorks_Beta_1996_05_31:1.13
	MLWorks_Beta_1996_05_30:1.13
	ML_beta_release_12/08/94:1.5
	ML_beta_release_03/08/94:1.5
	ML_revised_beta_release_25/05/94:1.3;
locks; strict;
comment	@#  @;


1.19
date	97.09.24.17.16.42;	author jont;	state Exp;
branches;
next	1.18;

1.18
date	97.01.16.15.02.25;	author io;	state Exp;
branches
	1.18.1.1;
next	1.17;

1.17
date	97.01.16.14.50.15;	author io;	state Exp;
branches;
next	1.16;

1.16
date	96.10.18.14.25.40;	author io;	state Exp;
branches
	1.16.1.1
	1.16.2.1
	1.16.3.1;
next	1.15;

1.15
date	96.08.12.11.31.38;	author daveb;	state Exp;
branches
	1.15.1.1
	1.15.2.1
	1.15.3.1;
next	1.14;

1.14
date	96.07.11.17.23.13;	author io;	state Exp;
branches;
next	1.13;

1.13
date	96.02.26.12.27.38;	author jont;	state Exp;
branches;
next	1.12;

1.12
date	95.12.08.11.23.30;	author daveb;	state Exp;
branches;
next	1.11;

1.11
date	95.09.18.11.47.09;	author daveb;	state Exp;
branches;
next	1.10;

1.10
date	95.07.24.11.09.29;	author daveb;	state Exp;
branches;
next	1.9;

1.9
date	95.07.21.15.44.28;	author matthew;	state Exp;
branches;
next	1.8;

1.8
date	95.03.31.10.55.48;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	95.02.23.17.15.03;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	95.02.21.15.47.09;	author brianm;	state Exp;
branches;
next	1.5;

1.5
date	94.06.21.10.53.36;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	94.06.09.15.27.00;	author nickh;	state Exp;
branches;
next	1.3;

1.3
date	94.04.05.11.24.52;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	94.03.23.17.55.46;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	94.03.21.12.41.35;	author daveb;	state Exp;
branches;
next	;

1.15.1.1
date	96.09.13.11.44.49;	author hope;	state Exp;
branches;
next	;

1.15.2.1
date	96.10.07.16.38.10;	author hope;	state Exp;
branches;
next	;

1.15.3.1
date	96.10.17.11.57.01;	author hope;	state Exp;
branches;
next	;

1.16.1.1
date	96.11.14.13.25.20;	author hope;	state Exp;
branches
	1.16.1.1.1.1;
next	;

1.16.1.1.1.1
date	96.11.28.15.36.23;	author hope;	state Exp;
branches;
next	;

1.16.2.1
date	96.11.22.18.42.26;	author hope;	state Exp;
branches;
next	;

1.16.3.1
date	96.12.17.18.21.27;	author hope;	state Exp;
branches
	1.16.3.1.1.1;
next	;

1.16.3.1.1.1
date	97.02.24.12.16.20;	author hope;	state Exp;
branches;
next	;

1.18.1.1
date	97.05.12.11.13.02;	author hope;	state Exp;
branches
	1.18.1.1.1.1
	1.18.1.1.2.1
	1.18.1.1.3.1;
next	;

1.18.1.1.1.1
date	97.07.28.18.54.57;	author daveb;	state Exp;
branches
	1.18.1.1.1.1.1.1;
next	;

1.18.1.1.1.1.1.1
date	97.10.07.12.19.46;	author jkbrook;	state Exp;
branches;
next	;

1.18.1.1.2.1
date	97.09.08.17.47.16;	author daveb;	state Exp;
branches;
next	;

1.18.1.1.3.1
date	97.09.09.14.46.29;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.19
log
@[Bug #70007]
Ensure the output of egrep isn't printed. This already works under
unix, but the gnu-win32 port of egrep doesn't understand -s
@
text
@#!/bin/sh
# $Log: add,v $
#  Revision 1.18  1997/01/16  15:02:25  io
#  [Bug #1893]
#  dont chmod file if in test mode or when hope fails
#
#  Revision 1.16  1996/10/18  14:25:40  io
#  [Bug #1668]
#  alter binary mode -b to -B, utilising -b for branch
#
#  Revision 1.15  1996/08/12  11:31:38  daveb
#  Ensured that expr can handle files called "index", etc.
#
#  Revision 1.14  1996/07/11  17:23:13  io
#  [Bug #1463]
#  beef up options for help, bug-id, binary and reason
#
#  Revision 1.13  1996/02/26  12:27:38  jont
#  Modify to preserve file date on add
#
#  Revision 1.12  1995/12/08  11:23:30  daveb
#  Added a check that the file to be added contains the strings "Copyright"
#  and "$Log".
#
#  Revision 1.11  1995/09/18  11:47:09  daveb
#  The -comment argument to hope's add command is broken.
#
#  Revision 1.9  1995/07/21  15:44:28  matthew
#  Changing -parent option to -compound
#
#  Revision 1.8  1995/03/31  10:55:48  daveb
#  Made comment string be " *  " for .sml files.
#
#  Revision 1.7  1995/02/23  17:15:03  jont
#  Modify for new file structure /u
#
#  Revision 1.6  1995/02/21  15:47:09  brianm
#  Introducing SML_HOME
#
#  Revision 1.5  1994/06/21  10:53:36  jont
#  Add path setting code
#
#  Revision 1.4  1994/06/09  15:27:00  nickh
#  Better .compound awareness
#
#  Revision 1.3  1994/04/05  11:24:52  daveb
#  Now handles trailing / in arguments.
#
#  Revision 1.2  1994/03/23  17:55:46  daveb
#  Fixing bug in test.
#
#  Revision 1.1  1994/03/21  12:41:35  daveb
#  new file
#
# 
# Copyright (c) Harlequin Ltd. 1994

SML=/u/sml/MLW; export SML
PATH=$SML/tools:$SML/images:/usr/local/bin:$PATH; export PATH
script=`basename $0`
usage="USAGE: $script [-[Bfth]+] [-b <branch>] [-c <comment header>] [-i <bug-id>] [-r <reason>] file+"
cmd="add";
comment=""; bug_id="";test="";reason="";binary=""; branch="";
force=0
while getopts "b:tr:hi:fc:B" option
do
  case $option in
    B) binary="-binary";;
    i) bug_id="-bug-number $OPTARG";;
    r) reason="$OPTARG";;
    f) force=1;;
    b) branch="-branch $OPTARG";;
    c) comment="$OPTARG" ;;
    t) test="test";;
    h|\?)
      echo "$usage";
      echo "     h for this help"
      echo "     i <bug-id>"
      echo "     b <branch>"
      echo "     f to force $cmd"
      echo "     c <comment-string>"
      echo "     t run in hope test mode"
      echo "     B for binary mode $cmd"
      exit 1;;
  esac
done
shift `expr $OPTIND - 1`

if [ "$#" -lt 1 ]; then
    echo $usage
    exit
fi

add_file () {
       # strip trailing /
       tmp=`expr match X$1 X'\(.*[^/]\)'`
       eval `findcomp $tmp`
	  # defines $dir, $compound, $unit
       if [ -z "$compound" ]
       then
         $script failed : .compound file not found
       else
         test -z "$test" && chmod ugo-w $tmp
         cd $dir
         if [ -z "$reason" ]; then
           hope $test $cmd -filedate $bug_id $binary $branch -compound $compound -unit $unit || (test -z "$test" && chmod u+w $tmp)
	 else
	   hope $test $cmd -filedate $bug_id -reason "$reason" $binary $branch -compound $compound -unit $unit || (test -z "$test" && chmod u+w $tmp)
	 fi
         if [ ! -z ""$comment ] 
         then
           hope $test set $branch -compound $compound -unit $unit -comment "$comment"
         else
	   case $1 in
	     *.sml) hope $test set $branch -compound $compound -unit $unit -comment " *  "
	   esac
         fi
       fi
}

for i in $*
do
  (if [ $i = '/' ]; then
     echo $script: ignoring /
   elif [ $force -eq 1 -o -n "$binary" ]; then
     add_file $i
   elif egrep -s Copyright $i 1>/dev/null 2>1; then
     if egrep -s '\$Log.*\$' $i 1>/dev/null 2>1; then
       add_file $i
     else
       echo $i: header omits \$Log\$ string
     fi
   else
     echo $i: header omits Copyright string
   fi)
done

exit
@


1.18
log
@[Bug #1893]
dont chmod file if in test mode or when hope fails
@
text
@d3 4
d127 2
a128 2
   elif egrep -s Copyright $i; then
     if egrep -s '\$Log.*\$' $i; then
@


1.18.1.1
log
@branched from 1.18
@
text
@a2 4
#  Revision 1.18  1997/01/16  15:02:25  io
#  [Bug #1893]
#  dont chmod file if in test mode or when hope fails
#
@


1.18.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a2 3
#  Revision 1.18.1.1  1997/05/12  11:13:02  hope
#  branched from 1.18
#
@


1.18.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a2 3
#  Revision 1.18.1.1  1997/05/12  11:13:02  hope
#  branched from 1.18
#
@


1.18.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a2 3
#  Revision 1.18.1.1  1997/05/12  11:13:02  hope
#  branched from 1.18
#
@


1.18.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a2 3
#  Revision 1.18.1.1.1.1  1997/07/28  18:54:57  daveb
#  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.17
log
@[Bug #1695]
allow binary file to bypass Copyright tests
@
text
@d99 1
a99 1
         chmod ugo-w $tmp
d102 1
a102 1
           hope $test $cmd -filedate $bug_id $binary $branch -compound $compound -unit $unit
d104 1
a104 1
	   hope $test $cmd -filedate $bug_id -reason "$reason" $binary $branch -compound $compound -unit $unit 
@


1.16
log
@[Bug #1668]
alter binary mode -b to -B, utilising -b for branch
@
text
@d3 4
d119 1
a119 2
  (if [ $i = '/' ]
   then
d121 1
a121 2
   elif [ $force -eq 1 ]
   then
d123 2
a124 4
   elif egrep Copyright $i > /dev/null
   then
     if egrep '\$Log.*\$' $i > /dev/null
     then
@


1.16.3.1
log
@branched from 1.16
@
text
@a2 4
#  Revision 1.16  1996/10/18  14:25:40  io
#  [Bug #1668]
#  alter binary mode -b to -B, utilising -b for branch
#
@


1.16.3.1.1.1
log
@branched from 1.16.3.1
@
text
@a2 3
#  Revision 1.16.3.1  1996/12/17  18:21:27  hope
#  branched from 1.16
#
@


1.16.2.1
log
@branched from 1.16
@
text
@a2 4
#  Revision 1.16  1996/10/18  14:25:40  io
#  [Bug #1668]
#  alter binary mode -b to -B, utilising -b for branch
#
@


1.16.1.1
log
@branched from 1.16
@
text
@a2 4
#  Revision 1.16  1996/10/18  14:25:40  io
#  [Bug #1668]
#  alter binary mode -b to -B, utilising -b for branch
#
@


1.16.1.1.1.1
log
@branched from 1.16.1.1
@
text
@a2 3
#  Revision 1.16.1.1  1996/11/14  13:25:20  hope
#  branched from 1.16
#
@


1.15
log
@Ensured that expr can handle files called "index", etc.
@
text
@d3 3
d53 1
a53 1
usage="USAGE: $script [-[fth]+] [-c <comment header>] [-i <bug-id>] [-r <reason>] file+"
d55 1
a55 1
comment=""; bug_id="";test="";reason="";binary="";
d57 1
a57 1
while getopts "tr:hi:fc:b" option
d60 1
a60 1
    b) binary="-binary";;
d64 1
d71 1
d75 1
a75 1
      echo "     b for binary mode $cmd"
d98 1
a98 1
           hope $test $cmd -filedate $bug_id $binary -compound $compound -unit $unit
d100 1
a100 1
	   hope $test $cmd -filedate $bug_id -reason "$reason" $binary -compound $compound -unit $unit 
d104 1
a104 1
           hope $test set -compound $compound -unit $unit -comment "$comment"
d107 1
a107 1
	     *.sml) hope $test set -compound $compound -unit $unit -comment " *  "
@


1.15.3.1
log
@branched from 1.15
@
text
@a2 3
#  Revision 1.15  1996/08/12  11:31:38  daveb
#  Ensured that expr can handle files called "index", etc.
#
@


1.15.2.1
log
@branched from 1.15
@
text
@a2 3
#  Revision 1.15  1996/08/12  11:31:38  daveb
#  Ensured that expr can handle files called "index", etc.
#
@


1.15.1.1
log
@branched from 1.15
@
text
@a2 3
#  Revision 1.15  1996/08/12  11:31:38  daveb
#  Ensured that expr can handle files called "index", etc.
#
@


1.14
log
@[Bug #1463]
beef up options for help, bug-id, binary and reason
@
text
@d3 4
d83 1
a83 1
       tmp=`expr match $1 '\(.*[^/]\)'`
@


1.13
log
@Modify to preserve file date on add
@
text
@d3 3
d43 1
a43 2
SML_HOME=/u/sml; export SML_HOME
SML=$SML_HOME/MLW; export SML
d46 3
a48 3
usage="USAGE: $script [-f] [-c <comment header>] <File1> [<File2>...]"

comment=""
d50 1
a50 1
while getopts fc: option
d53 3
d58 10
a67 1
    *) echo "$usage"; exit 1;;
d88 5
a92 1
         hope add -filedate -compound $compound -unit $unit
d95 1
a95 1
           hope set -compound $compound -unit $unit -comment "$comment"
d98 1
a98 1
	     *.sml) hope set -compound $compound -unit $unit -comment " *  "
@


1.12
log
@Added a check that the file to be added contains the strings "Copyright"
and "$Log".
@
text
@d3 4
d74 1
a74 1
         hope add -compound $compound -unit $unit
@


1.11
log
@The -comment argument to hope's add command is broken.
@
text
@d3 3
d40 1
a40 1
usage="USAGE: $script [-c <comment header>] <File1> [<File2>...]"
d43 2
a44 1
while getopts c: option
d47 1
d59 23
d87 6
a92 6
   else
     # strip trailing /
     tmp=`expr match $i '\(.*[^/]\)'`
     eval `findcomp $tmp`
	# defines $dir, $compound, $unit
     if [ -z "$compound" ]
d94 1
a94 1
       $script failed : .compound file not found
d96 1
a96 11
       chmod ugo-w $tmp
       cd $dir
       hope add -compound $compound -unit $unit
       if [ ! -z ""$comment ] 
       then
         hope set -compound $compound -unit $unit -comment "$comment"
       else
	 case $i in
	   *.sml) hope set -compound $compound -unit $unit -comment " *  "
	 esac
       fi
d98 2
@


1.10
log
@The Hope 'add' command now allows the comment string to be set.  This avoids
calling Hope twice.
@
text
@d70 1
d73 1
a73 1
         hope add -compound $compound -unit $unit -comment "$comment"
d76 1
a76 2
	   *.sml) hope add -compound $compound -unit $unit -comment " *  " ;;
	   *) hope add -compound $compound -unit $unit ;;
@


1.9
log
@Changing -parent option to -compound
@
text
@d3 3
a69 1
       hope add -compound $compound -unit $unit
d72 1
a72 1
         hope set -compound $compound -unit $unit -comment "$comment"
d75 2
a76 1
	   *.sml) hope set -compound $compound -unit $unit -comment " *  "
@


1.8
log
@Made comment string be " *  " for .sml files.
@
text
@d3 3
d67 1
a67 1
       hope add -parent $compound -unit $unit
@


1.7
log
@Modify for new file structure /u
@
text
@d3 3
d67 5
a71 1
         hope set -compound $compound -unit $unit comment "$comment"
@


1.6
log
@Introducing SML_HOME
@
text
@d3 3
d24 1
a24 1
SML_HOME=/usr/sml; export SML_HOME
@


1.5
log
@Add path setting code
@
text
@d3 3
d21 2
a22 1
SML=/usr/sml/MLW; export SML
@


1.4
log
@Better .compound awareness
@
text
@d3 3
d16 1
a16 1
# Copyright Harlequin Ltd. 1991
d18 2
@


1.3
log
@Now handles trailing / in arguments.
@
text
@d3 3
d41 3
a43 4
     unit=`basename $tmp`
     dir=`dirname $i`
     cd $dir
     if [ -r .compound ]
d45 4
a48 1
       compound=`cat .compound`
a53 3
       chmod ugo-w $unit
     else
       echo $script: no .compound file in $dir
@


1.2
log
@Fixing bug in test.
@
text
@d3 6
a8 3
 #  Revision 1.1  1994/03/21  12:41:35  daveb
 #  new file
 #
d12 2
a13 1
usage="USAGE: add [-c <comment header>] <File1> [<File2>...]"
d32 1
a32 4
  (unit=`basename $i`
   dir=`dirname $i`
   cd $dir
   if [ -r .compound ]
d34 8
a41 3
     compound=`cat .compound`
     hope add -parent $compound -unit $unit
     if [ ! -z ""$comment ] 
d43 9
a51 1
       hope set -compound $compound -unit $unit comment "$comment"
a52 3
     chmod ugo-w $unit
   else
     echo $script: no .compound file in $dir
@


1.1
log
@new file
@
text
@d2 4
a5 1
# $Log$
d35 1
a35 1
     if [ ! -z $comment ] 
@
