head	1.25;
access;
symbols
	MLWorks_21c0_1999_03_25:1.25
	MLWorks_20c1_1998_08_20:1.21
	MLWorks_20c0_1998_08_04:1.21
	MLWorks_20b2c2_1998_06_19:1.21
	MLWorks_20b2_Windows_1998_06_12:1.21
	MLWorks_20b1c1_1998_05_07:1.21
	MLWorks_20b0_1998_04_07:1.21
	MLWorks_20b0_1998_03_20:1.21
	MLWorks_20m2_1998_02_16:1.21
	MLWorks_20m1_1997_10_23:1.21
	MLWorks_11r1:1.20.6.2.1.1.1
	MLWorks_11c0_1997_09_09:1.20.6.2.1.1
	MLWorks_10r3:1.20.6.2.3
	MLWorks_10r2_551:1.20.6.2.2
	MLWorks_11:1.20.6.2.1
	MLWorks_1_0_r2c2_1997_07_28:1.20.6.2
	MLWorks_20m0_1997_06_20:1.21
	MLWorks_1_0_r2c2_1997_06_14:1.20.6.2
	MLWorks_1_0_r2c1_released_1997_05_23:1.20.6.1
	MLWorks_1_0_r2c1_1997_05_12:1.20.6
	MLWorks_BugFix_1997_04_24:1.21
	MLWorks_1_0_r2_Win32_1997_04_11:1.20
	MLWorks_1_0_r2_Unix_1997_04_04:1.20
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.20.5.1.1
	MLWorks_1_0_Win32_1996_12_17:1.20.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.20.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.20.3.1
	MLWorks_1_0_Irix_1996_11_28:1.20.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.20.4
	MLWorks_1_0_Unix_1996_11_14:1.20.3
	MLWorks_Open_Beta2_1996_10_11:1.20.2
	MLWorks_License_dev:1.20.1
	MLWorks_1_open_beta_1996_09_13:1.19.1
	MLWorks_Open_Beta_1996_08_22:1.18
	MLWorks_Beta_1996_07_02:1.16
	MLWorks_Beta_1996_06_07:1.16
	MLWorks_Beta_1996_06_06:1.16
	MLWorks_Beta_1996_06_05:1.16
	MLWorks_Beta_1996_06_03:1.16
	MLWorks_Beta_1996_05_31:1.16
	MLWorks_Beta_1996_05_30:1.16
	ML_beta_release_12/08/94:1.10
	ML_beta_release_03/08/94:1.10
	ML_revised_beta_release_25/05/94:1.8
	ML_final_beta_release_02/03/94:1.7
	mlworks-28-01-1994:1.5
	Release:1.4
	mlworks-beta-01-09-1993:1.4;
locks; strict;
comment	@# @;


1.25
date	99.03.24.15.37.53;	author daveb;	state Exp;
branches;
next	1.24;

1.24
date	98.10.07.12.34.00;	author jont;	state Exp;
branches;
next	1.23;

1.23
date	98.09.24.14.31.08;	author jont;	state Exp;
branches;
next	1.22;

1.22
date	98.08.25.14.42.44;	author jont;	state Exp;
branches;
next	1.21;

1.21
date	97.04.15.11.19.31;	author jont;	state Exp;
branches;
next	1.20;

1.20
date	96.10.04.17.53.49;	author io;	state Exp;
branches
	1.20.1.1
	1.20.2.1
	1.20.3.1
	1.20.4.1
	1.20.5.1
	1.20.6.1;
next	1.19;

1.19
date	96.09.04.14.35.27;	author io;	state Exp;
branches
	1.19.1.1;
next	1.18;

1.18
date	96.07.15.18.46.13;	author io;	state Exp;
branches;
next	1.17;

1.17
date	96.07.11.18.08.36;	author io;	state Exp;
branches;
next	1.16;

1.16
date	95.07.21.13.04.00;	author jont;	state Exp;
branches;
next	1.15;

1.15
date	95.03.20.11.38.56;	author daveb;	state Exp;
branches;
next	1.14;

1.14
date	95.03.20.11.24.32;	author daveb;	state Exp;
branches;
next	1.13;

1.13
date	95.02.28.12.52.04;	author jont;	state Exp;
branches;
next	1.12;

1.12
date	95.02.23.17.15.34;	author jont;	state Exp;
branches;
next	1.11;

1.11
date	95.02.21.15.47.09;	author brianm;	state Exp;
branches;
next	1.10;

1.10
date	94.06.15.11.02.50;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	94.06.09.15.27.10;	author nickh;	state Exp;
branches;
next	1.8;

1.8
date	94.04.05.11.25.31;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	94.03.02.12.42.01;	author daveb;	state Exp;
branches;
next	1.6;

1.6
date	94.02.04.10.12.21;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	93.09.07.16.43.43;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	92.01.31.12.18.00;	author richard;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	91.12.24.09.31.33;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	91.06.21.12.37.46;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.13.11.31.04;	author jont;	state Exp;
branches;
next	;

1.4.1.1
date	92.01.31.12.18.00;	author jont;	state Exp;
branches;
next	1.4.1.2;

1.4.1.2
date	93.09.07.11.51.59;	author daveb;	state Exp;
branches;
next	;

1.19.1.1
date	96.09.13.11.44.36;	author hope;	state Exp;
branches;
next	;

1.20.1.1
date	96.10.07.16.37.53;	author hope;	state Exp;
branches;
next	;

1.20.2.1
date	96.10.17.11.56.49;	author hope;	state Exp;
branches;
next	;

1.20.3.1
date	96.11.14.13.25.10;	author hope;	state Exp;
branches
	1.20.3.1.1.1;
next	;

1.20.3.1.1.1
date	96.11.28.15.36.11;	author hope;	state Exp;
branches;
next	;

1.20.4.1
date	96.11.22.18.42.16;	author hope;	state Exp;
branches;
next	;

1.20.5.1
date	96.12.17.18.21.16;	author hope;	state Exp;
branches
	1.20.5.1.1.1;
next	;

1.20.5.1.1.1
date	97.02.24.12.16.08;	author hope;	state Exp;
branches;
next	;

1.20.6.1
date	97.05.12.11.12.51;	author hope;	state Exp;
branches;
next	1.20.6.2;

1.20.6.2
date	97.06.04.16.47.56;	author daveb;	state Exp;
branches
	1.20.6.2.1.1
	1.20.6.2.2.1
	1.20.6.2.3.1;
next	;

1.20.6.2.1.1
date	97.07.28.18.54.45;	author daveb;	state Exp;
branches
	1.20.6.2.1.1.1.1;
next	;

1.20.6.2.1.1.1.1
date	97.10.07.12.19.34;	author jkbrook;	state Exp;
branches;
next	;

1.20.6.2.2.1
date	97.09.08.17.46.59;	author daveb;	state Exp;
branches;
next	;

1.20.6.2.3.1
date	97.09.09.14.46.11;	author daveb;	state Exp;
branches;
next	;


desc
@Tidied up a bit
@


1.25
log
@[Bug #190541]
Check both the OS and OSTYPE environment variables.
@
text
@#!/bin/sh
# Copyright (c) 1996 Harlequin Ltd.
script_name=`basename $0`
cmd="ci"
STATUS=0
usage="usage: $script_name [-[ftzh]+] [-b <branch>] [(-r <reason>|-c)] [-i <bug-id>] <file>+"
claim_reason=""; new_reason="";bug_id="";test="";branch=""; items="";lastdir=""; force="";echo="";
while getopts "eb:tr:ci:hf" opt; do
  case $opt in
    e) echo="echo";;
    f) force="-force-checkin";;
    b) branch="-branch $OPTARG";;
    t) test="test";;
    r) new_reason="$OPTARG";;
    c) claim_reason="-use-claim-reason";;
    i) bug_id="-bug-number $OPTARG";;
    h) echo $usage; 
      echo "    h for this help"
      echo "    b <branch>"
      echo "    t run in hope test mode"
      echo "    r <new claim reason>"
      echo "    f force checkin"
      echo "    i <bug-id>"
      echo "    c use original claim reason"
      exit 1;;
    \?) echo $usage; exit 1 ;;
  esac
done
shift `expr $OPTIND - 1`

: echo $script_name: checking arguments...
if [ $# -eq 0 ]; then
  echo "nothing to $script_name"
  echo $usage
  exit 1
elif [ -n "$new_reason" -a -n "$claim_reason" ]; then
  echo "options \"r\" and \"c\" are mutually exclusive"
  exit 1
else
  : echo ok
fi

items=""
lastdir=""
for i in $*
do
  if [ $i = '/' ]
  then
     echo $script_name: ignoring /
  else
    # strip trailing /
    tmp=`expr match $i '\(.*[^/]\)'`
    # find the compound
    eval `findcomp $tmp`
	# defines $dir, $compound, $unit
    if [ -z "$compound" ]
    then
      echo $script_name failed : .compound file not found
      exit 3
    elif [ ! -z "$lastdir" -a "$lastdir" != "$dir" ]
    then
      echo $script_name failed : incompatible root directories $dir and $lastdir
      exit 4
    elif [ -z "$items" ]
    then
      items="-compound $compound -unit $unit"
    else
      items="$items -and -compound $compound -unit $unit"
    fi
    lastdir=$dir
  fi
done

cd $dir
if [ -z "$TMP" ]; then
  temp_dir=/tmp
else
  temp_dir=`echo $TMP | sed -e 's!\\\\!/!g'`
fi
temp_file=$temp_dir/hope_tmp$$

# We need to work out whether we're on Unix or Windows.
# NT sets the OS variable to Windows_NT.
# Some MLWorkers set the OS variable themselves.
# Failing that, bash sets the OSTYPE variable.
hope_temp_file=""
case "$OS" in
  Win*)
    hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
  NT*)
    hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
  Solaris*)
    hope_temp_file=$temp_file;;
  SunOS*)
    hope_temp_file=$temp_file;;
  Irix*)
    hope_temp_file=$temp_file;;
  Linux*)
    hope_temp_file=$temp_file;;
esac

if [ -z "$hope_temp_file" ]; then
  case "$OSTYPE" in
    Win*)
      hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
    Solaris*)
      hope_temp_file=$temp_file;;
    SunOS*)
      hope_temp_file=$temp_file;;
    linux*)
      hope_temp_file=$temp_file;;
    *)
      # Assume Unix if we have no other clue.
      # We could also get here on Win95, but we don't use that
      # for development.
      hope_temp_file=$temp_file;;
  esac
fi

if [ -z "$items" ]; then
  echo skipped everything
elif [ -n "$new_reason" ]; then
  echo $test $cmd $force $recursive -filedate $bug_id -reason "$new_reason" $branch $items > $temp_file
  $echo hope source $hope_temp_file
  rm $temp_file
else
  echo $test $cmd $force $recursive -filedate $bug_id $claim_reason $branch $items > $temp_file
  $echo hope source $hope_temp_file
  rm $temp_file
fi  

###############################################################################
# $Log: cin,v $
# Revision 1.24  1998/10/07  12:34:00  jont
# [Bug #70179]
# Avoid OSTYPE=linux problems
#
# Revision 1.23  1998/09/24  14:31:08  jont
# [Bug #70179]
# Make sure temp file name more carefully created to avoid drive letter problems
#
# Revision 1.22  1998/08/25  14:42:44  jont
# [Bug #70162]
# Use source files to get past hope 44 argument limit under Win32
#
# Revision 1.21  1997/04/15  11:19:31  jont
# Stop using script_path mechanism as this confuses Win32
#
# Revision 1.20  1996/10/04  17:53:49  io
# give it a force checkin
#
# Revision 1.19  1996/09/04  14:35:27  io
# use of "-filename" in cin/cout scripts is causing an interaction
# with hope such that different .version files could contain
# the same units. I will restore to the old mechanism and lose
# the ability to handle compounds
#
# Revision 1.18  1996/07/15  18:46:13  io
# add recursive option
#
# Revision 1.17  1996/07/11  18:08:36  io
# [Bug #1463]
# add support for directories and bug-ids,
# see "-h" for other options
#
# Revision 1.16  1995/07/21  13:04:00  jont
# Remove -checkout
#
# Revision 1.15  1995/03/20  11:38:56  daveb
# <embarassed cough> forgot to remove the "echo" that I was using for tests!
#
# Revision 1.14  1995/03/20  11:24:32  daveb
# Changed this script drastically to take advantage of the greater speed
#  offered by passing all arguments to hope at once.
#
# Revision 1.13  1995/02/28  12:52:04  jont
# Modify use of version (deprecated) to branch
#
# Revision 1.12  1995/02/23  17:15:34  jont
# Modify for new file structure /u
#
# Revision 1.11  1995/02/21  15:47:09  brianm
# Introducing SML_HOME
#
# Revision 1.10  1994/06/15  11:02:50  jont
# Add shell variable settings to allow findcomp to be found
#
# Revision 1.9  1994/06/09  15:27:10  nickh
# Better .compound awareness.
#
# Revision 1.8  1994/04/05  11:25:31  daveb
# Now handles trailing / in arguments.
#
# Revision 1.7  1994/03/02  12:42:01  daveb
# Revamping to take file names as arguments.
#
# Revision 1.6  1994/02/04  10:12:21  daveb
# Converted to hope.
#
# Revision 1.5  1993/09/07  16:43:43  daveb
# Merged in bug fix.
#
# Revision 1.4.1.2  1993/09/07  11:51:59  daveb
# Prevented -rrev flag from generating spurious error messages.
#
# Revision 1.4  1992/01/31  12:18:00  richard
# New files are initialized before checkin: their comment leaders are set
# to null strings.
#
# Revision 1.3  1991/12/24  09:31:33  richard
# Updated to use RCS 5.6 commands.  Much better!
#
# Revision 1.2  1991/06/21  12:37:46  jont
# Changed to use program for reading time stamp in order to preserve
# second accuracy
#
# Revision 1.1  91/06/13  11:31:04  jont
# Initial revision
# 
@


1.24
log
@[Bug #70179]
Avoid OSTYPE=linux problems
@
text
@d81 37
a117 4
if [ -z "$OSTYPE" -o "$OSTYPE" = "linux" ]; then
  hope_temp_file=$temp_file
else
  hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`
d119 1
d134 4
@


1.23
log
@[Bug #70179]
Make sure temp file name more carefully created to avoid drive letter problems
@
text
@d81 1
a81 1
if [ -z "$OSTYPE" ]; then
d100 4
@


1.22
log
@[Bug #70162]
Use source files to get past hope 44 argument limit under Win32
@
text
@d75 11
a85 1
temp_file=/tmp/hope_tmp$$
d89 2
a90 2
  echo $test $cmd $force $recursive -filedate $bug_id -reason "$new_reason" $branch $items > $test
  $echo hope source $temp_file
d94 1
a94 1
  $echo hope source $temp_file
d100 4
@


1.21
log
@Stop using script_path mechanism as this confuses Win32
@
text
@d75 1
d77 1
a77 1
  echo skipped everythin
d79 3
a81 1
  $echo hope $test $cmd $force $recursive -filedate $bug_id -reason "$new_reason" $branch $items
d83 3
a85 1
  $echo hope $test $cmd $force $recursive -filedate $bug_id $claim_reason $branch $items
d90 3
@


1.20
log
@give it a force checkin
@
text
@a2 1
script_path=`dirname $0`
d54 1
a54 1
    eval `$script_path/findcomp $tmp`
d85 3
@


1.20.6.1
log
@branched from 1.20
@
text
@a85 3
# Revision 1.20  1996/10/04  17:53:49  io
# give it a force checkin
#
@


1.20.6.2
log
@[Bug #30167]
@
text
@d3 1
d55 1
a55 1
    eval `findcomp $tmp`
a85 3
# Revision 1.20.6.1  1997/05/12  11:12:51  hope
# branched from 1.20
#
@


1.20.6.2.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a84 3
# Revision 1.20.6.2  1997/06/04  16:47:56  daveb
# [Bug #30167]
#
@


1.20.6.2.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a84 3
# Revision 1.20.6.2  1997/06/04  16:47:56  daveb
# [Bug #30167]
#
@


1.20.6.2.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a84 3
# Revision 1.20.6.2  1997/06/04  16:47:56  daveb
# [Bug #30167]
#
@


1.20.6.2.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a84 3
# Revision 1.20.6.2.1.1  1997/07/28  18:54:45  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.20.5.1
log
@branched from 1.20
@
text
@a85 3
# Revision 1.20  1996/10/04  17:53:49  io
# give it a force checkin
#
@


1.20.5.1.1.1
log
@branched from 1.20.5.1
@
text
@a85 3
# Revision 1.20.5.1  1996/12/17  18:21:16  hope
# branched from 1.20
#
@


1.20.4.1
log
@branched from 1.20
@
text
@a85 3
# Revision 1.20  1996/10/04  17:53:49  io
# give it a force checkin
#
@


1.20.3.1
log
@branched from 1.20
@
text
@a85 3
# Revision 1.20  1996/10/04  17:53:49  io
# give it a force checkin
#
@


1.20.3.1.1.1
log
@branched from 1.20.3.1
@
text
@a85 3
# Revision 1.20.3.1  1996/11/14  13:25:10  hope
# branched from 1.20
#
@


1.20.2.1
log
@branched from 1.20
@
text
@a85 3
# Revision 1.20  1996/10/04  17:53:49  io
# give it a force checkin
#
@


1.20.1.1
log
@branched from 1.20
@
text
@a85 3
# Revision 1.20  1996/10/04  17:53:49  io
# give it a force checkin
#
@


1.19
log
@use of "-filename" in cin/cout scripts is causing an interaction
with hope such that different .version files could contain
the same units. I will restore to the old mechanism and lose
the ability to handle compounds
@
text
@d7 3
a9 3
usage="usage: $script_name [-[tzh]+] [-b <branch>] [(-r <reason>|-c)] [-i <bug-id>] <file>+"
claim_reason=""; new_reason="";bug_id="";test="";branch=""; items="";lastdir="";
while getopts "b:tr:ci:h" opt; do
d11 2
d23 1
d79 1
a79 1
  hope $test $cmd $recursive -filedate $bug_id -reason "$new_reason" $branch $items
d81 1
a81 1
  hope $test $cmd $recursive -filedate $bug_id $claim_reason $branch $items
d86 6
@


1.19.1.1
log
@branched from 1.19
@
text
@a82 6
# Revision 1.19  1996/09/04  14:35:27  io
# use of "-filename" in cin/cout scripts is causing an interaction
# with hope such that different .version files could contain
# the same units. I will restore to the old mechanism and lose
# the ability to handle compounds
#
@


1.18
log
@add recursive option
@
text
@d7 3
a9 3
usage="usage: $script_name [-[tzh]+] [-b <branch>] [(-r <reason>|-c)] [-i <bug-id>] (file|dir)+"
recursive=""; claim_reason=""; new_reason="";bug_id="";test="";branch=""; 
while getopts "zb:tr:ci:h" opt; do
a12 1
    z) recursive="-recursive";;
a19 1
      echo "    z zzz... $cmd recursively on subcompounds"
d41 7
a47 16
: echo prime $entry

eval `$script_path/findcomp2 $1`;
if [ -z "$unit" ]; then
  entry="-c $compound -fn $1"
else
  entry="-c $compound -u $unit -fn $1"
fi
shift

: echo stuff in the separators

for arg in $*; do
  eval `$script_path/findcomp2 $arg`; 
  if [ -z "$unit" ]; then
    entry="$entry -a -c $compound -fn $arg"
d49 20
a68 1
    entry="$entry -a -c $compound -u $unit -fn $arg"
d72 3
a74 4
: echo final processing

if [ -z "$entry" ]; then
  echo skipped everthin
d76 1
a76 1
  hope $test $cmd $recursive -filedate $bug_id -reason "$new_reason" $branch $entry
d78 2
a79 2
  hope $test $cmd $recursive -filedate $bug_id $claim_reason         $branch $entry
fi
d83 3
@


1.17
log
@[Bug #1463]
add support for directories and bug-ids,
see "-h" for other options
@
text
@d7 3
a9 3
usage="usage: $script_name [-[th]+] [-b <branch>] [(-r <reason>|-c)] [-i <bug-id>] (file|dir)+"
claim_reason=""; new_reason="";bug_id="";test="";branch=""; 
while getopts "b:tr:ci:h" opt; do
d13 1
d21 1
d69 1
a69 1
  hope $test $cmd -filedate $bug_id -reason "$new_reason" $branch $entry
d71 1
a71 1
  hope $test $cmd -filedate $bug_id $claim_reason         $branch $entry
d76 5
@


1.16
log
@Remove -checkout
@
text
@d2 71
d74 3
a127 63
# Copyright Harlequin Ltd. 1991

# Bugs/Limitations:
#   Error checking ought to be done to see if the compound
#   and file exists on disk and within HOPE.
#   The RCS version created a new RCS file if one didn't exist.

SML_HOME=/u/sml; export SML_HOME
SML=$SML_HOME/MLW; export SML
PATH=$SML/tools:$SML/images:/usr/local/bin:$PATH; export PATH
script=`basename $0`
usage="USAGE: $script [-b <branch>] <File1> [<File2>...]"

coopts=""
while getopts b: option
do
  case $option in
    b) coopts="$coopts -branch $OPTARG" ;;
    *) echo "$usage"; exit 1;;
  esac
done
shift `expr $OPTIND - 1`

if [ "$#" -lt 1 ]; then
    echo $usage
    exit 2
fi

items=""
lastdir=""
for i in $*
do
  if [ $i = '/' ]
  then
     echo $script: ignoring /
  else
    # strip trailing /
    tmp=`expr match $i '\(.*[^/]\)'`
    # find the compound
    eval `findcomp $tmp`
	# defines $dir, $compound, $unit
    if [ -z "$compound" ]
    then
      echo $script failed : .compound file not found
      exit 3
    elif [ ! -z "$lastdir" -a "$lastdir" != "$dir" ]
    then
      echo $script failed : incompatible root directories $dir and $lastdir
      exit 4
    elif [ -z "$items" ]
    then
      items="-compound $compound -unit $unit"
    else
      items="$items -and -compound $compound -unit $unit"
    fi
    lastdir=$dir
  fi
done

cd $dir
hope ci -filedate $coopts $items

exit
@


1.15
log
@<embarassed cough> forgot to remove the "echo" that I was using for tests!
@
text
@d3 3
d114 1
a114 1
hope ci -filedate -checkout $coopts $items
@


1.14
log
@Changed this script drastically to take advantage of the greater speed
 offered by passing all arguments to hope at once.
@
text
@d3 4
a101 1
      echo setting one item
a103 1
      echo setting another item
d110 2
a111 2
echo cd $dir
echo hope ci -filedate -checkout $coopts $items
@


1.13
log
@Modify use of version (deprecated) to branch
@
text
@d3 3
d72 1
a72 1
    exit
d75 2
d79 2
a80 2
  (if [ $i = '/' ]
   then
d82 5
a86 5
   else
     # strip trailing /
     tmp=`expr match $i '\(.*[^/]\)'`
     # find the compound
     eval `findcomp $tmp`
d88 18
a105 8
     if [ -z "$compound" ]
     then
       echo $script failed : .compound file not found
     else
       cd $dir
       hope ci -filedate -checkout $coopts -compound $compound -unit $unit
     fi
   fi)
d108 2
@


1.12
log
@Modify for new file structure /u
@
text
@d3 3
d55 1
a55 1
usage="USAGE: $script [-v <rev>] <File1> [<File2>...]"
d58 1
a58 1
while getopts v: option
d61 1
a61 1
    v) coopts="$coopts -version $OPTARG" ;;
@


1.11
log
@Introducing SML_HOME
@
text
@d3 3
d48 1
a48 1
SML_HOME=/usr/sml; export SML_HOME
@


1.10
log
@Add shell variable settings to allow findcomp to be found
@
text
@d3 3
d45 2
a46 1
SML=/usr/sml/MLW; export SML
@


1.9
log
@Better .compound awareness.
@
text
@d3 3
d42 2
@


1.8
log
@Now handles trailing / in arguments.
@
text
@d3 3
d65 4
a68 4
     unit=`basename $tmp`
     dir=`dirname $i`
     cd $dir
     if [ -r .compound ]
d70 3
a72 1
       compound=`cat .compound`
a73 2
     else
       echo $script: no .compound file in $dir
@


1.7
log
@Revamping to take file names as arguments.
@
text
@d3 3
d36 2
a37 1
usage="USAGE: cin [-v <rev>] <File1> [<File2>...]"
d56 1
a56 4
  (unit=`basename $i`
   dir=`dirname $i`
   cd $dir
   if [ -r .compound ]
d58 1
a58 2
     compound=`cat .compound`
     hope ci -filedate -checkout $coopts -compound $compound -unit $unit
d60 12
a71 1
     echo $script: no .compound file in $dir
@


1.6
log
@Converted to hope.
@
text
@d3 3
d33 1
a33 1
usage="USAGE: cin [-v <rev>] <Compound> <File1> [<File2>...]"
d45 1
a45 1
if [ "$#" -lt 2 ]; then
d50 12
a61 10
compound=$1
shift

allunits=$1
shift

units=$*

for unit in $units; do
    allunits="$allunits -and $unit"
a63 1
hope ci -filedate -checkout -compound $compound $coopts -unit $allunits
@


1.5
log
@Merged in bug fix.
@
text
@d3 3
d24 10
a33 5
rev_opt=
case $1 in
  -r*) rev_opt=$1; shift;;
esac
for x in $*
d35 22
a56 1
  rcs -q $x || rcs -i -q -c'' $x
d58 4
a61 1
ci -d -M -u $rev_opt $*
@


1.4
log
@New files are initialized before checkin: their comment leaders are set
to null strings.
@
text
@d1 1
a1 1
#!/bin/csh
d3 7
d21 6
a26 1
foreach x ($*)
d28 2
a29 2
end
ci -d -M -u $*
@


1.4.1.1
log
@Fork for bug fixing
@
text
@a2 4
# Revision 1.4  1992/01/31  12:18:00  richard
# New files are initialized before checkin: their comment leaders are set
# to null strings.
#
@


1.4.1.2
log
@Prevented -rrev flag from generating spurious error messages.
@
text
@d1 1
a1 1
#!/bin/sh
d18 1
a18 6
rev_opt=
case $1 in
  -r*) rev_opt=$1; shift;;
esac
for x in $*
do
d20 2
a21 2
done
ci -d -M -u $rev_opt $*
@


1.3
log
@Updated to use RCS 5.6 commands.  Much better!
@
text
@d3 3
d14 3
@


1.2
log
@Changed to use program for reading time stamp in order to preserve
second accuracy
@
text
@d2 5
a6 1
# $Log:	cin,v $
d11 1
a11 7
if ($#argv != 1) then
  echo Usage: cin \<filename\>
  exit(1)
endif
set arg = $argv[1]
ci -d"`~sml/tools/readtime $arg`" $arg && \
~sml/tools/cout $arg
@


1.1
log
@Initial revision
@
text
@d2 4
a5 1
# $Log$
d12 1
a12 6
set tmpfile = /tmp/.cin$arg
cat << EOF > $tmpfile
s/................................//
s/$arg//
EOF
ci -d"`ls -l $arg | sed -f $tmpfile`" $arg && \
a13 1
/bin/rm -f $tmpfile
@
