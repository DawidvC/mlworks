head	1.17;
access;
symbols
	MLWorks_21c0_1999_03_25:1.17
	MLWorks_20c1_1998_08_20:1.13
	MLWorks_20c0_1998_08_04:1.13
	MLWorks_20b2c2_1998_06_19:1.13
	MLWorks_20b2_Windows_1998_06_12:1.13
	MLWorks_20b1c1_1998_05_07:1.13
	MLWorks_20b0_1998_04_07:1.13
	MLWorks_20b0_1998_03_20:1.13
	MLWorks_20m2_1998_02_16:1.13
	MLWorks_20m1_1997_10_23:1.13
	MLWorks_11r1:1.12.4.2.1.1.1
	MLWorks_11c0_1997_09_09:1.12.4.2.1.1
	MLWorks_10r3:1.12.4.2.3
	MLWorks_10r2_551:1.12.4.2.2
	MLWorks_11:1.12.4.2.1
	MLWorks_1_0_r2c2_1997_07_28:1.12.4.2
	MLWorks_20m0_1997_06_20:1.13
	MLWorks_1_0_r2c2_1997_06_14:1.12.4.2
	MLWorks_1_0_r2c1_released_1997_05_23:1.12.4.1
	MLWorks_1_0_r2c1_1997_05_12:1.12.4
	MLWorks_BugFix_1997_04_24:1.13
	MLWorks_1_0_r2_Win32_1997_04_11:1.12
	MLWorks_1_0_r2_Unix_1997_04_04:1.12
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.12.3.1.1
	MLWorks_1_0_Win32_1996_12_17:1.12.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.12.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.12.1.1
	MLWorks_1_0_Irix_1996_11_28:1.12.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.12.2
	MLWorks_1_0_Unix_1996_11_14:1.12.1
	MLWorks_Open_Beta2_1996_10_11:1.11.3
	MLWorks_License_dev:1.11.2
	MLWorks_1_open_beta_1996_09_13:1.11.1
	MLWorks_Open_Beta_1996_08_22:1.11
	MLWorks_Beta_1996_07_02:1.9
	MLWorks_Beta_1996_06_07:1.9
	MLWorks_Beta_1996_06_06:1.9
	MLWorks_Beta_1996_06_05:1.9
	MLWorks_Beta_1996_06_03:1.9
	MLWorks_Beta_1996_05_31:1.9
	MLWorks_Beta_1996_05_30:1.9
	ML_beta_release_12/08/94:1.5
	ML_beta_release_03/08/94:1.5
	ML_revised_beta_release_25/05/94:1.3
	ML_final_beta_release_02/03/94:1.1;
locks; strict;
comment	@# @;


1.17
date	99.03.24.15.38.08;	author daveb;	state Exp;
branches;
next	1.16;

1.16
date	98.10.07.12.45.28;	author jont;	state Exp;
branches;
next	1.15;

1.15
date	98.09.24.14.29.54;	author jont;	state Exp;
branches;
next	1.14;

1.14
date	98.08.25.14.38.50;	author jont;	state Exp;
branches;
next	1.13;

1.13
date	97.04.15.12.00.21;	author jont;	state Exp;
branches;
next	1.12;

1.12
date	96.10.25.16.51.28;	author io;	state Exp;
branches
	1.12.1.1
	1.12.2.1
	1.12.3.1
	1.12.4.1;
next	1.11;

1.11
date	96.07.15.19.00.29;	author io;	state Exp;
branches
	1.11.1.1
	1.11.2.1
	1.11.3.1;
next	1.10;

1.10
date	96.07.12.11.37.45;	author io;	state Exp;
branches;
next	1.9;

1.9
date	95.05.16.15.44.39;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	95.02.28.12.52.35;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	95.02.23.17.14.04;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	95.02.21.15.47.09;	author brianm;	state Exp;
branches;
next	1.5;

1.5
date	94.06.22.13.15.54;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	94.06.09.15.27.45;	author nickh;	state Exp;
branches;
next	1.3;

1.3
date	94.04.05.11.26.39;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	94.03.21.11.31.05;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	94.03.02.13.11.52;	author daveb;	state Exp;
branches;
next	;

1.11.1.1
date	96.09.13.11.44.14;	author hope;	state Exp;
branches;
next	;

1.11.2.1
date	96.10.07.16.37.27;	author hope;	state Exp;
branches;
next	;

1.11.3.1
date	96.10.17.11.56.26;	author hope;	state Exp;
branches;
next	;

1.12.1.1
date	96.11.14.13.24.47;	author hope;	state Exp;
branches
	1.12.1.1.1.1;
next	;

1.12.1.1.1.1
date	96.11.28.15.35.46;	author hope;	state Exp;
branches;
next	;

1.12.2.1
date	96.11.22.18.41.53;	author hope;	state Exp;
branches;
next	;

1.12.3.1
date	96.12.17.18.20.52;	author hope;	state Exp;
branches
	1.12.3.1.1.1;
next	;

1.12.3.1.1.1
date	97.02.24.12.15.37;	author hope;	state Exp;
branches;
next	;

1.12.4.1
date	97.05.12.11.12.25;	author hope;	state Exp;
branches;
next	1.12.4.2;

1.12.4.2
date	97.06.04.16.47.45;	author daveb;	state Exp;
branches
	1.12.4.2.1.1
	1.12.4.2.2.1
	1.12.4.2.3.1;
next	;

1.12.4.2.1.1
date	97.07.28.18.55.10;	author daveb;	state Exp;
branches
	1.12.4.2.1.1.1.1;
next	;

1.12.4.2.1.1.1.1
date	97.10.07.12.19.57;	author jkbrook;	state Exp;
branches;
next	;

1.12.4.2.2.1
date	97.09.08.17.47.29;	author daveb;	state Exp;
branches;
next	;

1.12.4.2.3.1
date	97.09.09.14.46.46;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.17
log
@[Bug #190541]
Check both the OS and OSTYPE environment variables.
@
text
@#!/bin/sh
# Copyright (c) 1996 Harlequin Ltd.
script_name=`basename $0`
cmd="abandon"
STATUS=0
recursive=""; test=""; branch=""; user="";
usage="usage: $script_name [-[hzt]+] [-b <branch>] [-u <username>] (file|dir)+"
while getopts "u:ztb:h" opt; do
  case $opt in
    u) user="-user $OPTARG";;
    t) test="test";;
    z) recursive="-recursive";;
    b) branch="-branch $OPTARG";;
    h|\?) 
      echo $usage; 
      echo "    h for this help"
      echo "    t for hope test mode"
      echo "    z zzz... $cmd recursively on subcompounds"
      echo "    b <branch>"
      exit 1;;
  esac
done
shift `expr $OPTIND - 1`


: echo $script_name: checking arguments...
if [ $# -eq 0 ]; then
  echo "nothing to $script_name"
  echo $usage
  exit 1
fi

: echo prime $entry

eval `findcomp2 $1`;
if [ -z "$compound" ]; then
  entry=;
  echo "cannot identify compound \"$1\""
  exit 1	
elif [ -z "$unit" ]; then
  entry="-c $compound -fn $1"
else
  entry="-c $compound -u $unit -fn $1"
fi
shift

: echo stuff in the separators

for arg in $*; do
  eval `findcomp2 $arg`; 
  if [ -z "$compound" ]; then
    echo "cannot identify compound \"$arg\""
    exit 1
  elif [ -z "$unit" ]; then
    entry="$entry -a -c $compound -fn $arg"
  else
    entry="$entry -a -c $compound -u $unit -fn $arg"
  fi
done

: echo final processing

if [ -z "$TMP" ]; then
  temp_dir=/tmp
else
  temp_dir=`echo $TMP | sed -e 's!\\\\!/!g'`
fi
temp_file=$temp_dir/hope_tmp$$

# We need to work out whether we're on Unix or Windows.
# NT sets the OS variable to Windows_NT.
# Some MLWorkers set the OS variable themselves.
# Failing that, bash sets the OSTYPE variable.
hope_temp_file=""
case "$OS" in
  Win*)
    hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
  NT*)
    hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
  Solaris*)
    hope_temp_file=$temp_file;;
  SunOS*)
    hope_temp_file=$temp_file;;
  Irix*)
    hope_temp_file=$temp_file;;
  Linux*)
    hope_temp_file=$temp_file;;
esac

if [ -z "$hope_temp_file" ]; then
  case "$OSTYPE" in
    Win*)
      hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
    Solaris*)
      hope_temp_file=$temp_file;;
    SunOS*)
      hope_temp_file=$temp_file;;
    linux*)
      hope_temp_file=$temp_file;;
    *)
      # Assume Unix if we have no other clue.
      # We could also get here on Win95, but we don't use that
      # for development.
      hope_temp_file=$temp_file;;
  esac
fi

echo $test $cmd $user $recursive $branch $entry > $temp_file
if [ -z "$entry" ]; then
  echo skipped everything
else
  hope source $hope_temp_file
  rm $temp_file
fi

###############################################################################
# $Log: abandon,v $
# Revision 1.16  1998/10/07  12:45:28  jont
# [Bug #70179]
# Avoid OSTYPE=linux problems
#
# Revision 1.15  1998/09/24  14:29:54  jont
# [Bug #70179]
# Make sure temp file name more carefully created to avoid drive letter problems
#
# Revision 1.14  1998/08/25  14:38:50  jont
# [Bug #70162]
# Use source files to get past hope 44 argument limit under Win32
#
# Revision 1.13  1997/04/15  12:00:21  jont
# Stop using script_path mechanism as this confuses Win32
#
# Revision 1.12  1996/10/25  16:51:28  io
# add user
#
# Revision 1.11  1996/07/15  19:00:29  io
# added recursive option
#
# Revision 1.10  1996/07/12  11:37:45  io
# [Bug #1463]
# add support for directories
#
# Revision 1.9  1995/05/16  15:44:39  daveb
# Changed this script drastically to take advantage of the greater speed
# offered by passing all arguments to hope at once.
#
# Revision 1.8  1995/02/28  12:52:35  jont
# Modify use of version (deprecated) to branch
#
# Revision 1.7  1995/02/23  17:14:04  jont
# Modify for new file structure /u
#
# Revision 1.6  1995/02/21  15:47:09  brianm
# Introducing SML_HOME
#
# Revision 1.5  1994/06/22  13:15:54  jont
# Add path setting code
#
# Revision 1.4  1994/06/09  15:27:45  nickh
# New runtime.
#
# Revision 1.3  1994/04/05  11:26:39  daveb
# Now handles trailing / in arguments.
#
# Revision 1.2  1994/03/21  11:31:05  daveb
# Added chmod to unset write permission.
#
# Revision 1.1  1994/03/02  13:11:52  daveb
# new file
@


1.16
log
@[Bug #70179]
Avoid OSTYPE=linux problems
@
text
@d69 37
a105 4
if [ -z "$OSTYPE" -o "$OSTYPE" = "linux" ]; then
  hope_temp_file=$temp_file
else
  hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`
d107 1
d118 4
@


1.15
log
@[Bug #70179]
Make sure temp file name more carefully created to avoid drive letter problems
@
text
@d69 1
a69 1
if [ -z "$OSTYPE" ]; then
d84 4
@


1.14
log
@[Bug #70162]
Use source files to get past hope 44 argument limit under Win32
@
text
@d63 11
a73 1
temp_file=/tmp/hope_tmp$$
d78 1
a78 1
  hope source $temp_file
d84 4
@


1.13
log
@Stop using script_path mechanism as this confuses Win32
@
text
@d63 2
d66 1
a66 1
  echo skipped everythin
d68 2
a69 1
  hope $test $cmd $user $recursive $branch $entry
d74 3
@


1.12
log
@add user
@
text
@a2 1
script_path=`dirname $0`
d35 1
a35 1
eval `$script_path/findcomp2 $1`;
d50 1
a50 1
  eval `$script_path/findcomp2 $arg`; 
d71 3
@


1.12.4.1
log
@branched from 1.12
@
text
@a71 3
# Revision 1.12  1996/10/25  16:51:28  io
# add user
#
@


1.12.4.2
log
@[Bug #30167]
Removed $script_path, as it doesn't work on Windows.
@
text
@d3 1
d36 1
a36 1
eval `findcomp2 $1`;
d51 1
a51 1
  eval `findcomp2 $arg`; 
a71 3
# Revision 1.12.4.1  1997/05/12  11:12:25  hope
# branched from 1.12
#
@


1.12.4.2.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a70 4
# Revision 1.12.4.2  1997/06/04  16:47:45  daveb
# [Bug #30167]
# Removed $script_path, as it doesn't work on Windows.
#
@


1.12.4.2.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a70 4
# Revision 1.12.4.2  1997/06/04  16:47:45  daveb
# [Bug #30167]
# Removed $script_path, as it doesn't work on Windows.
#
@


1.12.4.2.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a70 4
# Revision 1.12.4.2  1997/06/04  16:47:45  daveb
# [Bug #30167]
# Removed $script_path, as it doesn't work on Windows.
#
@


1.12.4.2.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a70 3
# Revision 1.12.4.2.1.1  1997/07/28  18:55:10  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.12.3.1
log
@branched from 1.12
@
text
@a71 3
# Revision 1.12  1996/10/25  16:51:28  io
# add user
#
@


1.12.3.1.1.1
log
@branched from 1.12.3.1
@
text
@a71 3
# Revision 1.12.3.1  1996/12/17  18:20:52  hope
# branched from 1.12
#
@


1.12.2.1
log
@branched from 1.12
@
text
@a71 3
# Revision 1.12  1996/10/25  16:51:28  io
# add user
#
@


1.12.1.1
log
@branched from 1.12
@
text
@a71 3
# Revision 1.12  1996/10/25  16:51:28  io
# add user
#
@


1.12.1.1.1.1
log
@branched from 1.12.1.1
@
text
@a71 3
# Revision 1.12.1.1  1996/11/14  13:24:47  hope
# branched from 1.12
#
@


1.11
log
@added recursive option
@
text
@d7 3
a9 3
recursive=""; test=""; branch="";
usage="usage: $script_name [-[hzt]+] [-b <branch>] (file|dir)+"
while getopts "ztb:h" opt; do
d11 1
d67 1
a67 1
  hope $test $cmd $recursive $branch $entry
d72 3
@


1.11.3.1
log
@branched from 1.11
@
text
@a70 3
# Revision 1.11  1996/07/15  19:00:29  io
# added recursive option
#
@


1.11.2.1
log
@branched from 1.11
@
text
@a70 3
# Revision 1.11  1996/07/15  19:00:29  io
# added recursive option
#
@


1.11.1.1
log
@branched from 1.11
@
text
@a70 3
# Revision 1.11  1996/07/15  19:00:29  io
# added recursive option
#
@


1.10
log
@[Bug #1463]
add support for directories
@
text
@d7 3
a9 3
test=""; branch="";
usage="usage: $script_name [-[ht]+] [-b <branch>] (file|dir)+"
while getopts "tb:h" opt; do
d12 1
d18 1
d66 1
a66 1
  hope $test $cmd $branch $entry
d71 4
@


1.9
log
@Changed this script drastically to take advantage of the greater speed
offered by passing all arguments to hope at once.
@
text
@d2 66
d69 4
a95 68
#
# 
# Copyright Harlequin Ltd. 1991

SML_HOME=/u/sml; export SML_HOME
SML=$SML_HOME/MLW; export SML
PATH=$SML/tools:$SML/images:/usr/local/bin:$PATH; export PATH
script=`basename $0`
usage="USAGE: $script [-b <branch>] <File1> [<File2>...]"

coopts=""
while getopts b: option
do
  case $option in
    b) coopts="$coopts -branch $OPTARG" ;;
    *) echo "$usage"; exit 1;;
  esac
done
shift `expr $OPTIND - 1`

if [ "$#" -lt 1 ]; then
    echo $usage
    exit
fi

items=""
lastdir=""
for i in $*
do
  if [ $i = '/' ]
   then
     echo $script: ignoring /
   else
     # strip trailing /
     tmp=`expr match $i '\(.*[^/]\)'`
     # find the compound
     eval `findcomp $tmp`
        # defines $dir, $compound, $unit
     if [ -z "$compound" ]
     then
       echo $script failed : .compound file not found
       exit 3
     elif [ ! -z "$lastdir" -a "$lastdir" != "$dir" ]
     then
       echo $script failed : incompatible root directories $dir and $lastdir
       exit 4
     else
       if [ "$unit" = "." ]
       then
         item="-compound $compound"
       else
         item="-compound $compound -unit $unit"
       fi
       if [ -z "$items" ]
       then
         items="$item"
       else
         items="$items -and $item"
       fi
     fi
     lastdir=$dir
   fi
done

cd $dir
hope abandon $coopts $items

exit
@


1.8
log
@Modify use of version (deprecated) to branch
@
text
@d3 3
d51 2
d55 1
a55 1
  (if [ $i = '/' ]
a58 1
     dir=`dirname $i`
d61 1
d63 1
a63 1
	# defines $dir, $compound, $unit
d67 5
d73 12
a84 2
       cd $dir
       hope abandon $coopts -compound $compound -unit $unit
d86 2
a87 1
   fi)
d89 3
@


1.7
log
@Modify for new file structure /u
@
text
@d3 3
d31 1
a31 1
usage="USAGE: $script [-v <rev>] <File1> [<File2>...]"
d34 1
a34 1
while getopts v: option
d37 1
a37 1
    v) coopts="$coopts -version $OPTARG" ;;
@


1.6
log
@Introducing SML_HOME
@
text
@d3 3
d24 1
a24 1
SML_HOME=/usr/sml; export SML_HOME
@


1.5
log
@Add path setting code
@
text
@d3 3
d21 2
a22 1
SML=/usr/sml/MLW; export SML
@


1.4
log
@New runtime.
@
text
@d3 3
d18 2
@


1.3
log
@Now handles trailing / in arguments.
@
text
@d3 3
d42 3
a44 3
     unit=`basename $tmp`
     cd $dir
     if [ -r .compound ]
d46 3
a48 1
       compound=`cat .compound`
a49 3
       chmod ugo-w $unit
     else
       echo $script: no .compound file in $dir
@


1.2
log
@Added chmod to unset write permission.
@
text
@d3 3
d12 2
a13 1
usage="USAGE: abandon [-v <rev>] <File1> [<File2>...]"
d32 1
a32 4
  (unit=`basename $i`
   dir=`dirname $i`
   cd $dir
   if [ -r .compound ]
d34 1
a34 3
     compound=`cat .compound`
     hope abandon $coopts -compound $compound -unit $unit
     chmod ugo-w $unit
d36 13
a48 1
     echo $script: no .compound file in $dir
@


1.1
log
@new file
@
text
@d2 4
a5 1
# $Log$
d35 1
@
