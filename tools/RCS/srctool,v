head	1.15;
access;
symbols
	MLWorks_21c0_1999_03_25:1.15
	MLWorks_20c1_1998_08_20:1.15
	MLWorks_20c0_1998_08_04:1.15
	MLWorks_20b2c2_1998_06_19:1.15
	MLWorks_20b2_Windows_1998_06_12:1.15
	MLWorks_20b1c1_1998_05_07:1.15
	MLWorks_20b0_1998_04_07:1.15
	MLWorks_20b0_1998_03_20:1.15
	MLWorks_20m2_1998_02_16:1.15
	MLWorks_20m1_1997_10_23:1.15
	MLWorks_11r1:1.15.7.1.1.1.1
	MLWorks_11c0_1997_09_09:1.15.7.1.1.1
	MLWorks_10r3:1.15.7.1.3
	MLWorks_10r2_551:1.15.7.1.2
	MLWorks_11:1.15.7.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.15.7.1
	MLWorks_20m0_1997_06_20:1.15
	MLWorks_1_0_r2c2_1997_06_14:1.15.7.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.15.7.1
	MLWorks_1_0_r2c1_1997_05_12:1.15.7
	MLWorks_BugFix_1997_04_24:1.15
	MLWorks_1_0_r2_Win32_1997_04_11:1.15
	MLWorks_1_0_r2_Unix_1997_04_04:1.15
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.15.6.1.1
	MLWorks_1_0_Win32_1996_12_17:1.15.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.15.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.15.4.1
	MLWorks_1_0_Irix_1996_11_28:1.15.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.15.5
	MLWorks_1_0_Unix_1996_11_14:1.15.4
	MLWorks_Open_Beta2_1996_10_11:1.15.3
	MLWorks_License_dev:1.15.2
	MLWorks_1_open_beta_1996_09_13:1.15.1
	MLWorks_Open_Beta_1996_08_22:1.15
	MLWorks_Beta_1996_07_02:1.15
	MLWorks_Beta_1996_06_07:1.15
	MLWorks_Beta_1996_06_06:1.15
	MLWorks_Beta_1996_06_05:1.15
	MLWorks_Beta_1996_06_03:1.15
	MLWorks_Beta_1996_05_31:1.15
	MLWorks_Beta_1996_05_30:1.15;
locks; strict;
comment	@# @;


1.15
date	95.03.17.12.29.12;	author brianm;	state Exp;
branches
	1.15.1.1
	1.15.2.1
	1.15.3.1
	1.15.4.1
	1.15.5.1
	1.15.6.1
	1.15.7.1;
next	1.14;

1.14
date	95.03.12.19.56.25;	author brianm;	state Exp;
branches;
next	1.13;

1.13
date	95.02.06.10.21.48;	author brianm;	state Exp;
branches;
next	1.12;

1.12
date	95.01.24.13.58.58;	author brianm;	state Exp;
branches;
next	1.11;

1.11
date	95.01.24.13.22.33;	author brianm;	state Exp;
branches;
next	1.10;

1.10
date	94.10.05.20.51.53;	author brianm;	state Exp;
branches;
next	1.9;

1.9
date	94.10.05.12.30.18;	author brianm;	state Exp;
branches;
next	1.8;

1.8
date	94.09.01.16.21.17;	author brianm;	state Exp;
branches;
next	1.7;

1.7
date	94.08.30.13.57.55;	author brianm;	state Exp;
branches;
next	1.6;

1.6
date	94.08.28.17.40.32;	author brianm;	state Exp;
branches;
next	1.5;

1.5
date	94.08.26.13.34.05;	author brianm;	state Exp;
branches;
next	1.4;

1.4
date	94.08.24.13.22.41;	author brianm;	state Exp;
branches;
next	1.3;

1.3
date	94.08.24.13.18.11;	author brianm;	state Exp;
branches;
next	1.2;

1.2
date	94.08.24.12.56.50;	author brianm;	state Exp;
branches;
next	1.1;

1.1
date	94.08.24.11.52.26;	author brianm;	state Exp;
branches;
next	;

1.15.1.1
date	96.09.13.11.44.48;	author hope;	state Exp;
branches;
next	;

1.15.2.1
date	96.10.07.16.38.08;	author hope;	state Exp;
branches;
next	;

1.15.3.1
date	96.10.17.11.57.00;	author hope;	state Exp;
branches;
next	;

1.15.4.1
date	96.11.14.13.25.20;	author hope;	state Exp;
branches
	1.15.4.1.1.1;
next	;

1.15.4.1.1.1
date	96.11.28.15.36.21;	author hope;	state Exp;
branches;
next	;

1.15.5.1
date	96.11.22.18.42.25;	author hope;	state Exp;
branches;
next	;

1.15.6.1
date	96.12.17.18.21.26;	author hope;	state Exp;
branches
	1.15.6.1.1.1;
next	;

1.15.6.1.1.1
date	97.02.24.12.16.19;	author hope;	state Exp;
branches;
next	;

1.15.7.1
date	97.05.12.11.13.01;	author hope;	state Exp;
branches
	1.15.7.1.1.1
	1.15.7.1.2.1
	1.15.7.1.3.1;
next	;

1.15.7.1.1.1
date	97.07.28.18.54.53;	author daveb;	state Exp;
branches
	1.15.7.1.1.1.1.1;
next	;

1.15.7.1.1.1.1.1
date	97.10.07.12.19.43;	author jkbrook;	state Exp;
branches;
next	;

1.15.7.1.2.1
date	97.09.08.17.47.12;	author daveb;	state Exp;
branches;
next	;

1.15.7.1.3.1
date	97.09.09.14.46.25;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.15
log
@Minor correction.
@
text
@#!/bin/sh
#
# Search facility
#
# Revision Log
# ------------
#
# $Log: srctool,v $
# Revision 1.14  1995/03/12  19:56:25  brianm
# Due to a bug in grep the loc option didn't report filenames.
# The workaround is to add an additional grep filter and to change the
# basic patterns used.
#
# Revision 1.13  1995/02/06  10:21:48  brianm
# Improved pattern-matching of rtspaths
#
# Revision 1.12  1995/01/24  13:58:58  brianm
# Added case sensitive processing for all match expressions
#
# Revision 1.11  1995/01/24  13:22:33  brianm
# Adding case-sensitivity search options ...
#
# Revision 1.10  1994/10/05  20:51:53  brianm
# added to RTSPATHS & ensured that src directory found is
# the top src directory.
#
# Revision 1.9  1994/10/05  12:30:18  brianm
# Corrected use of RTSPATHS - added filename expansion by first of all
# cd'ing into the src directory (when poss.)
#
# Revision 1.8  1994/09/01  16:21:17  brianm
# adding more paths to the RTS variable ...
#
# Revision 1.7  1994/08/30  13:57:55  brianm
# adding /usr/include/sys to CPATHS ...
#
# Revision 1.6  1994/08/28  17:40:32  brianm
# correcting filter paths & extensions for C
#
# Revision 1.5  1994/08/26  13:34:05  brianm
# Correction of Motif library path ...
#
# Revision 1.4  1994/08/24  13:22:41  brianm
# removing echo of grep command ...
#
# Revision 1.3  1994/08/24  13:18:11  brianm
# fixing signature switch ...
#
# Revision 1.2  1994/08/24  12:56:50  brianm
# removal of quick exit - too quick!
#
# Revision 1.1  1994/08/24  11:52:26  brianm
# new file
#
#
# (C) Harlequin Ltd. (1994)
#

#
# This script is designed to be called using the aliases:
#
#    alias search="srctool search"
#    alias src="srctool src"
#    alias srca="srctool srca"
#

if [ "$2" = "" ]
then headfile="/usr/tmp/srctool.$$.use.head"
     tailfile="/usr/tmp/srctool.$$.use.tail"
	
     trap 'rm -f $headfile $tailfile; exit 1' 1 2 3 15

     cat - > $headfile <<\%end%

 Usage : SRC [CASE] [SCAN] [COMPOUND] [OPTIONS] [match] ... [match]
         (up to four match fields)

%end%

     cat - > $tailfile <<\%end%
   CASE has the form:

    -ic | -I  : ignore case
    -lc | -L  : lower case only
    -uc | -U  : UPPER case only
    -cs | -C  : Case sensitive search (default)

 and

   SCAN has the form:

    -and  : filter stream with each subsequent match (default).
    -seq  : construct pattern from given matches in sequence.

 and

   COMPOUND has the form:

    -com compound-directory  : restrict scan to specific compound (prefix).
    -loc                     : restrict scan to current directory.
    -std                     : search in "standard" places (C-oriented).
    -any                     : no restriction (default).

 and

   OPTIONS can be any one of:

    -sig     : scan signature files        (a*).
    -fun     : scan functor files          (_a*).
    -imp     : scan implementation files   (__a*).
    -all     : all of the above (default).

    -ch, -hc : scan C source (.c) & header (.h)
    -ch:<SW> : as above but with SWitch restrictions
    -hc:<SW> : ....

    -c       : scan C source only (.c)
    -c:<SW>  : as above but with SWitch restrictions

    -h       : scan C header only (.h)
    -h:<SW>  : as above but with SWitch restrictions

    where SW = colon seperated list of tokens (e.g. sun:sparc:sol)

    Notes:
      a) for above C-oriented flags, the earlier -any and -std options
         provide C relevent paths for searching ...
   
      b) The <SW> options are used to select Op. Sys./Arch options (e.g.
         SunOS, SPARC, MIPS &c) and can be truncated (case insensitive).

 Variables:

    CPATHS    --- standard search path for system C source/header files
    RTSPATHS  --- paths for the RTS C source/header files

    LIBX11    --- X11 include directory   (default: /usr/include)
    LIBMOTIF  --- Motif include directory (default: /usr/local/motif/include)

 Examples:

    SRC fun '[]'
        --- search globally for "fun" and "[]"
            (filtered search just means that the resulting lines
            will contain the strings "fun" and "[]" - in either order)

    SRC -seq 'functor ' '()'
        --- search globally for "functor " followed somewhere by "()"

    SRC -loc fun Fred
        --- search in local compound for "fun" and "Fred".

    SRC -com type -sig type Data
        --- search in compounds beginning with "type"
            and in signature files for "type" and "Data".

    SRC -com type -fun coerce '(('
        --- search in compounds beginning with "type" and in functor
            files for strings containing "coerce" and '(('

    SRC -std -h printf
        --- search standard C header files for occurrences of printf

    SRC -ch:su:spa Widget
        --- search (system) C source & header files for occurrences of Widget
            but constrained to the (SunOS, SPARC) Op.Sys/Arch combination.
%end%
     case $1
     in
        src)
              cat - >> $headfile <<\%end%
 Greps the source for match info

 where

%end%

              cat $headfile $tailfile | sed -e "s;SRC;src;g"
;;

        srca)
              cat - >> $headfile <<\%end%
 Greps the source for match info (returning only line addresses)

 where

%end%

              cat $headfile $tailfile | sed -e "s;SRC;srca;g"
;;

        search)
              rm -f $headfile
              cat - > $headfile <<\%end%

 Usage : SRC [LINE] [CASE] [SCAN] [COMPOUND] [OPTIONS] [match] ... [match]
         (up to four match fields)

 Greps the source for match info

 where

   LINE can be any one of:

    -line : produce line numbers ONLY
    -text : output matching text, without line numbers (default)

 and

%end%
              cat - >> $tailfile <<\%end%

    SRC -line -loc fun Fred
        --- search in local compound for "fun" and "Fred", returning
            line addresses.
%end%
              cat $headfile $tailfile | sed -e 's;SRC;search;g'
;;
     esac
     rm -f $headfile $tailfile
     exit 0
fi


# External Environment variables ...
LIBMOTIF=${LIBMOTIF='/usr/local/motif/include'}
LIBX11=${LIBX11='/usr/include'}
CPATHS=${CPATHS="/usr/include /usr/include/sys $LIBX11/X11 $LIBMOTIF/Xm"}
RTSPATHS=${RTSPATHS="rts/src rts/src/OS/* rts/src/OS/*/arch/* rts/src/arch/*"}

# Default values ...
GREP=egrep
EXTN=sml

# We begin here ...
# Which progs are we doing today - src, srca or search?
PROG=$1
shift

OUTFILE="/usr/tmp/srca+outfile+$$"
sedfile="/usr/tmp/$PROG+sedfile+$$"
OUTPUT=""

trap 'rm -f $sedfile $OUTPUT; exit 1' 1 2 3 15


#SRC=`pwd | sed -e 's;^\(.*/[Ss][Rr][Cc]\)/.*$;\1;'`
SRC=`pwd | sed -e 's;\(/[Ss][Rr][Cc]\)/.*$;\1;1'`
PWD=`pwd`

case "$SRC"
in
   */[Ss][Rr][Cc])
       cd $SRC
       ;;

   *)  echo "Not in source (src) directory ..."
       exit 1
       ;;
esac


case "$PROG"
in
   src)
     SW=e
     OUTPUT=""
     ;;
   srca)
     SW=ne
     OUTPUT="$OUTFILE"
     ;;
   search)
     SW=e
     OUTPUT=""
     ;;
esac

# Argument processing ...

L=text
case "$PROG$1"
in
   search-li*)
     L=line
     SW=ne
     OUTPUT=$OUTFILE
     shift
     ;;

   search-te*)
     L=text
     SW=ne
     OUTPUT=""
     shift
     ;;
esac

C=""
R="cat -"
case "$1"
in
   -ic|-I)
     C="-i"
     R="cat -"
     shift
     ;;
   -lc|-L)
     C=""
     R="tr '[A-Z]' '[a-z]'"
     shift
     ;;
   -uc|-U)
     C=""
     R="tr '[a-z]' '[A-Z]'"
     shift
     ;;
   -cs|-C)
     C""
     R="cat -"
     shift
     ;; 
  -help)
     srctool $PROG
     exit 1
     ;;
esac

M=and
case "$1"
in
   -and)
     M=and
     shift
     ;;

   -se*)
     M=seq
     shift
     ;;
esac

STD=""
D='*'
case "$1"
in
   -any) shift ;;

   -co*) D="$2*"
         shift 2 ;;

   -lo*) cd $PWD
         D=""
# Due to a bug in grep, we have to handle the local case seperately
# in order to get output lines labelled by the file they came from.
         shift ;;

   -st*) STD="STD"
         shift ;;
esac



MODE="SML"
F='*'
OSTOK=""
PREFIX="."

case "$1"
in
   -all) shift ;;

   -si*) F='[a-zA-Z]*'
         PREFIX=""
         shift ;;

   -f*)  F='_[a-zA-Z]*'
         PREFIX="_"
         shift ;;

   -i*)  F='__[a-zA-Z]*'
         PREFIX="__"
         shift ;;

   -ch|-hc)
         MODE="CH"
         EXTN="c h"
         shift ;;

   -ch:*)
         MODE="CH"
         EXTN="c h"
         OSTOK=`echo $1 | sed -e 's;^-ch:;;'`
         shift ;;

   -hc:*)
         MODE="CH"
         EXTN="c h"
         OSTOK=`echo $1 | sed -e 's;^-hc:;;'`
         shift ;;

   -c)
         MODE="C"
         EXTN="c"
         shift ;;

   -c:*)
         MODE="C"
         EXTN="c"
         OSTOK=`echo $1 | sed -e 's;^-c:;;'`
         shift ;;

   -h)           
         MODE="H"
         EXTN="h"
         shift ;;

   -h:*)
         MODE="H"
         EXTN="h"
         OSTOK=`echo $1 | sed -e 's;^-h:;;'`
         shift ;;
esac

case "$OSTOK"
in
   "") ;;
   *)
       OSTOK=`echo $OSTOK | tr '[A-Z]' '[a-z]' | sed -e 's;\:; ;g'`

       newRTSPATHS=""

       for p in $RTSPATHS
       do
	 case "$p"
	 in
	   */OS/*|*/arch/*)
  	      for s in $OSTOK
	      do

#		match=`basename $p | tr '[A-Z]' '[a-z]' | sed -e 's;'$s'.*;;'`

		match=`echo $p | tr '[A-Z]' '[a-z]' | sed -e 's;.*'$s'.*;!;'`

		if test "($match)" = "(!)"
		then newRTSPATHS="$newRTSPATHS $p"
		fi
              done
		;;

	    *)
		newRTSPATHS="$newRTSPATHS $p"
		;;
	 esac
       done

       RTSPATHS=$newRTSPATHS
       ;;
esac

case "$MODE"
in
   SML)
      case "$D"
      in
         "") 
            SRCFILES="*.$EXTN"
            ;;

         *) SRCFILES="$D/$F.$EXTN"
            PREFIX=""
            ;;
      esac
      ;;

   *)
      SRCFILES=""
      case "$MODE+$STD"
      in
         C+STD)
           SPATHS="$RTSPATHS"
           ;;

         CH+STD)
           SPATHS="$CPATHS $RTSPATHS"
           ;;

         H+STD)
           SPATHS="$CPATHS"
           ;;

         *)
           SPATHS="$RTSPATHS"
           ;;
     esac

     for p in $SPATHS
     do
       case "$p"
       in
          *\.[cChH]|*\.sml)
              SRCFILES="$SRCFILES $p"
              ;;

          *)
	      for e in $EXTN
	      do
		SRCFILES="$SRCFILES $p/*.$e"
	      done
	      ;;
       esac
     done
     ;;
esac

# text expressions - additional quoting for grep expressions ...

cat - > $sedfile <<\%%
s:^+::
s:-$::
s;\[;\\\[;g
s;\];\\\];g
s:\.:\\\.:g
s;(;\\(;g
s;);\\);g
s:;:\\;:g
s:|:\\|:g
s:#:\\#:g
s:\^:\\^:g
s:\$:\\$:g
s:\*:\\*:g
s:\+:\\+:g
%%

case $#
in
   1)
	m1=`echo +$1- | sed  -f $sedfile | $R`
        ;;

   2)
	m1=`echo +$1- | sed  -f $sedfile | $R`
	m2=`echo +$2- | sed  -f $sedfile | $R`
        ;;

   3)
	m1=`echo +$1- | sed  -f $sedfile | $R`
	m2=`echo +$2- | sed  -f $sedfile | $R`
	m3=`echo +$3- | sed  -f $sedfile | $R`
        ;;

   4)
	m1=`echo +$1- | sed  -f $sedfile | $R`
	m2=`echo +$2- | sed  -f $sedfile | $R`
	m3=`echo +$3- | sed  -f $sedfile | $R`
	m4=`echo +$4- | sed  -f $sedfile | $R`
        ;;

   *)   echo "too many arguments ... $# in total"
        exit 1 ;;
esac

rm -f $sedfile

MATCH="^$PREFIX[a-zA-Z]"

case $M
in
  and)
    case $#
    in
       1) $GREP $C -$SW "$m1" $SRCFILES |
          $GREP $C $MATCH               |
          $GREP $C -ve "^$GREP: "       > $OUTPUT 2>&1
          ;;

       2) $GREP $C -$SW "$m1" $SRCFILES |
          $GREP $C $MATCH               |
          $GREP $C -ve "^$GREP: "       |
          $GREP $C -e "$m2" > $OUTPUT 2>&1
          ;;

       3) $GREP $C -$SW "$m1" $SRCFILES |
          $GREP $C $MATCH               |
          $GREP $C -ve "^$GREP: "       |
          $GREP $C -e "$m2" |
          $GREP $C -e "$m3" > $OUTPUT 2>&1
          ;;

       4) $GREP $C -$SW "$m1" $SRCFILES |
          $GREP $C $MATCH               |
          $GREP $C -ve "^$GREP: "       |
          $GREP $C -e "$m2" |
          $GREP $C -e "$m3" |
          $GREP $C -e "$m4" > $OUTPUT 2>&1
          ;;
    esac
    ;;

  seq)
    case $#
    in
       1) $GREP $C -$SW "$m1" $SRCFILES |
          $GREP $C $MATCH               |
          $GREP $C -ve "^$GREP: "       > $OUTPUT 2>&1 ;;

       2) $GREP $C -$SW "$m1.*$m2" $SRCFILES |
          $GREP $C $MATCH                    |
          $GREP $C -ve "^$GREP: "            > $OUTPUT 2>&1 ;;

       3) $GREP $C -$SW "$m1.*$m2.*$m3" $SRCFILES |
          $GREP $C $MATCH                    |
          $GREP $C -ve "^$GREP: "                 > $OUTPUT 2>&1 ;;

       4) $GREP $C -$SW "$m1.*$m2.*$m3.*$m4" $SRCFILES |
          $GREP $C $MATCH                              |
          $GREP $C -ve "^$GREP: "                      > $OUTPUT 2>&1 ;;
    esac
    ;;
esac

case "$PROG"
in
   srca)
      sed -e 's;\(:[0-9]*:\).*$;\1;1' $OUTPUT
      rm -f $OUTPUT
      ;;
esac
@


1.15.7.1
log
@branched from 1.15
@
text
@a8 3
# Revision 1.15  1995/03/17  12:29:12  brianm
# Minor correction.
#
@


1.15.7.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a8 3
# Revision 1.15.7.1  1997/05/12  11:13:01  hope
# branched from 1.15
#
@


1.15.7.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a8 3
# Revision 1.15.7.1  1997/05/12  11:13:01  hope
# branched from 1.15
#
@


1.15.7.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a8 3
# Revision 1.15.7.1  1997/05/12  11:13:01  hope
# branched from 1.15
#
@


1.15.7.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a8 3
# Revision 1.15.7.1.1.1  1997/07/28  18:54:53  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.15.6.1
log
@branched from 1.15
@
text
@a8 3
# Revision 1.15  1995/03/17  12:29:12  brianm
# Minor correction.
#
@


1.15.6.1.1.1
log
@branched from 1.15.6.1
@
text
@a8 3
# Revision 1.15.6.1  1996/12/17  18:21:26  hope
# branched from 1.15
#
@


1.15.5.1
log
@branched from 1.15
@
text
@a8 3
# Revision 1.15  1995/03/17  12:29:12  brianm
# Minor correction.
#
@


1.15.4.1
log
@branched from 1.15
@
text
@a8 3
# Revision 1.15  1995/03/17  12:29:12  brianm
# Minor correction.
#
@


1.15.4.1.1.1
log
@branched from 1.15.4.1
@
text
@a8 3
# Revision 1.15.4.1  1996/11/14  13:25:20  hope
# branched from 1.15
#
@


1.15.3.1
log
@branched from 1.15
@
text
@a8 3
# Revision 1.15  1995/03/17  12:29:12  brianm
# Minor correction.
#
@


1.15.2.1
log
@branched from 1.15
@
text
@a8 3
# Revision 1.15  1995/03/17  12:29:12  brianm
# Minor correction.
#
@


1.15.1.1
log
@branched from 1.15
@
text
@a8 3
# Revision 1.15  1995/03/17  12:29:12  brianm
# Minor correction.
#
@


1.14
log
@Due to a bug in grep the loc option didn't report filenames.
The workaround is to add an additional grep filter and to change the
basic patterns used.
@
text
@d9 5
d367 1
a367 1
PREFIX=""
a473 2

      PREFIX="^$PREFIX[a-zA-Z]"
d565 2
d573 2
a574 2
          $GREP $C $PREFIX              |
          $GREP $C -ve "^$GREP: "       > $OUTPUT
d578 1
a578 1
          $GREP $C $PREFIX              |
d580 1
a580 1
          $GREP $C -e "$m2" > $OUTPUT
d584 1
a584 1
          $GREP $C $PREFIX              |
d587 1
a587 1
          $GREP $C -e "$m3" > $OUTPUT
d591 1
a591 1
          $GREP $C $PREFIX              |
d595 1
a595 1
          $GREP $C -e "$m4" > $OUTPUT
d604 2
a605 2
          $GREP $C $PREFIX              |
          $GREP $C -ve "^$GREP: "       > $OUTPUT ;;
d608 2
a609 2
          $GREP $C $PREFIX                   |
          $GREP $C -ve "^$GREP: "            > $OUTPUT ;;
d612 2
a613 2
          $GREP $C $PREFIX                   |
          $GREP $C -ve "^$GREP: "                 > $OUTPUT ;;
d616 2
a617 2
          $GREP $C $PREFIX                             |
          $GREP $C -ve "^$GREP: "                      > $OUTPUT ;;
@


1.13
log
@Improved pattern-matching of rtspaths
@
text
@d9 3
d244 2
d347 4
a350 2
   -lo*) D=`pwd`
         D=`basename $D`
d362 1
d369 1
d373 1
d377 1
d459 12
a470 1
      SRCFILES="$D/$F.$EXTN"
a561 1

d568 1
d573 1
d579 1
d586 1
d599 1
d603 1
d607 1
d611 1
@


1.12
log
@Added case sensitive processing for all match expressions
@
text
@d9 3
d425 3
a427 1
		match=`basename $p | tr '[A-Z]' '[a-z]' | sed -e 's;'$s'.*;;'`
d429 1
a429 1
		if test "($match)" = "()"
@


1.11
log
@Adding case-sensitivity search options ...
@
text
@d9 3
d185 1
a185 1
 Usage : SRC [CASE] [LINE] [SCAN] [COMPOUND] [OPTIONS] [match] ... [match]
a191 9
   CASE has the form:

    -ic | -I  : ignore case
    -lc | -L  : lower case only
    -uc | -U  : UPPER case only
    -cs | -C  : Case sensitive search (default)

 and

d197 2
d267 19
a315 18
L=text
case "$PROG$1"
in
   search-li*)
     L=line
     SW=ne
     OUTPUT=$OUTFILE
     shift
     ;;

   search-te*)
     L=text
     SW=ne
     OUTPUT=""
     shift
     ;;
esac

d517 3
a519 3
	m1=`echo +$1- | sed  -f $sedfile`
	m2=`echo +$2- | sed  -f $sedfile`
	m3=`echo +$3- | sed  -f $sedfile`
d523 4
a526 4
	m1=`echo +$1- | sed  -f $sedfile`
	m2=`echo +$2- | sed  -f $sedfile`
	m3=`echo +$3- | sed  -f $sedfile`
	m4=`echo +$4- | sed  -f $sedfile`
@


1.10
log
@added to RTSPATHS & ensured that src directory found is
the top src directory.
@
text
@d9 4
a52 1

d61 1
a61 1
 Usage : SRC [SCAN] [COMPOUND] [OPTIONS] [match] ... [match]
d67 9
d182 1
a182 1
 Usage : SRC [LINE] [SCAN] [COMPOUND] [OPTIONS] [match] ... [match]
d189 9
d271 30
a318 1

a330 4
  -help)
     srctool $PROG
     exit 1
     ;;
d337 1
a337 1
   -any) ;;
d511 1
a511 1
	m1=`echo +$1- | sed  -f $sedfile`
d515 2
a516 2
	m1=`echo +$1- | sed  -f $sedfile`
	m2=`echo +$2- | sed  -f $sedfile`
d544 2
a545 4
       1) #echo "$GREP -$SW "$m1" $D/$F.$EXTN"
          #echo "$GREP -$SW "$m1" $SRCFILES"
          $GREP -$SW "$m1" $SRCFILES |
          $GREP -ve "^$GREP: "       > $OUTPUT
d548 3
a550 5
       2) #echo "$GREP -$SW "$m1" $D/$F.$EXTN | $GREP -e "$m2""
          #echo "$GREP -$SW "$m1" $SRCFILES | $GREP -e "$m2""
          $GREP -$SW "$m1" $SRCFILES |
          $GREP -ve "^$GREP: "       |
          $GREP -e "$m2" > $OUTPUT
d553 4
a556 6
       3) #echo "$GREP -$SW "$m1" $D/$F.$EXTN | $GREP -e "$m2" | $GREP -e "$m3" "
          #echo "$GREP -$SW "$m1" $SRCFILES | $GREP -e "$m2" | $GREP -e "$m3" "
          $GREP -$SW "$m1" $SRCFILES |
          $GREP -ve "^$GREP: "       |
          $GREP -e "$m2" |
          $GREP -e "$m3" > $OUTPUT
d559 5
a563 5
       4) $GREP -$SW "$m1" $SRCFILES |
          $GREP -ve "^$GREP: "       |
          $GREP -e "$m2" |
          $GREP -e "$m3" |
          $GREP -e "$m4" > $OUTPUT
d571 2
a572 2
       1) $GREP -$SW "$m1" $SRCFILES |
          $GREP -ve "^$GREP: "       > $OUTPUT ;;
d574 2
a575 2
       2) $GREP -$SW "$m1.*$m2" $SRCFILES |
          $GREP -ve "^$GREP: "            > $OUTPUT ;;
d577 2
a578 2
       3) $GREP -$SW "$m1.*$m2.*$m3" $SRCFILES |
          $GREP -ve "^$GREP: "                 > $OUTPUT ;;
d580 2
a581 2
       4) $GREP -$SW "$m1.*$m2.*$m3.*$m4" $SRCFILES |
          $GREP -ve "^$GREP: "                      > $OUTPUT ;;
@


1.9
log
@Corrected use of RTSPATHS - added filename expansion by first of all
cd'ing into the src directory (when poss.)
@
text
@d9 4
d201 1
a201 1
RTSPATHS=${RTSPATHS="rts/src rts/src/OS/* rts/src/arch/*"}
d219 2
a220 1
SRC=`pwd | sed -e 's;^\(.*/[Ss][Rr][Cc]\)/.*$;\1;'`
@


1.8
log
@adding more paths to the RTS variable ...
@
text
@d9 3
d197 1
a197 1
RTSPATHS=${RTSPATHS='rts/src rts/src/OS/* rts/src/arch/*'}
a202 1

d210 1
a210 1
OUTPUT=
d214 14
d232 1
a232 1
     OUTPUT=
d240 1
a240 1
     OUTPUT=
d258 1
a258 1
     OUTPUT=
d373 1
a395 1
      SRC=`pwd | sed -e 's;^\(.*/[Ss][Rr][Cc]\)/.*$;\1;'`
a403 1
           SRC=`pwd | sed -e 's;^\(.*/[Ss][Rr][Cc]\)/.*$;\1;'`
a407 1
           SRC=`pwd | sed -e 's;^\(.*/[Ss][Rr][Cc]\)/.*$;\1;'`
a411 1
           SRC=""
a415 1
           SRC=`pwd | sed -e 's;^\(.*/[Ss][Rr][Cc]\)/.*$;\1;'`
a436 12

case "$SRC"
in
   "") ;;
   */[Ss][Rr][Cc])
       ;;
   *)  echo "Not in source (src) directory ..."
       exit 1
       ;;
esac

cd $SRC
@


1.7
log
@adding /usr/include/sys to CPATHS ...
@
text
@d9 3
d81 2
a82 2
    -ch:<OS> : as above but restricted to Op. Sys.
    -hc:<OS> : ....
d85 1
a85 1
    -c:<OS>  : as above but restricted to Op. Sys.
d88 3
a90 1
    -h:<OS>  : as above but restricted to Op. Sys.
d96 2
a97 2
      b) Above <OS> options are those supported by the RTS (i.e. Irix,
         SunOS, &c) and can be truncated (case insensitive).
d131 1
a131 1
    SRC -ch:sun Widget
d133 1
d194 1
a194 1
RTSPATHS=${RTSPATHS='rts/src rts/src/OS/*'}
d284 1
d287 1
a287 1
OS=""
d310 1
a310 1
         OS=`echo $1 | sed -e 's;^-ch:;;'`
d316 1
a316 1
         OS=`echo $1 | sed -e 's;^-hc:;;'`
d327 1
a327 1
         OS=`echo $1 | sed -e 's;^-c:;;'`
d338 1
a338 1
         OS=`echo $1 | sed -e 's;^-h:;;'`
d342 1
a342 1
case "$OS"
d346 1
a346 1
       OS=`echo $OS | tr '[A-Z]' '[a-z]'`
d348 2
d354 4
a357 2
	   */OS/*)
              match=`basename $p | tr '[A-Z]' '[a-z]' | sed -e 's;'$OS'.*;;'`
d359 9
a367 7
              if test "($match)" = "()"
	      then newRTSPATHS="$newRTSPATHS $p"
              fi
	      ;;
          *)
              newRTSPATHS="$newRTSPATHS $p"
              ;;
d370 1
d401 1
a401 1
        *)
a425 3
# echo $SRCFILES
# exit 0
     
@


1.6
log
@correcting filter paths & extensions for C
@
text
@d9 3
d187 1
a187 1
CPATHS=${CPATHS="/usr/include $LIBX11/X11 $LIBMOTIF/Xm"}
@


1.5
log
@Correction of Motif library path ...
@
text
@d9 3
d75 3
d79 2
d82 1
d84 6
a89 3
   (Note: for C-oriented options, the above -any and -std options
    provide C relevent paths for searching ...
   )
d96 2
a97 2
    LIBX11    --- X11 include directory
    LIBMOTIF  --- Motif include directory (containing Xm directory)
d120 5
a124 1
  
d163 2
a164 2
    -line   : produce line numbers
    -text : produce no line numbers (default)
d168 1
a171 1

a180 1

d183 3
a185 3
LIBX11=${LIBX11='/usr/include/X11'}
CPATHS=${CPATHS="/usr/include $LIBX11 $LIBMOTIF/Xm"}
RTSPATHS=${RTSPATHS='rts rts/src rts/src/OS/* rts/src/OS/*/*'}
d191 2
d274 1
d277 2
d297 12
d314 6
d324 32
d392 13
a404 4
       for e in $EXTN
       do
	 SRCFILES="$SRCFILES $p/*.$e"
       done
d408 3
d481 2
a482 1
          $GREP -$SW "$m1" $SRCFILES > $OUTPUT
d488 1
d495 1
d501 1
d512 11
a522 4
       1) $GREP -$SW "$m1" $SRCFILES > $OUTPUT ;;
       2) $GREP -$SW "$m1.*$m2" $SRCFILES > $OUTPUT ;;
       3) $GREP -$SW "$m1.*$m2.*$m3" $SRCFILES > $OUTPUT ;;
       4) $GREP -$SW "$m1.*$m2.*$m3.*$m4" $SRCFILES > $OUTPUT ;;
@


1.4
log
@removing echo of grep command ...
@
text
@d9 3
d167 1
a167 1
LIBMOTIF=@@{LIBMOTIF='/usr/local/motif/include'}
@


1.3
log
@fixing signature switch ...
@
text
@d9 3
d395 2
a396 2
          echo "$GREP -$SW "$m1" $SRCFILES"
          #$GREP -$SW "$m1" $SRCFILES > $OUTPUT
d400 3
a402 3
          echo "$GREP -$SW "$m1" $SRCFILES | $GREP -e "$m2""
          #$GREP -$SW "$m1" $SRCFILES |
          #$GREP -e "$m2" > $OUTPUT
@


1.2
log
@removal of quick exit - too quick!
@
text
@d9 3
d240 1
a240 1
   -c*)  D="$2*"
d243 1
a243 1
   -l*)  D=`pwd`
d247 1
a247 1
   -s*)  STD="STD"
a252 1
SRCFILES="$D/$F.$EXTN"
d257 1
a257 1
   -s*)  F='[a-zA-Z]*'
a281 1

d285 3
a287 2
       SRC=`pwd | sed -e 's;^\(.*/[Ss][Rr][Cc]\)/.*$;\1;'`
       ;;
d290 1
a313 1
     SRCFILES=""
d392 2
a393 2
          #echo "$GREP -$SW "$m1" $SRCFILES"
          $GREP -$SW "$m1" $SRCFILES > $OUTPUT
d397 3
a399 3
          #echo "$GREP -$SW "$m1" $SRCFILES | $GREP -e "$m2""
          $GREP -$SW "$m1" $SRCFILES |
          $GREP -e "$m2" > $OUTPUT
@


1.1
log
@new file
@
text
@d8 3
a10 1
# $Log$
d12 1
a22 3

echo $0
exit
@
