head	1.7;
access;
symbols
	MLWorks_21c0_1999_03_25:1.7
	MLWorks_20c1_1998_08_20:1.7
	MLWorks_20c0_1998_08_04:1.7
	MLWorks_20b2c2_1998_06_19:1.7
	MLWorks_20b2_Windows_1998_06_12:1.7
	MLWorks_20b1c1_1998_05_07:1.7
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.7
	MLWorks_20m1_1997_10_23:1.7
	MLWorks_11r1:1.7.7.1.1.1.1
	MLWorks_11c0_1997_09_09:1.7.7.1.1.1
	MLWorks_10r3:1.7.7.1.3
	MLWorks_10r2_551:1.7.7.1.2
	MLWorks_11:1.7.7.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.7.7.1
	MLWorks_20m0_1997_06_20:1.7
	MLWorks_1_0_r2c2_1997_06_14:1.7.7.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.7.7.1
	MLWorks_1_0_r2c1_1997_05_12:1.7.7
	MLWorks_BugFix_1997_04_24:1.7
	MLWorks_1_0_r2_Win32_1997_04_11:1.7
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.6.1.1
	MLWorks_1_0_Win32_1996_12_17:1.7.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.7.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.7.4.1
	MLWorks_1_0_Irix_1996_11_28:1.7.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.7.5
	MLWorks_1_0_Unix_1996_11_14:1.7.4
	MLWorks_Open_Beta2_1996_10_11:1.7.3
	MLWorks_License_dev:1.7.2
	MLWorks_1_open_beta_1996_09_13:1.7.1
	MLWorks_Open_Beta_1996_08_22:1.7
	MLWorks_Beta_1996_07_02:1.6
	MLWorks_Beta_1996_06_07:1.6
	MLWorks_Beta_1996_06_06:1.6
	MLWorks_Beta_1996_06_05:1.6
	MLWorks_Beta_1996_06_03:1.6
	MLWorks_Beta_1996_05_31:1.6
	MLWorks_Beta_1996_05_30:1.6
	ML_beta_release_12/08/94:1.4
	ML_beta_release_03/08/94:1.4
	ML_revised_beta_release_25/05/94:1.4
	ML_final_beta_release_02/03/94:1.4
	mlworks-28-01-1994:1.4
	Release:1.4
	mlworks-beta-01-09-1993:1.4;
locks; strict;
comment	@# @;


1.7
date	96.07.16.16.21.56;	author io;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1
	1.7.5.1
	1.7.6.1
	1.7.7.1;
next	1.6;

1.6
date	96.03.22.00.02.12;	author io;	state Exp;
branches;
next	1.5;

1.5
date	95.03.23.18.16.41;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	93.06.17.13.18.07;	author richard;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	93.01.08.15.15.39;	author richard;	state Exp;
branches;
next	1.2;

1.2
date	92.09.09.11.31.56;	author richard;	state Exp;
branches;
next	1.1;

1.1
date	92.09.09.10.35.52;	author richard;	state Exp;
branches;
next	;

1.4.1.1
date	93.06.17.13.18.07;	author jont;	state Exp;
branches;
next	;

1.7.1.1
date	96.09.13.11.44.32;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.10.07.16.37.48;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.10.17.11.56.45;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	96.11.14.13.25.06;	author hope;	state Exp;
branches
	1.7.4.1.1.1;
next	;

1.7.4.1.1.1
date	96.11.28.15.36.07;	author hope;	state Exp;
branches;
next	;

1.7.5.1
date	96.11.22.18.42.12;	author hope;	state Exp;
branches;
next	;

1.7.6.1
date	96.12.17.18.21.12;	author hope;	state Exp;
branches
	1.7.6.1.1.1;
next	;

1.7.6.1.1.1
date	97.02.24.12.16.02;	author hope;	state Exp;
branches;
next	;

1.7.7.1
date	97.05.12.11.12.45;	author hope;	state Exp;
branches
	1.7.7.1.1.1
	1.7.7.1.2.1
	1.7.7.1.3.1;
next	;

1.7.7.1.1.1
date	97.07.28.18.54.42;	author daveb;	state Exp;
branches
	1.7.7.1.1.1.1.1;
next	;

1.7.7.1.1.1.1.1
date	97.10.07.12.19.31;	author jkbrook;	state Exp;
branches;
next	;

1.7.7.1.2.1
date	97.09.08.17.46.54;	author daveb;	state Exp;
branches;
next	;

1.7.7.1.3.1
date	97.09.09.14.46.06;	author daveb;	state Exp;
branches;
next	;


desc
@Module file copying utility.
@


1.7
log
@copymo assumes you are running in the target directory,
alter it to make that assumption invalid,
You can now pass -p SPARC/SunOS -p SPARC/Solaris arguments
@
text
@#!/bin/sh
# Copyright (c) 1996 Harlequin Ltd.
script_path=`dirname $0`
script_name=`basename $0`
usage="usage: $script_name (-a|-p ARCH/OS)+ <src-dir> <dest-dir>"
ALL=0
PHASE=0
ARCH_OS="";
arch_os_dirs_file=$script_path/arch_os_dirs
tmpfile=/tmp/$script_name-$$
tmppipe=$tmpfile-pipe

trap "echo removing temp files; rm -f $tmpfile $tmppipe; exit 1" 2 3 15
while getopts "ap:h" opt; do
  case $opt in
    h) echo $usage; 
      echo "    copies mo files from one source tree to another."
      echo "    An mo file is only copied if there is a corresponding"
      echo "    source file in the destination tree."
      echo
      echo "    a for all ARCH/OS/*.mo and *.mo combinations"
      echo "    p for specific ARCH/OS prefix"
      echo "    h for this help"
      exit 1;;
    a) ALL=1;;
    p) PHASE=1; test -z "$ARCH_OS" && ARCH_OS="$OPTARG" || ARCH_OS="$ARCH_OS $OPTARG";;
    \?) echo $usage; exit 1;;
    esac
done
shift `expr $OPTIND - 1`


: echo $script_name: checking arguments...
if [ $# -eq 0 ]; then
  echo "nothing to $script_name"
  echo $usage; exit 1
elif [ $# -ne 2 ]; then
  echo $usage; exit 1
elif [ ! -d $1 -o ! -d $2 ]; then
  echo $usage; exit 1
elif [ $ALL -eq 1 -a $PHASE -eq 1 ]; then
  echo $usage; exit 1
else
  : echo ok
fi

if [ -z "$ARCH_OS" ]; then
  ARCH_OS=`cat $arch_os_dirs_file`
fi
echo -n "$script_name: Finding sources... " 1>&2
FILE=`cd $2 && find . -name \*.sml -print | sed "s/^\.\///g;s/\.sml$//g"`
echo "done." 1>&2
(cd $2 &&
for file in $FILE; do
  test "$PHASE" -eq 0 && echo $file.mo
  if [ $ALL -eq 1 -o $PHASE -eq 1 ]; then
    for archos in $ARCH_OS; do
      mofile=`dirname $file`/$archos/`basename $file`.mo
      echo $mofile 
    done
  fi
done > $tmpfile)

if /etc/mknod $tmppipe p; then
  {
    sed -e '/^.*No such file or directory$/d
            /^a / d
            s/\(^.*\)$/source: \1/' < $tmppipe
    rm $tmppipe
  } &
fi
(cd $1 && gnutar -cvf - -T $tmpfile 2> $tmppipe
 rm $tmpfile) |
(cd $2 && gnutar pxvf - |
 sed -e "s!^x \./\([^,]*\).*\$!\1!")


# $Log: copymo,v $
# Revision 1.6  1996/03/22  00:02:12  io
# handle [selected|all] object paths via optional arguments
#
# Revision 1.5  1995/03/23  18:16:41  jont
# Fix bug 838
#
# Revision 1.4  1993/06/17  13:18:07  richard
# Rewrote this script to use tar instead of checking all the files
# individually.  It makes use of the fact that tar doesn't really
# mind if an input file doesn't exist.
#
# Revision 1.3  1993/01/08  15:15:39  richard
# Added rm before cp -p so that permissions don't affect the
# copy.
#
@


1.7.7.1
log
@branched from 1.7
@
text
@a78 5
# Revision 1.7  1996/07/16  16:21:56  io
# copymo assumes you are running in the target directory,
# alter it to make that assumption invalid,
# You can now pass -p SPARC/SunOS -p SPARC/Solaris arguments
#
@


1.7.7.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a78 3
# Revision 1.7.7.1  1997/05/12  11:12:45  hope
# branched from 1.7
#
@


1.7.7.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a78 3
# Revision 1.7.7.1  1997/05/12  11:12:45  hope
# branched from 1.7
#
@


1.7.7.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a78 3
# Revision 1.7.7.1  1997/05/12  11:12:45  hope
# branched from 1.7
#
@


1.7.7.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a78 3
# Revision 1.7.7.1.1.1  1997/07/28  18:54:42  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.7.6.1
log
@branched from 1.7
@
text
@a78 5
# Revision 1.7  1996/07/16  16:21:56  io
# copymo assumes you are running in the target directory,
# alter it to make that assumption invalid,
# You can now pass -p SPARC/SunOS -p SPARC/Solaris arguments
#
@


1.7.6.1.1.1
log
@branched from 1.7.6.1
@
text
@a78 3
# Revision 1.7.6.1  1996/12/17  18:21:12  hope
# branched from 1.7
#
@


1.7.5.1
log
@branched from 1.7
@
text
@a78 5
# Revision 1.7  1996/07/16  16:21:56  io
# copymo assumes you are running in the target directory,
# alter it to make that assumption invalid,
# You can now pass -p SPARC/SunOS -p SPARC/Solaris arguments
#
@


1.7.4.1
log
@branched from 1.7
@
text
@a78 5
# Revision 1.7  1996/07/16  16:21:56  io
# copymo assumes you are running in the target directory,
# alter it to make that assumption invalid,
# You can now pass -p SPARC/SunOS -p SPARC/Solaris arguments
#
@


1.7.4.1.1.1
log
@branched from 1.7.4.1
@
text
@a78 3
# Revision 1.7.4.1  1996/11/14  13:25:06  hope
# branched from 1.7
#
@


1.7.3.1
log
@branched from 1.7
@
text
@a78 5
# Revision 1.7  1996/07/16  16:21:56  io
# copymo assumes you are running in the target directory,
# alter it to make that assumption invalid,
# You can now pass -p SPARC/SunOS -p SPARC/Solaris arguments
#
@


1.7.2.1
log
@branched from 1.7
@
text
@a78 5
# Revision 1.7  1996/07/16  16:21:56  io
# copymo assumes you are running in the target directory,
# alter it to make that assumption invalid,
# You can now pass -p SPARC/SunOS -p SPARC/Solaris arguments
#
@


1.7.1.1
log
@branched from 1.7
@
text
@a78 5
# Revision 1.7  1996/07/16  16:21:56  io
# copymo assumes you are running in the target directory,
# alter it to make that assumption invalid,
# You can now pass -p SPARC/SunOS -p SPARC/Solaris arguments
#
@


1.6
log
@handle [selected|all] object paths via optional arguments
@
text
@d2 4
a5 9
# === COPY MO FILES FROM TREE TO TREE ===
#
# Copies mo files from one source tree to another.  An mo is only
# copies if there is a corresponding source file in the destination
# tree.

script=`basename $0`
scriptpath=`dirname $0`
usage="Usage: $script [-a| -p ARCH/OS] source-dir destination-dir"
d8 3
a10 3
ARCH_OS=
arch_os_dirs_file=$scriptpath/arch_os_dirs
tmpfile=/tmp/$script-$$
d17 4
d26 1
a26 1
    p) PHASE=1; ARCH_OS="$OPTARG";;
d31 9
a39 1
if [ $# -ne 2 -o ! -d $1 -o ! -d $2 ]; then
d43 2
d46 1
d50 2
a51 2
echo -n "$script: Finding sources... " 1>&2
FILE=`find . -name \*.sml -print | sed "s/^\.\///g" | sed "s/\.sml$//g"`
d55 1
a61 3
  if [ $PHASE -eq 0 ]; then
    echo $file.mo 
  fi
d66 1
a66 1
    sed -e '/^tar:.*No such file or directory$/ d
d79 3
@


1.5
log
@Fix bug 838
@
text
@d7 66
a73 1
# $Log: copymo,v $
a82 28
script=`basename $0`
usage="Usage: $script source-dir destination-dir"
if [ $# -ne 2 ] || [ ! -d $1 -o ! -d $2 ]
then
  echo $usage
  exit 1
fi
tmp=/tmp/copymo-$$
echo -n "$script: Finding sources... " 1>&2
(
 cd $2 &&
 find . -name '*.sml' -print |
   sed -e 's/\.sml$/.mo/' > $tmp-mos
)
echo "done." 1>&2
if /etc/mknod $tmp-pipe p
then
  {
    sed -e '/^tar:.*No such file or directory$/ d
            /^a / d
            s/\(^.*\)$/source: \1/' < $tmp-pipe
    rm $tmp-pipe
  } &
fi
(cd $1 && gnutar -c -v -f - -T $tmp-mos 2> $tmp-pipe
 rm $tmp-mos) |
(cd $2 && gnutar xvf - |
 sed -e "s!^x \./\([^,]*\).*\$!\1!")
@


1.4
log
@Rewrote this script to use tar instead of checking all the files
individually.  It makes use of the fact that tar doesn't really
mind if an input file doesn't exist.
@
text
@d9 5
d33 1
a33 1
if /usr/etc/mknod $tmp-pipe p
d42 1
a42 1
(cd $1 && tar cvf - -I $tmp-mos 2> $tmp-pipe
d44 1
a44 1
(cd $2 && tar xvf - |
@


1.4.1.1
log
@Fork for bug fixing
@
text
@a8 5
# Revision 1.4  1993/06/17  13:18:07  richard
# Rewrote this script to use tar instead of checking all the files
# individually.  It makes use of the fact that tar doesn't really
# mind if an input file doesn't exist.
#
@


1.3
log
@Added rm before cp -p so that permissions don't affect the
copy.
@
text
@d8 5
a12 1
# $Log$
d20 21
a40 14
for relative_mo in `(cd $1 && find . -name '*.mo' -print)`
do
  source_mo=$1/$relative_mo
  dest_mo=$2/$relative_mo
  relative_src=`dirname $relative_mo`/`basename $relative_mo .mo`.sml
  dest_src=$2/$relative_src
  if [ -f $dest_src ]
  then
    echo $relative_mo
    (rm -f $dest_mo && cp -p $source_mo $dest_mo) || echo "$script: WARNING: problems copying $source_mo"
  else
    echo "$script: No $dest_src, ignoring $relative_mo"
  fi
done
@


1.2
log
@Corrected the calculation of relative_src.
@
text
@d8 1
a8 1
# $log$
d25 1
a25 1
    cp -p $source_mo $dest_mo || echo "$script: WARNING: problems copying $1/$source_mo"
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
  relative_src=`basename $relative_mo .mo`.sml
@
