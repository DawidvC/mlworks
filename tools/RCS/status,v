head	1.22;
access;
symbols
	MLWorks_21c0_1999_03_25:1.22
	MLWorks_20c1_1998_08_20:1.18
	MLWorks_20c0_1998_08_04:1.18
	MLWorks_20b2c2_1998_06_19:1.18
	MLWorks_20b2_Windows_1998_06_12:1.18
	MLWorks_20b1c1_1998_05_07:1.18
	MLWorks_20b0_1998_04_07:1.18
	MLWorks_20b0_1998_03_20:1.18
	MLWorks_20m2_1998_02_16:1.18
	MLWorks_20m1_1997_10_23:1.18
	MLWorks_11r1:1.15.6.3.1.1.1
	MLWorks_11c0_1997_09_09:1.15.6.3.1.1
	MLWorks_10r3:1.15.6.3.3
	MLWorks_10r2_551:1.15.6.3.2
	MLWorks_11:1.15.6.3.1
	MLWorks_1_0_r2c2_1997_07_28:1.15.6.3
	MLWorks_20m0_1997_06_20:1.16
	MLWorks_1_0_r2c2_1997_06_14:1.15.6.2
	MLWorks_1_0_r2c1_released_1997_05_23:1.15.6.1
	MLWorks_1_0_r2c1_1997_05_12:1.15.6
	MLWorks_BugFix_1997_04_24:1.15
	MLWorks_1_0_r2_Win32_1997_04_11:1.15
	MLWorks_1_0_r2_Unix_1997_04_04:1.15
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.15.5.1.1
	MLWorks_1_0_Win32_1996_12_17:1.15.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.15.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.15.3.1
	MLWorks_1_0_Irix_1996_11_28:1.15.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.15.4
	MLWorks_1_0_Unix_1996_11_14:1.15.3
	MLWorks_Open_Beta2_1996_10_11:1.15.2
	MLWorks_License_dev:1.15.1
	MLWorks_1_open_beta_1996_09_13:1.12.1
	MLWorks_Open_Beta_1996_08_22:1.11
	MLWorks_Beta_1996_07_02:1.9
	MLWorks_Beta_1996_06_07:1.9
	MLWorks_Beta_1996_06_06:1.9
	MLWorks_Beta_1996_06_05:1.9
	MLWorks_Beta_1996_06_03:1.9
	MLWorks_Beta_1996_05_31:1.9
	MLWorks_Beta_1996_05_30:1.9
	ML_beta_release_12/08/94:1.5
	ML_beta_release_03/08/94:1.5
	ML_revised_beta_release_25/05/94:1.3
	ML_final_beta_release_02/03/94:1.1;
locks; strict;
comment	@# @;


1.22
date	99.03.24.15.38.36;	author daveb;	state Exp;
branches;
next	1.21;

1.21
date	98.10.07.12.46.15;	author jont;	state Exp;
branches;
next	1.20;

1.20
date	98.09.24.14.18.13;	author jont;	state Exp;
branches;
next	1.19;

1.19
date	98.08.25.14.45.41;	author jont;	state Exp;
branches;
next	1.18;

1.18
date	97.09.19.10.01.03;	author jont;	state Exp;
branches;
next	1.17;

1.17
date	97.07.08.12.30.07;	author jont;	state Exp;
branches;
next	1.16;

1.16
date	97.06.16.15.08.38;	author daveb;	state Exp;
branches;
next	1.15;

1.15
date	96.09.21.18.46.08;	author io;	state Exp;
branches
	1.15.1.1
	1.15.2.1
	1.15.3.1
	1.15.4.1
	1.15.5.1
	1.15.6.1;
next	1.14;

1.14
date	96.09.21.18.26.50;	author io;	state Exp;
branches;
next	1.13;

1.13
date	96.09.16.15.24.52;	author io;	state Exp;
branches;
next	1.12;

1.12
date	96.09.04.14.29.12;	author io;	state Exp;
branches
	1.12.1.1;
next	1.11;

1.11
date	96.08.15.16.13.12;	author io;	state Exp;
branches;
next	1.10;

1.10
date	96.07.12.10.37.59;	author io;	state Exp;
branches;
next	1.9;

1.9
date	95.02.28.12.48.56;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	95.02.23.17.21.49;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	95.02.21.15.47.10;	author brianm;	state Exp;
branches;
next	1.6;

1.6
date	94.08.18.12.52.51;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	94.06.22.11.13.09;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	94.06.14.14.39.53;	author nickh;	state Exp;
branches;
next	1.3;

1.3
date	94.04.05.11.00.00;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	94.03.08.11.39.21;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	94.03.02.13.11.52;	author daveb;	state Exp;
branches;
next	;

1.12.1.1
date	96.09.13.11.44.24;	author hope;	state Exp;
branches;
next	;

1.15.1.1
date	96.10.07.16.37.38;	author hope;	state Exp;
branches;
next	;

1.15.2.1
date	96.10.17.11.56.37;	author hope;	state Exp;
branches;
next	;

1.15.3.1
date	96.11.14.13.24.58;	author hope;	state Exp;
branches
	1.15.3.1.1.1;
next	;

1.15.3.1.1.1
date	96.11.28.15.35.56;	author hope;	state Exp;
branches;
next	;

1.15.4.1
date	96.11.22.18.42.03;	author hope;	state Exp;
branches;
next	;

1.15.5.1
date	96.12.17.18.21.03;	author hope;	state Exp;
branches
	1.15.5.1.1.1;
next	;

1.15.5.1.1.1
date	97.02.24.12.15.50;	author hope;	state Exp;
branches;
next	;

1.15.6.1
date	97.05.12.11.12.35;	author hope;	state Exp;
branches;
next	1.15.6.2;

1.15.6.2
date	97.06.04.16.48.46;	author daveb;	state Exp;
branches;
next	1.15.6.3;

1.15.6.3
date	97.06.16.15.21.04;	author daveb;	state Exp;
branches
	1.15.6.3.1.1
	1.15.6.3.2.1
	1.15.6.3.3.1;
next	;

1.15.6.3.1.1
date	97.07.28.18.54.32;	author daveb;	state Exp;
branches
	1.15.6.3.1.1.1.1;
next	;

1.15.6.3.1.1.1.1
date	97.10.07.12.19.22;	author jkbrook;	state Exp;
branches;
next	;

1.15.6.3.2.1
date	97.09.08.17.46.40;	author daveb;	state Exp;
branches;
next	;

1.15.6.3.3.1
date	97.09.09.14.45.52;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.22
log
@[Bug #190541]
Check both the OS and OSTYPE environment variables.
@
text
@#!/bin/sh
# Copyright (c) 1996 Harlequin Ltd.
script_name=`basename $0`
cmd="status"
STATUS=0
hide=""; test=""; verbose=""; format=""; claim=""; branch=""; pager="-page"; local=""; show="-show"; recursive="";
usage="usage: $script_name [-(c|v)] [-[zph]+] [-b <branch>] (file1|dir1)+"

while getopts "cb:zhvt" opt; do
  case $opt in
    z) recursive="-recursive";;
    b) branch="-b $OPTARG";;
    c) claim="-find-claims $USER";;
    v) verbose=1;;
    t) test="test";;
    h|\?) 
      echo $usage; 
      echo "    h for this help"
      echo "    c to get my claims"
      echo "    z zzz for recursive"
      echo "    v for verbosity"
      exit 1;;
  esac
done
shift `expr $OPTIND - 1`


: echo $script_name: checking arguments...
if [ $# -eq 0 ]; then
  echo "nothing to $script_name"
  echo $usage
  exit 1
else
  : echo ok
fi

: echo prime $entry

eval `findcomp2 $1`;
if [ -z "$compound" ]; then
  entry=;
  echo "cannot identify compound \"$1\""
  exit 1
elif [ -z "$unit" ]; then
  entry="-c $compound"
else
  entry="-c $compound -u $unit"
fi
shift

: echo stuff in the separators

for arg in $*; do
  eval `findcomp2 $arg`;
  if [ -z "$compound" ]; then
    echo "cannot identify compound \"$arg\""
    exit 1
  elif [ -z "$unit" ]; then
    entry="$entry -a -c $compound"
  else
    entry="$entry -a -c $compound -u $unit"
  fi
done

if [ "$TERM" = emacs ]; then
  pager="-not-page"
fi


if [ -n "$verbose" ]; then
  show="";
  hide="";
  format="";
else
  show="";
  hide="-hide attributes";
  format="";
fi

: echo final processing

if [ -z "$TMP" ]; then
  temp_dir=/tmp
else
  temp_dir=`echo $TMP | sed -e 's!\\\\!/!g'`
fi
temp_file=$temp_dir/hope_tmp$$

# We need to work out whether we're on Unix or Windows.
# NT sets the OS variable to Windows_NT.
# Some MLWorkers set the OS variable themselves.
# Failing that, bash sets the OSTYPE variable.
hope_temp_file=""
case "$OS" in
  Win*)
    hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
  NT*)
    hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
  Solaris*)
    hope_temp_file=$temp_file;;
  SunOS*)
    hope_temp_file=$temp_file;;
  Irix*)
    hope_temp_file=$temp_file;;
  Linux*)
    hope_temp_file=$temp_file;;
esac

if [ -z "$hope_temp_file" ]; then
  case "$OSTYPE" in
    Win*)
      hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
    Solaris*)
      hope_temp_file=$temp_file;;
    SunOS*)
      hope_temp_file=$temp_file;;
    linux*)
      hope_temp_file=$temp_file;;
    *)
      # Assume Unix if we have no other clue.
      # We could also get here on Win95, but we don't use that
      # for development.
      hope_temp_file=$temp_file;;
  esac
fi

if [ -z "$entry" ]; then
  echo skipped everything
else
  echo $test $cmd $pager $local $recursive $branch $format $show $claim $hide $entry > $temp_file
  hope source $hope_temp_file
  rm $temp_file
fi

###############################################################################
# $Log: status,v $
# Revision 1.21  1998/10/07  12:46:15  jont
# [Bug #70179]
# Avoid OSTYPE=linux problems
#
# Revision 1.20  1998/09/24  14:18:13  jont
# [Bug #70179]
# Make sure temp file name more carefully created to avoid drive letter problems
#
# Revision 1.19  1998/08/25  14:45:41  jont
# [Bug #70162]
# Use source files to get past hope 44 argument limit under Win32
#
# Revision 1.18  1997/09/19  10:01:03  jont
# [Bug #20089]
# Get rid of further instances of script_path
#
# Revision 1.17  1997/07/08  12:30:07  jont
# [Bug #20089]
# Don't use $script_path as this doesn't work under win32
#
# Revision 1.16  1997/06/16  15:08:38  daveb
# [Bug #30166]
# Removed one of the comma-separated arguments to -hide.
#
# Revision 1.15  1996/09/21  18:46:08  io
# update some options
#
# Revision 1.14  1996/09/21  18:26:50  io
# show branching/checkpoints
#
# Revision 1.13  1996/09/16  15:24:52  io
# update getopts for all claims
#
# Revision 1.12  1996/09/04  14:29:12  io
# branch argument not passed correctly and claims not showed on older units
#
# Revision 1.11  1996/08/15  16:13:12  io
# add verbosity flag
#
# Revision 1.10  1996/07/12  10:37:59  io
# [Bug #1463]
# add support for directories, better options for viewing claims, trees...
#
# Revision 1.9  1995/02/28  12:48:56  jont
# Modify use of version (deprecated) to branch
#
# Revision 1.8  1995/02/23  17:21:49  jont
# Modify for new file structure /u
#
# Revision 1.7  1995/02/21  15:47:10  brianm
# Introducing SML_HOME
#
# Revision 1.6  1994/08/18  12:52:51  daveb
# Added -not-page argument to hope call.
#
# Revision 1.5  1994/06/22  11:13:09  jont
# Add path setting code
#
# Revision 1.4  1994/06/14  14:39:53  nickh
# Better .compound finding.
#
# Revision 1.3  1994/04/05  11:00:00  daveb
# Now handles trailing / in arguments.
#
# Revision 1.2  1994/03/08  11:39:21  daveb
# Fixing handling of directory arguments.
@


1.21
log
@[Bug #70179]
Avoid OSTYPE=linux problems
@
text
@d88 37
a124 4
if [ -z "$OSTYPE" -o "$OSTYPE" = "linux" ]; then
  hope_temp_file=$temp_file
else
  hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`
d126 1
d137 4
@


1.20
log
@[Bug #70179]
Make sure temp file name more carefully created to avoid drive letter problems
@
text
@d88 1
a88 1
if [ -z "$OSTYPE" ]; then
d103 4
@


1.19
log
@[Bug #70162]
Use source files to get past hope 44 argument limit under Win32
@
text
@d82 11
a92 1
temp_file=/tmp/hope_tmp$$
d97 1
a97 1
  hope source $temp_file
d103 4
@


1.18
log
@[Bug #20089]
Get rid of further instances of script_path
@
text
@d15 1
a15 1
    t) test="echo";;
d82 1
d84 1
a84 1
  echo skipped everythin
d86 3
a88 1
  $test hope $cmd $pager $local $recursive $branch $format $show $claim $hide $entry
d93 4
@


1.17
log
@[Bug #20089]
Don't use $script_path as this doesn't work under win32
@
text
@a2 1
script_path=`dirname $0`
d54 1
a54 1
  eval `$script_path/findcomp2 $arg`;
d90 4
@


1.16
log
@[Bug #30166]
Removed one of the comma-separated arguments to -hide.
@
text
@d40 1
a40 1
eval `$script_path/findcomp2 $1`;
d91 4
@


1.15
log
@update some options
@
text
@d77 1
a77 1
  hide="-hide attributes,summary";
d91 3
@


1.15.6.1
log
@branched from 1.15
@
text
@a90 3
# Revision 1.15  1996/09/21  18:46:08  io
# update some options
#
@


1.15.6.2
log
@[Bug #30167]
@
text
@d3 1
d40 1
a40 1
eval `findcomp2 $1`;
d55 1
a55 1
  eval `findcomp2 $arg`;
a90 3
# Revision 1.15.6.1  1997/05/12  11:12:35  hope
# branched from 1.15
#
@


1.15.6.3
log
@[Bug #30166]
Removed one of the comma-separated arguments to -hide.
@
text
@d76 1
a76 1
  hide="-hide attributes";
a89 3
# Revision 1.15.6.2  1997/06/04  16:48:46  daveb
# [Bug #30167]
#
@


1.15.6.3.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a89 4
# Revision 1.15.6.3  1997/06/16  15:21:04  daveb
# [Bug #30166]
# Removed one of the comma-separated arguments to -hide.
#
@


1.15.6.3.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a89 4
# Revision 1.15.6.3  1997/06/16  15:21:04  daveb
# [Bug #30166]
# Removed one of the comma-separated arguments to -hide.
#
@


1.15.6.3.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a89 4
# Revision 1.15.6.3  1997/06/16  15:21:04  daveb
# [Bug #30166]
# Removed one of the comma-separated arguments to -hide.
#
@


1.15.6.3.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a89 3
# Revision 1.15.6.3.1.1  1997/07/28  18:54:32  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.15.5.1
log
@branched from 1.15
@
text
@a90 3
# Revision 1.15  1996/09/21  18:46:08  io
# update some options
#
@


1.15.5.1.1.1
log
@branched from 1.15.5.1
@
text
@a90 3
# Revision 1.15.5.1  1996/12/17  18:21:03  hope
# branched from 1.15
#
@


1.15.4.1
log
@branched from 1.15
@
text
@a90 3
# Revision 1.15  1996/09/21  18:46:08  io
# update some options
#
@


1.15.3.1
log
@branched from 1.15
@
text
@a90 3
# Revision 1.15  1996/09/21  18:46:08  io
# update some options
#
@


1.15.3.1.1.1
log
@branched from 1.15.3.1
@
text
@a90 3
# Revision 1.15.3.1  1996/11/14  13:24:58  hope
# branched from 1.15
#
@


1.15.2.1
log
@branched from 1.15
@
text
@a90 3
# Revision 1.15  1996/09/21  18:46:08  io
# update some options
#
@


1.15.1.1
log
@branched from 1.15
@
text
@a90 3
# Revision 1.15  1996/09/21  18:46:08  io
# update some options
#
@


1.14
log
@show branching/checkpoints
@
text
@d7 1
a7 1
hide=""; test=""; verbose=""; format=""; claim=""; branch=""; pager="-not-page"; local=""; show="-show"; recursive="";
d10 1
a10 1
while getopts "cb:zphvt" opt; do
a12 1
    p) pager="-page";;
a13 1
    l) local="-local";;
a21 1
      echo "    p to get pager"
d66 5
d91 3
@


1.13
log
@update getopts for all claims
@
text
@d7 2
a8 2
hide=""; test=""; verbose=""; format="-format brief"; claim="-my-claims"; branch=""; pager="-not-page"; local=""; show="-show"; recursive="";
usage="usage: $script_name [-[zpflhc]+] [-b <branch>] (file1|dir1)+"
d10 1
a10 1
while getopts "cb:zplfhvt" opt; do
a14 1
    f) format="-format tree";;
d16 1
a16 1
    c) claim="";;
d22 1
a22 3
      echo "    l for local enquiries"
      echo "    f to get a tree format"
      echo "    c to get all claims"
d75 1
a75 1
  hide="-hide parents,summary,attributes,branches,checkpoints";
d84 1
a84 1
  $test hope $cmd $pager $local $recursive $branch $format $show $claim -headers "" $hide $entry
d89 3
@


1.12
log
@branch argument not passed correctly and claims not showed on older units
@
text
@d10 1
a10 1
while getopts "b:zplfhvt" opt; do
d92 3
@


1.12.1.1
log
@branched from 1.12
@
text
@a91 3
# Revision 1.12  1996/09/04  14:29:12  io
# branch argument not passed correctly and claims not showed on older units
#
@


1.11
log
@add verbosity flag
@
text
@d7 1
a7 1
hide=""; test=""; verbose=""; format="-format brief"; my_claim=""; branch=""; pager="-not-page"; local=""; show=""; recursive="";
d10 1
a10 1
while getopts "zplfhcvt" opt; do
d14 1
a14 1
    b) branch="-branch $OPTARG";;
d17 1
a17 2
    c) show="-show";
       my_claim="-my-claims";;
d25 1
a26 1
      echo "    c to get list of claims"
d72 4
a75 6
if [ -n "$show" ]; then
  if [ -n "$verbose" ]; then
    show="$show claims"
  else
    show="$show units"
  fi
d77 3
a79 9
  if [ -n "$verbose" ]; then
    show="";
    hide="";
    format="";
  else
    show="";
    hide="-hide summary,attributes,branches,checkpoints";
    format="";
  fi
d87 1
a87 1
  $test hope $cmd $pager $local $recursive $branch $format $show $my_claim -headers "" $hide $entry
d92 3
@


1.10
log
@[Bug #1463]
add support for directories, better options for viewing claims, trees...
@
text
@d7 1
a7 1
branch=""; pager="-not-page"; local=""; show="-show"; show_claim=""; recursive="";
d10 1
a10 1
while getopts "zplfhc" opt; do
d17 4
a20 1
    c) show_claim="claims";;
d29 1
d73 6
a78 4
if [ -n "$show_claim" ]; then
  show="$show $show_claim"
elif [ "$show" = "-show" ]; then
  show=;
d80 9
a88 1
  echo $script_name: show failed
d96 1
a96 1
  hope $cmd $pager $local $recursive $branch $format $show $entry
d101 4
@


1.9
log
@Modify use of version (deprecated) to branch
@
text
@d2 84
d87 3
a109 58
#
# 
# Copyright Harlequin Ltd. 1991

SML_HOME=/u/sml; export SML_HOME
SML=$SML_HOME/MLW; export SML
PATH=$SML/tools:$SML/images:/usr/local/bin:$PATH; export PATH
usage="USAGE: status [-b <branch>] <File1> [<File2>...]"

script=`basename $0`
coopts=""
while getopts b: option
do
  case $option in
    b) coopts="$coopts -branch $OPTARG" ;;
    *) echo "$usage"; exit 1;;
  esac
done
shift `expr $OPTIND - 1`

if [ "$#" -lt 1 ]; then
    echo $usage
    exit
fi

for i in $*
do
  (if [ $i = '/' ]
   then
     echo $script: ignoring /
   else
     tmp=`expr match $i '\(.*[^/]\)'`
     base=`basename $tmp`
     if [ -d $base ]
     then
       # it's a directory; it might be a compound
       if [ -r $base/.compound ]
       then
         compound=`cat $base/.compound`
         hope status $coopts -compound $compound
       else
         echo $script: no .compound file in $i
       fi
     else
       # not a directory. Find the compound
       eval `findcomp $tmp`
       # defines $dir, $compound, $unit
       if [ -z "$compound" ]
       then
         echo $script failed : .compound file not found
       else
	 hope status -not-page $coopts -compound $compound -unit $unit
       fi
     fi
   fi)
done

exit
@


1.8
log
@Modify for new file structure /u
@
text
@d3 3
d30 1
a30 1
usage="USAGE: status [-v <rev>] <File1> [<File2>...]"
d34 1
a34 1
while getopts v: option
d37 1
a37 1
    v) coopts="$coopts -version $OPTARG" ;;
@


1.7
log
@Introducing SML_HOME
@
text
@d3 3
d24 1
a24 1
SML_HOME=/usr/sml; export SML_HOME
@


1.6
log
@Added -not-page argument to hope call.
@
text
@d3 3
d21 2
a22 1
SML=/usr/sml/MLW; export SML
@


1.5
log
@Add path setting code
@
text
@d3 3
d64 1
a64 1
	 hope status $coopts -compound $compound -unit $unit
@


1.4
log
@Better .compound finding.
@
text
@d3 3
d15 2
@


1.3
log
@Now handles trailing / in arguments.
@
text
@d3 3
a35 3
     dir=`dirname $i`
     cd $dir
     # strip trailing /
d40 1
d49 4
a52 1
       if [ -r .compound ]
d54 1
a54 2
         compound=`cat .compound`
         hope status $coopts -compound $compound -unit $base
d56 1
a56 1
         echo $script: no .compound file in $dir
@


1.2
log
@Fixing handling of directory arguments.
@
text
@d2 4
a5 1
# $Log$
d29 1
a29 4
  (dir=`dirname $i`
   cd $dir
   base=`basename $i`
   if [ -d $base ]
d31 1
a31 7
     if [ -r $base/.compound ]
     then
       compound=`cat $base/.compound`
       hope status $coopts -compound $compound
     else
       echo $script: no .compound file in $i
     fi
d33 6
a38 1
     if [ -r .compound ]
d40 7
a46 2
       compound=`cat .compound`
       hope status $coopts -compound $compound -unit $base
d48 7
a54 1
       echo $script: no .compound file in $dir
@


1.1
log
@new file
@
text
@d8 1
d28 2
a29 1
   if [ -r .compound ]
d31 1
a31 2
     compound=`cat .compound`
     if [ -d $i ]
d33 1
d36 1
a36 2
       unit=`basename $i`
       hope status $coopts -compound $compound -unit $unit
d39 7
a45 1
     echo $script: no .compound file in $dir
@
