head	1.12;
access;
symbols
	MLWorks_21c0_1999_03_25:1.12
	MLWorks_20c1_1998_08_20:1.8
	MLWorks_20c0_1998_08_04:1.8
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.8
	MLWorks_20b1c1_1998_05_07:1.8
	MLWorks_20b0_1998_04_07:1.8
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.7.4.2.1.1.1
	MLWorks_11c0_1997_09_09:1.7.4.2.1.1
	MLWorks_10r3:1.7.4.2.3
	MLWorks_10r2_551:1.7.4.2.2
	MLWorks_11:1.7.4.2.1
	MLWorks_1_0_r2c2_1997_07_28:1.7.4.2
	MLWorks_20m0_1997_06_20:1.8
	MLWorks_1_0_r2c2_1997_06_14:1.7.4.2
	MLWorks_1_0_r2c1_released_1997_05_23:1.7.4.1
	MLWorks_1_0_r2c1_1997_05_12:1.7.4
	MLWorks_BugFix_1997_04_24:1.8
	MLWorks_1_0_r2_Win32_1997_04_11:1.7
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.3.1.1
	MLWorks_1_0_Win32_1996_12_17:1.7.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.7.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.7.1.1
	MLWorks_1_0_Irix_1996_11_28:1.7.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.7.2
	MLWorks_1_0_Unix_1996_11_14:1.7.1
	MLWorks_Open_Beta2_1996_10_11:1.6.3
	MLWorks_License_dev:1.6.2
	MLWorks_1_open_beta_1996_09_13:1.6.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.5
	MLWorks_Beta_1996_06_07:1.5
	MLWorks_Beta_1996_06_06:1.5
	MLWorks_Beta_1996_06_05:1.5
	MLWorks_Beta_1996_06_03:1.5
	MLWorks_Beta_1996_05_31:1.5
	MLWorks_Beta_1996_05_30:1.5
	ML_beta_release_12/08/94:1.1
	ML_beta_release_03/08/94:1.1;
locks; strict;
comment	@# @;


1.12
date	99.03.24.15.38.27;	author daveb;	state Exp;
branches;
next	1.11;

1.11
date	98.10.07.12.46.07;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	98.09.24.14.33.17;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	98.08.25.14.44.50;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	97.04.15.12.01.44;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	96.10.23.14.43.54;	author jont;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1;
next	1.6;

1.6
date	96.07.12.12.17.47;	author io;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1;
next	1.5;

1.5
date	95.07.27.09.47.08;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	95.03.23.15.14.51;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	95.02.23.17.21.11;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	95.02.21.15.47.10;	author brianm;	state Exp;
branches;
next	1.1;

1.1
date	94.07.12.13.25.41;	author jont;	state Exp;
branches;
next	;

1.6.1.1
date	96.09.13.11.44.08;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.07.16.37.22;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.10.17.11.56.21;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	96.11.14.13.24.42;	author hope;	state Exp;
branches
	1.7.1.1.1.1;
next	;

1.7.1.1.1.1
date	96.11.28.15.35.41;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.11.22.18.41.48;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.12.17.18.20.47;	author hope;	state Exp;
branches
	1.7.3.1.1.1;
next	;

1.7.3.1.1.1
date	97.02.24.12.15.30;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	97.05.12.11.12.17;	author hope;	state Exp;
branches;
next	1.7.4.2;

1.7.4.2
date	97.06.04.16.48.28;	author daveb;	state Exp;
branches
	1.7.4.2.1.1
	1.7.4.2.2.1
	1.7.4.2.3.1;
next	;

1.7.4.2.1.1
date	97.07.28.18.55.03;	author daveb;	state Exp;
branches
	1.7.4.2.1.1.1.1;
next	;

1.7.4.2.1.1.1.1
date	97.10.07.12.19.51;	author jkbrook;	state Exp;
branches;
next	;

1.7.4.2.2.1
date	97.09.08.17.47.23;	author daveb;	state Exp;
branches;
next	;

1.7.4.2.3.1
date	97.09.09.14.46.36;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.12
log
@[Bug #190541]
Check both the OS and OSTYPE environment variables.
@
text
@#!/bin/sh
# Copyright (c) 1996 Harlequin Ltd.
script_name=`basename $0`
STATUS=0
cmd="remove"
bug_id="";test=""; reason="";tmp=""; tmp2="";rm_opts="";
usage="usage: $script_name [-[ht]+] [-i <bug-id>] [-r <reason>] [-b <branch>] (file1|dir1)+"
while getopts "i:r:b:tlh" opt; do
  case $opt in
    i) bug_id="-bug-number $OPTARG";;
    b) rm_opts="-branch $OPTARG";;
    r) reason="$OPTARG";;
    t) test="test";;
    h|\?) 
      echo $usage; 
      echo "    h for this help"
      echo "    i <bug-id>"
      echo "    r <claim reason>"
      echo "    t run in hope test mode"
      exit 1;;
  esac
done
shift `expr $OPTIND - 1`

: echo $script_name: checking arguments...
if [ $# -eq 0 ]; then
  echo "nothing to $script_name"
  echo $usage
  exit 1
else 
  : echo ok
fi

eval `findcomp2 $1`;
if [ -z "$compound" ]; then
  entry=;
  echo "cannot identify compound \"$1\""
  exit 1
elif [ -z "$unit" ]; then
  entry="-subcompound $compound"; tmp=$compound; tmp2="$tmp2 $tmp";
  eval `findcomp2 $1/..`;
  if [ -n "$compound" ]; then
    entry="$entry -c $compound";
  else
    echo "$script_name: cannot identify parent compound for subcompound $tmp"
    exit 1
  fi
else
  test -z "$test" -a -f "$1" && chmod ugo-w "$1"
  entry="-c $compound -u $unit"
fi
shift

for arg in $*; do
  eval `findcomp2 $arg`;
  if [ -z "$compound" ]; then
    echo "$script_name: cannot identify compound \"$arg\""
    exit 1
  elif [ -z "$unit" ]; then
    entry="$entry -a -subcompound $compound"; tmp=$compound; tmp2="$tmp2 $tmp";
    eval `findcomp2 $arg/..`;
    if [ -n "$compound" ]; then
      entry="$entry -c $compound"
    else
      echo "$script_name: cannot identify parent compound for subcompound \"$tmp\""
      exit 1
    fi
  else
    test -z "$test" -a -f "$arg" && chmod ugo-w "$arg"
    entry="$entry -a -c $compound -u $unit"
  fi
done

if [ -n "$tmp2" ]; then
  echo "Warning: will $cmd subcompounds:"
  echo "$tmp2"
  echo "waiting 10 seconds before continuing"
  sleep 15
fi

: echo final processing

if [ -z "$TMP" ]; then
  temp_dir=/tmp
else
  temp_dir=`echo $TMP | sed -e 's!\\\\!/!g'`
fi
temp_file=$temp_dir/hope_tmp$$

# We need to work out whether we're on Unix or Windows.
# NT sets the OS variable to Windows_NT.
# Some MLWorkers set the OS variable themselves.
# Failing that, bash sets the OSTYPE variable.
hope_temp_file=""
case "$OS" in
  Win*)
    hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
  NT*)
    hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
  Solaris*)
    hope_temp_file=$temp_file;;
  SunOS*)
    hope_temp_file=$temp_file;;
  Irix*)
    hope_temp_file=$temp_file;;
  Linux*)
    hope_temp_file=$temp_file;;
esac

if [ -z "$hope_temp_file" ]; then
  case "$OSTYPE" in
    Win*)
      hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
    Solaris*)
      hope_temp_file=$temp_file;;
    SunOS*)
      hope_temp_file=$temp_file;;
    linux*)
      hope_temp_file=$temp_file;;
    *)
      # Assume Unix if we have no other clue.
      # We could also get here on Win95, but we don't use that
      # for development.
      hope_temp_file=$temp_file;;
  esac
fi

if [ -z "$entry" ]; then
  echo skipped everything
elif [ -n "$reason" ]; then
  echo $test $cmd $rm_opts $bug_id -reason "$reason" $entry > $temp_file
  hope source $hope_temp_file
  rm $temp_file
else
  echo $test $cmd $rm_opts $bug_id $entry > $temp_file
  hope source $hope_temp_file
  rm $temp_file
fi

###############################################################################
# $Log: remove,v $
# Revision 1.11  1998/10/07  12:46:07  jont
# [Bug #70179]
# Avoid OSTYPE=linux problems
#
# Revision 1.10  1998/09/24  14:33:17  jont
# [Bug #70179]
# Make sure temp file name more carefully created to avoid drive letter problems
#
# Revision 1.9  1998/08/25  14:44:50  jont
# [Bug #70162]
# Use source files to get past hope 44 argument limit under Win32
#
# Revision 1.8  1997/04/15  12:01:44  jont
# Stop using script_path mechanism as this confuses Win32
#
# Revision 1.7  1996/10/23  14:43:54  jont
# [Bug #1669]
# Add -b option to specify branch
#
# Revision 1.6  1996/07/12  12:17:47  io
# [Bug #1463]
# support directories and bug-id
#
# Revision 1.5  1995/07/27  09:47:08  matthew
# Replacing -parent with -compound
#
# Revision 1.4  1995/03/23  15:14:51  daveb
# Removed code that set the comment leader.
#
# Revision 1.3  1995/02/23  17:21:11  jont
# Modify for new file structure /u
#
# Revision 1.2  1995/02/21  15:47:10  brianm
# Introducing SML_HOME
#
# Revision 1.1  1994/07/12  13:25:41  jont
# new file
@


1.11
log
@[Bug #70179]
Avoid OSTYPE=linux problems
@
text
@d89 37
a125 4
if [ -z "$OSTYPE" -o "$OSTYPE" = "linux" ]; then
  hope_temp_file=$temp_file
else
  hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`
d127 1
d142 4
@


1.10
log
@[Bug #70179]
Make sure temp file name more carefully created to avoid drive letter problems
@
text
@d89 1
a89 1
if [ -z "$OSTYPE" ]; then
d108 4
@


1.9
log
@[Bug #70162]
Use source files to get past hope 44 argument limit under Win32
@
text
@d83 11
a93 1
temp_file=/tmp/hope_tmp$$
d98 1
a98 1
  hope source $temp_file
d102 1
a102 1
  hope source $temp_file
d108 4
@


1.8
log
@Stop using script_path mechanism as this confuses Win32
@
text
@d83 1
d87 7
a93 3
  hope $test $cmd $rm_opts $bug_id -reason "$reason" $entry
else 
  hope $test $cmd $rm_opts $bug_id $entry
d98 3
@


1.7
log
@[Bug #1669]
Add -b option to specify branch
@
text
@a2 1
script_path=`dirname $0`
d34 1
a34 1
eval `$script_path/findcomp2 $1`;
d41 1
a41 1
  eval `$script_path/findcomp2 $1/..`;
d55 1
a55 1
  eval `$script_path/findcomp2 $arg`;
d61 1
a61 1
    eval `$script_path/findcomp2 $arg/..`;
d93 4
@


1.7.4.1
log
@branched from 1.7
@
text
@a93 4
# Revision 1.7  1996/10/23  14:43:54  jont
# [Bug #1669]
# Add -b option to specify branch
#
@


1.7.4.2
log
@[Bug #30167]
@
text
@d3 1
d35 1
a35 1
eval `findcomp2 $1`;
d42 1
a42 1
  eval `findcomp2 $1/..`;
d56 1
a56 1
  eval `findcomp2 $arg`;
d62 1
a62 1
    eval `findcomp2 $arg/..`;
a93 3
# Revision 1.7.4.1  1997/05/12  11:12:17  hope
# branched from 1.7
#
@


1.7.4.2.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a92 3
# Revision 1.7.4.2  1997/06/04  16:48:28  daveb
# [Bug #30167]
#
@


1.7.4.2.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a92 3
# Revision 1.7.4.2  1997/06/04  16:48:28  daveb
# [Bug #30167]
#
@


1.7.4.2.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a92 3
# Revision 1.7.4.2  1997/06/04  16:48:28  daveb
# [Bug #30167]
#
@


1.7.4.2.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a92 3
# Revision 1.7.4.2.1.1  1997/07/28  18:55:03  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.7.3.1
log
@branched from 1.7
@
text
@a93 4
# Revision 1.7  1996/10/23  14:43:54  jont
# [Bug #1669]
# Add -b option to specify branch
#
@


1.7.3.1.1.1
log
@branched from 1.7.3.1
@
text
@a93 3
# Revision 1.7.3.1  1996/12/17  18:20:47  hope
# branched from 1.7
#
@


1.7.2.1
log
@branched from 1.7
@
text
@a93 4
# Revision 1.7  1996/10/23  14:43:54  jont
# [Bug #1669]
# Add -b option to specify branch
#
@


1.7.1.1
log
@branched from 1.7
@
text
@a93 4
# Revision 1.7  1996/10/23  14:43:54  jont
# [Bug #1669]
# Add -b option to specify branch
#
@


1.7.1.1.1.1
log
@branched from 1.7.1.1
@
text
@a93 3
# Revision 1.7.1.1  1996/11/14  13:24:42  hope
# branched from 1.7
#
@


1.6
log
@[Bug #1463]
support directories and bug-id
@
text
@d7 3
a9 3
bug_id="";test=""; reason="";tmp=""; tmp2="";
usage="usage: $script_name [-[ht]+] [-i <bug-id>] [-r <reason>] (file1|dir1)+"
while getopts "i:r:tlh" opt; do
d12 1
d85 1
a85 1
  echo skipped everythin
d87 1
a87 1
  hope $test $cmd $bug_id -reason "$reason" $entry
d89 1
a89 1
  hope $test $cmd $bug_id $entry
d94 4
@


1.6.3.1
log
@branched from 1.6
@
text
@a92 4
# Revision 1.6  1996/07/12  12:17:47  io
# [Bug #1463]
# support directories and bug-id
#
@


1.6.2.1
log
@branched from 1.6
@
text
@a92 4
# Revision 1.6  1996/07/12  12:17:47  io
# [Bug #1463]
# support directories and bug-id
#
@


1.6.1.1
log
@branched from 1.6
@
text
@a92 4
# Revision 1.6  1996/07/12  12:17:47  io
# [Bug #1463]
# support directories and bug-id
#
@


1.5
log
@Replacing -parent with -compound
@
text
@d2 90
d93 3
a106 36
#
# Copyright (c) Harlequin Ltd. 1994

SML_HOME=/u/sml; export SML_HOME
SML=$SML_HOME/MLW; export SML
PATH=$SML/tools:$SML/images:/usr/local/bin:$PATH; export PATH
script=`basename $0`
usage="USAGE: $script <File1> [<File2>...]"

if [ "$#" -lt 1 ]; then
    echo $usage
    exit
fi

for i in $*
do
  (if [ $i = '/' ]
   then
     echo $script: ignoring /
   else
     # strip trailing /
     tmp=`expr match $i '\(.*[^/]\)'`
     eval `findcomp $tmp`
	# defines $dir, $compound, $unit
     if [ -z "$compound" ]
     then
       $script failed : .compound file not found
     else
       chmod ugo-w $tmp
       cd $dir
       hope remove -compound $compound -unit $unit
     fi
   fi)
done

exit
@


1.4
log
@Removed code that set the comment leader.
@
text
@d3 3
d44 1
a44 1
       hope remove -parent $compound -unit $unit
@


1.3
log
@Modify for new file structure /u
@
text
@d3 3
d18 1
a18 11
usage="USAGE: $script [-c <comment header>] <File1> [<File2>...]"

comment=""
while getopts c: option
do
  case $option in
    c) comment="$OPTARG" ;;
    *) echo "$usage"; exit 1;;
  esac
done
shift `expr $OPTIND - 1`
a41 4
       if [ ! -z ""$comment ] 
       then
         hope set -compound $compound -unit $unit comment "$comment"
       fi
@


1.2
log
@Introducing SML_HOME
@
text
@d3 3
d11 1
a11 1
SML_HOME=/usr/sml; export SML_HOME
@


1.1
log
@new file
@
text
@d2 4
a5 1
# $Log$
d8 2
a9 1
SML=/usr/sml/MLW; export SML
@
