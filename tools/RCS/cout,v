head	1.29;
access;
symbols
	MLWorks_21c0_1999_03_25:1.29
	MLWorks_20c1_1998_08_20:1.25
	MLWorks_20c0_1998_08_04:1.25
	MLWorks_20b2c2_1998_06_19:1.25
	MLWorks_20b2_Windows_1998_06_12:1.25
	MLWorks_20b1c1_1998_05_07:1.25
	MLWorks_20b0_1998_04_07:1.25
	MLWorks_20b0_1998_03_20:1.25
	MLWorks_20m2_1998_02_16:1.25
	MLWorks_20m1_1997_10_23:1.25
	MLWorks_11r1:1.24.4.2.1.1.1
	MLWorks_11c0_1997_09_09:1.24.4.2.1.1
	MLWorks_10r3:1.24.4.2.3
	MLWorks_10r2_551:1.24.4.2.2
	MLWorks_11:1.24.4.2.1
	MLWorks_1_0_r2c2_1997_07_28:1.24.4.2
	MLWorks_20m0_1997_06_20:1.25
	MLWorks_1_0_r2c2_1997_06_14:1.24.4.2
	MLWorks_1_0_r2c1_released_1997_05_23:1.24.4.1
	MLWorks_1_0_r2c1_1997_05_12:1.24.4
	MLWorks_BugFix_1997_04_24:1.25
	MLWorks_1_0_r2_Win32_1997_04_11:1.24
	MLWorks_1_0_r2_Unix_1997_04_04:1.24
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.24.3.1.1
	MLWorks_1_0_Win32_1996_12_17:1.24.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.24.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.24.1.1
	MLWorks_1_0_Irix_1996_11_28:1.24.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.24.2
	MLWorks_1_0_Unix_1996_11_14:1.24.1
	MLWorks_Open_Beta2_1996_10_11:1.23.3
	MLWorks_License_dev:1.23.2
	MLWorks_1_open_beta_1996_09_13:1.23.1
	MLWorks_Open_Beta_1996_08_22:1.21
	MLWorks_Beta_1996_07_02:1.19
	MLWorks_Beta_1996_06_07:1.19
	MLWorks_Beta_1996_06_06:1.19
	MLWorks_Beta_1996_06_05:1.19
	MLWorks_Beta_1996_06_03:1.19
	MLWorks_Beta_1996_05_31:1.19
	MLWorks_Beta_1996_05_30:1.19
	ML_beta_release_12/08/94:1.13
	ML_beta_release_03/08/94:1.13
	ML_revised_beta_release_25/05/94:1.10
	ML_final_beta_release_02/03/94:1.9
	mlworks-28-01-1994:1.7
	Release:1.7
	mlworks-beta-01-09-1993:1.7;
locks; strict;
comment	@# @;


1.29
date	99.03.24.15.31.21;	author daveb;	state Exp;
branches;
next	1.28;

1.28
date	98.10.07.12.42.39;	author jont;	state Exp;
branches;
next	1.27;

1.27
date	98.09.24.14.36.29;	author jont;	state Exp;
branches;
next	1.26;

1.26
date	98.08.25.14.43.55;	author jont;	state Exp;
branches;
next	1.25;

1.25
date	97.04.15.12.00.51;	author jont;	state Exp;
branches;
next	1.24;

1.24
date	96.10.18.14.03.05;	author io;	state Exp;
branches
	1.24.1.1
	1.24.2.1
	1.24.3.1
	1.24.4.1;
next	1.23;

1.23
date	96.09.11.10.28.33;	author io;	state Exp;
branches
	1.23.1.1
	1.23.2.1
	1.23.3.1;
next	1.22;

1.22
date	96.09.04.14.48.25;	author io;	state Exp;
branches;
next	1.21;

1.21
date	96.07.12.12.37.44;	author io;	state Exp;
branches;
next	1.20;

1.20
date	96.07.11.17.42.55;	author io;	state Exp;
branches;
next	1.19;

1.19
date	96.01.24.10.41.25;	author matthew;	state Exp;
branches;
next	1.18;

1.18
date	95.04.12.09.57.38;	author daveb;	state Exp;
branches;
next	1.17;

1.17
date	95.03.20.11.14.59;	author daveb;	state Exp;
branches;
next	1.16;

1.16
date	95.02.28.12.51.22;	author jont;	state Exp;
branches;
next	1.15;

1.15
date	95.02.23.17.19.13;	author jont;	state Exp;
branches;
next	1.14;

1.14
date	95.02.21.15.47.09;	author brianm;	state Exp;
branches;
next	1.13;

1.13
date	94.06.22.13.49.48;	author nickh;	state Exp;
branches;
next	1.12;

1.12
date	94.06.14.14.37.42;	author jont;	state Exp;
branches;
next	1.11;

1.11
date	94.06.09.15.34.48;	author nickh;	state Exp;
branches;
next	1.10;

1.10
date	94.04.05.11.22.11;	author daveb;	state Exp;
branches;
next	1.9;

1.9
date	94.03.02.12.42.22;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	94.02.03.17.04.24;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	93.01.15.14.53.40;	author richard;	state Exp;
branches
	1.7.1.1;
next	1.6;

1.6
date	91.12.24.09.38.37;	author richard;	state Exp;
branches;
next	1.5;

1.5
date	91.11.20.15.39.35;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	91.09.06.16.52.04;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	91.06.21.12.36.58;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	91.06.13.11.29.39;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	91.06.11.17.47.51;	author jont;	state Exp;
branches;
next	;

1.7.1.1
date	93.05.11.11.38.44;	author jont;	state Exp;
branches;
next	;

1.23.1.1
date	96.09.13.11.44.20;	author hope;	state Exp;
branches;
next	;

1.23.2.1
date	96.10.07.16.37.34;	author hope;	state Exp;
branches;
next	;

1.23.3.1
date	96.10.17.11.56.32;	author hope;	state Exp;
branches;
next	;

1.24.1.1
date	96.11.14.13.24.54;	author hope;	state Exp;
branches
	1.24.1.1.1.1;
next	;

1.24.1.1.1.1
date	96.11.28.15.35.52;	author hope;	state Exp;
branches;
next	;

1.24.2.1
date	96.11.22.18.41.59;	author hope;	state Exp;
branches;
next	;

1.24.3.1
date	96.12.17.18.20.58;	author hope;	state Exp;
branches
	1.24.3.1.1.1;
next	;

1.24.3.1.1.1
date	97.02.24.12.15.44;	author hope;	state Exp;
branches;
next	;

1.24.4.1
date	97.05.12.11.12.31;	author hope;	state Exp;
branches;
next	1.24.4.2;

1.24.4.2
date	97.06.04.16.48.09;	author daveb;	state Exp;
branches
	1.24.4.2.1.1
	1.24.4.2.2.1
	1.24.4.2.3.1;
next	;

1.24.4.2.1.1
date	97.07.28.18.55.16;	author daveb;	state Exp;
branches
	1.24.4.2.1.1.1.1;
next	;

1.24.4.2.1.1.1.1
date	97.10.07.12.20.03;	author jkbrook;	state Exp;
branches;
next	;

1.24.4.2.2.1
date	97.09.08.17.47.35;	author daveb;	state Exp;
branches;
next	;

1.24.4.2.3.1
date	97.09.09.14.46.55;	author daveb;	state Exp;
branches;
next	;


desc
@Check out preserving time stamp from rcs file contents
,.
@


1.29
log
@[Bug #190541]
Check both the OS and OSTYPE environment variables.
@
text
@#!/bin/sh
# Copyright (c) 1991 Harlequin Ltd.
script_name=`basename $0`
cmd="co"
STATUS=0
local="";reason="";bug_id="";test="";date="-ci-date";branch="";claim="";noisy="";item="";items="";tmp="";lastdir="";recursive="";
usage="usage: $script_name [-[zRtdh]+] [-(n|s|x)] [-b <branch>] [-r <reason>] [-i <bug-id>] <file>+"
while getopts "Rznlb:tr:xsi:dh" opt; do
  case $opt in
    l) local="-local";;
    n) noisy="-working-file skip -missing-dir create -extra-files delete";;
    b) branch="-branch $OPTARG";;
    t) test="test";;
    r) reason="$OPTARG";;
    x) claim="-claim hard";;
    s) claim="-claim soft";;
    i) bug_id="-bug-number $OPTARG";;
    d) date="";;
    z|R) recursive="-recursive";;
    h|\?)
      echo $usage; 
      echo "    h for this help"
      echo "    b <branch>"
      echo "    t run in hope test mode"
      echo "    l to run hope locally"
      echo "    r <claim reason>"
      echo "    i <bug-id>"
      echo "    s soft claim"
      echo "    x hard claim"
      echo "    z zzz... $cmd recursively on subcompounds"
      echo "    R same as z"
      echo "    n less dialogs from hope during unclaimed [recursive] checkouts only"
      echo "    d use current date"
      exit 1;;
  esac
done
shift `expr $OPTIND - 1`

: echo $script_name: checking arguments...
if [ "$#" -eq 0 ]; then
  echo "nothing to $script_name"
  echo $usage
  exit 1
elif [ -n "$claim" -a -z "$bug_id" ]; then
  echo "warning no bug-id given"
fi


items=""
lastdir=""
for i in $*
do
  if [ $i = '/' ]
   then
     echo $script_name: ignoring /
   else
     # strip trailing /
     tmp=`expr match $i '\(.*[^/]\)'`
     # find the compound
     eval `findcomp $tmp`
	# defines $dir, $compound, $unit
     if [ -z "$compound" ]
     then
       echo $script_name failed : .compound file not found
       exit 3
     elif [ ! -z "$lastdir" -a "$lastdir" != "$dir" ]
     then
       echo $script_name failed : incompatible root directories $dir and $lastdir
       exit 4
     else
       if [ "$unit" = "." ]
       then
         item="-compound $compound"
       else
         item="-compound $compound -unit $unit"
       fi
       if [ -z "$items" ]
       then
         items="$item"
       else
         items="$items -and $item"
       fi
     fi
     lastdir=$dir
   fi
done

cd $dir
if [ -z "$TMP" ]; then
  temp_dir=/tmp
else
  temp_dir=`echo $TMP | sed -e 's!\\\\!/!g'`
fi
temp_file=$temp_dir/hope_tmp$$

# We need to work out whether we're on Unix or Windows.
# NT sets the OS variable to Windows_NT.
# Some MLWorkers set the OS variable themselves.
# Failing that, bash sets the OSTYPE variable.
hope_temp_file=""
case "$OS" in
  Win*)
    hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
  NT*)
    hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
  Solaris*)
    hope_temp_file=$temp_file;;
  SunOS*)
    hope_temp_file=$temp_file;;
  Irix*)
    hope_temp_file=$temp_file;;
  Linux*)
    hope_temp_file=$temp_file;;
esac

if [ -z "$hope_temp_file" ]; then
  case "$OSTYPE" in
    Win*)
      hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`;;
    Solaris*)
      hope_temp_file=$temp_file;;
    SunOS*)
      hope_temp_file=$temp_file;;
    linux*)
      hope_temp_file=$temp_file;;
    *)
      # Assume Unix if we have no other clue.
      # We could also get here on Win95, but we don't use that
      # for development.
      hope_temp_file=$temp_file;;
  esac
fi

if [ -z "$items" ]; then
  echo skipped everything
elif [ -z "$claim" ]; then # no claims
  echo $test $cmd $local $date $recursive $bug_id $branch $noisy $items > $temp_file
  hope source $hope_temp_file
  rm $temp_file
elif [ -n "$reason" ]; then # reason exists
  echo $test $cmd $local $date $recursive $bug_id -reason "$reason" $branch $noisy $claim $items > $temp_file
  hope source $hope_temp_file
  rm $temp_file
else
  echo $test $cmd $local $date $recursive $bug_id $branch $claim $items > $temp_file
  hope source $hope_temp_file
  rm $temp_file
fi

###############################################################################
# $Log: cout,v $
# Revision 1.28  1998/10/07  12:42:39  jont
# [Bug #70179]
# Avoid OSTYPE=linux problems
#
# Revision 1.27  1998/09/24  14:36:29  jont
# [Bug #70179]
# Make sure temp file name more carefully created to avoid drive letter problems
#
# Revision 1.26  1998/08/25  14:43:55  jont
# [Bug #70162]
# Use source files to get past hope 44 argument limit under Win32
#
# Revision 1.25  1997/04/15  12:00:51  jont
# Stop using script_path mechanism as this confuses Win32
#
# Revision 1.24  1996/10/18  14:03:05  io
# [Bug #1671]
# add back recursive option
#
# Revision 1.23  1996/09/11  10:28:33  io
# forgot to put in \$claim in the argument
#
# Revision 1.22  1996/09/04  14:48:25  io
# use of "-filename" in cin/cout scripts is causing an interaction
# with hope such that different .version files could contain
# the same units. I will restore to the old mechanism and lose
# the ability to handle compounds
#
# Revision 1.21  1996/07/12  12:37:44  io
# [Bug #1463]
# typo in help
#
# Revision 1.20  1996/07/11  17:42:55  io
# [Bug #1463]
# add support for directories and bug-ids,
# changes in options for:
# hard claims via "-x"
# recursive via "-z"
# current date via "-d"
# see "-h" for other options
#
# Revision 1.19  1996/01/24  10:41:25  matthew
# Adding option -n for use current date (n for now)
#
# Revision 1.18  1995/04/12  09:57:38  daveb
# Added -r (recursive) option.
#
# Revision 1.17  1995/03/20  11:14:59  daveb
# Changed this script drastically to take advantage of the greater speed
# offered by passing all arguments to hope at once.
#
# Revision 1.16  1995/02/28  12:51:22  jont
# Modify use of version (deprecated) to branch
#
# Revision 1.15  1995/02/23  17:19:13  jont
# Modify for new file structure /u
#
# Revision 1.14  1995/02/21  15:47:09  brianm
# Introducing SML_HOME
#
# Revision 1.13  1994/06/22  13:49:48  nickh
# New hope switches.
#
# Revision 1.12  1994/06/14  14:37:42  jont
# Add path setting code
#
# Revision 1.11  1994/06/09  15:34:48  nickh
# Better .compound awareness.
#
# Revision 1.10  1994/04/05  11:22:11  daveb
# Now handles trailing / in arguments.
#
# Revision 1.9  1994/03/02  12:42:22  daveb
# Revamping to take file names as arguments.
#
# Revision 1.8  1994/02/03  17:04:24  daveb
# Converted to hope.
#
# Revision 1.7  1993/01/15  14:53:40  richard
# Added -d option and corrected option passing.
#
# Revision 1.6  1991/12/24  09:38:37  richard
# Updated to use RCS 5.6 commands.  Much better!
#
# Revision 1.5  1991/11/20  15:39:35  jont
# Changed to use cat RCS/<file>,v rather than rlog file. Faster and simpler
#
# Revision 1.4  91/09/06  16:52:04  jont
# Added whoami to name constructed for /tmp to avoid conflicts
# 
# Revision 1.3  91/06/21  12:36:58  jont
# Changed to use program for writing time stamp in order to preserve
# second accuracy
# 
# Revision 1.2  91/06/13  11:29:39  jont
# Tidied up a bit
@


1.28
log
@[Bug #70179]
Avoid OSTYPE=linux problems
@
text
@d95 37
a131 4
if [ -z "$OSTYPE" -o "$OSTYPE" = "linux" ]; then
  hope_temp_file=$temp_file
else
  hope_temp_file=`echo $temp_file | sed -e 's!/!\\\\!g'`
d133 1
d152 4
@


1.27
log
@[Bug #70179]
Make sure temp file name more carefully created to avoid drive letter problems
@
text
@d95 1
a95 1
if [ -z "$OSTYPE" ]; then
d118 4
@


1.26
log
@[Bug #70162]
Use source files to get past hope 44 argument limit under Win32
@
text
@d89 11
a99 1
temp_file=/tmp/hope_tmp$$
d104 1
a104 1
  hope source $temp_file
d108 1
a108 1
  hope source $temp_file
d112 1
a112 1
  hope source $temp_file
d118 4
a205 1

@


1.25
log
@Stop using script_path mechanism as this confuses Win32
@
text
@d89 1
d91 1
a91 1
  echo skipped everythin
d93 3
a95 1
  hope $test $cmd $local $date $recursive $bug_id $branch $noisy $items
d97 3
a99 1
  hope $test $cmd $local $date $recursive $bug_id -reason "$reason" $branch $noisy $claim $items
d101 3
a103 1
  hope $test $cmd $local $date $recursive $bug_id $branch $claim $items
d108 3
@


1.24
log
@[Bug #1671]
add back recursive option
@
text
@a2 1
script_path=`dirname $0`
d60 1
a60 1
     eval `$script_path/findcomp $tmp`
d101 4
@


1.24.4.1
log
@branched from 1.24
@
text
@a101 4
# Revision 1.24  1996/10/18  14:03:05  io
# [Bug #1671]
# add back recursive option
#
@


1.24.4.2
log
@[Bug #30167]
@
text
@d3 1
d61 1
a61 1
     eval `findcomp $tmp`
a101 3
# Revision 1.24.4.1  1997/05/12  11:12:31  hope
# branched from 1.24
#
@


1.24.4.2.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a100 3
# Revision 1.24.4.2  1997/06/04  16:48:09  daveb
# [Bug #30167]
#
@


1.24.4.2.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a100 3
# Revision 1.24.4.2  1997/06/04  16:48:09  daveb
# [Bug #30167]
#
@


1.24.4.2.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a100 3
# Revision 1.24.4.2  1997/06/04  16:48:09  daveb
# [Bug #30167]
#
@


1.24.4.2.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a100 3
# Revision 1.24.4.2.1.1  1997/07/28  18:55:16  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.24.3.1
log
@branched from 1.24
@
text
@a101 4
# Revision 1.24  1996/10/18  14:03:05  io
# [Bug #1671]
# add back recursive option
#
@


1.24.3.1.1.1
log
@branched from 1.24.3.1
@
text
@a101 3
# Revision 1.24.3.1  1996/12/17  18:20:58  hope
# branched from 1.24
#
@


1.24.2.1
log
@branched from 1.24
@
text
@a101 4
# Revision 1.24  1996/10/18  14:03:05  io
# [Bug #1671]
# add back recursive option
#
@


1.24.1.1
log
@branched from 1.24
@
text
@a101 4
# Revision 1.24  1996/10/18  14:03:05  io
# [Bug #1671]
# add back recursive option
#
@


1.24.1.1.1.1
log
@branched from 1.24.1.1
@
text
@a101 3
# Revision 1.24.1.1  1996/11/14  13:24:54  hope
# branched from 1.24
#
@


1.23
log
@forgot to put in \$claim in the argument
@
text
@d7 3
a9 3
local="";reason="";bug_id="";test="";date="-ci-date";branch="";claim="";noisy="";item="";items="";tmp="";lastdir="";
usage="usage: $script_name [-[ztdh]+] [-(n|s|x)] [-b <branch>] [-r <reason>] [-i <bug-id>] <file>+"
while getopts "lb:tr:xsi:dh" opt; do
d20 1
d31 3
a33 1
      : echo "    n less dialogs from hope during unclaimed checkouts only"
d93 1
a93 1
  hope $test $cmd $local $date $bug_id $branch $noisy $items
d95 1
a95 1
  hope $test $cmd $local $date $bug_id -reason "$reason" $branch $noisy $claim $items
d97 1
a97 1
  hope $test $cmd $local $date $bug_id $branch $claim $items
d102 3
@


1.23.3.1
log
@branched from 1.23
@
text
@a98 3
# Revision 1.23  1996/09/11  10:28:33  io
# forgot to put in \$claim in the argument
#
@


1.23.2.1
log
@branched from 1.23
@
text
@a98 3
# Revision 1.23  1996/09/11  10:28:33  io
# forgot to put in \$claim in the argument
#
@


1.23.1.1
log
@branched from 1.23
@
text
@a98 3
# Revision 1.23  1996/09/11  10:28:33  io
# forgot to put in \$claim in the argument
#
@


1.22
log
@use of "-filename" in cin/cout scripts is causing an interaction
with hope such that different .version files could contain
the same units. I will restore to the old mechanism and lose
the ability to handle compounds
@
text
@d92 1
a92 1
  hope $test $cmd $local $date $bug_id -reason "$reason" $branch $noisy $items
d99 6
@


1.21
log
@[Bug #1463]
typo in help
@
text
@d2 1
a2 1
# Copyright (c) 1996 Harlequin Ltd.
d7 3
a9 3
local="";reason="";bug_id="";test="";date="-ci-date";branch=;claim=; recursive=;noisy="";entry="";
usage="usage: $script_name [-[ztdh]+] [-(n|s|x)] [-b <branch>] [-r <reason>] [-i <bug-id>] (file|dir)+"
while getopts "lznb:tr:xsi:dh" opt; do
a11 1
    z) recursive="-recursive";;
d13 1
a13 1
    b) branch="$branch -branch $OPTARG";;
d19 2
a20 2
    d) date=;;
    h|\?) 
a25 1
      echo "    z zzz... checkout recursively on subcompounds"
d30 1
a30 1
      echo "    n less dialogs from hope during unclaimed checkouts only"
a36 1

d38 1
a38 1
if [ $# -eq 0 ]; then
a45 1
: echo prime $entry
d47 37
a83 24
eval `$script_path/findcomp2 $1`;
if [ -z "$compound" ]; then
  entry=; 
  echo "cannot identify compound \"$1\""
  exit 1
elif [ -z "$unit" ]; then
  entry="-c $compound -fn $1"
else
  entry="-c $compound -u $unit -fn $1"
fi
shift

: echo stuff in the separators

for arg in $*; do
  eval `$script_path/findcomp2 $arg`; 
  if [ -z "$compound" ]; then
    echo "cannot identify compound \"$arg\""
    exit 1
  elif [ -z "$unit" ]; then
    entry="$entry -a -c $compound -fn $arg"
  else
    entry="$entry -a -c $compound -u $unit -fn $arg"
  fi
d86 3
a88 4
: echo final processing

if [ -z "$entry" ]; then
  echo skipped everthin
d90 1
a90 1
  hope $test $cmd $local $date $bug_id                   $branch $recursive $noisy $entry
d92 1
a92 1
  hope $test $cmd $local $date $bug_id -reason "$reason" $branch $claim $recursive $entry
d94 1
a94 1
  hope $test $cmd $local $date $bug_id                   $branch $claim $recursive $entry
d99 4
@


1.20
log
@[Bug #1463]
add support for directories and bug-ids,
changes in options for:
hard claims via "-x"
recursive via "-z"
current date via "-d"
see "-h" for other options
@
text
@d13 1
a13 1
    n) noisy="-working-file skip";;
d32 1
a32 1
      echo "    n oisy dialogs from hope for unclaimed checkouts only"
d91 9
@


1.19
log
@Adding option -n for use current date (n for now)
@
text
@d2 88
d91 3
a145 70
# 
# Copyright (c) 1991 Harlequin Ltd.

SML_HOME=/u/sml; export SML_HOME
SML=$SML_HOME/MLW; export SML
PATH=$SML/tools:$SML/images:/usr/local/bin:$PATH; export PATH
script=`basename $0`
usage="USAGE: $script [-s] [-h] [-r] [-n] [-b <branch>] [-d <date>] <File1> [<File2>...]"

coopts=""
dateopts="-ci-date"
while getopts shrnb:d: option
do
  case $option in
    b) coopts="$coopts -branch $OPTARG";;
    d) coopts="$coopts -date $OPTARG";;
    s) coopts="$coopts -claim soft";;
    h) coopts="$coopts -claim hard";;
    r) coopts="$coopts -recursive";;
    n) dateopts="";;
    *) echo "$usage"; exit 1;;
  esac
done
shift `expr $OPTIND - 1`

if [ "$#" -lt 1 ]; then
    echo "$usage"; exit 2
fi

items=""
lastdir=""
for i in $*
do
  if [ $i = '/' ]
   then
     echo $script: ignoring /
   else
     # strip trailing /
     tmp=`expr match $i '\(.*[^/]\)'`
     # find the compound
     eval `findcomp $tmp`
	# defines $dir, $compound, $unit
     if [ -z "$compound" ]
     then
       echo $script failed : .compound file not found
       exit 3
     elif [ ! -z "$lastdir" -a "$lastdir" != "$dir" ]
     then
       echo $script failed : incompatible root directories $dir and $lastdir
       exit 4
     else
       if [ "$unit" = "." ]
       then
         item="-compound $compound"
       else
         item="-compound $compound -unit $unit"
       fi
       if [ -z "$items" ]
       then
         items="$item"
       else
         items="$items -and $item"
       fi
     fi
     lastdir=$dir
   fi
done

cd $dir
hope co $dateopts $coopts -missing-dir abort $items
a146 1
exit
@


1.18
log
@Added -r (recursive) option.
@
text
@d3 3
d62 1
a62 1
usage="USAGE: $script [-s] [-h] [-r] [-b <branch>] [-d <date>] <File1> [<File2>...]"
d65 2
a66 1
while getopts shrb:d: option
d74 1
d124 1
a124 1
hope co -ci-date $coopts -missing-dir abort $items
@


1.17
log
@Changed this script drastically to take advantage of the greater speed
offered by passing all arguments to hope at once.
@
text
@d3 4
d59 1
a59 1
usage="USAGE: $script [-s] [-h] [-b <branch>] [-d <date>] <File1> [<File2>...]"
d62 1
a62 1
while getopts shb:d: option
d69 1
a99 3
     elif [ -z "$items" ]
     then
       items="-compound $compound -unit $unit"
d101 12
a112 1
       items="$items -and -compound $compound -unit $unit"
@


1.16
log
@Modify use of version (deprecated) to branch
@
text
@d3 3
d71 1
a71 1
    echo "$usage"; exit 1
d74 2
d78 1
a78 1
  (if [ $i = '/' ]
d90 8
d99 1
a99 2
       cd $dir
       hope co -ci-date $coopts -missing-dir abort -compound $compound -unit $unit
d101 2
a102 1
   fi)
d105 2
@


1.15
log
@Modify for new file structure /u
@
text
@d3 3
d52 1
a52 1
usage="USAGE: $script [-s] [-h] [-v <rev>] [-d <date>] <File1> [<File2>...]"
d55 1
a55 1
while getopts shv:d: option
d58 1
a58 1
    v) coopts="$coopts -version $OPTARG";;
@


1.14
log
@Introducing SML_HOME
@
text
@d3 3
d45 1
a45 1
SML_HOME=/usr/sml; export SML_HOME
@


1.13
log
@New hope switches.
@
text
@d3 3
d42 2
a43 2

SML=/usr/sml/MLW; export SML
@


1.12
log
@Add path setting code
@
text
@d3 3
d78 1
a78 1
       hope co -ci-date $coopts -compound $compound -unit $unit
@


1.11
log
@Better .compound awareness.
@
text
@d3 3
d37 2
@


1.10
log
@Now handles trailing / in arguments.
@
text
@d3 3
d62 4
a65 4
     unit=`basename $tmp`
     dir=`dirname $i`
     cd $dir
     if [ -r .compound ]
d67 3
a69 1
       compound=`cat .compound`
a70 2
     else
       echo $script: no .compound file in $dir
@


1.9
log
@Revamping to take file names as arguments.
@
text
@d3 3
d53 1
a53 4
  (unit=`basename $i`
   dir=`dirname $i`
   cd $dir
   if [ -r .compound ]
d55 1
a55 2
     compound=`cat .compound`
     hope co -ci-date $coopts -compound $compound -unit $unit
d57 12
a68 1
     echo $script: no .compound file in $dir
@


1.8
log
@Converted to hope.
@
text
@d3 3
d29 1
a29 1
usage="USAGE: $script [-s] [-h] [-v <rev>] [-d <date>] <Compound> <Unit1> [<Unit2>...]"
d44 1
a44 1
if [ "$#" -lt 2 ]; then
d48 12
a59 10
compound=$1
shift

allunits=$1
shift

units=$*

for unit in $units; do
    allunits="$allunits -and $unit"
a61 1
hope co -ci-date $coopts -compound $compound -unit $allunits
@


1.7
log
@Added -d option and corrected option passing.
@
text
@d3 3
d23 2
d26 2
a27 1
usage="Usage: $script [ -r revision-name -d date -l ]"
d29 1
a29 1
while getopts r:d:l option
d32 4
a35 3
    r) coopts="$coopts -r'$OPTARG'";;
    d) coopts="$coopts -d'$OPTARG'";;
    l) coopts="$coopts -l";;
d40 3
a42 3
if expr $# \> 0 > /dev/null
then
  eval "exec co -q -M $coopts $*"
d44 16
a59 2
echo "$usage"
exit 1
@


1.7.1.1
log
@Fork for bug fixing
@
text
@a2 3
# Revision 1.7  1993/01/15  14:53:40  richard
# Added -d option and corrected option passing.
#
@


1.6
log
@Updated to use RCS 5.6 commands.  Much better!
@
text
@d1 1
a1 1
#!/bin/csh
d3 3
d20 19
a38 1
co -q -M $*
@


1.5
log
@Changed to use cat RCS/<file>,v rather than rlog file. Faster and simpler
@
text
@d2 4
a5 1
# $Log:	cout,v $
d17 1
a17 26
if ($#argv != 1) then
  echo Usage: cout \<filename\>
  exit(1)
endif
set me = `whoami`
set arg = `echo $argv[1]:t | sed -e 's/,v//'`
set tmpfile = /tmp/.cout$arg$me
#echo tempfile = $tmpfile
cat << EOF > $tmpfile
/^date/{
s/^date *//
s/;.*\$//
q
}
d
EOF
if (-w $arg) then
  echo Writable $arg exists, checkout aborted
else
  set rcsarg = RCS/$arg,v
#  echo rcsarg = $rcsarg
#  echo time = `sed -f $tmpfile < $rcsarg`
  co -q $arg && \
  ~sml/tools/writetime $arg "`sed -f $tmpfile < $rcsarg`"
endif
/bin/rm -f $tmpfile
@


1.4
log
@Added whoami to name constructed for /tmp to avoid conflicts
@
text
@d3 3
d24 1
a24 1
s/^date: //
d33 3
a35 1
#  echo time = `rlog $arg | sed -f $tmpfile`
d37 1
a37 1
  ~sml/tools/writetime $arg "`rlog $arg | sed -f $tmpfile`"
@


1.3
log
@Changed to use program for writing time stamp in order to preserve
second accuracy
@
text
@d3 4
d15 1
d17 2
a18 1
set tmpfile = /tmp/.cout$arg
a34 1

@


1.2
log
@Tidied up a bit
@
text
@d2 4
a5 1
# $Log$
a16 5
s/ //
s/://
s/:..//
s/\///g
s/\([0-9][0-9]\)\(.*\)\$/\2\1/
d24 3
a26 3
  echo co $arg
  co $arg && \
  /usr/5bin/touch `rlog $arg | sed -f $tmpfile` $arg
d29 1
@


1.1
log
@Initial revision
@
text
@d2 2
a9 1
co -u $arg && \
d11 2
a12 2
/date/{
s/date: //
d23 8
a30 2
/usr/5bin/touch `rlog $arg | sed -f $tmpfile` $arg
rm -f $tmpfile
@
