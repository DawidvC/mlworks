head	1.8;
access;
symbols
	MLWorks_21c0_1999_03_25:1.8
	MLWorks_20c1_1998_08_20:1.7
	MLWorks_20c0_1998_08_04:1.7
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.2;
locks; strict;
comment	@ *  @;


1.8
date	98.08.20.15.32.36;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	98.07.31.09.33.08;	author johnh;	state Exp;
branches;
next	1.6;

1.6
date	98.07.30.09.18.16;	author johnh;	state Exp;
branches;
next	1.5;

1.5
date	98.07.14.12.31.49;	author johnh;	state Exp;
branches;
next	1.4;

1.4
date	98.06.15.13.09.53;	author mitchell;	state Exp;
branches;
next	1.3;

1.3
date	98.06.04.09.29.59;	author johnh;	state Exp;
branches;
next	1.2;

1.2
date	98.05.01.14.56.40;	author mitchell;	state Exp;
branches;
next	1.1;

1.1
date	98.05.01.13.31.04;	author mitchell;	state Exp;
branches;
next	;


desc
@new unit
[Bug #50071]
Test for Shell.Project structure
@


1.8
log
@[Bug #20112]
Apply OS.Path.toUnixPath to results of Shell.Project.showFiles()
@
text
@(*  ==== Testing ====
 *
    Result: OK
 *
 *  Copyright (C) 1998 Harlequin Ltd.
 *  
 * $Log: project.sml,v $
 *  Revision 1.7  1998/07/31  09:33:08  johnh
 *  [Bug #30453]
 *  map OS.Path.fromUnixPath over files list.
 *
 *  Revision 1.6  1998/07/30  09:18:16  johnh
 *  [Bug #30453]
 *   Targets must be specified in total list of files.
 *
 *  Revision 1.5  1998/07/14  12:31:49  johnh
 *  [Bug #30417]
 *  Shell.Project.saveProject now takes unit - use Shell.Project.saveProjectAs.
 *
 *  Revision 1.4  1998/06/15  13:09:53  mitchell
 *  [Bug #30422]
 *  newProject now requires a directory
 *
 *  Revision 1.3  1998/06/04  09:29:59  johnh
 *  [Bug #30369]
 *  Replacing source path with a list of files.
 *
 *  Revision 1.2  1998/05/01  14:56:40  mitchell
 *  Automatic checkin:
 *  changed attribute _comment to ' *  '
 *
 *
 *)

let open Shell.Project in 
  newProject (OS.Path.fromUnixPath "/tmp");
  setModeDetails("SubMode",
    {location = "location",
     generate_interruptable_code = false,
     generate_interceptable_code = true,
     generate_debug_info = false,
     generate_variable_debug_info = true,
     optimize_leaf_fns = false,
     optimize_tail_calls = true,
     optimize_self_tail_calls = false,
     mips_r4000 = true, 
     sparc_v7 = false});
  setMode "SubMode";
  saveProjectAs (OS.Path.fromUnixPath "/tmp/subproject.mlp")
end;

let open Shell.Project in
  newProject (OS.Path.fromUnixPath "/tmp");
  setAboutInfo {description="Dummy project", version="V1"}; 
  setConfigurationDetails ("Config", {library=["library"], files=["files"]});
  setConfigurationDetails ("RConfig", {library=["rlibrary"], files=["rfiles"]});
  setConfiguration "Config";
  removeConfiguration "RConfig";
  setLocations {binariesLoc = "binariesLoc", libraryPath = ["path1", "path2"],
                objectsLoc = "objectsLoc"};
  setModeDetails("Mode",
    {location = "location",
     generate_interruptable_code = true,
     generate_interceptable_code = false,
     generate_debug_info = true,
     generate_variable_debug_info = false,
     optimize_leaf_fns = true,
     optimize_tail_calls = false,
     optimize_self_tail_calls = true,
     mips_r4000 = false, 
     sparc_v7 = true});
  setModeDetails("RMode",
    {location = "rlocation",
     generate_interruptable_code = false,
     generate_interceptable_code = true,
     generate_debug_info = false,
     generate_variable_debug_info = true,
     optimize_leaf_fns = false,
     optimize_tail_calls = true,
     optimize_self_tail_calls = false,
     mips_r4000 = true, 
     sparc_v7 = false});
  setMode "Mode";
  removeMode "RMode";
  setFiles (map OS.Path.fromUnixPath ["file1.sml", "sub_dir/file2.sml", "sub_dir2/file3.sml", 
	    "sub_dir/sub_sub_dir/file4.sml"]);
  setSubprojects ["subproject.mlp"];
  setTargetDetails "file2.sml";  setTargetDetails "file3.sml"; setTargetDetails "file4.sml";
  setTargets ["file2.sml"]; 
  saveProjectAs (OS.Path.fromUnixPath "test_project.mlp")
end;

Shell.Project.newProject (OS.Path.fromUnixPath "/tmp");
Shell.Project.openProject(OS.Path.fromUnixPath "/tmp/test_project.mlp");
Shell.Project.showAboutInfo();  
Shell.Project.showAllConfigurations();  
Shell.Project.showCurrentConfiguration();  
Shell.Project.showConfigurationDetails "Config";  
Shell.Project.showLocations();  
Shell.Project.showAllModes();  
Shell.Project.showCurrentMode();  
Shell.Project.showModeDetails "Mode";  
map OS.Path.toUnixPath (Shell.Project.showFiles());  
Shell.Project.showSubprojects();  
Shell.Project.showAllTargets();  
Shell.Project.showCurrentTargets();  
(Shell.Project.setMode "missing-mode"; "") 
  handle Shell.Project.ProjectError s => s;
(Shell.Project.setConfiguration "missing-configuration"; "") 
  handle Shell.Project.ProjectError s => s;
(Shell.Project.setTargets ["missing-target"]; "") 
  handle Shell.Project.ProjectError s => s;
(Shell.Project.removeMode "missing-mode"; "") 
  handle Shell.Project.ProjectError s => s;
(Shell.Project.removeConfiguration "missing-configuration"; "") 
  handle Shell.Project.ProjectError s => s;
(Shell.Project.removeTarget "missing-target"; "") 
  handle Shell.Project.ProjectError s => s;
(Shell.Project.setTargetDetails "invalid-target"; "")
  handle Shell.Project.ProjectError s => s;
(Shell.Project.removeMode (Shell.Project.showCurrentMode()); "")
  handle Shell.Project.ProjectError s => s;
Shell.Project.removeConfiguration (Shell.Project.showCurrentConfiguration());
app Shell.Project.removeTarget (Shell.Project.showCurrentTargets());
Shell.Project.showCurrentTargets();  

OS.FileSys.remove (OS.Path.fromUnixPath "/tmp/subproject.mlp");
OS.FileSys.remove (OS.Path.fromUnixPath "/tmp/test_project.mlp");



@


1.7
log
@[Bug #30453]
map OS.Path.fromUnixPath over files list.
@
text
@d8 4
d103 1
a103 1
Shell.Project.showFiles();  
@


1.6
log
@[Bug #30453]
 Targets must be specified in total list of files.
@
text
@d8 4
d81 2
a82 2
  setFiles ["file1.sml", "sub_dir/file2.sml", "sub_dir2/file3.sml", 
	    "sub_dir/sub_sub_dir/file4.sml"];
@


1.5
log
@[Bug #30417]
Shell.Project.saveProject now takes unit - use Shell.Project.saveProjectAs.
@
text
@d8 4
d77 2
a78 1
  setFiles ["file1.sml", "sub_dir/file2.sml"];
d80 2
a81 2
  setTargetDetails "target1";  setTargetDetails "target2"; setTargetDetails "target3";
  setTargets ["target2"]; 
d110 2
@


1.4
log
@[Bug #30422]
newProject now requires a directory
@
text
@d8 4
d37 1
a37 1
  saveProject (OS.Path.fromUnixPath "/tmp/subproject.mlp")
d77 1
a77 1
  saveProject (OS.Path.fromUnixPath "test_project.mlp")
@


1.3
log
@[Bug #30369]
Replacing source path with a list of files.
@
text
@d8 4
d20 1
a20 1
  newProject();
d33 1
a33 1
  saveProject "subproject.mlp"
d37 1
a37 1
  newProject();
d73 1
a73 1
  saveProject "test_project.mlp"
d76 2
a77 2
Shell.Project.newProject();
Shell.Project.openProject("test_project.mlp");
d108 2
a109 2
OS.FileSys.remove "subproject.mlp";
OS.FileSys.remove "test_project.mlp";
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' *  '
@
text
@d7 5
a11 1
 * $Log$
d35 2
a36 2
  setConfigurationDetails ("Config", {library=["library"], source=["source"]});
  setConfigurationDetails ("RConfig", {library=["rlibrary"], source=["rsource"]});
d65 1
a65 1
  setSourcePath ["dir1", "dir2"];
d82 1
a82 1
Shell.Project.showSourcePath();  
@


1.1
log
@new unit
[Bug #50071]
Test for Shell.Project structure
@
text
@@
