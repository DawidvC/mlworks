head	1.6;
access;
symbols
	MLWorks_21c0_1999_03_25:1.6
	MLWorks_20c1_1998_08_20:1.6
	MLWorks_20c0_1998_08_04:1.6
	MLWorks_20b2c2_1998_06_19:1.6
	MLWorks_20b2_Windows_1998_06_12:1.6
	MLWorks_20b1c1_1998_05_07:1.6
	MLWorks_20b0_1998_04_07:1.6
	MLWorks_20b0_1998_03_20:1.6
	MLWorks_20m2_1998_02_16:1.6
	MLWorks_20m1_1997_10_23:1.6
	MLWorks_11r1:1.6.5.1.1.1.1
	MLWorks_11c0_1997_09_09:1.6.5.1.1.1
	MLWorks_10r3:1.6.5.1.3
	MLWorks_10r2_551:1.6.5.1.2
	MLWorks_11:1.6.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.5.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.6.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.5
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.6.3.1.1
	MLWorks_gui_1996_12_18:1.6.4
	MLWorks_1_0_Win32_1996_12_17:1.6.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.6.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.6.1.1
	MLWorks_1_0_Irix_1996_11_28:1.6.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.6.2
	MLWorks_1_0_Unix_1996_11_14:1.6.1
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.4
	MLWorks_Beta_1996_06_07:1.4
	MLWorks_Beta_1996_06_06:1.4
	MLWorks_Beta_1996_06_05:1.4
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4
	ML_beta_release_12/08/94:1.1
	ML_beta_release_03/08/94:1.1
	ML_revised_beta_release_25/05/94:1.1
	ML_final_beta_release_02/03/94:1.1
	mlworks-28-01-1994:1.1
	Release:1.1
	mlworks-beta-01-09-1993:1.1;
locks; strict;
comment	@ * @;


1.6
date	96.11.05.14.40.37;	author jont;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1
	1.6.4.1
	1.6.5.1;
next	1.5;

1.5
date	96.11.01.11.40.37;	author io;	state Exp;
branches;
next	1.4;

1.4
date	96.05.01.17.18.00;	author jont;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1;
next	1.3;

1.3
date	96.04.19.16.28.25;	author nickb;	state Exp;
branches;
next	1.2;

1.2
date	95.08.21.15.54.09;	author nickb;	state Exp;
branches;
next	1.1;

1.1
date	93.06.22.16.05.50;	author jont;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	93.06.22.16.05.50;	author jont;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.27.57;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.18.32;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.38.35;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	96.11.14.13.06.20;	author hope;	state Exp;
branches
	1.6.1.1.1.1;
next	;

1.6.1.1.1.1
date	96.11.28.15.15.59;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.11.22.18.23.47;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.12.17.18.01.51;	author hope;	state Exp;
branches
	1.6.3.1.1.1;
next	;

1.6.3.1.1.1
date	97.02.24.11.53.34;	author hope;	state Exp;
branches;
next	;

1.6.4.1
date	96.12.18.09.57.20;	author hope;	state Exp;
branches;
next	;

1.6.5.1
date	97.05.12.10.55.21;	author hope;	state Exp;
branches
	1.6.5.1.1.1
	1.6.5.1.2.1
	1.6.5.1.3.1;
next	;

1.6.5.1.1.1
date	97.07.28.18.39.47;	author daveb;	state Exp;
branches
	1.6.5.1.1.1.1.1;
next	;

1.6.5.1.1.1.1.1
date	97.10.07.12.04.54;	author jkbrook;	state Exp;
branches;
next	;

1.6.5.1.2.1
date	97.09.08.17.32.02;	author daveb;	state Exp;
branches;
next	;

1.6.5.1.3.1
date	97.09.09.14.30.13;	author daveb;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Change reasonableness test to cope with faster machines
@
text
@(*

Result: OK
 
$Log: profile3.sml,v $
 * Revision 1.5  1996/11/01  11:40:37  io
 * [Bug #1614]
 * remove toplevel String.
 *
 * Revision 1.4  1996/05/01  17:18:00  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
 * Revision 1.3  1996/04/19  16:28:25  nickb
 * Change profile test so it is not sensitive to the presence of tail-calling.
 *
 * Revision 1.2  1995/08/21  15:54:09  nickb
 * Update to new profiler.
 *
Revision 1.2  1995/08/21  15:09:42  nickb
Update to new profiler.

Revision 1.1  1993/06/22  16:03:50  jont
Initial revision

Revision 1.1  1993/06/22  15:34:33  jont
Initial revision

Copyright (c) 1993 Harlequin Ltd.
*)

(* test that results of time- and space-profiling 'fibl' are reasonable *)

local
(* stuff to run the profile *)

  val manner = MLWorks.Profile.make_manner
    {time = true,
     space = true,
     calls = false,
     copies = false,
     depth = 0,
     breakdown = []}
  val null_manner = MLWorks.Profile.make_manner
    {time = false,
     space = false,
     calls = false,
     copies = false,
     depth = 0,
     breakdown = []}

  fun is_my_test s =
    MLWorks.String.ordof (s,0) = ord #"m"
    andalso MLWorks.String.ordof (s,1) = ord #"y"
    andalso MLWorks.String.ordof (s,2) = ord #"_"
    andalso MLWorks.String.ordof (s,3) = ord #"t"
    andalso MLWorks.String.ordof (s,4) = ord #"e"
    andalso MLWorks.String.ordof (s,5) = ord #"s"
    andalso MLWorks.String.ordof (s,6) = ord #"t"
    
  fun selector s = if is_my_test s then manner else null_manner

  val options = MLWorks.Profile.Options {scan = 10, selector = selector}

(* stuff to extract totals out of the profile *)

  fun get_top_scans (MLWorks.Profile.Function_Time_Profile {top,...}) = top

  fun real_data (MLWorks.Profile.Large_Size {bytes,megabytes}) =
		 (real megabytes)*1048576.0+(real bytes)

  fun get_allocated (MLWorks.Profile.Function_Space_Profile{allocated,...}) =
		 real_data allocated

  fun matching pred (total as (totalscans,totaldata),
		     MLWorks.Profile.Function_Profile
		     {id, time,space,...}) =
    if pred id then (totalscans + (get_top_scans time),
		     totaldata + (get_allocated space))
    else total

  fun fold f z [] = z
    | fold f z (x::xs) = fold f (f(z,x)) xs

  local
    fun length' (a,[]) = a | length' (a,x::xs) = length'(a+1,xs)
  in
    fun length l = length'(0,l)
  end

(* a function to profile *)

  fun my_test_rev_app (x::xs, ys) = my_test_rev_app(xs,x::ys)
    | my_test_rev_app ([]   , ys) = ys

  fun my_test_fibl 0 = [0]
    | my_test_fibl 1 = [0]
    | my_test_fibl n = my_test_rev_app(my_test_fibl (n-1),my_test_fibl (n-2))

(* now profile it *)

  val (result,profile) = MLWorks.Profile.profile options my_test_fibl 27

(* get the results *)

  val MLWorks.Profile.Profile {time = MLWorks.Profile.Time time_header,
			       space = MLWorks.Profile.Space space_header,
			       functions,...} = profile
  val {scans = total_scans,...} = time_header
  val {total_profiled = MLWorks.Profile.Function_Space_Profile {allocated,...},
       ...} = space_header
  val total_data = real_data allocated
  val (my_test_scans,my_test_data) = fold (matching is_my_test) (0,0.0) functions

in

(* check the results *)
   val it =
     if my_test_scans < 0 then
       "Nonsense profiling result for my_fibl 27 : my_test_scans < 0"
     else if total_scans < 0 then
       "Nonsense profiling result for my_fibl 27 : total_scans < 0"
     else if my_test_scans > total_scans then
       "Nonsense profiling result for my_fibl 27 : my_test_scans > total_scans"
     else if total_scans < 50 (* 0.5 seconds, in theory *) then 
       "Unexpected profiling result for my_fibl 27 : fewer than 50 scans"
     else if my_test_scans < floor ((real total_scans) * 0.8) then
       "Unexpected result for my_fibl 27 : less than 80% time spent in 'my_test_...'"
     else if my_test_data < 0.0 then
        "Nonsense profiling result for my_fibl 27 : my_test_data < 0.0"
     else if total_data < 0.0 then
       "Nonsense profiling result for my_fibl 27 : total_data < 0.0"
     else if my_test_data > total_data then
       "Nonsense profiling result for my_fibl 27 : my_test_data > total_data"
     else if length functions > 10 then
       "Unexpected profiling result for my_fibl 27 : more than 10 'my_test_...' fns"
     else if total_data < 25.0*1048576.0 then
       "Unexpected profiling result for my_fibl 27 : less than 25Mb allocated"
     else if my_test_data < (total_data * 0.99) then
       "Unexpected result for my_fibl 27 : less than 99% data made by 'my_test_...'"
     else "Profiling my_fibl 27 has a reasonable result"
end
@


1.6.5.1
log
@branched from 1.6
@
text
@a5 3
 * Revision 1.6  1996/11/05  14:40:37  jont
 * Change reasonableness test to cope with faster machines
 *
@


1.6.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.6.5.1  1997/05/12  10:55:21  hope
 * branched from 1.6
 *
@


1.6.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.6.5.1  1997/05/12  10:55:21  hope
 * branched from 1.6
 *
@


1.6.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.6.5.1  1997/05/12  10:55:21  hope
 * branched from 1.6
 *
@


1.6.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 * Revision 1.6.5.1.1.1  1997/07/28  18:39:47  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.6.4.1
log
@branched from 1.6
@
text
@a5 3
 * Revision 1.6  1996/11/05  14:40:37  jont
 * Change reasonableness test to cope with faster machines
 *
@


1.6.3.1
log
@branched from 1.6
@
text
@a5 3
 * Revision 1.6  1996/11/05  14:40:37  jont
 * Change reasonableness test to cope with faster machines
 *
@


1.6.3.1.1.1
log
@branched from 1.6.3.1
@
text
@a5 3
 * Revision 1.6.3.1  1996/12/17  18:01:51  hope
 * branched from 1.6
 *
@


1.6.2.1
log
@branched from 1.6
@
text
@a5 3
 * Revision 1.6  1996/11/05  14:40:37  jont
 * Change reasonableness test to cope with faster machines
 *
@


1.6.1.1
log
@branched from 1.6
@
text
@a5 3
 * Revision 1.6  1996/11/05  14:40:37  jont
 * Change reasonableness test to cope with faster machines
 *
@


1.6.1.1.1.1
log
@branched from 1.6.1.1
@
text
@a5 3
 * Revision 1.6.1.1  1996/11/14  13:06:20  hope
 * branched from 1.6
 *
@


1.5
log
@[Bug #1614]
remove toplevel String.
@
text
@d6 4
d124 2
a125 2
     else if total_scans < 200 (* 2 seconds, in theory *) then 
       "Unexpected profiling result for my_fibl 27 : fewer than 200 scans"
@


1.4
log
@Fixing up after changes to toplevel visible string and io stuff
@
text
@d6 3
d48 7
a54 7
    MLWorks.String.ordof (s,0) = String.ord "m"
    andalso MLWorks.String.ordof (s,1) = String.ord "y"
    andalso MLWorks.String.ordof (s,2) = String.ord "_"
    andalso MLWorks.String.ordof (s,3) = String.ord "t"
    andalso MLWorks.String.ordof (s,4) = String.ord "e"
    andalso MLWorks.String.ordof (s,5) = String.ord "s"
    andalso MLWorks.String.ordof (s,6) = String.ord "t"
@


1.4.3.1
log
@branched from 1.4
@
text
@a5 3
 * Revision 1.4  1996/05/01  17:18:00  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a5 3
 * Revision 1.4  1996/05/01  17:18:00  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a5 3
 * Revision 1.4  1996/05/01  17:18:00  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.3
log
@Change profile test so it is not sensitive to the presence of tail-calling.
@
text
@d6 3
d45 7
a51 7
    MLWorks.String.ordof (s,0) = ord "m"
    andalso MLWorks.String.ordof (s,1) = ord "y"
    andalso MLWorks.String.ordof (s,2) = ord "_"
    andalso MLWorks.String.ordof (s,3) = ord "t"
    andalso MLWorks.String.ordof (s,4) = ord "e"
    andalso MLWorks.String.ordof (s,5) = ord "s"
    andalso MLWorks.String.ordof (s,6) = ord "t"
@


1.2
log
@Update to new profiler.
@
text
@d5 4
a8 1
$Log: profile2.sml,v $
d24 2
d41 8
a48 4
  fun is_fib s =
    MLWorks.String.ordof (s,0) = ord "f"
    andalso MLWorks.String.ordof (s,1) = ord "i"
    andalso MLWorks.String.ordof (s,2) = ord "b"
d50 1
a50 1
  fun selector s = if is_fib s then manner else null_manner
d54 3
a56 1
  fun get_scans (MLWorks.Profile.Function_Time_Profile {scans,...}) = scans
d67 1
a67 1
    if pred id then (totalscans + (get_scans time),
d80 8
a87 3
  fun fibl 0 = [0]
    | fibl 1 = [0]
    | fibl n = (fibl (n-1) @@ fibl (n-2))
d89 5
a93 1
  val (result,profile) = MLWorks.Profile.profile options fibl 28
d102 5
a106 2
  val (fib_scans,fib_data) = fold (matching is_fib) (0,0.0) functions
 in
d108 2
a109 2
     if fib_scans < 0 then
       "Nonsense profiling result for fibl 28 : fib_scans < 0"
d111 9
a119 5
       "Nonsense profiling result for fibl 28 : total_scans < 0"
     else if fib_scans > total_scans then
       "Nonsense profiling result for fibl 28 : fib_scans > total_scans"
     else if fib_data < 0.0 then
       "Nonsense profiling result for fibl 28 : fib_data < 0.0"
d121 3
a123 3
       "Nonsense profiling result for fibl 28 : total_data < 0.0"
     else if fib_data > total_data then
       "Nonsense profiling result for fibl 28 : fib_data > total_data"
d125 6
a130 10
       "Unexpected profiling result for fibl 28 : more than 10 'fib...' fns"
     else if total_scans < 100 (* 1 second, in theory *) then 
       "Unexpected profiling result for fibl 28 : fewer than 100 scans"
     else if total_data < 3.0*1048576.0 then
       "Unexpected profiling result for fibl 28 : less than 3Mb allocated"
     else if fib_scans < floor ((real total_scans) * 0.8) then
       "Unexpected result for fibl 28 : less than 80% time spent in 'fib...'"
     else if fib_data < (total_data * 0.99) then
       "Unexpected result for fibl 28 : less than 99% data made by 'fib...'"
     else "Profiling fibl 28 has a reasonable result"
@


1.1
log
@Initial revision
@
text
@d5 7
a11 1
$Log: profile.sml,v $
d18 1
a18 16
fun fromList [] = []
  | fromList _ = raise Div

val fromList =
  MLWorks.Profile.profile
    (MLWorks.Profile.OPTIONS
      {scan = 3, depth = 2, select = ["foobar"]})
    std_out
    fromList;

fun foobar x = ()

fun mkList 0 = []
|   mkList n = n :: mkList (n-1);

val it = (fromList(mkList 42)) handle _ => fromList([]);
d20 89
a108 1
signature SIG = sig end
@


1.1.1.1
log
@Fork for bug fixing
@
text
@d5 1
a5 4
$Log: profile3.sml,v $
Revision 1.1  1993/06/22  16:05:50  jont
Initial revision

@
