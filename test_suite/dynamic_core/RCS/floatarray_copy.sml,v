head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_11r1:1.1.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.1.1.1.1.1
	MLWorks_10r3:1.1.1.1.3
	MLWorks_10r2_551:1.1.1.1.2
	MLWorks_11:1.1.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.1.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.1.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.1
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1;
locks; strict;
comment	@ *  @;


1.2
date	97.05.28.11.55.12;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	97.01.07.15.13.03;	author andreww;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.12.10.56.31;	author hope;	state Exp;
branches
	1.1.1.1.1.1
	1.1.1.1.2.1
	1.1.1.1.3.1;
next	;

1.1.1.1.1.1
date	97.07.28.18.40.24;	author daveb;	state Exp;
branches
	1.1.1.1.1.1.1.1;
next	;

1.1.1.1.1.1.1.1
date	97.10.07.12.05.32;	author jkbrook;	state Exp;
branches;
next	;

1.1.1.1.2.1
date	97.09.08.17.32.42;	author daveb;	state Exp;
branches;
next	;

1.1.1.1.3.1
date	97.09.09.14.30.56;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
[Bug #1818]
floatarray tests
@


1.2
log
@[Bug #30090]
Remove uses of MLWorks.IO
@
text
@(*

Result: OK
 
 * Revision Log:
 * -------------
 * $Log: floatarray_copy.sml,v $
 *  Revision 1.1  1997/01/07  15:13:03  andreww
 *  new unit
 *  [Bug #1818]
 *  floatarray tests
 *
 *
 *

Copyright (c) 1997 Harlequin Ltd.
*)

val a = MLWorks.Internal.FloatArray.arrayoflist
                         (map real [0,1,2,3,4,5,6,7,8,9])

val b = MLWorks.Internal.FloatArray.array(10, 0.0)

val _ = MLWorks.Internal.FloatArray.copy(a, 0, 4, b, 1)

val _ = case (map floor (MLWorks.Internal.FloatArray.to_list b))
          of [0,0,1,2,3,0,0,0,0,0] 
            => print"Pass\n"
          | _ => print"Fail\n"


val c = (MLWorks.Internal.FloatArray.copy(a, 3, 2, b, 1);
	 MLWorks.Internal.FloatArray.from_list []) 
  handle MLWorks.Internal.FloatArray.Subscript =>
  MLWorks.Internal.FloatArray.from_list(map real [3,2,1])

val _ = case (map floor (MLWorks.Internal.FloatArray.to_list c))
          of [3,2,1] => print"Pass2\n"
           | _ => print"Fail2\n"

val d = (MLWorks.Internal.FloatArray.copy(a, 3, 11, b ,1);
	 MLWorks.Internal.FloatArray.from_list [])
  handle MLWorks.Internal.FloatArray.Subscript =>
  MLWorks.Internal.FloatArray.from_list(map real [3,11,1])

val _ = case (map floor (MLWorks.Internal.FloatArray.to_list d))
          of [3,11,1] => print"Pass3\n"
           | _ => print"Fail3\n"

val e = (MLWorks.Internal.FloatArray.copy(a, ~3, 2, b, 1);
	 MLWorks.Internal.FloatArray.from_list [])
  handle MLWorks.Internal.FloatArray.Subscript =>
  MLWorks.Internal.FloatArray.from_list(map real [253,2,1])

val _ = case (map floor (MLWorks.Internal.FloatArray.to_list e))
          of [253,2, 1] => print"Pass4\n"
           | _ => print"Fail4\n"

val f = (MLWorks.Internal.FloatArray.copy(a, 0, 9, b, 4);
	 MLWorks.Internal.FloatArray.from_list []) 
  handle MLWorks.Internal.FloatArray.Subscript =>
  MLWorks.Internal.FloatArray.from_list(map real [0,9,4])
  
val _ = case (map floor (MLWorks.Internal.FloatArray.to_list f))
          of [0, 9, 4] => print"Pass5\n"
           | _ => print"Fail5\n"


@


1.1
log
@new unit
[Bug #1818]
floatarray tests
@
text
@d7 6
a12 1
 * $Log:,v $
d28 2
a29 2
            => MLWorks.IO.output(MLWorks.IO.std_out, "Pass\n")
          | _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail\n")
d38 2
a39 2
          of [3,2,1] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass2\n")
           | _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail2\n")
d47 2
a48 2
          of [3,11,1] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass3\n")
           | _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail3\n")
d56 2
a57 2
          of [253,2, 1] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass4\n")
           | _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail4\n")
d65 2
a66 2
          of [0, 9, 4] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass5\n")
           | _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail5\n")
@


1.1.1.1
log
@branched from 1.1
@
text
@d7 1
a7 6
 * $Log: floatarray_copy.sml,v $
 *  Revision 1.1  1997/01/07  15:13:03  andreww
 *  new unit
 *  [Bug #1818]
 *  floatarray tests
 *
@


1.1.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a7 3
 *  Revision 1.1.1.1  1997/05/12  10:56:31  hope
 *  branched from 1.1
 *
@


1.1.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a7 3
 *  Revision 1.1.1.1  1997/05/12  10:56:31  hope
 *  branched from 1.1
 *
@


1.1.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a7 3
 *  Revision 1.1.1.1  1997/05/12  10:56:31  hope
 *  branched from 1.1
 *
@


1.1.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a7 3
 *  Revision 1.1.1.1.1.1  1997/07/28  18:40:24  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@
