head	1.7;
access;
symbols
	MLWorks_21c0_1999_03_25:1.7
	MLWorks_20c1_1998_08_20:1.7
	MLWorks_20c0_1998_08_04:1.7
	MLWorks_20b2c2_1998_06_19:1.7
	MLWorks_20b2_Windows_1998_06_12:1.7
	MLWorks_20b1c1_1998_05_07:1.7
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.6
	MLWorks_20m1_1997_10_23:1.6
	MLWorks_11r1:1.5.5.1.1.1.1
	MLWorks_11c0_1997_09_09:1.5.5.1.1.1
	MLWorks_10r3:1.5.5.1.3
	MLWorks_10r2_551:1.5.5.1.2
	MLWorks_11:1.5.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.5.5.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.5.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.5.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.5.5
	MLWorks_BugFix_1997_04_24:1.5
	MLWorks_1_0_r2_Win32_1997_04_11:1.5
	MLWorks_1_0_r2_Unix_1997_04_04:1.5
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.5.3.1.1
	MLWorks_gui_1996_12_18:1.5.4
	MLWorks_1_0_Win32_1996_12_17:1.5.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.5.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.5.1.1
	MLWorks_1_0_Irix_1996_11_28:1.5.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.5.2
	MLWorks_1_0_Unix_1996_11_14:1.5.1
	MLWorks_Open_Beta2_1996_10_11:1.4.2
	MLWorks_License_dev:1.4.1
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3
	ML_beta_release_12/08/94:1.1
	ML_beta_release_03/08/94:1.1
	ML_revised_beta_release_25/05/94:1.1
	ML_final_beta_release_02/03/94:1.1
	mlworks-28-01-1994:1.1
	Release:1.1
	mlworks-beta-01-09-1993:1.1;
locks; strict;
comment	@ * @;


1.7
date	98.02.18.11.55.59;	author mitchell;	state Exp;
branches;
next	1.6;

1.6
date	97.05.28.11.51.39;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	96.11.03.15.59.48;	author io;	state Exp;
branches
	1.5.1.1
	1.5.2.1
	1.5.3.1
	1.5.4.1
	1.5.5.1;
next	1.4;

1.4
date	96.09.11.14.32.17;	author io;	state Exp;
branches
	1.4.1.1
	1.4.2.1;
next	1.3;

1.3
date	96.05.01.17.35.10;	author jont;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	95.07.27.14.59.16;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	93.03.25.17.18.47;	author jont;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	93.03.25.17.18.47;	author jont;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.29.04;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	96.10.07.16.19.44;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.17.11.40.00;	author hope;	state Exp;
branches;
next	;

1.5.1.1
date	96.11.14.13.07.29;	author hope;	state Exp;
branches
	1.5.1.1.1.1;
next	;

1.5.1.1.1.1
date	96.11.28.15.17.18;	author hope;	state Exp;
branches;
next	;

1.5.2.1
date	96.11.22.18.24.57;	author hope;	state Exp;
branches;
next	;

1.5.3.1
date	96.12.17.18.03.10;	author hope;	state Exp;
branches
	1.5.3.1.1.1;
next	;

1.5.3.1.1.1
date	97.02.24.11.55.02;	author hope;	state Exp;
branches;
next	;

1.5.4.1
date	96.12.18.09.58.30;	author hope;	state Exp;
branches;
next	;

1.5.5.1
date	97.05.12.10.56.57;	author hope;	state Exp;
branches
	1.5.5.1.1.1
	1.5.5.1.2.1
	1.5.5.1.3.1;
next	;

1.5.5.1.1.1
date	97.07.28.18.38.55;	author daveb;	state Exp;
branches
	1.5.5.1.1.1.1.1;
next	;

1.5.5.1.1.1.1.1
date	97.10.07.12.04.01;	author jkbrook;	state Exp;
branches;
next	;

1.5.5.1.2.1
date	97.09.08.17.31.10;	author daveb;	state Exp;
branches;
next	;

1.5.5.1.3.1
date	97.09.09.14.29.15;	author daveb;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[Bug #30349]
Fix test to avoid non-unit sequence warning
@
text
@(*

Result: OK
 
$Log: bytearray_substring.sml,v $
 * Revision 1.6  1997/05/28  11:51:39  jont
 * [Bug #30090]
 * Remove uses of MLWorks.IO
 *
 * Revision 1.5  1996/11/03  15:59:48  io
 * [Bug #1614]
 * remove toplevel String
 *
 * Revision 1.4  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
 * Revision 1.3  1996/05/01  17:35:10  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
 * Revision 1.2  1995/07/27  14:59:16  matthew
 * New test for bounds checks
 *
Revision 1.1  1993/03/25  17:18:47  jont
Initial revision


Copyright (c) 1993 Harlequin Ltd.
*)

val a = MLWorks.Internal.ByteArray.arrayoflist[0,1,2,3,4,5,6,7,8,9]

val b = MLWorks.Internal.ByteArray.substring(a, 3, 5)

val _ = (ignore(MLWorks.Internal.ByteArray.substring (a,0,10)); print"Pass0\n")
        handle MLWorks.Internal.ByteArray.Substring => print"Fail0\n"

val _ = case b of
  "\003\004\005\006\007" => print"Pass1\n"
| _ => print"Fail1\n"

val d = MLWorks.Internal.ByteArray.substring(a, 3, 11) handle MLWorks.Internal.ByteArray.Substring =>
  (str o chr) 3 ^ (str o chr) 11

val _ = case d of
  "\003\011" => print"Pass2\n"
| _ => print"Fail2\n"

val e = MLWorks.Internal.ByteArray.substring(a, ~3, 2) handle MLWorks.Internal.ByteArray.Substring =>
  (str o chr) 253 ^ (str o chr) 2

val _ = case e of
  "\253\002" => print"Pass3\n"
| _ => print"Fail3\n"
@


1.6
log
@[Bug #30090]
Remove uses of MLWorks.IO
@
text
@d6 4
d35 1
a35 1
val _ = (MLWorks.Internal.ByteArray.substring (a,0,10); print"Pass0\n")
@


1.5
log
@[Bug #1614]
remove toplevel String
@
text
@d6 4
d31 2
a32 2
val _ = (MLWorks.Internal.ByteArray.substring (a,0,10); MLWorks.IO.output (MLWorks.IO.std_out,"Pass0\n"))
        handle MLWorks.Internal.ByteArray.Substring => MLWorks.IO.output (MLWorks.IO.std_out,"Fail0\n")
d35 2
a36 2
  "\003\004\005\006\007" => MLWorks.IO.output(MLWorks.IO.std_out, "Pass1\n")
| _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail1\n")
d42 2
a43 2
  "\003\011" => MLWorks.IO.output(MLWorks.IO.std_out, "Pass2\n")
| _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail2\n")
d49 2
a50 2
  "\253\002" => MLWorks.IO.output(MLWorks.IO.std_out, "Pass3\n")
| _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail3\n")
@


1.5.5.1
log
@branched from 1.5
@
text
@a5 4
 * Revision 1.5  1996/11/03  15:59:48  io
 * [Bug #1614]
 * remove toplevel String
 *
@


1.5.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.5.5.1  1997/05/12  10:56:57  hope
 * branched from 1.5
 *
@


1.5.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.5.5.1  1997/05/12  10:56:57  hope
 * branched from 1.5
 *
@


1.5.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.5.5.1  1997/05/12  10:56:57  hope
 * branched from 1.5
 *
@


1.5.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 * Revision 1.5.5.1.1.1  1997/07/28  18:38:55  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.5.4.1
log
@branched from 1.5
@
text
@a5 4
 * Revision 1.5  1996/11/03  15:59:48  io
 * [Bug #1614]
 * remove toplevel String
 *
@


1.5.3.1
log
@branched from 1.5
@
text
@a5 4
 * Revision 1.5  1996/11/03  15:59:48  io
 * [Bug #1614]
 * remove toplevel String
 *
@


1.5.3.1.1.1
log
@branched from 1.5.3.1
@
text
@a5 3
 * Revision 1.5.3.1  1996/12/17  18:03:10  hope
 * branched from 1.5
 *
@


1.5.2.1
log
@branched from 1.5
@
text
@a5 4
 * Revision 1.5  1996/11/03  15:59:48  io
 * [Bug #1614]
 * remove toplevel String
 *
@


1.5.1.1
log
@branched from 1.5
@
text
@a5 4
 * Revision 1.5  1996/11/03  15:59:48  io
 * [Bug #1614]
 * remove toplevel String
 *
@


1.5.1.1.1.1
log
@branched from 1.5.1.1
@
text
@a5 3
 * Revision 1.5.1.1  1996/11/14  13:07:29  hope
 * branched from 1.5
 *
@


1.4
log
@[Bug #1603]
convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
@
text
@d6 4
d35 1
a35 1
  String.chr 3 ^ String.chr 11
d42 1
a42 1
  String.chr 253 ^ String.chr 2
@


1.4.2.1
log
@branched from 1.4
@
text
@a5 4
 * Revision 1.4  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a5 4
 * Revision 1.4  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.3
log
@Fixing up after changes to toplevel visible string and io stuff
@
text
@d6 3
d19 1
a19 1
val a = MLWorks.ByteArray.arrayoflist[0,1,2,3,4,5,6,7,8,9]
d21 1
a21 1
val b = MLWorks.ByteArray.substring(a, 3, 5)
d23 2
a24 2
val _ = (MLWorks.ByteArray.substring (a,0,10); MLWorks.IO.output (MLWorks.IO.std_out,"Pass0\n"))
        handle MLWorks.ByteArray.Substring => MLWorks.IO.output (MLWorks.IO.std_out,"Fail0\n")
d30 1
a30 1
val d = MLWorks.ByteArray.substring(a, 3, 11) handle MLWorks.ByteArray.Substring =>
d37 1
a37 1
val e = MLWorks.ByteArray.substring(a, ~3, 2) handle MLWorks.ByteArray.Substring =>
@


1.3.1.1
log
@branched from 1.3
@
text
@a5 3
 * Revision 1.3  1996/05/01  17:35:10  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.2
log
@New test for bounds checks
@
text
@d6 3
d20 2
a21 2
val _ = (MLWorks.ByteArray.substring (a,0,10); output (std_out,"Pass0\n"))
        handle MLWorks.ByteArray.Substring => output (std_out,"Fail0\n")
d24 2
a25 2
  "\003\004\005\006\007" => output(std_out, "Pass1\n")
| _ => output(std_out, "Fail1\n")
d28 1
a28 1
  chr 3 ^ chr 11
d31 2
a32 2
  "\003\011" => output(std_out, "Pass2\n")
| _ => output(std_out, "Fail2\n")
d35 1
a35 1
  chr 253 ^ chr 2
d38 2
a39 2
  "\253\002" => output(std_out, "Pass3\n")
| _ => output(std_out, "Fail3\n")
@


1.1
log
@Initial revision
@
text
@d5 4
a8 1
$Log$
d16 3
@


1.1.1.1
log
@Fork for bug fixing
@
text
@d5 1
a5 4
$Log: bytearray_substring.sml,v $
Revision 1.1  1993/03/25  17:18:47  jont
Initial revision

@
