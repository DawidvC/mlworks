head	1.5;
access;
symbols
	MLWorks_21c0_1999_03_25:1.5
	MLWorks_20c1_1998_08_20:1.5
	MLWorks_20c0_1998_08_04:1.5
	MLWorks_20b2c2_1998_06_19:1.5
	MLWorks_20b2_Windows_1998_06_12:1.5
	MLWorks_20b1c1_1998_05_07:1.5
	MLWorks_20b0_1998_04_07:1.5
	MLWorks_20b0_1998_03_20:1.5
	MLWorks_20m2_1998_02_16:1.5
	MLWorks_20m1_1997_10_23:1.5
	MLWorks_11r1:1.4.7.1.1.1.1
	MLWorks_11c0_1997_09_09:1.4.7.1.1.1
	MLWorks_10r3:1.4.7.1.3
	MLWorks_10r2_551:1.4.7.1.2
	MLWorks_11:1.4.7.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.7.1
	MLWorks_20m0_1997_06_20:1.5
	MLWorks_1_0_r2c2_1997_06_14:1.4.7.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.7.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.7
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.5.1.1
	MLWorks_gui_1996_12_18:1.4.6
	MLWorks_1_0_Win32_1996_12_17:1.4.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.3.1
	MLWorks_1_0_Irix_1996_11_28:1.4.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.4
	MLWorks_1_0_Unix_1996_11_14:1.4.3
	MLWorks_Open_Beta2_1996_10_11:1.4.2
	MLWorks_License_dev:1.4.1
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3
	ML_beta_release_12/08/94:1.1
	ML_beta_release_03/08/94:1.1
	ML_revised_beta_release_25/05/94:1.1
	ML_final_beta_release_02/03/94:1.1
	mlworks-28-01-1994:1.1
	Release:1.1
	mlworks-beta-01-09-1993:1.1;
locks; strict;
comment	@ * @;


1.5
date	97.06.05.16.43.57;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	96.09.11.14.32.17;	author io;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1;
next	1.3;

1.3
date	96.05.21.14.06.14;	author matthew;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	96.05.01.17.07.53;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	93.03.25.17.02.43;	author jont;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	93.03.25.17.02.43;	author jont;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.28.26;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	96.10.07.16.19.03;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.17.11.39.12;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.11.14.13.06.50;	author hope;	state Exp;
branches
	1.4.3.1.1.1;
next	;

1.4.3.1.1.1
date	96.11.28.15.16.32;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.22.18.24.18;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.12.17.18.02.21;	author hope;	state Exp;
branches
	1.4.5.1.1.1;
next	;

1.4.5.1.1.1
date	97.02.24.11.54.13;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.18.09.57.50;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	97.05.12.10.56.01;	author hope;	state Exp;
branches
	1.4.7.1.1.1
	1.4.7.1.2.1
	1.4.7.1.3.1;
next	;

1.4.7.1.1.1
date	97.07.28.18.41.42;	author daveb;	state Exp;
branches
	1.4.7.1.1.1.1.1;
next	;

1.4.7.1.1.1.1.1
date	97.10.07.12.06.53;	author jkbrook;	state Exp;
branches;
next	;

1.4.7.1.2.1
date	97.09.08.17.34.03;	author daveb;	state Exp;
branches;
next	;

1.4.7.1.3.1
date	97.09.09.14.32.23;	author daveb;	state Exp;
branches;
next	;


desc
@@


1.5
log
@[Bug #30090]
Remove use of MLWorks.IO
@
text
@(*

Result: OK
 
$Log: bytearray_subarray.sml,v $
 * Revision 1.4  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
 * Revision 1.3  1996/05/21  14:06:14  matthew
 * Exception changes
 *
 * Revision 1.2  1996/05/01  17:07:53  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
 * Revision 1.1  1993/03/25  17:02:43  jont
 * Initial revision
 *

Copyright (c) 1993 Harlequin Ltd.
*)

val a = MLWorks.Internal.ByteArray.arrayoflist[0,1,2,3,4,5,6,7,8,9]

val b = MLWorks.Internal.ByteArray.subarray(a, 3, 5)

val _ = case MLWorks.Internal.ByteArray.to_list b of
  [3,4] => print"Pass1\n"
| _ => print"Fail1\n"

val c = MLWorks.Internal.ByteArray.subarray(a, 3, 2) 
  handle MLWorks.Internal.ByteArray.Subscript =>
  MLWorks.Internal.ByteArray.from_list[3,2]

val _ = case MLWorks.Internal.ByteArray.to_list c of
  [3,2] => print"Pass2\n"
| _ => print"Fail2\n"

val d = MLWorks.Internal.ByteArray.subarray(a, 3, 11) 
  handle MLWorks.Internal.ByteArray.Subscript =>
  MLWorks.Internal.ByteArray.from_list[3,11]

val _ = case MLWorks.Internal.ByteArray.to_list d of
  [3,11] => print"Pass3\n"
| _ => print"Fail3\n"

val e = MLWorks.Internal.ByteArray.subarray(a, ~3, 2) 
  handle MLWorks.Internal.ByteArray.Subscript =>
  MLWorks.Internal.ByteArray.from_list[253,2]

val _ = case MLWorks.Internal.ByteArray.to_list e of
  [253,2] => print"Pass4\n"
| _ => print"Fail4\n"
@


1.4
log
@[Bug #1603]
convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
@
text
@d6 4
d28 2
a29 2
  [3,4] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass1\n")
| _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail1\n")
d36 2
a37 2
  [3,2] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass2\n")
| _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail2\n")
d44 2
a45 2
  [3,11] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass3\n")
| _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail3\n")
d52 2
a53 3
  [253,2] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass4\n")
| _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail4\n")

@


1.4.7.1
log
@branched from 1.4
@
text
@a5 4
 * Revision 1.4  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.4.7.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.4.7.1  1997/05/12  10:56:01  hope
 * branched from 1.4
 *
@


1.4.7.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.4.7.1  1997/05/12  10:56:01  hope
 * branched from 1.4
 *
@


1.4.7.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.4.7.1  1997/05/12  10:56:01  hope
 * branched from 1.4
 *
@


1.4.7.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 * Revision 1.4.7.1.1.1  1997/07/28  18:41:42  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.4.6.1
log
@branched from 1.4
@
text
@a5 4
 * Revision 1.4  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.4.5.1
log
@branched from 1.4
@
text
@a5 4
 * Revision 1.4  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.4.5.1.1.1
log
@branched from 1.4.5.1
@
text
@a5 3
 * Revision 1.4.5.1  1996/12/17  18:02:21  hope
 * branched from 1.4
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a5 4
 * Revision 1.4  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a5 4
 * Revision 1.4  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.4.3.1.1.1
log
@branched from 1.4.3.1
@
text
@a5 3
 * Revision 1.4.3.1  1996/11/14  13:06:50  hope
 * branched from 1.4
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a5 4
 * Revision 1.4  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a5 4
 * Revision 1.4  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.3
log
@Exception changes
@
text
@d6 3
d19 1
a19 1
val a = MLWorks.ByteArray.arrayoflist[0,1,2,3,4,5,6,7,8,9]
d21 1
a21 1
val b = MLWorks.ByteArray.subarray(a, 3, 5)
d23 1
a23 1
val _ = case MLWorks.ByteArray.to_list b of
d27 3
a29 3
val c = MLWorks.ByteArray.subarray(a, 3, 2) 
  handle MLWorks.ByteArray.Subscript =>
  MLWorks.ByteArray.from_list[3,2]
d31 1
a31 1
val _ = case MLWorks.ByteArray.to_list c of
d35 3
a37 3
val d = MLWorks.ByteArray.subarray(a, 3, 11) 
  handle MLWorks.ByteArray.Subscript =>
  MLWorks.ByteArray.from_list[3,11]
d39 1
a39 1
val _ = case MLWorks.ByteArray.to_list d of
d43 3
a45 3
val e = MLWorks.ByteArray.subarray(a, ~3, 2) 
  handle MLWorks.ByteArray.Subscript =>
  MLWorks.ByteArray.from_list[253,2]
d47 1
a47 1
val _ = case MLWorks.ByteArray.to_list e of
@


1.3.1.1
log
@branched from 1.3
@
text
@a5 3
 * Revision 1.3  1996/05/21  14:06:14  matthew
 * Exception changes
 *
@


1.2
log
@Fixing up after changes to toplevel visible string and io stuff
@
text
@d6 3
d24 3
a26 2
val c = MLWorks.ByteArray.subarray(a, 3, 2) handle MLWorks.ByteArray.Subarray(i, j) =>
  MLWorks.ByteArray.from_list[i, j]
d32 3
a34 2
val d = MLWorks.ByteArray.subarray(a, 3, 11) handle MLWorks.ByteArray.Subarray(i, j) =>
  MLWorks.ByteArray.from_list[i, j]
d40 3
a42 2
val e = MLWorks.ByteArray.subarray(a, ~3, 2) handle MLWorks.ByteArray.Subarray(i, j) =>
  MLWorks.ByteArray.from_list[i, j]
@


1.1
log
@Initial revision
@
text
@d5 4
a8 1
$Log$
d18 2
a19 2
  [3,4] => output(std_out, "Pass1\n")
| _ => output(std_out, "Fail1\n")
d25 2
a26 2
  [3,2] => output(std_out, "Pass2\n")
| _ => output(std_out, "Fail2\n")
d32 2
a33 2
  [3,11] => output(std_out, "Pass3\n")
| _ => output(std_out, "Fail3\n")
d39 2
a40 2
  [253,2] => output(std_out, "Pass4\n")
| _ => output(std_out, "Fail4\n")
@


1.1.1.1
log
@Fork for bug fixing
@
text
@d5 1
a5 4
$Log: bytearray_subarray.sml,v $
Revision 1.1  1993/03/25  17:02:43  jont
Initial revision

@
