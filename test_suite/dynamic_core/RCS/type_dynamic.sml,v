head	1.6;
access;
symbols
	MLWorks_21c0_1999_03_25:1.6
	MLWorks_20c1_1998_08_20:1.6
	MLWorks_20c0_1998_08_04:1.6
	MLWorks_20b2c2_1998_06_19:1.6
	MLWorks_20b2_Windows_1998_06_12:1.6
	MLWorks_20b1c1_1998_05_07:1.6
	MLWorks_20b0_1998_04_07:1.6
	MLWorks_20b0_1998_03_20:1.6
	MLWorks_20m2_1998_02_16:1.6
	MLWorks_20m1_1997_10_23:1.6
	MLWorks_11r1:1.5.8.1.1.1.1
	MLWorks_11c0_1997_09_09:1.5.8.1.1.1
	MLWorks_10r3:1.5.8.1.3
	MLWorks_10r2_551:1.5.8.1.2
	MLWorks_11:1.5.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.5.8.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.5.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.5.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.5.8
	MLWorks_BugFix_1997_04_24:1.5
	MLWorks_1_0_r2_Win32_1997_04_11:1.5
	MLWorks_1_0_r2_Unix_1997_04_04:1.5
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.5.6.1.1
	MLWorks_gui_1996_12_18:1.5.7
	MLWorks_1_0_Win32_1996_12_17:1.5.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.5.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.5.4.1
	MLWorks_1_0_Irix_1996_11_28:1.5.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.5.5
	MLWorks_1_0_Unix_1996_11_14:1.5.4
	MLWorks_Open_Beta2_1996_10_11:1.5.3
	MLWorks_License_dev:1.5.2
	MLWorks_1_open_beta_1996_09_13:1.5.1
	MLWorks_Open_Beta_1996_08_22:1.5
	MLWorks_Beta_1996_07_02:1.5
	MLWorks_Beta_1996_06_07:1.5
	MLWorks_Beta_1996_06_06:1.5
	MLWorks_Beta_1996_06_05:1.5
	MLWorks_Beta_1996_06_03:1.5
	MLWorks_Beta_1996_05_31:1.5
	MLWorks_Beta_1996_05_30:1.5;
locks; strict;
comment	@ * @;


1.6
date	97.05.28.12.14.54;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	96.05.23.10.29.11;	author matthew;	state Exp;
branches
	1.5.1.1
	1.5.2.1
	1.5.3.1
	1.5.4.1
	1.5.5.1
	1.5.6.1
	1.5.7.1
	1.5.8.1;
next	1.4;

1.4
date	96.05.22.11.08.58;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	96.05.01.17.20.32;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	95.07.28.14.28.51;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	95.01.10.11.26.54;	author matthew;	state Exp;
branches;
next	;

1.5.1.1
date	96.09.13.11.28.17;	author hope;	state Exp;
branches;
next	;

1.5.2.1
date	96.10.07.16.18.53;	author hope;	state Exp;
branches;
next	;

1.5.3.1
date	96.10.17.11.38.58;	author hope;	state Exp;
branches;
next	;

1.5.4.1
date	96.11.14.13.06.40;	author hope;	state Exp;
branches
	1.5.4.1.1.1;
next	;

1.5.4.1.1.1
date	96.11.28.15.16.21;	author hope;	state Exp;
branches;
next	;

1.5.5.1
date	96.11.22.18.24.08;	author hope;	state Exp;
branches;
next	;

1.5.6.1
date	96.12.17.18.02.11;	author hope;	state Exp;
branches
	1.5.6.1.1.1;
next	;

1.5.6.1.1.1
date	97.02.24.11.54.01;	author hope;	state Exp;
branches;
next	;

1.5.7.1
date	96.12.18.09.57.40;	author hope;	state Exp;
branches;
next	;

1.5.8.1
date	97.05.12.10.55.48;	author hope;	state Exp;
branches
	1.5.8.1.1.1
	1.5.8.1.2.1
	1.5.8.1.3.1;
next	;

1.5.8.1.1.1
date	97.07.28.18.38.16;	author daveb;	state Exp;
branches
	1.5.8.1.1.1.1.1;
next	;

1.5.8.1.1.1.1.1
date	97.10.07.12.03.20;	author jkbrook;	state Exp;
branches;
next	;

1.5.8.1.2.1
date	97.09.08.17.30.30;	author daveb;	state Exp;
branches;
next	;

1.5.8.1.3.1
date	97.09.09.14.28.34;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.6
log
@[Bug #30090]
Remove uses of MLWorks.IO
@
text
@(*

Result: OK
 
 * $Log: type_dynamic.sml,v $
 * Revision 1.5  1996/05/23  10:29:11  matthew
 * Change to Shell.Options.
 *
 * Revision 1.4  1996/05/22  11:08:58  daveb
 * Type dynamic is now disabled by default, so added a call to set the option.
 *
 * Revision 1.3  1996/05/01  17:20:32  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
 * Revision 1.2  1995/07/28  14:28:51  matthew
 * Changing type dynamic syntax.
 *
 * Revision 1.1  1995/01/10  11:26:54  matthew
 * new file
 *
 * Copyright (c) 1995 Harlequin Ltd.
 *)

Shell.Options.set (Shell.Options.Language.typeDynamic, true);

if #(type #(1) : int) = 1 then
  print"Dynamic type success\n"
else
  print"Dynamic type failure\n"

@


1.5
log
@Change to Shell.Options.
@
text
@d6 3
d27 1
a27 1
  MLWorks.IO.output (MLWorks.IO.std_out, "Dynamic type success\n")
d29 1
a29 1
  MLWorks.IO.output (MLWorks.IO.std_out, "Dynamic type failure\n");
@


1.5.8.1
log
@branched from 1.5
@
text
@a5 3
 * Revision 1.5  1996/05/23  10:29:11  matthew
 * Change to Shell.Options.
 *
@


1.5.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.5.8.1  1997/05/12  10:55:48  hope
 * branched from 1.5
 *
@


1.5.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.5.8.1  1997/05/12  10:55:48  hope
 * branched from 1.5
 *
@


1.5.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.5.8.1  1997/05/12  10:55:48  hope
 * branched from 1.5
 *
@


1.5.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 * Revision 1.5.8.1.1.1  1997/07/28  18:38:16  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.5.7.1
log
@branched from 1.5
@
text
@a5 3
 * Revision 1.5  1996/05/23  10:29:11  matthew
 * Change to Shell.Options.
 *
@


1.5.6.1
log
@branched from 1.5
@
text
@a5 3
 * Revision 1.5  1996/05/23  10:29:11  matthew
 * Change to Shell.Options.
 *
@


1.5.6.1.1.1
log
@branched from 1.5.6.1
@
text
@a5 3
 * Revision 1.5.6.1  1996/12/17  18:02:11  hope
 * branched from 1.5
 *
@


1.5.5.1
log
@branched from 1.5
@
text
@a5 3
 * Revision 1.5  1996/05/23  10:29:11  matthew
 * Change to Shell.Options.
 *
@


1.5.4.1
log
@branched from 1.5
@
text
@a5 3
 * Revision 1.5  1996/05/23  10:29:11  matthew
 * Change to Shell.Options.
 *
@


1.5.4.1.1.1
log
@branched from 1.5.4.1
@
text
@a5 3
 * Revision 1.5.4.1  1996/11/14  13:06:40  hope
 * branched from 1.5
 *
@


1.5.3.1
log
@branched from 1.5
@
text
@a5 3
 * Revision 1.5  1996/05/23  10:29:11  matthew
 * Change to Shell.Options.
 *
@


1.5.2.1
log
@branched from 1.5
@
text
@a5 3
 * Revision 1.5  1996/05/23  10:29:11  matthew
 * Change to Shell.Options.
 *
@


1.5.1.1
log
@branched from 1.5
@
text
@a5 3
 * Revision 1.5  1996/05/23  10:29:11  matthew
 * Change to Shell.Options.
 *
@


1.4
log
@Type dynamic is now disabled by default, so added a call to set the option.
@
text
@d6 3
d21 1
a21 1
Shell.Options.set (Shell.Options.Extension.typeDynamic, true);
@


1.3
log
@Fixing up after changes to toplevel visible string and io stuff
@
text
@d6 3
d18 6
a23 2
if #(type #(1) : int) = 1 then MLWorks.IO.output (MLWorks.IO.std_out,"Dynamic type success\n")
else MLWorks.IO.output (MLWorks.IO.std_out,"Dynamic type failure\n");
@


1.2
log
@Changing type dynamic syntax.
@
text
@d5 9
a13 4
$Log: type_dynamic.sml,v $
# Revision 1.1  1995/01/10  11:26:54  matthew
# new file
#
d15 2
a16 5
Copyright (c) 1995 Harlequin Ltd.
*)

if #(type #(1) : int) = 1 then output (std_out,"Dynamic type success\n")
else output (std_out,"Dynamic type failure\n");
@


1.1
log
@new file
@
text
@d6 3
d13 1
a13 1
if <<type <<1>> : int>> = 1 then output (std_out,"Dynamic type success\n")
@
