head	1.5;
access;
symbols
	MLWorks_21c0_1999_03_25:1.5
	MLWorks_20c1_1998_08_20:1.5
	MLWorks_20c0_1998_08_04:1.5
	MLWorks_20b2c2_1998_06_19:1.5
	MLWorks_20b2_Windows_1998_06_12:1.5
	MLWorks_20b1c1_1998_05_07:1.5
	MLWorks_20b0_1998_04_07:1.5
	MLWorks_20b0_1998_03_20:1.5
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.3.8.1.1.1.1
	MLWorks_11c0_1997_09_09:1.3.8.1.1.1
	MLWorks_10r3:1.3.8.1.3
	MLWorks_10r2_551:1.3.8.1.2
	MLWorks_11:1.3.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.8.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.3.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.8
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.6.1.1
	MLWorks_gui_1996_12_18:1.3.7
	MLWorks_1_0_Win32_1996_12_17:1.3.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3
	ML_beta_release_12/08/94:1.1
	ML_beta_release_03/08/94:1.1
	ML_revised_beta_release_25/05/94:1.1
	ML_final_beta_release_02/03/94:1.1
	mlworks-28-01-1994:1.1
	Release:1.1
	mlworks-beta-01-09-1993:1.1;
locks; strict;
comment	@ * @;


1.5
date	98.02.18.11.56.00;	author mitchell;	state Exp;
branches;
next	1.4;

1.4
date	97.05.28.12.16.14;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	96.05.08.12.19.51;	author jont;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1
	1.3.8.1;
next	1.2;

1.2
date	96.05.01.17.21.24;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	93.03.30.11.40.40;	author jont;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	93.03.30.11.40.40;	author jont;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.28.41;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.19.19;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.39.31;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.13.07.05;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.15.16.48;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.24.33;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.18.02.37;	author hope;	state Exp;
branches
	1.3.6.1.1.1;
next	;

1.3.6.1.1.1
date	97.02.24.11.54.32;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.18.09.58.05;	author hope;	state Exp;
branches;
next	;

1.3.8.1
date	97.05.12.10.56.22;	author hope;	state Exp;
branches
	1.3.8.1.1.1
	1.3.8.1.2.1
	1.3.8.1.3.1;
next	;

1.3.8.1.1.1
date	97.07.28.18.37.36;	author daveb;	state Exp;
branches
	1.3.8.1.1.1.1.1;
next	;

1.3.8.1.1.1.1.1
date	97.10.07.12.02.40;	author jkbrook;	state Exp;
branches;
next	;

1.3.8.1.2.1
date	97.09.08.17.29.47;	author daveb;	state Exp;
branches;
next	;

1.3.8.1.3.1
date	97.09.09.14.27.51;	author daveb;	state Exp;
branches;
next	;


desc
@@


1.5
log
@[Bug #30349]
Fix test to avoid non-unit sequence warning
@
text
@(*

Result: OK
 
$Log: vector_sub.sml,v $
 * Revision 1.4  1997/05/28  12:16:14  jont
 * [Bug #30090]
 * Remove uses of MLWorks.IO
 *
 * Revision 1.3  1996/05/08  12:19:51  jont
 * Vectors have moved
 *
 * Revision 1.2  1996/05/01  17:21:24  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
 * Revision 1.1  1993/03/30  11:40:40  jont
 * Initial revision
 *

Copyright (c) 1993 Harlequin Ltd.
*)

val a = MLWorks.Internal.Vector.vector[0,1,2,3,4,5,6,7,8,9]

val _ =
  if MLWorks.Internal.Vector.sub(a, 0) = 0 andalso
    MLWorks.Internal.Vector.sub(a, 1) = 1 andalso
    MLWorks.Internal.Vector.sub(a, 2) = 2 andalso
    MLWorks.Internal.Vector.sub(a, 3) = 3 andalso
    MLWorks.Internal.Vector.sub(a, 4) = 4 andalso
    MLWorks.Internal.Vector.sub(a, 5) = 5 andalso
    MLWorks.Internal.Vector.sub(a, 6) = 6 andalso
    MLWorks.Internal.Vector.sub(a, 7) = 7 andalso
    MLWorks.Internal.Vector.sub(a, 8) = 8 andalso
    MLWorks.Internal.Vector.sub(a, 9) = 9 then
    print"Pass1\n"
  else
    print"Fail1\n"

val _ =
  (ignore(MLWorks.Internal.Vector.sub(a, ~1));
   print"Fail2.1\n") handle MLWorks.Internal.Vector.Subscript =>
  ((ignore(MLWorks.Internal.Vector.sub(a, 10));
    print"Fail2.2\n") handle MLWorks.Internal.Vector.Subscript =>
   print"Pass2\n")
@


1.4
log
@[Bug #30090]
Remove uses of MLWorks.IO
@
text
@d6 4
d41 1
a41 1
  (MLWorks.Internal.Vector.sub(a, ~1);
d43 1
a43 1
  ((MLWorks.Internal.Vector.sub(a, 10);
@


1.3
log
@Vectors have moved
@
text
@d6 3
d32 1
a32 1
    MLWorks.IO.output(MLWorks.IO.std_out, "Pass1\n")
d34 1
a34 1
    MLWorks.IO.output(MLWorks.IO.std_out, "Fail1\n")
d38 1
a38 1
   MLWorks.IO.output(MLWorks.IO.std_out, "Fail2.1\n")) handle MLWorks.Internal.Vector.Subscript =>
d40 2
a41 2
    MLWorks.IO.output(MLWorks.IO.std_out, "Fail2.2\n")) handle MLWorks.Internal.Vector.Subscript =>
   MLWorks.IO.output(MLWorks.IO.std_out, "Pass2\n"))
@


1.3.8.1
log
@branched from 1.3
@
text
@a5 3
 * Revision 1.3  1996/05/08  12:19:51  jont
 * Vectors have moved
 *
@


1.3.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.3.8.1  1997/05/12  10:56:22  hope
 * branched from 1.3
 *
@


1.3.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.3.8.1  1997/05/12  10:56:22  hope
 * branched from 1.3
 *
@


1.3.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.3.8.1  1997/05/12  10:56:22  hope
 * branched from 1.3
 *
@


1.3.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 * Revision 1.3.8.1.1.1  1997/07/28  18:37:36  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3.7.1
log
@branched from 1.3
@
text
@a5 3
 * Revision 1.3  1996/05/08  12:19:51  jont
 * Vectors have moved
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a5 3
 * Revision 1.3  1996/05/08  12:19:51  jont
 * Vectors have moved
 *
@


1.3.6.1.1.1
log
@branched from 1.3.6.1
@
text
@a5 3
 * Revision 1.3.6.1  1996/12/17  18:02:37  hope
 * branched from 1.3
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a5 3
 * Revision 1.3  1996/05/08  12:19:51  jont
 * Vectors have moved
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a5 3
 * Revision 1.3  1996/05/08  12:19:51  jont
 * Vectors have moved
 *
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a5 3
 * Revision 1.3.4.1  1996/11/14  13:07:05  hope
 * branched from 1.3
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a5 3
 * Revision 1.3  1996/05/08  12:19:51  jont
 * Vectors have moved
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a5 3
 * Revision 1.3  1996/05/08  12:19:51  jont
 * Vectors have moved
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a5 3
 * Revision 1.3  1996/05/08  12:19:51  jont
 * Vectors have moved
 *
@


1.2
log
@Fixing up after changes to toplevel visible string and io stuff
@
text
@d6 3
d16 1
a16 1
val a = MLWorks.Vector.vector[0,1,2,3,4,5,6,7,8,9]
d19 10
a28 10
  if MLWorks.Vector.sub(a, 0) = 0 andalso
    MLWorks.Vector.sub(a, 1) = 1 andalso
    MLWorks.Vector.sub(a, 2) = 2 andalso
    MLWorks.Vector.sub(a, 3) = 3 andalso
    MLWorks.Vector.sub(a, 4) = 4 andalso
    MLWorks.Vector.sub(a, 5) = 5 andalso
    MLWorks.Vector.sub(a, 6) = 6 andalso
    MLWorks.Vector.sub(a, 7) = 7 andalso
    MLWorks.Vector.sub(a, 8) = 8 andalso
    MLWorks.Vector.sub(a, 9) = 9 then
d34 4
a37 4
  (MLWorks.Vector.sub(a, ~1);
   MLWorks.IO.output(MLWorks.IO.std_out, "Fail2.1\n")) handle MLWorks.Vector.Subscript =>
  ((MLWorks.Vector.sub(a, 10);
    MLWorks.IO.output(MLWorks.IO.std_out, "Fail2.2\n")) handle MLWorks.Vector.Subscript =>
@


1.1
log
@Initial revision
@
text
@d5 4
a8 1
$Log$
d26 1
a26 1
    output(std_out, "Pass1\n")
d28 1
a28 1
    output(std_out, "Fail1\n")
d32 1
a32 1
   output(std_out, "Fail2.1\n")) handle MLWorks.Vector.Subscript =>
d34 2
a35 2
    output(std_out, "Fail2.2\n")) handle MLWorks.Vector.Subscript =>
   output(std_out, "Pass2\n"))
@


1.1.1.1
log
@Fork for bug fixing
@
text
@d5 1
a5 4
$Log: vector_sub.sml,v $
Revision 1.1  1993/03/30  11:40:40  jont
Initial revision

@
