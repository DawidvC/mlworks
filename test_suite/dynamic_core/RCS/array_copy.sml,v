head	1.5;
access;
symbols
	MLWorks_21c0_1999_03_25:1.5
	MLWorks_20c1_1998_08_20:1.5
	MLWorks_20c0_1998_08_04:1.5
	MLWorks_20b2c2_1998_06_19:1.5
	MLWorks_20b2_Windows_1998_06_12:1.5
	MLWorks_20b1c1_1998_05_07:1.5
	MLWorks_20b0_1998_04_07:1.5
	MLWorks_20b0_1998_03_20:1.5
	MLWorks_20m2_1998_02_16:1.5
	MLWorks_20m1_1997_10_23:1.5
	MLWorks_11r1:1.4.8.1.1.1.1
	MLWorks_11c0_1997_09_09:1.4.8.1.1.1
	MLWorks_10r3:1.4.8.1.3
	MLWorks_10r2_551:1.4.8.1.2
	MLWorks_11:1.4.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.8.1
	MLWorks_20m0_1997_06_20:1.5
	MLWorks_1_0_r2c2_1997_06_14:1.4.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.8
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.6.1.1
	MLWorks_gui_1996_12_18:1.4.7
	MLWorks_1_0_Win32_1996_12_17:1.4.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.4.1
	MLWorks_1_0_Irix_1996_11_28:1.4.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.5
	MLWorks_1_0_Unix_1996_11_14:1.4.4
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.4
	MLWorks_Beta_1996_06_07:1.4
	MLWorks_Beta_1996_06_06:1.4
	MLWorks_Beta_1996_06_05:1.4
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4
	ML_beta_release_12/08/94:1.1
	ML_beta_release_03/08/94:1.1
	ML_revised_beta_release_25/05/94:1.1
	ML_final_beta_release_02/03/94:1.1
	mlworks-28-01-1994:1.1
	Release:1.1
	mlworks-beta-01-09-1993:1.1;
locks; strict;
comment	@ * @;


1.5
date	97.05.28.11.29.37;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	96.05.21.12.49.42;	author matthew;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1
	1.4.8.1;
next	1.3;

1.3
date	96.05.08.12.15.32;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	96.05.01.16.45.09;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	93.03.30.10.41.40;	author jont;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	93.03.30.10.41.40;	author jont;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.27.36;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.18.09;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.38.09;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.14.13.05.57;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	96.11.28.15.15.35;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.22.18.23.22;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.17.18.01.28;	author hope;	state Exp;
branches
	1.4.6.1.1.1;
next	;

1.4.6.1.1.1
date	97.02.24.11.53.09;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.18.09.56.57;	author hope;	state Exp;
branches;
next	;

1.4.8.1
date	97.05.12.10.54.50;	author hope;	state Exp;
branches
	1.4.8.1.1.1
	1.4.8.1.2.1
	1.4.8.1.3.1;
next	;

1.4.8.1.1.1
date	97.07.28.18.40.31;	author daveb;	state Exp;
branches
	1.4.8.1.1.1.1.1;
next	;

1.4.8.1.1.1.1.1
date	97.10.07.12.05.40;	author jkbrook;	state Exp;
branches;
next	;

1.4.8.1.2.1
date	97.09.08.17.32.49;	author daveb;	state Exp;
branches;
next	;

1.4.8.1.3.1
date	97.09.09.14.31.05;	author daveb;	state Exp;
branches;
next	;


desc
@@


1.5
log
@[Bug #30090]
Remove uses of MLWorks.IO
@
text
@(*

Result: OK
 
$Log: array_copy.sml,v $
 * Revision 1.4  1996/05/21  12:49:42  matthew
 * Exceptions changed
 *
 * Revision 1.3  1996/05/08  12:15:32  jont
 * Arrays and Vectors have moved to MLWorks.Internal
 *
 * Revision 1.2  1996/05/01  16:45:09  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
 * Revision 1.1  1993/03/30  10:41:40  jont
 * Initial revision
 *

Copyright (c) 1993 Harlequin Ltd.
*)

val a = MLWorks.Internal.ExtendedArray.arrayoflist[0,1,2,3,4,5,6,7,8,9]

val b = MLWorks.Internal.ExtendedArray.array(10, 0)

val _ = MLWorks.Internal.ExtendedArray.copy(a, 0, 4, b, 1)

val _ = case MLWorks.Internal.ExtendedArray.to_list b of
  [0,0,1,2,3,0,0,0,0,0] => print"Pass\n"
| _ => print"Fail\n"


val c = (MLWorks.Internal.ExtendedArray.copy(a, 3, 2, b, 1);
	 MLWorks.Internal.ExtendedArray.from_list []) 
  handle MLWorks.Internal.ExtendedArray.Subscript =>
  MLWorks.Internal.ExtendedArray.from_list[3,2,1]

val _ = case MLWorks.Internal.ExtendedArray.to_list c of
  [3,2,1] => print"Pass2\n"
| _ => print"Fail2\n"

val d = (MLWorks.Internal.ExtendedArray.copy(a, 3, 11, b ,1);
	 MLWorks.Internal.ExtendedArray.from_list []) 
  handle MLWorks.Internal.ExtendedArray.Subscript =>
  MLWorks.Internal.ExtendedArray.from_list[3,11,1]

val _ = case MLWorks.Internal.ExtendedArray.to_list d of
  [3,11, 1] => print"Pass3\n"
| _ => print"Fail3\n"

val e = (MLWorks.Internal.ExtendedArray.copy(a, ~3, 2, b, 1);
	 MLWorks.Internal.ExtendedArray.from_list []) 
  handle MLWorks.Internal.ExtendedArray.Subscript =>
  MLWorks.Internal.ExtendedArray.from_list[~3,2,1]

val _ = case MLWorks.Internal.ExtendedArray.to_list e of
  [~3,2, 1] => print"Pass4\n"
| _ => print"Fail4\n"

val f = (MLWorks.Internal.ExtendedArray.copy(a, 0, 9, b, 4);
	 MLWorks.Internal.ExtendedArray.from_list [])
  handle MLWorks.Internal.ExtendedArray.Subscript =>
  MLWorks.Internal.ExtendedArray.from_list[0,9,4]
  
val _ = case MLWorks.Internal.ExtendedArray.to_list f of
  [0, 9, 4] => print"Pass5\n"
| _ => print"Fail5\n"
@


1.4
log
@Exceptions changed
@
text
@d6 3
d29 2
a30 2
  [0,0,1,2,3,0,0,0,0,0] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass\n")
| _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail\n")
d39 2
a40 2
  [3,2,1] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass2\n")
| _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail2\n")
d48 2
a49 2
  [3,11, 1] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass3\n")
| _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail3\n")
d57 2
a58 2
  [~3,2, 1] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass4\n")
| _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail4\n")
d66 2
a67 2
  [0, 9, 4] => MLWorks.IO.output(MLWorks.IO.std_out, "Pass5\n")
| _ => MLWorks.IO.output(MLWorks.IO.std_out, "Fail5\n")
@


1.4.8.1
log
@branched from 1.4
@
text
@a5 3
 * Revision 1.4  1996/05/21  12:49:42  matthew
 * Exceptions changed
 *
@


1.4.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.4.8.1  1997/05/12  10:54:50  hope
 * branched from 1.4
 *
@


1.4.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.4.8.1  1997/05/12  10:54:50  hope
 * branched from 1.4
 *
@


1.4.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.4.8.1  1997/05/12  10:54:50  hope
 * branched from 1.4
 *
@


1.4.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 * Revision 1.4.8.1.1.1  1997/07/28  18:40:31  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.4.7.1
log
@branched from 1.4
@
text
@a5 3
 * Revision 1.4  1996/05/21  12:49:42  matthew
 * Exceptions changed
 *
@


1.4.6.1
log
@branched from 1.4
@
text
@a5 3
 * Revision 1.4  1996/05/21  12:49:42  matthew
 * Exceptions changed
 *
@


1.4.6.1.1.1
log
@branched from 1.4.6.1
@
text
@a5 3
 * Revision 1.4.6.1  1996/12/17  18:01:28  hope
 * branched from 1.4
 *
@


1.4.5.1
log
@branched from 1.4
@
text
@a5 3
 * Revision 1.4  1996/05/21  12:49:42  matthew
 * Exceptions changed
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a5 3
 * Revision 1.4  1996/05/21  12:49:42  matthew
 * Exceptions changed
 *
@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@a5 3
 * Revision 1.4.4.1  1996/11/14  13:05:57  hope
 * branched from 1.4
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a5 3
 * Revision 1.4  1996/05/21  12:49:42  matthew
 * Exceptions changed
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a5 3
 * Revision 1.4  1996/05/21  12:49:42  matthew
 * Exceptions changed
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a5 3
 * Revision 1.4  1996/05/21  12:49:42  matthew
 * Exceptions changed
 *
@


1.3
log
@Arrays and Vectors have moved to MLWorks.Internal
@
text
@d6 3
d31 3
a33 2
	 MLWorks.Internal.ExtendedArray.from_list []) handle MLWorks.Internal.ExtendedArray.Copy(i, j, k) =>
  MLWorks.Internal.ExtendedArray.from_list[i, j, k]
d40 3
a42 2
	 MLWorks.Internal.ExtendedArray.from_list []) handle MLWorks.Internal.ExtendedArray.Copy(i, j, k) =>
  MLWorks.Internal.ExtendedArray.from_list[i, j, k]
d49 3
a51 2
	 MLWorks.Internal.ExtendedArray.from_list []) handle MLWorks.Internal.ExtendedArray.Copy(i, j, k) =>
  MLWorks.Internal.ExtendedArray.from_list[i, j, k]
d58 3
a60 2
	 MLWorks.Internal.ExtendedArray.from_list []) handle MLWorks.Internal.ExtendedArray.Copy(i, j, k) =>
  MLWorks.Internal.ExtendedArray.from_list[i, j, k]
@


1.2
log
@Fixing up after changes to toplevel visible string and io stuff
@
text
@d6 3
d16 1
a16 1
val a = MLWorks.ExtendedArray.arrayoflist[0,1,2,3,4,5,6,7,8,9]
d18 1
a18 1
val b = MLWorks.ExtendedArray.array(10, 0)
d20 1
a20 1
val _ = MLWorks.ExtendedArray.copy(a, 0, 4, b, 1)
d22 1
a22 1
val _ = case MLWorks.ExtendedArray.to_list b of
d27 3
a29 3
val c = (MLWorks.ExtendedArray.copy(a, 3, 2, b, 1);
	 MLWorks.ExtendedArray.from_list []) handle MLWorks.ExtendedArray.Copy(i, j, k) =>
  MLWorks.ExtendedArray.from_list[i, j, k]
d31 1
a31 1
val _ = case MLWorks.ExtendedArray.to_list c of
d35 3
a37 3
val d = (MLWorks.ExtendedArray.copy(a, 3, 11, b ,1);
	 MLWorks.ExtendedArray.from_list []) handle MLWorks.ExtendedArray.Copy(i, j, k) =>
  MLWorks.ExtendedArray.from_list[i, j, k]
d39 1
a39 1
val _ = case MLWorks.ExtendedArray.to_list d of
d43 3
a45 3
val e = (MLWorks.ExtendedArray.copy(a, ~3, 2, b, 1);
	 MLWorks.ExtendedArray.from_list []) handle MLWorks.ExtendedArray.Copy(i, j, k) =>
  MLWorks.ExtendedArray.from_list[i, j, k]
d47 1
a47 1
val _ = case MLWorks.ExtendedArray.to_list e of
d51 3
a53 3
val f = (MLWorks.ExtendedArray.copy(a, 0, 9, b, 4);
	 MLWorks.ExtendedArray.from_list []) handle MLWorks.ExtendedArray.Copy(i, j, k) =>
  MLWorks.ExtendedArray.from_list[i, j, k]
d55 1
a55 1
val _ = case MLWorks.ExtendedArray.to_list f of
@


1.1
log
@Initial revision
@
text
@d5 4
a8 1
$Log$
d20 2
a21 2
  [0,0,1,2,3,0,0,0,0,0] => output(std_out, "Pass\n")
| _ => output(std_out, "Fail\n")
d29 2
a30 2
  [3,2,1] => output(std_out, "Pass2\n")
| _ => output(std_out, "Fail2\n")
d37 2
a38 2
  [3,11, 1] => output(std_out, "Pass3\n")
| _ => output(std_out, "Fail3\n")
d45 2
a46 2
  [~3,2, 1] => output(std_out, "Pass4\n")
| _ => output(std_out, "Fail4\n")
d53 2
a54 2
  [0, 9, 4] => output(std_out, "Pass5\n")
| _ => output(std_out, "Fail5\n")
@


1.1.1.1
log
@Fork for bug fixing
@
text
@d5 1
a5 4
$Log: array_copy.sml,v $
Revision 1.1  1993/03/30  10:41:40  jont
Initial revision

@
