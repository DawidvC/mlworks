head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_11r1:1.1.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.1.1.1.1.1
	MLWorks_10r3:1.1.1.1.3
	MLWorks_10r2_551:1.1.1.1.2
	MLWorks_11:1.1.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.1.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.1.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.1
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1;
locks; strict;
comment	@ *  @;


1.2
date	97.05.28.11.55.38;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	97.01.07.14.27.17;	author andreww;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.12.10.57.57;	author hope;	state Exp;
branches
	1.1.1.1.1.1
	1.1.1.1.2.1
	1.1.1.1.3.1;
next	;

1.1.1.1.1.1
date	97.07.28.18.40.06;	author daveb;	state Exp;
branches
	1.1.1.1.1.1.1.1;
next	;

1.1.1.1.1.1.1.1
date	97.10.07.12.05.14;	author jkbrook;	state Exp;
branches;
next	;

1.1.1.1.2.1
date	97.09.08.17.32.23;	author daveb;	state Exp;
branches;
next	;

1.1.1.1.3.1
date	97.09.09.14.30.36;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
[Bug #1818]
floatarray tests
@


1.2
log
@[Bug #30090]
Remove uses of MLWorks.IO
@
text
@(*

Result: OK
 
 * Revision Log:
 * -------------
 * $Log: floatarray_duplicate.sml,v $
 *  Revision 1.1  1997/01/07  14:27:17  andreww
 *  new unit
 *  [Bug #1818]
 *  floatarray tests
 *
 *
 *

Copyright (c) 1997 Harlequin Ltd.
*)

val a = MLWorks.Internal.FloatArray.arrayoflist(map real [0,1,2,3,4,5,6,7,8,9])

val b = MLWorks.Internal.FloatArray.duplicate a

fun eq(a, b) =
  let
    val l = MLWorks.Internal.FloatArray.length a
  in
    if l <> MLWorks.Internal.FloatArray.length b then
      (print"Fail on unequal length\n";
       false)
    else
      let
	fun compare 0 = true
	  | compare n =
	    let
	      val n' = n-1
	    in
	      (floor (MLWorks.Internal.FloatArray.sub(a, n'))) = 
                 (floor (MLWorks.Internal.FloatArray.sub(b, n'))) andalso
	      compare n'
	    end
      in
	compare l
      end
  end

val _ = print(if eq(a, b) andalso a <> b then "Pass\n" else "Fail\n")
@


1.1
log
@new unit
[Bug #1818]
floatarray tests
@
text
@d7 6
a12 1
 * $Log:,v $
d28 1
a28 1
      (MLWorks.IO.output(MLWorks.IO.std_out, "Fail on unequal length\n");
d46 1
a46 1
val _ = MLWorks.IO.output(MLWorks.IO.std_out, if eq(a, b) andalso a <> b then "Pass\n" else "Fail\n")
@


1.1.1.1
log
@branched from 1.1
@
text
@d7 1
a7 6
 * $Log: floatarray_duplicate.sml,v $
 *  Revision 1.1  1997/01/07  14:27:17  andreww
 *  new unit
 *  [Bug #1818]
 *  floatarray tests
 *
@


1.1.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a7 3
 *  Revision 1.1.1.1  1997/05/12  10:57:57  hope
 *  branched from 1.1
 *
@


1.1.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a7 3
 *  Revision 1.1.1.1  1997/05/12  10:57:57  hope
 *  branched from 1.1
 *
@


1.1.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a7 3
 *  Revision 1.1.1.1  1997/05/12  10:57:57  hope
 *  branched from 1.1
 *
@


1.1.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a7 3
 *  Revision 1.1.1.1.1.1  1997/07/28  18:40:06  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@
