head	1.3;
access;
symbols
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.3
	MLWorks_11r1:1.2.8.1.1.1.1
	MLWorks_11c0_1997_09_09:1.2.8.1.1.1
	MLWorks_10r3:1.2.8.1.3
	MLWorks_10r2_551:1.2.8.1.2
	MLWorks_11:1.2.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.2.8.1
	MLWorks_20m0_1997_06_20:1.3
	MLWorks_1_0_r2c2_1997_06_14:1.2.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.2.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.2.8
	MLWorks_BugFix_1997_04_24:1.2
	MLWorks_1_0_r2_Win32_1997_04_11:1.2
	MLWorks_1_0_r2_Unix_1997_04_04:1.2
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.2.6.1.1
	MLWorks_gui_1996_12_18:1.2.7
	MLWorks_1_0_Win32_1996_12_17:1.2.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.2.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.2.4.1
	MLWorks_1_0_Irix_1996_11_28:1.2.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.2.5
	MLWorks_1_0_Unix_1996_11_14:1.2.4
	MLWorks_Open_Beta2_1996_10_11:1.2.3
	MLWorks_License_dev:1.2.2
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2
	ML_beta_release_12/08/94:1.1
	ML_beta_release_03/08/94:1.1
	ML_revised_beta_release_25/05/94:1.1
	ML_final_beta_release_02/03/94:1.1
	mlworks-28-01-1994:1.1;
locks; strict;
comment	@ * @;


1.3
date	97.05.28.11.53.33;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	96.05.01.17.10.49;	author jont;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1
	1.2.5.1
	1.2.6.1
	1.2.7.1
	1.2.8.1;
next	1.1;

1.1
date	93.11.25.13.41.32;	author matthew;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.28.01;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.10.07.16.18.37;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.17.11.38.40;	author hope;	state Exp;
branches;
next	;

1.2.4.1
date	96.11.14.13.06.24;	author hope;	state Exp;
branches
	1.2.4.1.1.1;
next	;

1.2.4.1.1.1
date	96.11.28.15.16.04;	author hope;	state Exp;
branches;
next	;

1.2.5.1
date	96.11.22.18.23.51;	author hope;	state Exp;
branches;
next	;

1.2.6.1
date	96.12.17.18.01.55;	author hope;	state Exp;
branches
	1.2.6.1.1.1;
next	;

1.2.6.1.1.1
date	97.02.24.11.53.42;	author hope;	state Exp;
branches;
next	;

1.2.7.1
date	96.12.18.09.57.24;	author hope;	state Exp;
branches;
next	;

1.2.8.1
date	97.05.12.10.55.26;	author hope;	state Exp;
branches
	1.2.8.1.1.1
	1.2.8.1.2.1
	1.2.8.1.3.1;
next	;

1.2.8.1.1.1
date	97.07.28.18.38.21;	author daveb;	state Exp;
branches
	1.2.8.1.1.1.1.1;
next	;

1.2.8.1.1.1.1.1
date	97.10.07.12.03.25;	author jkbrook;	state Exp;
branches;
next	;

1.2.8.1.2.1
date	97.09.08.17.30.35;	author daveb;	state Exp;
branches;
next	;

1.2.8.1.3.1
date	97.09.09.14.28.39;	author daveb;	state Exp;
branches;
next	;


desc
@Test that side-effecting expressions aren't removed by the constant folder
@


1.3
log
@[Bug #30090]
Remove uses of MLWorks.IO
@
text
@(*

Result: OK
 
$Log: constant_fold.sml,v $
 * Revision 1.2  1996/05/01  17:10:49  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
 * Revision 1.1  1993/11/25  13:41:32  matthew
 * Initial revision
 *

Copyright (c) 1993 Harlequin Ltd.
*)

(* Test that side-effecting expressions aren't removed by the optimizer in this context *)

exception Test;

val result =
(((raise Test) - (raise Test)) handle Test => 10) = 10
andalso
(((raise Test) * 0) handle Test => 10) = 10
andalso
((0 * (raise Test)) handle Test => 10) = 10
andalso
(((raise Test) div (raise Test)) handle Test => 10) = 10
andalso
(((raise Test) mod 1) handle Test => 10) = 10
andalso
((0 mod (raise Test)) handle Test => 10) = 10
andalso
(((raise Test) mod 0) handle Test => 10 | Mod => 0) = 10
andalso
not (((raise Test) =  (raise Test)) handle Test => false)
andalso
(((raise Test) <>  (raise Test)) handle Test => true)

val _ = if result then print"Pass\n" else print"Fail\n"
@


1.2
log
@Fixing up after changes to toplevel visible string and io stuff
@
text
@d6 3
d39 1
a39 1
val _ = if result then MLWorks.IO.output (MLWorks.IO.std_out,"Pass\n") else MLWorks.IO.output (MLWorks.IO.std_out,"Fail\n");
@


1.2.8.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/05/01  17:10:49  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.2.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.2.8.1  1997/05/12  10:55:26  hope
 * branched from 1.2
 *
@


1.2.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.2.8.1  1997/05/12  10:55:26  hope
 * branched from 1.2
 *
@


1.2.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.2.8.1  1997/05/12  10:55:26  hope
 * branched from 1.2
 *
@


1.2.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 * Revision 1.2.8.1.1.1  1997/07/28  18:38:21  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.2.7.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/05/01  17:10:49  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.2.6.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/05/01  17:10:49  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.2.6.1.1.1
log
@branched from 1.2.6.1
@
text
@a5 3
 * Revision 1.2.6.1  1996/12/17  18:01:55  hope
 * branched from 1.2
 *
@


1.2.5.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/05/01  17:10:49  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.2.4.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/05/01  17:10:49  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.2.4.1.1.1
log
@branched from 1.2.4.1
@
text
@a5 3
 * Revision 1.2.4.1  1996/11/14  13:06:24  hope
 * branched from 1.2
 *
@


1.2.3.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/05/01  17:10:49  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/05/01  17:10:49  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/05/01  17:10:49  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.1
log
@Initial revision
@
text
@d6 3
d36 1
a36 1
val _ = if result then output (std_out,"Pass\n") else output (std_out,"Fail\n");
@
