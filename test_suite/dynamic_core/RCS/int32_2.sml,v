head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_11r1:1.2.8.1.1.1.1
	MLWorks_11c0_1997_09_09:1.2.8.1.1.1
	MLWorks_10r3:1.2.8.1.3
	MLWorks_10r2_551:1.2.8.1.2
	MLWorks_11:1.2.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.2.8.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.2.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.2.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.2.8
	MLWorks_BugFix_1997_04_24:1.2
	MLWorks_1_0_r2_Win32_1997_04_11:1.2
	MLWorks_1_0_r2_Unix_1997_04_04:1.2
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.2.6.1.1
	MLWorks_gui_1996_12_18:1.2.7
	MLWorks_1_0_Win32_1996_12_17:1.2.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.2.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.2.4.1
	MLWorks_1_0_Irix_1996_11_28:1.2.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.2.5
	MLWorks_1_0_Unix_1996_11_14:1.2.4
	MLWorks_Open_Beta2_1996_10_11:1.2.3
	MLWorks_License_dev:1.2.2
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ * @;


1.2
date	96.02.09.14.53.09;	author jont;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1
	1.2.5.1
	1.2.6.1
	1.2.7.1
	1.2.8.1;
next	1.1;

1.1
date	96.02.06.15.16.29;	author jont;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.27.56;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.10.07.16.18.31;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.17.11.38.33;	author hope;	state Exp;
branches;
next	;

1.2.4.1
date	96.11.14.13.06.18;	author hope;	state Exp;
branches
	1.2.4.1.1.1;
next	;

1.2.4.1.1.1
date	96.11.28.15.15.58;	author hope;	state Exp;
branches;
next	;

1.2.5.1
date	96.11.22.18.23.45;	author hope;	state Exp;
branches;
next	;

1.2.6.1
date	96.12.17.18.01.48;	author hope;	state Exp;
branches
	1.2.6.1.1.1;
next	;

1.2.6.1.1.1
date	97.02.24.11.53.32;	author hope;	state Exp;
branches;
next	;

1.2.7.1
date	96.12.18.09.57.18;	author hope;	state Exp;
branches;
next	;

1.2.8.1
date	97.05.12.10.55.20;	author hope;	state Exp;
branches
	1.2.8.1.1.1
	1.2.8.1.2.1
	1.2.8.1.3.1;
next	;

1.2.8.1.1.1
date	97.07.28.18.39.12;	author daveb;	state Exp;
branches
	1.2.8.1.1.1.1.1;
next	;

1.2.8.1.1.1.1.1
date	97.10.07.12.04.19;	author jkbrook;	state Exp;
branches;
next	;

1.2.8.1.2.1
date	97.09.08.17.31.27;	author daveb;	state Exp;
branches;
next	;

1.2.8.1.3.1
date	97.09.09.14.29.35;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.2
log
@Modifying now that divide overflow raise Overflow
@
text
@(*

Result: OK
 
$Log: int32_2.sml,v $
 *  Revision 1.1  1996/02/06  15:16:29  jont
 *  new unit
 *

Copyright (c) 1996 Harlequin Ltd.
*)

(* First some addition/subtraction tests, with overflow handling *)
val a : MLWorks.Internal.Types.int32 = 12
val b = a + 7
val c = b + ~4
val d = a - 3
val e = d - ~5
val f : MLWorks.Internal.Types.int32 = 0x40000000
val g = f + f handle Overflow => 3
val h = ~f
val i = h + h
val j = i - 1 handle Overflow => 1
val k = i + ~1 handle Overflow => 5
val l = f - h handle Overflow => 7

(* Now some multiplication overflow tests *)
val m = f * f handle Overflow => 11
val n : MLWorks.Internal.Types.int32 = 0x8000
val oo = n*2
val p = n * oo handle Overflow => 13
val q = n * ~oo
val r = oo * ~oo handle Overflow => 15

(* Now some division overflow tests *)
val s = n div 0 handle Div => 17
val t = q div 1
val u = q div ~1 handle Overflow => 19
val w = q div ~3

(* Now some mod overflow tests *)
val x = q mod 0 handle Mod => 23

(* Now some abs and ~ overflow tests *)
val y = abs q handle Overflow => 29
val z = ~q handle Overflow => 31
@


1.2.8.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/02/09  14:53:09  jont
 * Modifying now that divide overflow raise Overflow
 *
@


1.2.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.2.8.1  1997/05/12  10:55:20  hope
 * branched from 1.2
 *
@


1.2.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.2.8.1  1997/05/12  10:55:20  hope
 * branched from 1.2
 *
@


1.2.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.2.8.1  1997/05/12  10:55:20  hope
 * branched from 1.2
 *
@


1.2.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 * Revision 1.2.8.1.1.1  1997/07/28  18:39:12  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.2.7.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/02/09  14:53:09  jont
 * Modifying now that divide overflow raise Overflow
 *
@


1.2.6.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/02/09  14:53:09  jont
 * Modifying now that divide overflow raise Overflow
 *
@


1.2.6.1.1.1
log
@branched from 1.2.6.1
@
text
@a5 3
 * Revision 1.2.6.1  1996/12/17  18:01:48  hope
 * branched from 1.2
 *
@


1.2.5.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/02/09  14:53:09  jont
 * Modifying now that divide overflow raise Overflow
 *
@


1.2.4.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/02/09  14:53:09  jont
 * Modifying now that divide overflow raise Overflow
 *
@


1.2.4.1.1.1
log
@branched from 1.2.4.1
@
text
@a5 3
 * Revision 1.2.4.1  1996/11/14  13:06:18  hope
 * branched from 1.2
 *
@


1.2.3.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/02/09  14:53:09  jont
 * Modifying now that divide overflow raise Overflow
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/02/09  14:53:09  jont
 * Modifying now that divide overflow raise Overflow
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/02/09  14:53:09  jont
 * Modifying now that divide overflow raise Overflow
 *
@


1.1
log
@new unit
@
text
@d5 4
a8 1
$Log$
d20 1
a20 1
val g = f + f handle Sum => 3
d23 3
a25 3
val j = i - 1 handle Diff => 1
val k = i + ~1 handle Sum => 5
val l = f - h handle Diff => 7
d28 1
a28 1
val m = f * f handle Prod => 11
d31 1
a31 1
val p = n * oo handle Prod => 13
d33 1
a33 1
val r = oo * ~oo handle Prod => 15
d38 1
a38 1
val u = q div ~1 handle Div => 19
d43 4
@
