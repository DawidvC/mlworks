head	1.4;
access;
symbols
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.4
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.3.7.1.1.1.1
	MLWorks_11c0_1997_09_09:1.3.7.1.1.1
	MLWorks_10r3:1.3.7.1.3
	MLWorks_10r2_551:1.3.7.1.2
	MLWorks_11:1.3.7.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.7.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.3.7.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.7.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.7
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.5.1.1
	MLWorks_gui_1996_12_18:1.3.6
	MLWorks_1_0_Win32_1996_12_17:1.3.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.3.1
	MLWorks_1_0_Irix_1996_11_28:1.3.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.4
	MLWorks_1_0_Unix_1996_11_14:1.3.3
	MLWorks_Open_Beta2_1996_10_11:1.3.2
	MLWorks_License_dev:1.3.1
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2
	ML_beta_release_12/08/94:1.1
	ML_beta_release_03/08/94:1.1
	ML_revised_beta_release_25/05/94:1.1
	ML_final_beta_release_02/03/94:1.1
	mlworks-28-01-1994:1.1
	Release:1.1
	mlworks-beta-01-09-1993:1.1;
locks; strict;
comment	@ * @;


1.4
date	97.05.28.11.52.05;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	96.09.11.14.32.17;	author io;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1;
next	1.2;

1.2
date	96.05.01.17.09.30;	author jont;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	93.03.25.16.10.37;	author jont;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	93.03.25.16.10.37;	author jont;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.28.43;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	96.10.07.16.19.21;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.17.11.39.33;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.11.14.13.07.07;	author hope;	state Exp;
branches
	1.3.3.1.1.1;
next	;

1.3.3.1.1.1
date	96.11.28.15.16.51;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.22.18.24.36;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.12.17.18.02.40;	author hope;	state Exp;
branches
	1.3.5.1.1.1;
next	;

1.3.5.1.1.1
date	97.02.24.11.54.35;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.18.09.58.08;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	97.05.12.10.56.25;	author hope;	state Exp;
branches
	1.3.7.1.1.1
	1.3.7.1.2.1
	1.3.7.1.3.1;
next	;

1.3.7.1.1.1
date	97.07.28.18.37.40;	author daveb;	state Exp;
branches
	1.3.7.1.1.1.1.1;
next	;

1.3.7.1.1.1.1.1
date	97.10.07.12.02.44;	author jkbrook;	state Exp;
branches;
next	;

1.3.7.1.2.1
date	97.09.08.17.29.50;	author daveb;	state Exp;
branches;
next	;

1.3.7.1.3.1
date	97.09.09.14.27.55;	author daveb;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[Bug #30090]
Remove uses of MLWorks.IO
@
text
@(*

Result: OK
 
$Log: bytearray_tabulate.sml,v $
 * Revision 1.3  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
 * Revision 1.2  1996/05/01  17:09:30  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
 * Revision 1.1  1993/03/25  16:10:37  jont
 * Initial revision
 *

Copyright (c) 1993 Harlequin Ltd.
*)

fun f x = 10-x

val a = MLWorks.Internal.ByteArray.tabulate(10, f)

val b = MLWorks.Internal.ByteArray.arrayoflist[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

fun eq(a, b) =
  let
    val l = MLWorks.Internal.ByteArray.length a
  in
    if l <> MLWorks.Internal.ByteArray.length b then
      (print"Fail on unequal length\n";
       false)
    else
      let
	fun compare 0 = true
	  | compare n =
	    let
	      val n' = n-1
	    in
	      MLWorks.Internal.ByteArray.sub(a, n') = MLWorks.Internal.ByteArray.sub(b, n') andalso
	      compare n'
	    end
      in
	compare l
      end
  end

val _ = print(if eq(a, b) then "Pass\n" else "Fail\n")
@


1.3
log
@[Bug #1603]
convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
@
text
@d6 4
d31 1
a31 1
      (MLWorks.IO.output(MLWorks.IO.std_out, "Fail on unequal length\n");
d48 1
a48 1
val _ = MLWorks.IO.output(MLWorks.IO.std_out, if eq(a, b) then "Pass\n" else "Fail\n")
@


1.3.7.1
log
@branched from 1.3
@
text
@a5 4
 * Revision 1.3  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.3.7.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
 * Revision 1.3.7.1  1997/05/12  10:56:25  hope
 * branched from 1.3
 *
@


1.3.7.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
 * Revision 1.3.7.1  1997/05/12  10:56:25  hope
 * branched from 1.3
 *
@


1.3.7.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
 * Revision 1.3.7.1  1997/05/12  10:56:25  hope
 * branched from 1.3
 *
@


1.3.7.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
 * Revision 1.3.7.1.1.1  1997/07/28  18:37:40  daveb
 * branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a5 4
 * Revision 1.3  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a5 4
 * Revision 1.3  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.3.5.1.1.1
log
@branched from 1.3.5.1
@
text
@a5 3
 * Revision 1.3.5.1  1996/12/17  18:02:40  hope
 * branched from 1.3
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a5 4
 * Revision 1.3  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a5 4
 * Revision 1.3  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.3.3.1.1.1
log
@branched from 1.3.3.1
@
text
@a5 3
 * Revision 1.3.3.1  1996/11/14  13:07:07  hope
 * branched from 1.3
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a5 4
 * Revision 1.3  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a5 4
 * Revision 1.3  1996/09/11  14:32:17  io
 * [Bug #1603]
 * convert MLWorks.ByteArray to MLWorks.Internal.ByteArray or equivalent basis functions
 *
@


1.2
log
@Fixing up after changes to toplevel visible string and io stuff
@
text
@d6 3
d18 1
a18 1
val a = MLWorks.ByteArray.tabulate(10, f)
d20 1
a20 1
val b = MLWorks.ByteArray.arrayoflist[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
d24 1
a24 1
    val l = MLWorks.ByteArray.length a
d26 1
a26 1
    if l <> MLWorks.ByteArray.length b then
d36 1
a36 1
	      MLWorks.ByteArray.sub(a, n') = MLWorks.ByteArray.sub(b, n') andalso
@


1.2.1.1
log
@branched from 1.2
@
text
@a5 3
 * Revision 1.2  1996/05/01  17:09:30  jont
 * Fixing up after changes to toplevel visible string and io stuff
 *
@


1.1
log
@Initial revision
@
text
@d5 4
a8 1
$Log$
d24 1
a24 1
      (output(std_out, "Fail on unequal length\n");
d41 1
a41 1
val _ = output(std_out, if eq(a, b) then "Pass\n" else "Fail\n")
@


1.1.1.1
log
@Fork for bug fixing
@
text
@d5 1
a5 4
$Log: bytearray_tabulate.sml,v $
Revision 1.1  1993/03/25  16:10:37  jont
Initial revision

@
