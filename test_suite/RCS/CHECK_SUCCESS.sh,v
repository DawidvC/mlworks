head	1.9;
access;
symbols
	MLWorks_21c0_1999_03_25:1.9
	MLWorks_20c1_1998_08_20:1.9
	MLWorks_20c0_1998_08_04:1.8
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.8
	MLWorks_20b1c1_1998_05_07:1.7
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.7
	MLWorks_20m1_1997_10_23:1.6
	MLWorks_11r1:1.3.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.3.1.1.1.1
	MLWorks_10r3:1.3.1.1.3
	MLWorks_10r2_551:1.3.1.1.2
	MLWorks_11:1.3.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.3.1.1
	MLWorks_20m0_1997_06_20:1.5
	MLWorks_1_0_r2c2_1997_06_14:1.3.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.3.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.3.1
	MLWorks_BugFix_1997_04_24:1.3
	MLWorks_1_0_r2_Win32_1997_04_11:1.3
	MLWorks_1_0_r2_Unix_1997_04_04:1.3
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.2.6.1.1
	MLWorks_gui_1996_12_18:1.2.7
	MLWorks_1_0_Win32_1996_12_17:1.2.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.2.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.2.4.1
	MLWorks_1_0_Irix_1996_11_28:1.2.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.2.5
	MLWorks_1_0_Unix_1996_11_14:1.2.4
	MLWorks_Open_Beta2_1996_10_11:1.2.3
	MLWorks_License_dev:1.2.2
	MLWorks_1_open_beta_1996_09_13:1.2.1
	MLWorks_Open_Beta_1996_08_22:1.2
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@# @;


1.9
date	98.08.11.15.17.09;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	98.06.09.10.33.36;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	97.11.19.17.46.47;	author daveb;	state Exp;
branches;
next	1.6;

1.6
date	97.08.13.15.25.47;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	97.05.30.17.24.48;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	97.05.07.16.54.22;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	96.12.20.17.05.13;	author jont;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	96.05.23.10.39.06;	author jont;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1
	1.2.5.1
	1.2.6.1
	1.2.7.1;
next	1.1;

1.1
date	96.05.22.15.44.11;	author jont;	state Exp;
branches;
next	;

1.2.1.1
date	96.09.13.11.27.17;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.10.07.16.17.50;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.10.17.11.37.45;	author hope;	state Exp;
branches;
next	;

1.2.4.1
date	96.11.14.13.05.37;	author hope;	state Exp;
branches
	1.2.4.1.1.1;
next	;

1.2.4.1.1.1
date	96.11.28.15.15.15;	author hope;	state Exp;
branches;
next	;

1.2.5.1
date	96.11.22.18.23.04;	author hope;	state Exp;
branches;
next	;

1.2.6.1
date	96.12.17.18.01.07;	author hope;	state Exp;
branches
	1.2.6.1.1.1;
next	;

1.2.6.1.1.1
date	97.02.24.11.52.49;	author hope;	state Exp;
branches;
next	;

1.2.7.1
date	96.12.18.09.56.30;	author hope;	state Exp;
branches;
next	;

1.3.1.1
date	97.05.12.10.54.29;	author hope;	state Exp;
branches
	1.3.1.1.1.1
	1.3.1.1.2.1
	1.3.1.1.3.1;
next	;

1.3.1.1.1.1
date	97.07.28.18.37.22;	author daveb;	state Exp;
branches
	1.3.1.1.1.1.1.1;
next	;

1.3.1.1.1.1.1.1
date	97.10.07.12.02.26;	author jkbrook;	state Exp;
branches;
next	;

1.3.1.1.2.1
date	97.09.08.17.29.31;	author daveb;	state Exp;
branches;
next	;

1.3.1.1.3.1
date	97.09.09.14.27.28;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.9
log
@Fix problems checking result status on successful tests
@
text
@#!/bin/sh
# 
# $Log: CHECK_SUCCESS.sh,v $
# Revision 1.8  1998/06/09  10:33:36  jont
# [Bug #70130]
# Make sure checks for error and warning can't be triggered by correct code
#
# Revision 1.7  1997/11/19  17:46:47  daveb
# [Bug #30323]
#
# Revision 1.6  1997/08/13  15:25:47  jont
# [Bug #30151]
# Modify to work with installed MLWorks as well
#
# Revision 1.5  1997/05/30  17:24:48  daveb
# [Bug #30090]
# Error messages are now found on stderr, so COMPILE_FILE keeps that around
# in a .err file, and we search for errors there.
#
# Revision 1.4  1997/05/07  16:54:22  jont
# [Bug #20032]
# Prefix correct behaviour message with test filename
#
# Revision 1.3  1996/12/20  17:05:13  jont
# [Bug #1879]
# Remove default setting of ARCH_OS
#
# Revision 1.2  1996/05/23  10:39:06  jont
# Improvements to make it work on NT
#
# Revision 1.1  1996/05/22  15:44:11  jont
# new unit
#
# Revision 1.17  1996/01/09  12:47:02  matthew
# Renaming motif.img to gui.img
#
# Revision 1.16  1995/09/06  16:36:10  io
# use rts/bin/$ARCH/$OS/main to help multiarch testing
#
# Revision 1.15  1995/08/29  15:16:55  daveb
# Compiler faults and intolerable signals are now reported separately.
#
# Revision 1.14  1995/08/21  10:01:56  daveb
# Remove any existing .out file before run (we may not have
# permission to overwrite it, but we do have delete permission
# on the directory).
#
# Revision 1.13  1995/08/15  11:51:09  daveb
# Changed default SRC_DIR to /u/sml ...
#
# Revision 1.12  1995/03/15  14:21:38  jont
# Pass -dir parameter through
#
# Revision 1.11  1995/02/09  15:17:35  jont
# Modify to use new image directory structure
#
# Revision 1.10  1994/10/10  17:27:41  daveb
# Added check for the success status of the compile command itself.
#
# Revision 1.9  1994/09/15  13:31:21  daveb
# Added "Intolerable signal" to the list of strings to check for.
#
# Revision 1.8  1994/06/17  12:04:58  daveb
# Changed default SRC_DIR to /usr/sml ...
#
# Revision 1.7  1994/05/03  14:23:08  daveb
# Fixed erroneous early exit.  It now returns a non-zero status if any
# of its arguments fail.
#
# Revision 1.6  1994/03/15  14:47:32  jont
# Change default source directory to /usr/users/sml/MLW/src
#
# Revision 1.5  1993/12/16  11:31:52  nickh
# The string "error" occurs correctly in at least one test. We check instead
# for "error:".
#
# Revision 1.4  1993/09/28  14:14:51  daveb
# Merged in bug fix.
#
# Revision 1.3.1.2  1993/09/27  14:35:54  daveb
# Ensured that messages of failure all contain the word "failed".
#
# Revision 1.3.1.1  1993/08/29  12:12:19  jont
# Fork for bug fixing
#
# Revision 1.3  1993/08/29  12:12:19  daveb
# Added check for compiler faults.
#
# Revision 1.2  1993/07/12  12:23:09  daveb
# Made error check search for 'Uncaught exception' as well as error.
#
# Revision 1.1  1993/04/14  16:43:37  daveb
# Initial revision
#
#
# Copyright Harlequin Ltd. 1992.
#

SRCDIR=/u/sml/MLW/src
KEEP=0
ARCH_OS_DIR=""

IMAGE=guib.img

installed=""

usage='Usage: CHECK_SUCCESS \[-src \<source dir\>\] \[-dir \<architecture/OS\>\] \[-installed\] \<file\>'

while [ $# -gt 0 ]
do
  case $1 in
    -keep)
      shift
      KEEP=1;;
    -src)
      shift
      if [ "$1" != "" ]
      then
        SRCDIR=$1
	shift
      else
  	echo $usage
	exit 1
      fi;;
    -dir)
      shift
      if [ "$1" != "" ]
      then
        ARCH_OS_DIR=$1
        shift
      else
        echo $usage
        exit 1
      fi;;
    -installed)
      installed="-installed"
      shift;;
    *)
      break;;
  esac
done

if [ "$ARCH_OS_DIR" = "" ]
then
  echo "parameter -dir missing"
  exit 1
fi

OS_NAME=`basename $ARCH_OS_DIR`

NULL_FILE=/dev/null
RTS_NAME=main

if [ "$OS_NAME" = "NT" -o "$OS_NAME" = "Win95" ]
then
  RTS_NAME=main.exe
  NULL_FILE=nul:
  OS_TYPE=Win32
else
  OS_TYPE=Unix
fi

if [ $# -eq 0 ]
then
  echo $usage
  exit 1
fi

if [ "$installed" = "-installed" ]
then
  if [ "$OS_TYPE" = "Unix" ]
  then
    if [ ! -x $SRCDIR/bin/mlrun ]
    then
      echo Can\'t find $SRCDIR/bin/mlrun
      exit 1
    fi
  else
    if [ ! -x $SRCDIR/bin/main.exe ]
    then
      echo Can\'t find $SRCDIR/bin/main.exe
      exit 1
    fi
  fi
  if [ ! -r $SRCDIR/images/$IMAGE ]
  then
    echo Can\'t find $SRCDIR/images/$IMAGE
    exit 1
  fi
else
  if [ ! -x $SRCDIR/rts/bin/$ARCH_OS_DIR/$RTS_NAME ]
  then
    echo Can\'t find $SRCDIR/rts/bin/$ARCH_OS_DIR/$RTS_NAME
    exit 1
  fi
  if [ ! -r $SRCDIR/images/$ARCH_OS_DIR/$IMAGE ]
  then
    echo Can\'t find $SRCDIR/images/$ARCH_OS_DIR/$IMAGE
    exit 1
  fi
fi

STATUS=0
for i in $*
do
  COMPILE_FAILED=0
  if [ ! -r $i ]
  then
    echo Can\'t find $i
  elif egrep Result: $i 1> $NULL_FILE 2>&1
  then
    ROOT_FILE=`dirname $i`/`basename $i .sml`
    OUT_FILE=$ROOT_FILE.out
    ERR_FILE=$ROOT_FILE.err
    rm -f $OUT_FILE
    if (COMPILE_FILE.sh -src $SRCDIR -dir $ARCH_OS_DIR $installed $i 1> $OUT_FILE) 1> $NULL_FILE 2>&1
    then
      if egrep 'compiler fault|Intolerable signal' $ERR_FILE 1> $NULL_FILE 2>&1
      then
        echo ${i}: test failed, compiler fault \(see $ERR_FILE\).
	STATUS=3
      elif egrep ': error:|Uncaught exception' $ERR_FILE 1> $NULL_FILE 2>&1
      then
	if egrep Result: $i | egrep FAIL 1> $NULL_FILE 2>&1
	then
	  echo ${i}: test succeeded.
	else
	  echo ${i}: test failed, unexpected error \(see $ERR_FILE\).
	  STATUS=1
	fi
      elif egrep ': warning:' $ERR_FILE 1> $NULL_FILE 2>&1
      then
	if egrep Result: $i | egrep WARNING 1> $NULL_FILE 2>&1
	then
	  echo ${i}: test succeeded.
	else
	  echo ${i}: test failed, unexpected warning \(see $ERR_FILE\).
	  STATUS=1
	fi
      else
	if egrep Result: $i | egrep OK 1> $NULL_FILE 2>&1
	then
	  echo ${i}: test succeeded.
	elif  egrep Result: $i | egrep FAIL 1> $NULL_FILE 2>&1
	then
	  echo ${i}: test failed, error expected \(see $OUT_FILE\).
	  STATUS=1
	elif egrep Result: $i | egrep WARNING 1> $NULL_FILE 2>&1
	then
	  echo ${i}: test failed, warning expected \(see $OUT_FILE\).
	  STATUS=1
	elif egrep Result: $i | egrep INTERPRETATION 1> $NULL_FILE 2>&1
	then
	  echo ${i}: test succeeded.
	else
	  echo ${i}: test failed, bad result status.
	  STATUS=2
        fi
      fi
      if egrep Result: $i | egrep INTERPRETATION 1> $NULL_FILE 2>&1
      then
	echo ${i}: The correct behaviour in this case is open to question.
      fi
    else
      echo ${i}: test failed: compiler crashed
      STATUS=3
    fi
  else
    echo ${i}: test failed, missing result status.
    STATUS=2
  fi
  if [ $STATUS -eq 0 ]
  then
    rm $ERR_FILE
    if [ $KEEP -eq 0 ]
    then
      rm $OUT_FILE
    fi
  fi
done
exit $STATUS
@


1.8
log
@[Bug #70130]
Make sure checks for error and warning can't be triggered by correct code
@
text
@d4 4
d244 1
a244 1
	elif egrep FAIL $i 1> $NULL_FILE 2>&1
d252 3
@


1.7
log
@[Bug #30323]
@
text
@d4 3
d218 1
a218 1
      elif egrep 'error:|Uncaught exception' $ERR_FILE 1> $NULL_FILE 2>&1
d220 1
a220 1
	if egrep FAIL $i 1> $NULL_FILE 2>&1
d227 1
a227 1
      elif egrep warning $ERR_FILE 1> $NULL_FILE 2>&1
d229 1
a229 1
	if egrep WARNING $i 1> $NULL_FILE 2>&1
d237 1
a237 1
	if egrep OK $i 1> $NULL_FILE 2>&1
d244 1
a244 1
	elif egrep WARNING $i 1> $NULL_FILE 2>&1
d253 1
a253 1
      if egrep INTERPRETATION $i 1> $NULL_FILE 2>&1
@


1.6
log
@[Bug #30151]
Modify to work with installed MLWorks as well
@
text
@d4 4
d96 2
d178 1
a178 1
  if [ ! -r $SRCDIR/images/gui.img ]
d180 1
a180 1
    echo Can\'t find $SRCDIR/images/gui.img
d189 1
a189 1
  if [ ! -r $SRCDIR/images/$ARCH_OS_DIR/gui.img ]
d191 1
a191 1
    echo Can\'t find $SRCDIR/images/$ARCH_OS_DIR/gui.img
@


1.5
log
@[Bug #30090]
Error messages are now found on stderr, so COMPILE_FILE keeps that around
in a .err file, and we search for errors there.
@
text
@d4 5
d92 3
a94 1
usage='Usage: COMPILE_FILE \[-src \<source dir\>\] \[-dir \<architecture/OS\>\] \<file\>'
d122 3
d145 3
d156 1
a156 1
if [ ! -x $SRCDIR/rts/bin/$ARCH_OS_DIR/$RTS_NAME ]
d158 30
a187 8
  echo Can\'t find $SRCDIR/rts/bin/$ARCH_OS_DIR/$RTS_NAME
  exit 1
fi

if [ ! -r $SRCDIR/images/$ARCH_OS_DIR/gui.img ]
then
  echo Can\'t find $SRCDIR/images/$ARCH_OS_DIR/gui.img
  exit 1
d203 1
a203 1
    if (COMPILE_FILE.sh -src $SRCDIR -dir $ARCH_OS_DIR $i 1> $OUT_FILE) 1> $NULL_FILE 2>&1
@


1.4
log
@[Bug #20032]
Prefix correct behaviour message with test filename
@
text
@d4 4
d166 1
d170 1
a170 1
      if egrep 'compiler fault|Intolerable signal' $OUT_FILE 1> $NULL_FILE 2>&1
d172 1
a172 1
        echo ${i}: test failed, compiler fault \(see $OUT_FILE\).
d174 1
a174 1
      elif egrep 'error:|Uncaught exception' $OUT_FILE 1> $NULL_FILE 2>&1
d180 1
a180 1
	  echo ${i}: test failed, unexpected error \(see $OUT_FILE\).
d183 1
a183 1
      elif egrep warning $OUT_FILE 1> $NULL_FILE 2>&1
d189 1
a189 1
	  echo ${i}: test failed, unexpected warning \(see $OUT_FILE\).
d221 1
a221 1
  if [ $STATUS -eq 0 -a $KEEP -eq 0 ]
d223 5
a227 1
    rm $OUT_FILE
@


1.3
log
@[Bug #1879]
Remove default setting of ARCH_OS
@
text
@d4 4
d206 1
a206 1
	echo The correct behaviour in this case is open to question.
@


1.3.1.1
log
@branched from 1.3
@
text
@a3 4
# Revision 1.3  1996/12/20  17:05:13  jont
# [Bug #1879]
# Remove default setting of ARCH_OS
#
@


1.3.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a3 3
# Revision 1.3.1.1  1997/05/12  10:54:29  hope
# branched from 1.3
#
@


1.3.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a3 3
# Revision 1.3.1.1  1997/05/12  10:54:29  hope
# branched from 1.3
#
@


1.3.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a3 3
# Revision 1.3.1.1  1997/05/12  10:54:29  hope
# branched from 1.3
#
@


1.3.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a3 3
# Revision 1.3.1.1.1.1  1997/07/28  18:37:22  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.2
log
@Improvements to make it work on NT
@
text
@d4 3
d77 1
a77 1
ARCH_OS_DIR=SPARC/SunOS
d111 6
@


1.2.7.1
log
@branched from 1.2
@
text
@a3 3
# Revision 1.2  1996/05/23  10:39:06  jont
# Improvements to make it work on NT
#
@


1.2.6.1
log
@branched from 1.2
@
text
@a3 3
# Revision 1.2  1996/05/23  10:39:06  jont
# Improvements to make it work on NT
#
@


1.2.6.1.1.1
log
@branched from 1.2.6.1
@
text
@a3 3
# Revision 1.2.6.1  1996/12/17  18:01:07  hope
# branched from 1.2
#
@


1.2.5.1
log
@branched from 1.2
@
text
@a3 3
# Revision 1.2  1996/05/23  10:39:06  jont
# Improvements to make it work on NT
#
@


1.2.4.1
log
@branched from 1.2
@
text
@a3 3
# Revision 1.2  1996/05/23  10:39:06  jont
# Improvements to make it work on NT
#
@


1.2.4.1.1.1
log
@branched from 1.2.4.1
@
text
@a3 3
# Revision 1.2.4.1  1996/11/14  13:05:37  hope
# branched from 1.2
#
@


1.2.3.1
log
@branched from 1.2
@
text
@a3 3
# Revision 1.2  1996/05/23  10:39:06  jont
# Improvements to make it work on NT
#
@


1.2.2.1
log
@branched from 1.2
@
text
@a3 3
# Revision 1.2  1996/05/23  10:39:06  jont
# Improvements to make it work on NT
#
@


1.2.1.1
log
@branched from 1.2
@
text
@a3 3
# Revision 1.2  1996/05/23  10:39:06  jont
# Improvements to make it work on NT
#
@


1.1
log
@new unit
@
text
@d3 4
a6 1
# $Log: CHECK_SUCCESS,v $
d109 11
d126 1
a126 1
if [ ! -x $SRCDIR/rts/bin/$ARCH_OS_DIR/main ]
d128 1
a128 1
  echo Can\'t find $SRCDIR/rts/bin/$ARCH_OS_DIR/main
d145 1
a145 1
  elif egrep Result: $i 1> /dev/null 2>&1
d150 1
a150 1
    if (COMPILE_FILE.sh -src $SRCDIR -dir $ARCH_OS_DIR $i 1> $OUT_FILE) 1> /dev/null 2>&1
d152 1
a152 1
      if egrep 'compiler fault|Intolerable signal' $OUT_FILE 1> /dev/null 2>&1
d156 1
a156 1
      elif egrep 'error:|Uncaught exception' $OUT_FILE 1> /dev/null 2>&1
d158 1
a158 1
	if egrep FAIL $i 1> /dev/null 2>&1
d165 1
a165 1
      elif egrep warning $OUT_FILE 1> /dev/null 2>&1
d167 1
a167 1
	if egrep WARNING $i 1> /dev/null 2>&1
d175 1
a175 1
	if egrep OK $i 1> /dev/null 2>&1
d178 1
a178 1
	elif egrep FAIL $i 1> /dev/null 2>&1
d182 1
a182 1
	elif egrep WARNING $i 1> /dev/null 2>&1
d191 1
a191 1
      if egrep INTERPRETATION $i 1> /dev/null 2>&1
@
