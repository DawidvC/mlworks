head	1.19;
access;
symbols
	MLWorks_21c0_1999_03_25:1.19
	MLWorks_20c1_1998_08_20:1.19
	MLWorks_20c0_1998_08_04:1.19
	MLWorks_20b2c2_1998_06_19:1.19
	MLWorks_20b2_Windows_1998_06_12:1.19
	MLWorks_20b1c1_1998_05_07:1.19
	MLWorks_20b0_1998_04_07:1.19
	MLWorks_20b0_1998_03_20:1.19
	MLWorks_20m2_1998_02_16:1.19
	MLWorks_20m1_1997_10_23:1.19
	MLWorks_11r1:1.19.8.1.1.1.1
	MLWorks_11c0_1997_09_09:1.19.8.1.1.1
	MLWorks_10r3:1.19.8.1.3
	MLWorks_10r2_551:1.19.8.1.2
	MLWorks_11:1.19.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.19.8.1
	MLWorks_20m0_1997_06_20:1.19
	MLWorks_1_0_r2c2_1997_06_14:1.19.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.19.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.19.8
	MLWorks_BugFix_1997_04_24:1.19
	MLWorks_1_0_r2_Win32_1997_04_11:1.19
	MLWorks_1_0_r2_Unix_1997_04_04:1.19
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.19.6.1.1
	MLWorks_gui_1996_12_18:1.19.7
	MLWorks_1_0_Win32_1996_12_17:1.19.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.19.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.19.4.1
	MLWorks_1_0_Irix_1996_11_28:1.19.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.19.5
	MLWorks_1_0_Unix_1996_11_14:1.19.4
	MLWorks_Open_Beta2_1996_10_11:1.19.3
	MLWorks_License_dev:1.19.2
	MLWorks_1_open_beta_1996_09_13:1.19.1
	MLWorks_Open_Beta_1996_08_22:1.19
	MLWorks_Beta_1996_07_02:1.19
	MLWorks_Beta_1996_06_07:1.19
	MLWorks_Beta_1996_06_06:1.19
	MLWorks_Beta_1996_06_05:1.19
	MLWorks_Beta_1996_06_03:1.19
	MLWorks_Beta_1996_05_31:1.19
	MLWorks_Beta_1996_05_30:1.19
	ML_beta_release_12/08/94:1.12
	ML_beta_release_03/08/94:1.12
	ML_revised_beta_release_25/05/94:1.11
	ML_final_beta_release_02/03/94:1.10
	mlworks-28-01-1994:1.10
	Release:1.9
	mlworks-beta-01-09-1993:1.9
	MLWorks-1-0-4-29/01/1993:1.6
	MLWorks-1-0-3-21/12/1992:1.1;
locks; strict;
comment	@# @;


1.19
date	96.05.22.13.49.14;	author jont;	state Exp;
branches
	1.19.1.1
	1.19.2.1
	1.19.3.1
	1.19.4.1
	1.19.5.1
	1.19.6.1
	1.19.7.1
	1.19.8.1;
next	1.18;

1.18
date	96.03.26.12.22.17;	author matthew;	state Exp;
branches;
next	1.17;

1.17
date	96.01.09.12.48.09;	author matthew;	state Exp;
branches;
next	1.16;

1.16
date	95.08.15.18.15.50;	author daveb;	state Exp;
branches;
next	1.15;

1.15
date	95.08.15.11.51.22;	author daveb;	state Exp;
branches;
next	1.14;

1.14
date	95.03.15.14.20.35;	author jont;	state Exp;
branches;
next	1.13;

1.13
date	95.02.09.15.15.51;	author jont;	state Exp;
branches;
next	1.12;

1.12
date	94.06.17.12.09.32;	author daveb;	state Exp;
branches;
next	1.11;

1.11
date	94.03.15.14.48.27;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	93.09.28.14.17.25;	author daveb;	state Exp;
branches;
next	1.9;

1.9
date	93.04.14.16.21.33;	author daveb;	state Exp;
branches
	1.9.1.1;
next	1.8;

1.8
date	93.04.14.14.53.00;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	93.04.14.13.33.01;	author matthew;	state Exp;
branches;
next	1.6;

1.6
date	93.01.27.11.41.55;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	93.01.27.11.22.22;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	93.01.22.15.21.59;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	93.01.07.18.06.27;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	93.01.06.16.53.53;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	92.12.16.16.45.35;	author jont;	state Exp;
branches;
next	;

1.9.1.1
date	93.04.14.16.21.33;	author jont;	state Exp;
branches;
next	1.9.1.2;

1.9.1.2
date	93.09.28.13.29.03;	author daveb;	state Exp;
branches;
next	;

1.19.1.1
date	96.09.13.11.27.16;	author hope;	state Exp;
branches;
next	;

1.19.2.1
date	96.10.07.16.17.49;	author hope;	state Exp;
branches;
next	;

1.19.3.1
date	96.10.17.11.37.44;	author hope;	state Exp;
branches;
next	;

1.19.4.1
date	96.11.14.13.05.36;	author hope;	state Exp;
branches
	1.19.4.1.1.1;
next	;

1.19.4.1.1.1
date	96.11.28.15.15.14;	author hope;	state Exp;
branches;
next	;

1.19.5.1
date	96.11.22.18.23.03;	author hope;	state Exp;
branches;
next	;

1.19.6.1
date	96.12.17.18.01.06;	author hope;	state Exp;
branches
	1.19.6.1.1.1;
next	;

1.19.6.1.1.1
date	97.02.24.11.52.48;	author hope;	state Exp;
branches;
next	;

1.19.7.1
date	96.12.18.09.56.29;	author hope;	state Exp;
branches;
next	;

1.19.8.1
date	97.05.12.10.54.28;	author hope;	state Exp;
branches
	1.19.8.1.1.1
	1.19.8.1.2.1
	1.19.8.1.3.1;
next	;

1.19.8.1.1.1
date	97.07.28.18.37.21;	author daveb;	state Exp;
branches
	1.19.8.1.1.1.1.1;
next	;

1.19.8.1.1.1.1.1
date	97.10.07.12.02.25;	author jkbrook;	state Exp;
branches;
next	;

1.19.8.1.2.1
date	97.09.08.17.29.30;	author daveb;	state Exp;
branches;
next	;

1.19.8.1.3.1
date	97.09.09.14.27.27;	author daveb;	state Exp;
branches;
next	;


desc
@Make the initial answer files for the test suite
@


1.19
log
@Converting to shell script
@
text
@#!/bin/sh
#
# MAKE_ANS, just a dummy
#
# $Log$
#
# Copyright Harlequin Ltd. 1996.
#
MAKE_ANS.sh $*
@


1.19.8.1
log
@branched from 1.19
@
text
@d5 1
a5 4
# $Log: MAKE_ANS,v $
# Revision 1.19  1996/05/22  13:49:14  jont
# Converting to shell script
#
@


1.19.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
# Revision 1.19.8.1  1997/05/12  10:54:28  hope
# branched from 1.19
#
@


1.19.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
# Revision 1.19.8.1  1997/05/12  10:54:28  hope
# branched from 1.19
#
@


1.19.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
# Revision 1.19.8.1  1997/05/12  10:54:28  hope
# branched from 1.19
#
@


1.19.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
# Revision 1.19.8.1.1.1  1997/07/28  18:37:21  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.19.7.1
log
@branched from 1.19
@
text
@d5 1
a5 4
# $Log: MAKE_ANS,v $
# Revision 1.19  1996/05/22  13:49:14  jont
# Converting to shell script
#
@


1.19.6.1
log
@branched from 1.19
@
text
@d5 1
a5 4
# $Log: MAKE_ANS,v $
# Revision 1.19  1996/05/22  13:49:14  jont
# Converting to shell script
#
@


1.19.6.1.1.1
log
@branched from 1.19.6.1
@
text
@a5 3
# Revision 1.19.6.1  1996/12/17  18:01:06  hope
# branched from 1.19
#
@


1.19.5.1
log
@branched from 1.19
@
text
@d5 1
a5 4
# $Log: MAKE_ANS,v $
# Revision 1.19  1996/05/22  13:49:14  jont
# Converting to shell script
#
@


1.19.4.1
log
@branched from 1.19
@
text
@d5 1
a5 4
# $Log: MAKE_ANS,v $
# Revision 1.19  1996/05/22  13:49:14  jont
# Converting to shell script
#
@


1.19.4.1.1.1
log
@branched from 1.19.4.1
@
text
@a5 3
# Revision 1.19.4.1  1996/11/14  13:05:36  hope
# branched from 1.19
#
@


1.19.3.1
log
@branched from 1.19
@
text
@d5 1
a5 4
# $Log: MAKE_ANS,v $
# Revision 1.19  1996/05/22  13:49:14  jont
# Converting to shell script
#
@


1.19.2.1
log
@branched from 1.19
@
text
@d5 1
a5 4
# $Log: MAKE_ANS,v $
# Revision 1.19  1996/05/22  13:49:14  jont
# Converting to shell script
#
@


1.19.1.1
log
@branched from 1.19
@
text
@d5 1
a5 4
# $Log: MAKE_ANS,v $
# Revision 1.19  1996/05/22  13:49:14  jont
# Converting to shell script
#
@


1.18
log
@Fixing bungle with $
@
text
@d1 1
a1 5
#!/bin/csh
# 
# $Log: MAKE_ANS,v $
# Revision 1.17  1996/01/09  12:48:09  matthew
# Renaming motif.img to gui.img
d3 1
a3 4
# Revision 1.16  1995/08/15  18:15:50  daveb
# Allowed files to have any extensions, which are automatically
# replaced with .sml.  This allows us to perform cout, MAKE_ANS,
# and cin on the same set of arguments (.ans files).
d5 1
a5 2
# Revision 1.15  1995/08/15  11:51:22  daveb
# Changed default SRC_DIR to /u/sml ...
d7 1
a7 2
# Revision 1.14  1995/03/15  14:20:35  jont
# Pass -dir parameter through
d9 1
a9 110
# Revision 1.13  1995/02/09  15:15:51  jont
# Modify to use new image directory structure
#
# Revision 1.12  1994/06/17  12:09:32  daveb
# Changed default SRC_DIR to /usr/sml ...
#
# Revision 1.11  1994/03/15  14:48:27  jont
# Change default source directory to /usr/users/sml/MLW/src
#
# Revision 1.10  1993/09/28  14:17:25  daveb
# Merged in bug fix.
#
# Revision 1.9.1.2  1993/09/28  13:29:03  daveb
# No longer generates answer files for erroneous cases.
#
# Revision 1.9.1.1  1993/04/14  16:21:33  jont
# Fork for bug fixing
#
# Revision 1.9  1993/04/14  16:21:33  daveb
# Replaced much code with a call to CHECK_SUCCESS.
#
# Revision 1.8  1993/04/14  14:53:00  daveb
# Fixed behaviour for missing files.  Optimised sed processing.
#
# Revision 1.7  1993/04/14  13:33:01  matthew
# Changed use of interpreter.img to motif.img
#
# Revision 1.6  1993/01/27  11:41:55  daveb
# Added needed backslashes to usage message.
#
# Revision 1.5  1993/01/27  11:22:22  daveb
# Removed old description of file.
#
# Revision 1.4  1993/01/22  15:21:59  daveb
# Added checks on results.
#
# Revision 1.3  1993/01/07  18:06:27  daveb
# Added argument handling, used interpreter.img instead of shell.img,
# and filtered out prompts and version message from output.
#
# Revision 1.2  1993/01/06  16:53:53  jont
# Improved to allow specification of a source directory in which exists
# an rts/runtime and a images/shell.img and an interpreter/interpreter.mo
# and multiple test file arguments. It's all jolly slow though.
#
# Revision 1.1  1992/12/16  16:45:35  jont
# Initial revision
#
# Copyright Harlequin Ltd. 1992.
#

set SRCDIR=/u/sml/MLW/src

set ARCH_OS_DIR=SPARC/SunOS

alias usage echo 'Usage: MAKE_ANS \[-src \<source dir\>\] \[-dir \<architecture/OS\>\] \<test files\>'

while ($#argv)
  switch ($1)
    case -src:
      shift
      if ($1 != "") then
        set SRCDIR=$1
        shift
      else
        usage
        exit (1)
      endif
      breaksw
    case -dir:
      shift
      if ($1 != "") then
        set ARCH_OS_DIR=$1
        shift
      else
        usage
        exit (1)
      endif
      breaksw
    default:
      break
      breaksw
  endsw
end

if ( ! $#argv) then
  usage
  exit (1)
endif

if ( ! -x $SRCDIR/rts/runtime) then
  echo Can\'t find $SRCDIR/rts/runtime
  exit (1)
endif

if ( ! -r $SRCDIR/images/$ARCH_OS_DIR/gui.img) then
  echo Can\'t find $SRCDIR/images/$ARCH_OS_DIR/gui.img
  exit (1)
endif

foreach i ($argv)
  if { CHECK_SUCCESS -keep -src $SRCDIR -dir $ARCH_OS_DIR $i:r.sml } then
    if ! { egrep OK $i:r.sml >& /dev/null } then
       echo {$i:r.sml}: erroneous case, no answer file needed
       rm $i:r.out
    else
      mv $i:r.out $i:r.ans
    endif
  endif
end
@


1.17
log
@Renaming motif.img to gui.img
@
text
@d4 3
d121 1
a121 1
       echo ${i:r.sml}: erroneous case, no answer file needed
@


1.16
log
@Allowed files to have any extensions, which are automatically
replaced with .sml.  This allows us to perform cout, MAKE_ANS,
and cin on the same set of arguments (.ans files).
@
text
@d4 5
d110 2
a111 2
if ( ! -r $SRCDIR/images/$ARCH_OS_DIR/motif.img) then
  echo Can\'t find $SRCDIR/images/$ARCH_OS_DIR/motif.img
@


1.15
log
@Changed default SRC_DIR to /u/sml ...
@
text
@d4 3
d111 3
a113 3
  if { CHECK_SUCCESS -keep -src $SRCDIR -dir $ARCH_OS_DIR $i } then
    if ! { egrep OK $i >& /dev/null } then
       echo ${i}: erroneous case, no answer file needed
@


1.14
log
@Pass -dir parameter through
@
text
@d4 3
d58 1
a58 1
set SRCDIR=/usr/sml/MLW/src
@


1.13
log
@Modify to use new image directory structure
@
text
@d4 3
d105 1
a105 1
  if { CHECK_SUCCESS -keep -src $SRCDIR $i } then
@


1.12
log
@Changed default SRC_DIR to /usr/sml ...
@
text
@d4 3
d54 3
a56 1
alias usage echo 'Usage: MAKE_ANS \[-src \<source dir\>\] \<test files\>'
d70 10
d96 2
a97 2
if ( ! -r $SRCDIR/images/motif.img) then
  echo Can\'t find $SRCDIR/images/motif.img
@


1.11
log
@Change default source directory to /usr/users/sml/MLW/src
@
text
@d4 3
d49 1
a49 1
set SRCDIR=/usr/users/sml/MLW/src
@


1.10
log
@Merged in bug fix.
@
text
@d4 3
d46 1
a46 1
set SRCDIR=/usr/users/sml/src
@


1.9
log
@Replaced much code with a call to CHECK_SUCCESS.
@
text
@d4 9
d82 6
a87 1
    mv $i:r.out $i:r.ans
@


1.9.1.1
log
@Fork for bug fixing
@
text
@a3 3
# Revision 1.9  1993/04/14  16:21:33  daveb
# Replaced much code with a call to CHECK_SUCCESS.
#
@


1.9.1.2
log
@No longer generates answer files for erroneous cases.
@
text
@a3 3
# Revision 1.9.1.1  1993/04/14  16:21:33  jont
# Fork for bug fixing
#
d76 1
a76 6
    if ! { egrep OK $i >& /dev/null } then
       echo ${i}: erroneous case, no answer file needed
       rm $i:r.out
    else
      mv $i:r.out $i:r.ans
    endif
@


1.8
log
@Fixed behaviour for missing files.  Optimised sed processing.
@
text
@d4 3
d72 2
a73 40
  if ( ! -r $i ) then
    echo Can\'t find $i
  else if { egrep Result: $i >& /dev/null } then
    $SRCDIR/rts/runtime -load $SRCDIR/images/motif.img < $i | \
      sed -e '1d\
	      s/MLWorks>> //g\
	      s/MLWorks> //g'\
	>& $i:r.out
    if { egrep error $i:r.out >& /dev/null } then
      if { egrep FAIL $i >& /dev/null } then
        echo ${i}: generating new answer file.
        mv $i:r.out $i:r.ans
      else
        echo ${i}: unexpected error, see $i:r.out.
      endif
    else if { egrep warning $i:r.out >& /dev/null } then
      if { egrep WARNING $i >& /dev/null } then
        echo ${i}: generating new answer file.
        mv $i:r.out $i:r.ans
      else
        echo ${i}: unexpected warning, see $i:r.out.
      endif
    else
      if { egrep OK $i >& /dev/null } then
        echo ${i}: generating new answer file.
        mv $i:r.out $i:r.ans
      else if { egrep FAIL $i >& /dev/null } then
        echo ${i}: error expected, see $i:r.out.
      else if { egrep WARNING $i >& /dev/null } then
        echo ${i}: warning expected, see $i:r.out.
      else
        echo ${i}: bad result status.
        rm $i:r.out
      endif
    endif
    if { egrep INTERPRETATION $i >& /dev/null } then
      echo The correct behaviour in this case is open to question.
    endif
  else
    echo ${i}: missing result status.
@


1.7
log
@Changed use of interpreter.img to motif.img
@
text
@d4 3
d69 3
a71 1
  if { egrep Result: $i >& /dev/null } then
d73 4
a76 2
      tail +2 | sed -e '1,$s/MLWorks>> //g' | sed -e '1,$s/MLWorks> //g' \
      >& $i:r.out
@


1.6
log
@Added needed backslashes to usage message.
@
text
@d4 3
d60 2
a61 2
if ( ! -r $SRCDIR/images/interpreter.img) then
  echo Can\'t find $SRCDIR/images/interpreter.img
d67 1
a67 1
    $SRCDIR/rts/runtime -load $SRCDIR/images/interpreter.img < $i | \
@


1.5
log
@Removed old description of file.
@
text
@d4 3
d27 1
a27 1
alias usage echo 'Usage: MAKE_ANS [-src \<source dir\>] \<test files\>'
@


1.4
log
@Added checks on results.
@
text
@a1 1
# MAKE_ANS
a2 2
# Shell script to perform regression testing on the Harlequin
# SML compiler.
d4 3
@


1.3
log
@Added argument handling, used interpreter.img instead of shell.img,
and filtered out prompts and version message from output.
@
text
@d7 4
d60 37
a96 4
  echo Generating $i:r.ans
  $SRCDIR/rts/runtime -load $SRCDIR/images/interpreter.img < $i | \
    tail +2 | sed -e '1,$s/MLWorks>> //g' | sed -e '1,$s/MLWorks> //g' \
    >& $i:r.ans
a97 1

@


1.2
log
@Improved to allow specification of a source directory in which exists
an rts/runtime and a images/shell.img and an interpreter/interpreter.mo
and multiple test file arguments. It's all jolly slow though.
@
text
@d2 1
a2 1
# RUN-TESTS
d7 5
d18 31
a48 1
# Argument handling here.
d50 3
a52 3
if ($#argv < 2) then
  echo Usage: MAKE_ANS \<source dir\> \<test files\>
  exit(1)
d54 6
a59 3
set SRCDIR=$argv[1]
foreach i($argv[2-])
  $SRCDIR/rts/runtime -load $SRCDIR/images/shell.img $SRCDIR/interpreter/interpreter.mo < $i >& $i:r.ans
@


1.1
log
@Initial revision
@
text
@d6 4
a9 1
# $Log$
a12 4
set TESTDIR=.
#SRCDIR=/usr/users/sml/src/images
set SRCDIR=/usr/users/jont/ml/ml_bootstrap/src

d15 2
a16 2
if ($#argv != 1) then
  echo Usage: MAKE_ANS \<test file\>
d19 5
a23 2
set i = $argv[1]
$SRCDIR/rts/runtime -load $SRCDIR/images/shell.img $SRCDIR/interpreter/interpreter.mo < $i >& $i:r.ans
@
