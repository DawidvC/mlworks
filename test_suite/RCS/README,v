head	1.8;
access;
symbols
	MLWorks_21c0_1999_03_25:1.8
	MLWorks_20c1_1998_08_20:1.8
	MLWorks_20c0_1998_08_04:1.8
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.8
	MLWorks_20b1c1_1998_05_07:1.8
	MLWorks_20b0_1998_04_07:1.8
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.8.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.8.1.1.1.1
	MLWorks_10r3:1.8.1.1.3
	MLWorks_10r2_551:1.8.1.1.2
	MLWorks_11:1.8.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.8.1.1
	MLWorks_20m0_1997_06_20:1.8
	MLWorks_1_0_r2c2_1997_06_14:1.8.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.8.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.8.1
	MLWorks_BugFix_1997_04_24:1.8
	MLWorks_1_0_r2_Win32_1997_04_11:1.8
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.7.6.1.1
	MLWorks_gui_1996_12_18:1.7.7
	MLWorks_1_0_Win32_1996_12_17:1.7.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.7.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.7.4.1
	MLWorks_1_0_Irix_1996_11_28:1.7.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.7.5
	MLWorks_1_0_Unix_1996_11_14:1.7.4
	MLWorks_Open_Beta2_1996_10_11:1.7.3
	MLWorks_License_dev:1.7.2
	MLWorks_1_open_beta_1996_09_13:1.7.1
	MLWorks_Open_Beta_1996_08_22:1.7
	MLWorks_Beta_1996_07_02:1.7
	MLWorks_Beta_1996_06_07:1.7
	MLWorks_Beta_1996_06_06:1.7
	MLWorks_Beta_1996_06_05:1.7
	MLWorks_Beta_1996_06_03:1.7
	MLWorks_Beta_1996_05_31:1.7
	MLWorks_Beta_1996_05_30:1.7
	ML_beta_release_12/08/94:1.6
	ML_beta_release_03/08/94:1.6
	ML_revised_beta_release_25/05/94:1.6
	ML_final_beta_release_02/03/94:1.5
	mlworks-28-01-1994:1.5
	Release:1.5
	mlworks-beta-01-09-1993:1.5
	MLWorks-1-0-4-29/01/1993:1.4
	MLWorks-1-0-3-21/12/1992:1.1
	MLWorks-1-0-2-15/12/1992:1.1
	MLWorks-1-0-1-04/12/1992:1.1;
locks; strict;
comment	@# @;


1.8
date	97.03.26.10.18.52;	author jont;	state Exp;
branches
	1.8.1.1;
next	1.7;

1.7
date	96.01.09.12.48.43;	author matthew;	state Exp;
branches
	1.7.1.1
	1.7.2.1
	1.7.3.1
	1.7.4.1
	1.7.5.1
	1.7.6.1
	1.7.7.1;
next	1.6;

1.6
date	94.03.15.14.53.36;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	93.04.15.10.03.39;	author daveb;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	93.01.27.11.45.56;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	93.01.22.18.49.55;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	93.01.18.19.05.08;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	92.11.04.17.21.51;	author daveb;	state Exp;
branches;
next	;

1.5.1.1
date	93.04.15.10.03.39;	author jont;	state Exp;
branches;
next	;

1.7.1.1
date	96.09.13.11.27.23;	author hope;	state Exp;
branches;
next	;

1.7.2.1
date	96.10.07.16.17.57;	author hope;	state Exp;
branches;
next	;

1.7.3.1
date	96.10.17.11.37.51;	author hope;	state Exp;
branches;
next	;

1.7.4.1
date	96.11.14.13.05.43;	author hope;	state Exp;
branches
	1.7.4.1.1.1;
next	;

1.7.4.1.1.1
date	96.11.28.15.15.22;	author hope;	state Exp;
branches;
next	;

1.7.5.1
date	96.11.22.18.23.10;	author hope;	state Exp;
branches;
next	;

1.7.6.1
date	96.12.17.18.01.13;	author hope;	state Exp;
branches
	1.7.6.1.1.1;
next	;

1.7.6.1.1.1
date	97.02.24.11.52.55;	author hope;	state Exp;
branches;
next	;

1.7.7.1
date	96.12.18.09.56.36;	author hope;	state Exp;
branches;
next	;

1.8.1.1
date	97.05.12.10.54.35;	author hope;	state Exp;
branches
	1.8.1.1.1.1
	1.8.1.1.2.1
	1.8.1.1.3.1;
next	;

1.8.1.1.1.1
date	97.07.28.18.37.12;	author daveb;	state Exp;
branches
	1.8.1.1.1.1.1.1;
next	;

1.8.1.1.1.1.1.1
date	97.10.07.12.02.15;	author jkbrook;	state Exp;
branches;
next	;

1.8.1.1.2.1
date	97.09.08.17.29.21;	author daveb;	state Exp;
branches;
next	;

1.8.1.1.3.1
date	97.09.09.14.27.19;	author daveb;	state Exp;
branches;
next	;


desc
@Description of the SML test suite.
@


1.8
log
@Add information about use of perl_script by some tests
@
text
@# $Log: README,v $
# Revision 1.7  1996/01/09  12:48:43  matthew
# Renaming motif.img to gui.img
#
# Revision 1.6  1994/03/15  14:53:36  jont
# Change default source directory to /usr/users/sml/MLW/src
#
# Revision 1.5  1993/04/15  10:03:39  daveb
# Added info about CHECK_SUCCESS. RUN_TESTS and RUN_ALL_TESTS have been
# renamed CHECK_RESULT and CHECK_RESULT_ALL.
#
# Revision 1.4  1993/01/27  11:45:56  daveb
# Added info about COMPILE_FILE.
#
# Revision 1.3  1993/01/22  18:49:55  daveb
# Revised.
#
# Revision 1.2  1993/01/18  19:05:08  daveb
# Added details of RUN_ALL_TESTS, MAKE_ANS and MAKE_ALL_ANS.
#
# Revision 1.1  1992/11/04  17:21:51  daveb
# Initial revision


This directory tree contains a test suite for MLWorks.  Each test
is in a separate file.  There are seven commands: COMPILE_FILE,
CHECK_SUCCESS, CHECK_SUCCESS_ALL, CHECK_RESULT, CHECK_RESULT_ALL,
MAKE_ANS and MAKE_ALL_ANS.

To check a compiler against existing tests, use CHECK_SUCCESS and
CHECK_RESULT.  These commands take an optional argument pair of the
form "-src <dir>", and a list of .sml files to evaluate.  If the
optional arguments are given, <dir> is a directory containing
rts/runtime and images/gui.img.  The default directory is 
/usr/users/sml/MLW/src.

Tests include a specification of whether they should succeed, fail,
or generate a warning.  CHECK_SUCCESS checks that the test performs
correctly in this respect.  CHECK_RESULT does more; after calling
CHECK_SUCCESS it also compares the output of the tests against
previously generated answer files.  It uses simple file comparison
to do this.  It also passes a "-keep" argument to CHECK_SUCCESS,
to instruct it not to remove its output file.  This argument is
not intended for users to use directly.

To check all the tests in the suite, use CHECK_SUCCESS_ALL and
CHECK_RESULT_ALL.  These commands take optional "-src <dir>"
arguments as for CHECK_SUCCESS, and also optional "-test <dir>"
arguments, in which <dir> is a directory containing the tests.
The default value for this is the current directory.

COMPILE_FILE evaluates a single file and puts the result on the
standard output, after stripping prompts and header information.
It is useful for examining the output of a test for visual
comparison with an installed answer file.  It is also used by the
other commands.  COMPILE_FILE takes optional "-src <dir>" arguments.

To add a test to the suite, put the .sml file in an appropriate
directory and generate an answer file for it using MAKE_ANS.
MAKE_ANS takes the same arguments as CHECK_SUCCESS.  It calls
CHECK_SUCCESS, and only creates the answer file if the test succeeds.
The header of the .sml file should contain, in addition to the usual
RCS Log and copyright notice, a line of the form:

Result: <status>+

Where possible statuses are: OK, FAIL, WARNING and INTERPRETATION.
Most files will have just one status.  CHECK_SUCCESS complains if
the status of the generated answer is not included in the specified
status.  If the specified status includes INTERPRETATION,
CHECK_SUCCESS prints "The correct behaviour in this case is open
to question", as a reminder.

To regenerate answer files for all the tests in the suite, use
MAKE_ALL_ANS.  This takes the same arguments as CHECK_SUCCESS_ALL.

Additional assumptions:
Some tests require a file which can be opened. Since Win32 does not
understand . in this respect, we use perl_script instead. This means
that perl_script is not only vital for its contents, but also for its
name.
@


1.8.1.1
log
@branched from 1.8
@
text
@a1 3
# Revision 1.8  1997/03/26  10:18:52  jont
# Add information about use of perl_script by some tests
#
@


1.8.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a1 3
# Revision 1.8.1.1  1997/05/12  10:54:35  hope
# branched from 1.8
#
@


1.8.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a1 3
# Revision 1.8.1.1  1997/05/12  10:54:35  hope
# branched from 1.8
#
@


1.8.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a1 3
# Revision 1.8.1.1  1997/05/12  10:54:35  hope
# branched from 1.8
#
@


1.8.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a1 3
# Revision 1.8.1.1.1.1  1997/07/28  18:37:12  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.7
log
@Renaming motif.img to gui.img
@
text
@d2 3
d77 5
@


1.7.7.1
log
@branched from 1.7
@
text
@a1 3
# Revision 1.7  1996/01/09  12:48:43  matthew
# Renaming motif.img to gui.img
#
@


1.7.6.1
log
@branched from 1.7
@
text
@a1 3
# Revision 1.7  1996/01/09  12:48:43  matthew
# Renaming motif.img to gui.img
#
@


1.7.6.1.1.1
log
@branched from 1.7.6.1
@
text
@a1 3
# Revision 1.7.6.1  1996/12/17  18:01:13  hope
# branched from 1.7
#
@


1.7.5.1
log
@branched from 1.7
@
text
@a1 3
# Revision 1.7  1996/01/09  12:48:43  matthew
# Renaming motif.img to gui.img
#
@


1.7.4.1
log
@branched from 1.7
@
text
@a1 3
# Revision 1.7  1996/01/09  12:48:43  matthew
# Renaming motif.img to gui.img
#
@


1.7.4.1.1.1
log
@branched from 1.7.4.1
@
text
@a1 3
# Revision 1.7.4.1  1996/11/14  13:05:43  hope
# branched from 1.7
#
@


1.7.3.1
log
@branched from 1.7
@
text
@a1 3
# Revision 1.7  1996/01/09  12:48:43  matthew
# Renaming motif.img to gui.img
#
@


1.7.2.1
log
@branched from 1.7
@
text
@a1 3
# Revision 1.7  1996/01/09  12:48:43  matthew
# Renaming motif.img to gui.img
#
@


1.7.1.1
log
@branched from 1.7
@
text
@a1 3
# Revision 1.7  1996/01/09  12:48:43  matthew
# Renaming motif.img to gui.img
#
@


1.6
log
@Change default source directory to /usr/users/sml/MLW/src
@
text
@d2 3
d31 1
a31 1
rts/runtime and images/motif.img.  The default directory is 
@


1.5
log
@Added info about CHECK_SUCCESS. RUN_TESTS and RUN_ALL_TESTS have been
renamed CHECK_RESULT and CHECK_RESULT_ALL.
@
text
@d2 4
d29 1
a29 1
/usr/users/sml/src/images.
@


1.5.1.1
log
@Fork for bug fixing
@
text
@a1 4
# Revision 1.5  1993/04/15  10:03:39  daveb
# Added info about CHECK_SUCCESS. RUN_TESTS and RUN_ALL_TESTS have been
# renamed CHECK_RESULT and CHECK_RESULT_ALL.
#
@


1.4
log
@Added info about COMPILE_FILE.
@
text
@d2 3
d15 32
a46 3
This directory tree contains a test suite for MLWorks.  Each
test is in a separate file.  There are five commands: MAKE_ANS,
MAKE_ALL_ANS, RUN_TESTS, RUN_ALL_TESTS and COMPILE_FILE.
d50 4
a53 2
The header of the .sml file should contain, in addition to
the usual RCS Log and copyright notice, a line of the form:
d58 5
a62 11
Most files will have just one status.  MAKE_ANS complains if the
status of the generated answer is not included in the specified
status.  If the specified status includes INTERPRETATION, MAKE_ANS
prints "The correct behaviour in this case is open to question",
as a reminder.

MAKE_ANS takes an optional argument pair of the form "-src <dir>",
and a list of .sml files to evaluate.  If the optional arguments
are given, <dir> is a directory containing rts/runtime and
images/interpreter.img.  The default directory is 
/usr/users/sml/src/images.
d65 2
a66 20
MAKE_ALL_ANS.  This takes optional "-src <dir>" arguments as for
MAKE_ANS, and also optional "-test <dir>", in which <dir> is a
directory containing the tests.  The default value is the current
directory.

RUN_TESTS runs named tests and compares the output with the previously
generated answer files.  It takes the same arguments as MAKE_ANS.
It is used to check that new versions of the compile produces the
same results as earlier versions.  It is more specific than MAKE_ANS
in that the values produced are compared, not just the success status.

RUN_ALL_TESTS runs all the tests.  It takes the same arguments as
MAKE_ALL_ANS.  The overnight build does a diff of the output of
RUN_ALL_TESTS with the output from the previous build, so we can
identify any changes easily.

COMPILE_FILE evaluates a single file and puts the result on the standard
output.  It is useful for examining the output of a test for visual
comparison with an installed answer file.  COMPILE_FILE takes optional
"-src <dir>" arguments.
@


1.3
log
@Revised.
@
text
@d2 3
d13 2
a14 2
test is in a separate file.  There are four commands: MAKE_ANS,
MAKE_ALL_ANS, RUN_TESTS and RUN_ALL_TESTS.
d52 5
@


1.2
log
@Added details of RUN_ALL_TESTS, MAKE_ANS and MAKE_ALL_ANS.
@
text
@d1 6
a6 3
$Log: README,v $
Revision 1.1  1992/11/04  17:21:51  daveb
Initial revision
d10 2
a11 2
test is in a separate file.  The shell script RUN_ALL_TESTS
runs all the tests.
a12 17
The output of RUN_ALL_TESTS can be stored in a file so that one run
can be compared with an earlier run.

RUN_ALL_TESTS takes the following optional arguments:

	-src <dir>
	   <dir> is a directory containing a runtime and
	   a shell.img.  The default value is
	   /usr/users/sml/src/images.
	
	-tests <dir>
	   <dir> is the directory containing the tests.
	   The default value is the current directory.

To run just some named tests, use RUN_TESTS.  This takes an optional
-src <dir> argument (as above), and a list of .sml files to test.

d14 35
a48 6
directory, and generate a sample answer using MAKE_ANS.  MAKE_ANS
takes an optional -src <dir> argument (as above), and a list of
.sml files to test.

To regenerate answer file for all the tests in the suite, use
MAKE_ALL_ANS.  This takes the same optional arguments as RUN_ALL_TESTS.
@


1.1
log
@Initial revision
@
text
@d1 3
a3 1
$Log$
d5 1
d7 1
a7 1
test is in a separate file.  The shell script RUN_TESTS
d10 1
a10 1
The output of RUN_TESTS can be stored in a file so that one run
d13 1
a13 1
RUN_TESTS takes the following optional arguments:
d23 11
@
