head	1.11;
access;
symbols
	MLWorks_21c0_1999_03_25:1.11
	MLWorks_20c1_1998_08_20:1.9
	MLWorks_20c0_1998_08_04:1.9
	MLWorks_20b2c2_1998_06_19:1.9
	MLWorks_20b2_Windows_1998_06_12:1.9
	MLWorks_20b1c1_1998_05_07:1.9
	MLWorks_20b0_1998_04_07:1.9
	MLWorks_20b0_1998_03_20:1.9
	MLWorks_20m2_1998_02_16:1.9
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.6.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.6.1.1.1.1
	MLWorks_10r3:1.6.1.1.3
	MLWorks_10r2_551:1.6.1.1.2
	MLWorks_11:1.6.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.1.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.6.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.1
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.6.1.1
	MLWorks_gui_1996_12_18:1.4.7
	MLWorks_1_0_Win32_1996_12_17:1.4.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.4.1
	MLWorks_1_0_Irix_1996_11_28:1.4.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.5
	MLWorks_1_0_Unix_1996_11_14:1.4.4
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.2
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@# @;


1.11
date	99.02.23.12.55.12;	author mitchell;	state Exp;
branches;
next	1.10;

1.10
date	98.09.24.10.56.54;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	97.11.19.17.46.20;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	97.08.13.15.41.18;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	97.07.21.16.57.19;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	97.01.02.14.41.35;	author stephenb;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	96.12.20.17.03.37;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	96.08.15.09.51.24;	author io;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1;
next	1.3;

1.3
date	96.08.14.15.52.21;	author io;	state Exp;
branches;
next	1.2;

1.2
date	96.05.23.10.48.25;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	96.05.22.15.35.58;	author jont;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.27.15;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.17.48;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.37.43;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.14.13.05.35;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	96.11.28.15.15.13;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.22.18.23.03;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.17.18.01.05;	author hope;	state Exp;
branches
	1.4.6.1.1.1;
next	;

1.4.6.1.1.1
date	97.02.24.11.52.47;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.18.09.56.29;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	97.05.12.10.54.28;	author hope;	state Exp;
branches
	1.6.1.1.1.1
	1.6.1.1.2.1
	1.6.1.1.3.1;
next	;

1.6.1.1.1.1
date	97.07.28.18.37.21;	author daveb;	state Exp;
branches
	1.6.1.1.1.1.1.1;
next	;

1.6.1.1.1.1.1.1
date	97.10.07.12.02.24;	author jkbrook;	state Exp;
branches;
next	;

1.6.1.1.2.1
date	97.09.08.17.29.29;	author daveb;	state Exp;
branches;
next	;

1.6.1.1.3.1
date	97.09.09.14.27.26;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.11
log
@[Bug #190507]
Ignore DEPEND directories
@
text
@#!/bin/sh
# CHECK_RESULT_ALL
# 
# Shell script to perform regression testing on the Harlequin
# SML compiler.
#
# $Log: CHECK_RESULT_ALL.sh,v $
# Revision 1.10  1998/09/24  10:56:54  jont
# [Bug #70180]
# Change nul to nul:
#
# Revision 1.9  1997/11/19  17:46:20  daveb
# [Bug #30323]
#
# Revision 1.8  1997/08/13  15:41:18  jont
# [Bug #30151]
# Modify to work with installed MLWorks as well
#
# Revision 1.7  1997/07/21  16:57:19  jont
# [Bug #30163]
# Add a per test variable to control deletion of .out file
# keeping STATUS for overall suite result
#
# Revision 1.6  1997/01/02  14:41:35  stephenb
# [Bug #1881]
# Modified so that now knows how to skip architecture specific
# directories that aren't of interest to the architecture being
# tested.  Also changed the way OS specific directories are skipped
# to use the same mechanism.
#
# Revision 1.5  1996/12/20  17:03:37  jont
# [Bug #1879]
# Remove default setting of ARCH_OS
#
# Revision 1.4  1996/08/15  09:51:24  io
# (No reason given.)
#
# Revision 1.3  1996/08/14  15:52:21  io
# handle os specific directories
#
# Revision 1.2  1996/05/23  10:48:25  jont
# Improvements to make it work on NT
#
# Revision 1.1  1996/05/22  15:35:58  jont
# new unit
#
# Revision 1.19  1996/05/07  09:59:16  daveb
# Changed to keep the .out file around in case of error.
#
# Revision 1.18  1996/01/09  12:46:48  matthew
# Renaming motif.img to gui.img
#
# Revision 1.17  1995/09/09  21:13:38  io
# forgot a . in ./CHECK_RESULT..
#
# Revision 1.16  1995/09/06  16:53:54  io
# use rts/bin/$ARCH/$OS/main to help multiarch testing
#
# Revision 1.15  1995/08/15  14:00:46  daveb
# The version in ~sml and the version in Hope had got out of sync.
# Added a full stop to avoid spurious differences in output.
#
# Revision 1.14  1995/08/15  11:51:03  daveb
# Changed default SRC_DIR to /u/sml ...
#
# Revision 1.13  1995/06/16  16:46:14  daveb
# Converted this script to /bin/sh because Irix csh choked on "too many arguments"
#
# Revision 1.12  1995/03/15  14:35:31  jont
# Pass on -dir parameter
#
# Revision 1.11  1995/02/09  15:15:29  jont
# Modify to use new image directory structure
#
# Revision 1.10  1994/07/14  10:30:33  jont
# Add better message when answer file missing
#
# Revision 1.9  1994/06/17  12:04:07  daveb
# Changed default SRC_DIR to /usr/sml ...
#
# Revision 1.8  1994/05/03  14:31:57  daveb
# Added exit status.
#
# Revision 1.7  1994/03/15  14:47:16  jont
# Change default source directory to /usr/users/sml/MLW/src
#
# Revision 1.6  1993/09/28  14:13:14  daveb
# Merged in bug fix.
#
# Revision 1.5.1.2  1993/09/27  11:55:37  daveb
# No longer checks output of erroneous cases.
#
# Revision 1.5.1.1  1993/04/15  09:58:24  jont
# Fork for bug fixing
#
# Revision 1.5  1993/04/15  09:58:24  daveb
# Added call to CHECK_SUCCESS.
#
# Revision 1.4  1993/04/14  17:17:45  daveb
# Replaced call to mlworks with call to COMPILE_FILE.
# Changed name to CHECK_RESULT.
#
# Revision 1.3  1993/04/14  15:10:18  daveb
# Changed interpreter.img to motif.img.  Optimised sed processing.
#
# Revision 1.2  1993/02/02  12:46:40  daveb
# Script was printing 'OK' when it failed to create the .out file.
#
# Revision 1.1  1993/01/07  18:06:41  daveb
# Initial revision
#
#
# Copyright Harlequin Ltd. 1992.

TESTDIR=.
SRCDIR=/u/sml/MLW/src
ARCH_OS_DIR=""

IMAGE=guib.img

installed=""

usage='Usage: CHECK_RESULT_ALL \[-src \<source dir\>\] \[-dir \<architecture/OS\>\] \[-test \<dir\>\] \[-installed\]'

while [ $# -gt 0 ]
do
  case $1 in
    -src)
      shift
      if [ "$1" != "" ]
      then
        SRCDIR=$1
	shift
      else
  	echo $usage
	exit 1
      fi;;
    -dir)
      shift
      if [ "$1" != "" ]
      then
        ARCH_OS_DIR=$1
        shift
      else
        echo $usage
        exit 1
      fi;;
    -test)
      shift
      if [ "$1" != "" ]
      then
        TESTDIR=$1
	shift
      else
  	echo $usage
	exit 1
      fi;;
    -installed)
      installed="-installed"
      shift;;
    *)
      echo $usage
      exit 1;;
  esac
done

if [ "$ARCH_OS_DIR" = "" ]
then
  echo "parameter -dir missing"
  exit 1
fi

#
# See <URI:CHECK_SUCCESS_ALL.sh#arch> for an explanation of the following or
# if you prefer, create a separate script for it.
#
architectures="SPARC MIPS I386"
ARCH=`dirname $ARCH_OS_DIR`
arch_dirs_to_prune=""
for a in $architectures
do
  if test $a != $ARCH
  then
    arch_dirs_to_prune=${arch_dirs_to_prune}" -o -name $a"
  fi
done


# See <URI:CHECK_SUCCESS_ALL.sh#os>

case "`basename $ARCH_OS_DIR`" in
  Win95|NT) os_dir_to_prune=unix; RTS_NAME=main.exe; NULL_FILE=nul:; OS_TYPE=Win32 ;;
  *)        os_dir_to_prune=win32; RTS_NAME=main; NULL_FILE=/dev/null; OS_TYPE=Unix ;;
esac

files=`find $TESTDIR -type d \( -name $os_dir_to_prune $arch_dirs_to_prune -o -name DEPEND \) -prune -o -type f -name \*.sml -print | egrep -v "^.$"`

if [ "$installed" = "-installed" ]
then
  if [ "$OS_TYPE" = "Unix" ]
  then
    if [ ! -x $SRCDIR/bin/mlrun ]
    then
      echo Can\'t find $SRCDIR/bin/mlrun
      exit 1
    fi
  else
    if [ ! -x $SRCDIR/bin/main.exe ]
    then
      echo Can\'t find $SRCDIR/bin/main.exe
      exit 1
    fi
  fi
  if [ ! -r $SRCDIR/images/$IMAGE ]
  then
    echo Can\'t find $SRCDIR/images/$IMAGE
    exit 1
  fi
else
  if [ ! -x $SRCDIR/rts/bin/$ARCH_OS_DIR/$RTS_NAME ]
  then
    echo Can\'t find $SRCDIR/rts/bin/$ARCH_OS_DIR/$RTS_NAME
    exit 1
  fi
  if [ ! -r $SRCDIR/images/$ARCH_OS_DIR/$IMAGE ]
  then
    echo Can\'t find $SRCDIR/images/$ARCH_OS_DIR/$IMAGE
    exit 1
  fi
fi

cd $TESTDIR
STATUS=0

for i in $files; do
  TEST_STATUS=0
  if ./CHECK_SUCCESS.sh -keep -src $SRCDIR -dir $ARCH_OS_DIR $installed $i
  then
    base=`dirname $i`/`basename $i .sml`
    if ( grep OK $i > $NULL_FILE 2>&1 )
    then
      if [ ! -r $base.ans ]
      then
        echo Can\'t find $base.ans
        TEST_STATUS=1
      elif (cmp $base.out $base.ans > $NULL_FILE 2>&1)
      then
        echo $i: output check succeeded.
      else
        echo $i: output check failed \(see $base.out\).
        TEST_STATUS=1
      fi
    else
      echo $i: erroneous case, no output check.
    fi
    if [ $TEST_STATUS -eq 0 ]
    then
      rm -f $base.out
    else
      STATUS=1
    fi
  else
    STATUS=1
  fi
done

exit $STATUS
@


1.10
log
@[Bug #70180]
Change nul to nul:
@
text
@d8 4
d196 1
a196 1
files=`find $TESTDIR -type d \( -name $os_dir_to_prune $arch_dirs_to_prune \) -prune -o -type f -name \*.sml -print | egrep -v "^.$"`
@


1.9
log
@[Bug #30323]
@
text
@d8 3
d188 1
a188 1
  Win95|NT) os_dir_to_prune=unix; RTS_NAME=main.exe; NULL_FILE=nul; OS_TYPE=Win32 ;;
@


1.8
log
@[Bug #30151]
Modify to work with installed MLWorks as well
@
text
@d8 4
d112 2
d207 1
a207 1
  if [ ! -r $SRCDIR/images/gui.img ]
d209 1
a209 1
    echo Can\'t find $SRCDIR/images/gui.img
d218 1
a218 1
  if [ ! -r $SRCDIR/images/$ARCH_OS_DIR/gui.img ]
d220 1
a220 1
    echo Can\'t find $SRCDIR/images/$ARCH_OS_DIR/gui.img
@


1.7
log
@[Bug #30163]
Add a per test variable to control deletion of .out file
keeping STATUS for overall suite result
@
text
@d8 5
d107 4
a110 1
usage='Usage: CHECK_RESULT_ALL \[-src \<source dir\>\] \[-dir \<architecture/OS\>\] \[-test \<dir\>\]'
d145 3
d179 2
a180 2
  Win95|NT) os_dir_to_prune=unix; RTS_NAME=main.exe; NULL_FILE=nul ;;
  *)        os_dir_to_prune=win32; RTS_NAME=main; NULL_FILE=/dev/null ;;
d185 1
a185 3


if [ ! -x $SRCDIR/rts/bin/$ARCH_OS_DIR/$RTS_NAME ]
d187 30
a216 8
  echo Can\'t find $SRCDIR/rts/bin/$ARCH_OS_DIR/$RTS_NAME
  exit 1
fi

if [ ! -r $SRCDIR/images/$ARCH_OS_DIR/gui.img ]
then
  echo Can\'t find $SRCDIR/images/$ARCH_OS_DIR/gui.img
  exit 1
d224 1
a224 1
  if ./CHECK_SUCCESS.sh -keep -src $SRCDIR -dir $ARCH_OS_DIR $i
@


1.6
log
@[Bug #1881]
Modified so that now knows how to skip architecture specific
directories that aren't of interest to the architecture being
tested.  Also changed the way OS specific directories are skipped
to use the same mechanism.
@
text
@d8 7
d192 1
d201 1
a201 1
        STATUS=1
d207 1
a207 1
        STATUS=1
d212 1
a212 1
    if [ $STATUS -eq 0 ]
d215 2
d218 2
@


1.6.1.1
log
@branched from 1.6
@
text
@a7 7
# Revision 1.6  1997/01/02  14:41:35  stephenb
# [Bug #1881]
# Modified so that now knows how to skip architecture specific
# directories that aren't of interest to the architecture being
# tested.  Also changed the way OS specific directories are skipped
# to use the same mechanism.
#
@


1.6.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a7 3
# Revision 1.6.1.1  1997/05/12  10:54:28  hope
# branched from 1.6
#
@


1.6.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a7 3
# Revision 1.6.1.1  1997/05/12  10:54:28  hope
# branched from 1.6
#
@


1.6.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a7 3
# Revision 1.6.1.1  1997/05/12  10:54:28  hope
# branched from 1.6
#
@


1.6.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a7 3
# Revision 1.6.1.1.1.1  1997/07/28  18:37:21  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.5
log
@[Bug #1879]
Remove default setting of ARCH_OS
@
text
@d8 4
d142 24
a165 9
OS_NAME=`basename $ARCH_OS_DIR`
files=`find $TESTDIR -type f -name \*.sml -print | egrep -v "^.$"`
if [ "$OS_NAME" = NT -o "$OS_NAME" = Win95 ]; then
  files=`echo "$files" | egrep -v "\/unix\/"`
else
  files=`echo "$files" | egrep -v "\/win32\/"`
fi
NULL_FILE=/dev/null
RTS_NAME=main
a166 4
if [ "$OS_NAME" = "NT" -o "$OS_NAME" = "Win95" ]; then
  RTS_NAME=main.exe
  NULL_FILE=nul:
fi
@


1.4
log
@(No reason given.)
@
text
@d8 3
d90 1
a90 1
ARCH_OS_DIR=SPARC/SunOS
d131 6
@


1.4.7.1
log
@branched from 1.4
@
text
@a7 3
# Revision 1.4  1996/08/15  09:51:24  io
# (No reason given.)
#
@


1.4.6.1
log
@branched from 1.4
@
text
@a7 3
# Revision 1.4  1996/08/15  09:51:24  io
# (No reason given.)
#
@


1.4.6.1.1.1
log
@branched from 1.4.6.1
@
text
@a7 3
# Revision 1.4.6.1  1996/12/17  18:01:05  hope
# branched from 1.4
#
@


1.4.5.1
log
@branched from 1.4
@
text
@a7 3
# Revision 1.4  1996/08/15  09:51:24  io
# (No reason given.)
#
@


1.4.4.1
log
@branched from 1.4
@
text
@a7 3
# Revision 1.4  1996/08/15  09:51:24  io
# (No reason given.)
#
@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@a7 3
# Revision 1.4.4.1  1996/11/14  13:05:35  hope
# branched from 1.4
#
@


1.4.3.1
log
@branched from 1.4
@
text
@a7 3
# Revision 1.4  1996/08/15  09:51:24  io
# (No reason given.)
#
@


1.4.2.1
log
@branched from 1.4
@
text
@a7 3
# Revision 1.4  1996/08/15  09:51:24  io
# (No reason given.)
#
@


1.4.1.1
log
@branched from 1.4
@
text
@a7 3
# Revision 1.4  1996/08/15  09:51:24  io
# (No reason given.)
#
@


1.3
log
@handle os specific directories
@
text
@d8 3
d130 3
a132 5
FOO=`pwd`
cd $TESTDIR
directory=`find $TESTDIR -type d -print | egrep -v "^.$"`
if [ "$OS_NAME" = "NT" -o "$OS_NAME" = "Win95" ]; then
  directory=`echo "$directory" | egrep -v "unix"`
d134 1
a134 1
  directory=`echo "$directory" | egrep -v "win32"`
a135 3
files=`find $directory -type f -name \*.sml -print`
cd $FOO

@


1.2
log
@Improvements to make it work on NT
@
text
@d8 3
a83 1

a84 1

d127 10
d141 1
a141 2
if [ "$OS_NAME" = "NT" -o "$OS_NAME" = "Win95" ]
then
d146 1
d162 1
a162 2
for i in */*.sml
do
@


1.1
log
@new unit
@
text
@d7 4
a10 1
# $Log: CHECK_RESULT_ALL,v $
d125 12
a136 1
if [ ! -x $SRCDIR/rts/bin/$ARCH_OS_DIR/main ]
d138 1
a138 1
  echo Can\'t find $SRCDIR/rts/bin/$ARCH_OS_DIR/main
d156 1
a156 1
    if ( grep OK $i > /dev/null 2>&1 )
d162 1
a162 1
      elif (cmp $base.out $base.ans > /dev/null 2>&1)
@
