head	1.20;
access;
symbols
	MLWorks_21c0_1999_03_25:1.20
	MLWorks_20c1_1998_08_20:1.20
	MLWorks_20c0_1998_08_04:1.20
	MLWorks_20b2c2_1998_06_19:1.20
	MLWorks_20b2_Windows_1998_06_12:1.20
	MLWorks_20b1c1_1998_05_07:1.20
	MLWorks_20b0_1998_04_07:1.20
	MLWorks_20b0_1998_03_20:1.20
	MLWorks_20m2_1998_02_16:1.20
	MLWorks_20m1_1997_10_23:1.20
	MLWorks_11r1:1.20.8.1.1.1.1
	MLWorks_11c0_1997_09_09:1.20.8.1.1.1
	MLWorks_10r3:1.20.8.1.3
	MLWorks_10r2_551:1.20.8.1.2
	MLWorks_11:1.20.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.20.8.1
	MLWorks_20m0_1997_06_20:1.20
	MLWorks_1_0_r2c2_1997_06_14:1.20.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.20.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.20.8
	MLWorks_BugFix_1997_04_24:1.20
	MLWorks_1_0_r2_Win32_1997_04_11:1.20
	MLWorks_1_0_r2_Unix_1997_04_04:1.20
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.20.6.1.1
	MLWorks_gui_1996_12_18:1.20.7
	MLWorks_1_0_Win32_1996_12_17:1.20.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.20.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.20.4.1
	MLWorks_1_0_Irix_1996_11_28:1.20.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.20.5
	MLWorks_1_0_Unix_1996_11_14:1.20.4
	MLWorks_Open_Beta2_1996_10_11:1.20.3
	MLWorks_License_dev:1.20.2
	MLWorks_1_open_beta_1996_09_13:1.20.1
	MLWorks_Open_Beta_1996_08_22:1.20
	MLWorks_Beta_1996_07_02:1.20
	MLWorks_Beta_1996_06_07:1.20
	MLWorks_Beta_1996_06_06:1.20
	MLWorks_Beta_1996_06_05:1.20
	MLWorks_Beta_1996_06_03:1.20
	MLWorks_Beta_1996_05_31:1.20
	MLWorks_Beta_1996_05_30:1.20
	ML_beta_release_12/08/94:1.10
	ML_beta_release_03/08/94:1.10
	ML_revised_beta_release_25/05/94:1.8
	ML_final_beta_release_02/03/94:1.6
	mlworks-28-01-1994:1.6
	Release:1.5
	mlworks-beta-01-09-1993:1.5
	MLWorks-1-0-4-29/01/1993:1.1;
locks; strict;
comment	@# @;


1.20
date	96.05.22.15.33.37;	author jont;	state Exp;
branches
	1.20.1.1
	1.20.2.1
	1.20.3.1
	1.20.4.1
	1.20.5.1
	1.20.6.1
	1.20.7.1
	1.20.8.1;
next	1.19;

1.19
date	96.05.07.09.59.16;	author daveb;	state Exp;
branches;
next	1.18;

1.18
date	96.01.09.12.46.48;	author matthew;	state Exp;
branches;
next	1.17;

1.17
date	95.09.09.21.13.38;	author io;	state Exp;
branches;
next	1.16;

1.16
date	95.09.06.16.53.54;	author io;	state Exp;
branches;
next	1.15;

1.15
date	95.08.15.14.00.46;	author daveb;	state Exp;
branches;
next	1.14;

1.14
date	95.08.15.11.51.03;	author daveb;	state Exp;
branches;
next	1.13;

1.13
date	95.06.16.16.46.14;	author daveb;	state Exp;
branches;
next	1.12;

1.12
date	95.03.15.14.35.31;	author jont;	state Exp;
branches;
next	1.11;

1.11
date	95.02.09.15.15.29;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	94.07.14.10.30.33;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	94.06.17.12.04.07;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	94.05.03.14.31.57;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	94.03.15.14.47.16;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	93.09.28.14.13.14;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	93.04.15.09.58.24;	author daveb;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	93.04.14.17.17.45;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	93.04.14.15.10.18;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	93.02.02.12.46.40;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	93.01.07.18.06.41;	author daveb;	state Exp;
branches;
next	;

1.5.1.1
date	93.04.15.09.58.24;	author jont;	state Exp;
branches;
next	1.5.1.2;

1.5.1.2
date	93.09.27.11.55.37;	author daveb;	state Exp;
branches;
next	;

1.20.1.1
date	96.09.13.11.27.26;	author hope;	state Exp;
branches;
next	;

1.20.2.1
date	96.10.07.16.18.00;	author hope;	state Exp;
branches;
next	;

1.20.3.1
date	96.10.17.11.37.55;	author hope;	state Exp;
branches;
next	;

1.20.4.1
date	96.11.14.13.05.45;	author hope;	state Exp;
branches
	1.20.4.1.1.1;
next	;

1.20.4.1.1.1
date	96.11.28.15.15.24;	author hope;	state Exp;
branches;
next	;

1.20.5.1
date	96.11.22.18.23.12;	author hope;	state Exp;
branches;
next	;

1.20.6.1
date	96.12.17.18.01.16;	author hope;	state Exp;
branches
	1.20.6.1.1.1;
next	;

1.20.6.1.1.1
date	97.02.24.11.52.57;	author hope;	state Exp;
branches;
next	;

1.20.7.1
date	96.12.18.09.56.38;	author hope;	state Exp;
branches;
next	;

1.20.8.1
date	97.05.12.10.54.37;	author hope;	state Exp;
branches
	1.20.8.1.1.1
	1.20.8.1.2.1
	1.20.8.1.3.1;
next	;

1.20.8.1.1.1
date	97.07.28.18.37.15;	author daveb;	state Exp;
branches
	1.20.8.1.1.1.1.1;
next	;

1.20.8.1.1.1.1.1
date	97.10.07.12.02.19;	author jkbrook;	state Exp;
branches;
next	;

1.20.8.1.2.1
date	97.09.08.17.29.25;	author daveb;	state Exp;
branches;
next	;

1.20.8.1.3.1
date	97.09.09.14.27.22;	author daveb;	state Exp;
branches;
next	;


desc
@Shell script to test a compiler against the entire test suite.
@


1.20
log
@Changing to use .sh version of CHECK_SUCCESS
@
text
@#!/bin/sh
#
# CHECK_RESULT_ALL, just a dummy
#
# $Log$
#
# Copyright Harlequin Ltd. 1996.
#
CHECK_RESULT_ALL.sh $*
@


1.20.8.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT_ALL,v $
# Revision 1.20  1996/05/22  15:33:37  jont
# Changing to use .sh version of CHECK_SUCCESS
#
@


1.20.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
# Revision 1.20.8.1  1997/05/12  10:54:37  hope
# branched from 1.20
#
@


1.20.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
# Revision 1.20.8.1  1997/05/12  10:54:37  hope
# branched from 1.20
#
@


1.20.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
# Revision 1.20.8.1  1997/05/12  10:54:37  hope
# branched from 1.20
#
@


1.20.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
# Revision 1.20.8.1.1.1  1997/07/28  18:37:15  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.20.7.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT_ALL,v $
# Revision 1.20  1996/05/22  15:33:37  jont
# Changing to use .sh version of CHECK_SUCCESS
#
@


1.20.6.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT_ALL,v $
# Revision 1.20  1996/05/22  15:33:37  jont
# Changing to use .sh version of CHECK_SUCCESS
#
@


1.20.6.1.1.1
log
@branched from 1.20.6.1
@
text
@a5 3
# Revision 1.20.6.1  1996/12/17  18:01:16  hope
# branched from 1.20
#
@


1.20.5.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT_ALL,v $
# Revision 1.20  1996/05/22  15:33:37  jont
# Changing to use .sh version of CHECK_SUCCESS
#
@


1.20.4.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT_ALL,v $
# Revision 1.20  1996/05/22  15:33:37  jont
# Changing to use .sh version of CHECK_SUCCESS
#
@


1.20.4.1.1.1
log
@branched from 1.20.4.1
@
text
@a5 3
# Revision 1.20.4.1  1996/11/14  13:05:45  hope
# branched from 1.20
#
@


1.20.3.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT_ALL,v $
# Revision 1.20  1996/05/22  15:33:37  jont
# Changing to use .sh version of CHECK_SUCCESS
#
@


1.20.2.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT_ALL,v $
# Revision 1.20  1996/05/22  15:33:37  jont
# Changing to use .sh version of CHECK_SUCCESS
#
@


1.20.1.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT_ALL,v $
# Revision 1.20  1996/05/22  15:33:37  jont
# Changing to use .sh version of CHECK_SUCCESS
#
@


1.19
log
@Changed to keep the .out file around in case of error.
@
text
@a1 4
# CHECK_RESULT_ALL
# 
# Shell script to perform regression testing on the Harlequin
# SML compiler.
d3 1
a3 3
# $Log: CHECK_RESULT_ALL,v $
# Revision 1.18  1996/01/09  12:46:48  matthew
# Renaming motif.img to gui.img
d5 1
a5 2
# Revision 1.17  1995/09/09  21:13:38  io
# forgot a . in ./CHECK_RESULT..
d7 1
a7 2
# Revision 1.16  1995/09/06  16:53:54  io
# use rts/bin/$ARCH/$OS/main to help multiarch testing
d9 1
a9 146
# Revision 1.15  1995/08/15  14:00:46  daveb
# The version in ~sml and the version in Hope had got out of sync.
# Added a full stop to avoid spurious differences in output.
#
# Revision 1.14  1995/08/15  11:51:03  daveb
# Changed default SRC_DIR to /u/sml ...
#
# Revision 1.13  1995/06/16  16:46:14  daveb
# Converted this script to /bin/sh because Irix csh choked on "too many arguments"
#
# Revision 1.12  1995/03/15  14:35:31  jont
# Pass on -dir parameter
#
# Revision 1.11  1995/02/09  15:15:29  jont
# Modify to use new image directory structure
#
# Revision 1.10  1994/07/14  10:30:33  jont
# Add better message when answer file missing
#
# Revision 1.9  1994/06/17  12:04:07  daveb
# Changed default SRC_DIR to /usr/sml ...
#
# Revision 1.8  1994/05/03  14:31:57  daveb
# Added exit status.
#
# Revision 1.7  1994/03/15  14:47:16  jont
# Change default source directory to /usr/users/sml/MLW/src
#
# Revision 1.6  1993/09/28  14:13:14  daveb
# Merged in bug fix.
#
# Revision 1.5.1.2  1993/09/27  11:55:37  daveb
# No longer checks output of erroneous cases.
#
# Revision 1.5.1.1  1993/04/15  09:58:24  jont
# Fork for bug fixing
#
# Revision 1.5  1993/04/15  09:58:24  daveb
# Added call to CHECK_SUCCESS.
#
# Revision 1.4  1993/04/14  17:17:45  daveb
# Replaced call to mlworks with call to COMPILE_FILE.
# Changed name to CHECK_RESULT.
#
# Revision 1.3  1993/04/14  15:10:18  daveb
# Changed interpreter.img to motif.img.  Optimised sed processing.
#
# Revision 1.2  1993/02/02  12:46:40  daveb
# Script was printing 'OK' when it failed to create the .out file.
#
# Revision 1.1  1993/01/07  18:06:41  daveb
# Initial revision
#
#
# Copyright Harlequin Ltd. 1992.

TESTDIR=.
SRCDIR=/u/sml/MLW/src

ARCH_OS_DIR=SPARC/SunOS

usage='Usage: CHECK_RESULT_ALL \[-src \<source dir\>\] \[-dir \<architecture/OS\>\] \[-test \<dir\>\]'

while [ $# -gt 0 ]
do
  case $1 in
    -src)
      shift
      if [ "$1" != "" ]
      then
        SRCDIR=$1
	shift
      else
  	echo $usage
	exit 1
      fi;;
    -dir)
      shift
      if [ "$1" != "" ]
      then
        ARCH_OS_DIR=$1
        shift
      else
        echo $usage
        exit 1
      fi;;
    -test)
      shift
      if [ "$1" != "" ]
      then
        TESTDIR=$1
	shift
      else
  	echo $usage
	exit 1
      fi;;
    *)
      echo $usage
      exit 1;;
  esac
done

if [ ! -x $SRCDIR/rts/bin/$ARCH_OS_DIR/main ]
then
  echo Can\'t find $SRCDIR/rts/bin/$ARCH_OS_DIR/main
  exit 1
fi

if [ ! -r $SRCDIR/images/$ARCH_OS_DIR/gui.img ]
then
  echo Can\'t find $SRCDIR/images/$ARCH_OS_DIR/gui.img
  exit 1
fi

cd $TESTDIR
STATUS=0

for i in */*.sml
do
  if ./CHECK_SUCCESS -keep -src $SRCDIR -dir $ARCH_OS_DIR $i
  then
    base=`dirname $i`/`basename $i .sml`
    if ( grep OK $i > /dev/null 2>&1 )
    then
      if [ ! -r $base.ans ]
      then
        echo Can\'t find $base.ans
        STATUS=1
      elif (cmp $base.out $base.ans > /dev/null 2>&1)
      then
        echo $i: output check succeeded.
      else
        echo $i: output check failed \(see $base.out\).
        STATUS=1
      fi
    else
      echo $i: erroneous case, no output check.
    fi
    if [ $STATUS -eq 0 ]
    then
      rm -f $base.out
    fi
  fi
done

exit $STATUS
@


1.18
log
@Renaming motif.img to gui.img
@
text
@d8 3
d149 1
a149 1
        echo $i: output check failed.
d155 4
a158 1
    rm -f $base.out
@


1.17
log
@forgot a . in ./CHECK_RESULT..
@
text
@d8 3
d122 1
a122 1
if [ ! -r $SRCDIR/images/$ARCH_OS_DIR/motif.img ]
d124 1
a124 1
  echo Can\'t find $SRCDIR/images/$ARCH_OS_DIR/motif.img
@


1.16
log
@use rts/bin/$ARCH/$OS/main to help multiarch testing
@
text
@d8 3
d130 1
a130 1
  if CHECK_SUCCESS -keep -src $SRCDIR -dir $ARCH_OS_DIR $i
@


1.15
log
@The version in ~sml and the version in Hope had got out of sync.
Added a full stop to avoid spurious differences in output.
@
text
@d8 4
d110 1
a110 1
if [ ! -x $SRCDIR/rts/runtime ]
d112 1
a112 1
  echo Can\'t find $SRCDIR/rts/runtime
@


1.14
log
@Changed default SRC_DIR to /u/sml ...
@
text
@d8 3
d140 1
a140 1
      echo $i: erroneous case, no output check
@


1.13
log
@Converted this script to /bin/sh because Irix csh choked on "too many arguments"
@
text
@d8 3
d58 1
a58 1
SRCDIR=/usr/sml/MLW/src
@


1.12
log
@Pass on -dir parameter
@
text
@d1 1
a1 1
#!/bin/csh
d8 3
d54 2
a55 2
set TESTDIR=.
set SRCDIR=/usr/sml/MLW/src
d57 1
a57 1
set ARCH_OS_DIR=SPARC/SunOS
d59 1
a59 1
alias usage echo 'Usage: CHECK_RESULT_ALL \[-src \<source dir\>\] \[-dir \<architecture/OS\>\] \[-test \<dir\>\]'
d61 4
a64 3
while ($#argv)
  switch ($1)
    case -src:
d66 3
a68 2
      if ($1 != "") then
        set SRCDIR=$1
d71 4
a74 5
  	usage
	exit (1)
      endif
      breaksw
    case -dir:
d76 3
a78 2
      if ($1 != "") then
        set ARCH_OS_DIR=$1
d81 4
a84 5
        usage
        exit (1)
      endif
      breaksw
    case -test:
d86 3
a88 2
      if ($1 != "") then
        set TESTDIR=$1
d91 8
a98 10
  	usage
	exit (1)
      endif
      breaksw
    default:
      usage
      exit (1)
      breaksw
  endsw
end
d100 2
a101 1
if ( ! -x $SRCDIR/rts/runtime) then
d103 2
a104 2
  exit (1)
endif
d106 2
a107 1
if ( ! -r $SRCDIR/images/$ARCH_OS_DIR/motif.img) then
d109 2
a110 2
  exit (1)
endif
d113 20
a132 10
set STATUS=0
foreach i ( */*.sml )
  if { CHECK_SUCCESS -keep -src $SRCDIR -dir $ARCH_OS_DIR $i } then
    if ! { grep OK $i >& /dev/null } then
      echo ${i}: erroneous case, no output check
    else if (! -r $i:r.ans) then
      echo Can\'t find $i:r.ans
      set STATUS=1
    else if { cmp $i:r.out $i:r.ans >& /dev/null } then
      echo ${i}: output check succeeded.
d134 7
a140 7
      echo ${i}: output check failed.
      set STATUS=1
    endif
    rm -f $i:r.out
  endif
end
exit ($STATUS)
@


1.11
log
@Modify to use new image directory structure
@
text
@d8 3
d110 1
a110 1
  if { CHECK_SUCCESS -keep -src $SRCDIR $i } then
@


1.10
log
@Add better message when answer file missing
@
text
@d8 3
d51 3
a53 1
alias usage echo 'Usage: CHECK_RESULT_ALL \[-src \<source dir\>\] \[-test \<dir\>\]'
d67 10
d99 2
a100 2
if ( ! -r $SRCDIR/images/motif.img) then
  echo Can\'t find $SRCDIR/images/motif.img
@


1.9
log
@Changed default SRC_DIR to /usr/sml ...
@
text
@d8 3
d95 3
@


1.8
log
@Added exit status.
@
text
@d8 3
d43 1
a43 1
set SRCDIR=/usr/users/sml/MLW/src
@


1.7
log
@Change default source directory to /usr/users/sml/MLW/src
@
text
@d8 3
d84 1
d93 1
d98 1
@


1.6
log
@Merged in bug fix.
@
text
@d8 3
d37 1
a37 1
set SRCDIR=/usr/users/sml/src
@


1.5
log
@Added call to CHECK_SUCCESS.
@
text
@d8 9
d80 3
a82 1
    if { cmp $i:r.out $i:r.ans >& /dev/null } then
@


1.5.1.1
log
@Fork for bug fixing
@
text
@a7 3
# Revision 1.5  1993/04/15  09:58:24  daveb
# Added call to CHECK_SUCCESS.
#
@


1.5.1.2
log
@No longer checks output of erroneous cases.
@
text
@a7 3
# Revision 1.5.1.1  1993/04/15  09:58:24  jont
# Fork for bug fixing
#
d74 1
a74 3
    if ! { grep OK $i >& /dev/null } then
      echo ${i}: erroneous case, no output check
    else if { cmp $i:r.out $i:r.ans >& /dev/null } then
@


1.4
log
@Replaced call to mlworks with call to COMPILE_FILE.
Changed name to CHECK_RESULT.
@
text
@d8 4
d70 7
a76 5
  (COMPILE_FILE -src $SRCDIR $i > $i:r.out) >& /dev/null
  if { cmp $i:r.out $i:r.ans >& /dev/null } then
    echo ${i}: OK
  else
    echo ${i}: FAIL
a77 1
  rm -f $i:r.out
@


1.3
log
@Changed interpreter.img to motif.img.  Optimised sed processing.
@
text
@d2 1
a2 1
# RUN_ALL_TESTS
d7 4
a10 1
# $Log: RUN_ALL_TESTS,v $
d23 1
a23 1
alias usage echo 'Usage: RUN_ALL_TESTS \[-src \<source dir\>\] \[-test \<dir\>\]'
d66 1
a66 5
  $SRCDIR/rts/runtime -load $SRCDIR/images/motif.img < $i | \
    sed -e '1d\
	    s/MLWorks>> //g\
	    s/MLWorks> //g' \
    >& $i:r.out
@


1.2
log
@Script was printing 'OK' when it failed to create the .out file.
@
text
@d8 3
d56 2
a57 2
if ( ! -r $SRCDIR/images/interpreter.img) then
  echo Can\'t find $SRCDIR/images/interpreter.img
d63 4
a66 2
  $SRCDIR/rts/runtime -load $SRCDIR/images/interpreter.img < $i | \
    tail +2 | sed -e '1,$s/MLWorks>> //g' | sed -e '1,$s/MLWorks> //g' \
@


1.1
log
@Initial revision
@
text
@d7 3
a9 1
# $Log$
d11 1
d62 1
a62 1
    >& $i:r.out && \
@
