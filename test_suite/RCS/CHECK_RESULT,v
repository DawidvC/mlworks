head	1.20;
access;
symbols
	MLWorks_21c0_1999_03_25:1.20
	MLWorks_20c1_1998_08_20:1.20
	MLWorks_20c0_1998_08_04:1.20
	MLWorks_20b2c2_1998_06_19:1.20
	MLWorks_20b2_Windows_1998_06_12:1.20
	MLWorks_20b1c1_1998_05_07:1.20
	MLWorks_20b0_1998_04_07:1.20
	MLWorks_20b0_1998_03_20:1.20
	MLWorks_20m2_1998_02_16:1.20
	MLWorks_20m1_1997_10_23:1.20
	MLWorks_11r1:1.20.8.1.1.1.1
	MLWorks_11c0_1997_09_09:1.20.8.1.1.1
	MLWorks_10r3:1.20.8.1.3
	MLWorks_10r2_551:1.20.8.1.2
	MLWorks_11:1.20.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.20.8.1
	MLWorks_20m0_1997_06_20:1.20
	MLWorks_1_0_r2c2_1997_06_14:1.20.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.20.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.20.8
	MLWorks_BugFix_1997_04_24:1.20
	MLWorks_1_0_r2_Win32_1997_04_11:1.20
	MLWorks_1_0_r2_Unix_1997_04_04:1.20
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.20.6.1.1
	MLWorks_gui_1996_12_18:1.20.7
	MLWorks_1_0_Win32_1996_12_17:1.20.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.20.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.20.4.1
	MLWorks_1_0_Irix_1996_11_28:1.20.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.20.5
	MLWorks_1_0_Unix_1996_11_14:1.20.4
	MLWorks_Open_Beta2_1996_10_11:1.20.3
	MLWorks_License_dev:1.20.2
	MLWorks_1_open_beta_1996_09_13:1.20.1
	MLWorks_Open_Beta_1996_08_22:1.20
	MLWorks_Beta_1996_07_02:1.20
	MLWorks_Beta_1996_06_07:1.20
	MLWorks_Beta_1996_06_06:1.20
	MLWorks_Beta_1996_06_05:1.20
	MLWorks_Beta_1996_06_03:1.20
	MLWorks_Beta_1996_05_31:1.20
	MLWorks_Beta_1996_05_30:1.20
	ML_beta_release_12/08/94:1.13
	ML_beta_release_03/08/94:1.13
	ML_revised_beta_release_25/05/94:1.11
	ML_final_beta_release_02/03/94:1.9
	mlworks-28-01-1994:1.9
	Release:1.7
	mlworks-beta-01-09-1993:1.7
	MLWorks-1-0-4-29/01/1993:1.3
	MLWorks-1-0-3-21/12/1992:1.1
	MLWorks-1-0-2-15/12/1992:1.1
	MLWorks-1-0-1-04/12/1992:1.1;
locks; strict;


1.20
date	96.05.22.15.06.38;	author jont;	state Exp;
branches
	1.20.1.1
	1.20.2.1
	1.20.3.1
	1.20.4.1
	1.20.5.1
	1.20.6.1
	1.20.7.1
	1.20.8.1;
next	1.19;

1.19
date	96.05.07.09.40.18;	author daveb;	state Exp;
branches;
next	1.18;

1.18
date	96.01.09.12.46.28;	author matthew;	state Exp;
branches;
next	1.17;

1.17
date	95.09.06.16.46.34;	author io;	state Exp;
branches;
next	1.16;

1.16
date	95.08.15.11.50.58;	author daveb;	state Exp;
branches;
next	1.15;

1.15
date	95.03.15.14.34.24;	author jont;	state Exp;
branches;
next	1.14;

1.14
date	95.02.09.15.16.34;	author jont;	state Exp;
branches;
next	1.13;

1.13
date	94.06.23.15.50.10;	author jont;	state Exp;
branches;
next	1.12;

1.12
date	94.06.17.12.03.54;	author daveb;	state Exp;
branches;
next	1.11;

1.11
date	94.05.03.14.29.19;	author daveb;	state Exp;
branches;
next	1.10;

1.10
date	94.03.15.14.46.55;	author jont;	state Exp;
branches;
next	1.9;

1.9
date	93.09.28.14.11.32;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	93.09.23.17.01.50;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	93.04.15.09.56.31;	author daveb;	state Exp;
branches
	1.7.1.1;
next	1.6;

1.6
date	93.04.14.17.16.03;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	93.04.14.15.06.43;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	93.02.02.12.39.48;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	93.01.27.11.23.28;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	93.01.07.18.06.56;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	92.11.04.17.10.36;	author daveb;	state Exp;
branches;
next	;

1.7.1.1
date	93.04.15.09.56.31;	author jont;	state Exp;
branches;
next	1.7.1.2;

1.7.1.2
date	93.09.23.17.00.09;	author daveb;	state Exp;
branches;
next	1.7.1.3;

1.7.1.3
date	93.09.27.11.55.56;	author daveb;	state Exp;
branches;
next	;

1.20.1.1
date	96.09.13.11.27.14;	author hope;	state Exp;
branches;
next	;

1.20.2.1
date	96.10.07.16.17.47;	author hope;	state Exp;
branches;
next	;

1.20.3.1
date	96.10.17.11.37.42;	author hope;	state Exp;
branches;
next	;

1.20.4.1
date	96.11.14.13.05.35;	author hope;	state Exp;
branches
	1.20.4.1.1.1;
next	;

1.20.4.1.1.1
date	96.11.28.15.15.13;	author hope;	state Exp;
branches;
next	;

1.20.5.1
date	96.11.22.18.23.02;	author hope;	state Exp;
branches;
next	;

1.20.6.1
date	96.12.17.18.01.05;	author hope;	state Exp;
branches
	1.20.6.1.1.1;
next	;

1.20.6.1.1.1
date	97.02.24.11.52.46;	author hope;	state Exp;
branches;
next	;

1.20.7.1
date	96.12.18.09.56.28;	author hope;	state Exp;
branches;
next	;

1.20.8.1
date	97.05.12.10.54.27;	author hope;	state Exp;
branches
	1.20.8.1.1.1
	1.20.8.1.2.1
	1.20.8.1.3.1;
next	;

1.20.8.1.1.1
date	97.07.28.18.37.20;	author daveb;	state Exp;
branches
	1.20.8.1.1.1.1.1;
next	;

1.20.8.1.1.1.1.1
date	97.10.07.12.02.23;	author jkbrook;	state Exp;
branches;
next	;

1.20.8.1.2.1
date	97.09.08.17.29.28;	author daveb;	state Exp;
branches;
next	;

1.20.8.1.3.1
date	97.09.09.14.27.25;	author daveb;	state Exp;
branches;
next	;


desc
@Shell script to run the tests in the ML test suite.
@


1.20
log
@Convert to sh script
@
text
@#!/bin/sh
#
# CHECK_RESULT, just a dummy
#
# $Log$
#
# Copyright Harlequin Ltd. 1996.
#
CHECK_RESULT.sh $*
@


1.20.8.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT,v $
# Revision 1.20  1996/05/22  15:06:38  jont
# Convert to sh script
#
@


1.20.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a5 3
# Revision 1.20.8.1  1997/05/12  10:54:27  hope
# branched from 1.20
#
@


1.20.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a5 3
# Revision 1.20.8.1  1997/05/12  10:54:27  hope
# branched from 1.20
#
@


1.20.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a5 3
# Revision 1.20.8.1  1997/05/12  10:54:27  hope
# branched from 1.20
#
@


1.20.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a5 3
# Revision 1.20.8.1.1.1  1997/07/28  18:37:20  daveb
# branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
#
@


1.20.7.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT,v $
# Revision 1.20  1996/05/22  15:06:38  jont
# Convert to sh script
#
@


1.20.6.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT,v $
# Revision 1.20  1996/05/22  15:06:38  jont
# Convert to sh script
#
@


1.20.6.1.1.1
log
@branched from 1.20.6.1
@
text
@a5 3
# Revision 1.20.6.1  1996/12/17  18:01:05  hope
# branched from 1.20
#
@


1.20.5.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT,v $
# Revision 1.20  1996/05/22  15:06:38  jont
# Convert to sh script
#
@


1.20.4.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT,v $
# Revision 1.20  1996/05/22  15:06:38  jont
# Convert to sh script
#
@


1.20.4.1.1.1
log
@branched from 1.20.4.1
@
text
@a5 3
# Revision 1.20.4.1  1996/11/14  13:05:35  hope
# branched from 1.20
#
@


1.20.3.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT,v $
# Revision 1.20  1996/05/22  15:06:38  jont
# Convert to sh script
#
@


1.20.2.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT,v $
# Revision 1.20  1996/05/22  15:06:38  jont
# Convert to sh script
#
@


1.20.1.1
log
@branched from 1.20
@
text
@d5 1
a5 4
# $Log: CHECK_RESULT,v $
# Revision 1.20  1996/05/22  15:06:38  jont
# Convert to sh script
#
@


1.19
log
@Changed to keep the .out file around in case of error.
@
text
@d1 1
a1 5
#!/bin/csh
# 
# $Log: CHECK_RESULT,v $
# Revision 1.18  1996/01/09  12:46:28  matthew
# Renaming motif.img to gui.img
d3 1
a3 2
# Revision 1.17  1995/09/06  16:46:34  io
# use rts/bin/$ARCH/$OS/main to help multiarch testing
d5 1
a5 2
# Revision 1.16  1995/08/15  11:50:58  daveb
# Changed default SRC_DIR to /u/sml ...
d7 1
a7 2
# Revision 1.15  1995/03/15  14:34:24  jont
# Pass on -dir parameter
d9 1
a9 136
# Revision 1.14  1995/02/09  15:16:34  jont
# Modify to use new image directory structure
#
# Revision 1.13  1994/06/23  15:50:10  jont
# Add detection of missing answer files
#
# Revision 1.12  1994/06/17  12:03:54  daveb
# Changed default SRC_DIR to /usr/sml ...
#
# Revision 1.11  1994/05/03  14:29:19  daveb
# Added exit status.
#
# Revision 1.10  1994/03/15  14:46:55  jont
# Change default source directory to /usr/users/sml/MLW/src
#
# Revision 1.9  1993/09/28  14:11:32  daveb
# Merged in bug fix.
#
# Revision 1.8  1993/09/23  17:01:50  daveb
# Merged in bug fix.
#
# Revision 1.7.1.3  1993/09/27  11:55:56  daveb
# No longer checks output of erroneous cases.
#
# Revision 1.7.1.2  1993/09/23  17:00:09  daveb
# Added -diff flag, which shows diff between output and answer files in
# case when they differ.
#
# Revision 1.7.1.1  1993/04/15  09:56:31  jont
# Fork for bug fixing
#
# Revision 1.7  1993/04/15  09:56:31  daveb
# Added call to CHECK_SUCCESS.
#
# Revision 1.6  1993/04/14  17:16:03  daveb
# Replaced call to mlworks with call to COMPILE_FILE.
# Changed name to CHECK_RESULT.
#
# Revision 1.5  1993/04/14  15:06:43  daveb
# Replaced interpreter.img with motif.img.  Optimised sed processing.
# Added check for non-existent files.
#
# Revision 1.4  1993/02/02  12:39:48  daveb
# Script was printing 'OK' when it faled to create a .out file.
#
# Revision 1.3  1993/01/27  11:23:28  daveb
# Removed old description of file.
#
# Revision 1.2  1993/01/07  18:06:56  daveb
# Added argument handling, used interpreter.img instead of shell.img,
# and filtered out prompts and version message from output.
#
#
# Copyright Harlequin Ltd. 1992.

set SRCDIR=/u/sml/MLW/src
set DIFF=0

set ARCH_OS_DIR=SPARC/SunOS

alias usage echo 'Usage: CHECK_RESULT \[-diff\] \[-src \<source dir\>\] \[-dir \<architecture/OS\>\] \<test files\>'

while ($#argv)
  switch ($1)
    case -diff:
      set DIFF=1;
      shift;
      breaksw;
    case -src:
      shift
      if ($1 != "") then
        set SRCDIR=$1
	shift
      else
  	usage
	exit (1)
      endif
      breaksw
    case -dir:
      shift
      if ($1 != "") then
        set ARCH_OS_DIR=$1
        shift
      else
        usage
        exit (1)
      endif
      breaksw
    default:
      break
      breaksw
  endsw
end

if ( ! $#argv) then
  usage
  exit (1)
endif
  
if ( ! -x $SRCDIR/rts/bin/$ARCH_OS_DIR/main) then
  echo Can\'t find $SRCDIR/rts/bin/$ARCH_OS_DIR/main
  exit (1)
endif

if ( ! -r $SRCDIR/images/$ARCH_OS_DIR/gui.img) then
  echo Can\'t find $SRCDIR/images/$ARCH_OS_DIR/gui.img
  exit (1)
endif

set STATUS=0
foreach i ($argv)
  if ( ! -r $i ) then
    echo Can\'t find $i
    set STATUS=1
  else if { CHECK_SUCCESS -keep -src $SRCDIR -dir $ARCH_OS_DIR $i } then
    if ! { egrep OK $i >& /dev/null } then
      echo ${i}: erroneous case, no output check.
    else if (! -r $i:r.ans) then
      echo Can\'t find $i:r.ans
      set STATUS=1
    else if { cmp $i:r.out $i:r.ans >& /dev/null } then
      echo ${i}: output check succeeded.
    else if ( $DIFF ) then
      diff $i:r.out $i:r.ans
      echo Output saved in $i:r.out
      set STATUS=1
    else
      echo ${i}: output check failed \(see $i:r.out\).
      set STATUS=1
    endif
    if ( ! $STATUS ) then
      rm -f $i:r.out
    endif
  endif 
end
exit ($STATUS)
@


1.18
log
@Renaming motif.img to gui.img
@
text
@d4 3
d140 1
d143 1
a143 1
      echo ${i}: output check failed.
d146 3
a148 1
    rm -f $i:r.out
@


1.17
log
@use rts/bin/$ARCH/$OS/main to help multiarch testing
@
text
@d4 3
d117 2
a118 2
if ( ! -r $SRCDIR/images/$ARCH_OS_DIR/motif.img) then
  echo Can\'t find $SRCDIR/images/$ARCH_OS_DIR/motif.img
@


1.16
log
@Changed default SRC_DIR to /u/sml ...
@
text
@d4 3
d109 2
a110 2
if ( ! -x $SRCDIR/rts/runtime) then
  echo Can\'t find $SRCDIR/rts/runtime
@


1.15
log
@Pass on -dir parameter
@
text
@d4 3
d62 1
a62 1
set SRCDIR=/usr/sml/MLW/src
@


1.14
log
@Modify to use new image directory structure
@
text
@d4 3
d118 1
a118 1
  else if { CHECK_SUCCESS -keep -src $SRCDIR $i } then
@


1.13
log
@Add detection of missing answer files
@
text
@d4 3
d59 3
a61 1
alias usage echo 'Usage: CHECK_RESULT \[-diff\] \[-src \<source dir\>\] \<test files\>'
d79 10
d105 2
a106 2
if ( ! -r $SRCDIR/images/motif.img) then
  echo Can\'t find $SRCDIR/images/motif.img
@


1.12
log
@Changed default SRC_DIR to /usr/sml ...
@
text
@d4 3
d103 3
@


1.11
log
@Added exit status.
@
text
@d4 3
d50 1
a50 1
set SRCDIR=/usr/users/sml/MLW/src
@


1.10
log
@Change default source directory to /usr/users/sml/MLW/src
@
text
@d4 3
d89 1
d93 1
d101 1
d104 1
d109 1
@


1.9
log
@Merged in bug fix.
@
text
@d4 3
d44 1
a44 1
set SRCDIR=/usr/users/sml/src
@


1.8
log
@Merged in bug fix.
@
text
@d4 6
d87 3
a89 1
    if { cmp $i:r.out $i:r.ans >& /dev/null } then
@


1.7
log
@Added call to CHECK_SUCCESS.
@
text
@d4 10
d36 1
d38 1
a38 1
alias usage echo 'Usage: CHECK_RESULT \[-src \<source dir\>\] \<test files\>'
d42 4
d83 2
@


1.7.1.1
log
@Fork for bug fixing
@
text
@a3 3
# Revision 1.7  1993/04/15  09:56:31  daveb
# Added call to CHECK_SUCCESS.
#
@


1.7.1.2
log
@Added -diff flag, which shows diff between output and answer files in
case when they differ.
@
text
@a3 3
# Revision 1.7.1.1  1993/04/15  09:56:31  jont
# Fork for bug fixing
#
a28 1
set DIFF=0
d30 1
a30 1
alias usage echo 'Usage: CHECK_RESULT \[-diff\] \[-src \<source dir\>\] \<test files\>'
a33 4
    case -diff:
      set DIFF=1;
      shift;
      breaksw;
a70 2
    else if ( $DIFF ) then
      diff $i:r.out $i:r.ans
@


1.7.1.3
log
@No longer checks output of erroneous cases.
@
text
@a3 4
# Revision 1.7.1.2  1993/09/23  17:00:09  daveb
# Added -diff flag, which shows diff between output and answer files in
# case when they differ.
#
d77 1
a77 3
    if ! { egrep OK $i >& /dev/null } then
      echo ${i}: erroneous case, no output check.
    else if { cmp $i:r.out $i:r.ans >& /dev/null } then
@


1.6
log
@Replaced call to mlworks with call to COMPILE_FILE.
Changed name to CHECK_RESULT.
@
text
@d4 4
d65 1
a65 2
  else
    (COMPILE_FILE -src $SRCDIR $i > $i:r.out) >& /dev/null
d67 1
a67 1
      echo ${i}: OK
d69 1
a69 1
      echo ${i}: FAIL
@


1.5
log
@Replaced interpreter.img with motif.img.  Optimised sed processing.
Added check for non-existent files.
@
text
@d3 5
a7 1
# $Log: RUN_TESTS,v $
d23 1
a23 1
alias usage echo 'Usage: RUN_TESTS \[-src \<source dir\>\] \<test files\>'
d62 1
a62 5
    $SRCDIR/rts/runtime -load $SRCDIR/images/motif.img < $i | \
      sed -e '1d\
	      s/MLWorks>> //g\
	      s/MLWorks> //g' \
        >& $i:r.out
@


1.4
log
@Script was printing 'OK' when it faled to create a .out file.
@
text
@d4 3
d49 2
a50 2
if ( ! -r $SRCDIR/images/interpreter.img) then
  echo Can\'t find $SRCDIR/images/interpreter.img
d55 2
a56 5
  $SRCDIR/rts/runtime -load $SRCDIR/images/interpreter.img < $i | \
    tail +2 | sed -e '1,$s/MLWorks>> //g' | sed -e '1,$s/MLWorks> //g' \
    >& $i:r.out
  if { cmp $i:r.out $i:r.ans >& /dev/null } then
    echo ${i}: OK
d58 12
a69 3
    echo ${i}: FAIL
  endif
  rm -f $i:r.out
@


1.3
log
@Removed old description of file.
@
text
@d4 3
d54 1
a54 1
    >& $i:r.out && \
@


1.2
log
@Added argument handling, used interpreter.img instead of shell.img,
and filtered out prompts and version message from output.
@
text
@a1 1
# RUN_TESTS
d3 4
a6 2
# Shell script to perform regression testing on the Harlequin
# SML compiler.
a7 1
# $Log$
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# RUN-TESTS
d7 2
d11 31
a41 3
set TESTDIR=.
#SRCDIR=/usr/users/sml/src/images
set SRCDIR=/usr/users/daveb/ml/src/images
d43 4
a46 1
# Argument handling here.
d48 4
a51 2
foreach i ( */test*.sml )
  $SRCDIR/runtime -load $SRCDIR/shell.img < $i >& $i:r.out && \
@
