head	1.2;
access;
symbols
	MLWorks_21c0_1999_03_25:1.2
	MLWorks_20c1_1998_08_20:1.2
	MLWorks_20c0_1998_08_04:1.2
	MLWorks_20b2c2_1998_06_19:1.2
	MLWorks_20b2_Windows_1998_06_12:1.2
	MLWorks_20b1c1_1998_05_07:1.2
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2;
locks; strict;
comment	@ *  @;


1.2
date	98.02.18.10.39.13;	author mitchell;	state Exp;
branches;
next	1.1;

1.1
date	98.02.18.10.24.16;	author mitchell;	state Exp;
branches;
next	;


desc
@new unit
[Bug #30341]
Test to ensure we handle derived form of where properly
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' *  '
@
text
@(*
Check that the derived form of where type, where the types can be combined
using "and", works, whilst still allowing sigbinds to be combined using and
as well.  The grammar is a bit nasty in this area, so it's tricky to
allow both.  Better check we can, hence the test ...

Result: OK
 
$Log$

Copyright (c) 1998 Harlequin Group plc
*)

signature S1 = sig type s; type t; val x: s; val y: t end;

signature S2 = S1 where type s = int and type t = bool and S3 = S1;

@


1.1
log
@new unit
[Bug #30341]
Test to ensure we handle derived form of where properly
@
text
@@
