head	1.32;
access;
symbols
	MLWorks_21c0_1999_03_25:1.32
	MLWorks_20c1_1998_08_20:1.32
	MLWorks_20c0_1998_08_04:1.32
	MLWorks_20b2c2_1998_06_19:1.32
	MLWorks_20b2_Windows_1998_06_12:1.32
	MLWorks_20b1c1_1998_05_07:1.32
	MLWorks_20b0_1998_04_07:1.31
	MLWorks_20b0_1998_03_20:1.31
	MLWorks_20m2_1998_02_16:1.31
	MLWorks_20m1_1997_10_23:1.30
	MLWorks_11r1:1.30.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.30.1.1.1.1
	MLWorks_10r3:1.30.1.1.3
	MLWorks_10r2_551:1.30.1.1.2
	MLWorks_11:1.30.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.30.1.1
	MLWorks_20m0_1997_06_20:1.30
	MLWorks_1_0_r2c2_1997_06_14:1.30.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.30.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.30.1
	MLWorks_BugFix_1997_04_24:1.30
	MLWorks_1_0_r2_Win32_1997_04_11:1.30
	MLWorks_1_0_r2_Unix_1997_04_04:1.30
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.28.3.1.1
	MLWorks_gui_1996_12_18:1.28.4
	MLWorks_1_0_Win32_1996_12_17:1.28.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.28.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.28.1.1
	MLWorks_1_0_Irix_1996_11_28:1.28.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.28.2
	MLWorks_1_0_Unix_1996_11_14:1.28.1
	MLWorks_Open_Beta2_1996_10_11:1.27.3
	MLWorks_License_dev:1.27.2
	MLWorks_1_open_beta_1996_09_13:1.27.1
	MLWorks_Open_Beta_1996_08_22:1.24
	MLWorks_Beta_1996_07_02:1.22
	MLWorks_Beta_1996_06_07:1.21
	MLWorks_Beta_1996_06_06:1.20
	MLWorks_Beta_1996_06_05:1.20
	MLWorks_Beta_1996_06_03:1.20
	MLWorks_Beta_1996_05_31:1.20
	MLWorks_Beta_1996_05_30:1.19
	ML_beta_release_12/08/94:1.4
	ML_beta_release_03/08/94:1.4
	ML_revised_beta_release_25/05/94:1.4
	ML_final_beta_release_02/03/94:1.3
	mlworks-28-01-1994:1.3
	Release:1.1;
locks; strict;


1.32
date	98.05.04.17.26.37;	author mitchell;	state Exp;
branches;
next	1.31;

1.31
date	97.11.25.19.38.04;	author daveb;	state Exp;
branches;
next	1.30;

1.30
date	97.04.02.22.01.27;	author jont;	state Exp;
branches
	1.30.1.1;
next	1.29;

1.29
date	97.03.05.11.38.31;	author jont;	state Exp;
branches;
next	1.28;

1.28
date	96.11.08.14.57.57;	author matthew;	state Exp;
branches
	1.28.1.1
	1.28.2.1
	1.28.3.1
	1.28.4.1;
next	1.27;

1.27
date	96.09.09.12.09.20;	author io;	state Exp;
branches
	1.27.1.1
	1.27.2.1
	1.27.3.1;
next	1.26;

1.26
date	96.09.07.00.02.51;	author io;	state Exp;
branches;
next	1.25;

1.25
date	96.08.28.22.16.47;	author stephenb;	state Exp;
branches;
next	1.24;

1.24
date	96.08.14.13.32.43;	author io;	state Exp;
branches;
next	1.23;

1.23
date	96.07.04.10.53.52;	author andreww;	state Exp;
branches;
next	1.22;

1.22
date	96.06.25.12.04.36;	author io;	state Exp;
branches;
next	1.21;

1.21
date	96.06.07.09.18.03;	author io;	state Exp;
branches;
next	1.20;

1.20
date	96.05.30.15.00.58;	author stephenb;	state Exp;
branches;
next	1.19;

1.19
date	96.05.24.11.00.43;	author stephenb;	state Exp;
branches;
next	1.18;

1.18
date	96.05.23.12.38.14;	author matthew;	state Exp;
branches;
next	1.17;

1.17
date	96.05.21.14.22.42;	author stephenb;	state Exp;
branches;
next	1.16;

1.16
date	96.05.17.11.49.52;	author stephenb;	state Exp;
branches;
next	1.15;

1.15
date	96.05.16.15.47.12;	author jont;	state Exp;
branches;
next	1.14;

1.14
date	96.05.09.12.26.59;	author stephenb;	state Exp;
branches;
next	1.13;

1.13
date	96.05.08.12.53.43;	author jont;	state Exp;
branches;
next	1.12;

1.12
date	96.04.22.11.15.01;	author stephenb;	state Exp;
branches;
next	1.11;

1.11
date	96.04.18.11.15.54;	author stephenb;	state Exp;
branches;
next	1.10;

1.10
date	96.04.03.10.18.29;	author stephenb;	state Exp;
branches;
next	1.9;

1.9
date	96.03.18.12.48.15;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	96.01.25.17.38.04;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	96.01.24.11.56.20;	author stephenb;	state Exp;
branches;
next	1.6;

1.6
date	95.12.08.12.22.47;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	95.02.24.15.14.50;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	94.04.26.15.55.29;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	93.12.15.17.45.09;	author nickh;	state Exp;
branches;
next	1.2;

1.2
date	93.12.10.19.06.52;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	93.09.28.13.39.28;	author daveb;	state Exp;
branches;
next	;

1.27.1.1
date	96.09.13.11.37.12;	author hope;	state Exp;
branches;
next	;

1.27.2.1
date	96.10.07.16.28.26;	author hope;	state Exp;
branches;
next	;

1.27.3.1
date	96.10.17.11.49.18;	author hope;	state Exp;
branches;
next	;

1.28.1.1
date	96.11.14.13.16.41;	author hope;	state Exp;
branches
	1.28.1.1.1.1;
next	;

1.28.1.1.1.1
date	96.11.28.15.27.05;	author hope;	state Exp;
branches;
next	;

1.28.2.1
date	96.11.22.18.34.29;	author hope;	state Exp;
branches;
next	;

1.28.3.1
date	96.12.17.18.13.26;	author hope;	state Exp;
branches
	1.28.3.1.1.1;
next	;

1.28.3.1.1.1
date	97.02.24.12.06.12;	author hope;	state Exp;
branches;
next	;

1.28.4.1
date	96.12.18.10.08.15;	author hope;	state Exp;
branches;
next	;

1.30.1.1
date	97.05.12.11.06.50;	author hope;	state Exp;
branches
	1.30.1.1.1.1
	1.30.1.1.2.1
	1.30.1.1.3.1;
next	;

1.30.1.1.1.1
date	97.07.28.18.47.59;	author daveb;	state Exp;
branches
	1.30.1.1.1.1.1.1;
next	;

1.30.1.1.1.1.1.1
date	97.10.07.12.12.38;	author jkbrook;	state Exp;
branches;
next	;

1.30.1.1.2.1
date	97.09.08.17.39.42;	author daveb;	state Exp;
branches;
next	;

1.30.1.1.3.1
date	97.09.09.14.38.28;	author daveb;	state Exp;
branches;
next	;


desc
@Part of the test suite.
@


1.32
log
@[Bug #50071]
Replace uses of Shell.Build.loadSource by Shell.Project
@
text
@signature Foo
val it : unit = ()
@


1.31
log
@[Bug #30323]
@
text
@d1 1
a2 4
val it : unit = ()
signature Foo =
  sig
  end
@


1.30
log
@Modify to stop displaying syserror type
@
text
@a0 3
val y : int = 2
structure OS = struct ... end
val it : unit = ()
@


1.30.1.1
log
@branched from 1.30
@
text
@@


1.30.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.30.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.30.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.30.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.29
log
@Modify because Path now has toUnixPath and fromUnixPath
@
text
@d1 2
a2 107
val it : unit = ()
val it : unit = ()
structure OS =
  struct
    structure FileSys =
      struct
        datatype access_mode =
          A_EXEC |
          A_READ |
          A_WRITE
        eqtype dirstream = dirstream
        eqtype file_id = file_id
        val A_EXEC : OS.FileSys.access_mode
        val A_READ : OS.FileSys.access_mode
        val A_WRITE : OS.FileSys.access_mode
        val access : (string * OS.FileSys.access_mode list) -> bool = fn
        val chDir : string -> unit = fn
        val closeDir : OS.FileSys.dirstream -> unit = fn
        val compare : (OS.FileSys.file_id * OS.FileSys.file_id) -> order = fn
        val fileId : string -> OS.FileSys.file_id = fn
        val fileSize : string -> int = fn
        val fullPath : string -> string = fn
        val getDir : unit -> string = fn
        val hash : OS.FileSys.file_id -> word = fn
        val isDir : string -> bool = fn
        val isLink : string -> bool = fn
        val mkDir : string -> unit = fn
        val modTime : string -> time(hidden) = fn
        val openDir : string -> OS.FileSys.dirstream = fn
        val readDir : OS.FileSys.dirstream -> string = fn
        val readLink : string -> string = fn
        val realPath : string -> string = fn
        val remove : string -> unit = fn
        val rename : {new: string, old: string} -> unit = fn
        val rewindDir : OS.FileSys.dirstream -> unit = fn
        val rmDir : string -> unit = fn
        val setTime : (string * time(hidden) option) -> unit = fn
        val tmpName : unit -> string = fn
      end
    structure IO =
      struct
        structure Kind = struct ... end
        eqtype iodesc = iodesc
        eqtype iodesc_kind = iodesc_kind
        eqtype poll_desc = poll_desc
        eqtype poll_info = poll_info
        exception Poll
        val compare : (OS.IO.iodesc * OS.IO.iodesc) -> order = fn
        val hash : OS.IO.iodesc -> word = fn
        val infoToPollDesc : OS.IO.poll_info -> OS.IO.poll_desc = fn
        val isIn : OS.IO.poll_info -> bool = fn
        val isOut : OS.IO.poll_info -> bool = fn
        val isPri : OS.IO.poll_info -> bool = fn
        val kind : OS.IO.iodesc -> OS.IO.iodesc_kind = fn
        val poll : (OS.IO.poll_desc list * time(hidden) option) -> OS.IO.poll_info list = fn
        val pollDesc : OS.IO.iodesc -> OS.IO.poll_desc option = fn
        val pollIn : OS.IO.poll_desc -> OS.IO.poll_desc = fn
        val pollOut : OS.IO.poll_desc -> OS.IO.poll_desc = fn
        val pollPri : OS.IO.poll_desc -> OS.IO.poll_desc = fn
        val pollToIODesc : OS.IO.poll_desc -> OS.IO.iodesc = fn
      end
    structure Path =
      struct
        exception Path
        val base : string -> string = fn
        val concat : (string * string) -> string = fn
        val currentArc : string = "."
        val dir : string -> string = fn
        val ext : string -> string option = fn
        val file : string -> string = fn
        val fromString : string -> {arcs: string list, isAbs: bool, vol: string} = fn
        val fromUnixPath : string -> string = fn
        val getParent : string -> string = fn
        val getVolume : string -> string = fn
        val isAbsolute : string -> bool = fn
        val isCanonical : string -> bool = fn
        val isRelative : string -> bool = fn
        val isRoot : string -> bool = fn
        val joinBaseExt : {base: string, ext: string option} -> string = fn
        val joinDirFile : {dir: string, file: string} -> string = fn
        val mkAbsolute : (string * string) -> string = fn
        val mkCanonical : string -> string = fn
        val mkRelative : (string * string) -> string = fn
        val parentArc : string = ".."
        val splitBaseExt : string -> {base: string, ext: string option} = fn
        val splitDirFile : string -> {dir: string, file: string} = fn
        val toString : {arcs: string list, isAbs: bool, vol: string} -> string = fn
        val toUnixPath : string -> string = fn
        val validVolume : {isAbs: bool, vol: string} -> bool = fn
      end
    structure Process =
      struct
        eqtype status = int
        val atExit : (unit -> unit) -> unit = fn
        val exit : int -> 'a = fn
        val failure : int = 1
        val getEnv : string -> string option = fn
        val success : int = 0
        val system : string -> int = fn
        val terminate : int -> 'a = fn
      end
    eqtype syserror = int
    exception SysErr of (string * syserror option)
    val errorMsg : int -> string = fn
    val errorName : int -> string = fn
    val syserror : string -> int option = fn
  end
@


1.28
log
@Updating
@
text
@d72 1
d88 1
@


1.28.4.1
log
@branched from 1.28
@
text
@@


1.28.3.1
log
@branched from 1.28
@
text
@@


1.28.3.1.1.1
log
@branched from 1.28.3.1
@
text
@@


1.28.2.1
log
@branched from 1.28
@
text
@@


1.28.1.1
log
@branched from 1.28
@
text
@@


1.28.1.1.1.1
log
@branched from 1.28.1.1
@
text
@@


1.27
log
@remove banner
@
text
@d43 2
a44 2
        eqtype io_desc = io_desc
        eqtype io_desc_kind = io_desc_kind
d48 2
a49 2
        val compare : (OS.IO.io_desc * OS.IO.io_desc) -> order = fn
        val hash : OS.IO.io_desc -> word = fn
d54 1
a54 1
        val kind : OS.IO.io_desc -> OS.IO.io_desc_kind = fn
d56 1
a56 1
        val pollDesc : OS.IO.io_desc -> OS.IO.poll_desc option = fn
d60 1
a60 1
        val pollToIODesc : OS.IO.poll_desc -> OS.IO.io_desc = fn
@


1.27.3.1
log
@branched from 1.27
@
text
@@


1.27.2.1
log
@branched from 1.27
@
text
@@


1.27.1.1
log
@branched from 1.27
@
text
@@


1.26
log
@updating for commercial version flyer
@
text
@a0 2
commercial version may be purchased directly from Harlequin.

@


1.25
log
@Update wrt change in io_desc type.
@
text
@d1 2
@


1.24
log
@switch off Compiling messages...
@
text
@d43 1
a43 1
        eqtype io_desc = file_desc
@


1.23
log
@updating.
@
text
@a2 52
Compiling basis.toplevel
Compiling basis.string_cvt
Compiling basis.__pre_basis
Compiling basis.__pre_string_cvt
Compiling basis.__string_cvt
Compiling basis.__preinteger
Compiling basis.__preint32
Compiling basis.integer
Compiling basis.__integer
Compiling basis.__position
Compiling basis.char
Compiling basis.__pre_char
Compiling basis.__char
Compiling basis.general
Compiling basis.__general
Compiling basis.math
Compiling basis.__math
Compiling basis.ieeereal
Compiling basis.__ieeereal
Compiling basis.__prereal
Compiling basis.real
Compiling basis.__real
Compiling basis.time
Compiling unix.__time
Compiling basis.os_file_sys
Compiling basis.os_path
Compiling basis.os_process
Compiling basis.os_io
Compiling basis.os
Compiling basis.__preword32
Compiling basis.__preword
Compiling basis.word
Compiling basis.__word32
Compiling unix.unixos
Compiling unix._os
Compiling unix._unixos
Compiling unix.__unixos
Compiling basis.list
Compiling basis.__list
Compiling basis.string
Compiling basis.__string
Compiling unix.__os_path
Compiling basis.__word
Compiling unix._os_file_sys
Compiling unix.__os_file_sys
Compiling basis.__exit
Compiling basis.exit
Compiling basis._os_process
Compiling basis.__os_process
Compiling unix._os_io
Compiling unix.__os_io
Compiling unix.__os
a108 2
Compiling static_modules.separate3_a
Compiling static_modules.separate3_b
@


1.22
log
@add _pre_char again
@
text
@a2 2
Compiling basis.general
Compiling basis.__general
d16 2
d71 1
a71 1
        val compare : (OS.FileSys.file_id * OS.FileSys.file_id) -> order(hidden) = fn
d89 1
a89 1
        val setTime : (string * time(hidden) MLWorks.Option.option) -> unit = fn
d100 1
a100 1
        val compare : (OS.IO.io_desc * OS.IO.io_desc) -> order(hidden) = fn
d107 2
a108 2
        val poll : (OS.IO.poll_desc list * time(hidden) MLWorks.Option.option) -> OS.IO.poll_info list = fn
        val pollDesc : OS.IO.io_desc -> OS.IO.poll_desc MLWorks.Option.option = fn
d121 1
a121 1
        val ext : string -> string MLWorks.Option.option = fn
d130 1
a130 1
        val joinBaseExt : {base: string, ext: string MLWorks.Option.option} -> string = fn
d136 1
a136 1
        val splitBaseExt : string -> {base: string, ext: string MLWorks.Option.option} = fn
d147 1
a147 1
        val getEnv : string -> string MLWorks.Option.option = fn
d156 1
a156 1
    val syserror : string -> int MLWorks.Option.option = fn
@


1.21
log
@stringcvt->string_cvt
@
text
@d16 1
@


1.20
log
@The list of files loaded has changed due to new Timer implementation.
@
text
@d6 4
a9 3
Compiling basis.stringcvt
Compiling basis.__pre_char
Compiling basis.__stringcvt
@


1.19
log
@Output has changed due to change in OS.IO and TIME signature.
@
text
@d14 9
a39 2
Compiling basis.char
Compiling basis.__char
@


1.18
log
@Updating
@
text
@a28 3
Compiling basis.__word
Compiling unix._os_file_sys
Compiling unix.__os_file_sys
d36 3
d87 1
a87 1
        eqtype iodesc_kind = iodesc_kind
a93 1
        val isErr : OS.IO.poll_info -> bool = fn
d96 2
a97 1
        val kind : OS.IO.io_desc -> OS.IO.iodesc_kind = fn
a99 1
        val pollErr : OS.IO.poll_desc -> OS.IO.poll_desc = fn
d102 1
@


1.17
log
@Update wrt change in OS_PATH signature.
@
text
@d22 1
a28 1
Compiling basis.__preword
@


1.16
log
@Update wrt filesys -> file_sys change amongst other things.
@
text
@d17 1
a17 1
Compiling basis.path
d32 7
a38 5
Compiling utils.lists
Compiling utils._lists
Compiling utils.__lists
Compiling unix._unixpath
Compiling unix.__path
a106 9
        datatype path_ext =
          EXT of string |
          NOEXT
        datatype path_root =
          ABS of string |
          REL
        val ABS : string -> OS.Path.path_root
        val EXT : string -> OS.Path.path_ext
        val NOEXT : OS.Path.path_ext
d108 3
a110 5
        val REL : OS.Path.path_root
        val addExt : {ext: OS.Path.path_ext, name: string} -> string = fn
        val addLast : {dir: string, last: string} -> string = fn
        val concatPath : (string * string) -> string = fn
        val current : string = "."
d112 3
a114 2
        val explodePath : string -> {arcs: string list, root: OS.Path.path_root} = fn
        val ext : string -> OS.Path.path_ext = fn
d116 1
a116 1
        val implodePath : {arcs: string list, root: OS.Path.path_root} -> string = fn
d118 1
d120 3
a122 4
        val isValidArc : string -> bool = fn
        val isValidPath : string -> bool = fn
        val isValidRoot : string -> bool = fn
        val last : string -> string = fn
d126 5
a130 5
        val name : string -> string = fn
        val parent : string = ".."
        val root : string -> OS.Path.path_root = fn
        val splitExt : string -> {ext: OS.Path.path_ext, name: string} = fn
        val splitLast : string -> {dir: string, last: string} = fn
d146 2
@


1.15
log
@output has changed slightly
@
text
@d6 8
d16 1
a16 1
Compiling basis.os_filesys
a20 4
Compiling basis.stringcvt
Compiling basis.__pre_char
Compiling basis.__stringcvt
Compiling basis.__preinteger
a21 2
Compiling basis.__preint32
Compiling basis.__preword
d23 1
a23 1
Compiling basis.__word
d28 4
a31 2
Compiling unix._unixfilesys
Compiling unix.__os_filesys
d48 4
d53 5
d60 2
d63 1
d65 1
d67 2
d72 1
d74 2
d77 3
@


1.14
log
@Update wrt changes in OS signature.
@
text
@a2 3
Compiling basis.word
Compiling basis.__word
Compiling basis.__word8
d13 9
@


1.13
log
@Revised basis changes
@
text
@d11 1
a11 1
Compiling basis.filesys
d21 1
a21 1
Compiling unix.__filesys
d27 2
a28 2
Compiling main.__exit
Compiling main.exit
@


1.12
log
@Update wrt initbasis -> basis name change.
@
text
@d3 8
d14 1
d31 2
d38 1
a38 1
        eqtype dirstream = dir
d41 1
d44 1
d49 22
@


1.11
log
@Update wrt implementation of OS.Process.
@
text
@d3 4
a6 4
Compiling initbasis.filesys
Compiling initbasis.path
Compiling initbasis.os_process
Compiling initbasis.os
d20 2
a21 2
Compiling initbasis._os_process
Compiling initbasis.__os_process
@


1.10
log
@The output has changed slightly due to requiring a different file
(system/__os instead of initbasis/__os).
@
text
@d5 1
a5 1
Compiling initbasis.process
d18 4
d23 1
a23 1
structure Os =
d29 1
a29 1
        val closeDir : Os.FileSys.dirstream -> unit = fn
d32 2
a33 2
        val openDir : string -> Os.FileSys.dirstream = fn
        val readDir : Os.FileSys.dirstream -> string = fn
d35 1
a35 1
        val rewindDir : Os.FileSys.dirstream -> unit = fn
d45 3
a47 3
        val ABS : string -> Os.Path.path_root
        val EXT : string -> Os.Path.path_ext
        val NOEXT : Os.Path.path_ext
d49 2
a50 2
        val REL : Os.Path.path_root
        val addExt : {ext: Os.Path.path_ext, name: string} -> string = fn
d55 2
a56 2
        val explodePath : string -> {arcs: string list, root: Os.Path.path_root} = fn
        val ext : string -> Os.Path.path_ext = fn
d58 1
a58 1
        val implodePath : {arcs: string list, root: Os.Path.path_root} -> string = fn
d70 2
a71 2
        val root : string -> Os.Path.path_root = fn
        val splitExt : string -> {ext: Os.Path.path_ext, name: string} = fn
d73 11
@


1.9
log
@A chDir function has been added to FileSys.
@
text
@d3 4
a6 4
Compiling initbasis.word
Compiling initbasis.__word
Compiling initbasis.__word8
Compiling initbasis.toplevel
d8 1
a10 1
Compiling initbasis.filesys
a15 1
Compiling initbasis.path
d18 2
a19 5
Compiling initbasis.process
Compiling initbasis.__process
Compiling initbasis.os
Compiling initbasis.__os
structure OS =
d25 1
a25 1
        val closeDir : OS.FileSys.dirstream -> unit = fn
d28 2
a29 2
        val openDir : string -> OS.FileSys.dirstream = fn
        val readDir : OS.FileSys.dirstream -> string = fn
d31 1
a31 1
        val rewindDir : OS.FileSys.dirstream -> unit = fn
d41 3
a43 3
        val ABS : string -> OS.Path.path_root
        val EXT : string -> OS.Path.path_ext
        val NOEXT : OS.Path.path_ext
d45 2
a46 2
        val REL : OS.Path.path_root
        val addExt : {ext: OS.Path.path_ext, name: string} -> string = fn
d51 2
a52 2
        val explodePath : string -> {arcs: string list, root: OS.Path.path_root} = fn
        val ext : string -> OS.Path.path_ext = fn
d54 1
a54 1
        val implodePath : {arcs: string list, root: OS.Path.path_root} -> string = fn
d66 2
a67 2
        val root : string -> OS.Path.path_root = fn
        val splitExt : string -> {ext: OS.Path.path_ext, name: string} = fn
a69 9
    structure Process =
      struct
        eqtype status = int
        val atExit : (unit -> unit) -> unit = fn
        val exit : int -> 'a = fn
        val success : int -> bool = fn
        val system : string -> int = fn
        val terminate : int -> 'a = fn
      end
d71 1
a71 1
    exception SysErr of {ml_op: string, operand: string, os_info: {os_op: string, syserr: syserror} option, reason: string}
a72 1
    val osInfo : unit -> {archFamily: string, archName: string, osName: string, osVersion: string} = fn
@


1.8
log
@** No reason given. **
@
text
@d28 1
@


1.7
log
@As a result of replacing MLWorks.OS.Unix.getwd with OS.FileSys.getDir
it is necessary to load the OS module from the initial basis.  This
load produces a log of what is loaded and now appears at the start
of the answer.  From that point on the answer is the same as it
was before.
@
text
@d2 1
@


1.6
log
@Compilation system has changed.
@
text
@d2 85
@


1.5
log
@Modify to be only for the make system (ie not for .mo files)
@
text
@d4 2
a5 2
Make: compiling static_modules.separate3_b
Make: compiling    static_modules.separate3_a
@


1.4
log
@Shell structure revisions
@
text
@a2 1
val it : int = 0
@


1.3
log
@Fix path names.
@
text
@a3 3
Compiling /home/ml/sml/src/test_suite/static_modules/separate3_a.sml
Compiling /home/ml/sml/src/test_suite/static_modules/separate3_b.sml
Up to date
d5 5
@


1.2
log
@New name for recompile
@
text
@d4 2
a5 2
Compiling /nfs/cantor/usr/users/jont/ml/ml_bootstrap/src/test_suite/static_modules/separate3_a.sml
Compiling /nfs/cantor/usr/users/jont/ml/ml_bootstrap/src/test_suite/static_modules/separate3_b.sml
@


1.1
log
@Initial revision
@
text
@d2 1
d4 2
a5 2
Compiling /usr/users/daveb/ml/src/test_suite/static_modules/separate3_a.sml
Compiling /usr/users/daveb/ml/src/test_suite/static_modules/separate3_b.sml
@
