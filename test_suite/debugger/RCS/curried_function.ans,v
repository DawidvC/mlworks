head	1.3;
access;
symbols
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.2
	MLWorks_20b0_1998_03_20:1.2
	MLWorks_20m2_1998_02_16:1.2
	MLWorks_20m1_1997_10_23:1.2
	MLWorks_11r1:1.2.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.2.1.1.1.1
	MLWorks_10r3:1.2.1.1.3
	MLWorks_10r2_551:1.2.1.1.2
	MLWorks_11:1.2.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.2.1.1
	MLWorks_20m0_1997_06_20:1.2
	MLWorks_1_0_r2c2_1997_06_14:1.2.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.2.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.2.1
	MLWorks_BugFix_1997_04_24:1.2
	MLWorks_1_0_r2_Win32_1997_04_11:1.2
	MLWorks_1_0_r2_Unix_1997_04_04:1.2
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.5.1.1
	MLWorks_gui_1996_12_18:1.1.6
	MLWorks_1_0_Win32_1996_12_17:1.1.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.3.1
	MLWorks_1_0_Irix_1996_11_28:1.1.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.4
	MLWorks_1_0_Unix_1996_11_14:1.1.3
	MLWorks_Open_Beta2_1996_10_11:1.1.2
	MLWorks_License_dev:1.1.1;
locks; strict;
comment	@# @;


1.3
date	98.04.27.10.28.44;	author johnh;	state Exp;
branches;
next	1.2;

1.2
date	97.02.10.10.28.55;	author daveb;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	96.10.03.13.33.32;	author stephenb;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1
	1.1.6.1;
next	;

1.1.1.1
date	96.10.07.16.30.32;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.17.11.51.06;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.11.14.13.18.33;	author hope;	state Exp;
branches
	1.1.3.1.1.1;
next	;

1.1.3.1.1.1
date	96.11.28.15.29.08;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	96.11.22.18.36.21;	author hope;	state Exp;
branches;
next	;

1.1.5.1
date	96.12.17.18.15.20;	author hope;	state Exp;
branches
	1.1.5.1.1.1;
next	;

1.1.5.1.1.1
date	97.02.24.12.08.23;	author hope;	state Exp;
branches;
next	;

1.1.6.1
date	96.12.18.10.10.20;	author hope;	state Exp;
branches;
next	;

1.2.1.1
date	97.05.12.11.09.08;	author hope;	state Exp;
branches
	1.2.1.1.1.1
	1.2.1.1.2.1
	1.2.1.1.3.1;
next	;

1.2.1.1.1.1
date	97.07.28.18.51.08;	author daveb;	state Exp;
branches
	1.2.1.1.1.1.1.1;
next	;

1.2.1.1.1.1.1.1
date	97.10.07.12.15.49;	author jkbrook;	state Exp;
branches;
next	;

1.2.1.1.2.1
date	97.09.08.17.42.59;	author daveb;	state Exp;
branches;
next	;

1.2.1.1.3.1
date	97.09.09.14.42.20;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.3
log
@[Bug #30229]
Reflect recent changes to modes.
@
text
@val it : unit = ()
val foldl : (('a * 'b) -> 'a) -> 'a -> 'b list -> 'a = fn
val sum : int list -> int = fn
val it : unit = ()
Entering: sum [1, 2, 3]
Entering debugger, commands: q : Return to top level, c : Continue interrupted code,  ? : more help
Current (innermost) stack frame:
sum [1, 2, 3]
Debugger> (Current frame)
sum [1, 2, 3]
(Outermost frame)
sum [1, 2, 3]
Debugger> Entering: foldl argument 0 fn
Debugger> (Current frame)
foldl argument 0 fn
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: foldl argument 1 0
Debugger> (Current frame)
foldl argument 1 0
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: foldl argument 2 [1, 2, 3]
Debugger> (Current frame)
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: foldl argument 0 fn
Debugger> (Current frame)
foldl argument 0 fn
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: Builtin function _int+ _
Debugger> (Current frame)
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: foldl argument 1 _
Debugger> (Current frame)
foldl argument 1 _
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: foldl argument 2 [2, 3]
Debugger> (Current frame)
foldl argument 2 [2, 3]
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: foldl argument 0 fn
Debugger> (Current frame)
foldl argument 0 fn
foldl argument 2 [2, 3]
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: Builtin function _int+ _
Debugger> (Current frame)
foldl argument 2 [2, 3]
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: foldl argument 1 _
Debugger> (Current frame)
foldl argument 1 _
foldl argument 2 [2, 3]
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: foldl argument 2 [3]
Debugger> (Current frame)
foldl argument 2 [3]
foldl argument 2 [2, 3]
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: foldl argument 0 fn
Debugger> (Current frame)
foldl argument 0 fn
foldl argument 2 [3]
foldl argument 2 [2, 3]
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: Builtin function _int+ _
Debugger> (Current frame)
foldl argument 2 [3]
foldl argument 2 [2, 3]
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: foldl argument 1 _
Debugger> (Current frame)
foldl argument 1 _
foldl argument 2 [3]
foldl argument 2 [2, 3]
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> Entering: foldl argument 2 []
Debugger> (Current frame)
foldl argument 2 []
foldl argument 2 [3]
foldl argument 2 [2, 3]
foldl argument 2 [1, 2, 3]
sum [1, 2, 3]
(Outermost frame)
Debugger> val it : int = 6
@


1.2
log
@Answer files no longer include stderr output, therefore the line
   "Entering debugger, scanning stack ... done"
no longer appears.
@
text
@a1 1
val it : unit = ()
@


1.2.1.1
log
@branched from 1.2
@
text
@@


1.2.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.2.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.2.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.2.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.1
log
@new unit
@
text
@a0 1
Entering Debugger, scanning stack ... done.
@


1.1.6.1
log
@branched from 1.1
@
text
@@


1.1.5.1
log
@branched from 1.1
@
text
@@


1.1.5.1.1.1
log
@branched from 1.1.5.1
@
text
@@


1.1.4.1
log
@branched from 1.1
@
text
@@


1.1.3.1
log
@branched from 1.1
@
text
@@


1.1.3.1.1.1
log
@branched from 1.1.3.1
@
text
@@


1.1.2.1
log
@branched from 1.1
@
text
@@


1.1.1.1
log
@branched from 1.1
@
text
@@
