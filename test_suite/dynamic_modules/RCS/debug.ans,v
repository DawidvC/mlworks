head	1.9;
access;
symbols
	MLWorks_21c0_1999_03_25:1.9
	MLWorks_20c1_1998_08_20:1.9
	MLWorks_20c0_1998_08_04:1.9
	MLWorks_20b2c2_1998_06_19:1.9
	MLWorks_20b2_Windows_1998_06_12:1.9
	MLWorks_20b1c1_1998_05_07:1.9
	MLWorks_20b0_1998_04_07:1.9
	MLWorks_20b0_1998_03_20:1.9
	MLWorks_20m2_1998_02_16:1.7
	MLWorks_20m1_1997_10_23:1.7
	MLWorks_11r1:1.7.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.7.1.1.1.1
	MLWorks_10r3:1.7.1.1.3
	MLWorks_10r2_551:1.7.1.1.2
	MLWorks_11:1.7.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.7.1.1
	MLWorks_20m0_1997_06_20:1.7
	MLWorks_1_0_r2c2_1997_06_14:1.7.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.7.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.7.1
	MLWorks_BugFix_1997_04_24:1.7
	MLWorks_1_0_r2_Win32_1997_04_11:1.7
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.6.5.1.1
	MLWorks_gui_1996_12_18:1.6.6
	MLWorks_1_0_Win32_1996_12_17:1.6.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.6.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.6.3.1
	MLWorks_1_0_Irix_1996_11_28:1.6.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.6.4
	MLWorks_1_0_Unix_1996_11_14:1.6.3
	MLWorks_Open_Beta2_1996_10_11:1.6.2
	MLWorks_License_dev:1.6.1
	MLWorks_1_open_beta_1996_09_13:1.5.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3
	ML_beta_release_12/08/94:1.1
	ML_beta_release_03/08/94:1.1;
locks; strict;
comment	@# @;


1.9
date	98.02.26.10.38.57;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	98.02.17.18.19.01;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	97.02.07.15.12.45;	author jont;	state Exp;
branches
	1.7.1.1;
next	1.6;

1.6
date	96.09.27.12.54.14;	author stephenb;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1
	1.6.4.1
	1.6.5.1
	1.6.6.1;
next	1.5;

1.5
date	96.09.09.14.19.13;	author io;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	96.09.07.00.02.43;	author io;	state Exp;
branches;
next	1.3;

1.3
date	96.03.27.11.59.01;	author stephenb;	state Exp;
branches;
next	1.2;

1.2
date	96.03.26.16.07.47;	author stephenb;	state Exp;
branches;
next	1.1;

1.1
date	94.06.21.11.45.36;	author jont;	state Exp;
branches;
next	;

1.5.1.1
date	96.09.13.11.31.15;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	96.10.07.16.21.59;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.10.17.11.42.30;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.11.14.13.09.46;	author hope;	state Exp;
branches
	1.6.3.1.1.1;
next	;

1.6.3.1.1.1
date	96.11.28.15.19.40;	author hope;	state Exp;
branches;
next	;

1.6.4.1
date	96.11.22.18.27.11;	author hope;	state Exp;
branches;
next	;

1.6.5.1
date	96.12.17.18.05.42;	author hope;	state Exp;
branches
	1.6.5.1.1.1;
next	;

1.6.5.1.1.1
date	97.02.24.11.58.07;	author hope;	state Exp;
branches;
next	;

1.6.6.1
date	96.12.18.10.00.46;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	97.05.12.10.59.42;	author hope;	state Exp;
branches
	1.7.1.1.1.1
	1.7.1.1.2.1
	1.7.1.1.3.1;
next	;

1.7.1.1.1.1
date	97.07.28.18.41.59;	author daveb;	state Exp;
branches
	1.7.1.1.1.1.1.1;
next	;

1.7.1.1.1.1.1.1
date	97.10.07.12.07.13;	author jkbrook;	state Exp;
branches;
next	;

1.7.1.1.2.1
date	97.09.08.17.34.24;	author daveb;	state Exp;
branches;
next	;

1.7.1.1.3.1
date	97.09.09.14.32.47;	author daveb;	state Exp;
branches;
next	;


desc
@new file
@


1.9
log
@Modify answer now that structures are printed properly
@
text
@val it : unit = ()
val it : unit = ()
functor F
structure F1 =
  struct
    val args : int list = [1, 2]
    val f : int list -> unit = fn
  end
structure F2 =
  struct
    val args : string list = ["1", "2"]
    val f : string list -> unit = fn
  end
val it : unit = ()
val it : unit = ()
functor F
structure F1 =
  struct
    val args : int list = [1, 2]
    val f : int list -> unit = fn
  end
structure F2 =
  struct
    val args : string list = ["1", "2"]
    val f : string list -> unit = fn
  end
Entering: f <Unknown arg>
Entering debugger, commands: q : Return to top level, c : Continue interrupted code,  ? : more help
Current (innermost) stack frame:
f<??>
Debugger> @


1.8
log
@[Bug #70055]
Create new answer as test has changed
@
text
@d4 10
a13 2
structure F1 = struct ... end
structure F2 = struct ... end
d17 10
a26 2
structure F1 = struct ... end
structure F2 = struct ... end
@


1.7
log
@[Bug #0]
Remove entering debugger line
@
text
@d4 2
a5 8
structure F1 =
  struct
    val f : unit -> unit = fn
  end
structure F2 =
  struct
    val f : unit -> unit = fn
  end
d9 2
a10 8
structure F1 =
  struct
    val f : unit -> unit = fn
  end
structure F2 =
  struct
    val f : unit -> unit = fn
  end
@


1.7.1.1
log
@branched from 1.7
@
text
@@


1.7.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.7.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.7.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.7.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.6
log
@Update wrt changes to src/debugger/_ml_debugger.sml 1.162
@
text
@a0 1
Entering Debugger, scanning stack ... done.
@


1.6.6.1
log
@branched from 1.6
@
text
@@


1.6.5.1
log
@branched from 1.6
@
text
@@


1.6.5.1.1.1
log
@branched from 1.6.5.1
@
text
@@


1.6.4.1
log
@branched from 1.6
@
text
@@


1.6.3.1
log
@branched from 1.6
@
text
@@


1.6.3.1.1.1
log
@branched from 1.6.3.1
@
text
@@


1.6.2.1
log
@branched from 1.6
@
text
@@


1.6.1.1
log
@branched from 1.6
@
text
@@


1.5
log
@remove banner
@
text
@d1 1
@


1.5.1.1
log
@branched from 1.5
@
text
@@


1.4
log
@updating for commercial version flyer
@
text
@a0 2
commercial version may be purchased directly from Harlequin.

@


1.3
log
@** No reason given. **
@
text
@d1 2
@


1.2
log
@The output has changed slightly due to a change in the debugger.
@
text
@d2 1
d23 1
a23 1
Entering: f ()
d26 1
a26 1
f ()
@


1.1
log
@new file
@
text
@a1 2
val it : unit = ()
val it : unit = ()
a12 1
val it : unit = ()
d22 2
a23 2
Break: breakpoint at f[<TTY listener>:5,9 to 11,9]
Entering debugger (type q to return to listener, or ? for help).
d25 1
a25 2
f<??>
Debugger> f<??>
@
