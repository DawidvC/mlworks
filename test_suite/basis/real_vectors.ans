infix 1 seq
val seq : ('a * 'b) -> 'b = fn
val check : bool -> string = fn
val say : string -> unit = fn
val check' : (unit -> bool) -> string = fn
val range : (int * int) -> (int -> bool) -> bool = fn
val checkrange : (int * int) -> (int -> bool) -> string = fn
infix 0 ==
val == : (RealArray.vector * RealArray.vector) -> bool = fn
val a : RealArray.vector = _
val add1 : real -> real = fn
val addi : (int * real) -> real = fn
val b : RealArray.vector = _
val c : RealArray.vector = _
val d : RealArray.vector = _
val e : RealArray.vector = _
val f : RealArray.vector = _
val listEq : (real list * real list) -> bool = fn
val listEq' : ((''a * real) list * (''a * real) list) -> bool = fn
val test1 : string = "OK"
val test2 : string = "OK"
val test3 : string = "OK"
val test4a : string = "OK"
val test4b : string = "OK"
val test4c : string = "OK"
val test5 : string = "OK"
val test6a : string = "OK"
val test6b : string = "OK"
val test6c : string = "OK"
val test7 : string = "OK"
val test8 : string = "OK"
val test9 : string = "OK"
val test9a : string = "OK"
val test9b : string = "OK"
val test9c : string = "OK"
val test9d : string = "OK"
val test9e : string = "OK"
val test9f : string = "OK"
val test9g : string = "OK"
val test9h : string = "OK"
val test9i : string = "OK"
val testAa : string = "OK"
val testAb : string = "OK"
val testAc : string = "OK"
val v : RealArray.vector = _
