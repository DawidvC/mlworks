head	1.8;
access;
symbols
	MLWorks_21c0_1999_03_25:1.8
	MLWorks_20c1_1998_08_20:1.8
	MLWorks_20c0_1998_08_04:1.8
	MLWorks_20b2c2_1998_06_19:1.6
	MLWorks_20b2_Windows_1998_06_12:1.6
	MLWorks_20b1c1_1998_05_07:1.5
	MLWorks_20b0_1998_04_07:1.5
	MLWorks_20b0_1998_03_20:1.5
	MLWorks_20m2_1998_02_16:1.5
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.4.1.1.1.1
	MLWorks_10r3:1.4.1.1.3
	MLWorks_10r2_551:1.4.1.1.2
	MLWorks_11:1.4.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.1.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.1
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.2.3.1.1
	MLWorks_gui_1996_12_18:1.2.4
	MLWorks_1_0_Win32_1996_12_17:1.2.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.2.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.2.1.1
	MLWorks_1_0_Irix_1996_11_28:1.2.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.2.2
	MLWorks_1_0_Unix_1996_11_14:1.2.1
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1
	MLWorks_Beta_1996_07_02:1.1;
locks; strict;
comment	@ *  @;


1.8
date	98.07.14.17.07.26;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	98.07.02.17.07.12;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	98.05.15.12.57.51;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	98.01.22.16.22.13;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	97.04.01.16.50.09;	author jont;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	97.03.12.16.45.48;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	96.10.22.13.24.39;	author jont;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1;
next	1.1;

1.1
date	96.06.14.13.13.49;	author stephenb;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	96.09.13.11.37.47;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.16.29.06;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.49.53;	author hope;	state Exp;
branches;
next	;

1.2.1.1
date	96.11.14.13.17.17;	author hope;	state Exp;
branches
	1.2.1.1.1.1;
next	;

1.2.1.1.1.1
date	96.11.28.15.27.46;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.11.22.18.35.06;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.12.17.18.14.03;	author hope;	state Exp;
branches
	1.2.3.1.1.1;
next	;

1.2.3.1.1.1
date	97.02.24.12.06.56;	author hope;	state Exp;
branches;
next	;

1.2.4.1
date	96.12.18.10.09.01;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	97.05.12.11.07.35;	author hope;	state Exp;
branches
	1.4.1.1.1.1
	1.4.1.1.2.1
	1.4.1.1.3.1;
next	;

1.4.1.1.1.1
date	97.07.28.18.50.36;	author daveb;	state Exp;
branches
	1.4.1.1.1.1.1.1;
next	;

1.4.1.1.1.1.1.1
date	97.10.07.12.15.29;	author jkbrook;	state Exp;
branches;
next	;

1.4.1.1.2.1
date	97.09.08.17.42.22;	author daveb;	state Exp;
branches;
next	;

1.4.1.1.3.1
date	97.09.09.14.41.48;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.8
log
@[Bug #20131]
Use forceCompileAll to avoid out of date modules being loaded
@
text
@(* Copyright (c) 1996 Harlequin Ltd.

Result: OK

 *
 * Test Win32 OS.IO.*.  All tests should return true.
 * 
 * Cannot test much at the moment since there is currently no way to create
 * a socket -- roll on the standard Socket Library.
 *
 * Revision Log
 * ------------
 *
 * $Log: win32:os_io.sml,v $
 *  Revision 1.7  1998/07/02  17:07:12  jont
 *  [Bug #20120]
 *  Modify to work with latest state of project system
 *
 *  Revision 1.6  1998/05/15  12:57:51  jont
 *  [Bug #30323]
 *  Rework in terms of project system
 *
 *  Revision 1.5  1998/01/22  16:22:13  jont
 *  [Bug #30323]
 *  Remove unnecessary uses of Shell.Build.loadSource
 *
 *  Revision 1.4  1997/04/01  16:50:09  jont
 *  Modify to stop displaying syserror type
 *
 *  Revision 1.3  1997/03/12  16:45:48  jont
 *  Fix bug 1910
 *  Remove spurious path setting
 *  Change FILE_DESC to IODESC
 *
 *  Revision 1.2  1996/10/22  13:24:39  jont
 *  Remove references to toplevel
 *
 *  Revision 1.1  1996/06/14  13:13:49  stephenb
 *  new unit
 *
 *)

local
  fun hd [] = raise Match
    | hd(x :: _) = x;
  val _ = Shell.Options.set(Shell.Options.ValuePrinter.maximumStrDepth, 0);
  val path = hd(Shell.Path.sourcePath());
  val _ = Shell.Project.openProject(OS.Path.joinDirFile{dir=path, file="basis.mlp"});
  val config_files = #files(Shell.Project.showConfigurationDetails"I386/NT")
  val files = Shell.Project.showFiles() @@ config_files
  val _ = Shell.Project.closeProject()
  val files =
    map
    (fn file =>
     OS.Path.joinDirFile{dir=path, file=file})
    files
  val _ = Shell.Project.newProject(OS.Path.fromUnixPath "/tmp");
  val _ = Shell.Project.setFiles files;
  val _ = Shell.Project.setTargetDetails "__win32.sml";
  val _ = Shell.Project.setTargetDetails "__os_io.sml";
  val _ = Shell.Project.setTargets ["__win32.sml", "__os_io.sml"];
  val _ = Shell.Project.forceCompileAll();
in
  val _ = Shell.Project.loadAll();
end;

val kind_a = OSIO_.kind (Win32_.IODESC 0) = OSIO_.Kind.file;

val kind_b = OSIO_.kind (Win32_.IODESC 1) = OSIO_.Kind.file;

val kind_c = OSIO_.kind (Win32_.IODESC 2) = OSIO_.Kind.file;

val kind_e = (ignore(OSIO_.kind (Win32_.IODESC 42)); false) handle OS.SysErr _ => true;

local

  fun makePD n = 
    case OSIO_.pollDesc (Win32_.IODESC n) of
      NONE => raise OS.SysErr ("foo", NONE)
    | SOME pd => (OSIO_.pollIn o OSIO_.pollOut) pd

in
  val poll_a = (ignore(OSIO_.poll ([makePD 0], SOME Time.zeroTime)); false) handle OS.SysErr _ => true;
end
@


1.7
log
@[Bug #20120]
Modify to work with latest state of project system
@
text
@d15 4
d62 1
a62 1
  val _ = Shell.Project.compileAll();
@


1.6
log
@[Bug #30323]
Rework in terms of project system
@
text
@d15 4
d40 2
d43 12
a54 10
  val _ = Shell.Project.newProject();
  val path = Shell.Path.sourcePath();
  val project_path =
    (map
     (fn s => s ^ "/basis")
     path) @@
    (map
     (fn s => s ^ "/win_nt")
     path)
  val _ = Shell.Project.setSourcePath(project_path);
d60 1
a60 1
  val _ = Shell.Project.loadAll()
@


1.5
log
@[Bug #30323]
Remove unnecessary uses of Shell.Build.loadSource
@
text
@d15 4
d37 14
d52 1
a52 1
  val _ = Shell.Build.loadSource "system.__win32"
d55 1
a55 1
val kind_a = OS.IO.kind (Win32_.IODESC 0) = OS.IO.Kind.file;
d57 1
a57 1
val kind_b = OS.IO.kind (Win32_.IODESC 1) = OS.IO.Kind.file;
d59 1
a59 1
val kind_c = OS.IO.kind (Win32_.IODESC 2) = OS.IO.Kind.file;
d61 1
a61 1
val kind_e = (OS.IO.kind (Win32_.IODESC 42); false) handle OS.SysErr _ => true;
d66 1
a66 1
    case OS.IO.pollDesc (Win32_.IODESC n) of
d68 1
a68 1
    | SOME pd => (OS.IO.pollIn o OS.IO.pollOut) pd
d71 1
a71 1
  val poll_a = (OS.IO.poll ([makePD 0], SOME Time.zeroTime); false) handle OS.SysErr _ => true;
@


1.4
log
@Modify to stop displaying syserror type
@
text
@d15 3
d34 1
a34 4
  val _ =
    (Shell.Build.loadSource "system.__win32";
     Shell.Build.loadSource "system.__os";
     Shell.Build.loadSource "system.__time")
@


1.4.1.1
log
@branched from 1.4
@
text
@a14 3
 *  Revision 1.4  1997/04/01  16:50:09  jont
 *  Modify to stop displaying syserror type
 *
@


1.4.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a14 3
 *  Revision 1.4.1.1  1997/05/12  11:07:35  hope
 *  branched from 1.4
 *
@


1.4.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a14 3
 *  Revision 1.4.1.1  1997/05/12  11:07:35  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a14 3
 *  Revision 1.4.1.1  1997/05/12  11:07:35  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a14 3
 *  Revision 1.4.1.1.1.1  1997/07/28  18:50:36  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3
log
@Fix bug 1910
Remove spurious path setting
Change FILE_DESC to IODESC
@
text
@d15 5
d28 8
a35 3
Shell.Build.loadSource "system.__win32";
Shell.Build.loadSource "system.__os";
Shell.Build.loadSource "system.__time";
@


1.2
log
@Remove references to toplevel
@
text
@d15 3
a22 1
Shell.Path.setSourcePath [".."];
d27 1
a27 1
val kind_a = OS.IO.kind (Win32_.FILE_DESC 0) = OS.IO.Kind.file;
d29 1
a29 1
val kind_b = OS.IO.kind (Win32_.FILE_DESC 1) = OS.IO.Kind.file;
d31 1
a31 1
val kind_c = OS.IO.kind (Win32_.FILE_DESC 2) = OS.IO.Kind.file;
d33 1
a33 1
val kind_e = (OS.IO.kind (Win32_.FILE_DESC 42); false) handle OS.SysErr _ => true;
d38 1
a38 1
    case OS.IO.pollDesc (Win32_.FILE_DESC n) of
@


1.2.4.1
log
@branched from 1.2
@
text
@a14 3
 *  Revision 1.2  1996/10/22  13:24:39  jont
 *  Remove references to toplevel
 *
@


1.2.3.1
log
@branched from 1.2
@
text
@a14 3
 *  Revision 1.2  1996/10/22  13:24:39  jont
 *  Remove references to toplevel
 *
@


1.2.3.1.1.1
log
@branched from 1.2.3.1
@
text
@a14 3
 *  Revision 1.2.3.1  1996/12/17  18:14:03  hope
 *  branched from 1.2
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a14 3
 *  Revision 1.2  1996/10/22  13:24:39  jont
 *  Remove references to toplevel
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a14 3
 *  Revision 1.2  1996/10/22  13:24:39  jont
 *  Remove references to toplevel
 *
@


1.2.1.1.1.1
log
@branched from 1.2.1.1
@
text
@a14 3
 *  Revision 1.2.1.1  1996/11/14  13:17:17  hope
 *  branched from 1.2
 *
@


1.1
log
@new unit
@
text
@d14 4
a17 1
 * $Log$
a23 1
Shell.Build.loadSource "basis.toplevel";
@


1.1.3.1
log
@branched from 1.1
@
text
@d14 1
a14 4
 * $Log: win32:os_io.sml,v $
 *  Revision 1.1  1996/06/14  13:13:49  stephenb
 *  new unit
 *
@


1.1.2.1
log
@branched from 1.1
@
text
@d14 1
a14 4
 * $Log: win32:os_io.sml,v $
 *  Revision 1.1  1996/06/14  13:13:49  stephenb
 *  new unit
 *
@


1.1.1.1
log
@branched from 1.1
@
text
@d14 1
a14 4
 * $Log: win32:os_io.sml,v $
 *  Revision 1.1  1996/06/14  13:13:49  stephenb
 *  new unit
 *
@
