head	1.6;
access;
symbols
	MLWorks_21c0_1999_03_25:1.6
	MLWorks_20c1_1998_08_20:1.6
	MLWorks_20c0_1998_08_04:1.6
	MLWorks_20b2c2_1998_06_19:1.6
	MLWorks_20b2_Windows_1998_06_12:1.6
	MLWorks_20b1c1_1998_05_07:1.6
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.2;
locks; strict;
comment	@ *  @;


1.6
date	98.04.23.13.19.56;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	98.04.21.12.44.26;	author mitchell;	state Exp;
branches;
next	1.4;

1.4
date	98.02.18.11.56.01;	author mitchell;	state Exp;
branches;
next	1.3;

1.3
date	97.11.21.10.48.10;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	97.10.09.17.55.03;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	97.10.09.17.44.50;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
[Bug #30276]
Tests for Real.fmt
@


1.6
log
@[Bug #30397]
Remove round to even test as this doesn't really work on either
unix or nt.
@
text
@(*  ==== Testing ====
 *  This tests the Real.fmt function.
 *  Copyright (C) 1997 The Harlequin Group Ltd.  All rights reserved.
 *
 *  Result: OK
 *
 *
 *  Revision Log
 *  ------------
 *  $Log: real_fmt.sml,v $
 *  Revision 1.5  1998/04/21  12:44:26  mitchell
 *  [Bug #30336]
 *  Fix tests to agree with change in spec of toString and fmt
 *
 *  Revision 1.4  1998/02/18  11:56:01  mitchell
 *  [Bug #30349]
 *  Fix test to avoid non-unit sequence warning
 *
 *  Revision 1.3  1997/11/21  10:48:10  daveb
 *  [Bug #30323]
 *
 *  Revision 1.2  1997/10/09  17:55:03  daveb
 *  Automatic checkin:
 *  changed attribute _comment to ' *  '
 *
 *
*)

val posinf = 1.0/0.0
val neginf = ~1.0/0.0
val nan = 0.0/0.0

fun check_exn (format, arg) =
  (ignore(Real.fmt format arg); "WRONG")
  handle Size => "OK"

fun check_res (format, arg, res) =
  (if Real.fmt format arg = res then
    "OK"
   else
     "WRONG")
  handle _ => "EXN"

(* First check for illegal precisions *)
val test1a = check_exn (StringCvt.GEN (SOME 0), 10.5)
val test1b = check_exn (StringCvt.GEN (SOME ~1), 10.5)
val test1c = check_exn (StringCvt.SCI (SOME ~1), 10.5)
val test1d = check_exn (StringCvt.FIX (SOME ~1), 10.5)

(* Now check the GEN format *)
val test2a = check_res (StringCvt.GEN (SOME 1), 1.5, "2");
val test2b = check_res (StringCvt.GEN (SOME 1), 10.5, "1E01");
val test2c = check_res (StringCvt.GEN (SOME 2), ~1000.0, "~1E03");
val test2d = check_res (StringCvt.GEN (SOME 1), 0.012, "0.01");
val test2e = check_res (StringCvt.GEN (SOME 3), ~0.0123, "~0.0123");
val test2f = check_res (StringCvt.GEN (SOME 3), 0.0000123, "1.23E~05");
val test2g = check_res (StringCvt.GEN NONE, 0.0000123, "1.23E~05");
  
(* Now check the SCI format *)
val test3a = check_res (StringCvt.SCI (SOME 1), 1.5, "1.5E00");
val test3b = check_res (StringCvt.SCI (SOME 0), 10.5, "1E01");
val test3c = check_res (StringCvt.SCI (SOME 2), ~1000.0, "~1.00E03");
val test3d = check_res (StringCvt.SCI (SOME 1), 0.012, "1.2E~02");
val test3e = check_res (StringCvt.SCI (SOME 3), ~0.0123, "~1.230E~02");
val test3f = check_res (StringCvt.SCI (SOME 3), 0.0000123, "1.230E~05");
val test3g = check_res (StringCvt.SCI NONE, 0.0000123, "1.230000E~05");

(* Now check the FIX format *)
val test4a = check_res (StringCvt.FIX (SOME 1), 1.5, "1.5");
val test4c = check_res (StringCvt.FIX (SOME 2), ~1000.0, "~1000.00");
val test4d = check_res (StringCvt.FIX (SOME 1), 0.012, "0.0");
val test4e = check_res (StringCvt.FIX (SOME 3), ~0.0123, "~0.012");
val test4f = check_res (StringCvt.FIX (SOME 3), 0.0000123, "0.000");
val test4g = check_res (StringCvt.FIX NONE, 0.0000123, "0.000012");
  
(* Now check the non-numbers *)
val test5a = check_res (StringCvt.FIX (SOME 1), posinf, "+inf");
val test5b = check_res (StringCvt.FIX (SOME 1), neginf, "-inf");
val test5c = check_res (StringCvt.FIX (SOME 1), nan, "nan");
val test5d = check_res (StringCvt.SCI (SOME 1), posinf, "+inf");
val test5e = check_res (StringCvt.SCI (SOME 1), neginf, "-inf");
val test5f = check_res (StringCvt.SCI (SOME 1), nan, "nan");
val test5g = check_res (StringCvt.GEN (SOME 1), posinf, "+inf");
val test5h = check_res (StringCvt.GEN (SOME 1), neginf, "-inf");
val test5i = check_res (StringCvt.GEN (SOME 1), nan, "nan");

@


1.5
log
@[Bug #30336]
Fix tests to agree with change in spec of toString and fmt
@
text
@d11 4
a69 1
val test4b = check_res (StringCvt.FIX (SOME 0), 10.5, "10");
@


1.4
log
@[Bug #30349]
Fix test to avoid non-unit sequence warning
@
text
@d11 4
d47 1
a47 1
val test2a = check_res (StringCvt.GEN (SOME 1), 1.5, "2.0");
@


1.3
log
@[Bug #30323]
@
text
@d11 3
d26 1
a26 1
  (Real.fmt format arg; "WRONG")
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' *  '
@
text
@d10 5
a14 1
 *  $Log$
a16 7

local
  val _ = Shell.Options.set (Shell.Options.ValuePrinter.maximumStrDepth,0);
in
  val _ = Shell.Build.loadSource "basis.__real"
  val _ = Shell.Build.loadSource "basis.__string_cvt"
end;
@


1.1
log
@new unit
[Bug #30276]
Tests for Real.fmt
@
text
@@
