head	1.17;
access;
symbols
	MLWorks_21c0_1999_03_25:1.17
	MLWorks_20c1_1998_08_20:1.17
	MLWorks_20c0_1998_08_04:1.17
	MLWorks_20b2c2_1998_06_19:1.17
	MLWorks_20b2_Windows_1998_06_12:1.17
	MLWorks_20b1c1_1998_05_07:1.17
	MLWorks_20b0_1998_04_07:1.17
	MLWorks_20b0_1998_03_20:1.17
	MLWorks_20m2_1998_02_16:1.17
	MLWorks_20m1_1997_10_23:1.16
	MLWorks_11r1:1.15.5.1.1.1.1
	MLWorks_11c0_1997_09_09:1.15.5.1.1.1
	MLWorks_10r3:1.15.5.1.3
	MLWorks_10r2_551:1.15.5.1.2
	MLWorks_11:1.15.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.15.5.1
	MLWorks_20m0_1997_06_20:1.16
	MLWorks_1_0_r2c2_1997_06_14:1.15.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.15.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.15.5
	MLWorks_BugFix_1997_04_24:1.15
	MLWorks_1_0_r2_Win32_1997_04_11:1.15
	MLWorks_1_0_r2_Unix_1997_04_04:1.15
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.15.3.1.1
	MLWorks_gui_1996_12_18:1.15.4
	MLWorks_1_0_Win32_1996_12_17:1.15.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.15.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.15.1.1
	MLWorks_1_0_Irix_1996_11_28:1.15.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.15.2
	MLWorks_1_0_Unix_1996_11_14:1.15.1
	MLWorks_Open_Beta2_1996_10_11:1.14.2
	MLWorks_License_dev:1.14.1
	MLWorks_1_open_beta_1996_09_13:1.11.1
	MLWorks_Open_Beta_1996_08_22:1.9
	MLWorks_Beta_1996_07_02:1.6
	MLWorks_Beta_1996_06_07:1.5
	MLWorks_Beta_1996_06_06:1.5
	MLWorks_Beta_1996_06_05:1.5
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4;
locks; strict;
comment	@# @;


1.17
date	97.11.25.19.26.22;	author daveb;	state Exp;
branches;
next	1.16;

1.16
date	97.06.06.11.07.52;	author jont;	state Exp;
branches;
next	1.15;

1.15
date	96.11.05.13.48.14;	author andreww;	state Exp;
branches
	1.15.1.1
	1.15.2.1
	1.15.3.1
	1.15.4.1
	1.15.5.1;
next	1.14;

1.14
date	96.10.02.11.37.05;	author stephenb;	state Exp;
branches
	1.14.1.1
	1.14.2.1;
next	1.13;

1.13
date	96.10.02.08.43.11;	author stephenb;	state Exp;
branches;
next	1.12;

1.12
date	96.10.01.12.43.30;	author stephenb;	state Exp;
branches;
next	1.11;

1.11
date	96.09.09.11.14.02;	author io;	state Exp;
branches
	1.11.1.1;
next	1.10;

1.10
date	96.09.07.00.02.26;	author io;	state Exp;
branches;
next	1.9;

1.9
date	96.08.14.12.09.35;	author io;	state Exp;
branches;
next	1.8;

1.8
date	96.07.29.14.37.01;	author stephenb;	state Exp;
branches;
next	1.7;

1.7
date	96.07.04.18.31.59;	author andreww;	state Exp;
branches;
next	1.6;

1.6
date	96.06.25.10.16.50;	author io;	state Exp;
branches;
next	1.5;

1.5
date	96.06.05.01.32.53;	author io;	state Exp;
branches;
next	1.4;

1.4
date	96.05.29.10.59.00;	author stephenb;	state Exp;
branches;
next	1.3;

1.3
date	96.05.24.11.41.29;	author stephenb;	state Exp;
branches;
next	1.2;

1.2
date	96.05.16.14.17.19;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	96.05.09.12.28.10;	author stephenb;	state Exp;
branches;
next	;

1.11.1.1
date	96.09.13.11.37.46;	author hope;	state Exp;
branches;
next	;

1.14.1.1
date	96.10.07.16.29.05;	author hope;	state Exp;
branches;
next	;

1.14.2.1
date	96.10.17.11.49.52;	author hope;	state Exp;
branches;
next	;

1.15.1.1
date	96.11.14.13.17.16;	author hope;	state Exp;
branches
	1.15.1.1.1.1;
next	;

1.15.1.1.1.1
date	96.11.28.15.27.45;	author hope;	state Exp;
branches;
next	;

1.15.2.1
date	96.11.22.18.35.05;	author hope;	state Exp;
branches;
next	;

1.15.3.1
date	96.12.17.18.14.03;	author hope;	state Exp;
branches
	1.15.3.1.1.1;
next	;

1.15.3.1.1.1
date	97.02.24.12.06.55;	author hope;	state Exp;
branches;
next	;

1.15.4.1
date	96.12.18.10.09.00;	author hope;	state Exp;
branches;
next	;

1.15.5.1
date	97.05.12.11.07.34;	author hope;	state Exp;
branches
	1.15.5.1.1.1
	1.15.5.1.2.1
	1.15.5.1.3.1;
next	;

1.15.5.1.1.1
date	97.07.28.18.50.02;	author daveb;	state Exp;
branches
	1.15.5.1.1.1.1.1;
next	;

1.15.5.1.1.1.1.1
date	97.10.07.12.14.20;	author jkbrook;	state Exp;
branches;
next	;

1.15.5.1.2.1
date	97.09.08.17.41.51;	author daveb;	state Exp;
branches;
next	;

1.15.5.1.3.1
date	97.09.09.14.41.16;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.17
log
@[Bug #30323]
@
text
@val fromReal_a : bool = true
val fromReal_b : bool = true
val toReal_a : bool = true
val fromSeconds_a : bool = true
val fromSeconds_b : bool = true
val toSeconds_a : bool = true
val toSeconds_b : bool = true
val fromMilliseconds_a : bool = true
val fromMilliseconds_b : bool = true
val toMilliseconds_a : bool = true
val fromMicroseconds_a : bool = true
val fromMicroseconds_b : bool = true
val toMicroseconds_a : bool = true
val plus_a : bool = true
val plus_b : bool = true
val sub_a : bool = true
val sub_b : bool = true
val sub_c : bool = true
val sub_d : bool = true
val leq_a : bool = true
val leq_b : bool = true
val leq_c : bool = true
val leq_d : bool = true
val leq_e : bool = true
val geq_a : bool = true
val geq_b : bool = true
val geq_c : bool = true
val geq_e : bool = true
val geq_d : bool = true
val lt_a : bool = true
val lt_b : bool = true
val lt_c : bool = true
val lt_d : bool = true
val lt_e : bool = true
val gt_a : bool = true
val gt_b : bool = true
val gt_c : bool = true
val gt_d : bool = true
val gt_e : bool = true
val toString_a : bool = true
val toString_b : bool = true
val toString_c : bool = true
val toString_d : bool = true
val toString_e : bool = true
val fmt_a : bool = true
val fmt_b : bool = true
val fmt_c : bool = true
val fmt_d : bool = true
val fmt_e : bool = true
val fmt_f : bool = true
val fmt_g : bool = true
val fmt_h : bool = true
val fmt_h : bool = true
val fromString_a : bool = true
val fromString_b : bool = true
val fromString_c : bool = true
val fromString_d : bool = true
val fromString_e : bool = true
val fromString_f : bool = true
val fromString_g : bool = true
@


1.16
log
@New answer file needed now __real compiled
@
text
@a0 6
val it : unit = ()
val it : unit = ()
structure Time = struct ... end
val it : unit = ()
structure LargeReal = struct ... end
structure Real = struct ... end
@


1.15
log
@[Bug #1711]
real no longer eqtype
@
text
@d3 4
a6 26
structure Time =
  struct
    eqtype time = time
    val + : (Time.time * Time.time) -> Time.time = fn
    val - : (Time.time * Time.time) -> Time.time = fn
    val < : (Time.time * Time.time) -> bool = fn
    val <= : (Time.time * Time.time) -> bool = fn
    val > : (Time.time * Time.time) -> bool = fn
    val >= : (Time.time * Time.time) -> bool = fn
    exception Time
    val compare : (Time.time * Time.time) -> order = fn
    val fmt : int -> Time.time -> string = fn
    val fromMicroseconds : int -> Time.time = fn
    val fromMilliseconds : int -> Time.time = fn
    val fromReal : real -> Time.time = fn
    val fromSeconds : int -> Time.time = fn
    val fromString : string -> Time.time option = fn
    val now : unit -> Time.time = fn
    val scan : ('a -> (char * 'a) option) -> 'a -> (Time.time * 'a) option = fn
    val toMicroseconds : Time.time -> int = fn
    val toMilliseconds : Time.time -> int = fn
    val toReal : Time.time -> real = fn
    val toSeconds : Time.time -> int = fn
    val toString : Time.time -> string = fn
    val zeroTime : Time.time = TIME (0, 0, 0)
  end
@


1.15.5.1
log
@branched from 1.15
@
text
@@


1.15.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.15.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.15.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.15.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.15.4.1
log
@branched from 1.15
@
text
@@


1.15.3.1
log
@branched from 1.15
@
text
@@


1.15.3.1.1.1
log
@branched from 1.15.3.1
@
text
@@


1.15.2.1
log
@branched from 1.15
@
text
@@


1.15.1.1
log
@branched from 1.15
@
text
@@


1.15.1.1.1.1
log
@branched from 1.15.1.1
@
text
@@


1.14
log
@[Bug #1629]
Add some Time.+ (Time.now (), X) tests.
@
text
@d2 1
@


1.14.2.1
log
@branched from 1.14
@
text
@@


1.14.1.1
log
@branched from 1.14
@
text
@@


1.13
log
@Add some tests for Time.> and Time.>=
@
text
@a1 1
val it : unit = ()
d42 1
@


1.12
log
@[Bug #1627]
@
text
@d50 7
d62 5
@


1.11
log
@remove banner
@
text
@d50 5
@


1.11.1.1
log
@branched from 1.11
@
text
@@


1.10
log
@updating for commercial version flyer
@
text
@a0 2
commercial version may be purchased directly from Harlequin.

@


1.9
log
@switch off Compiling messages...
@
text
@d1 2
@


1.8
log
@Update wrt time.sml 1.5
@
text
@a1 1
Compiling basis.toplevel
a2 22
Compiling basis.string_cvt
Compiling basis.__pre_basis
Compiling basis.__pre_string_cvt
Compiling basis.__string_cvt
Compiling basis.char
Compiling basis.__preinteger
Compiling basis.__preint32
Compiling basis.integer
Compiling basis.__integer
Compiling basis.__pre_char
Compiling basis.__char
Compiling basis.general
Compiling basis.__general
Compiling basis.math
Compiling basis.__math
Compiling basis.ieeereal
Compiling basis.__ieeereal
Compiling basis.__prereal
Compiling basis.real
Compiling basis.__real
Compiling basis.time
Compiling unix.__time
@


1.7
log
@updating.
@
text
@d67 3
@


1.6
log
@add __pre_char again
@
text
@a1 2
Compiling basis.general
Compiling basis.__general
a2 31
structure TopLevel =
  struct
    datatype 'a option =
      NONE |
      SOME of 'a
    datatype order =
      EQUAL |
      GREATER |
      LESS
    exception Domain
    val EQUAL : order
    exception Fail of string
    val GREATER : order
    val LESS : order
    val NONE : 'a option
    val SOME : 'a -> 'a option
  end
datatype 'a option =
  NONE |
  SOME of 'a
datatype order =
  EQUAL |
  GREATER |
  LESS
exception Domain
val EQUAL : order
exception Fail of string
val GREATER : order
val LESS : order
val NONE : 'a option
val SOME : 'a -> 'a option
d15 2
@


1.5
log
@stringcvt->string_cvt
@
text
@d37 1
a38 1
Compiling basis.string_cvt
d46 1
@


1.4
log
@Answer has changed due to inclusion of tests for fromString,
toString and fmt.
@
text
@d37 5
a41 3
Compiling basis.stringcvt
Compiling basis.__pre_char
Compiling basis.__stringcvt
a45 1
Compiling basis.char
@


1.3
log
@Update wrt change in TIME signature.
@
text
@d5 32
d40 13
d65 1
a65 1
    val compare : (Time.time * Time.time) -> order(hidden) = fn
d71 1
a71 1
    val fromString : string -> Time.time MLWorks.Option.option = fn
d73 1
a73 1
    val scan : ('a -> (char * 'a) MLWorks.Option.option) -> 'a = fn
d99 21
@


1.2
log
@dependencies have changed
@
text
@d5 3
d21 1
d26 1
d28 1
d33 1
@


1.1
log
@new unit
@
text
@a1 3
Compiling basis.word
Compiling basis.__word
Compiling basis.__word8
@
