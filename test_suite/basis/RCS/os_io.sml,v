head	1.5;
access;
symbols
	MLWorks_21c0_1999_03_25:1.5
	MLWorks_20c1_1998_08_20:1.5
	MLWorks_20c0_1998_08_04:1.5
	MLWorks_20b2c2_1998_06_19:1.5
	MLWorks_20b2_Windows_1998_06_12:1.5
	MLWorks_20b1c1_1998_05_07:1.5
	MLWorks_20b0_1998_04_07:1.5
	MLWorks_20b0_1998_03_20:1.5
	MLWorks_20m2_1998_02_16:1.5
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.4.1.1.1.1
	MLWorks_10r3:1.4.1.1.3
	MLWorks_10r2_551:1.4.1.1.2
	MLWorks_11:1.4.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.1.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.1
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.6.1.1
	MLWorks_gui_1996_12_18:1.3.7
	MLWorks_1_0_Win32_1996_12_17:1.3.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.1;
locks; strict;
comment	@ *  @;


1.5
date	97.11.21.10.45.41;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	97.04.01.16.43.48;	author jont;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	96.08.29.09.06.39;	author stephenb;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1;
next	1.2;

1.2
date	96.08.22.12.23.58;	author stephenb;	state Exp;
branches;
next	1.1;

1.1
date	96.08.16.15.27.52;	author stephenb;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.37.58;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.29.18;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.50.05;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.13.17.29;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.15.27.58;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.35.17;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.18.14.15;	author hope;	state Exp;
branches
	1.3.6.1.1.1;
next	;

1.3.6.1.1.1
date	97.02.24.12.07.10;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.18.10.09.14;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	97.05.12.11.07.48;	author hope;	state Exp;
branches
	1.4.1.1.1.1
	1.4.1.1.2.1
	1.4.1.1.3.1;
next	;

1.4.1.1.1.1
date	97.07.28.18.49.48;	author daveb;	state Exp;
branches
	1.4.1.1.1.1.1.1;
next	;

1.4.1.1.1.1.1.1
date	97.10.07.12.14.12;	author jkbrook;	state Exp;
branches;
next	;

1.4.1.1.2.1
date	97.09.08.17.41.36;	author daveb;	state Exp;
branches;
next	;

1.4.1.1.3.1
date	97.09.09.14.41.02;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.5
log
@[Bug #30323]
@
text
@(* Copyright (c) 1996 Harlequin Ltd.

Result: OK

 *
 * Does some portable (and hence minimal) testing of OS.IO.
 *
 * Consists of checking what OS.IO.kind returns when applied to 
 * a file descriptor attached to a file.
 * 
 * Doesn't do anything with sockets since there isn't a standard mechanism yet.
 *
 * All the tests pass if all the boolean values in ans are true.
 * 
 * Revision Log
 * ------------
 *
 * $Log: os_io.sml,v $
 *  Revision 1.4  1997/04/01  16:43:48  jont
 *  Modify to stop displaying syserror type
 *
 *  Revision 1.3  1996/08/29  09:06:39  stephenb
 *  Change the test so that it opens README instead of Makefile
 *  since the test is being run in the test_suite directory,
 *  not the src directory.
 *
 *  Revision 1.2  1996/08/22  12:23:58  stephenb
 *  [Bug #1554]
 *  Win32 doesn't like select being passed file descriptors that
 *  aren't sockets.  So moved this part of the test from the generic
 *  test file to the unix specific one.
 *
 *  Revision 1.1  1996/08/16  15:27:52  stephenb
 *  new unit
 *
 *)



(* Open the fileName as an output file, writes some characters to it
 * and then and applies action to the OS.IO.desc associated with the file 
 * Finally deletes the file and returns the result of the action.
 *
 * Doesn't attempt to catch exceptions and clean up properly.
 *
 * Note:
 *
 *  1. the tedious case stuff is there in preference to
 *
 *       val (TextPrimIO.WR {ioDesc= SOME desc, close, ...}, _) = 
 *         TextStreamIO.getWriter stream;
 *
 *    to avoid a warning from the compiler about inexhausitve bindings 
 *    which then causes the result to fail the tests done by CHECK_RESULT.
 * 
 *  2. Once bug 1564 is fixed, the explicit close could be replaced
 *     by a call to TextIO.StreamIO.closeOut.
 *)

fun applyToOutDesc fileName action =
  let
    val file = TextIO.openOut fileName
    val _ = TextIO.outputSubstr (file, Substring.all "abc");
    val stream = TextIO.getOutstream file;
    val (desc, close)
      = case TextIO.StreamIO.getWriter stream of
          (TextPrimIO.WR {ioDesc=NONE, ...}, _)=> raise Match
        | (TextPrimIO.WR {ioDesc=SOME desc, close, ...}, _) => (desc, close)
    val action_result = action desc
  in
    close();
    OS.FileSys.remove fileName;
    action_result
  end




(* As per applyToOutDesc above except that the file is opened as
 * an input file and it is not deleted afterwards.
 *
 * The original from which unix/os_io.sml#applyToInDesc was copied.
 *)

fun applyToInDesc fileName action =
  let
    val file = TextIO.openIn fileName
    val stream = TextIO.getInstream file;
    val desc = case TextIO.StreamIO.getReader stream of
                 (TextPrimIO.RD {ioDesc=NONE, ...}, _)=> raise Match
               | (TextPrimIO.RD {ioDesc=SOME desc, ...}, _) => desc
    val action_result = action desc
  in
    TextIO.StreamIO.closeIn stream;
    action_result
  end



fun compare_test (a, b) = 
  ( OS.IO.compare (a, a) = EQUAL
  , OS.IO.compare (b, b) = EQUAL
  , OS.IO.compare (a, b) <> EQUAL
  )



fun kind_test (a, b) = 
  ( OS.IO.kind a = OS.IO.Kind.file
  , OS.IO.kind b = OS.IO.Kind.file
  )



fun pollDesc_test a =
  case OS.IO.pollDesc a of
    NONE => false
  | SOME pd => a = OS.IO.pollToIODesc pd



val ans = 
  applyToOutDesc "os_io_test" (fn descA =>
  applyToInDesc "README" (fn descB =>
  ( ("compare", compare_test (descA, descB))
  , ("kind", kind_test (descA, descB))
  , ("pollDescA", pollDesc_test descA)
  , ("pollDescB", pollDesc_test descB)
  )));
@


1.4
log
@Modify to stop displaying syserror type
@
text
@d19 3
a36 10

local
  val _ = Shell.Options.set(Shell.Options.ValuePrinter.maximumStrDepth, 0);
in
  val _ =
    (Shell.Build.loadSource "system.__os";
     Shell.Build.loadSource "basis.__text_io";
     Shell.Build.loadSource "basis.__text_prim_io";
     Shell.Build.loadSource "basis.__substring")
end;
@


1.4.1.1
log
@branched from 1.4
@
text
@a18 3
 *  Revision 1.4  1997/04/01  16:43:48  jont
 *  Modify to stop displaying syserror type
 *
@


1.4.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a18 3
 *  Revision 1.4.1.1  1997/05/12  11:07:48  hope
 *  branched from 1.4
 *
@


1.4.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a18 3
 *  Revision 1.4.1.1  1997/05/12  11:07:48  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a18 3
 *  Revision 1.4.1.1  1997/05/12  11:07:48  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a18 3
 *  Revision 1.4.1.1.1.1  1997/07/28  18:49:48  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3
log
@Change the test so that it opens README instead of Makefile
since the test is being run in the test_suite directory,
not the src directory.
@
text
@d19 5
d35 9
a43 4
Shell.Build.loadSource "system.__os";
Shell.Build.loadSource "basis.__text_io";
Shell.Build.loadSource "basis.__text_prim_io";
Shell.Build.loadSource "basis.__substring";
@


1.3.7.1
log
@branched from 1.3
@
text
@a18 5
 *  Revision 1.3  1996/08/29  09:06:39  stephenb
 *  Change the test so that it opens README instead of Makefile
 *  since the test is being run in the test_suite directory,
 *  not the src directory.
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a18 5
 *  Revision 1.3  1996/08/29  09:06:39  stephenb
 *  Change the test so that it opens README instead of Makefile
 *  since the test is being run in the test_suite directory,
 *  not the src directory.
 *
@


1.3.6.1.1.1
log
@branched from 1.3.6.1
@
text
@a18 3
 *  Revision 1.3.6.1  1996/12/17  18:14:15  hope
 *  branched from 1.3
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a18 5
 *  Revision 1.3  1996/08/29  09:06:39  stephenb
 *  Change the test so that it opens README instead of Makefile
 *  since the test is being run in the test_suite directory,
 *  not the src directory.
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a18 5
 *  Revision 1.3  1996/08/29  09:06:39  stephenb
 *  Change the test so that it opens README instead of Makefile
 *  since the test is being run in the test_suite directory,
 *  not the src directory.
 *
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a18 3
 *  Revision 1.3.4.1  1996/11/14  13:17:29  hope
 *  branched from 1.3
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a18 5
 *  Revision 1.3  1996/08/29  09:06:39  stephenb
 *  Change the test so that it opens README instead of Makefile
 *  since the test is being run in the test_suite directory,
 *  not the src directory.
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a18 5
 *  Revision 1.3  1996/08/29  09:06:39  stephenb
 *  Change the test so that it opens README instead of Makefile
 *  since the test is being run in the test_suite directory,
 *  not the src directory.
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a18 5
 *  Revision 1.3  1996/08/29  09:06:39  stephenb
 *  Change the test so that it opens README instead of Makefile
 *  since the test is being run in the test_suite directory,
 *  not the src directory.
 *
@


1.2
log
@[Bug #1554]
Win32 doesn't like select being passed file descriptors that
aren't sockets.  So moved this part of the test from the generic
test file to the unix specific one.
@
text
@d19 6
d121 1
a121 1
  applyToInDesc "Makefile" (fn descB =>
@


1.1
log
@new unit
@
text
@d9 1
a9 3
 * a file descriptor attached to a file and also that it is possible
 * to use OS.IO.poll to detect the availablility of input/output
 * on such a descriptor.
a14 4
 * Note the result for "available.input.input" may look wrong.  However, since 
 * this is the result under SunOS and Irix I tend to believe that is what it is
 * supposed to be.
 *
d18 4
a21 1
 * $Log$
a24 1
Shell.Build.loadSource "system.__time";
a25 1
Shell.Build.loadSource "basis.__stream_io";
d37 1
a37 1
 * Note that the tedious case stuff is there in preference to
d39 1
a39 1
 *   val (TextPrimIO.WR {ioDesc= SOME desc, ...}, _) = TextStreamIO.getWriter stream;
d41 2
a42 2
 * to avoid a warning from the compiler about inexhausitve bindings 
 * which then causes the result to fail the tests done by CHECK_RESULT.
d44 5
d56 4
a59 3
    val desc = case TextStreamIO.getWriter stream of
                 (TextPrimIO.WR {ioDesc=NONE, ...}, _)=> raise Match
               | (TextPrimIO.WR {ioDesc=SOME desc, ...}, _) => desc
d62 1
a62 1
    TextStreamIO.closeOut stream;
d80 1
a80 1
    val desc = case TextStreamIO.getReader stream of
d85 1
a85 1
    TextStreamIO.closeIn stream;
a112 30

fun available_test (addPoll, modifyIn, modifyOut, modifyPri, fd) =
  case OS.IO.pollDesc fd of
    NONE =>  NONE
  | SOME pd => 
      let
        val pd' = addPoll pd 
        val info = OS.IO.poll ([pd, pd'], SOME Time.zeroTime)
      in
        case info of
          [] => NONE
        | [info] => 
            let
              val pd'' = OS.IO.infoToPollDesc info
            in
              SOME
                ( modifyIn (OS.IO.isIn info)
                , modifyOut (OS.IO.isOut info)
                , modifyPri (OS.IO.isPri info)
                , pd'' = pd'
                , pd'' <> pd
                )
            end
        | _ => NONE
      end

fun id x = x;



d114 2
a115 2
  applyToOutDesc "os_io_test_a" (fn descA =>
  applyToInDesc "os_io_test_a" (fn descB =>
a119 4
  , ("available.input.input", available_test (OS.IO.pollIn, id, not, not, descB))
  , ("available.output.output", available_test (OS.IO.pollOut, not, id, not, descA))
  , ("available.input.output", available_test (OS.IO.pollOut, not, id, not, descB))
  , ("available.output.input", available_test (OS.IO.pollIn, id, not, not, descA))
a120 20


(*
 * Note can't do the following :-
 *
 *   , ("available.input.pri", available_test (OS.IO.pollPri, not, not, id, descB))
 *   , ("available.output.pri", available_test (OS.IO.pollPri, not, not, id, descA))
 *
 * since under SunOS they return :-
 *
 *   ("available.input.pri", SOME (true, true, true, true, true)),
 *   ("available.output.pri", SOME (true, true, true, true, true))
 *
 * whilst under Irix they return :-
 *
 *   ("available.input.pri", NONE),
 *   ("available.output.pri", NONE)
 *
 * Not sure which is correct, but my guess is Irix.
 *)
@
