head	1.3;
access;
symbols
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.2;
locks; strict;
comment	@ *  @;


1.3
date	97.11.21.10.45.07;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	97.08.04.14.02.35;	author brucem;	state Exp;
branches;
next	1.1;

1.1
date	97.08.04.13.57.58;	author brucem;	state Exp;
branches;
next	;


desc
@new unit
Test that all occurences of the option datatype are equivalent.
@


1.3
log
@[Bug #30323]
@
text
@(* Check that all occurences of the datatype 'a option are equivalent
 *
 * Result: OK
 *
 * $Log: option.sml,v $
 *  Revision 1.2  1997/08/04  14:02:35  brucem
 *  Automatic checkin:
 *  changed attribute _comment to ' *  '
 *
 *
 * Copyright (C) 1997 The Harlequin Group Limited. All rights reserved.
 *
 *)

MLWorks.Internal.Types.NONE = NONE;
Option.NONE = NONE;
@


1.2
log
@Automatic checkin:
changed attribute _comment to ' *  '
@
text
@d5 5
a9 1
 * $Log:$
a13 6

local
  val _ = Shell.Options.set(Shell.Options.ValuePrinter.maximumStrDepth, 0);
in
  val _ = Shell.Build.loadSource "basis.__option"
end
@


1.1
log
@new unit
Test that all occurences of the option datatype are equivalent.
@
text
@@
