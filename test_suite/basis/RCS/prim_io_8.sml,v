head	1.10;
access;
symbols
	MLWorks_21c0_1999_03_25:1.10
	MLWorks_20c1_1998_08_20:1.10
	MLWorks_20c0_1998_08_04:1.10
	MLWorks_20b2c2_1998_06_19:1.10
	MLWorks_20b2_Windows_1998_06_12:1.10
	MLWorks_20b1c1_1998_05_07:1.10
	MLWorks_20b0_1998_04_07:1.10
	MLWorks_20b0_1998_03_20:1.10
	MLWorks_20m2_1998_02_16:1.10
	MLWorks_20m1_1997_10_23:1.9
	MLWorks_11r1:1.7.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.7.1.1.1.1
	MLWorks_10r3:1.7.1.1.3
	MLWorks_10r2_551:1.7.1.1.2
	MLWorks_11:1.7.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.7.1.1
	MLWorks_20m0_1997_06_20:1.8
	MLWorks_1_0_r2c2_1997_06_14:1.7.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.7.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.7.1
	MLWorks_BugFix_1997_04_24:1.7
	MLWorks_1_0_r2_Win32_1997_04_11:1.7
	MLWorks_1_0_r2_Unix_1997_04_04:1.7
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.5.6.1.1
	MLWorks_gui_1996_12_18:1.5.7
	MLWorks_1_0_Win32_1996_12_17:1.5.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.5.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.5.4.1
	MLWorks_1_0_Irix_1996_11_28:1.5.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.5.5
	MLWorks_1_0_Unix_1996_11_14:1.5.4
	MLWorks_Open_Beta2_1996_10_11:1.5.3
	MLWorks_License_dev:1.5.2
	MLWorks_1_open_beta_1996_09_13:1.5.1
	MLWorks_Open_Beta_1996_08_22:1.5
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ *  @;


1.10
date	97.11.21.10.47.36;	author daveb;	state Exp;
branches;
next	1.9;

1.9
date	97.08.05.09.46.38;	author brucem;	state Exp;
branches;
next	1.8;

1.8
date	97.05.28.11.17.09;	author jont;	state Exp;
branches;
next	1.7;

1.7
date	97.01.30.16.32.18;	author andreww;	state Exp;
branches
	1.7.1.1;
next	1.6;

1.6
date	97.01.15.15.53.20;	author io;	state Exp;
branches;
next	1.5;

1.5
date	96.08.14.12.12.15;	author io;	state Exp;
branches
	1.5.1.1
	1.5.2.1
	1.5.3.1
	1.5.4.1
	1.5.5.1
	1.5.6.1
	1.5.7.1;
next	1.4;

1.4
date	96.07.18.14.09.35;	author andreww;	state Exp;
branches;
next	1.3;

1.3
date	96.06.04.12.17.22;	author andreww;	state Exp;
branches;
next	1.2;

1.2
date	96.05.24.15.25.32;	author andreww;	state Exp;
branches;
next	1.1;

1.1
date	96.05.24.10.18.39;	author andreww;	state Exp;
branches;
next	;

1.5.1.1
date	96.09.13.11.38.14;	author hope;	state Exp;
branches;
next	;

1.5.2.1
date	96.10.07.16.29.34;	author hope;	state Exp;
branches;
next	;

1.5.3.1
date	96.10.17.11.50.19;	author hope;	state Exp;
branches;
next	;

1.5.4.1
date	96.11.14.13.17.43;	author hope;	state Exp;
branches
	1.5.4.1.1.1;
next	;

1.5.4.1.1.1
date	96.11.28.15.28.13;	author hope;	state Exp;
branches;
next	;

1.5.5.1
date	96.11.22.18.35.30;	author hope;	state Exp;
branches;
next	;

1.5.6.1
date	96.12.17.18.14.29;	author hope;	state Exp;
branches
	1.5.6.1.1.1;
next	;

1.5.6.1.1.1
date	97.02.24.12.07.25;	author hope;	state Exp;
branches;
next	;

1.5.7.1
date	96.12.18.10.09.28;	author hope;	state Exp;
branches;
next	;

1.7.1.1
date	97.05.12.11.08.03;	author hope;	state Exp;
branches
	1.7.1.1.1.1
	1.7.1.1.2.1
	1.7.1.1.3.1;
next	;

1.7.1.1.1.1
date	97.07.28.18.50.04;	author daveb;	state Exp;
branches
	1.7.1.1.1.1.1.1;
next	;

1.7.1.1.1.1.1.1
date	97.10.07.12.15.13;	author jkbrook;	state Exp;
branches;
next	;

1.7.1.1.2.1
date	97.09.08.17.41.53;	author daveb;	state Exp;
branches;
next	;

1.7.1.1.3.1
date	97.09.09.14.41.17;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.10
log
@[Bug #30323]
@
text
@(* preliminary Test suite for binprimio functions.
 *

 Result: OK

 * $Log: prim_io_8.sml,v $
 *  Revision 1.9  1997/08/05  09:46:38  brucem
 *  [Bug #30004]
 *  Suppress printing structure contents to prevent spurious failure.
 *
 *  Revision 1.8  1997/05/28  11:17:09  jont
 *  [Bug #30090]
 *  Remove uses of MLWorks.IO
 *
 *  Revision 1.7  1997/01/30  16:32:18  andreww
 *  [Bug #1904]
 *  monovectors no longer equality types.
 *
 *  Revision 1.6  1997/01/15  15:53:20  io
 *  [Bug #1892]
 *  rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
 *
 *  Revision 1.5  1996/08/14  12:12:15  io
 *  switch off Compiling messages...
 *
 *  Revision 1.4  1996/07/18  14:09:35  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
 *  Revision 1.3  1996/06/04  12:17:22  andreww
 *  adding BinPrimIO.
 *  ,
 *
 *  Revision 1.2  1996/05/24  15:25:32  andreww
 *  fix bugs pertaining to answer file creation.
 *
 *  Revision 1.1  1996/05/24  10:18:39  andreww
 *  new unit
 *
 * Copyright (c) 1996 Harlequin Ltd.
 *
 *)


local
  open General;
  open BinPrimIO;
  infix ==;
  fun a == b =
    let
      val len = Word8Vector.length a
      fun scan i = if i=len then true
                   else (Word8Vector.sub(a,i) = Word8Vector.sub(b,i)
                         andalso scan (i+1))
    in
      len = Word8Vector.length b
      andalso scan 0
    end


in

(*functions to supply output *)

  val number = ref (Word8.fromInt 0);
  val result = ref (Word8Vector.fromList [])

  fun nextno () = (number:=(Word8.fromInt(1+Word8.toInt(!number)));
                   !number);

  fun reset () = number:=Word8.fromInt 0;

  fun makelist x = if x<=0 then [] 
                   else nextno()::(makelist(x-1));



(* Finally, meet Doris, who is quite intelligent *)

  val w=WR{ name = "Doris",
              chunkSize = 5,
              writeVec = NONE,
              writeArr = NONE,

              writeVecNB = NONE,
              writeArrNB= SOME (fn {buf=b,i=p,sz=s} => SOME (
                                 result:=Word8Array.extract(b,p,s);
                                 case s of
                                   NONE => Word8Array.length b -p
                                 | SOME(si) => si)),
              block=SOME(fn ()=>()),
              canOutput= SOME(fn ()=>true),
              getPos = SOME(fn ()=> 0),
              setPos = SOME(fn x => ()),
              endPos = SOME(fn ()=> ~1),
              verifyPos = NONE,
              close = fn () => (),
              ioDesc = NONE};


  val w'= augmentWriter w;


(* test synthesized vector write *)

  val f = (fn WR({writeVec=SOME(f),...}) => f
            | WR({writeVec=NONE,...}) => raise Div) w';
                                 (* a hack to overcome warning messages
                                  * about unexhaustive matches.  Div
                                  * should never be raised *)

  val v = (reset(); Word8Vector.fromList (makelist 10));

  val x = f{buf = v, i=0, sz=NONE};
  

  fun compare x = if v == !result then print"Vector write succeeded.\n"
                  else print"Vector write failed.\n"

  val test1 = compare 1;


(* test synthesized vector NB write *)

  val f = (fn WR({writeVecNB=SOME(f),...}) => f
            | WR({writeVecNB=NONE,...}) => raise Div) w';

  val v = (reset(); Word8Vector.fromList (makelist 10));

  val x = f{buf = v, i=0, sz=NONE};
  

  fun compare x = if v == !result then print"VectorNB write succeeded.\n"
                  else print"VectorNB write failed.\n"

  val test2 = compare 1;


(* test synthesized array write *)

  val f = (fn WR({writeArr=SOME(f),...}) => f
            | WR({writeArr=NONE,...}) => raise Div) w';

  val a = (reset(); Word8Array.fromList (makelist 10));

  val x = f{buf = a, i=0, sz=NONE};
  
    fun compare x = if x = 10 then print"Array write succeeded.\n"
                  else if Word8.toInt(Word8Vector.sub(!result,x-1))<>x
                       then print"Array write failed.\n"
                         else compare (x+1);

  val test3 = compare 1;


end;






@


1.9
log
@[Bug #30004]
Suppress printing structure contents to prevent spurious failure.
@
text
@d7 4
a43 10
local
  val _ = Shell.Options.set(Shell.Options.ValuePrinter.maximumStrDepth, 0);
in
  val _ =
    (Shell.Build.loadSource "basis.__general";
     Shell.Build.loadSource "basis.__word8";
     Shell.Build.loadSource "basis.__word8_vector";
     Shell.Build.loadSource "basis.__word8_array";
     Shell.Build.loadSource "basis.__bin_prim_io")
end ;
@


1.8
log
@[Bug #30090]
Remove uses of MLWorks.IO
@
text
@d7 4
d40 10
a49 5
Shell.Build.loadSource "basis.__general";
Shell.Build.loadSource "basis.__word8";
Shell.Build.loadSource "basis.__word8_vector";
Shell.Build.loadSource "basis.__word8_array";
Shell.Build.loadSource "basis.__bin_prim_io";
@


1.7
log
@[Bug #1904]
monovectors no longer equality types.
@
text
@d7 4
d114 2
a115 4
  fun compare x = if v == !result then  MLWorks.IO.output(MLWorks.IO.std_out,
                                                "Vector write succeeded.\n")
                  else MLWorks.IO.output(MLWorks.IO.std_out,
                                  "Vector write failed.\n");
d130 2
a131 4
  fun compare x = if v == !result then  MLWorks.IO.output(MLWorks.IO.std_out,
                                                "VectorNB write succeeded.\n")
                  else MLWorks.IO.output(MLWorks.IO.std_out,
                                  "VectorNB write failed.\n");
d145 1
a145 2
    fun compare x = if x = 10 then MLWorks.IO.output(MLWorks.IO.std_out,
                                  "Array write succeeded.\n")
d147 1
a147 2
                       then MLWorks.IO.output(MLWorks.IO.std_out,
                                  "Array write failed.\n")
@


1.7.1.1
log
@branched from 1.7
@
text
@a6 4
 *  Revision 1.7  1997/01/30  16:32:18  andreww
 *  [Bug #1904]
 *  monovectors no longer equality types.
 *
@


1.7.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a6 3
 *  Revision 1.7.1.1  1997/05/12  11:08:03  hope
 *  branched from 1.7
 *
@


1.7.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a6 3
 *  Revision 1.7.1.1  1997/05/12  11:08:03  hope
 *  branched from 1.7
 *
@


1.7.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a6 3
 *  Revision 1.7.1.1  1997/05/12  11:08:03  hope
 *  branched from 1.7
 *
@


1.7.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a6 3
 *  Revision 1.7.1.1.1.1  1997/07/28  18:50:04  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.6
log
@[Bug #1892]
rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
@
text
@d7 4
d41 13
d110 2
a111 2
  fun compare x = if v= !result then  MLWorks.IO.output(MLWorks.IO.std_out,
                                                    "Vector write succeeded.\n")
d128 1
a128 1
  fun compare x = if v= !result then  MLWorks.IO.output(MLWorks.IO.std_out,
@


1.5
log
@switch off Compiling messages...
@
text
@d7 3
d30 2
a31 2
Shell.Build.loadSource "basis.__word8vector";
Shell.Build.loadSource "basis.__word8array";
@


1.5.7.1
log
@branched from 1.5
@
text
@a6 3
 *  Revision 1.5  1996/08/14  12:12:15  io
 *  switch off Compiling messages...
 *
@


1.5.6.1
log
@branched from 1.5
@
text
@a6 3
 *  Revision 1.5  1996/08/14  12:12:15  io
 *  switch off Compiling messages...
 *
@


1.5.6.1.1.1
log
@branched from 1.5.6.1
@
text
@a6 3
 *  Revision 1.5.6.1  1996/12/17  18:14:29  hope
 *  branched from 1.5
 *
@


1.5.5.1
log
@branched from 1.5
@
text
@a6 3
 *  Revision 1.5  1996/08/14  12:12:15  io
 *  switch off Compiling messages...
 *
@


1.5.4.1
log
@branched from 1.5
@
text
@a6 3
 *  Revision 1.5  1996/08/14  12:12:15  io
 *  switch off Compiling messages...
 *
@


1.5.4.1.1.1
log
@branched from 1.5.4.1
@
text
@a6 3
 *  Revision 1.5.4.1  1996/11/14  13:17:43  hope
 *  branched from 1.5
 *
@


1.5.3.1
log
@branched from 1.5
@
text
@a6 3
 *  Revision 1.5  1996/08/14  12:12:15  io
 *  switch off Compiling messages...
 *
@


1.5.2.1
log
@branched from 1.5
@
text
@a6 3
 *  Revision 1.5  1996/08/14  12:12:15  io
 *  switch off Compiling messages...
 *
@


1.5.1.1
log
@branched from 1.5
@
text
@a6 3
 *  Revision 1.5  1996/08/14  12:12:15  io
 *  switch off Compiling messages...
 *
@


1.4
log
@[Bug #1453]
updating to respect the modernisation of the IO library (May 96)
@
text
@d7 4
d39 1
a39 1
  val result = ref "";
@


1.3
log
@adding BinPrimIO.
,
@
text
@d6 5
a10 1
 * $Log: basis:prim_io_8.sml,v $
d62 4
a65 3
              getPos = fn ()=> 0,
              setPos = fn x => (),
              endPos = fn ()=> ~1,
@


1.2
log
@fix bugs pertaining to answer file creation.
@
text
@d7 3
d21 1
a21 1
Shell.Build.loadSource "system.__primio";
@


1.1
log
@new unit
@
text
@d3 7
a9 2
   Result: OK
 * $Log:$
d14 5
a18 5
Shell.File.loadSource "basis/__general";
Shell.File.loadSource "basis/__word8";
Shell.File.loadSource "basis/__word8vector";
Shell.File.loadSource "basis/__word8array";
Shell.File.loadSource "system/__primio";
d67 6
a72 1
  val WR({writeVec=SOME(f),...}) = w';
d88 3
a90 1
  val WR({writeVecNB=SOME(f),...}) = w';
d106 3
a108 1
  val WR({writeArr=SOME(f),...}) = w';
@
