head	1.8;
access;
symbols
	MLWorks_21c0_1999_03_25:1.8
	MLWorks_20c1_1998_08_20:1.8
	MLWorks_20c0_1998_08_04:1.8
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.8
	MLWorks_20b1c1_1998_05_07:1.8
	MLWorks_20b0_1998_04_07:1.8
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_20m1_1997_10_23:1.7
	MLWorks_11r1:1.6.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.6.1.1.1.1
	MLWorks_10r3:1.6.1.1.3
	MLWorks_10r2_551:1.6.1.1.2
	MLWorks_11:1.6.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.1.1
	MLWorks_20m0_1997_06_20:1.7
	MLWorks_1_0_r2c2_1997_06_14:1.6.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.1
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.6.1.1
	MLWorks_gui_1996_12_18:1.4.7
	MLWorks_1_0_Win32_1996_12_17:1.4.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.4.1
	MLWorks_1_0_Irix_1996_11_28:1.4.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.5
	MLWorks_1_0_Unix_1996_11_14:1.4.4
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.3;
locks; strict;
comment	@ *  @;


1.8
date	97.11.21.10.44.11;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	97.05.28.11.05.42;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	97.04.01.16.58.54;	author jont;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	96.11.16.02.08.28;	author io;	state Exp;
branches;
next	1.4;

1.4
date	96.07.18.15.04.32;	author andreww;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1;
next	1.3;

1.3
date	96.06.12.09.08.36;	author andreww;	state Exp;
branches;
next	1.2;

1.2
date	96.06.11.13.10.41;	author andreww;	state Exp;
branches;
next	1.1;

1.1
date	96.06.11.12.44.00;	author andreww;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.38.22;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.29.43;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.50.25;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.14.13.17.49;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	96.11.28.15.28.20;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.22.18.35.38;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.17.18.14.37;	author hope;	state Exp;
branches
	1.4.6.1.1.1;
next	;

1.4.6.1.1.1
date	97.02.24.12.07.33;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.18.10.09.34;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	97.05.12.11.08.11;	author hope;	state Exp;
branches
	1.6.1.1.1.1
	1.6.1.1.2.1
	1.6.1.1.3.1;
next	;

1.6.1.1.1.1
date	97.07.28.18.50.07;	author daveb;	state Exp;
branches
	1.6.1.1.1.1.1.1;
next	;

1.6.1.1.1.1.1.1
date	97.10.07.12.14.23;	author jkbrook;	state Exp;
branches;
next	;

1.6.1.1.2.1
date	97.09.08.17.41.57;	author daveb;	state Exp;
branches;
next	;

1.6.1.1.3.1
date	97.09.09.14.41.22;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Tests Imperative IO, plus filesystem IO.
@


1.8
log
@[Bug #30323]
@
text
@(* This tests that the ImperativeIO functor implements imperative streams.
 *

Result: OK

 * $Log: imperative_io.sml,v $
 *  Revision 1.7  1997/05/28  11:05:42  jont
 *  [Bug #30090]
 *  Remove uses of MLWorks.IO
 *
 *  Revision 1.6  1997/04/01  16:58:54  jont
 *  Modify to avoid displaying syserror type
 *
 *  Revision 1.5  1996/11/16  02:08:28  io
 *  [Bug #1757]
 *  renamed __ieeereal to __ieee_real
 *          __char{array,vector} to __char_{array,vector}
 *
 *  Revision 1.4  1996/07/18  15:04:32  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
 *  Revision 1.3  1996/06/12  09:08:36  andreww
 *  removing erroneous test.
 *
 *  Revision 1.2  1996/06/11  13:10:41  andreww
 *  add more tests.
 *
 *  Revision 1.1  1996/06/11  12:44:00  andreww
 *  new unit
 *  Tests Imperative IO, plus filesystem IO.
 *
 *
 * Copyright (c) 1996 Harlequin Ltd.
 *
 *)


local
  open General
  open TextIO
in

(* functions that supply reader input *)

   val comm_medium = ref "";
   val pos = ref 0;


(*Arthur is going to read what Amy writes: our test function. *)

  val w = TextPrimIO.WR{ name = "Amy",
              chunkSize = 20,
              writeVec = SOME (fn {buf=b,i=p,sz=s} => (
                                 comm_medium:=(!comm_medium)^
                                                CharVector.extract(b,p,s);
                                 case s of
                                   NONE => CharVector.length b -p
                                 | SOME(si) => si)),
              writeArr = NONE,
              writeVecNB = NONE,
              writeArrNB=NONE,
              block=NONE,
              canOutput= SOME(fn ()=>true),
              getPos = SOME(fn ()=> 0),
              setPos = SOME(fn x => ()),
              endPos = SOME(fn ()=> ~1),
              verifyPos = NONE,
              close = fn () => (),
              ioDesc = NONE};

  val amy = mkOutstream (StreamIO.mkOutstream(w,IO.LINE_BUF));

    
  val the_answer = "One Two Three\n1Four Five Six\nSeven Eight Nine."
    
  val _ = output(amy,"One Two Three\n");
  val _ = output1(amy,#"1");
  val _ = output(amy,"Four Five Six\n");
  val _ = output(amy,"Seven Eight Nine.");
    
  val test1 = the_answer <> (!comm_medium);
  val test2 = the_answer = (flushOut amy; !comm_medium);





  val r = TextPrimIO.RD{ 
              name = "Arthur",
              chunkSize = 5,
              readVec = 
                SOME (fn (x:int) =>
                 let val y = if x+(!pos)>CharVector.length(!comm_medium)
                               then CharVector.length(!comm_medium)-(!pos)
                             else x
                     val r = CharVector.extract(!comm_medium,!pos,SOME y)
                 in
                   (pos:=(!pos)+y; r)
                 end),
              readArr = NONE,
              readVecNB = NONE,
              readArrNB=NONE,
              block=SOME(fn ()=>()),
              canInput= SOME(fn ()=> 
                             not(CharVector.length (!comm_medium)=(!pos))),
              avail = fn()=> NONE,
              getPos = SOME(fn ()=> (!pos)),
              setPos = SOME(fn x => pos:=x),
              endPos = SOME(fn ()=> CharVector.length (!comm_medium)),
              verifyPos = NONE,
              close = fn () => (),
              ioDesc = NONE};


    val arthur = mkInstream (StreamIO.mkInstream(r,""));

    fun reportOK true = print"test succeeded.\n"
      | reportOK false = print"test failed.\n"

    val x = reportOK (the_answer=(input arthur)^
                                 (case input1 arthur
                                    of NONE => ""
                                     | (SOME c) => Char.toString c)^
                                 (inputAll arthur));

    val x = reportOK (endOfStream arthur);


    (* now test the input/output with filesystem *)

(*  The following test is buggy: the message seems to appear at different
    places in the output script at different times/machines etc.

    val _ = print "Output test succeeded\n";
*)
    val s_1 = "Oh the grand old Duke of York,\n";
    val s_2 = "He had a leg of Pork,\n";
    val s_3 = "He marched it up to the Microwave,\n";
    val s_4 = "And he ate it with a fork.\n";
    val s_5 = "\n\nFile created by test_suite/basis/imperative_io.sml";

    val x = openOut "123";
    val _ = output(x,s_1);
    val _ = output(x,s_2);
    val _ = output(x,s_3);
    val _ = output(x,s_4);
    val _ = output(x,s_5);
    val _ = closeOut x;

    val y = openIn "123";
    val s = inputAll y;
    val _ = closeIn y;

    val _ = reportOK (s=s_1^s_2^s_3^s_4^s_5);

    val s_6 = "Some enchanted evening,...";

    val x = openAppend "123";
    val _ = output(x,s_6);
    val _ = closeOut x;

    val y = openIn "123";
    val s'_1 = inputLine y;
    val s'_2 = inputAll y;
    val _ = closeIn y;

    val _ = reportOK (s'_1=s_1);
    val _ = reportOK ((s'_1^s'_2)=(s_1^s_2^s_3^s_4^s_5^s_6));





    val _ = OS.FileSys.remove "123";


      (* test stream switching facilities *)

     val comm_2 = ref "BBBBB";
     val pos2 = ref 0;
     val _ = comm_medium:= "AAAAA";
     val _ = pos:=0;


     val r2 = TextPrimIO.RD{ 
              name = "Arthur's twin",
              chunkSize = 5,
              readVec = 
                SOME (fn (x:int) =>
                 let val y = if x+(!pos2)>CharVector.length(!comm_2)
                               then CharVector.length(!comm_2)-(!pos2)
                             else x
                     val r = CharVector.extract(!comm_2,!pos2,SOME y)
                 in
                   (pos2:=(!pos2)+y; r)
                 end),
              readArr = NONE,
              readVecNB = NONE,
              readArrNB=NONE,
              block=SOME(fn ()=>()),
              canInput= SOME(fn ()=> 
                             not(CharVector.length (!comm_2)=(!pos2))),
              avail = fn()=>NONE,
              getPos = SOME(fn ()=> (!pos2)),
              setPos = SOME(fn x => pos2:=x),
              endPos = SOME(fn ()=> CharVector.length (!comm_2)),
              verifyPos = NONE,
              close = fn () => (),
              ioDesc = NONE};

       val arthur = mkInstream (StreamIO.mkInstream (r,""));
       val ruhtra = StreamIO.mkInstream (r2,"");


       fun interleave one other =
         if (endOfStream one) andalso (StreamIO.endOfStream other) then ""
           else (case (input1 one)
                   of SOME c => Char.toString c
                    | NONE => "")
             ^(let val temp = getInstream one
                   val _ = setInstream (one, other)
                in interleave one temp
             end);

       val x = reportOK ("ABABABABAB"=(interleave arthur ruhtra));



end



@


1.7
log
@[Bug #30090]
Remove uses of MLWorks.IO
@
text
@d7 4
a36 16

local
  val _ = Shell.Options.set(Shell.Options.ValuePrinter.maximumStrDepth, 0);
in
  val _ =
    (Shell.Build.loadSource "basis.__general";
     Shell.Build.loadSource "basis.__char";
     Shell.Build.loadSource "basis.__char_vector";
     Shell.Build.loadSource "basis.__char_array";
     Shell.Build.loadSource "system.__os_prim_io";
     Shell.Build.loadSource "basis.__bin_prim_io";
     Shell.Build.loadSource "basis.__text_prim_io";
     Shell.Build.loadSource "basis.__text_io";
     Shell.Build.loadSource "basis.__io";
     Shell.Build.loadSource "system.__os")
end;
@


1.6
log
@Modify to avoid displaying syserror type
@
text
@d7 3
d130 2
a131 4
    fun reportOK true = MLWorks.IO.output(MLWorks.IO.std_out,
                                  "test succeeded.\n")
      | reportOK false = MLWorks.IO.output(MLWorks.IO.std_out,
                                  "test failed.\n")
@


1.6.1.1
log
@branched from 1.6
@
text
@a6 3
 *  Revision 1.6  1997/04/01  16:58:54  jont
 *  Modify to avoid displaying syserror type
 *
@


1.6.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a6 3
 *  Revision 1.6.1.1  1997/05/12  11:08:11  hope
 *  branched from 1.6
 *
@


1.6.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a6 3
 *  Revision 1.6.1.1  1997/05/12  11:08:11  hope
 *  branched from 1.6
 *
@


1.6.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a6 3
 *  Revision 1.6.1.1  1997/05/12  11:08:11  hope
 *  branched from 1.6
 *
@


1.6.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a6 3
 *  Revision 1.6.1.1.1.1  1997/07/28  18:50:07  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.5
log
@[Bug #1757]
renamed __ieeereal to __ieee_real
        __char{array,vector} to __char_{array,vector}
@
text
@d7 5
d31 15
a45 10
Shell.Build.loadSource "basis.__general";
Shell.Build.loadSource "basis.__char";
Shell.Build.loadSource "basis.__char_vector";
Shell.Build.loadSource "basis.__char_array";
Shell.Build.loadSource "system.__os_prim_io";
Shell.Build.loadSource "basis.__bin_prim_io";
Shell.Build.loadSource "basis.__text_prim_io";
Shell.Build.loadSource "basis.__text_io";
Shell.Build.loadSource "basis.__io";
Shell.Build.loadSource "system.__os";
@


1.4
log
@[Bug #1453]
updating to respect the modernisation of the IO library (May 96)
@
text
@d7 4
d28 2
a29 2
Shell.Build.loadSource "basis.__charvector";
Shell.Build.loadSource "basis.__chararray";
@


1.4.7.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  15:04:32  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.4.6.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  15:04:32  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.4.6.1.1.1
log
@branched from 1.4.6.1
@
text
@a6 3
 *  Revision 1.4.6.1  1996/12/17  18:14:37  hope
 *  branched from 1.4
 *
@


1.4.5.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  15:04:32  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  15:04:32  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@a6 3
 *  Revision 1.4.4.1  1996/11/14  13:17:49  hope
 *  branched from 1.4
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  15:04:32  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  15:04:32  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  15:04:32  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.3
log
@removing erroneous test.
@
text
@d7 3
d26 1
a26 1
Shell.Build.loadSource "system.__primio";
d35 2
a36 2
  open General;
  open TextIO;
d60 4
a63 3
              getPos = fn ()=> 0,
              setPos = fn x => (),
              endPos = fn ()=> ~1,
d102 5
a106 3
              getPos = fn ()=> (!pos),
              setPos = fn x => pos:=x,
              endPos = fn ()=> CharVector.length (!comm_medium),
d201 5
a205 3
              getPos = fn ()=> (!pos2),
              setPos = fn x => pos2:=x,
              endPos = fn ()=> CharVector.length (!comm_2),
@


1.2
log
@add more tests.
@
text
@d7 3
d123 3
d127 1
a127 1

@


1.1
log
@new unit
Tests Imperative IO, plus filesystem IO.
@
text
@d6 5
a10 1
 * $Log:$
d141 18
@
