head	1.19;
access;
symbols
	MLWorks_21c0_1999_03_25:1.19
	MLWorks_20c1_1998_08_20:1.19
	MLWorks_20c0_1998_08_04:1.19
	MLWorks_20b2c2_1998_06_19:1.19
	MLWorks_20b2_Windows_1998_06_12:1.19
	MLWorks_20b1c1_1998_05_07:1.19
	MLWorks_20b0_1998_04_07:1.19
	MLWorks_20b0_1998_03_20:1.19
	MLWorks_20m2_1998_02_16:1.19
	MLWorks_20m1_1997_10_23:1.18
	MLWorks_11r1:1.18.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.18.1.1.1.1
	MLWorks_10r3:1.18.1.1.3
	MLWorks_10r2_551:1.18.1.1.2
	MLWorks_11:1.18.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.18.1.1
	MLWorks_20m0_1997_06_20:1.18
	MLWorks_1_0_r2c2_1997_06_14:1.18.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.18.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.18.1
	MLWorks_BugFix_1997_04_24:1.18
	MLWorks_1_0_r2_Win32_1997_04_11:1.18
	MLWorks_1_0_r2_Unix_1997_04_04:1.18
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.16.3.1.1
	MLWorks_gui_1996_12_18:1.16.4
	MLWorks_1_0_Win32_1996_12_17:1.16.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.16.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.16.1.1
	MLWorks_1_0_Irix_1996_11_28:1.16.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.16.2
	MLWorks_1_0_Unix_1996_11_14:1.16.1
	MLWorks_Open_Beta2_1996_10_11:1.15.3
	MLWorks_License_dev:1.15.2
	MLWorks_1_open_beta_1996_09_13:1.15.1
	MLWorks_Open_Beta_1996_08_22:1.12
	MLWorks_Beta_1996_07_02:1.10
	MLWorks_Beta_1996_06_07:1.9
	MLWorks_Beta_1996_06_06:1.9
	MLWorks_Beta_1996_06_05:1.9
	MLWorks_Beta_1996_06_03:1.8
	MLWorks_Beta_1996_05_31:1.8
	MLWorks_Beta_1996_05_30:1.7;
locks; strict;
comment	@# @;


1.19
date	97.11.25.19.21.28;	author daveb;	state Exp;
branches;
next	1.18;

1.18
date	97.04.02.21.46.17;	author jont;	state Exp;
branches
	1.18.1.1;
next	1.17;

1.17
date	97.03.05.11.45.46;	author jont;	state Exp;
branches;
next	1.16;

1.16
date	96.11.08.15.19.55;	author matthew;	state Exp;
branches
	1.16.1.1
	1.16.2.1
	1.16.3.1
	1.16.4.1;
next	1.15;

1.15
date	96.09.09.11.14.01;	author io;	state Exp;
branches
	1.15.1.1
	1.15.2.1
	1.15.3.1;
next	1.14;

1.14
date	96.09.07.00.02.25;	author io;	state Exp;
branches;
next	1.13;

1.13
date	96.08.28.23.18.27;	author stephenb;	state Exp;
branches;
next	1.12;

1.12
date	96.08.14.11.24.43;	author io;	state Exp;
branches;
next	1.11;

1.11
date	96.07.04.18.12.19;	author andreww;	state Exp;
branches;
next	1.10;

1.10
date	96.06.25.09.35.04;	author io;	state Exp;
branches;
next	1.9;

1.9
date	96.06.05.00.14.37;	author io;	state Exp;
branches;
next	1.8;

1.8
date	96.05.30.15.11.33;	author stephenb;	state Exp;
branches;
next	1.7;

1.7
date	96.05.24.10.08.21;	author stephenb;	state Exp;
branches;
next	1.6;

1.6
date	96.05.21.14.12.17;	author stephenb;	state Exp;
branches;
next	1.5;

1.5
date	96.05.17.11.44.05;	author stephenb;	state Exp;
branches;
next	1.4;

1.4
date	96.05.16.15.54.19;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	96.05.09.15.03.03;	author stephenb;	state Exp;
branches;
next	1.2;

1.2
date	96.04.19.12.45.53;	author stephenb;	state Exp;
branches;
next	1.1;

1.1
date	96.04.18.11.06.47;	author stephenb;	state Exp;
branches;
next	;

1.15.1.1
date	96.09.13.11.38.01;	author hope;	state Exp;
branches;
next	;

1.15.2.1
date	96.10.07.16.29.22;	author hope;	state Exp;
branches;
next	;

1.15.3.1
date	96.10.17.11.50.09;	author hope;	state Exp;
branches;
next	;

1.16.1.1
date	96.11.14.13.17.32;	author hope;	state Exp;
branches
	1.16.1.1.1.1;
next	;

1.16.1.1.1.1
date	96.11.28.15.28.01;	author hope;	state Exp;
branches;
next	;

1.16.2.1
date	96.11.22.18.35.20;	author hope;	state Exp;
branches;
next	;

1.16.3.1
date	96.12.17.18.14.18;	author hope;	state Exp;
branches
	1.16.3.1.1.1;
next	;

1.16.3.1.1.1
date	97.02.24.12.07.13;	author hope;	state Exp;
branches;
next	;

1.16.4.1
date	96.12.18.10.09.17;	author hope;	state Exp;
branches;
next	;

1.18.1.1
date	97.05.12.11.07.51;	author hope;	state Exp;
branches
	1.18.1.1.1.1
	1.18.1.1.2.1
	1.18.1.1.3.1;
next	;

1.18.1.1.1.1
date	97.07.28.18.49.53;	author daveb;	state Exp;
branches
	1.18.1.1.1.1.1.1;
next	;

1.18.1.1.1.1.1.1
date	97.10.07.12.14.15;	author jkbrook;	state Exp;
branches;
next	;

1.18.1.1.2.1
date	97.09.08.17.41.41;	author daveb;	state Exp;
branches;
next	;

1.18.1.1.3.1
date	97.09.09.14.41.06;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.19
log
@[Bug #30323]
@
text
@val out : string -> unit = fn
val finish : unit -> unit = fn
val recursive_atExit : unit -> unit = fn
val after_exit : unit -> unit = fn
val recursive_exit : unit -> unit = fn
val start : unit -> unit = fn
val it : unit = ()
val it : unit = ()
val it : unit = ()
val it : unit = ()
val it : unit = ()
starting ...
Starting recursive exit ...
after recursive exit, trying atExit case ...
finished.
@


1.18
log
@Modify to stop displaying syserror type
@
text
@a0 1
structure OS = struct ... end
@


1.18.1.1
log
@branched from 1.18
@
text
@@


1.18.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.18.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.18.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.18.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.17
log
@Modify because Path now has toUnixPath and fromUnixPath
@
text
@d1 1
a1 106
val it : unit = ()
structure OS =
  struct
    structure FileSys =
      struct
        datatype access_mode =
          A_EXEC |
          A_READ |
          A_WRITE
        eqtype dirstream = dirstream
        eqtype file_id = file_id
        val A_EXEC : OS.FileSys.access_mode
        val A_READ : OS.FileSys.access_mode
        val A_WRITE : OS.FileSys.access_mode
        val access : (string * OS.FileSys.access_mode list) -> bool = fn
        val chDir : string -> unit = fn
        val closeDir : OS.FileSys.dirstream -> unit = fn
        val compare : (OS.FileSys.file_id * OS.FileSys.file_id) -> order = fn
        val fileId : string -> OS.FileSys.file_id = fn
        val fileSize : string -> int = fn
        val fullPath : string -> string = fn
        val getDir : unit -> string = fn
        val hash : OS.FileSys.file_id -> word = fn
        val isDir : string -> bool = fn
        val isLink : string -> bool = fn
        val mkDir : string -> unit = fn
        val modTime : string -> time(hidden) = fn
        val openDir : string -> OS.FileSys.dirstream = fn
        val readDir : OS.FileSys.dirstream -> string = fn
        val readLink : string -> string = fn
        val realPath : string -> string = fn
        val remove : string -> unit = fn
        val rename : {new: string, old: string} -> unit = fn
        val rewindDir : OS.FileSys.dirstream -> unit = fn
        val rmDir : string -> unit = fn
        val setTime : (string * time(hidden) option) -> unit = fn
        val tmpName : unit -> string = fn
      end
    structure IO =
      struct
        structure Kind = struct ... end
        eqtype iodesc = iodesc
        eqtype iodesc_kind = iodesc_kind
        eqtype poll_desc = poll_desc
        eqtype poll_info = poll_info
        exception Poll
        val compare : (OS.IO.iodesc * OS.IO.iodesc) -> order = fn
        val hash : OS.IO.iodesc -> word = fn
        val infoToPollDesc : OS.IO.poll_info -> OS.IO.poll_desc = fn
        val isIn : OS.IO.poll_info -> bool = fn
        val isOut : OS.IO.poll_info -> bool = fn
        val isPri : OS.IO.poll_info -> bool = fn
        val kind : OS.IO.iodesc -> OS.IO.iodesc_kind = fn
        val poll : (OS.IO.poll_desc list * time(hidden) option) -> OS.IO.poll_info list = fn
        val pollDesc : OS.IO.iodesc -> OS.IO.poll_desc option = fn
        val pollIn : OS.IO.poll_desc -> OS.IO.poll_desc = fn
        val pollOut : OS.IO.poll_desc -> OS.IO.poll_desc = fn
        val pollPri : OS.IO.poll_desc -> OS.IO.poll_desc = fn
        val pollToIODesc : OS.IO.poll_desc -> OS.IO.iodesc = fn
      end
    structure Path =
      struct
        exception Path
        val base : string -> string = fn
        val concat : (string * string) -> string = fn
        val currentArc : string = "."
        val dir : string -> string = fn
        val ext : string -> string option = fn
        val file : string -> string = fn
        val fromString : string -> {arcs: string list, isAbs: bool, vol: string} = fn
        val fromUnixPath : string -> string = fn
        val getParent : string -> string = fn
        val getVolume : string -> string = fn
        val isAbsolute : string -> bool = fn
        val isCanonical : string -> bool = fn
        val isRelative : string -> bool = fn
        val isRoot : string -> bool = fn
        val joinBaseExt : {base: string, ext: string option} -> string = fn
        val joinDirFile : {dir: string, file: string} -> string = fn
        val mkAbsolute : (string * string) -> string = fn
        val mkCanonical : string -> string = fn
        val mkRelative : (string * string) -> string = fn
        val parentArc : string = ".."
        val splitBaseExt : string -> {base: string, ext: string option} = fn
        val splitDirFile : string -> {dir: string, file: string} = fn
        val toString : {arcs: string list, isAbs: bool, vol: string} -> string = fn
        val toUnixPath : string -> string = fn
        val validVolume : {isAbs: bool, vol: string} -> bool = fn
      end
    structure Process =
      struct
        eqtype status = int
        val atExit : (unit -> unit) -> unit = fn
        val exit : int -> 'a = fn
        val failure : int = 1
        val getEnv : string -> string option = fn
        val success : int = 0
        val system : string -> int = fn
        val terminate : int -> 'a = fn
      end
    eqtype syserror = int
    exception SysErr of (string * syserror option)
    val errorMsg : int -> string = fn
    val errorName : int -> string = fn
    val syserror : string -> int option = fn
  end
@


1.16
log
@[Bug #1661]
Updating
@
text
@d71 1
d87 1
@


1.16.4.1
log
@branched from 1.16
@
text
@@


1.16.3.1
log
@branched from 1.16
@
text
@@


1.16.3.1.1.1
log
@branched from 1.16.3.1
@
text
@@


1.16.2.1
log
@branched from 1.16
@
text
@@


1.16.1.1
log
@branched from 1.16
@
text
@@


1.16.1.1.1.1
log
@branched from 1.16.1.1
@
text
@@


1.15
log
@remove banner
@
text
@d42 2
a43 2
        eqtype io_desc = io_desc
        eqtype io_desc_kind = io_desc_kind
d47 2
a48 2
        val compare : (OS.IO.io_desc * OS.IO.io_desc) -> order = fn
        val hash : OS.IO.io_desc -> word = fn
d53 1
a53 1
        val kind : OS.IO.io_desc -> OS.IO.io_desc_kind = fn
d55 1
a55 1
        val pollDesc : OS.IO.io_desc -> OS.IO.poll_desc option = fn
d59 1
a59 1
        val pollToIODesc : OS.IO.poll_desc -> OS.IO.io_desc = fn
@


1.15.3.1
log
@branched from 1.15
@
text
@@


1.15.2.1
log
@branched from 1.15
@
text
@@


1.15.1.1
log
@branched from 1.15
@
text
@@


1.14
log
@updating for commercial version flyer
@
text
@a0 2
commercial version may be purchased directly from Harlequin.

@


1.13
log
@Update wrt change in io_desc type.
@
text
@d1 2
@


1.12
log
@switch off Compiling messages...
@
text
@d42 1
a42 1
        eqtype io_desc = file_desc
@


1.11
log
@updating.
@
text
@a1 52
Compiling basis.toplevel
Compiling basis.string_cvt
Compiling basis.__pre_basis
Compiling basis.__pre_string_cvt
Compiling basis.__string_cvt
Compiling basis.__preinteger
Compiling basis.__preint32
Compiling basis.integer
Compiling basis.__integer
Compiling basis.__position
Compiling basis.char
Compiling basis.__pre_char
Compiling basis.__char
Compiling basis.general
Compiling basis.__general
Compiling basis.math
Compiling basis.__math
Compiling basis.ieeereal
Compiling basis.__ieeereal
Compiling basis.__prereal
Compiling basis.real
Compiling basis.__real
Compiling basis.time
Compiling unix.__time
Compiling basis.os_file_sys
Compiling basis.os_path
Compiling basis.os_process
Compiling basis.os_io
Compiling basis.os
Compiling basis.__preword32
Compiling basis.__preword
Compiling basis.word
Compiling basis.__word32
Compiling unix.unixos
Compiling unix._os
Compiling unix._unixos
Compiling unix.__unixos
Compiling basis.list
Compiling basis.__list
Compiling basis.string
Compiling basis.__string
Compiling unix.__os_path
Compiling basis.__word
Compiling unix._os_file_sys
Compiling unix.__os_file_sys
Compiling basis.__exit
Compiling basis.exit
Compiling basis._os_process
Compiling basis.__os_process
Compiling unix._os_io
Compiling unix.__os_io
Compiling unix.__os
@


1.10
log
@add __pre_char again
@
text
@a1 2
Compiling basis.general
Compiling basis.__general
d15 2
d70 1
a70 1
        val compare : (OS.FileSys.file_id * OS.FileSys.file_id) -> order(hidden) = fn
d88 1
a88 1
        val setTime : (string * time(hidden) MLWorks.Option.option) -> unit = fn
d99 1
a99 1
        val compare : (OS.IO.io_desc * OS.IO.io_desc) -> order(hidden) = fn
d106 2
a107 2
        val poll : (OS.IO.poll_desc list * time(hidden) MLWorks.Option.option) -> OS.IO.poll_info list = fn
        val pollDesc : OS.IO.io_desc -> OS.IO.poll_desc MLWorks.Option.option = fn
d120 1
a120 1
        val ext : string -> string MLWorks.Option.option = fn
d129 1
a129 1
        val joinBaseExt : {base: string, ext: string MLWorks.Option.option} -> string = fn
d135 1
a135 1
        val splitBaseExt : string -> {base: string, ext: string MLWorks.Option.option} = fn
d146 1
a146 1
        val getEnv : string -> string MLWorks.Option.option = fn
d155 1
a155 1
    val syserror : string -> int MLWorks.Option.option = fn
@


1.9
log
@revising
@
text
@d15 1
@


1.8
log
@The list of files loaded has changed due to new Timer implementation.
@
text
@d5 4
a8 3
Compiling basis.stringcvt
Compiling basis.__pre_char
Compiling basis.__stringcvt
@


1.7
log
@Output has changed due to change in OS.IO and TIME signature.
@
text
@d13 9
a38 2
Compiling basis.char
Compiling basis.__char
@


1.6
log
@Update wrt change in OS_PATH signature.
@
text
@d21 1
a27 4
Compiling basis.__preword
Compiling basis.__word
Compiling unix._os_file_sys
Compiling unix.__os_file_sys
d35 3
d86 1
a86 1
        eqtype iodesc_kind = iodesc_kind
a92 1
        val isErr : OS.IO.poll_info -> bool = fn
d95 2
a96 1
        val kind : OS.IO.io_desc -> OS.IO.iodesc_kind = fn
a98 1
        val pollErr : OS.IO.poll_desc -> OS.IO.poll_desc = fn
d101 1
@


1.5
log
@Update wrt filesys -> file_sys change amongst other things.
@
text
@d16 1
a16 1
Compiling basis.path
d31 7
a37 5
Compiling utils.lists
Compiling utils._lists
Compiling utils.__lists
Compiling unix._unixpath
Compiling unix.__path
a105 9
        datatype path_ext =
          EXT of string |
          NOEXT
        datatype path_root =
          ABS of string |
          REL
        val ABS : string -> OS.Path.path_root
        val EXT : string -> OS.Path.path_ext
        val NOEXT : OS.Path.path_ext
d107 3
a109 5
        val REL : OS.Path.path_root
        val addExt : {ext: OS.Path.path_ext, name: string} -> string = fn
        val addLast : {dir: string, last: string} -> string = fn
        val concatPath : (string * string) -> string = fn
        val current : string = "."
d111 3
a113 2
        val explodePath : string -> {arcs: string list, root: OS.Path.path_root} = fn
        val ext : string -> OS.Path.path_ext = fn
d115 1
a115 1
        val implodePath : {arcs: string list, root: OS.Path.path_root} -> string = fn
d117 1
d119 3
a121 4
        val isValidArc : string -> bool = fn
        val isValidPath : string -> bool = fn
        val isValidRoot : string -> bool = fn
        val last : string -> string = fn
d125 5
a129 5
        val name : string -> string = fn
        val parent : string = ".."
        val root : string -> OS.Path.path_root = fn
        val splitExt : string -> {ext: OS.Path.path_ext, name: string} = fn
        val splitLast : string -> {dir: string, last: string} = fn
d145 2
@


1.4
log
@Slight output change
@
text
@d5 8
d15 1
a15 1
Compiling basis.os_filesys
a19 4
Compiling basis.stringcvt
Compiling basis.__pre_char
Compiling basis.__stringcvt
Compiling basis.__preinteger
a20 2
Compiling basis.__preint32
Compiling basis.__preword
d22 1
a22 1
Compiling basis.__word
d27 4
a30 2
Compiling unix._unixfilesys
Compiling unix.__os_filesys
d47 4
d52 5
d59 2
d62 1
d64 1
d66 2
d71 1
d73 2
d76 3
@


1.3
log
@Update wrt changes in OS signature.
And make the answer file correct!
The previous version was incorrect due to a bug in what is now
basis/__exit.sml:terminate
@
text
@a1 3
Compiling basis.word
Compiling basis.__word
Compiling basis.__word8
d12 9
@


1.2
log
@initbasis is now basis.
@
text
@d2 9
a10 1
Compiling basis.filesys
d13 1
d20 1
a20 1
Compiling unix.__filesys
d26 2
a27 2
Compiling main.__exit
Compiling main.exit
d30 2
d37 1
a37 1
        eqtype dirstream = dir
d40 1
d43 1
d49 22
a135 3
after recursive exit, trying atExit case ...
finished.
Should never get here
@


1.1
log
@new unit
@
text
@d2 4
a5 4
Compiling initbasis.filesys
Compiling initbasis.path
Compiling initbasis.os_process
Compiling initbasis.os
d19 2
a20 2
Compiling initbasis._os_process
Compiling initbasis.__os_process
@
