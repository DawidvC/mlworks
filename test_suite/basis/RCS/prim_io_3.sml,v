head	1.8;
access;
symbols
	MLWorks_21c0_1999_03_25:1.8
	MLWorks_20c1_1998_08_20:1.8
	MLWorks_20c0_1998_08_04:1.8
	MLWorks_20b2c2_1998_06_19:1.8
	MLWorks_20b2_Windows_1998_06_12:1.8
	MLWorks_20b1c1_1998_05_07:1.8
	MLWorks_20b0_1998_04_07:1.8
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_20m1_1997_10_23:1.7
	MLWorks_11r1:1.5.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.5.1.1.1.1
	MLWorks_10r3:1.5.1.1.3
	MLWorks_10r2_551:1.5.1.1.2
	MLWorks_11:1.5.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.5.1.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.5.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.5.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.5.1
	MLWorks_BugFix_1997_04_24:1.5
	MLWorks_1_0_r2_Win32_1997_04_11:1.5
	MLWorks_1_0_r2_Unix_1997_04_04:1.5
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.6.1.1
	MLWorks_gui_1996_12_18:1.4.7
	MLWorks_1_0_Win32_1996_12_17:1.4.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.4.1
	MLWorks_1_0_Irix_1996_11_28:1.4.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.5
	MLWorks_1_0_Unix_1996_11_14:1.4.4
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ *  @;


1.8
date	97.11.21.10.46.45;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	97.08.05.09.36.02;	author brucem;	state Exp;
branches;
next	1.6;

1.6
date	97.05.28.12.58.48;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	97.01.15.15.52.43;	author io;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	96.07.18.14.19.36;	author andreww;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1;
next	1.3;

1.3
date	96.06.04.12.15.52;	author andreww;	state Exp;
branches;
next	1.2;

1.2
date	96.05.24.14.18.38;	author andreww;	state Exp;
branches;
next	1.1;

1.1
date	96.05.24.09.46.37;	author andreww;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.38.04;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.29.25;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.50.11;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.14.13.17.35;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	96.11.28.15.28.04;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.22.18.35.23;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.17.18.14.21;	author hope;	state Exp;
branches
	1.4.6.1.1.1;
next	;

1.4.6.1.1.1
date	97.02.24.12.07.16;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.18.10.09.20;	author hope;	state Exp;
branches;
next	;

1.5.1.1
date	97.05.12.11.07.54;	author hope;	state Exp;
branches
	1.5.1.1.1.1
	1.5.1.1.2.1
	1.5.1.1.3.1;
next	;

1.5.1.1.1.1
date	97.07.28.18.49.55;	author daveb;	state Exp;
branches
	1.5.1.1.1.1.1.1;
next	;

1.5.1.1.1.1.1.1
date	97.10.07.12.14.16;	author jkbrook;	state Exp;
branches;
next	;

1.5.1.1.2.1
date	97.09.08.17.41.43;	author daveb;	state Exp;
branches;
next	;

1.5.1.1.3.1
date	97.09.09.14.41.08;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.8
log
@[Bug #30323]
@
text
@(* preliminary Test suite for binprimio functions.
 *

Result: OK

 * $Log: prim_io_3.sml,v $
 *  Revision 1.7  1997/08/05  09:36:02  brucem
 *  [Bug #30004]
 *  Suppress printing structure contents to prevent spurious failure.
 *
 *  Revision 1.6  1997/05/28  12:58:48  jont
 *  [Bug #30090]
 *  Remove uses of MLWorks.IO
 *
 *  Revision 1.5  1997/01/15  15:52:43  io
 *  [Bug #1892]
 *  rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
 *
 *  Revision 1.4  1996/07/18  14:19:36  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
 *  Revision 1.3  1996/06/04  12:15:52  andreww
 *  adding BinPrimIO.
 *  ,
 *
 *  Revision 1.2  1996/05/24  14:18:38  andreww
 *  fix bugs concerning answer file.
 *
 *  Revision 1.1  1996/05/24  09:46:37  andreww
 *  new unit
 *
 * Copyright (c) 1996 Harlequin Ltd.
 *
 *)


local
  open General;
  open BinPrimIO;
in



(* functions that supply input *)

  val number = ref (Word8.fromInt 0);

  fun nextno () = (number:=(Word8.fromInt(1+Word8.toInt(!number)));
                   !number);

  fun makelist x = if x<=0 then [] 
                   else nextno()::(makelist(x-1));

  fun makearray(b,p,s) = if s = 0 then ()
                         else (Word8Array.update(b,p,nextno());
                               makearray(b,p+1,s-1));



(* Bertie, our reader for this test *)

  val r = RD{ name = "Bertrand",
              chunkSize = 5,
              readVec = NONE,
              readArr = SOME (fn {buf=b, i=p, sz=s} =>
                              case s of
                                NONE => 
                                  (makearray(b,p,Word8Array.length b-p);
                                   Word8Array.length b -p)
                              | SOME(si) =>   
                                  if p+si>Word8Array.length b then
                                    raise Fail "array too small"
                                  else (makearray(b,p,si); si)),
              readVecNB = NONE,
              readArrNB=NONE,
              block=NONE,
              avail=fn()=>NONE,
              canInput= SOME(fn ()=>true),
              getPos = SOME(fn ()=> Word8.toInt(!number)),
              setPos = SOME(fn x => (number:=Word8.fromInt x)),
              endPos = SOME(fn ()=> raise Fail "No end of file."),
              verifyPos = NONE,
              close = fn () => (),
              ioDesc = NONE};

  val r'=augmentReader r;
  val s = (fn (RD({setPos=SOME s,...})) => s | _ => raise Div) r';


(* test that synthesized vector read is OK *)

  val  f = (fn RD({readVec=SOME(f),...}) => f
             | RD({readVec=NONE,...}) => raise Div) r';
                                 (* a hack to overcome warning messages
                                  * about unexhaustive matches.  Div
                                  * should never be raised *)

  val y = (s 0; f 11);

  fun compare x = if x = 11 then print"Vector read succeeded.\n"
                  else if Word8.toInt(Word8Vector.sub(y,x))<>(x+1)
                       then print"Vector read failed.\n"
                         else compare (x+1);

  val test1=compare 1;


(* test that synthesized vectorNB read is OK *)


  val f = (fn RD({readVecNB=SOME(f),...}) => f
            | RD({readVecNB=NONE,...}) => raise Div) r';

  val y = (fn SOME(y) => y | NONE => raise Div) (s 0; f 11);

  fun compare x = if x = 11 then print"VectorNB read succeeded.\n"
                  else if Word8.toInt(Word8Vector.sub(y,x))<>(x+1)
                       then print"VectorNB read failed.\n"
                         else compare (x+1);

  val test2=compare 1;


(* test that synthesized arrayNB read is OK *)

  val f = (fn RD({readArrNB=SOME(f),...}) => f
            | RD({readArrNB=NONE,...}) => raise Div) r';

  val buffer = Word8Array.array(10,Word8.fromInt 0);
  val x = (s 0;f{buf = buffer, i=1, sz=SOME(9)});

  fun compare x = if x = 10 then print"ArrayNB read succeeded.\n"
                  else if Word8.toInt(Word8Array.sub(buffer,x))<>x
                       then print"ArrayNB read failed.\n"
                         else compare (x+1);
  val test3=compare 1;



end;
@


1.7
log
@[Bug #30004]
Suppress printing structure contents to prevent spurious failure.
@
text
@d7 4
a35 12

local
  val _ = Shell.Options.set(Shell.Options.ValuePrinter.maximumStrDepth, 0);
in
  val _ =
    (Shell.Build.loadSource "basis.__general";
     Shell.Build.loadSource "basis.__word8";
     Shell.Build.loadSource "basis.__word8_vector";
     Shell.Build.loadSource "basis.__word8_array";
     Shell.Build.loadSource "basis.__bin_prim_io" )
end ;

@


1.6
log
@[Bug #30090]
Remove uses of MLWorks.IO
@
text
@d7 4
d33 11
a43 5
Shell.Build.loadSource "basis.__general";
Shell.Build.loadSource "basis.__word8";
Shell.Build.loadSource "basis.__word8_vector";
Shell.Build.loadSource "basis.__word8_array";
Shell.Build.loadSource "basis.__bin_prim_io";
@


1.5
log
@[Bug #1892]
rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
@
text
@d7 4
d99 1
a99 2
  fun compare x = if x = 11 then MLWorks.IO.output(MLWorks.IO.std_out,
                                  "Vector read succeeded.\n")
d101 1
a101 2
                       then MLWorks.IO.output(MLWorks.IO.std_out,
                                  "Vector read failed.\n")
d115 1
a115 2
  fun compare x = if x = 11 then MLWorks.IO.output(MLWorks.IO.std_out,
                                  "VectorNB read succeeded.\n")
d117 1
a117 2
                       then MLWorks.IO.output(MLWorks.IO.std_out,
                                  "VectorNB read failed.\n")
d131 1
a131 2
  fun compare x = if x = 10 then MLWorks.IO.output(MLWorks.IO.std_out,
                                  "ArrayNB read succeeded.\n")
d133 1
a133 2
                       then MLWorks.IO.output(MLWorks.IO.std_out,
                                  "ArrayNB read failed.\n")
@


1.5.1.1
log
@branched from 1.5
@
text
@a6 4
 *  Revision 1.5  1997/01/15  15:52:43  io
 *  [Bug #1892]
 *  rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
 *
@


1.5.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a6 3
 *  Revision 1.5.1.1  1997/05/12  11:07:54  hope
 *  branched from 1.5
 *
@


1.5.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a6 3
 *  Revision 1.5.1.1  1997/05/12  11:07:54  hope
 *  branched from 1.5
 *
@


1.5.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a6 3
 *  Revision 1.5.1.1  1997/05/12  11:07:54  hope
 *  branched from 1.5
 *
@


1.5.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a6 3
 *  Revision 1.5.1.1.1.1  1997/07/28  18:49:55  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.4
log
@[Bug #1453]
updating to respect the modernisation of the IO library (May 96)
@
text
@d7 4
d27 2
a28 2
Shell.Build.loadSource "basis.__word8vector";
Shell.Build.loadSource "basis.__word8array";
@


1.4.7.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  14:19:36  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.4.6.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  14:19:36  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.4.6.1.1.1
log
@branched from 1.4.6.1
@
text
@a6 3
 *  Revision 1.4.6.1  1996/12/17  18:14:21  hope
 *  branched from 1.4
 *
@


1.4.5.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  14:19:36  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  14:19:36  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@a6 3
 *  Revision 1.4.4.1  1996/11/14  13:17:35  hope
 *  branched from 1.4
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  14:19:36  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  14:19:36  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a6 4
 *  Revision 1.4  1996/07/18  14:19:36  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
@


1.3
log
@adding BinPrimIO.
,
@
text
@d6 5
a10 1
 * $Log: basis:prim_io_3.sml,v $
d68 1
d70 4
a73 3
              getPos = fn ()=> Word8.toInt(!number),
              setPos = fn x => (number:=Word8.fromInt x),
              endPos = fn ()=> raise Fail "No end of file.",
d78 1
a78 1
  val RD({setPos=s,...}) = r';  
@


1.2
log
@fix bugs concerning answer file.
@
text
@d7 3
d21 1
a21 1
Shell.Build.loadSource "system.__primio";
@


1.1
log
@new unit
@
text
@d6 4
a9 1
 * $Log:$
d14 6
a19 5
Shell.File.loadSource "basis/__general";
Shell.File.loadSource "basis/__word8";
Shell.File.loadSource "basis/__word8vector";
Shell.File.loadSource "basis/__word8array";
Shell.File.loadSource "system/__primio";
d74 5
a78 1
  val RD({readVec=SOME(f),...}) = r';
d95 2
a96 1
  val RD({readVecNB=SOME(f),...}) = r';
d98 1
a98 1
  val SOME(y) = (s 0; f 11);
d112 2
a113 1
  val RD({readArrNB=SOME(f),...}) = r';
@
