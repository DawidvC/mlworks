head	1.6;
access;
symbols
	MLWorks_21c0_1999_03_25:1.6
	MLWorks_20c1_1998_08_20:1.6
	MLWorks_20c0_1998_08_04:1.6
	MLWorks_20b2c2_1998_06_19:1.6
	MLWorks_20b2_Windows_1998_06_12:1.6
	MLWorks_20b1c1_1998_05_07:1.6
	MLWorks_20b0_1998_04_07:1.6
	MLWorks_20b0_1998_03_20:1.6
	MLWorks_20m2_1998_02_16:1.5
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.4.1.1.1.1
	MLWorks_10r3:1.4.1.1.3
	MLWorks_10r2_551:1.4.1.1.2
	MLWorks_11:1.4.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.1.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.1
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.3.6.1.1
	MLWorks_gui_1996_12_18:1.3.7
	MLWorks_1_0_Win32_1996_12_17:1.3.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.3.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.3.4.1
	MLWorks_1_0_Irix_1996_11_28:1.3.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.3.5
	MLWorks_1_0_Unix_1996_11_14:1.3.4
	MLWorks_Open_Beta2_1996_10_11:1.3.3
	MLWorks_License_dev:1.3.2
	MLWorks_1_open_beta_1996_09_13:1.3.1
	MLWorks_Open_Beta_1996_08_22:1.3
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.2
	MLWorks_Beta_1996_06_06:1.2
	MLWorks_Beta_1996_06_05:1.2
	MLWorks_Beta_1996_06_03:1.2
	MLWorks_Beta_1996_05_31:1.2
	MLWorks_Beta_1996_05_30:1.2;
locks; strict;
comment	@ *  @;


1.6
date	98.02.18.11.56.01;	author mitchell;	state Exp;
branches;
next	1.5;

1.5
date	97.11.21.10.45.21;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	97.04.01.16.42.32;	author jont;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	96.06.18.15.55.55;	author stephenb;	state Exp;
branches
	1.3.1.1
	1.3.2.1
	1.3.3.1
	1.3.4.1
	1.3.5.1
	1.3.6.1
	1.3.7.1;
next	1.2;

1.2
date	96.05.22.10.19.08;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	96.05.17.11.58.23;	author stephenb;	state Exp;
branches;
next	;

1.3.1.1
date	96.09.13.11.37.42;	author hope;	state Exp;
branches;
next	;

1.3.2.1
date	96.10.07.16.28.58;	author hope;	state Exp;
branches;
next	;

1.3.3.1
date	96.10.17.11.49.46;	author hope;	state Exp;
branches;
next	;

1.3.4.1
date	96.11.14.13.17.10;	author hope;	state Exp;
branches
	1.3.4.1.1.1;
next	;

1.3.4.1.1.1
date	96.11.28.15.27.38;	author hope;	state Exp;
branches;
next	;

1.3.5.1
date	96.11.22.18.34.57;	author hope;	state Exp;
branches;
next	;

1.3.6.1
date	96.12.17.18.13.54;	author hope;	state Exp;
branches
	1.3.6.1.1.1;
next	;

1.3.6.1.1.1
date	97.02.24.12.06.46;	author hope;	state Exp;
branches;
next	;

1.3.7.1
date	96.12.18.10.08.54;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	97.05.12.11.07.26;	author hope;	state Exp;
branches
	1.4.1.1.1.1
	1.4.1.1.2.1
	1.4.1.1.3.1;
next	;

1.4.1.1.1.1
date	97.07.28.18.50.53;	author daveb;	state Exp;
branches
	1.4.1.1.1.1.1.1;
next	;

1.4.1.1.1.1.1.1
date	97.10.07.12.14.46;	author jkbrook;	state Exp;
branches;
next	;

1.4.1.1.2.1
date	97.09.08.17.42.38;	author daveb;	state Exp;
branches;
next	;

1.4.1.1.3.1
date	97.09.09.14.42.04;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.6
log
@[Bug #30349]
Fix test to avoid non-unit sequence warning
@
text
@(* Copyright (c) 1996 Harlequin Ltd.

Result: OK

 *
 * Test OS.FileSys.isDir.  All tests should return true.
 * 
 * Revision Log
 * ------------
 *
 * $Log: os_file_sys_is_dir.sml,v $
 *  Revision 1.5  1997/11/21  10:45:21  daveb
 *  [Bug #30323]
 *
 *  Revision 1.4  1997/04/01  16:42:32  jont
 *  Modify to stop displaying syserror type
 *
 *  Revision 1.3  1996/06/18  15:55:55  stephenb
 *  Change the "" test so that it expects an OS.SysErr exception to be raised.
 *
 *  Revision 1.2  1996/05/22  10:19:08  daveb
 *  Shell.Module renamed to Shell.Build.
 *
 *  Revision 1.1  1996/05/17  11:58:23  stephenb
 *  new unit
 *
 *
 *)


val a = (ignore(OS.FileSys.isDir "no such file"); false) handle OS.SysErr _ => true;

val b = (ignore(OS.FileSys.isDir ""); false) handle OS.SysErr _ => true;  

val c = OS.FileSys.isDir "basis";

val d = OS.FileSys.isDir "README" = false;
@


1.5
log
@[Bug #30323]
@
text
@d12 3
d31 1
a31 1
val a = (OS.FileSys.isDir "no such file"; false) handle OS.SysErr _ => true;
d33 1
a33 1
val b = (OS.FileSys.isDir ""; false) handle OS.SysErr _ => true;  
@


1.4
log
@Modify to stop displaying syserror type
@
text
@d12 3
a26 6
local
  val _ = Shell.Options.set(Shell.Options.ValuePrinter.maximumStrDepth, 0);
in
  val _ =
    Shell.Build.loadSource "system.__os"
end;
@


1.4.1.1
log
@branched from 1.4
@
text
@a11 3
 *  Revision 1.4  1997/04/01  16:42:32  jont
 *  Modify to stop displaying syserror type
 *
@


1.4.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a11 3
 *  Revision 1.4.1.1  1997/05/12  11:07:26  hope
 *  branched from 1.4
 *
@


1.4.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a11 3
 *  Revision 1.4.1.1  1997/05/12  11:07:26  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a11 3
 *  Revision 1.4.1.1  1997/05/12  11:07:26  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a11 3
 *  Revision 1.4.1.1.1.1  1997/07/28  18:50:53  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3
log
@Change the "" test so that it expects an OS.SysErr exception to be raised.
@
text
@d12 3
d24 6
a29 1
Shell.Build.loadSource "system.__os";
@


1.3.7.1
log
@branched from 1.3
@
text
@a11 3
 *  Revision 1.3  1996/06/18  15:55:55  stephenb
 *  Change the "" test so that it expects an OS.SysErr exception to be raised.
 *
@


1.3.6.1
log
@branched from 1.3
@
text
@a11 3
 *  Revision 1.3  1996/06/18  15:55:55  stephenb
 *  Change the "" test so that it expects an OS.SysErr exception to be raised.
 *
@


1.3.6.1.1.1
log
@branched from 1.3.6.1
@
text
@a11 3
 *  Revision 1.3.6.1  1996/12/17  18:13:54  hope
 *  branched from 1.3
 *
@


1.3.5.1
log
@branched from 1.3
@
text
@a11 3
 *  Revision 1.3  1996/06/18  15:55:55  stephenb
 *  Change the "" test so that it expects an OS.SysErr exception to be raised.
 *
@


1.3.4.1
log
@branched from 1.3
@
text
@a11 3
 *  Revision 1.3  1996/06/18  15:55:55  stephenb
 *  Change the "" test so that it expects an OS.SysErr exception to be raised.
 *
@


1.3.4.1.1.1
log
@branched from 1.3.4.1
@
text
@a11 3
 *  Revision 1.3.4.1  1996/11/14  13:17:10  hope
 *  branched from 1.3
 *
@


1.3.3.1
log
@branched from 1.3
@
text
@a11 3
 *  Revision 1.3  1996/06/18  15:55:55  stephenb
 *  Change the "" test so that it expects an OS.SysErr exception to be raised.
 *
@


1.3.2.1
log
@branched from 1.3
@
text
@a11 3
 *  Revision 1.3  1996/06/18  15:55:55  stephenb
 *  Change the "" test so that it expects an OS.SysErr exception to be raised.
 *
@


1.3.1.1
log
@branched from 1.3
@
text
@a11 3
 *  Revision 1.3  1996/06/18  15:55:55  stephenb
 *  Change the "" test so that it expects an OS.SysErr exception to be raised.
 *
@


1.2
log
@Shell.Module renamed to Shell.Build.
@
text
@d11 4
a14 1
 * $Log: basis:os_file_sys_is_dir.sml,v $
d25 1
a25 6

(* The validity of the following is in question
 * Is it considered to be the equivalent of "." under Unix or should
 * it be considered as a non-existent directory?
 *)
val b = OS.FileSys.isDir "";  
@


1.1
log
@new unit
@
text
@d11 4
a14 1
 * $Log$
d18 1
a18 1
Shell.Module.loadSource "system.__os";
@
