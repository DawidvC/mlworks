head	1.7;
access;
symbols
	MLWorks_21c0_1999_03_25:1.7
	MLWorks_20c1_1998_08_20:1.7
	MLWorks_20c0_1998_08_04:1.7
	MLWorks_20b2c2_1998_06_19:1.7
	MLWorks_20b2_Windows_1998_06_12:1.7
	MLWorks_20b1c1_1998_05_07:1.7
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.6
	MLWorks_20m1_1997_10_23:1.5
	MLWorks_11r1:1.4.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.4.1.1.1.1
	MLWorks_10r3:1.4.1.1.3
	MLWorks_10r2_551:1.4.1.1.2
	MLWorks_11:1.4.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.1.1
	MLWorks_20m0_1997_06_20:1.5
	MLWorks_1_0_r2c2_1997_06_14:1.4.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.1
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.6.1.1
	MLWorks_gui_1996_12_18:1.1.7
	MLWorks_1_0_Win32_1996_12_17:1.1.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.4.1
	MLWorks_1_0_Irix_1996_11_28:1.1.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.5
	MLWorks_1_0_Unix_1996_11_14:1.1.4
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1;
locks; strict;
comment	@ *  @;


1.7
date	98.02.18.11.56.01;	author mitchell;	state Exp;
branches;
next	1.6;

1.6
date	97.11.21.10.49.38;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	97.05.28.11.21.33;	author jont;	state Exp;
branches;
next	1.4;

1.4
date	97.04.01.16.47.11;	author jont;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	97.03.13.13.52.19;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	96.11.16.02.06.59;	author io;	state Exp;
branches;
next	1.1;

1.1
date	96.07.31.16.47.10;	author andreww;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1
	1.1.6.1
	1.1.7.1;
next	;

1.1.1.1
date	96.09.13.11.38.37;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.16.30.01;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.50.41;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	96.11.14.13.18.07;	author hope;	state Exp;
branches
	1.1.4.1.1.1;
next	;

1.1.4.1.1.1
date	96.11.28.15.28.36;	author hope;	state Exp;
branches;
next	;

1.1.5.1
date	96.11.22.18.35.53;	author hope;	state Exp;
branches;
next	;

1.1.6.1
date	96.12.17.18.14.52;	author hope;	state Exp;
branches
	1.1.6.1.1.1;
next	;

1.1.6.1.1.1
date	97.02.24.12.07.51;	author hope;	state Exp;
branches;
next	;

1.1.7.1
date	96.12.18.10.09.51;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	97.05.12.11.08.27;	author hope;	state Exp;
branches
	1.4.1.1.1.1
	1.4.1.1.2.1
	1.4.1.1.3.1;
next	;

1.4.1.1.1.1
date	97.07.28.18.49.33;	author daveb;	state Exp;
branches
	1.4.1.1.1.1.1.1;
next	;

1.4.1.1.1.1.1.1
date	97.10.07.12.14.57;	author jkbrook;	state Exp;
branches;
next	;

1.4.1.1.2.1
date	97.09.08.17.41.16;	author daveb;	state Exp;
branches;
next	;

1.4.1.1.3.1
date	97.09.09.14.40.42;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
[Bug 1523]
test file to prove that TextIO.openIn raises IO.Io rather than SysErr
@


1.7
log
@[Bug #30349]
Fix test to avoid non-unit sequence warning
@
text
@(* This tests that the TextIO functor catches system errors as IO errors
 *

Result: OK

 * $Log: text_io.sml,v $
 *  Revision 1.6  1997/11/21  10:49:38  daveb
 *  [Bug #30323]
 *
 *  Revision 1.5  1997/05/28  11:21:33  jont
 *  [Bug #30090]
 *  Remove uses of MLWorks.IO
 *
 *  Revision 1.4  1997/04/01  16:47:11  jont
 *  Modify to stop displaying syserror type
 *
 *  Revision 1.3  1997/03/13  13:52:19  jont
 *  Modify to cope with NT style of error for no such file
 *
 *  Revision 1.2  1996/11/16  02:06:59  io
 *  [Bug #1757]
 *  renamed __ieeereal to __ieee_real
 *          __char{array,vector} to __char_{array,vector}
 *
 *  Revision 1.1  1996/07/31  16:47:10  andreww
 *  new unit
 *  [Bug 1523]
 *  test file to prove that TextIO.openIn raises IO.Io rather than SysErr
 *
 *
 * Copyright (c) 1996 Harlequin Ltd.
 *
 *)


local
  open General
  open TextIO
in


  fun reportOK true = print"test succeeded.\n"
    | reportOK false = print"test failed.\n"


  val _ = closeOut (openOut "123");       (* ensure that file 123 exists *)
  val _ = OS.FileSys.remove "123" handle _ => () (*remove it*)

           (*At this point, the file is guaranteed not to exist *)

  val _ = reportOK ((ignore(TextIO.openIn  "123");false)
                    handle IO.Io{cause = 
                                 OS.SysErr(_ , SOME 2) (* Unix ENOENT *)
                                 ,...} => true
                         | IO.Io{cause =
                                 OS.SysErr(_ , SOME 4) (* Win32 version *)
                                 ,...} => true)

  (*tests to see if openOut and openAppend errors are correctly parcelled
    will have to wait until I can find a way to set permissions on files
    that can set them to be read only *)


end
@


1.6
log
@[Bug #30323]
@
text
@d7 3
d51 1
a51 1
  val _ = reportOK ((TextIO.openIn  "123";false)
@


1.5
log
@[Bug #30090]
Remove uses of MLWorks.IO
@
text
@d7 4
a30 16

local
  val _ = Shell.Options.set(Shell.Options.ValuePrinter.maximumStrDepth, 0);
in
  val _ =
    (Shell.Build.loadSource "basis.__general";
     Shell.Build.loadSource "basis.__char";
     Shell.Build.loadSource "basis.__char_vector";
     Shell.Build.loadSource "basis.__char_array";
     Shell.Build.loadSource "system.__os_prim_io";
     Shell.Build.loadSource "basis.__bin_prim_io";
     Shell.Build.loadSource "basis.__text_prim_io";
     Shell.Build.loadSource "basis.__text_io";
     Shell.Build.loadSource "basis.__io";
     Shell.Build.loadSource "system.__os")
end;
@


1.4
log
@Modify to stop displaying syserror type
@
text
@d7 3
d51 2
a52 4
  fun reportOK true = MLWorks.IO.output(MLWorks.IO.std_out,
                                        "test succeeded.\n")
    | reportOK false = MLWorks.IO.output(MLWorks.IO.std_out,
                                         "test failed.\n")
@


1.4.1.1
log
@branched from 1.4
@
text
@a6 3
 *  Revision 1.4  1997/04/01  16:47:11  jont
 *  Modify to stop displaying syserror type
 *
@


1.4.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a6 3
 *  Revision 1.4.1.1  1997/05/12  11:08:27  hope
 *  branched from 1.4
 *
@


1.4.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a6 3
 *  Revision 1.4.1.1  1997/05/12  11:08:27  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a6 3
 *  Revision 1.4.1.1  1997/05/12  11:08:27  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a6 3
 *  Revision 1.4.1.1.1.1  1997/07/28  18:49:33  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3
log
@Modify to cope with NT style of error for no such file
@
text
@d7 3
d25 15
a39 10
Shell.Build.loadSource "basis.__general";
Shell.Build.loadSource "basis.__char";
Shell.Build.loadSource "basis.__char_vector";
Shell.Build.loadSource "basis.__char_array";
Shell.Build.loadSource "system.__os_prim_io";
Shell.Build.loadSource "basis.__bin_prim_io";
Shell.Build.loadSource "basis.__text_prim_io";
Shell.Build.loadSource "basis.__text_io";
Shell.Build.loadSource "basis.__io";
Shell.Build.loadSource "system.__os";
@


1.2
log
@[Bug #1757]
renamed __ieeereal to __ieee_real
        __char{array,vector} to __char_{array,vector}
@
text
@d7 5
d53 5
a57 3
                                 OS.SysErr("No such file or directory",_)
                                 ,...}
                    => true)
a64 3



@


1.1
log
@new unit
[Bug 1523]
test file to prove that TextIO.openIn raises IO.Io rather than SysErr
@
text
@d6 6
a11 1
 * $Log:,v $
d19 2
a20 2
Shell.Build.loadSource "basis.__charvector";
Shell.Build.loadSource "basis.__chararray";
@


1.1.7.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: text_io.sml,v $
 *  Revision 1.1  1996/07/31  16:47:10  andreww
 *  new unit
 *  [Bug 1523]
 *  test file to prove that TextIO.openIn raises IO.Io rather than SysErr
 *
@


1.1.6.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: text_io.sml,v $
 *  Revision 1.1  1996/07/31  16:47:10  andreww
 *  new unit
 *  [Bug 1523]
 *  test file to prove that TextIO.openIn raises IO.Io rather than SysErr
 *
@


1.1.6.1.1.1
log
@branched from 1.1.6.1
@
text
@a6 3
 *  Revision 1.1.6.1  1996/12/17  18:14:52  hope
 *  branched from 1.1
 *
@


1.1.5.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: text_io.sml,v $
 *  Revision 1.1  1996/07/31  16:47:10  andreww
 *  new unit
 *  [Bug 1523]
 *  test file to prove that TextIO.openIn raises IO.Io rather than SysErr
 *
@


1.1.4.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: text_io.sml,v $
 *  Revision 1.1  1996/07/31  16:47:10  andreww
 *  new unit
 *  [Bug 1523]
 *  test file to prove that TextIO.openIn raises IO.Io rather than SysErr
 *
@


1.1.4.1.1.1
log
@branched from 1.1.4.1
@
text
@a6 3
 *  Revision 1.1.4.1  1996/11/14  13:18:07  hope
 *  branched from 1.1
 *
@


1.1.3.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: text_io.sml,v $
 *  Revision 1.1  1996/07/31  16:47:10  andreww
 *  new unit
 *  [Bug 1523]
 *  test file to prove that TextIO.openIn raises IO.Io rather than SysErr
 *
@


1.1.2.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: text_io.sml,v $
 *  Revision 1.1  1996/07/31  16:47:10  andreww
 *  new unit
 *  [Bug 1523]
 *  test file to prove that TextIO.openIn raises IO.Io rather than SysErr
 *
@


1.1.1.1
log
@branched from 1.1
@
text
@d6 1
a6 6
 * $Log: text_io.sml,v $
 *  Revision 1.1  1996/07/31  16:47:10  andreww
 *  new unit
 *  [Bug 1523]
 *  test file to prove that TextIO.openIn raises IO.Io rather than SysErr
 *
@
