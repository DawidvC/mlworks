head	1.9;
access;
symbols
	MLWorks_21c0_1999_03_25:1.9
	MLWorks_20c1_1998_08_20:1.9
	MLWorks_20c0_1998_08_04:1.9
	MLWorks_20b2c2_1998_06_19:1.9
	MLWorks_20b2_Windows_1998_06_12:1.9
	MLWorks_20b1c1_1998_05_07:1.9
	MLWorks_20b0_1998_04_07:1.8
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_20m1_1997_10_23:1.7
	MLWorks_11r1:1.5.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.5.1.1.1.1
	MLWorks_10r3:1.5.1.1.3
	MLWorks_10r2_551:1.5.1.1.2
	MLWorks_11:1.5.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.5.1.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.5.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.5.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.5.1
	MLWorks_BugFix_1997_04_24:1.5
	MLWorks_1_0_r2_Win32_1997_04_11:1.5
	MLWorks_1_0_r2_Unix_1997_04_04:1.5
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.3.1.1
	MLWorks_gui_1996_12_18:1.4.4
	MLWorks_1_0_Win32_1996_12_17:1.4.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.1.1
	MLWorks_1_0_Irix_1996_11_28:1.4.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.2
	MLWorks_1_0_Unix_1996_11_14:1.4.1
	MLWorks_Open_Beta2_1996_10_11:1.1.3
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1
	MLWorks_Beta_1996_07_02:1.1
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1
	MLWorks_Beta_1996_06_03:1.1
	MLWorks_Beta_1996_05_31:1.1
	MLWorks_Beta_1996_05_30:1.1;
locks; strict;
comment	@ *  @;


1.9
date	98.04.21.09.27.58;	author mitchell;	state Exp;
branches;
next	1.8;

1.8
date	97.11.21.15.01.36;	author daveb;	state Exp;
branches;
next	1.7;

1.7
date	97.09.19.13.51.10;	author daveb;	state Exp;
branches;
next	1.6;

1.6
date	97.05.28.15.56.18;	author matthew;	state Exp;
branches;
next	1.5;

1.5
date	97.03.06.13.41.32;	author matthew;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	96.11.06.13.37.21;	author andreww;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1;
next	1.3;

1.3
date	96.11.06.12.05.17;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	96.10.22.13.20.54;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	96.05.22.12.26.08;	author matthew;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	96.09.13.11.38.27;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.16.29.49;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.10.17.11.50.30;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	96.11.14.13.17.54;	author hope;	state Exp;
branches
	1.4.1.1.1.1;
next	;

1.4.1.1.1.1
date	96.11.28.15.28.25;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.11.22.18.35.43;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.12.17.18.14.42;	author hope;	state Exp;
branches
	1.4.3.1.1.1;
next	;

1.4.3.1.1.1
date	97.02.24.12.07.39;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.12.18.10.09.40;	author hope;	state Exp;
branches;
next	;

1.5.1.1
date	97.05.12.11.08.17;	author hope;	state Exp;
branches
	1.5.1.1.1.1
	1.5.1.1.2.1
	1.5.1.1.3.1;
next	;

1.5.1.1.1.1
date	97.07.28.18.50.16;	author daveb;	state Exp;
branches
	1.5.1.1.1.1.1.1;
next	;

1.5.1.1.1.1.1.1
date	97.10.07.12.14.28;	author jkbrook;	state Exp;
branches;
next	;

1.5.1.1.2.1
date	97.09.08.17.42.06;	author daveb;	state Exp;
branches;
next	;

1.5.1.1.3.1
date	97.09.09.14.41.32;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
New test
@


1.9
log
@[Bug #30336]
Fix tests to agree with revised spec of fmt and toString
@
text
@(*  ==== Testing ====
 *
 *  Result: OK
 *
 *
 *  Revision Log
 *  ------------
 *  $Log: reals.sml,v $
 *  Revision 1.8  1997/11/21  15:01:36  daveb
 *  [Bug #30323]
 *
 *  Revision 1.7  1997/09/19  13:51:10  daveb
 *  [Bug #30214]
 *  Added tests for negative zero.
 *
 *  Revision 1.6  1997/05/28  15:56:18  matthew
 *  Updating
 *
 *  Revision 1.5  1997/03/06  13:41:32  matthew
 *  Change to reading functions
 *
 *  Revision 1.4  1996/11/06  13:37:21  andreww
 *  [Bug #1711]
 *  reals no longer eqtype
 *
 *  Revision 1.3  1996/11/06  12:05:17  matthew
 *  [Bug #1728]
 *  __integer becomes __int
 *
 *  Revision 1.2  1996/10/22  13:20:54  jont
 *  Remove references to toplevel
 *
 *  Revision 1.1  1996/05/22  12:26:08  matthew
 *  new unit
 *  New test
 *
*)

(* test/real.sml -- here we test only the `exotic' operations
   PS 1995-03-24 
   modified for MLWorks Fri May 17 11:05:53 1996
   *)


infix 1 seq
fun e1 seq e2 = e2;
fun say s = print s;
fun check b = if b then "OK" else "WRONG";
fun check' f = (if f () then "OK" else "WRONG") handle _ => "EXN";

fun range (from, to) p = 
    let open Int
    in
	(from > to) orelse (p from) andalso (range (from+1, to) p)
    end;

fun checkrange bounds = check o range bounds;

local 
    open Real
    infix ?=
in	

val test1 = check(sign ~57.0 = ~1 andalso sign 99.0 = 1 andalso sign 0.0 = 0);
val test2 = check(sameSign(~255.0, ~256.0) andalso sameSign(255.0, 256.0) 
		  andalso sameSign(0.0, 0.0));
val test3 = check(sign 1E~300 = 1 andalso sign ~1E~300 = ~1
		  andalso sign 1E300 = 1 andalso sign ~1E300 = ~1);

local 
    val args = [0.0, 99.0, ~5.0, 1.1, ~1.1, 1.9, ~1.9, 2.5, ~2.5, 
		1000001.4999, ~1000001.4999];
in
val test4 = check(map ceil args  
		   = [0, 99, ~5, 2, ~1, 2, ~1, 3, ~2, 1000002, ~1000001]);
val test5 = check(map floor args 
		   = [0, 99, ~5, 1, ~2, 1, ~2, 2, ~3, 1000001, ~1000002]);
val test6 = check(map trunc args 
		   = [0, 99, ~5, 1, ~1, 1, ~1, 2, ~2, 1000001, ~1000001]);
val test7 = check(map round args 
		   = [0, 99, ~5, 1, ~1, 2, ~2, 2, ~2, 1000001, ~1000001]);
end

val test8 = check(0.0 ?= real 0 andalso 2.0 ?= real 2 andalso ~2.0 ?= real ~2);

fun chk(s, r) = 
    let val eps = abs r * 1E~10 
    in 
	check'(fn _ => 
	       case fromString s of
		   SOME res => abs(res - r) <= eps
                 | NONE     => false)
    end

val test9 = 
    List.map chk[("0", 0.0),
		 ("156", 156.0),
		 ("+156", 156.0), 
		 ("~156", ~156.0), 
		 ("-156", ~156.0), 
		 ("156.25", 156.25), 
		 ("+156.25", 156.25), 
		 ("~156.25", ~156.25), 
		 ("-156.25", ~156.25),
		 (".25", 0.25),
		 ("+.25", 0.25),
		 ("~.25", ~0.25),
		  ("-.25", ~0.25),

		  ("156E024", 156E024),
		  ("+156E024", 156E024),
		  ("~156E024", ~156E024),
		  ("-156E024", ~156E024),
		  ("156.25E024", 156.25E024),
		  ("+156.25E024", 156.25E024),
		  ("~156.25E024", ~156.25E024),
		  ("-156.25E024", ~156.25E024),
		  (".25E024", 0.25E024),
		  ("+.25E024", 0.25E024),
		  ("~.25E024", ~0.25E024),
		  ("-.25E024", ~0.25E024),

		  ("156E+024", 156E024),
		  ("+156E+024", 156E024),
		  ("~156E+024", ~156E024),
		  ("-156E+024", ~156E024),
		  ("156.25E+024", 156.25E024),
		  ("+156.25E+024", 156.25E024),
		  ("~156.25E+024", ~156.25E024),
		  ("-156.25E+024", ~156.25E024),
		  (".25E+024", 0.25E024),
		  ("+.25E+024", 0.25E024),
		  ("~.25E+024", ~0.25E024),
		  ("-.25E+024", ~0.25E024),

		  ("156E~024", 156E~024),
		  ("+156E~024", 156E~024),
		  ("~156E~024", ~156E~024),
		  ("-156E~024", ~156E~024),
		  ("156.25E~024", 156.25E~024),
		  ("+156.25E~024", 156.25E~024),
		  ("~156.25E~024", ~156.25E~024),
		  ("-156.25E~024", ~156.25E~024),
		  (".25E~024", 0.25E~024),
		  ("+.25E~024", 0.25E~024),
		  ("~.25E~024", ~0.25E~024),
		  ("-.25E~024", ~0.25E~024),

		  ("156E-024", 156E~024),
		  ("+156E-024", 156E~024),
		  ("~156E-024", ~156E~024),
		  ("-156E-024", ~156E~024),
		  ("156.25E-024", 156.25E~024),
		  ("+156.25E-024", 156.25E~024),
		  ("~156.25E-024", ~156.25E~024),
		  ("-156.25E-024", ~156.25E~024),
		  (".25E-024", 0.25E~024),
		  ("+.25E-024", 0.25E~024),
		  ("~.25E-024", ~0.25E~024),
		  ("-.25E-024", ~0.25E~024),

		  ("156e024", 156E024),
		  ("+156e024", 156E024),
		  ("~156e024", ~156E024),
		  ("-156e024", ~156E024),
		  ("156.25e024", 156.25E024),
		  ("+156.25e024", 156.25E024),
		  ("~156.25e024", ~156.25E024),
		  ("-156.25e024", ~156.25E024),
		  (".25e024", 0.25E024),
		  ("+.25e024", 0.25E024),
		  ("~.25e024", ~0.25E024),
		  ("-.25e024", ~0.25E024),

		  ("156e+024", 156E024),
		  ("+156e+024", 156E024),
		  ("~156e+024", ~156E024),
		  ("-156e+024", ~156E024),
		  ("156.25e+024", 156.25E024),
		  ("+156.25e+024", 156.25E024),
		  ("~156.25e+024", ~156.25E024),
		  ("-156.25e+024", ~156.25E024),
		  (".25e+024", 0.25E024),
		  ("+.25e+024", 0.25E024),
		  ("~.25e+024", ~0.25E024),
		  ("-.25e+024", ~0.25E024),

		  ("156e~024", 156E~024),
		  ("+156e~024", 156E~024),
		  ("~156e~024", ~156E~024),
		  ("-156e~024", ~156E~024),
		  ("156.25e~024", 156.25E~024),
		  ("+156.25e~024", 156.25E~024),
		  ("~156.25e~024", ~156.25E~024),
		  ("-156.25e~024", ~156.25E~024),
		  (".25e~024", 0.25E~024),
		  ("+.25e~024", 0.25E~024),
		  ("~.25e~024", ~0.25E~024),
		  ("-.25e~024", ~0.25E~024),

		  ("156e-024", 156E~024),
		  ("+156e-024", 156E~024),
		  ("~156e-024", ~156E~024),
		  ("-156e-024", ~156E~024),
		  ("156.25e-024", 156.25E~024),
		  ("+156.25e-024", 156.25E~024),
		  ("~156.25e-024", ~156.25E~024),
		  ("-156.25e-024", ~156.25E~024),
		  (".25e-024", 0.25E~024),
		  ("+.25e-024", 0.25E~024),
		  ("~.25e-024", ~0.25E~024),
		  ("-.25e-024", ~0.25E~024)];
val test10 = 
    List.map (fn s => case fromString s of NONE => "OK" | _ => "WRONG") 
             ["e10", 
              "E10", 
	      "+e10",
              "+E10",
	      "~e10",
              "~E10", 
	      "-e10",
              "-E10",
              "",
              ".",
              ".E10"];

val test11 =
    List.map check
      [Real.toString ~0.0  = "~0",
       Real.toString 0.0  = "0",
       Real.toString (~(0.0))  = "~0",
       Real.toString (0.0 - 0.0)  = "0"]


end
@


1.8
log
@[Bug #30323]
@
text
@d9 3
d229 4
a232 4
      [Real.toString ~0.0  = "~0.0",
       Real.toString 0.0  = "0.0",
       Real.toString (~(0.0))  = "~0.0",
       Real.toString (0.0 - 0.0)  = "0.0"]
@


1.7
log
@[Bug #30214]
Added tests for negative zero.
@
text
@d9 4
d40 2
a41 2
Shell.Options.set (Shell.Options.ValuePrinter.maximumStrDepth,0);
Shell.Build.loadSource "basis.__int";
a54 3

Shell.Build.loadSource "basis.__real";
Shell.Build.loadSource "basis.__list";
@


1.6
log
@Updating
@
text
@d3 1
a3 1
    Result: OK
d9 3
d222 9
@


1.5
log
@Change to reading functions
@
text
@d9 3
d33 1
a34 3
val output = MLWorks.IO.output
val std_out = MLWorks.IO.std_out
val flush_out = MLWorks.IO.flush_out
d37 1
a37 1
fun say s = (output(std_out, s); flush_out std_out);
@


1.5.1.1
log
@branched from 1.5
@
text
@a8 3
 *  Revision 1.5  1997/03/06  13:41:32  matthew
 *  Change to reading functions
 *
@


1.5.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a8 3
 *  Revision 1.5.1.1  1997/05/12  11:08:17  hope
 *  branched from 1.5
 *
@


1.5.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a8 3
 *  Revision 1.5.1.1  1997/05/12  11:08:17  hope
 *  branched from 1.5
 *
@


1.5.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a8 3
 *  Revision 1.5.1.1  1997/05/12  11:08:17  hope
 *  branched from 1.5
 *
@


1.5.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a8 3
 *  Revision 1.5.1.1.1.1  1997/07/28  18:50:16  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.4
log
@[Bug #1711]
reals no longer eqtype
@
text
@d9 4
d207 1
a207 2
             ["20.E", 
	      "e10", 
@


1.4.4.1
log
@branched from 1.4
@
text
@a8 4
 *  Revision 1.4  1996/11/06  13:37:21  andreww
 *  [Bug #1711]
 *  reals no longer eqtype
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a8 4
 *  Revision 1.4  1996/11/06  13:37:21  andreww
 *  [Bug #1711]
 *  reals no longer eqtype
 *
@


1.4.3.1.1.1
log
@branched from 1.4.3.1
@
text
@a8 3
 *  Revision 1.4.3.1  1996/12/17  18:14:42  hope
 *  branched from 1.4
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a8 4
 *  Revision 1.4  1996/11/06  13:37:21  andreww
 *  [Bug #1711]
 *  reals no longer eqtype
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a8 4
 *  Revision 1.4  1996/11/06  13:37:21  andreww
 *  [Bug #1711]
 *  reals no longer eqtype
 *
@


1.4.1.1.1.1
log
@branched from 1.4.1.1
@
text
@a8 3
 *  Revision 1.4.1.1  1996/11/14  13:17:54  hope
 *  branched from 1.4
 *
@


1.3
log
@[Bug #1728]
__integer becomes __int
@
text
@d9 4
d49 1
d72 1
a72 1
val test8 = check(0.0 = real 0 andalso 2.0 = real 2 andalso ~2.0 = real ~2);
@


1.2
log
@Remove references to toplevel
@
text
@d9 3
d22 1
a22 1
Shell.Build.loadSource "basis.__integer";
@


1.1
log
@new unit
New test
@
text
@d8 5
a12 1
 *  $Log: basis:char.sml,v $
a18 1
Shell.Build.loadSource "basis.toplevel";
@


1.1.3.1
log
@branched from 1.1
@
text
@d8 1
a8 5
 *  $Log: reals.sml,v $
 *  Revision 1.1  1996/05/22  12:26:08  matthew
 *  new unit
 *  New test
 *
@


1.1.2.1
log
@branched from 1.1
@
text
@d8 1
a8 5
 *  $Log: reals.sml,v $
 *  Revision 1.1  1996/05/22  12:26:08  matthew
 *  new unit
 *  New test
 *
@


1.1.1.1
log
@branched from 1.1
@
text
@d8 1
a8 5
 *  $Log: reals.sml,v $
 *  Revision 1.1  1996/05/22  12:26:08  matthew
 *  new unit
 *  New test
 *
@
