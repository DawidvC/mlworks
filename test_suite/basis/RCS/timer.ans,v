head	1.4;
access;
symbols
	MLWorks_21c0_1999_03_25:1.3
	MLWorks_20c1_1998_08_20:1.3
	MLWorks_20c0_1998_08_04:1.3
	MLWorks_20b2c2_1998_06_19:1.3
	MLWorks_20b2_Windows_1998_06_12:1.3
	MLWorks_20b1c1_1998_05_07:1.3
	MLWorks_20b0_1998_04_07:1.3
	MLWorks_20b0_1998_03_20:1.3
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.1
	MLWorks_11r1:1.1.6.1.1.1.1
	MLWorks_11c0_1997_09_09:1.1.6.1.1.1
	MLWorks_10r3:1.1.6.1.3
	MLWorks_10r2_551:1.1.6.1.2
	MLWorks_11:1.1.6.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.6.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c2_1997_06_14:1.1.6.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.6.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.6
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.4.1.1
	MLWorks_gui_1996_12_18:1.1.5
	MLWorks_1_0_Win32_1996_12_17:1.1.4
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.2.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.2.1
	MLWorks_1_0_Irix_1996_11_28:1.1.2.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.3
	MLWorks_1_0_Unix_1996_11_14:1.1.2
	MLWorks_Open_Beta2_1996_10_11:1.1.1;
locks; strict;
comment	@# @;


1.4
date	99.05.12.14.59.09;	author daveb;	state Exp;
branches;
next	1.3;

1.3
date	97.11.25.19.26.30;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	97.11.19.20.53.31;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	96.10.10.11.30.27;	author stephenb;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1
	1.1.6.1;
next	;

1.1.1.1
date	96.10.17.11.49.45;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.11.14.13.17.08;	author hope;	state Exp;
branches
	1.1.2.1.1.1;
next	;

1.1.2.1.1.1
date	96.11.28.15.27.37;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.11.22.18.34.55;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	96.12.17.18.13.53;	author hope;	state Exp;
branches
	1.1.4.1.1.1;
next	;

1.1.4.1.1.1
date	97.02.24.12.06.44;	author hope;	state Exp;
branches;
next	;

1.1.5.1
date	96.12.18.10.08.52;	author hope;	state Exp;
branches;
next	;

1.1.6.1
date	97.05.12.11.07.23;	author hope;	state Exp;
branches
	1.1.6.1.1.1
	1.1.6.1.2.1
	1.1.6.1.3.1;
next	;

1.1.6.1.1.1
date	97.07.28.18.49.32;	author daveb;	state Exp;
branches
	1.1.6.1.1.1.1.1;
next	;

1.1.6.1.1.1.1.1
date	97.10.07.12.14.55;	author jkbrook;	state Exp;
branches;
next	;

1.1.6.1.2.1
date	97.09.08.17.41.15;	author daveb;	state Exp;
branches;
next	;

1.1.6.1.3.1
date	97.09.09.14.40.42;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.4
log
@[Bug #190554]
The signature has changed.
@
text
@val a : bool = true
val b : bool = true
val c : bool = true
val d : bool = true
val e : bool = true
val f : bool = true
val g : bool = true
val h : bool = true
val i : bool = true
val j : bool = true
val k : bool = true
val l : bool = true
val m : bool = true
@


1.3
log
@[Bug #30323]
@
text
@d11 3
@


1.2
log
@[Bug #30085]
Add tests for totalRealTimer and totalCPUTimer
@
text
@a0 5
val it : unit = ()
val it : unit = ()
structure Time = struct ... end
val it : unit = ()
structure Timer = struct ... end
@


1.1
log
@new unit
@
text
@a1 26
structure Time =
  struct
    eqtype time = time
    val + : (Time.time * Time.time) -> Time.time = fn
    val - : (Time.time * Time.time) -> Time.time = fn
    val < : (Time.time * Time.time) -> bool = fn
    val <= : (Time.time * Time.time) -> bool = fn
    val > : (Time.time * Time.time) -> bool = fn
    val >= : (Time.time * Time.time) -> bool = fn
    exception Time
    val compare : (Time.time * Time.time) -> order = fn
    val fmt : int -> Time.time -> string = fn
    val fromMicroseconds : int -> Time.time = fn
    val fromMilliseconds : int -> Time.time = fn
    val fromReal : real -> Time.time = fn
    val fromSeconds : int -> Time.time = fn
    val fromString : string -> Time.time option = fn
    val now : unit -> Time.time = fn
    val scan : ('a -> (char * 'a) option) -> 'a -> (Time.time * 'a) option = fn
    val toMicroseconds : Time.time -> int = fn
    val toMilliseconds : Time.time -> int = fn
    val toReal : Time.time -> real = fn
    val toSeconds : Time.time -> int = fn
    val toString : Time.time -> string = fn
    val zeroTime : Time.time = TIME (0, 0, 0)
  end
d3 3
a5 9
structure Timer =
  struct
    eqtype cpu_timer = cpu_timer
    eqtype real_timer = real_timer
    val checkCPUTimer : Timer.cpu_timer -> {gc: Time.time, sys: Time.time, usr: Time.time} = fn
    val checkRealTimer : Timer.real_timer -> Time.time = fn
    val startCPUTimer : unit -> Timer.cpu_timer = fn
    val startRealTimer : unit -> Timer.real_timer = fn
  end
d11 5
@


1.1.6.1
log
@branched from 1.1
@
text
@@


1.1.6.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.1.6.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.1.6.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.1.6.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.1.5.1
log
@branched from 1.1
@
text
@@


1.1.4.1
log
@branched from 1.1
@
text
@@


1.1.4.1.1.1
log
@branched from 1.1.4.1
@
text
@@


1.1.3.1
log
@branched from 1.1
@
text
@@


1.1.2.1
log
@branched from 1.1
@
text
@@


1.1.2.1.1.1
log
@branched from 1.1.2.1
@
text
@@


1.1.1.1
log
@branched from 1.1
@
text
@@
