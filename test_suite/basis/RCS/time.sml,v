head	1.15;
access;
symbols
	MLWorks_21c0_1999_03_25:1.15
	MLWorks_20c1_1998_08_20:1.13
	MLWorks_20c0_1998_08_04:1.13
	MLWorks_20b2c2_1998_06_19:1.13
	MLWorks_20b2_Windows_1998_06_12:1.13
	MLWorks_20b1c1_1998_05_07:1.13
	MLWorks_20b0_1998_04_07:1.13
	MLWorks_20b0_1998_03_20:1.13
	MLWorks_20m2_1998_02_16:1.12
	MLWorks_20m1_1997_10_23:1.11
	MLWorks_11r1:1.10.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.10.1.1.1.1
	MLWorks_10r3:1.10.1.1.3
	MLWorks_10r2_551:1.10.1.1.2
	MLWorks_11:1.10.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.10.1.1
	MLWorks_20m0_1997_06_20:1.11
	MLWorks_1_0_r2c2_1997_06_14:1.10.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.10.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.10.1
	MLWorks_BugFix_1997_04_24:1.10
	MLWorks_1_0_r2_Win32_1997_04_11:1.10
	MLWorks_1_0_r2_Unix_1997_04_04:1.10
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.9.3.1.1
	MLWorks_gui_1996_12_18:1.9.4
	MLWorks_1_0_Win32_1996_12_17:1.9.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.9.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.9.1.1
	MLWorks_1_0_Irix_1996_11_28:1.9.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.9.2
	MLWorks_1_0_Unix_1996_11_14:1.9.1
	MLWorks_Open_Beta2_1996_10_11:1.8.2
	MLWorks_License_dev:1.8.1
	MLWorks_1_open_beta_1996_09_13:1.5.1
	MLWorks_Open_Beta_1996_08_22:1.5
	MLWorks_Beta_1996_07_02:1.3
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3;
locks; strict;
comment	@ *  @;


1.15
date	98.10.07.15.58.52;	author jont;	state Exp;
branches;
next	1.14;

1.14
date	98.10.02.14.36.29;	author jont;	state Exp;
branches;
next	1.13;

1.13
date	98.02.18.11.56.01;	author mitchell;	state Exp;
branches;
next	1.12;

1.12
date	97.11.21.10.50.11;	author daveb;	state Exp;
branches;
next	1.11;

1.11
date	97.06.06.11.05.06;	author jont;	state Exp;
branches;
next	1.10;

1.10
date	97.03.06.13.44.49;	author matthew;	state Exp;
branches
	1.10.1.1;
next	1.9;

1.9
date	96.11.05.13.45.17;	author andreww;	state Exp;
branches
	1.9.1.1
	1.9.2.1
	1.9.3.1
	1.9.4.1;
next	1.8;

1.8
date	96.10.02.09.01.38;	author stephenb;	state Exp;
branches
	1.8.1.1
	1.8.2.1;
next	1.7;

1.7
date	96.10.02.08.42.23;	author stephenb;	state Exp;
branches;
next	1.6;

1.6
date	96.10.01.12.40.01;	author stephenb;	state Exp;
branches;
next	1.5;

1.5
date	96.07.29.14.35.14;	author stephenb;	state Exp;
branches
	1.5.1.1;
next	1.4;

1.4
date	96.07.29.14.13.49;	author stephenb;	state Exp;
branches;
next	1.3;

1.3
date	96.05.29.10.58.30;	author stephenb;	state Exp;
branches;
next	1.2;

1.2
date	96.05.22.10.19.29;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	96.05.08.14.08.12;	author stephenb;	state Exp;
branches;
next	;

1.5.1.1
date	96.09.13.11.37.32;	author hope;	state Exp;
branches;
next	;

1.8.1.1
date	96.10.07.16.28.50;	author hope;	state Exp;
branches;
next	;

1.8.2.1
date	96.10.17.11.49.40;	author hope;	state Exp;
branches;
next	;

1.9.1.1
date	96.11.14.13.17.03;	author hope;	state Exp;
branches
	1.9.1.1.1.1;
next	;

1.9.1.1.1.1
date	96.11.28.15.27.29;	author hope;	state Exp;
branches;
next	;

1.9.2.1
date	96.11.22.18.34.51;	author hope;	state Exp;
branches;
next	;

1.9.3.1
date	96.12.17.18.13.48;	author hope;	state Exp;
branches
	1.9.3.1.1.1;
next	;

1.9.3.1.1.1
date	97.02.24.12.06.38;	author hope;	state Exp;
branches;
next	;

1.9.4.1
date	96.12.18.10.08.47;	author hope;	state Exp;
branches;
next	;

1.10.1.1
date	97.05.12.11.07.18;	author hope;	state Exp;
branches
	1.10.1.1.1.1
	1.10.1.1.2.1
	1.10.1.1.3.1;
next	;

1.10.1.1.1.1
date	97.07.28.18.49.45;	author daveb;	state Exp;
branches
	1.10.1.1.1.1.1.1;
next	;

1.10.1.1.1.1.1.1
date	97.10.07.12.15.05;	author jkbrook;	state Exp;
branches;
next	;

1.10.1.1.2.1
date	97.09.08.17.41.29;	author daveb;	state Exp;
branches;
next	;

1.10.1.1.3.1
date	97.09.09.14.40.57;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.15
log
@[Bug #30487]
Handle Time.Time in toSeconds test
@
text
@(* Copyright (c) 1996 Harlequin Ltd.

Result: OK

 *
 * Test Time.  Each test result should be true.
 *
 * Revision Log
 * ------------
 *
 * $Log: time.sml,v $
 *  Revision 1.14  1998/10/02  14:36:29  jont
 *  [Bug #30487]
 *  Use 2**31 to overflow Time.toSeconds instead of 2**29
 *
 *  Revision 1.13  1998/02/18  11:56:01  mitchell
 *  [Bug #30349]
 *  Fix test to avoid non-unit sequence warning
 *
 *  Revision 1.12  1997/11/21  10:50:11  daveb
 *  [Bug #30323]
 *
 *  Revision 1.11  1997/06/06  11:05:06  jont
 *  Add compilation of __real to get comparison on reals
 *
 *  Revision 1.10  1997/03/06  13:44:49  matthew
 *  Time.fmt has changed
 *
 *  Revision 1.9  1996/11/05  13:45:17  andreww
 *  [Bug #1711]
 *  real no longer eqtype
 *
 *  Revision 1.8  1996/10/02  09:01:38  stephenb
 *  [Bug #1629]
 *  Add some Time.+ (Time.now (), X) tests.
 *
 *  Revision 1.7  1996/10/02  08:42:23  stephenb
 *  Add some tests for Time.> and Time.>=
 *
 *  Revision 1.5  1996/07/29  14:35:14  stephenb
 *  Fix a typo.
 *
 *  Revision 1.4  1996/07/29  14:13:49  stephenb
 *  [Bug #1506]
 *  Add a case to test Time.-(x,y) when usecs(x) < usecs(y).
 *  Specifically added tests: sub_[bcd].
 *
 *  Revision 1.3  1996/05/29  10:58:30  stephenb
 *  Add more tests.
 *
 *  Revision 1.2  1996/05/22  10:19:29  daveb
 *  Shell.Module renamed to Shell.Build.
 *
 *  Revision 1.1  1996/05/08  14:08:12  stephenb
 *  new unit
 *
 *)


val fromReal_a = Time.fromReal 0.0 = Time.zeroTime;
val fromReal_b = (ignore(Time.fromReal ~1.0); false) handle Time => true;

val toReal_a = Real.==(Time.toReal Time.zeroTime, 0.0);

val fromSeconds_a = Time.fromSeconds 0 = Time.zeroTime;
val fromSeconds_b = (ignore(Time.fromSeconds ~1); false) handle Time => true;

val toSeconds_a = Time.toSeconds Time.zeroTime = 0;
val toSeconds_b = (ignore(Time.toSeconds (Time.fromReal 2147483648.0)); false) handle Overflow => true | Time.Time => true;


val fromMilliseconds_a = Time.fromMilliseconds 0 = Time.zeroTime;
val fromMilliseconds_b = (ignore(Time.fromMilliseconds ~1); false) handle Time => true;


val toMilliseconds_a = Time.toMilliseconds Time.zeroTime = 0;


val fromMicroseconds_a = Time.fromMicroseconds 0 = Time.zeroTime;
val fromMicroseconds_b = (ignore(Time.fromMicroseconds ~1); false) handle Time => true;


val toMicroseconds_a = Time.toMicroseconds Time.zeroTime = 0;


val plus_a = Time.fromSeconds 10 = Time.+ (Time.fromSeconds 5, Time.fromSeconds 5);


local
  val now = Time.now ()
in
  val plus_b = now = Time.+ (now, Time.zeroTime);
end



val sub_a = Time.zeroTime = Time.- (Time.fromSeconds 5, Time.fromSeconds 5);

val sub_b = Time.-(Time.fromReal 19.5, Time.fromReal 18.6) = Time.fromReal 0.9;

val sub_c = (ignore(Time.-(Time.fromSeconds 5, Time.fromSeconds 10)); false) handle Time => true;

val sub_d = (ignore(Time.-(Time.fromReal 19.5, Time.fromReal 19.6)); false) handle Time => true;


val leq_a = Time.<= (Time.zeroTime, Time.zeroTime);
val leq_b = Time.<= (Time.zeroTime, Time.fromSeconds 10);
val leq_c = Time.<= (Time.fromSeconds 9, Time.fromSeconds 10);
val leq_d = Time.<= (valOf (Time.fromString "844170614.164"), valOf (Time.fromString "844170614.589"));
val leq_e = Time.<= (valOf (Time.fromString "844170614.589"), valOf (Time.fromString "844170614.589"));


val geq_a = Time.>= (Time.zeroTime, Time.zeroTime);
val geq_b = Time.>= (Time.fromSeconds 10, Time.zeroTime);
val geq_c = Time.>= (Time.fromSeconds 10, Time.fromSeconds 9);
val geq_e = Time.>= (valOf (Time.fromString "844170614.164"), valOf (Time.fromString "844170614.164"));
val geq_d = Time.>= (valOf (Time.fromString "844170614.589"), valOf (Time.fromString "844170614.164"));


val lt_a = not (Time.< (Time.zeroTime, Time.zeroTime));
val lt_b = Time.< (Time.fromSeconds 9, Time.fromSeconds 10);
val lt_c = not (Time.< (Time.fromSeconds 10, Time.fromSeconds 10));
val lt_d = not (Time.< (Time.fromSeconds 10, Time.fromSeconds 9));
val lt_e = Time.< (valOf (Time.fromString "844170614.164"), valOf (Time.fromString "844170614.589"));


val gt_a = not (Time.> (Time.zeroTime, Time.zeroTime));
val gt_b = Time.> (Time.fromSeconds 10, Time.fromSeconds 9);
val gt_c = not (Time.> (Time.fromSeconds 10, Time.fromSeconds 10));
val gt_d = not (Time.> (Time.fromSeconds 9, Time.fromSeconds 10));
val gt_e = Time.> (valOf (Time.fromString "844170614.589"), valOf (Time.fromString "844170614.164"));


val toString_a = Time.toString (Time.fromReal 1.1234) = "1.123";
val toString_b = Time.toString (Time.fromReal 1.1235) = "1.123";
val toString_c = Time.toString (Time.fromReal 1.1236) = "1.124";
val toString_d = Time.toString (Time.fromReal 0.0) = "0.000";
val toString_e = Time.toString (Time.fromReal 1.1) = "1.100";

val fmt_a = Time.fmt 3 (Time.fromReal 1.1234) = "1.123";
val fmt_b = Time.fmt 3 (Time.fromReal 1.1235) = "1.123";
val fmt_c = Time.fmt 3 (Time.fromReal 1.1236) = "1.124";
val fmt_d = Time.fmt 3 (Time.fromReal 0.0) = "0.000";
val fmt_e = Time.fmt 3 (Time.fromReal 1.1) = "1.100";
val fmt_f = Time.fmt 0 (Time.fromReal 1.1234) = "1";
val fmt_g = Time.fmt 3 (Time.fromReal 1.8) = "1.800";
val fmt_h = Time.fmt 0 (Time.fromReal 1.8) = "2";
val fmt_h = Time.fmt ~1 (Time.fromReal 1.8) = "2";

local
  fun invalid NONE = true
  |   invalid _    = false
  fun eq (NONE, ans) = false
  |   eq (SOME t, ans) = (Time.toString t) = ans
in
  val fromString_a = eq (Time.fromString "1", "1.000");
  val fromString_b = eq (Time.fromString "1.1234", "1.123");
  val fromString_c = invalid (Time.fromString "~1.1234");
  val fromString_d = eq (Time.fromString "  1", "1.000");
  val fromString_e = eq (Time.fromString "1.", "1.000");
  val fromString_f = eq (Time.fromString " \n\t189.125125crap", "189.125");
  val fromString_g = invalid (Time.fromString ".1234");
end
@


1.14
log
@[Bug #30487]
Use 2**31 to overflow Time.toSeconds instead of 2**29
@
text
@d12 4
d69 1
a69 1
val toSeconds_b = (ignore(Time.toSeconds (Time.fromReal 2147483648.0)); false) handle Overflow => true;
@


1.13
log
@[Bug #30349]
Fix test to avoid non-unit sequence warning
@
text
@d12 4
d65 1
a65 1
val toSeconds_b = (ignore(Time.toSeconds (Time.fromReal 536870912.0)); false) handle Overflow => true;
@


1.12
log
@[Bug #30323]
@
text
@d12 3
d53 1
a53 1
val fromReal_b = (Time.fromReal ~1.0; false) handle Time => true;
d58 1
a58 1
val fromSeconds_b = (Time.fromSeconds ~1; false) handle Time => true;
d61 1
a61 1
val toSeconds_b = (Time.toSeconds (Time.fromReal 536870912.0); false) handle Overflow => true;
d65 1
a65 1
val fromMilliseconds_b = (Time.fromMilliseconds ~1; false) handle Time => true;
d72 1
a72 1
val fromMicroseconds_b = (Time.fromMicroseconds ~1; false) handle Time => true;
d93 1
a93 1
val sub_c = (Time.-(Time.fromSeconds 5, Time.fromSeconds 10); false) handle Time => true;
d95 1
a95 1
val sub_d = (Time.-(Time.fromReal 19.5, Time.fromReal 19.6); false) handle Time => true;
@


1.11
log
@Add compilation of __real to get comparison on reals
@
text
@d12 3
a47 3
Shell.Options.set(Shell.Options.ValuePrinter.maximumStrDepth,0);
Shell.Build.loadSource "system.__time";
Shell.Build.loadSource "basis.__real";
@


1.10
log
@Time.fmt has changed
@
text
@d12 3
d45 1
a45 1
Shell.Options.set(Shell.Options.Language.oldDefinition,true);
d47 1
d52 1
a52 1
val toReal_a = Time.toReal Time.zeroTime = 0.0;
@


1.10.1.1
log
@branched from 1.10
@
text
@a11 3
 *  Revision 1.10  1997/03/06  13:44:49  matthew
 *  Time.fmt has changed
 *
@


1.10.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a11 3
 *  Revision 1.10.1.1  1997/05/12  11:07:18  hope
 *  branched from 1.10
 *
@


1.10.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a11 3
 *  Revision 1.10.1.1  1997/05/12  11:07:18  hope
 *  branched from 1.10
 *
@


1.10.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a11 3
 *  Revision 1.10.1.1  1997/05/12  11:07:18  hope
 *  branched from 1.10
 *
@


1.10.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a11 3
 *  Revision 1.10.1.1.1.1  1997/07/28  18:49:45  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.9
log
@[Bug #1711]
real no longer eqtype
@
text
@d12 4
d130 1
a130 1
val fmt_f = Time.fmt 0 (Time.fromReal 1.1234) = "1.0";
d132 2
a133 2
val fmt_h = Time.fmt 0 (Time.fromReal 1.8) = "2.0";
val fmt_h = Time.fmt ~1 (Time.fromReal 1.8) = "2.0";
@


1.9.4.1
log
@branched from 1.9
@
text
@a11 4
 *  Revision 1.9  1996/11/05  13:45:17  andreww
 *  [Bug #1711]
 *  real no longer eqtype
 *
@


1.9.3.1
log
@branched from 1.9
@
text
@a11 4
 *  Revision 1.9  1996/11/05  13:45:17  andreww
 *  [Bug #1711]
 *  real no longer eqtype
 *
@


1.9.3.1.1.1
log
@branched from 1.9.3.1
@
text
@a11 3
 *  Revision 1.9.3.1  1996/12/17  18:13:48  hope
 *  branched from 1.9
 *
@


1.9.2.1
log
@branched from 1.9
@
text
@a11 4
 *  Revision 1.9  1996/11/05  13:45:17  andreww
 *  [Bug #1711]
 *  real no longer eqtype
 *
@


1.9.1.1
log
@branched from 1.9
@
text
@a11 4
 *  Revision 1.9  1996/11/05  13:45:17  andreww
 *  [Bug #1711]
 *  real no longer eqtype
 *
@


1.9.1.1.1.1
log
@branched from 1.9.1.1
@
text
@a11 3
 *  Revision 1.9.1.1  1996/11/14  13:17:03  hope
 *  branched from 1.9
 *
@


1.8
log
@[Bug #1629]
Add some Time.+ (Time.now (), X) tests.
@
text
@d12 4
d38 1
@


1.8.2.1
log
@branched from 1.8
@
text
@a11 4
 *  Revision 1.8  1996/10/02  09:01:38  stephenb
 *  [Bug #1629]
 *  Add some Time.+ (Time.now (), X) tests.
 *
@


1.8.1.1
log
@branched from 1.8
@
text
@a11 4
 *  Revision 1.8  1996/10/02  09:01:38  stephenb
 *  [Bug #1629]
 *  Add some Time.+ (Time.now (), X) tests.
 *
@


1.7
log
@Add some tests for Time.> and Time.>=
@
text
@d12 3
a33 1
Shell.Build.loadSource "basis.toplevel";
d63 9
@


1.6
log
@[Bug #1627]
Added lt tests.
@
text
@d6 1
a6 2
 * Test Time.  Only does limited testing at the moment.  Currently each
 * result should be true.
d74 9
d90 7
@


1.5
log
@Fix a typo.
@
text
@d13 3
d75 7
@


1.5.1.1
log
@branched from 1.5
@
text
@a12 3
 *  Revision 1.5  1996/07/29  14:35:14  stephenb
 *  Fix a typo.
 *
@


1.4
log
@[Bug #1506]
Add a case to test Time.-(x,y) when usecs(x) < usecs(y).
Specifically added tests: sub_[bcd].
@
text
@d13 5
d64 1
a64 1
val sub_c = (Time.-(Time.fromSeconds 5 Time.fromSeconds 10); false) handle Time => true;
@


1.3
log
@Add more tests.
@
text
@d12 4
a15 1
 * $Log: basis:time.sml,v $
d56 6
@


1.2
log
@Shell.Module renamed to Shell.Build.
@
text
@d13 3
d21 1
d58 32
@


1.1
log
@new unit
@
text
@d12 4
a15 1
 * $Log$
d18 1
a18 1
Shell.Module.loadSource "system.__time";
@
