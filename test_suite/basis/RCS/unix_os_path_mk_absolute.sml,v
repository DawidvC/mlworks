head	1.1;
access;
symbols
	MLWorks_Beta_1996_06_07:1.1
	MLWorks_Beta_1996_06_06:1.1
	MLWorks_Beta_1996_06_05:1.1
	MLWorks_Beta_1996_06_03:1.1
	MLWorks_Beta_1996_05_31:1.1
	MLWorks_Beta_1996_05_30:1.1;
locks; strict;
comment	@ *  @;


1.1
date	96.05.22.16.18.29;	author stephenb;	state Exp;
branches;
next	;


desc
@new unit
@


1.1
log
@new unit
@
text
@(* Copyright (c) 1996 Harlequin Ltd.

Result: OK

 *
 * Test OS.Path.mkAbsolute.  All tests should return true.
 * 
 * Revision Log
 * ------------
 *
 * $Log$
 *)

Shell.Build.loadSource "unix.__os";

open OS.Path;

val a = mkAbsolute ("/a/b", "/c/d") = "/a/b";

val b = mkAbsolute ("/", "/c/d") = "/";

val c = mkAbsolute ("a/b", "/c/d") = "/c/d/a/b";

val d = (mkAbsolute ("a", "c/d"); false) handle Path => true;

val e = (mkAbsolute ("/a", "c/d"); false) handle Path => true;

val f = (mkAbsolute ("/foo", "bar"); false) handle Path => true;

val g = mkAbsolute ("~foo", "/bar") = "/bar/~foo";

val h = mkAbsolute ("/foo", "/bar") = "/foo";
@
