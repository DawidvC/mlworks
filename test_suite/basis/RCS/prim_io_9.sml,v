head	1.10;
access;
symbols
	MLWorks_20b1c1_1998_05_07:1.9
	MLWorks_20b0_1998_04_07:1.7
	MLWorks_20b0_1998_03_20:1.7
	MLWorks_20m2_1998_02_16:1.7
	MLWorks_20m1_1997_10_23:1.6
	MLWorks_11r1:1.6.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.6.1.1.1.1
	MLWorks_10r3:1.6.1.1.3
	MLWorks_10r2_551:1.6.1.1.2
	MLWorks_11:1.6.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.1.1
	MLWorks_20m0_1997_06_20:1.6
	MLWorks_1_0_r2c2_1997_06_14:1.6.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.1
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.6.1.1
	MLWorks_gui_1996_12_18:1.4.7
	MLWorks_1_0_Win32_1996_12_17:1.4.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.4.1
	MLWorks_1_0_Irix_1996_11_28:1.4.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.5
	MLWorks_1_0_Unix_1996_11_14:1.4.4
	MLWorks_Open_Beta2_1996_10_11:1.4.3
	MLWorks_License_dev:1.4.2
	MLWorks_1_open_beta_1996_09_13:1.4.1
	MLWorks_Open_Beta_1996_08_22:1.4
	MLWorks_Beta_1996_07_02:1.1;
locks; strict;
comment	@ *  @;


1.10
date	98.05.19.11.49.54;	author mitchell;	state Exp;
branches;
next	1.9;

1.9
date	98.05.07.11.09.43;	author mitchell;	state Exp;
branches;
next	1.8;

1.8
date	98.05.04.17.15.37;	author mitchell;	state Exp;
branches;
next	1.7;

1.7
date	97.12.22.14.39.18;	author jont;	state Exp;
branches;
next	1.6;

1.6
date	97.04.01.11.04.34;	author jont;	state Exp;
branches
	1.6.1.1;
next	1.5;

1.5
date	97.01.15.15.53.28;	author io;	state Exp;
branches;
next	1.4;

1.4
date	96.08.14.12.12.48;	author io;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1
	1.4.6.1
	1.4.7.1;
next	1.3;

1.3
date	96.07.18.14.38.40;	author andreww;	state Exp;
branches;
next	1.2;

1.2
date	96.07.04.18.31.01;	author andreww;	state Exp;
branches;
next	1.1;

1.1
date	96.06.04.09.45.45;	author andreww;	state Exp;
branches;
next	;

1.4.1.1
date	96.09.13.11.38.18;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.07.16.29.38;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.10.17.11.50.22;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.11.14.13.17.46;	author hope;	state Exp;
branches
	1.4.4.1.1.1;
next	;

1.4.4.1.1.1
date	96.11.28.15.28.16;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	96.11.22.18.35.35;	author hope;	state Exp;
branches;
next	;

1.4.6.1
date	96.12.17.18.14.33;	author hope;	state Exp;
branches
	1.4.6.1.1.1;
next	;

1.4.6.1.1.1
date	97.02.24.12.07.29;	author hope;	state Exp;
branches;
next	;

1.4.7.1
date	96.12.18.10.09.31;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	97.05.12.11.08.04;	author hope;	state Exp;
branches
	1.6.1.1.1.1
	1.6.1.1.2.1
	1.6.1.1.3.1;
next	;

1.6.1.1.1.1
date	97.07.28.18.50.06;	author daveb;	state Exp;
branches
	1.6.1.1.1.1.1.1;
next	;

1.6.1.1.1.1.1.1
date	97.10.07.12.14.22;	author jkbrook;	state Exp;
branches;
next	;

1.6.1.1.2.1
date	97.09.08.17.41.56;	author daveb;	state Exp;
branches;
next	;

1.6.1.1.3.1
date	97.09.09.14.41.20;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Test that conversions from text to bin and back work.
@


1.10
log
@[Bug #50071]
Modify test to use forceCompileAll
@
text
@(* This tests the behaviour of the translateIn and translateOut functions.
 *

Result: OK

 * $Log: prim_io_9.sml,v $
 *  Revision 1.9  1998/05/07  11:09:43  mitchell
 *  [Bug #50071]
 *  Modify test to perform a Shell.Project.touchAllSources before compiling to force a recompile
 *
 *  Revision 1.8  1998/05/04  17:15:37  mitchell
 *  [Bug #50071]
 *  Replace uses of Shell.Build.loadSource by Shell.Project
 *
 *  Revision 1.7  1997/12/22  14:39:18  jont
 *  [Bug #30323]
 *  Remove uses of Shell.Build.loadSource and tidy up
 *
 *  Revision 1.6  1997/04/01  11:04:34  jont
 *  Remove ref ptr from result as it's system dependent
 *
 *  Revision 1.5  1997/01/15  15:53:28  io
 *  [Bug #1892]
 *  rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
 *
 *  Revision 1.4  1996/08/14  12:12:48  io
 *  switch off Compiling messages...
 *
 *  Revision 1.3  1996/07/18  14:38:40  andreww
 *  [Bug #1453]
 *  updating to respect the modernisation of the IO library (May 96)
 *
 *  Revision 1.2  1996/07/04  18:31:01  andreww
 *  Updating with respect to changes in __primio.sml:
 *  alterning name PrimIO to OSPrimIO.
 *
 *  Revision 1.1  1996/06/04  09:45:45  andreww
 *  new unit
 *  Test that conversions from text to bin and back work.
 *
 *
 * Copyright (c) 1996 Harlequin Ltd.
 *
 *)


let
  val _ = Shell.Options.set(Shell.Options.ValuePrinter.maximumStrDepth, 0);
  val dir = OS.FileSys.getDir()
  fun setTargets l = (app Shell.Project.setTargetDetails l; Shell.Project.setTargets l)
in
  Shell.Project.newProject();
  Shell.Project.setSourcePath([dir^"/../src/system", dir^"/../src/basis"]);
  setTargets ["__io.sml", "__bin_prim_io.sml", "__os_prim_io.sml", "__text_io.sml", "__bin_io.sml",
              "__text_stream_io.sml", "__bin_stream_io.sml", "__text_prim_io.sml", "__word8_vector.sml"];
  Shell.Project.forceCompileAll();
  Shell.Project.loadAll()
end;

local
  val pos = ref 0;
  val comm_medium = ref (Word8Vector.fromList [])
in

(* functions that supply reader input *)

(*Arthur is going to read what Amy writes: our test function. *)

  val w = BinPrimIO.WR{ name = "Amy",
              chunkSize = 5,
              writeVec = SOME (fn {buf=b,i=p,sz=s} => (
                                 comm_medium:=Word8Vector.extract(b,p,s);
                                 case s of
                                   NONE => Word8Vector.length b -p
                                 | SOME(si) => si)),
              writeArr = NONE,
              writeVecNB = NONE,
              writeArrNB=NONE,
              block=NONE,
              canOutput= SOME(fn ()=>true),
              getPos = SOME(fn ()=> 0),
              setPos = SOME(fn x => ()),
              endPos = SOME(fn ()=> ~1),
              verifyPos = NONE,
              close = fn () => (),
              ioDesc = NONE};


  val r = BinPrimIO.RD{ 
              name = "Arthur",
              chunkSize = 5,
              readVec = 
                SOME (fn (x:int) =>
                 let val y = if x+(!pos)>Word8Vector.length(!comm_medium)
                               then Word8Vector.length(!comm_medium)-(!pos)
                             else x
                     val r = Word8Vector.extract(!comm_medium,!pos,SOME y)
                 in
                   (pos:=(!pos)+y; r)
                 end),
              readArr = NONE,
              readVecNB = NONE,
              readArrNB=NONE,
              block=SOME(fn ()=>()),
              canInput= SOME(fn ()=>true),
              avail=fn()=>NONE,
              getPos = SOME(fn ()=> 1),
              setPos = SOME(fn x => ()),
              endPos = SOME(fn ()=> raise Fail "No end of file."),
              verifyPos = NONE,
              close = fn () => (),
              ioDesc = NONE};


(* build text functions from the binary ones *)

   val tr = OSPrimIO.translateIn(r);
   val tw = OSPrimIO.translateOut(w);
   val outfn  = (fn TextPrimIO.WR({writeVec = NONE,...}) => raise Div
                  | TextPrimIO.WR({writeVec = SOME f,...}) => f) tw;
   val infn  = (fn TextPrimIO.RD({readVec = NONE,...}) => raise Div
                  | TextPrimIO.RD({readVec = SOME f,...}) => f) tr;

   val teststring =
       "Mary had a little lamb,\n a lobster and some prunes.\nYo!";

   
   val test_in = (ignore(outfn {buf=teststring, i=0, sz=NONE});
               infn 100);

   val result = (teststring= test_in);
end




















@


1.9
log
@[Bug #50071]
Modify test to perform a Shell.Project.touchAllSources before compiling to force a recompile
@
text
@d7 4
d56 1
a56 2
  Shell.Project.touchAllSources();
  Shell.Project.compileAll();
@


1.8
log
@[Bug #50071]
Replace uses of Shell.Build.loadSource by Shell.Project
@
text
@d7 4
d46 1
d50 3
a52 2
  Shell.Project.setTargetDetails "__os_prim_io.sml";
  Shell.Project.setTargets ["__os_prim_io.sml"];
d130 20
@


1.7
log
@[Bug #30323]
Remove uses of Shell.Build.loadSource and tidy up
@
text
@d7 4
d39 1
a39 1
local
d41 1
d43 6
a48 1
  val _ = Shell.Build.loadSource "system.__os_prim_io"
d119 1
a119 1
   val test_in = (outfn {buf=teststring, i=0, sz=NONE};
@


1.6
log
@Remove ref ptr from result as it's system dependent
@
text
@d1 1
a1 1
(* This tests the behaviour of the tranlateIn and translateOut functions.
d7 3
d38 1
a38 8
  val _ =
    (Shell.Build.loadSource "basis.__general";
     Shell.Build.loadSource "basis.__word8";
     Shell.Build.loadSource "basis.__word8_vector";
     Shell.Build.loadSource "basis.__word8_array";
     Shell.Build.loadSource "system.__os_prim_io";
     Shell.Build.loadSource "basis.__bin_prim_io.sml";
     Shell.Build.loadSource "basis.__text_prim_io.sml")
a41 1
  open General;
d43 1
a47 2
   val comm_medium = ref (Word8Vector.fromList [])

a113 3



@


1.6.1.1
log
@branched from 1.6
@
text
@a6 3
 *  Revision 1.6  1997/04/01  11:04:34  jont
 *  Remove ref ptr from result as it's system dependent
 *
@


1.6.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a6 3
 *  Revision 1.6.1.1  1997/05/12  11:08:04  hope
 *  branched from 1.6
 *
@


1.6.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a6 3
 *  Revision 1.6.1.1  1997/05/12  11:08:04  hope
 *  branched from 1.6
 *
@


1.6.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a6 3
 *  Revision 1.6.1.1  1997/05/12  11:08:04  hope
 *  branched from 1.6
 *
@


1.6.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a6 3
 *  Revision 1.6.1.1.1.1  1997/07/28  18:50:06  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.5
log
@[Bug #1892]
rename __word{8,16,32}{array,vector} to __word{8,16,32}_{array,vector}
@
text
@d7 4
a30 7
Shell.Build.loadSource "basis.__general";
Shell.Build.loadSource "basis.__word8";
Shell.Build.loadSource "basis.__word8_vector";
Shell.Build.loadSource "basis.__word8_array";
Shell.Build.loadSource "system.__os_prim_io";
Shell.Build.loadSource "basis.__bin_prim_io.sml";
Shell.Build.loadSource "basis.__text_prim_io.sml";
d32 12
d47 1
a52 2
   val pos = ref 0;

@


1.4
log
@switch off Compiling messages...
@
text
@d7 3
d29 2
a30 2
Shell.Build.loadSource "basis.__word8vector";
Shell.Build.loadSource "basis.__word8array";
@


1.4.7.1
log
@branched from 1.4
@
text
@a6 3
 *  Revision 1.4  1996/08/14  12:12:48  io
 *  switch off Compiling messages...
 *
@


1.4.6.1
log
@branched from 1.4
@
text
@a6 3
 *  Revision 1.4  1996/08/14  12:12:48  io
 *  switch off Compiling messages...
 *
@


1.4.6.1.1.1
log
@branched from 1.4.6.1
@
text
@a6 3
 *  Revision 1.4.6.1  1996/12/17  18:14:33  hope
 *  branched from 1.4
 *
@


1.4.5.1
log
@branched from 1.4
@
text
@a6 3
 *  Revision 1.4  1996/08/14  12:12:48  io
 *  switch off Compiling messages...
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a6 3
 *  Revision 1.4  1996/08/14  12:12:48  io
 *  switch off Compiling messages...
 *
@


1.4.4.1.1.1
log
@branched from 1.4.4.1
@
text
@a6 3
 *  Revision 1.4.4.1  1996/11/14  13:17:46  hope
 *  branched from 1.4
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a6 3
 *  Revision 1.4  1996/08/14  12:12:48  io
 *  switch off Compiling messages...
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a6 3
 *  Revision 1.4  1996/08/14  12:12:48  io
 *  switch off Compiling messages...
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a6 3
 *  Revision 1.4  1996/08/14  12:12:48  io
 *  switch off Compiling messages...
 *
@


1.3
log
@[Bug #1453]
updating to respect the modernisation of the IO library (May 96)
@
text
@d7 4
d39 1
a39 1
   val comm_medium = ref "";
@


1.2
log
@Updating with respect to changes in __primio.sml:
alterning name PrimIO to OSPrimIO.
@
text
@d7 4
d24 1
a24 1
Shell.Build.loadSource "system.__primio";
d53 4
a56 3
              getPos = fn ()=> 0,
              setPos = fn x => (),
              endPos = fn ()=> ~1,
d78 5
a82 3
              getPos = fn ()=> 1,
              setPos = fn x => (),
              endPos = fn ()=> raise Fail "No end of file.",
@


1.1
log
@new unit
Test that conversions from text to bin and back work.
@
text
@d6 5
a10 1
 * $Log:$
d82 2
a83 2
   val tr = PrimIO.translateIn(r);
   val tw = PrimIO.translateOut(w);
@
