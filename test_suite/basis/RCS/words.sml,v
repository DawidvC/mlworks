head	1.10;
access;
symbols
	MLWorks_21c0_1999_03_25:1.10
	MLWorks_20c1_1998_08_20:1.10
	MLWorks_20c0_1998_08_04:1.10
	MLWorks_20b2c2_1998_06_19:1.10
	MLWorks_20b2_Windows_1998_06_12:1.10
	MLWorks_20b1c1_1998_05_07:1.10
	MLWorks_20b0_1998_04_07:1.10
	MLWorks_20b0_1998_03_20:1.10
	MLWorks_20m2_1998_02_16:1.9
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.6.5.1.1.1.1
	MLWorks_11c0_1997_09_09:1.6.5.1.1.1
	MLWorks_10r3:1.6.5.1.3
	MLWorks_10r2_551:1.6.5.1.2
	MLWorks_11:1.6.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.6.5.1
	MLWorks_20m0_1997_06_20:1.7
	MLWorks_1_0_r2c2_1997_06_14:1.6.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.6.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.6.5
	MLWorks_BugFix_1997_04_24:1.6
	MLWorks_1_0_r2_Win32_1997_04_11:1.6
	MLWorks_1_0_r2_Unix_1997_04_04:1.6
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.6.3.1.1
	MLWorks_gui_1996_12_18:1.6.4
	MLWorks_1_0_Win32_1996_12_17:1.6.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.6.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.6.1.1
	MLWorks_1_0_Irix_1996_11_28:1.6.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.6.2
	MLWorks_1_0_Unix_1996_11_14:1.6.1
	MLWorks_Open_Beta2_1996_10_11:1.5.3
	MLWorks_License_dev:1.5.2
	MLWorks_1_open_beta_1996_09_13:1.5.1
	MLWorks_Open_Beta_1996_08_22:1.5
	MLWorks_Beta_1996_07_02:1.5
	MLWorks_Beta_1996_06_07:1.5
	MLWorks_Beta_1996_06_06:1.5
	MLWorks_Beta_1996_06_05:1.5
	MLWorks_Beta_1996_06_03:1.4
	MLWorks_Beta_1996_05_31:1.4
	MLWorks_Beta_1996_05_30:1.4;
locks; strict;
comment	@ *  @;


1.10
date	98.02.18.11.56.02;	author mitchell;	state Exp;
branches;
next	1.9;

1.9
date	97.11.21.10.51.53;	author daveb;	state Exp;
branches;
next	1.8;

1.8
date	97.08.05.10.01.47;	author brucem;	state Exp;
branches;
next	1.7;

1.7
date	97.05.27.13.27.18;	author jkbrook;	state Exp;
branches;
next	1.6;

1.6
date	96.10.22.13.23.53;	author jont;	state Exp;
branches
	1.6.1.1
	1.6.2.1
	1.6.3.1
	1.6.4.1
	1.6.5.1;
next	1.5;

1.5
date	96.06.04.19.51.27;	author io;	state Exp;
branches
	1.5.1.1
	1.5.2.1
	1.5.3.1;
next	1.4;

1.4
date	96.05.23.11.41.37;	author matthew;	state Exp;
branches;
next	1.3;

1.3
date	96.05.21.16.04.18;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	96.05.20.10.08.51;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	96.05.13.13.49.42;	author matthew;	state Exp;
branches;
next	;

1.5.1.1
date	96.09.13.11.38.48;	author hope;	state Exp;
branches;
next	;

1.5.2.1
date	96.10.07.16.30.16;	author hope;	state Exp;
branches;
next	;

1.5.3.1
date	96.10.17.11.50.51;	author hope;	state Exp;
branches;
next	;

1.6.1.1
date	96.11.14.13.18.17;	author hope;	state Exp;
branches
	1.6.1.1.1.1;
next	;

1.6.1.1.1.1
date	96.11.28.15.28.48;	author hope;	state Exp;
branches;
next	;

1.6.2.1
date	96.11.22.18.36.03;	author hope;	state Exp;
branches;
next	;

1.6.3.1
date	96.12.17.18.15.03;	author hope;	state Exp;
branches
	1.6.3.1.1.1;
next	;

1.6.3.1.1.1
date	97.02.24.12.08.02;	author hope;	state Exp;
branches;
next	;

1.6.4.1
date	96.12.18.10.10.01;	author hope;	state Exp;
branches;
next	;

1.6.5.1
date	97.05.12.11.08.43;	author hope;	state Exp;
branches
	1.6.5.1.1.1
	1.6.5.1.2.1
	1.6.5.1.3.1;
next	;

1.6.5.1.1.1
date	97.07.28.18.50.45;	author daveb;	state Exp;
branches
	1.6.5.1.1.1.1.1;
next	;

1.6.5.1.1.1.1.1
date	97.10.07.12.15.33;	author jkbrook;	state Exp;
branches;
next	;

1.6.5.1.2.1
date	97.09.08.17.42.31;	author daveb;	state Exp;
branches;
next	;

1.6.5.1.3.1
date	97.09.09.14.41.57;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
Tests for word operations
@


1.10
log
@[Bug #30349]
Fix test to avoid non-unit sequence warning
@
text
@(* Copyright (c) 1996 Harlequin Ltd.

Result: OK

 *
 * This should just print a barrage of trues
 *
 * Revision Log
 * ------------
 *
 * $Log: words.sml,v $
 *  Revision 1.9  1997/11/21  10:51:53  daveb
 *  [Bug #30323]
 *
 *  Revision 1.8  1997/08/05  10:01:47  brucem
 *  [Bug #30004]
 *  Remove references to General.valOf.
 *
 *  Revision 1.7  1997/05/27  13:27:18  jkbrook
 *  [Bug #1749]
 *  Use separate file __large_int for synonym structure LargeInt
 *
 *  Revision 1.6  1996/10/22  13:23:53  jont
 *  Remove references to toplevel
 *
 *  Revision 1.5  1996/06/04  19:51:27  io
 *  stringcvt -> string_cvt
 *
 *  Revision 1.4  1996/05/23  11:41:37  matthew
 *  Some problem with using File.loadSource
 *
 *  Revision 1.3  1996/05/21  16:04:18  matthew
 *  Updating
 *
 *  Revision 1.2  1996/05/20  10:08:51  jont
 *  maxint becomes maxInt
 *
 *  Revision 1.1  1996/05/13  13:49:42  matthew
 *  new unit
 *  Tests for word operations
 *
 *
 *)


(* Tests for 30-bit words *)

local 
open Word
val max : word = 0wx3fffffff
val maxstring = "3FFFFFFF"
val ones = "FFFFFFFF"
val t1 = wordSize = 30
in
val t2 = fromLargeWord (toLargeWord 0w0) = 0w0
val t3 = fromLargeWord (toLargeWord max) = max
val t4 = Word32.+ (toLargeWordX max,0w1) = 0w0
val t5 = (ignore(toLargeInt max); true) handle Overflow => false
val t6 = (ignore(toInt max); false) handle Overflow => true
val t7 = toLargeIntX max = ~1
val t8 = fromLargeInt (valOf LargeInt.maxInt) = max

val t9 = map (fn (a,b) => a (0w0,max) = b)
  [(orb,max),
   (xorb,max),
   (andb,0w0)]

val t10 = 0w0 = notb max

val t11 = max = ~>> (<< (0w1,0w29),0w29)
val t12 = 0w1 = >> (<< (0w1,0w29),0w29)
val t13 = 0w0 = >> (<< (0w1,0w30),0w30)
val t14 = max - 0w1 = max + max
val t15 = compare (0w0,max) = LESS
val t16 = 0w0 < max andalso max > 0w0 andalso 0w0 < 0w255

val t17 = fmt StringCvt.HEX max = maxstring
val t18 = fmt StringCvt.HEX 0w0 = "0"
val t19 = fmt StringCvt.DEC 0w0 = "0"
val t20 = valOf (fromString maxstring) = max
val t21 = (ignore(valOf (fromString ones) = max); false) handle Overflow => true
end;

(* 32 bits *)
local 
open Word32
val max : word = 0wxffffffff
val maxstring = "FFFFFFFF"
val ones = "FFFFFFFF"
in
val t1 = wordSize = 32
val t2 = fromLargeWord (toLargeWord 0w0) = 0w0
val t3 = fromLargeWord (toLargeWord max) = max
val t4 = Word32.+ (toLargeWordX max,0w1) = 0w0
val t5 = (ignore(toLargeInt max); false) handle Overflow => true
val t6 = (ignore(toInt max); false) handle Overflow => true
val t7 = toLargeIntX max = ~1

val t9 = map (fn (a,b) => a (0w0,max) = b)
  [(orb,max),
   (xorb,max),
   (andb,0w0)]

val t11 = max = ~>> (<< (0w1,0w31),0w31)
val t12 = 0w1 = >> (<< (0w1,0w31),0w31)
val t13 = 0w0 = >> (<< (0w1,0w32),0w32)
val t14 = max - 0w1 = max + max
val t15 = compare (0w0,max) = LESS
val t16 = 0w0 < max andalso max > 0w0 andalso 0w0 < 0w255

val t17 = fmt StringCvt.HEX max = maxstring
val t18 = fmt StringCvt.HEX 0w0 = "0"
val t19 = fmt StringCvt.DEC 0w0 = "0"
val t20 = valOf (fromString maxstring) = max
val t21 = valOf (fromString ones) = max
end;

(* 8 bit words *)
local 
open Word8
val max : word = 0wxff
val maxstring = "FF"
val ones = "FFFFFFFF"
val wwsize = Word.fromInt (wordSize)
in
val t1 = wordSize = 8
val t2 = fromLargeWord (toLargeWord 0w0) = 0w0
val t3 = fromLargeWord (toLargeWord max) = max
val t4 = Word32.+ (toLargeWordX max,0w1) = 0w0
val t5 = (ignore(toLargeInt max); true) handle Overflow => false
val t6 = toInt max = 255
val t7 = toLargeIntX max = ~1
val t8 = fromLargeInt (valOf LargeInt.maxInt) = max

val t9 = map (fn (a,b) => a (0w0,max) = b)
  [(orb,max),
   (xorb,max),
   (andb,0w0)]

val t10 = 0w0 = notb max

val t11 = max = ~>> (<< (0w1,Word.- (wwsize,0w1)),Word.- (wwsize,0w1))
val t12 = 0w1 = >> (<< (0w1,Word.- (wwsize,0w1)),Word.- (wwsize,0w1))
val t13 = 0w0 = >> (<< (0w1,wwsize),wwsize)
val t14 = max - 0w1 = max + max
val t15 = compare (0w0,max) = LESS
val t16 = 0w0 < max andalso max > 0w0 andalso 0w0 < 0w255

val t17 = fmt StringCvt.HEX max = maxstring
val t18 = fmt StringCvt.HEX 0w0 = "0"
val t19 = fmt StringCvt.DEC 0w0 = "0"
val t20 = valOf (fromString maxstring) = max
val t21 = (ignore(valOf (fromString ones) = max); false) handle Overflow => true
end;

@


1.9
log
@[Bug #30323]
@
text
@d12 3
d58 2
a59 2
val t5 = (toLargeInt max; true) handle Overflow => false
val t6 = (toInt max; false) handle Overflow => true
d81 1
a81 1
val t21 = (valOf (fromString ones) = max; false) handle Overflow => true
d95 2
a96 2
val t5 = (toLargeInt max; false) handle Overflow => true
val t6 = (toInt max; false) handle Overflow => true
d130 1
a130 1
val t5 = (toLargeInt max; true) handle Overflow => false
d153 1
a153 1
val t21 = (valOf (fromString ones) = max; false) handle Overflow => true
@


1.8
log
@[Bug #30004]
Remove references to General.valOf.
@
text
@d12 4
a41 11
local
  val _ = Shell.Options.set(Shell.Options.ValuePrinter.maximumStrDepth, 0);
in
  val _ =
    (Shell.Build.loadSource "basis.__general";
     Shell.Build.loadSource "basis.__word";
     Shell.Build.loadSource "basis.__word8";
     Shell.Build.loadSource "basis.__word32";
     Shell.Build.loadSource "basis.__large_int";
     Shell.Build.loadSource "basis.__string_cvt" )
end ;
@


1.7
log
@[Bug #1749]
Use separate file __large_int for synonym structure LargeInt
@
text
@d12 4
d38 11
a48 6
Shell.Build.loadSource "basis.__general";
Shell.Build.loadSource "basis.__word";
Shell.Build.loadSource "basis.__word8";
Shell.Build.loadSource "basis.__word32";
Shell.Build.loadSource "basis.__large_int";
Shell.Build.loadSource "basis.__string_cvt";
d65 1
a65 1
val t8 = fromLargeInt (General.valOf LargeInt.maxInt) = max
d84 2
a85 2
val t20 = General.valOf (fromString maxstring) = max
val t21 = (General.valOf (fromString ones) = max; false) handle Overflow => true
d118 2
a119 2
val t20 = General.valOf (fromString maxstring) = max
val t21 = General.valOf (fromString ones) = max
d137 1
a137 1
val t8 = fromLargeInt (General.valOf LargeInt.maxInt) = max
d156 2
a157 2
val t20 = General.valOf (fromString maxstring) = max
val t21 = (General.valOf (fromString ones) = max; false) handle Overflow => true
@


1.6
log
@Remove references to toplevel
@
text
@d12 3
d38 1
a38 1
Shell.Build.loadSource "basis.__int32";
@


1.6.5.1
log
@branched from 1.6
@
text
@a11 3
 *  Revision 1.6  1996/10/22  13:23:53  jont
 *  Remove references to toplevel
 *
@


1.6.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a11 3
 *  Revision 1.6.5.1  1997/05/12  11:08:43  hope
 *  branched from 1.6
 *
@


1.6.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a11 3
 *  Revision 1.6.5.1  1997/05/12  11:08:43  hope
 *  branched from 1.6
 *
@


1.6.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a11 3
 *  Revision 1.6.5.1  1997/05/12  11:08:43  hope
 *  branched from 1.6
 *
@


1.6.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a11 3
 *  Revision 1.6.5.1.1.1  1997/07/28  18:50:45  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.6.4.1
log
@branched from 1.6
@
text
@a11 3
 *  Revision 1.6  1996/10/22  13:23:53  jont
 *  Remove references to toplevel
 *
@


1.6.3.1
log
@branched from 1.6
@
text
@a11 3
 *  Revision 1.6  1996/10/22  13:23:53  jont
 *  Remove references to toplevel
 *
@


1.6.3.1.1.1
log
@branched from 1.6.3.1
@
text
@a11 3
 *  Revision 1.6.3.1  1996/12/17  18:15:03  hope
 *  branched from 1.6
 *
@


1.6.2.1
log
@branched from 1.6
@
text
@a11 3
 *  Revision 1.6  1996/10/22  13:23:53  jont
 *  Remove references to toplevel
 *
@


1.6.1.1
log
@branched from 1.6
@
text
@a11 3
 *  Revision 1.6  1996/10/22  13:23:53  jont
 *  Remove references to toplevel
 *
@


1.6.1.1.1.1
log
@branched from 1.6.1.1
@
text
@a11 3
 *  Revision 1.6.1.1  1996/11/14  13:18:17  hope
 *  branched from 1.6
 *
@


1.5
log
@stringcvt -> string_cvt
@
text
@d11 4
a14 1
 * $Log: basis:words.sml,v $
d30 1
a30 1
Shell.Build.loadSource "basis.toplevel";
@


1.5.3.1
log
@branched from 1.5
@
text
@d11 1
a11 4
 * $Log: words.sml,v $
 *  Revision 1.5  1996/06/04  19:51:27  io
 *  stringcvt -> string_cvt
 *
@


1.5.2.1
log
@branched from 1.5
@
text
@d11 1
a11 4
 * $Log: words.sml,v $
 *  Revision 1.5  1996/06/04  19:51:27  io
 *  stringcvt -> string_cvt
 *
@


1.5.1.1
log
@branched from 1.5
@
text
@d11 1
a11 4
 * $Log: words.sml,v $
 *  Revision 1.5  1996/06/04  19:51:27  io
 *  stringcvt -> string_cvt
 *
@


1.4
log
@Some problem with using File.loadSource
@
text
@d12 3
d33 1
a33 1
Shell.Build.loadSource "basis.__stringcvt";
@


1.3
log
@Updating
@
text
@d12 3
d24 7
a30 7
Shell.File.loadSource "../basis/toplevel";
Shell.File.loadSource "../basis/__general";
Shell.File.loadSource "../basis/__word";
Shell.File.loadSource "../basis/__word8";
Shell.File.loadSource "../basis/__word32";
Shell.File.loadSource "../basis/__int32";
Shell.File.loadSource "../basis/__stringcvt";
@


1.2
log
@maxint becomes maxInt
@
text
@d12 3
d107 1
a107 1
val wwsize = fromInt (wordSize)
d125 2
a126 2
val t11 = max = ~>> (<< (0w1,wwsize - 0w1),wwsize - 0w1)
val t12 = 0w1 = >> (<< (0w1,wwsize - 0w1),wwsize - 0w1)
@


1.1
log
@new unit
Tests for word operations
@
text
@d12 4
d41 1
a41 1
val t8 = fromLargeInt (General.valOf LargeInt.maxint) = max
d113 1
a113 1
val t8 = fromLargeInt (General.valOf LargeInt.maxint) = max
@
