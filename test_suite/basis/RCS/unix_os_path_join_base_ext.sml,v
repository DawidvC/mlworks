head	1.3;
access;
symbols
	MLWorks_Beta_1996_06_07:1.3
	MLWorks_Beta_1996_06_06:1.3
	MLWorks_Beta_1996_06_05:1.3
	MLWorks_Beta_1996_06_03:1.3
	MLWorks_Beta_1996_05_31:1.3
	MLWorks_Beta_1996_05_30:1.3;
locks; strict;
comment	@ *  @;


1.3
date	96.05.22.13.10.35;	author stephenb;	state Exp;
branches;
next	1.2;

1.2
date	96.05.22.10.19.38;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	96.05.21.13.58.45;	author stephenb;	state Exp;
branches;
next	;


desc
@new unit
@


1.3
log
@Fix test d so that it matches the spec i.e. treats SOME "" like NONE.
@
text
@(* Copyright (c) 1996 Harlequin Ltd.

Result: OK

 *
 * Test Unix OS.Path.joinBaseExt.  All tests should return true.
 * 
 * Revision Log
 * ------------
 *
 * $Log: basis:unix_os_path_join_base_ext.sml,v $
 *  Revision 1.2  1996/05/22  10:19:38  daveb
 *  Shell.Module renamed to Shell.Build.
 *
 *  Revision 1.1  1996/05/21  13:58:45  stephenb
 *  new unit
 *
 *
 *)

Shell.Build.loadSource "basis.toplevel";
Shell.Build.loadSource "unix.__os";

open OS.Path;

val a = joinBaseExt {base = "", ext = NONE} = "";

val b = joinBaseExt {base = ".login", ext = NONE} = ".login";

val c = joinBaseExt {base = "a", ext = NONE} = "a";

val d = joinBaseExt {base = "a", ext = SOME ""} = "a";

val e = joinBaseExt {base = "a", ext = SOME "b"} = "a.b";

val f = joinBaseExt {base = "a.b", ext = SOME "c"} = "a.b.c";

val g = joinBaseExt {base = "a.b", ext = SOME "c.d"} = "a.b.c.d";

val h = joinBaseExt {base = "/a", ext = SOME "b"} = "/a.b";

val i = joinBaseExt {base = "/c/a", ext = SOME "b"} = "/c/a.b";

val j = joinBaseExt {base = "/c/a/b/", ext = SOME "d"} = "/c/a/b/.d";

val k = joinBaseExt {base = "/c/a/b", ext = SOME "foo.bar"} = "/c/a/b.foo.bar";

val l = joinBaseExt {base = "/c/a/b", ext = SOME "foo"} = "/c/a/b.foo";
@


1.2
log
@Shell.Module renamed to Shell.Build.
@
text
@d12 3
d32 1
a32 1
val d = joinBaseExt {base = "a", ext = SOME ""} = "a.";
@


1.1
log
@new unit
@
text
@d11 4
a14 1
 * $Log$
d18 2
a19 2
Shell.Module.loadSource "basis.toplevel";
Shell.Module.loadSource "unix.__os";
@
