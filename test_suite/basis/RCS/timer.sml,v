head	1.5;
access;
symbols
	MLWorks_21c0_1999_03_25:1.4
	MLWorks_20c1_1998_08_20:1.4
	MLWorks_20c0_1998_08_04:1.4
	MLWorks_20b2c2_1998_06_19:1.4
	MLWorks_20b2_Windows_1998_06_12:1.4
	MLWorks_20b1c1_1998_05_07:1.4
	MLWorks_20b0_1998_04_07:1.4
	MLWorks_20b0_1998_03_20:1.4
	MLWorks_20m2_1998_02_16:1.3
	MLWorks_20m1_1997_10_23:1.1
	MLWorks_11r1:1.1.6.1.1.1.1
	MLWorks_11c0_1997_09_09:1.1.6.1.1.1
	MLWorks_10r3:1.1.6.1.3
	MLWorks_10r2_551:1.1.6.1.2
	MLWorks_11:1.1.6.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.1.6.1
	MLWorks_20m0_1997_06_20:1.1
	MLWorks_1_0_r2c2_1997_06_14:1.1.6.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.1.6.1
	MLWorks_1_0_r2c1_1997_05_12:1.1.6
	MLWorks_BugFix_1997_04_24:1.1
	MLWorks_1_0_r2_Win32_1997_04_11:1.1
	MLWorks_1_0_r2_Unix_1997_04_04:1.1
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.1.4.1.1
	MLWorks_gui_1996_12_18:1.1.5
	MLWorks_1_0_Win32_1996_12_17:1.1.4
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.1.2.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.1.2.1
	MLWorks_1_0_Irix_1996_11_28:1.1.2.1.1
	MLWorks_1_0_Win32_1996_11_22:1.1.3
	MLWorks_1_0_Unix_1996_11_14:1.1.2
	MLWorks_Open_Beta2_1996_10_11:1.1.1;
locks; strict;
comment	@ *  @;


1.5
date	99.05.12.14.58.28;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	98.02.18.11.56.01;	author mitchell;	state Exp;
branches;
next	1.3;

1.3
date	97.11.21.10.50.17;	author daveb;	state Exp;
branches;
next	1.2;

1.2
date	97.11.19.20.06.27;	author jont;	state Exp;
branches;
next	1.1;

1.1
date	96.10.10.11.26.23;	author stephenb;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1
	1.1.4.1
	1.1.5.1
	1.1.6.1;
next	;

1.1.1.1
date	96.10.17.11.49.32;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.11.14.13.16.55;	author hope;	state Exp;
branches
	1.1.2.1.1.1;
next	;

1.1.2.1.1.1
date	96.11.28.15.27.21;	author hope;	state Exp;
branches;
next	;

1.1.3.1
date	96.11.22.18.34.43;	author hope;	state Exp;
branches;
next	;

1.1.4.1
date	96.12.17.18.13.40;	author hope;	state Exp;
branches
	1.1.4.1.1.1;
next	;

1.1.4.1.1.1
date	97.02.24.12.06.28;	author hope;	state Exp;
branches;
next	;

1.1.5.1
date	96.12.18.10.08.37;	author hope;	state Exp;
branches;
next	;

1.1.6.1
date	97.05.12.11.07.09;	author hope;	state Exp;
branches
	1.1.6.1.1.1
	1.1.6.1.2.1
	1.1.6.1.3.1;
next	;

1.1.6.1.1.1
date	97.07.28.18.50.59;	author daveb;	state Exp;
branches
	1.1.6.1.1.1.1.1;
next	;

1.1.6.1.1.1.1.1
date	97.10.07.12.15.40;	author jkbrook;	state Exp;
branches;
next	;

1.1.6.1.2.1
date	97.09.08.17.42.43;	author daveb;	state Exp;
branches;
next	;

1.1.6.1.3.1
date	97.09.09.14.42.10;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
@


1.5
log
@[Bug #190554]
The signature has changed.
@
text
@(* Copyright (c) 1996 Harlequin Ltd.

Result: OK

 *
 * Test Timer.  Each test result should be true.  Currently only does
 * minimal testing.
 *
 * Revision Log
 * ------------
 *
 * $Log: timer.sml,v $
 *  Revision 1.4  1998/02/18  11:56:01  mitchell
 *  [Bug #30349]
 *  Fix test to avoid non-unit sequence warning
 *
 *  Revision 1.3  1997/11/21  10:50:17  daveb
 *  [Bug #30323]
 *
 *  Revision 1.2  1997/11/19  20:06:27  jont
 *  [Bug #30085]
 *  Add tests for totalRealTimer and totalCPUTimer
 *
 *  Revision 1.1  1996/10/10  11:26:23  stephenb
 *  new unit
 *
 *)


local 
  fun fib n = if n<2 then 1 else fib(n-1) + fib(n-2);

  val totalRealTime = Timer.startRealTimer()
  val totalCPUTime  = Timer.startCPUTimer()
  val totReal = Timer.totalRealTimer()
  val totCPU = Timer.totalCPUTimer()
in

  val a = Time.<= (Timer.checkRealTimer totalRealTime, Timer.checkRealTimer totalRealTime);

  val b = Time.< (((Timer.checkRealTimer totalRealTime) before (ignore(fib 25); ())), Timer.checkRealTimer totalRealTime);

  val c = Time.<= (Timer.checkRealTimer totReal, Timer.checkRealTimer totReal);

  val d = Time.<= (Timer.checkRealTimer totalRealTime, Timer.checkRealTimer totReal);

  val e = Time.<= (Timer.checkGCTime totalCPUTime, Timer.checkGCTime totalCPUTime);
 
  val f = Time.<= (Timer.checkGCTime totCPU, Timer.checkGCTime totCPU);

  val g = Time.<= (Timer.checkGCTime totalCPUTime, Timer.checkGCTime totCPU);

  local
    val op <= = fn ({usr=usr1, sys=sys1}, {usr=usr2, sys=sys2})
	=> Time.<= (usr1, usr2) andalso Time.<= (sys1, sys2);

    fun cput1 < cput2 = (cput1 <= cput2) andalso (cput1 <> cput2);

  in

    val h = (Timer.checkCPUTimer totalCPUTime) <= (Timer.checkCPUTimer totalCPUTime);

    val i = ((Timer.checkCPUTimer totalCPUTime) before (ignore(fib 25); ())) < (Timer.checkCPUTimer totalCPUTime);
  
    val j= (Timer.checkCPUTimer totCPU) <= (Timer.checkCPUTimer totCPU);

    val k = (Timer.checkCPUTimer totalCPUTime) <= (Timer.checkCPUTimer totCPU);

    local
      val ctmr = Timer.startCPUTimer ()

    in
      val l = (Timer.checkCPUTimer ctmr) <= (Timer.checkCPUTimer ctmr);
  
      val m = ((Timer.checkCPUTimer ctmr) before (ignore(fib 25); ())) < (Timer.checkCPUTimer ctmr);

    end

  end

end
@


1.4
log
@[Bug #30349]
Fix test to avoid non-unit sequence warning
@
text
@d13 4
d47 6
d54 2
a55 2
    val op <= = fn ({usr=usr1, sys=sys1, gc=gc1}, {usr=usr2, sys=sys2, gc=gc2})
	=> Time.<= (usr1, usr2) andalso Time.<= (sys1, sys2) andalso Time.<= (gc1, gc1);
d61 1
a61 1
    val e = (Timer.checkCPUTimer totalCPUTime) <= (Timer.checkCPUTimer totalCPUTime);
d63 1
a63 1
    val f = ((Timer.checkCPUTimer totalCPUTime) before (ignore(fib 25); ())) < (Timer.checkCPUTimer totalCPUTime);
d65 1
a65 1
    val g = (Timer.checkCPUTimer totCPU) <= (Timer.checkCPUTimer totCPU);
d67 1
a67 1
    val h = (Timer.checkCPUTimer totalCPUTime) <= (Timer.checkCPUTimer totCPU);
d73 1
a73 1
      val i = (Timer.checkCPUTimer ctmr) <= (Timer.checkCPUTimer ctmr);
d75 1
a75 1
      val j = ((Timer.checkCPUTimer ctmr) before (ignore(fib 25); ())) < (Timer.checkCPUTimer ctmr);
@


1.3
log
@[Bug #30323]
@
text
@d13 3
d37 1
a37 1
  val b = Time.< (((Timer.checkRealTimer totalRealTime) before (fib 25; ())), Timer.checkRealTimer totalRealTime);
d53 1
a53 1
    val f = ((Timer.checkCPUTimer totalCPUTime) before (fib 25; ())) < (Timer.checkCPUTimer totalCPUTime);
d65 1
a65 1
      val j = ((Timer.checkCPUTimer ctmr) before (fib 25; ())) < (Timer.checkCPUTimer ctmr);
@


1.2
log
@[Bug #30085]
Add tests for totalRealTimer and totalCPUTimer
@
text
@d13 4
a20 4

Shell.Options.set (Shell.Options.ValuePrinter.maximumStrDepth,0);
Shell.Build.loadSource "system.__time";
Shell.Build.loadSource "basis.__timer";
@


1.1
log
@new unit
@
text
@d12 4
a15 1
 * $Log$
d18 1
d26 4
a29 3
  val totalRealTime = Timer.startRealTimer ();
  val totalCPUTime  = Timer.startCPUTimer ();

d36 3
d48 1
a48 1
    val c = (Timer.checkCPUTimer totalCPUTime) <= (Timer.checkCPUTimer totalCPUTime);
d50 1
a50 1
    val d = ((Timer.checkCPUTimer totalCPUTime) before (fib 25; ())) < (Timer.checkCPUTimer totalCPUTime);
d52 3
d57 1
a57 1
      val ctmr = Timer.startCPUTimer ();
d60 1
a60 1
      val d = (Timer.checkCPUTimer ctmr) <= (Timer.checkCPUTimer ctmr);
d62 1
a62 1
      val e = ((Timer.checkCPUTimer ctmr) before (fib 25; ())) < (Timer.checkCPUTimer ctmr);
@


1.1.6.1
log
@branched from 1.1
@
text
@d12 1
a12 4
 * $Log: timer.sml,v $
 *  Revision 1.1  1996/10/10  11:26:23  stephenb
 *  new unit
 *
@


1.1.6.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a12 3
 *  Revision 1.1.6.1  1997/05/12  11:07:09  hope
 *  branched from 1.1
 *
@


1.1.6.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a12 3
 *  Revision 1.1.6.1  1997/05/12  11:07:09  hope
 *  branched from 1.1
 *
@


1.1.6.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a12 3
 *  Revision 1.1.6.1  1997/05/12  11:07:09  hope
 *  branched from 1.1
 *
@


1.1.6.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a12 3
 *  Revision 1.1.6.1.1.1  1997/07/28  18:50:59  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.1.5.1
log
@branched from 1.1
@
text
@d12 1
a12 4
 * $Log: timer.sml,v $
 *  Revision 1.1  1996/10/10  11:26:23  stephenb
 *  new unit
 *
@


1.1.4.1
log
@branched from 1.1
@
text
@d12 1
a12 4
 * $Log: timer.sml,v $
 *  Revision 1.1  1996/10/10  11:26:23  stephenb
 *  new unit
 *
@


1.1.4.1.1.1
log
@branched from 1.1.4.1
@
text
@a12 3
 *  Revision 1.1.4.1  1996/12/17  18:13:40  hope
 *  branched from 1.1
 *
@


1.1.3.1
log
@branched from 1.1
@
text
@d12 1
a12 4
 * $Log: timer.sml,v $
 *  Revision 1.1  1996/10/10  11:26:23  stephenb
 *  new unit
 *
@


1.1.2.1
log
@branched from 1.1
@
text
@d12 1
a12 4
 * $Log: timer.sml,v $
 *  Revision 1.1  1996/10/10  11:26:23  stephenb
 *  new unit
 *
@


1.1.2.1.1.1
log
@branched from 1.1.2.1
@
text
@a12 3
 *  Revision 1.1.2.1  1996/11/14  13:16:55  hope
 *  branched from 1.1
 *
@


1.1.1.1
log
@branched from 1.1
@
text
@d12 1
a12 4
 * $Log: timer.sml,v $
 *  Revision 1.1  1996/10/10  11:26:23  stephenb
 *  new unit
 *
@
