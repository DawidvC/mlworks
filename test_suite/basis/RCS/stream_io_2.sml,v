head	1.6;
access;
symbols
	MLWorks_21c0_1999_03_25:1.6
	MLWorks_20c1_1998_08_20:1.6
	MLWorks_20c0_1998_08_04:1.6
	MLWorks_20b2c2_1998_06_19:1.6
	MLWorks_20b2_Windows_1998_06_12:1.6
	MLWorks_20b1c1_1998_05_07:1.6
	MLWorks_20b0_1998_04_07:1.6
	MLWorks_20b0_1998_03_20:1.6
	MLWorks_20m2_1998_02_16:1.5
	MLWorks_20m1_1997_10_23:1.4
	MLWorks_11r1:1.4.1.1.1.1.1
	MLWorks_11c0_1997_09_09:1.4.1.1.1.1
	MLWorks_10r3:1.4.1.1.3
	MLWorks_10r2_551:1.4.1.1.2
	MLWorks_11:1.4.1.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.1.1
	MLWorks_20m0_1997_06_20:1.4
	MLWorks_1_0_r2c2_1997_06_14:1.4.1.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.1.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.1
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.2.5.1.1
	MLWorks_gui_1996_12_18:1.2.6
	MLWorks_1_0_Win32_1996_12_17:1.2.5
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.2.3.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.2.3.1
	MLWorks_1_0_Irix_1996_11_28:1.2.3.1.1
	MLWorks_1_0_Win32_1996_11_22:1.2.4
	MLWorks_1_0_Unix_1996_11_14:1.2.3
	MLWorks_Open_Beta2_1996_10_11:1.2.2
	MLWorks_License_dev:1.2.1
	MLWorks_1_open_beta_1996_09_13:1.1.1;
locks; strict;
comment	@ *  @;


1.6
date	98.02.18.11.56.01;	author mitchell;	state Exp;
branches;
next	1.5;

1.5
date	97.11.21.10.48.55;	author daveb;	state Exp;
branches;
next	1.4;

1.4
date	97.04.01.16.46.29;	author jont;	state Exp;
branches
	1.4.1.1;
next	1.3;

1.3
date	97.03.26.17.00.26;	author jont;	state Exp;
branches;
next	1.2;

1.2
date	96.09.25.09.45.36;	author andreww;	state Exp;
branches
	1.2.1.1
	1.2.2.1
	1.2.3.1
	1.2.4.1
	1.2.5.1
	1.2.6.1;
next	1.1;

1.1
date	96.08.23.09.20.26;	author andreww;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.13.11.37.57;	author hope;	state Exp;
branches;
next	;

1.2.1.1
date	96.10.07.16.29.18;	author hope;	state Exp;
branches;
next	;

1.2.2.1
date	96.10.17.11.50.05;	author hope;	state Exp;
branches;
next	;

1.2.3.1
date	96.11.14.13.17.28;	author hope;	state Exp;
branches
	1.2.3.1.1.1;
next	;

1.2.3.1.1.1
date	96.11.28.15.27.57;	author hope;	state Exp;
branches;
next	;

1.2.4.1
date	96.11.22.18.35.16;	author hope;	state Exp;
branches;
next	;

1.2.5.1
date	96.12.17.18.14.14;	author hope;	state Exp;
branches
	1.2.5.1.1.1;
next	;

1.2.5.1.1.1
date	97.02.24.12.07.08;	author hope;	state Exp;
branches;
next	;

1.2.6.1
date	96.12.18.10.09.13;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	97.05.12.11.07.46;	author hope;	state Exp;
branches
	1.4.1.1.1.1
	1.4.1.1.2.1
	1.4.1.1.3.1;
next	;

1.4.1.1.1.1
date	97.07.28.18.50.51;	author daveb;	state Exp;
branches
	1.4.1.1.1.1.1.1;
next	;

1.4.1.1.1.1.1.1
date	97.10.07.12.14.44;	author jkbrook;	state Exp;
branches;
next	;

1.4.1.1.2.1
date	97.09.08.17.42.36;	author daveb;	state Exp;
branches;
next	;

1.4.1.1.3.1
date	97.09.09.14.42.02;	author daveb;	state Exp;
branches;
next	;


desc
@new unit
[Bug #1566]
Tests that streamIO close actually closes the primitive IO device
associated with terminated or truncated streams.
@


1.6
log
@[Bug #30349]
Fix test to avoid non-unit sequence warning
@
text
@(*  Test to show that closeIn and closeOut close system resources
 *  on terminated and truncated streams.

Result: OK

 * $Log: stream_io_2.sml,v $
 *  Revision 1.5  1997/11/21  10:48:55  daveb
 *  [Bug #30323]
 *
 *  Revision 1.4  1997/04/01  16:46:29  jont
 *  Modify to stop displaying syserror type
 *
 *  Revision 1.3  1997/03/26  17:00:26  jont
 *  [Bug #0]
 *  Revise so stream chunkSize (which is system dependent) doesn't get into the answer
 *
 *  Revision 1.2  1996/09/25  09:45:36  andreww
 *  When we moved our test suite to run on Solaris rather than on SunOS
 *  it meant that the various "test succeeded" messages were being
 *  printed out at different places on the output file on different
 *  machines.  Therefore this change is simply not to print out the
 *  message, just to pass the "test succeeded" message as a string.
 *
 *  Revision 1.1  1996/08/23  09:20:26  andreww
 *  new unit
 *  [Bug #1566]
 *  Tests that streamIO close actually closes the primitive IO device
 *  associated with terminated or truncated streams.
 *
 *
 *
 * Copyright (c) 1996 Harlequin Ltd.
 *
 *)


fun reportOK true = "test succeeded."
  | reportOK false = "test failed.";

        (* check that output devices connected to terminated streams
         * are closed
         *)

local
  val file = TextIO.openOut "foo";
  val _ = TextIO.outputSubstr (file, Substring.all "abc");
  val stream = TextIO.getOutstream file;
  val (write, close) = case TextIO.StreamIO.getWriter stream of
    (TextPrimIO.WR {writeVec= SOME write, close, ...}, _) => (write, close)
  | _ => raise Match
  val _ = TextIO.StreamIO.closeOut stream;
in
  val ans1 = reportOK((ignore(write {buf= "def", i=0, sz=NONE}); 
		      close(); false) handle OS.SysErr _ => true);
end

local
  (* check that input devices connected to truncated streams
   * are closed.
   *)

  val file = TextIO.openIn "foo";
  val (read, close) = case TextIO.StreamIO.getReader(TextIO.getInstream file) of
    (TextPrimIO.RD{readVec=SOME read, close,...},_) => (read, close)
  | _ => raise Match
  val _ = TextIO.closeIn file;
in
  val ans2 = reportOK((ignore(read 1); close(); false) handle OS.SysErr _ => true);
end

        (* now remove the file "foo" *)

val _ = OS.FileSys.remove "foo";
@


1.5
log
@[Bug #30323]
@
text
@d7 3
d53 1
a53 1
  val ans1 = reportOK((write {buf= "def", i=0, sz=NONE}; 
d68 1
a68 1
  val ans2 = reportOK((read 1; close(); false) handle OS.SysErr _ => true);
@


1.4
log
@Modify to stop displaying syserror type
@
text
@d7 3
a32 10

local
  val _ = Shell.Options.set(Shell.Options.ValuePrinter.maximumStrDepth, 0);
in
  val _ =
    (Shell.Build.loadSource "system.__os";
     Shell.Build.loadSource "basis.__text_io";
     Shell.Build.loadSource "basis.__text_prim_io";
     Shell.Build.loadSource "basis.__substring")
end;
@


1.4.1.1
log
@branched from 1.4
@
text
@a6 3
 *  Revision 1.4  1997/04/01  16:46:29  jont
 *  Modify to stop displaying syserror type
 *
@


1.4.1.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a6 3
 *  Revision 1.4.1.1  1997/05/12  11:07:46  hope
 *  branched from 1.4
 *
@


1.4.1.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a6 3
 *  Revision 1.4.1.1  1997/05/12  11:07:46  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a6 3
 *  Revision 1.4.1.1  1997/05/12  11:07:46  hope
 *  branched from 1.4
 *
@


1.4.1.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a6 3
 *  Revision 1.4.1.1.1.1  1997/07/28  18:50:51  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.3
log
@[Bug #0]
Revise so stream chunkSize (which is system dependent) doesn't get into the answer
@
text
@d7 4
d31 9
a39 4
Shell.Build.loadSource "system.__os";
Shell.Build.loadSource "basis.__text_io";
Shell.Build.loadSource "basis.__text_prim_io";
Shell.Build.loadSource "basis.__substring";
@


1.2
log
@When we moved our test suite to run on Solaris rather than on SunOS
it meant that the various "test succeeded" messages were being
printed out at different places on the output file on different
machines.  Therefore this change is simply not to print out the
message, just to pass the "test succeeded" message as a string.
@
text
@d7 7
d39 26
a64 19
val file = TextIO.openOut "foo";
val _ = TextIO.outputSubstr (file, Substring.all "abc");
val stream = TextIO.getOutstream file;
val (TextPrimIO.WR {writeVec= SOME write, close, ...}, _) 
                                     = TextIO.StreamIO.getWriter stream;
val _ = TextIO.StreamIO.closeOut stream;
val ans = reportOK((write {buf= "def", i=0, sz=NONE}; 
           close(); false) handle OS.SysErr _ => true);

        (* check that input devices connected to truncated streams
         * are closed.
         *)

val file = TextIO.openIn "foo";
val (TextPrimIO.RD{readVec=SOME read, close,...},_)
       = TextIO.StreamIO.getReader(TextIO.getInstream file);
val _ = TextIO.closeIn file;
val ans = reportOK((read 1; close(); false) handle OS.SysErr _ => true);

a68 4




@


1.2.6.1
log
@branched from 1.2
@
text
@a6 7
 *  Revision 1.2  1996/09/25  09:45:36  andreww
 *  When we moved our test suite to run on Solaris rather than on SunOS
 *  it meant that the various "test succeeded" messages were being
 *  printed out at different places on the output file on different
 *  machines.  Therefore this change is simply not to print out the
 *  message, just to pass the "test succeeded" message as a string.
 *
@


1.2.5.1
log
@branched from 1.2
@
text
@a6 7
 *  Revision 1.2  1996/09/25  09:45:36  andreww
 *  When we moved our test suite to run on Solaris rather than on SunOS
 *  it meant that the various "test succeeded" messages were being
 *  printed out at different places on the output file on different
 *  machines.  Therefore this change is simply not to print out the
 *  message, just to pass the "test succeeded" message as a string.
 *
@


1.2.5.1.1.1
log
@branched from 1.2.5.1
@
text
@a6 3
 *  Revision 1.2.5.1  1996/12/17  18:14:14  hope
 *  branched from 1.2
 *
@


1.2.4.1
log
@branched from 1.2
@
text
@a6 7
 *  Revision 1.2  1996/09/25  09:45:36  andreww
 *  When we moved our test suite to run on Solaris rather than on SunOS
 *  it meant that the various "test succeeded" messages were being
 *  printed out at different places on the output file on different
 *  machines.  Therefore this change is simply not to print out the
 *  message, just to pass the "test succeeded" message as a string.
 *
@


1.2.3.1
log
@branched from 1.2
@
text
@a6 7
 *  Revision 1.2  1996/09/25  09:45:36  andreww
 *  When we moved our test suite to run on Solaris rather than on SunOS
 *  it meant that the various "test succeeded" messages were being
 *  printed out at different places on the output file on different
 *  machines.  Therefore this change is simply not to print out the
 *  message, just to pass the "test succeeded" message as a string.
 *
@


1.2.3.1.1.1
log
@branched from 1.2.3.1
@
text
@a6 3
 *  Revision 1.2.3.1  1996/11/14  13:17:28  hope
 *  branched from 1.2
 *
@


1.2.2.1
log
@branched from 1.2
@
text
@a6 7
 *  Revision 1.2  1996/09/25  09:45:36  andreww
 *  When we moved our test suite to run on Solaris rather than on SunOS
 *  it meant that the various "test succeeded" messages were being
 *  printed out at different places on the output file on different
 *  machines.  Therefore this change is simply not to print out the
 *  message, just to pass the "test succeeded" message as a string.
 *
@


1.2.1.1
log
@branched from 1.2
@
text
@a6 7
 *  Revision 1.2  1996/09/25  09:45:36  andreww
 *  When we moved our test suite to run on Solaris rather than on SunOS
 *  it meant that the various "test succeeded" messages were being
 *  printed out at different places on the output file on different
 *  machines.  Therefore this change is simply not to print out the
 *  message, just to pass the "test succeeded" message as a string.
 *
@


1.1
log
@new unit
[Bug #1566]
Tests that streamIO close actually closes the primitive IO device
associated with terminated or truncated streams.
@
text
@d6 7
a12 1
 * $Log:,v$
d25 2
a26 2
fun reportOK true = print "\n\ntest succeeded.\n\n"
  | reportOK false = print "\n\ntest failed.\n\n";
d55 3
@


1.1.1.1
log
@branched from 1.1
@
text
@d6 1
a6 7
 * $Log: stream_io_2.sml,v $
 *  Revision 1.1  1996/08/23  09:20:26  andreww
 *  new unit
 *  [Bug #1566]
 *  Tests that streamIO close actually closes the primitive IO device
 *  associated with terminated or truncated streams.
 *
@
