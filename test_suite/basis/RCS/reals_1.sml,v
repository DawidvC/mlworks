head	1.6;
access;
symbols
	MLWorks_21c0_1999_03_25:1.6
	MLWorks_20c1_1998_08_20:1.6
	MLWorks_20c0_1998_08_04:1.6
	MLWorks_20b2c2_1998_06_19:1.6
	MLWorks_20b2_Windows_1998_06_12:1.6
	MLWorks_20b1c1_1998_05_07:1.6
	MLWorks_20b0_1998_04_07:1.6
	MLWorks_20b0_1998_03_20:1.6
	MLWorks_20m2_1998_02_16:1.6
	MLWorks_20m1_1997_10_23:1.5
	MLWorks_11r1:1.4.5.1.1.1.1
	MLWorks_11c0_1997_09_09:1.4.5.1.1.1
	MLWorks_10r3:1.4.5.1.3
	MLWorks_10r2_551:1.4.5.1.2
	MLWorks_11:1.4.5.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.4.5.1
	MLWorks_20m0_1997_06_20:1.5
	MLWorks_1_0_r2c2_1997_06_14:1.4.5.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.4.5.1
	MLWorks_1_0_r2c1_1997_05_12:1.4.5
	MLWorks_BugFix_1997_04_24:1.4
	MLWorks_1_0_r2_Win32_1997_04_11:1.4
	MLWorks_1_0_r2_Unix_1997_04_04:1.4
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.4.3.1.1
	MLWorks_gui_1996_12_18:1.4.4
	MLWorks_1_0_Win32_1996_12_17:1.4.3
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.4.1.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.4.1.1
	MLWorks_1_0_Irix_1996_11_28:1.4.1.1.1
	MLWorks_1_0_Win32_1996_11_22:1.4.2
	MLWorks_1_0_Unix_1996_11_14:1.4.1
	MLWorks_Open_Beta2_1996_10_11:1.2.1
	MLWorks_License_dev:1.1.2
	MLWorks_1_open_beta_1996_09_13:1.1.1
	MLWorks_Open_Beta_1996_08_22:1.1;
locks; strict;
comment	@ *  @;


1.6
date	97.11.21.15.01.38;	author daveb;	state Exp;
branches;
next	1.5;

1.5
date	97.05.28.15.57.11;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	96.11.06.13.35.38;	author andreww;	state Exp;
branches
	1.4.1.1
	1.4.2.1
	1.4.3.1
	1.4.4.1
	1.4.5.1;
next	1.3;

1.3
date	96.11.06.12.05.24;	author matthew;	state Exp;
branches;
next	1.2;

1.2
date	96.10.10.10.38.57;	author jont;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	96.08.08.15.47.24;	author andreww;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	96.09.13.11.38.16;	author hope;	state Exp;
branches;
next	;

1.1.2.1
date	96.10.07.16.29.36;	author hope;	state Exp;
branches;
next	;

1.2.1.1
date	96.10.17.11.50.20;	author hope;	state Exp;
branches;
next	;

1.4.1.1
date	96.11.14.13.17.44;	author hope;	state Exp;
branches
	1.4.1.1.1.1;
next	;

1.4.1.1.1.1
date	96.11.28.15.28.14;	author hope;	state Exp;
branches;
next	;

1.4.2.1
date	96.11.22.18.35.32;	author hope;	state Exp;
branches;
next	;

1.4.3.1
date	96.12.17.18.14.32;	author hope;	state Exp;
branches
	1.4.3.1.1.1;
next	;

1.4.3.1.1.1
date	97.02.24.12.07.27;	author hope;	state Exp;
branches;
next	;

1.4.4.1
date	96.12.18.10.09.29;	author hope;	state Exp;
branches;
next	;

1.4.5.1
date	97.05.12.11.08.06;	author hope;	state Exp;
branches
	1.4.5.1.1.1
	1.4.5.1.2.1
	1.4.5.1.3.1;
next	;

1.4.5.1.1.1
date	97.07.28.18.49.21;	author daveb;	state Exp;
branches
	1.4.5.1.1.1.1.1;
next	;

1.4.5.1.1.1.1.1
date	97.10.07.12.14.49;	author jkbrook;	state Exp;
branches;
next	;

1.4.5.1.2.1
date	97.09.08.17.41.02;	author daveb;	state Exp;
branches;
next	;

1.4.5.1.3.1
date	97.09.09.14.40.29;	author daveb;	state Exp;
branches;
next	;


desc
@new unit

Tests behaviour of Real.nextAfter.
@


1.6
log
@[Bug #30323]
@
text
@(*  ==== Testing ====
 * this tests that the Real.nextAfter function works properly. (Bug 1526)
 *
    Result: OK
 *
 *
 *  Revision Log
 *  ------------
 *  $Log: reals_1.sml,v $
 *  Revision 1.5  1997/05/28  15:57:11  matthew
 *  Updating
 *
 *  Revision 1.4  1996/11/06  13:35:38  andreww
 *  [Bug #1711]
 *  real is no longer eqtype.
 *
 *  Revision 1.3  1996/11/06  12:05:24  matthew
 *  [Bug #1728]
 *  __integer becomes __int
 *
 *  Revision 1.2  1996/10/10  10:38:57  jont
 *  Add test for rem
 *
 *  Revision 1.1  1996/08/08  15:47:24  andreww
 *  new unit
 *
 *  Tests behaviour of Real.nextAfter.
 *
 *
*)


infix 1 seq
fun e1 seq e2 = e2;
fun say s = print s
fun check b = if b then "OK" else "WRONG";
fun check' f = (if f () then "OK" else "WRONG") handle _ => "EXN";

fun range (from, to) p = 
    let open Int
    in
	(from > to) orelse (p from) andalso (range (from+1, to) p)
    end;

val nextAfter = Real.nextAfter;
val ?= = Real.?=
infix ?=

val test_1 = check(nextAfter(1.0/0.0,1.0)?=Real.posInf);
val test_2 = check(nextAfter(1.0/0.0,~1.0)?=Real.posInf);
val test_3 = check(nextAfter(~1.0/0.0,1.0)?=Real.negInf);
val test_4 = check(nextAfter(~1.0/0.0,~1.0)?=Real.negInf);

val test_5 = check(nextAfter(1.0,1.0)?=1.0);
val test_6 = check(nextAfter(1.0,2.0)>1.0);
val test_7 = check(nextAfter(1.0,0.0)<1.0);

val test_8 = check(let val first = nextAfter(1.0,0.0)
                       val second = nextAfter(first,0.0)
                    in second<first andalso first<1.0
                   end);

val test_9 = check(let val first = nextAfter(~1.0,0.0)
                       val second = nextAfter(first,0.0)
                    in second>first andalso first> ~1.0
                   end);
val test_10 = check(Real.rem(17.0,8.0) ?= 1.0)
@


1.5
log
@Updating
@
text
@d10 3
d31 2
a32 2
Shell.Options.set (Shell.Options.ValuePrinter.maximumStrDepth,0);
Shell.Build.loadSource "basis.__int";
a43 2

Shell.Build.loadSource "basis.__real";
@


1.4
log
@[Bug #1711]
real is no longer eqtype.
@
text
@d10 4
d28 1
a29 3
val output = MLWorks.IO.output
val std_out = MLWorks.IO.std_out
val flush_out = MLWorks.IO.flush_out
d32 1
a32 1
fun say s = (output(std_out, s); flush_out std_out);
@


1.4.5.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1996/11/06  13:35:38  andreww
 *  [Bug #1711]
 *  real is no longer eqtype.
 *
@


1.4.5.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@a9 3
 *  Revision 1.4.5.1  1997/05/12  11:08:06  hope
 *  branched from 1.4
 *
@


1.4.5.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@a9 3
 *  Revision 1.4.5.1  1997/05/12  11:08:06  hope
 *  branched from 1.4
 *
@


1.4.5.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@a9 3
 *  Revision 1.4.5.1  1997/05/12  11:08:06  hope
 *  branched from 1.4
 *
@


1.4.5.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@a9 3
 *  Revision 1.4.5.1.1.1  1997/07/28  18:49:21  daveb
 *  branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
 *
@


1.4.4.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1996/11/06  13:35:38  andreww
 *  [Bug #1711]
 *  real is no longer eqtype.
 *
@


1.4.3.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1996/11/06  13:35:38  andreww
 *  [Bug #1711]
 *  real is no longer eqtype.
 *
@


1.4.3.1.1.1
log
@branched from 1.4.3.1
@
text
@a9 3
 *  Revision 1.4.3.1  1996/12/17  18:14:32  hope
 *  branched from 1.4
 *
@


1.4.2.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1996/11/06  13:35:38  andreww
 *  [Bug #1711]
 *  real is no longer eqtype.
 *
@


1.4.1.1
log
@branched from 1.4
@
text
@a9 4
 *  Revision 1.4  1996/11/06  13:35:38  andreww
 *  [Bug #1711]
 *  real is no longer eqtype.
 *
@


1.4.1.1.1.1
log
@branched from 1.4.1.1
@
text
@a9 3
 *  Revision 1.4.1.1  1996/11/14  13:17:44  hope
 *  branched from 1.4
 *
@


1.3
log
@[Bug #1728]
__integer becomes __int
@
text
@d10 4
d43 2
d46 4
a49 4
val test_1 = check(nextAfter(1.0/0.0,1.0)=Real.posInf);
val test_2 = check(nextAfter(1.0/0.0,~1.0)=Real.posInf);
val test_3 = check(nextAfter(~1.0/0.0,1.0)=Real.negInf);
val test_4 = check(nextAfter(~1.0/0.0,~1.0)=Real.negInf);
d51 1
a51 1
val test_5 = check(nextAfter(1.0,1.0)=1.0);
d64 1
a64 1
val test_10 = check(Real.rem(17.0,8.0) = 1.0)
@


1.2
log
@Add test for rem
@
text
@d10 3
d20 1
a20 1
Shell.Build.loadSource "basis.__integer";
@


1.2.1.1
log
@branched from 1.2
@
text
@a9 3
 *  Revision 1.2  1996/10/10  10:38:57  jont
 *  Add test for rem
 *
@


1.1
log
@new unit

Tests behaviour of Real.nextAfter.
@
text
@d9 6
a14 1
 *  $Log:,v $
d55 1
@


1.1.2.1
log
@branched from 1.1
@
text
@d9 1
a9 6
 *  $Log: reals_1.sml,v $
 *  Revision 1.1  1996/08/08  15:47:24  andreww
 *  new unit
 *
 *  Tests behaviour of Real.nextAfter.
 *
@


1.1.1.1
log
@branched from 1.1
@
text
@d9 1
a9 6
 *  $Log: reals_1.sml,v $
 *  Revision 1.1  1996/08/08  15:47:24  andreww
 *  new unit
 *
 *  Tests behaviour of Real.nextAfter.
 *
@
