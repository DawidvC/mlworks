head	1.9;
access;
symbols
	MLWorks_21c0_1999_03_25:1.9
	MLWorks_20c1_1998_08_20:1.9
	MLWorks_20c0_1998_08_04:1.9
	MLWorks_20b2c2_1998_06_19:1.9
	MLWorks_20b2_Windows_1998_06_12:1.9
	MLWorks_20b1c1_1998_05_07:1.9
	MLWorks_20b0_1998_04_07:1.9
	MLWorks_20b0_1998_03_20:1.8
	MLWorks_20m2_1998_02_16:1.8
	MLWorks_20m1_1997_10_23:1.8
	MLWorks_11r1:1.8.8.1.1.1.1
	MLWorks_11c0_1997_09_09:1.8.8.1.1.1
	MLWorks_10r3:1.8.8.1.3
	MLWorks_10r2_551:1.8.8.1.2
	MLWorks_11:1.8.8.1.1
	MLWorks_1_0_r2c2_1997_07_28:1.8.8.1
	MLWorks_20m0_1997_06_20:1.8
	MLWorks_1_0_r2c2_1997_06_14:1.8.8.1
	MLWorks_1_0_r2c1_released_1997_05_23:1.8.8.1
	MLWorks_1_0_r2c1_1997_05_12:1.8.8
	MLWorks_BugFix_1997_04_24:1.8
	MLWorks_1_0_r2_Win32_1997_04_11:1.8
	MLWorks_1_0_r2_Unix_1997_04_04:1.8
	MLWorks_1_0_1_ULTRASPARC_1997_02_24:1.8.6.1.1
	MLWorks_gui_1996_12_18:1.8.7
	MLWorks_1_0_Win32_1996_12_17:1.8.6
	MLWorks_1_0_Irix_1996_11_28_released_1996_12_17:1.8.4.1.1.1
	MLWorks_1_0_Unix_1996_11_14_released_1996_12_17:1.8.4.1
	MLWorks_1_0_Irix_1996_11_28:1.8.4.1.1
	MLWorks_1_0_Win32_1996_11_22:1.8.5
	MLWorks_1_0_Unix_1996_11_14:1.8.4
	MLWorks_Open_Beta2_1996_10_11:1.8.3
	MLWorks_License_dev:1.8.2
	MLWorks_1_open_beta_1996_09_13:1.8.1
	MLWorks_Open_Beta_1996_08_22:1.6
	MLWorks_Beta_1996_07_02:1.6
	MLWorks_Beta_1996_06_07:1.6
	MLWorks_Beta_1996_06_06:1.6
	MLWorks_Beta_1996_06_05:1.6
	MLWorks_Beta_1996_06_03:1.6
	MLWorks_Beta_1996_05_31:1.6
	MLWorks_Beta_1996_05_30:1.6
	ML_beta_release_12/08/94:1.4
	ML_beta_release_03/08/94:1.4
	ML_revised_beta_release_25/05/94:1.4
	ML_final_beta_release_02/03/94:1.3
	mlworks-28-01-1994:1.3
	Release:1.3
	mlworks-beta-01-09-1993:1.3
	MLWorks-1-0-4-29/01/1993:1.2;
locks; strict;


1.9
date	98.03.26.15.25.29;	author jont;	state Exp;
branches;
next	1.8;

1.8
date	96.09.09.12.09.09;	author io;	state Exp;
branches
	1.8.1.1
	1.8.2.1
	1.8.3.1
	1.8.4.1
	1.8.5.1
	1.8.6.1
	1.8.7.1
	1.8.8.1;
next	1.7;

1.7
date	96.09.07.00.02.44;	author io;	state Exp;
branches;
next	1.6;

1.6
date	96.05.02.15.30.26;	author jont;	state Exp;
branches;
next	1.5;

1.5
date	94.10.26.11.34.30;	author matthew;	state Exp;
branches;
next	1.4;

1.4
date	94.04.27.13.37.10;	author jont;	state Exp;
branches;
next	1.3;

1.3
date	93.04.15.10.18.41;	author daveb;	state Exp;
branches
	1.3.1.1;
next	1.2;

1.2
date	93.01.22.16.46.03;	author daveb;	state Exp;
branches;
next	1.1;

1.1
date	93.01.06.17.04.45;	author jont;	state Exp;
branches;
next	;

1.3.1.1
date	93.04.15.10.18.41;	author jont;	state Exp;
branches;
next	;

1.8.1.1
date	96.09.13.11.40.39;	author hope;	state Exp;
branches;
next	;

1.8.2.1
date	96.10.07.16.33.39;	author hope;	state Exp;
branches;
next	;

1.8.3.1
date	96.10.17.11.52.50;	author hope;	state Exp;
branches;
next	;

1.8.4.1
date	96.11.14.13.20.25;	author hope;	state Exp;
branches
	1.8.4.1.1.1;
next	;

1.8.4.1.1.1
date	96.11.28.15.31.13;	author hope;	state Exp;
branches;
next	;

1.8.5.1
date	96.11.22.18.38.12;	author hope;	state Exp;
branches;
next	;

1.8.6.1
date	96.12.17.18.17.11;	author hope;	state Exp;
branches
	1.8.6.1.1.1;
next	;

1.8.6.1.1.1
date	97.02.24.12.11.26;	author hope;	state Exp;
branches;
next	;

1.8.7.1
date	96.12.18.10.12.21;	author hope;	state Exp;
branches;
next	;

1.8.8.1
date	97.05.12.11.11.46;	author hope;	state Exp;
branches
	1.8.8.1.1.1
	1.8.8.1.2.1
	1.8.8.1.3.1;
next	;

1.8.8.1.1.1
date	97.07.28.18.54.06;	author daveb;	state Exp;
branches
	1.8.8.1.1.1.1.1;
next	;

1.8.8.1.1.1.1.1
date	97.10.07.12.18.48;	author jkbrook;	state Exp;
branches;
next	;

1.8.8.1.2.1
date	97.09.08.17.45.58;	author daveb;	state Exp;
branches;
next	;

1.8.8.1.3.1
date	97.09.09.14.45.10;	author daveb;	state Exp;
branches;
next	;


desc
@@


1.9
log
@[Bug #30090]
Modify now we've moved to using TextIO instead of MLWorks.IO
@
text
@val s : TextIO.StreamIO.instream ref = ref(In {buffer=Buf {basePos=SOME _, data=_, emptyMeansEof=false, more=ref(NOmore), name="pervasive/close.sml"}, pos=0})
val t : TextIO.StreamIO.outstream ref = ref(Out {data=A(#B[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ..]), mode=ref(NO_BUF), name="pervasive/foo", pos=ref(0), writer=ref(NOmore)})
@


1.8
log
@remove banner
@
text
@d1 2
a2 2
val s : MLWorks.IO.instream = RIGIDIN(RIGIDINSTREAM {clear_eof=fn, close_in=fn, closed_in=fn, end_of_stream=fn, input=fn, lookahead=fn})
val t : MLWorks.IO.outstream = RIGIDOUT(RIGIDOUTSTREAM {close_out=fn, closed_out=fn, flush_out=fn, output=fn})
@


1.8.8.1
log
@branched from 1.8
@
text
@@


1.8.8.1.3.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r3
@
text
@@


1.8.8.1.2.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_10r2_551
@
text
@@


1.8.8.1.1.1
log
@branched from MLWorks_1_0_r2c1_1997_05_12 for label MLWorks_11
@
text
@@


1.8.8.1.1.1.1.1
log
@branched from MLWorks_11 for label MLWorks_11r1
@
text
@@


1.8.7.1
log
@branched from 1.8
@
text
@@


1.8.6.1
log
@branched from 1.8
@
text
@@


1.8.6.1.1.1
log
@branched from 1.8.6.1
@
text
@@


1.8.5.1
log
@branched from 1.8
@
text
@@


1.8.4.1
log
@branched from 1.8
@
text
@@


1.8.4.1.1.1
log
@branched from 1.8.4.1
@
text
@@


1.8.3.1
log
@branched from 1.8
@
text
@@


1.8.2.1
log
@branched from 1.8
@
text
@@


1.8.1.1
log
@branched from 1.8
@
text
@@


1.7
log
@updating for commercial version flyer
@
text
@a0 2
commercial version may be purchased directly from Harlequin.

@


1.6
log
@Minor alterations
@
text
@d1 2
@


1.5
log
@Updated
@
text
@d1 2
a2 2
val s : instream = RIGIDIN(RIGIDINSTREAM {clear_eof=fn, close_in=fn, closed_in=fn, end_of_stream=fn, input=fn, lookahead=fn})
val t : outstream = RIGIDOUT(RIGIDOUTSTREAM {close_out=fn, closed_out=fn, flush_out=fn, output=fn})
@


1.4
log
@Revise for new meaning of closing stdio
@
text
@d1 1
a2 1
val s : instream = RIGIDIN(RIGIDINSTREAM {clear_eof=fn, close_in=fn, closed_in=fn, end_of_stream=fn, input=fn, lookahead=fn})
@


1.3
log
@New revision.
@
text
@d1 2
a2 1
val it : unit = ()
@


1.3.1.1
log
@Fork for bug fixing
@
text
@@


1.2
log
@New version.
@
text
@d1 1
a1 1
val it : unit[t] = ()
@


1.1
log
@Initial revision
@
text
@d1 1
a1 2
MLWorks> MLWorks>> MLWorks>> MLWorks>> MLWorks:1,8: error: Attempt to apply non-function type
  Applied type:unit[t]
@
